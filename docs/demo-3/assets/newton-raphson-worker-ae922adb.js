import{u as He,a as Je,b as Ne,c as Qe,d as We,e as Ze,f as et,g as tt,h as rt,i as st,j as at,k as nt,l as it,m as ut,n as ot,o as mt,p as yt,q as lt}from"./index-357cbc86.js";He();Je();Ne();Qe();We();Ze();et();tt();rt();st();at();nt();it();ut();ot();mt();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},w={},oe={},me={},L={},ye={},le={},X={},f={},z={},ce={},be={},Y={},S={},m={},a={},r={},v={},U={},pe={},G={},de={},H={},fe={},J={},R={},x={},j={},P={},g={},Se={},N={},he={},Q={},ge={},W={},E={},V={},K={},C={},ze={},Z={},k={},O={},b={},i={},we={},ee={},Re={},te={},qe={},re={},Ae={},se={},Oe={},ae={},Ue={},ne={},ke={},D={},je={},Pe={},Ve={},p={},ve={},ie={},ue={},M={},F={},xe={},Ee={},Ke={},De={},Me={},Fe={},Te={};Object.assign(w,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:w}],methods:[],template:null},slot:5});Object.assign(oe,{...t,type:1,name:"[33:0]u8",length:33,byteSize:34,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:w}],methods:[],template:null},slot:4});Object.assign(me,{...t,type:11,name:"*const [33:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:3});Object.assign(L,{...t,type:11,name:"*const *const [33:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:2});Object.assign(ye,{...t,type:1,name:"[7:0]u8",length:7,byteSize:8,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:w}],methods:[],template:null},slot:8});Object.assign(le,{...t,type:11,name:"*const [7:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:7});Object.assign(X,{...t,type:11,name:"*const *const [7:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:6});Object.assign(f,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:f}],methods:[],template:null},slot:10});Object.assign(z,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:f}],methods:[],template:null},slot:9});Object.assign(ce,{...t,type:1,name:"[23:0]u8",length:23,byteSize:24,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:w}],methods:[],template:null},slot:13});Object.assign(be,{...t,type:11,name:"*const [23:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:12});Object.assign(Y,{...t,type:11,name:"*const *const [23:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:11});Object.assign(S,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:S}],methods:[],template:null},slot:32});Object.assign(m,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:S}],methods:[],template:null},slot:30});Object.assign(a,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:a}],methods:[],template:null},slot:74});Object.assign(r,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:a}],methods:[],template:null},slot:73});const ct=new Uint8Array([]),bt=new Uint8Array([112,243,15,0]),pt=new Uint8Array([0,0,0,0,0,0,0,0]),dt=new Uint8Array([152,243,15,0]),ft=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(v,{...t,type:2,name:"Struct0031",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:ct},slots:{0:{structure:r,memory:{array:bt},slots:{0:{structure:a,memory:{array:pt}}}},1:{structure:r,memory:{array:dt},slots:{0:{structure:a,memory:{array:ft}}}}}}},slot:56});Object.assign(U,{...t,type:11,name:"Struct0022",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:v}],methods:[],template:null},slot:55});const St=new Uint8Array([]),ht=new Uint8Array([80,250,15,0]),gt=new Uint8Array([0,0,0,0,0,64,143,64]),zt=new Uint8Array([136,250,15,0]),wt=new Uint8Array([0,0,0,0,0,64,143,64]);Object.assign(pe,{...t,type:2,name:"Struct0032",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:St},slots:{0:{structure:r,memory:{array:ht},slots:{0:{structure:a,memory:{array:gt}}}},1:{structure:r,memory:{array:zt},slots:{0:{structure:a,memory:{array:wt}}}}}}},slot:58});Object.assign(G,{...t,type:11,name:"Struct0023",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:57});const Rt=new Uint8Array([]),qt=new Uint8Array([80,250,15,0]),At=new Uint8Array([0,0,0,0,0,0,128,64]),Ot=new Uint8Array([136,250,15,0]),Ut=new Uint8Array([0,0,0,0,0,0,128,64]);Object.assign(de,{...t,type:2,name:"Struct0033",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Rt},slots:{0:{structure:r,memory:{array:qt},slots:{0:{structure:a,memory:{array:At}}}},1:{structure:r,memory:{array:Ot},slots:{0:{structure:a,memory:{array:Ut}}}}}}},slot:60});Object.assign(H,{...t,type:11,name:"Struct0024",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:de}],methods:[],template:null},slot:59});const jt=new Uint8Array([]),Pt=new Uint8Array([170,170,170,170]),s=new Uint8Array([]),Vt=new Uint8Array([170,170,170,170]),Ct=new Uint8Array([170,170,170,170]);Object.assign(fe,{...t,type:2,name:"Struct0014",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:U},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:G},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:H}],methods:[],template:{memory:{array:jt},slots:{0:{structure:U,memory:{array:Pt},slots:{0:{structure:v,memory:{array:s},address:-1431655766}}},1:{structure:G,memory:{array:Vt},slots:{0:{structure:pe,memory:{array:s},address:-1431655766}}},2:{structure:H,memory:{array:Ct},slots:{0:{structure:de,memory:{array:s},address:-1431655766}}}}}},slot:38});Object.assign(J,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:37});Object.assign(R,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:S}],methods:[],template:null},slot:31});const It=new Uint8Array([]),kt=new Uint8Array([32,243,15,0]),vt=new Uint8Array([0,0,0,0,0,0,0,0]),xt=new Uint8Array([72,243,15,0]),Et=new Uint8Array([0,0,0,0,0,0,0,0]),Kt=new Uint8Array([112,243,15,0]),Dt=new Uint8Array([0,0,0,0,0,0,0,0]),Mt=new Uint8Array([152,243,15,0]),Ft=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(x,{...t,type:2,name:"Struct0034",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:r}],methods:[],template:{memory:{array:It},slots:{0:{structure:r,memory:{array:kt},slots:{0:{structure:a,memory:{array:vt}}}},1:{structure:r,memory:{array:xt},slots:{0:{structure:a,memory:{array:Et}}}},2:{structure:r,memory:{array:Kt},slots:{0:{structure:a,memory:{array:Dt}}}},3:{structure:r,memory:{array:Mt},slots:{0:{structure:a,memory:{array:Ft}}}}}}},slot:62});Object.assign(j,{...t,type:11,name:"Struct0025",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:x}],methods:[],template:null},slot:61});const Tt=new Uint8Array([]),_t=new Uint8Array([32,243,15,0]),$t=new Uint8Array([0,0,0,0,0,0,240,63]),Bt=new Uint8Array([72,243,15,0]),Lt=new Uint8Array([0,0,0,0,0,0,240,63]),Xt=new Uint8Array([112,243,15,0]),Yt=new Uint8Array([0,0,0,0,0,0,240,63]),Gt=new Uint8Array([152,243,15,0]),Ht=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(P,{...t,type:2,name:"Struct0035",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:r}],methods:[],template:{memory:{array:Tt},slots:{0:{structure:r,memory:{array:_t},slots:{0:{structure:a,memory:{array:$t}}}},1:{structure:r,memory:{array:Bt},slots:{0:{structure:a,memory:{array:Lt}}}},2:{structure:r,memory:{array:Xt},slots:{0:{structure:a,memory:{array:Yt}}}},3:{structure:r,memory:{array:Gt},slots:{0:{structure:a,memory:{array:Ht}}}}}}},slot:64});Object.assign(g,{...t,type:11,name:"Struct0026",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:P}],methods:[],template:null},slot:63});const Jt=new Uint8Array([]),Nt=new Uint8Array([170,170,170,170]),Qt=new Uint8Array([170,170,170,170]),Wt=new Uint8Array([170,170,170,170]);Object.assign(Se,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:R},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:j},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:g},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:g}],methods:[],template:{memory:{array:Jt},slots:{0:{structure:j,memory:{array:Nt},slots:{0:{structure:x,memory:{array:s},address:-1431655766}}},1:{structure:g,memory:{array:Qt},slots:{0:{structure:P,memory:{array:s},address:-1431655766}}},2:{structure:g,memory:{array:Wt},slots:{0:{structure:P,memory:{array:s},address:-1431655766}}}}}},slot:40});Object.assign(N,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Se}],methods:[],template:null},slot:39});const Zt=new Uint8Array([]),er=new Uint8Array([96,249,15,0]),tr=new Uint8Array([0,0,0,0,0,0,0,0]),rr=new Uint8Array([168,249,15,0]),sr=new Uint8Array([0,0,0,0,0,0,0,0]),ar=new Uint8Array([0,250,15,0]),nr=new Uint8Array([154,153,153,153,153,153,233,63]),ir=new Uint8Array([120,250,15,0]),ur=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(he,{...t,type:2,name:"Struct0036",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:r}],methods:[],template:{memory:{array:Zt},slots:{0:{structure:r,memory:{array:er},slots:{0:{structure:a,memory:{array:tr}}}},1:{structure:r,memory:{array:rr},slots:{0:{structure:a,memory:{array:sr}}}},2:{structure:r,memory:{array:ar},slots:{0:{structure:a,memory:{array:nr}}}},3:{structure:r,memory:{array:ir},slots:{0:{structure:a,memory:{array:ur}}}}}}},slot:66});Object.assign(Q,{...t,type:11,name:"Struct0027",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:he}],methods:[],template:null},slot:65});const or=new Uint8Array([]),mr=new Uint8Array([170,170,170,170]),yr=new Uint8Array([170,170,170,170]),lr=new Uint8Array([170,170,170,170]);Object.assign(ge,{...t,type:2,name:"Struct0016",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:R},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:j},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:g},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:Q}],methods:[],template:{memory:{array:or},slots:{0:{structure:j,memory:{array:mr},slots:{0:{structure:x,memory:{array:s},address:-1431655766}}},1:{structure:g,memory:{array:yr},slots:{0:{structure:P,memory:{array:s},address:-1431655766}}},2:{structure:Q,memory:{array:lr},slots:{0:{structure:he,memory:{array:s},address:-1431655766}}}}}},slot:42});Object.assign(W,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ge}],methods:[],template:null},slot:41});const cr=new Uint8Array([]),br=new Uint8Array([0,241,15,0]),pr=new Uint8Array([0,0,0,0,0,0,36,192]),dr=new Uint8Array([40,241,15,0]),fr=new Uint8Array([0,0,0,0,0,0,36,192]);Object.assign(E,{...t,type:2,name:"Struct0037",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:cr},slots:{0:{structure:r,memory:{array:br},slots:{0:{structure:a,memory:{array:pr}}}},1:{structure:r,memory:{array:dr},slots:{0:{structure:a,memory:{array:fr}}}}}}},slot:68});Object.assign(V,{...t,type:11,name:"Struct0028",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:E}],methods:[],template:null},slot:67});const Sr=new Uint8Array([]),hr=new Uint8Array([0,241,15,0]),gr=new Uint8Array([0,0,0,0,0,0,36,64]),zr=new Uint8Array([40,241,15,0]),wr=new Uint8Array([0,0,0,0,0,0,36,64]);Object.assign(K,{...t,type:2,name:"Struct0038",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Sr},slots:{0:{structure:r,memory:{array:hr},slots:{0:{structure:a,memory:{array:gr}}}},1:{structure:r,memory:{array:zr},slots:{0:{structure:a,memory:{array:wr}}}}}}},slot:70});Object.assign(C,{...t,type:11,name:"Struct0029",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:K}],methods:[],template:null},slot:69});const Rr=new Uint8Array([]),qr=new Uint8Array([112,243,15,0]),Ar=new Uint8Array([0,0,0,0,0,0,20,192]),Or=new Uint8Array([152,243,15,0]),Ur=new Uint8Array([0,0,0,0,0,0,20,64]);Object.assign(ze,{...t,type:2,name:"Struct0039",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Rr},slots:{0:{structure:r,memory:{array:qr},slots:{0:{structure:a,memory:{array:Ar}}}},1:{structure:r,memory:{array:Or},slots:{0:{structure:a,memory:{array:Ur}}}}}}},slot:72});Object.assign(Z,{...t,type:11,name:"Struct0030",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ze}],methods:[],template:null},slot:71});const jr=new Uint8Array([]),Pr=new Uint8Array([170,170,170,170]),Vr=new Uint8Array([170,170,170,170]),Cr=new Uint8Array([170,170,170,170]);Object.assign(k,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:V},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:C},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:Z}],methods:[],template:{memory:{array:jr},slots:{0:{structure:V,memory:{array:Pr},slots:{0:{structure:E,memory:{array:s},address:-1431655766}}},1:{structure:C,memory:{array:Vr},slots:{0:{structure:K,memory:{array:s},address:-1431655766}}},2:{structure:Z,memory:{array:Cr},slots:{0:{structure:ze,memory:{array:s},address:-1431655766}}}}}},slot:44});Object.assign(O,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:k}],methods:[],template:null},slot:43});const Ir=new Uint8Array([]),kr=new Uint8Array([170,170,170,170]),vr=new Uint8Array([170,170,170,170]),xr=new Uint8Array([170,170,170,170]);Object.assign(b,{...t,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:V},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:C},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:U}],methods:[],template:{memory:{array:Ir},slots:{0:{structure:V,memory:{array:kr},slots:{0:{structure:E,memory:{array:s},address:-1431655766}}},1:{structure:C,memory:{array:vr},slots:{0:{structure:K,memory:{array:s},address:-1431655766}}},2:{structure:U,memory:{array:xr},slots:{0:{structure:v,memory:{array:s},address:-1431655766}}}}}},slot:46});Object.assign(i,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:b}],methods:[],template:null},slot:45});const Er=new Uint8Array([]),Kr=new Uint8Array([128,250,15,0]),Dr=new Uint8Array([0,0,0,0,0,0,240,63]),Mr=new Uint8Array([216,247,15,0]),Fr=new Uint8Array([0,0,0,0,0,0,36,64]),Tr=new Uint8Array([184,247,15,0]),_r=new Uint8Array([0,0,0,0,0,0,8,64]);Object.assign(we,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:S},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:Er},slots:{0:{structure:r,memory:{array:Kr},slots:{0:{structure:a,memory:{array:Dr}}}},1:{structure:r,memory:{array:Mr},slots:{0:{structure:a,memory:{array:Fr}}}},2:{structure:r,memory:{array:Tr},slots:{0:{structure:a,memory:{array:_r}}}}}}},slot:48});Object.assign(ee,{...t,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:we}],methods:[],template:null},slot:47});const $r=new Uint8Array([]),Br=new Uint8Array([128,250,15,0]),Lr=new Uint8Array([0,0,0,0,0,0,240,63]),Xr=new Uint8Array([216,247,15,0]),Yr=new Uint8Array([0,0,0,0,0,0,89,64]),Gr=new Uint8Array([184,247,15,0]),Hr=new Uint8Array([0,0,0,0,0,0,57,64]);Object.assign(Re,{...t,type:2,name:"Struct0020",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:S},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:$r},slots:{0:{structure:r,memory:{array:Br},slots:{0:{structure:a,memory:{array:Lr}}}},1:{structure:r,memory:{array:Xr},slots:{0:{structure:a,memory:{array:Yr}}}},2:{structure:r,memory:{array:Gr},slots:{0:{structure:a,memory:{array:Hr}}}}}}},slot:50});Object.assign(te,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Re}],methods:[],template:null},slot:49});const Jr=new Uint8Array([]),Nr=new Uint8Array([170,170,170,170]),Qr=new Uint8Array([170,170,170,170]),Wr=new Uint8Array([170,170,170,170]),Zr=new Uint8Array([170,170,170,170]),es=new Uint8Array([170,170,170,170]),ts=new Uint8Array([170,170,170,170]),rs=new Uint8Array([170,170,170,170]),ss=new Uint8Array([170,170,170,170]),as=new Uint8Array([170,170,170,170]),ns=new Uint8Array([170,170,170,170]),is=new Uint8Array([170,170,170,170]),us=new Uint8Array([170,170,170,170]),os=new Uint8Array([170,170,170,170]),ms=new Uint8Array([170,170,170,170]),ys=new Uint8Array([170,170,170,170]);Object.assign(qe,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"size",structure:J},{...e,type:8,isRequired:!1,slot:1,name:"colorStart",structure:N},{...e,type:8,isRequired:!1,slot:2,name:"colorEnd",structure:W},{...e,type:8,isRequired:!1,slot:3,name:"rangeX",structure:O},{...e,type:8,isRequired:!1,slot:4,name:"rangeY",structure:O},{...e,type:8,isRequired:!1,slot:5,name:"c0",structure:i},{...e,type:8,isRequired:!1,slot:6,name:"c1",structure:i},{...e,type:8,isRequired:!1,slot:7,name:"c2",structure:i},{...e,type:8,isRequired:!1,slot:8,name:"c3",structure:i},{...e,type:8,isRequired:!1,slot:9,name:"c4",structure:i},{...e,type:8,isRequired:!1,slot:10,name:"c5",structure:i},{...e,type:8,isRequired:!1,slot:11,name:"c6",structure:i},{...e,type:8,isRequired:!1,slot:12,name:"c7",structure:i},{...e,type:8,isRequired:!1,slot:13,name:"toleranceInversePower",structure:ee},{...e,type:8,isRequired:!1,slot:14,name:"iterations",structure:te}],methods:[],template:{memory:{array:Jr},slots:{0:{structure:J,memory:{array:Nr},slots:{0:{structure:fe,memory:{array:s},address:-1431655766}}},1:{structure:N,memory:{array:Qr},slots:{0:{structure:Se,memory:{array:s},address:-1431655766}}},2:{structure:W,memory:{array:Wr},slots:{0:{structure:ge,memory:{array:s},address:-1431655766}}},3:{structure:O,memory:{array:Zr},slots:{0:{structure:k,memory:{array:s},address:-1431655766}}},4:{structure:O,memory:{array:es},slots:{0:{structure:k,memory:{array:s},address:-1431655766}}},5:{structure:i,memory:{array:ts},slots:{0:{structure:b,memory:{array:s},address:-1431655766}}},6:{structure:i,memory:{array:rs},slots:{0:{structure:b,memory:{array:s},address:-1431655766}}},7:{structure:i,memory:{array:ss},slots:{0:{structure:b,memory:{array:s},address:-1431655766}}},8:{structure:i,memory:{array:as},slots:{0:{structure:b,memory:{array:s},address:-1431655766}}},9:{structure:i,memory:{array:ns},slots:{0:{structure:b,memory:{array:s},address:-1431655766}}},10:{structure:i,memory:{array:is},slots:{0:{structure:b,memory:{array:s},address:-1431655766}}},11:{structure:i,memory:{array:us},slots:{0:{structure:b,memory:{array:s},address:-1431655766}}},12:{structure:i,memory:{array:os},slots:{0:{structure:b,memory:{array:s},address:-1431655766}}},13:{structure:ee,memory:{array:ms},slots:{0:{structure:we,memory:{array:s},address:-1431655766}}},14:{structure:te,memory:{array:ys},slots:{0:{structure:Re,memory:{array:s},address:-1431655766}}}}}},slot:15});Object.assign(re,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:qe}],methods:[],template:null},slot:14});const ls=new Uint8Array([]);Object.assign(Ae,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:ls}}},slot:17});Object.assign(se,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ae}],methods:[],template:null},slot:16});const cs=new Uint8Array([]),bs=new Uint8Array([160,253,15,0]),ps=new Uint8Array([4,0,0,0]);Object.assign(Oe,{...t,type:2,name:"Struct0021",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:z}],methods:[],template:{memory:{array:cs},slots:{0:{structure:z,memory:{array:bs},slots:{0:{structure:f,memory:{array:ps}}}}}}},slot:52});Object.assign(ae,{...t,type:11,name:"Struct0013",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Oe}],methods:[],template:null},slot:51});const ds=new Uint8Array([]),fs=new Uint8Array([170,170,170,170]);Object.assign(Ue,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:ae}],methods:[],template:{memory:{array:ds},slots:{0:{structure:ae,memory:{array:fs},slots:{0:{structure:Oe,memory:{array:s},address:-1431655766}}}}}},slot:19});Object.assign(ne,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ue}],methods:[],template:null},slot:18});const Ss=new Uint8Array([]),hs=new Uint8Array([]),gs=new Uint8Array([148,250,15,0]),zs=new Uint8Array([107,37,16,0]),ws=new Uint8Array([99,111,109,46,111,109,45,108,97,98,115,46,102,105,108,116,101,114,115,46,110,101,119,116,111,110,82,97,112,104,115,111,110,0]),Rs=new Uint8Array([212,250,15,0]),qs=new Uint8Array([99,37,16,0]),As=new Uint8Array([79,109,32,76,97,98,115,0]),Os=new Uint8Array([20,251,15,0]),Us=new Uint8Array([1,0,0,0]),js=new Uint8Array([108,251,15,0]),Ps=new Uint8Array([75,37,16,0]),Vs=new Uint8Array([78,101,119,116,111,110,32,82,97,112,104,115,111,110,32,70,114,97,99,116,97,108,115,0]),Cs=new Uint8Array([170,170,170,170]),Is=new Uint8Array([170,170,170,170]),ks=new Uint8Array([170,170,170,170]);Object.assign(ke,{...t,type:2,name:"newton-raphson.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Ss}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:L},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:X},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:z},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:Y},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:re},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:se},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:ne}],methods:[],template:{memory:{array:hs},slots:{0:{structure:L,memory:{array:gs},slots:{0:{structure:me,memory:{array:zs},slots:{0:{structure:oe,memory:{array:ws},address:1058155}}}}},1:{structure:X,memory:{array:Rs},slots:{0:{structure:le,memory:{array:qs},slots:{0:{structure:ye,memory:{array:As},address:1058147}}}}},2:{structure:z,memory:{array:Os},slots:{0:{structure:f,memory:{array:Us}}}},3:{structure:Y,memory:{array:js},slots:{0:{structure:be,memory:{array:Ps},slots:{0:{structure:ce,memory:{array:Vs},address:1058123}}}}},4:{structure:re,memory:{array:Cs},slots:{0:{structure:qe,memory:{array:s},address:-1431655766}}},5:{structure:se,memory:{array:Is},slots:{0:{structure:Ae,memory:{array:s},address:-1431655766}}},6:{structure:ne,memory:{array:ks},slots:{0:{structure:Ue,memory:{array:s},address:-1431655766}}}}}},slot:1});const vs=new Uint8Array([]);Object.assign(D,{...t,type:2,name:"newton-raphson.KernelInput(u8,newton-raphson.kernel)",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:vs}}},slot:20});Object.assign(je,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:w}],methods:[],template:null},slot:25});Object.assign(Pe,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:je}],methods:[],template:null},slot:24});Object.assign(Ve,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Pe}],methods:[],template:null},slot:23});Object.assign(p,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[],template:null},slot:26});const xs=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(ve,{...t,type:9,name:"newton-raphson.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:f},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:f}],methods:[],template:{memory:{array:xs}}},slot:27});Object.assign(ie,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:ie}],methods:[],template:null},slot:28});const Es=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ks=new Uint8Array([]),Ds=new Uint8Array([88,253,15,0]),Ms=new Uint8Array([4,0,0,0]);Object.assign(ue,{...t,type:2,name:"newton-raphson.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Ve},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:p},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:p},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ve},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:ie}],methods:[],template:{memory:{array:Es}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:je},{...e,type:7,isRequired:!1,name:"FPixel",structure:R},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:z}],methods:[],template:{memory:{array:Ks},slots:{0:{structure:z,memory:{array:Ds},slots:{0:{structure:f,memory:{array:Ms}}}}}}},slot:22});const Fs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ts=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),_s=new Uint8Array([0,0,0,0,0,0,0,0]),Le=new Uint8Array([]);Object.assign(M,{...t,type:2,name:"newton-raphson.KernelOutput(u8,newton-raphson.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:ue}],methods:[],template:{memory:{array:Fs},slots:{0:{structure:ue,memory:{array:Ts},slots:{0:{structure:Ve,memory:{array:_s},slots:{0:{structure:Pe,memory:{array:Le}}}}}}}}},slot:21});const $s=new Uint8Array([0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,0,0,0,0,0,0,205,204,76,63,0,0,128,63,0,0,0,68,0,0,0,68,0,0,160,192,0,0,160,64,0,0,160,192,0,0,160,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,64,0,0,200,65]);Object.assign(F,{...t,type:2,name:"newton-raphson.KernelParameters(newton-raphson.kernel)",length:1,byteSize:128,align:4,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:256,bitSize:64,byteSize:8,slot:0,name:"size",structure:m},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:128,byteSize:16,slot:1,name:"colorStart",structure:R},{...e,type:6,isRequired:!1,bitOffset:128,bitSize:128,byteSize:16,slot:2,name:"colorEnd",structure:R},{...e,type:6,isRequired:!1,bitOffset:320,bitSize:64,byteSize:8,slot:3,name:"rangeX",structure:m},{...e,type:6,isRequired:!1,bitOffset:384,bitSize:64,byteSize:8,slot:4,name:"rangeY",structure:m},{...e,type:6,isRequired:!1,bitOffset:448,bitSize:64,byteSize:8,slot:5,name:"c0",structure:m},{...e,type:6,isRequired:!1,bitOffset:512,bitSize:64,byteSize:8,slot:6,name:"c1",structure:m},{...e,type:6,isRequired:!1,bitOffset:576,bitSize:64,byteSize:8,slot:7,name:"c2",structure:m},{...e,type:6,isRequired:!1,bitOffset:640,bitSize:64,byteSize:8,slot:8,name:"c3",structure:m},{...e,type:6,isRequired:!1,bitOffset:704,bitSize:64,byteSize:8,slot:9,name:"c4",structure:m},{...e,type:6,isRequired:!1,bitOffset:768,bitSize:64,byteSize:8,slot:10,name:"c5",structure:m},{...e,type:6,isRequired:!1,bitOffset:832,bitSize:64,byteSize:8,slot:11,name:"c6",structure:m},{...e,type:6,isRequired:!1,bitOffset:896,bitSize:64,byteSize:8,slot:12,name:"c7",structure:m},{...e,type:4,isRequired:!1,bitOffset:960,bitSize:32,byteSize:4,slot:13,name:"toleranceInversePower",structure:S},{...e,type:4,isRequired:!1,bitOffset:992,bitSize:32,byteSize:4,slot:14,name:"iterations",structure:S}],methods:[],template:{memory:{array:$s}}},slot:29});Object.assign(xe,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(newton-raphson.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:53});Object.assign(Ee,{...t,type:7,name:"ErrorSet0000!newton-raphson.KernelOutput(u8,newton-raphson.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:M},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:xe}],methods:[],template:null},slot:35});Object.assign(Ke,{...t,type:3,name:"createOutput",length:1,byteSize:176,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:1024,bitSize:32,byteSize:4,slot:0,name:"0",structure:p},{...e,type:3,bitOffset:1056,bitSize:32,byteSize:4,slot:1,name:"1",structure:p},{...e,type:6,bitOffset:1408,bitSize:0,byteSize:0,slot:2,name:"2",structure:D},{...e,type:6,bitOffset:0,bitSize:1024,byteSize:128,slot:3,name:"3",structure:F},{...e,type:6,bitOffset:1088,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Ee}],methods:[],template:null},slot:33});Object.assign(De,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(newton-raphson.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:54});Object.assign(Me,{...t,type:7,name:"ErrorSet0001!newton-raphson.KernelOutput(u8,newton-raphson.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:M},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:De}],methods:[],template:null},slot:36});Object.assign(Fe,{...t,type:3,name:"createPartialOutput",length:1,byteSize:176,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:1024,bitSize:32,byteSize:4,slot:0,name:"0",structure:p},{...e,type:3,bitOffset:1056,bitSize:32,byteSize:4,slot:1,name:"1",structure:p},{...e,type:3,bitOffset:1088,bitSize:32,byteSize:4,slot:2,name:"2",structure:p},{...e,type:3,bitOffset:1120,bitSize:32,byteSize:4,slot:3,name:"3",structure:p},{...e,type:6,bitOffset:1408,bitSize:0,byteSize:0,slot:4,name:"4",structure:D},{...e,type:6,bitOffset:0,bitSize:1024,byteSize:128,slot:5,name:"5",structure:F},{...e,type:6,bitOffset:1152,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Me}],methods:[],template:null},slot:34});const Bs={argStruct:Ke,thunk:6,name:"createOutput"},Ls={argStruct:Fe,thunk:2,name:"createPartialOutput"};Object.assign(Te,{...t,type:2,name:"newton-raphson",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Le}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:ke},{...e,type:7,isRequired:!1,name:"Input",structure:D},{...e,type:7,isRequired:!1,name:"Output",structure:M},{...e,type:7,isRequired:!1,name:"Parameters",structure:F}],methods:[Bs,Ls],template:null},slot:0});const Xs=[w,oe,me,L,ye,le,X,f,z,ce,be,Y,S,m,a,r,v,U,pe,G,de,H,fe,J,R,x,j,P,g,Se,N,he,Q,ge,W,E,V,K,C,ze,Z,k,O,b,i,we,ee,Re,te,qe,re,Ae,se,Oe,ae,Ue,ne,ke,D,je,Pe,Ve,p,ve,ie,ue,M,F,xe,Ee,Ke,De,Me,Fe,Te],Ys=yt(Xs),Gs=Te.constructor,Hs=(async()=>{const y=new URL("newton-raphson-2fb3cd4a.wasm",import.meta.url).href;return fetch(y)})();lt(Hs,{...Ys,writeBack:!0});const{createOutput:ra,createPartialOutput:Js,kernel:Ie,Input:Ns,Output:sa,Parameters:aa}=Gs;function Qs(y,c,u,n,o={},q={}){if(Array.isArray(o)){const h=o;o={};for(const[d,A]of Object.keys(Ie.inputImages).entries())o[A]=h[d]}const T=new Ns(void 0),_=Object.keys(Ie.inputImages),l=[];let I;for(const h of _){let d=o[h];if(d||(_.length===1&&["data","width","height"].every(A=>!!o[A])?d=o:l.push(h)),T[h]=d,I){if(d.colorSpace!==I)throw new Error(`Input images must all use the same color space: ${I}`)}else I=d.colorSpace}if(l.length>0)throw new Error(`Missing input image${l.length>1?"s":""}: ${l.join(", ")}`);const Ce=Js(y,c,u,n,T,q),_e=h=>{const d=Object.keys(h),A={};for(const $e of d){const{data:{typedArray:$},width:Be,height:Ye}=h[$e];let B;if(typeof ImageData=="function"){const Ge=new Uint8ClampedArray($.buffer,$.byteOffset,$.byteLength);B=new ImageData(Ge,Be,n,{colorSpace:I})}else B={data:$,width:Be,height:Ye};if(d.length===1)return B;A[$e]=B}return A};return Ce[Symbol.toStringTag]==="Promise"?Ce.then(_e):_e(Ce)}function Ws(){const y={};for(let[c,u]of Object.entries(Ie)){if(c==="parameters"){const n={};for(const[o,q]of Object.entries(u)){const T=n[o]={};for(let[_,l]of Object.entries(q))typeof l=="object"?"string"in l?l=l.string:l=Xe(l):typeof l=="function"&&(l=Zs(l.name)),T[_]=l}u=n}else typeof u=="object"&&("string"in u?u=u.string:u=u.valueOf());y[c]=u}return y}function Xe(y){const c=[];for(let[u,n]of Object.entries(y))typeof n=="object"&&(n=Xe(n)),c[u]=n;return c}function Zs(y){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[y]}onmessage=y=>{const[c,u,...n]=y.data;ea(c,n).then(([o,q])=>{postMessage([c,u,o],{transfer:q})}).catch(o=>{postMessage(["error",u,o])})};async function ea(y,c){switch(y){case"getKernelInfo":return[Ws(...c)];case"createPartialImageData":const n=await Qs(...c),o=[];if("data"in n&&"width"in n&&"height"in n)o.push(n.data.buffer);else for(const q of Object.entries(n))o.push(n.data.buffer);return[n,o];default:throw new Error(`Unknown function: ${y}`)}}
