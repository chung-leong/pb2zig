import{u as tm,a as mm,b as rm,c as sm,d as am,e as om,f as im,g as cm,h as nm,i as um,j as lm,k as pm,l as ym,n as fm,m as dm,o as bm,p as _m,q as gm,r as hm}from"./index-334ebb77.js";tm();mm();rm();sm();am();om();im();cm();nm();um();lm();pm();ym();fm();dm();bm();_m();const m={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},b={},Ie={},ke={},M={},P={},j={},$={},o={},U={},ve={},Ee={},G={},S={},H={},Te={},Be={},J={},Ke={},N={},c={},r={},t={},De={},Q={},Fe={},W={},Le={},X={},z={},Me={},Y={},$e={},Z={},Ge={},ee={},He={},te={},Je={},me={},Ne={},re={},Qe={},se={},We={},ae={},V={},Xe={},oe={},Ye={},ie={},Ze={},ce={},et={},ne={},C={},R={},I={},A={},tt={},ue={},k={},v={},O={},mt={},le={},rt={},st={},pe={},at={},ye={},ot={},fe={},it={},de={},ct={},be={},_e={},nt={},ge={},ut={},lt={},he={},pt={},Ve={},a={},yt={},Se={},ft={},dt={},ze={},bt={},qe={},_t={},we={},gt={},Ue={},ht={},Re={},Vt={},Ae={},St={},Oe={},zt={},je={},It={},E={},qt={},wt={},Ut={},d={},kt={},xe={},Pe={},T={},B={},vt={},Et={},Tt={},Bt={},Kt={},Dt={},Ft={};Object.assign(b,{...m,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:5});Object.assign(Ie,{...m,type:1,name:"[19:0]u8",length:19,byteSize:20,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:4});Object.assign(ke,{...m,type:11,name:"*const [19:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ie}],methods:[],template:null},slot:3});Object.assign(M,{...m,type:11,name:"**const [19:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ke}],methods:[],template:null},slot:2});Object.assign(P,{...m,type:1,name:"[11:0]u8",length:11,byteSize:12,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:8});Object.assign(j,{...m,type:11,name:"*const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:P}],methods:[],template:null},slot:7});Object.assign($,{...m,type:11,name:"**const [11:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:j}],methods:[],template:null},slot:6});Object.assign(o,{...m,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:o}],methods:[],template:null},slot:10});Object.assign(U,{...m,type:11,name:"*i32",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:o}],methods:[],template:null},slot:9});Object.assign(ve,{...m,type:1,name:"[27:0]u8",length:27,byteSize:28,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:13});Object.assign(Ee,{...m,type:11,name:"*const [27:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ve}],methods:[],template:null},slot:12});Object.assign(G,{...m,type:11,name:"**const [27:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ee}],methods:[],template:null},slot:11});Object.assign(S,{...m,name:"bool",length:1,byteSize:1,align:0,instance:{members:[{...e,type:1,isRequired:!1,bitOffset:0,bitSize:1,byteSize:1,structure:S}],methods:[],template:null},slot:28});Object.assign(H,{...m,type:11,name:"*const bool",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:S}],methods:[],template:null},slot:73});Object.assign(Te,{...m,type:1,name:"[32:0]u8",length:32,byteSize:33,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:76});Object.assign(Be,{...m,type:11,name:"*const [32:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Te}],methods:[],template:null},slot:75});Object.assign(J,{...m,type:11,name:"*const *const [32:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Be}],methods:[],template:null},slot:74});const Vm=new Uint8Array([]),Sm=new Uint8Array([92,31,16,0]),zm=new Uint8Array([0]),qm=new Uint8Array([88,31,16,0]),wm=new Uint8Array([148,31,16,0]),Um=new Uint8Array([65,118,101,114,97,103,101,32,52,32,115,97,109,112,108,101,32,114,97,121,115,32,112,101,114,32,112,105,120,101,108,46,0]);Object.assign(Ke,{...m,type:2,name:'struct{comptime type: type = bool, comptime defaultValue: bool = false, comptime description: *const [32:0]u8 = "Average 4 sample rays per pixel."}',length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:S},{...e,type:8,isRequired:!1,slot:0,name:"defaultValue",structure:H},{...e,type:8,isRequired:!1,slot:1,name:"description",structure:J}],methods:[],template:{memory:{array:Vm},slots:{0:{structure:H,memory:{array:Sm},slots:{0:{structure:S,memory:{array:zm},address:1056604}}},1:{structure:J,memory:{array:qm},slots:{0:{structure:Be,memory:{array:wm},address:1056600,slots:{0:{structure:Te,memory:{array:Um},address:1056660}}}}}}}},slot:40});Object.assign(N,{...m,type:11,name:'*const struct{comptime type: type = bool, comptime defaultValue: bool = false, comptime description: *const [32:0]u8 = "Average 4 sample rays per pixel."}',length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ke}],methods:[],template:null},slot:39});Object.assign(c,{...m,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:31});Object.assign(r,{...m,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[],template:null},slot:78});Object.assign(t,{...m,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:r}],methods:[],template:null},slot:77});const Rm=new Uint8Array([]),Am=new Uint8Array([64,30,16,0]),y=new Uint8Array([0,0,0,0,0,0,0,0]),Om=new Uint8Array([112,30,16,0]),g=new Uint8Array([0,0,0,0,0,0,240,63]),jm=new Uint8Array([80,31,16,0]),xm=new Uint8Array([123,20,174,71,225,122,228,63]);Object.assign(De,{...m,type:2,name:"struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0.64}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:c},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:t}],methods:[],template:{memory:{array:Rm},slots:{0:{structure:t,memory:{array:Am},slots:{0:{structure:r,memory:{array:y},address:1056320}}},1:{structure:t,memory:{array:Om},slots:{0:{structure:r,memory:{array:g},address:1056368}}},2:{structure:t,memory:{array:jm},slots:{0:{structure:r,memory:{array:xm},address:1056592}}}}}},slot:42});Object.assign(Q,{...m,type:11,name:"*const struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0.64}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:De}],methods:[],template:null},slot:41});const Pm=new Uint8Array([]),Cm=new Uint8Array([64,30,16,0]),Im=new Uint8Array([144,30,16,0]),Ce=new Uint8Array([0,0,0,0,0,0,8,64]),km=new Uint8Array([72,31,16,0]),vm=new Uint8Array([205,204,204,204,204,204,244,63]);Object.assign(Fe,{...m,type:2,name:"struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 3, comptime defaultValue: comptime_float = 1.3}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:c},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:t}],methods:[],template:{memory:{array:Pm},slots:{0:{structure:t,memory:{array:Cm},slots:{0:{structure:r,memory:{array:y},address:1056320}}},1:{structure:t,memory:{array:Im},slots:{0:{structure:r,memory:{array:Ce},address:1056400}}},2:{structure:t,memory:{array:km},slots:{0:{structure:r,memory:{array:vm},address:1056584}}}}}},slot:44});Object.assign(W,{...m,type:11,name:"*const struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 3, comptime defaultValue: comptime_float = 1.3}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Fe}],methods:[],template:null},slot:43});const Em=new Uint8Array([]),Tm=new Uint8Array([64,30,16,0]),Bm=new Uint8Array([112,30,16,0]),Km=new Uint8Array([64,30,16,0]);Object.assign(Le,{...m,type:2,name:"struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:c},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:t}],methods:[],template:{memory:{array:Em},slots:{0:{structure:t,memory:{array:Tm},slots:{0:{structure:r,memory:{array:y},address:1056320}}},1:{structure:t,memory:{array:Bm},slots:{0:{structure:r,memory:{array:g},address:1056368}}},2:{structure:t,memory:{array:Km},slots:{0:{structure:r,memory:{array:y},address:1056320}}}}}},slot:46});Object.assign(X,{...m,type:11,name:"*const struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Le}],methods:[],template:null},slot:45});Object.assign(z,{...m,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:32});const Dm=new Uint8Array([]),Fm=new Uint8Array([240,30,16,0]),Lm=new Uint8Array([205,204,204,204,204,204,0,192]),Mm=new Uint8Array([232,30,16,0]),Gt=new Uint8Array([0,0,0,0,0,0,8,192]),$m=new Uint8Array([232,30,16,0]),Gm=new Uint8Array([224,30,16,0]),Hm=new Uint8Array([0,0,0,0,0,0,248,191]);Object.assign(Me,{...m,type:2,name:"struct{comptime comptime_float = -2.1, comptime comptime_float = -3, comptime comptime_float = -3, comptime comptime_float = -1.5}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:t}],methods:[],template:{memory:{array:Dm},slots:{0:{structure:t,memory:{array:Fm},slots:{0:{structure:r,memory:{array:Lm},address:1056496}}},1:{structure:t,memory:{array:Mm},slots:{0:{structure:r,memory:{array:Gt},address:1056488}}},2:{structure:t,memory:{array:$m},slots:{0:{structure:r,memory:{array:Gt},address:1056488}}},3:{structure:t,memory:{array:Gm},slots:{0:{structure:r,memory:{array:Hm},address:1056480}}}}}},slot:80});Object.assign(Y,{...m,type:11,name:"*const struct{comptime comptime_float = -2.1, comptime comptime_float = -3, comptime comptime_float = -3, comptime comptime_float = -1.5}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Me}],methods:[],template:null},slot:79});const Jm=new Uint8Array([]),Nm=new Uint8Array([216,30,16,0]),Qm=new Uint8Array([205,204,204,204,204,204,0,64]),Wm=new Uint8Array([144,30,16,0]),Xm=new Uint8Array([144,30,16,0]),Ym=new Uint8Array([208,30,16,0]),Zm=new Uint8Array([0,0,0,0,0,0,248,63]);Object.assign($e,{...m,type:2,name:"struct{comptime comptime_float = 2.1, comptime comptime_float = 3, comptime comptime_float = 3, comptime comptime_float = 1.5}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:t}],methods:[],template:{memory:{array:Jm},slots:{0:{structure:t,memory:{array:Nm},slots:{0:{structure:r,memory:{array:Qm},address:1056472}}},1:{structure:t,memory:{array:Wm},slots:{0:{structure:r,memory:{array:Ce},address:1056400}}},2:{structure:t,memory:{array:Xm},slots:{0:{structure:r,memory:{array:Ce},address:1056400}}},3:{structure:t,memory:{array:Ym},slots:{0:{structure:r,memory:{array:Zm},address:1056464}}}}}},slot:82});Object.assign(Z,{...m,type:11,name:"*const struct{comptime comptime_float = 2.1, comptime comptime_float = 3, comptime comptime_float = 3, comptime comptime_float = 1.5}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:$e}],methods:[],template:null},slot:81});const er=new Uint8Array([]),tr=new Uint8Array([200,30,16,0]),mr=new Uint8Array([123,20,174,71,225,122,164,191]),rr=new Uint8Array([64,30,16,0]),sr=new Uint8Array([192,30,16,0]),ar=new Uint8Array([10,215,163,112,61,10,231,63]),or=new Uint8Array([64,30,16,0]);Object.assign(Ge,{...m,type:2,name:"struct{comptime comptime_float = -0.04, comptime comptime_float = 0, comptime comptime_float = 0.72, comptime comptime_float = 0}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:t}],methods:[],template:{memory:{array:er},slots:{0:{structure:t,memory:{array:tr},slots:{0:{structure:r,memory:{array:mr},address:1056456}}},1:{structure:t,memory:{array:rr},slots:{0:{structure:r,memory:{array:y},address:1056320}}},2:{structure:t,memory:{array:sr},slots:{0:{structure:r,memory:{array:ar},address:1056448}}},3:{structure:t,memory:{array:or},slots:{0:{structure:r,memory:{array:y},address:1056320}}}}}},slot:84});Object.assign(ee,{...m,type:11,name:"*const struct{comptime comptime_float = -0.04, comptime comptime_float = 0, comptime comptime_float = 0.72, comptime comptime_float = 0}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ge}],methods:[],template:null},slot:83});const ir=new Uint8Array([]),cr=new Uint8Array([170,170,170,170]),s=new Uint8Array([]),nr=new Uint8Array([170,170,170,170]),ur=new Uint8Array([170,170,170,170]);Object.assign(He,{...m,type:2,name:"struct{comptime type: type = @Vector(4, f32), comptime minValue: struct{comptime comptime_float = -2.1, comptime comptime_float = -3, comptime comptime_float = -3, comptime comptime_float = -1.5} = .{-2.1, -3, -3, -1.5}, comptime maxValue: struct{comptime comptime_float = 2.1, comptime comptime_float = 3, comptime comptime_float = 3, comptime comptime_float = 1.5} = .{2.1, 3, 3, 1.5}, comptime defaultValue: struct{comptime comptime_float = -0.04, comptime comptime_float = 0, comptime comptime_float = 0.72, comptime comptime_float = 0} = .{-0.04, 0, 0.72, 0}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:z},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:Y},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:Z},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:ee}],methods:[],template:{memory:{array:ir},slots:{0:{structure:Y,memory:{array:cr},slots:{0:{structure:Me,memory:{array:s},address:-1431655766}}},1:{structure:Z,memory:{array:nr},slots:{0:{structure:$e,memory:{array:s},address:-1431655766}}},2:{structure:ee,memory:{array:ur},slots:{0:{structure:Ge,memory:{array:s},address:-1431655766}}}}}},slot:48});Object.assign(te,{...m,type:11,name:"*const struct{comptime type: type = @Vector(4, f32), comptime minValue: struct{comptime comptime_float = -2.1, comptime comptime_float = -3, comptime comptime_float = -3, comptime comptime_float = -1.5} = .{-2.1, -3, -3, -1.5}, comptime maxValue: struct{comptime comptime_float = 2.1, comptime comptime_float = 3, comptime comptime_float = 3, comptime comptime_float = 1.5} = .{2.1, 3, 3, 1.5}, comptime defaultValue: struct{comptime comptime_float = -0.04, comptime comptime_float = 0, comptime comptime_float = 0.72, comptime comptime_float = 0} = .{-0.04, 0, 0.72, 0}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:He}],methods:[],template:null},slot:47});const lr=new Uint8Array([]),pr=new Uint8Array([184,30,16,0]),At=new Uint8Array([0,0,0,0,0,128,102,192]),yr=new Uint8Array([184,30,16,0]),fr=new Uint8Array([184,30,16,0]),dr=new Uint8Array([64,30,16,0]);Object.assign(Je,{...m,type:2,name:"struct{comptime comptime_float = -180, comptime comptime_float = -180, comptime comptime_float = -180, comptime comptime_float = 0}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:t}],methods:[],template:{memory:{array:lr},slots:{0:{structure:t,memory:{array:pr},slots:{0:{structure:r,memory:{array:At},address:1056440}}},1:{structure:t,memory:{array:yr},slots:{0:{structure:r,memory:{array:At},address:1056440}}},2:{structure:t,memory:{array:fr},slots:{0:{structure:r,memory:{array:At},address:1056440}}},3:{structure:t,memory:{array:dr},slots:{0:{structure:r,memory:{array:y},address:1056320}}}}}},slot:86});Object.assign(me,{...m,type:11,name:"*const struct{comptime comptime_float = -180, comptime comptime_float = -180, comptime comptime_float = -180, comptime comptime_float = 0}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Je}],methods:[],template:null},slot:85});const br=new Uint8Array([]),_r=new Uint8Array([176,30,16,0]),Ot=new Uint8Array([0,0,0,0,0,128,102,64]),gr=new Uint8Array([176,30,16,0]),hr=new Uint8Array([176,30,16,0]),Vr=new Uint8Array([168,30,16,0]),Sr=new Uint8Array([0,0,0,0,0,0,52,64]);Object.assign(Ne,{...m,type:2,name:"struct{comptime comptime_float = 180, comptime comptime_float = 180, comptime comptime_float = 180, comptime comptime_float = 20}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:t}],methods:[],template:{memory:{array:br},slots:{0:{structure:t,memory:{array:_r},slots:{0:{structure:r,memory:{array:Ot},address:1056432}}},1:{structure:t,memory:{array:gr},slots:{0:{structure:r,memory:{array:Ot},address:1056432}}},2:{structure:t,memory:{array:hr},slots:{0:{structure:r,memory:{array:Ot},address:1056432}}},3:{structure:t,memory:{array:Vr},slots:{0:{structure:r,memory:{array:Sr},address:1056424}}}}}},slot:88});Object.assign(re,{...m,type:11,name:"*const struct{comptime comptime_float = 180, comptime comptime_float = 180, comptime comptime_float = 180, comptime comptime_float = 20}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ne}],methods:[],template:null},slot:87});const zr=new Uint8Array([]),qr=new Uint8Array([160,30,16,0]),wr=new Uint8Array([0,0,0,0,0,0,62,192]),Ur=new Uint8Array([64,30,16,0]),Rr=new Uint8Array([152,30,16,0]),Ar=new Uint8Array([0,0,0,0,0,0,52,192]),Or=new Uint8Array([144,30,16,0]);Object.assign(Qe,{...m,type:2,name:"struct{comptime comptime_float = -30, comptime comptime_float = 0, comptime comptime_float = -20, comptime comptime_float = 3}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:t}],methods:[],template:{memory:{array:zr},slots:{0:{structure:t,memory:{array:qr},slots:{0:{structure:r,memory:{array:wr},address:1056416}}},1:{structure:t,memory:{array:Ur},slots:{0:{structure:r,memory:{array:y},address:1056320}}},2:{structure:t,memory:{array:Rr},slots:{0:{structure:r,memory:{array:Ar},address:1056408}}},3:{structure:t,memory:{array:Or},slots:{0:{structure:r,memory:{array:Ce},address:1056400}}}}}},slot:90});Object.assign(se,{...m,type:11,name:"*const struct{comptime comptime_float = -30, comptime comptime_float = 0, comptime comptime_float = -20, comptime comptime_float = 3}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Qe}],methods:[],template:null},slot:89});const jr=new Uint8Array([]),xr=new Uint8Array([170,170,170,170]),Pr=new Uint8Array([170,170,170,170]),Cr=new Uint8Array([170,170,170,170]);Object.assign(We,{...m,type:2,name:"struct{comptime type: type = @Vector(4, f32), comptime minValue: struct{comptime comptime_float = -180, comptime comptime_float = -180, comptime comptime_float = -180, comptime comptime_float = 0} = .{-180, -180, -180, 0}, comptime maxValue: struct{comptime comptime_float = 180, comptime comptime_float = 180, comptime comptime_float = 180, comptime comptime_float = 20} = .{180, 180, 180, 20}, comptime defaultValue: struct{comptime comptime_float = -30, comptime comptime_float = 0, comptime comptime_float = -20, comptime comptime_float = 3} = .{-30, 0, -20, 3}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:z},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:me},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:re},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:se}],methods:[],template:{memory:{array:jr},slots:{0:{structure:me,memory:{array:xr},slots:{0:{structure:Je,memory:{array:s},address:-1431655766}}},1:{structure:re,memory:{array:Pr},slots:{0:{structure:Ne,memory:{array:s},address:-1431655766}}},2:{structure:se,memory:{array:Cr},slots:{0:{structure:Qe,memory:{array:s},address:-1431655766}}}}}},slot:50});Object.assign(ae,{...m,type:11,name:"*const struct{comptime type: type = @Vector(4, f32), comptime minValue: struct{comptime comptime_float = -180, comptime comptime_float = -180, comptime comptime_float = -180, comptime comptime_float = 0} = .{-180, -180, -180, 0}, comptime maxValue: struct{comptime comptime_float = 180, comptime comptime_float = 180, comptime comptime_float = 180, comptime comptime_float = 20} = .{180, 180, 180, 20}, comptime defaultValue: struct{comptime comptime_float = -30, comptime comptime_float = 0, comptime comptime_float = -20, comptime comptime_float = 3} = .{-30, 0, -20, 3}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:We}],methods:[],template:null},slot:49});Object.assign(V,{...m,type:13,name:"@Vector(3, f32)",length:3,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:33});const Ir=new Uint8Array([]),kr=new Uint8Array([136,30,16,0]),jt=new Uint8Array([0,0,0,0,0,0,36,192]),vr=new Uint8Array([136,30,16,0]),Er=new Uint8Array([136,30,16,0]);Object.assign(Xe,{...m,type:2,name:"struct{comptime comptime_float = -10, comptime comptime_float = -10, comptime comptime_float = -10}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t}],methods:[],template:{memory:{array:Ir},slots:{0:{structure:t,memory:{array:kr},slots:{0:{structure:r,memory:{array:jt},address:1056392}}},1:{structure:t,memory:{array:vr},slots:{0:{structure:r,memory:{array:jt},address:1056392}}},2:{structure:t,memory:{array:Er},slots:{0:{structure:r,memory:{array:jt},address:1056392}}}}}},slot:92});Object.assign(oe,{...m,type:11,name:"*const struct{comptime comptime_float = -10, comptime comptime_float = -10, comptime comptime_float = -10}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Xe}],methods:[],template:null},slot:91});const Tr=new Uint8Array([]),Br=new Uint8Array([128,30,16,0]),xt=new Uint8Array([0,0,0,0,0,0,36,64]),Kr=new Uint8Array([128,30,16,0]),Dr=new Uint8Array([128,30,16,0]);Object.assign(Ye,{...m,type:2,name:"struct{comptime comptime_float = 10, comptime comptime_float = 10, comptime comptime_float = 10}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t}],methods:[],template:{memory:{array:Tr},slots:{0:{structure:t,memory:{array:Br},slots:{0:{structure:r,memory:{array:xt},address:1056384}}},1:{structure:t,memory:{array:Kr},slots:{0:{structure:r,memory:{array:xt},address:1056384}}},2:{structure:t,memory:{array:Dr},slots:{0:{structure:r,memory:{array:xt},address:1056384}}}}}},slot:94});Object.assign(ie,{...m,type:11,name:"*const struct{comptime comptime_float = 10, comptime comptime_float = 10, comptime comptime_float = 10}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ye}],methods:[],template:null},slot:93});const Fr=new Uint8Array([]),Lr=new Uint8Array([120,30,16,0]),Pt=new Uint8Array([0,0,0,0,0,0,0,64]),Mr=new Uint8Array([120,30,16,0]),$r=new Uint8Array([120,30,16,0]);Object.assign(Ze,{...m,type:2,name:"struct{comptime comptime_float = 2, comptime comptime_float = 2, comptime comptime_float = 2}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t}],methods:[],template:{memory:{array:Fr},slots:{0:{structure:t,memory:{array:Lr},slots:{0:{structure:r,memory:{array:Pt},address:1056376}}},1:{structure:t,memory:{array:Mr},slots:{0:{structure:r,memory:{array:Pt},address:1056376}}},2:{structure:t,memory:{array:$r},slots:{0:{structure:r,memory:{array:Pt},address:1056376}}}}}},slot:96});Object.assign(ce,{...m,type:11,name:"*const struct{comptime comptime_float = 2, comptime comptime_float = 2, comptime comptime_float = 2}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ze}],methods:[],template:null},slot:95});const Gr=new Uint8Array([]),Hr=new Uint8Array([170,170,170,170]),Jr=new Uint8Array([170,170,170,170]),Nr=new Uint8Array([170,170,170,170]);Object.assign(et,{...m,type:2,name:"struct{comptime type: type = @Vector(3, f32), comptime minValue: struct{comptime comptime_float = -10, comptime comptime_float = -10, comptime comptime_float = -10} = .{-10, -10, -10}, comptime maxValue: struct{comptime comptime_float = 10, comptime comptime_float = 10, comptime comptime_float = 10} = .{10, 10, 10}, comptime defaultValue: struct{comptime comptime_float = 2, comptime comptime_float = 2, comptime comptime_float = 2} = .{2, 2, 2}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:V},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:oe},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:ie},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:ce}],methods:[],template:{memory:{array:Gr},slots:{0:{structure:oe,memory:{array:Hr},slots:{0:{structure:Xe,memory:{array:s},address:-1431655766}}},1:{structure:ie,memory:{array:Jr},slots:{0:{structure:Ye,memory:{array:s},address:-1431655766}}},2:{structure:ce,memory:{array:Nr},slots:{0:{structure:Ze,memory:{array:s},address:-1431655766}}}}}},slot:52});Object.assign(ne,{...m,type:11,name:"*const struct{comptime type: type = @Vector(3, f32), comptime minValue: struct{comptime comptime_float = -10, comptime comptime_float = -10, comptime comptime_float = -10} = .{-10, -10, -10}, comptime maxValue: struct{comptime comptime_float = 10, comptime comptime_float = 10, comptime comptime_float = 10} = .{10, 10, 10}, comptime defaultValue: struct{comptime comptime_float = 2, comptime comptime_float = 2, comptime comptime_float = 2} = .{2, 2, 2}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:et}],methods:[],template:null},slot:51});const Qr=new Uint8Array([]),Wr=new Uint8Array([64,30,16,0]),Xr=new Uint8Array([64,30,16,0]),Yr=new Uint8Array([64,30,16,0]);Object.assign(C,{...m,type:2,name:"struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t}],methods:[],template:{memory:{array:Qr},slots:{0:{structure:t,memory:{array:Wr},slots:{0:{structure:r,memory:{array:y},address:1056320}}},1:{structure:t,memory:{array:Xr},slots:{0:{structure:r,memory:{array:y},address:1056320}}},2:{structure:t,memory:{array:Yr},slots:{0:{structure:r,memory:{array:y},address:1056320}}}}}},slot:98});Object.assign(R,{...m,type:11,name:"*const struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:C}],methods:[],template:null},slot:97});const Zr=new Uint8Array([]),es=new Uint8Array([112,30,16,0]),ts=new Uint8Array([112,30,16,0]),ms=new Uint8Array([112,30,16,0]);Object.assign(I,{...m,type:2,name:"struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t}],methods:[],template:{memory:{array:Zr},slots:{0:{structure:t,memory:{array:es},slots:{0:{structure:r,memory:{array:g},address:1056368}}},1:{structure:t,memory:{array:ts},slots:{0:{structure:r,memory:{array:g},address:1056368}}},2:{structure:t,memory:{array:ms},slots:{0:{structure:r,memory:{array:g},address:1056368}}}}}},slot:100});Object.assign(A,{...m,type:11,name:"*const struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:I}],methods:[],template:null},slot:99});const rs=new Uint8Array([]),ss=new Uint8Array([104,30,16,0]),as=new Uint8Array([51,51,51,51,51,51,211,63]),os=new Uint8Array([96,30,16,0]),is=new Uint8Array([31,133,235,81,184,30,213,63]),cs=new Uint8Array([88,30,16,0]),ns=new Uint8Array([102,102,102,102,102,102,214,63]);Object.assign(tt,{...m,type:2,name:"struct{comptime comptime_float = 0.3, comptime comptime_float = 0.33, comptime comptime_float = 0.35}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t}],methods:[],template:{memory:{array:rs},slots:{0:{structure:t,memory:{array:ss},slots:{0:{structure:r,memory:{array:as},address:1056360}}},1:{structure:t,memory:{array:os},slots:{0:{structure:r,memory:{array:is},address:1056352}}},2:{structure:t,memory:{array:cs},slots:{0:{structure:r,memory:{array:ns},address:1056344}}}}}},slot:102});Object.assign(ue,{...m,type:11,name:"*const struct{comptime comptime_float = 0.3, comptime comptime_float = 0.33, comptime comptime_float = 0.35}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:tt}],methods:[],template:null},slot:101});Object.assign(k,{...m,type:1,name:"[7:0]u8",length:7,byteSize:8,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:105});Object.assign(v,{...m,type:11,name:"*const [7:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:k}],methods:[],template:null},slot:104});Object.assign(O,{...m,type:11,name:"*const *const [7:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:v}],methods:[],template:null},slot:103});const us=new Uint8Array([]),ls=new Uint8Array([170,170,170,170]),ps=new Uint8Array([170,170,170,170]),ys=new Uint8Array([170,170,170,170]),fs=new Uint8Array([64,31,16,0]),Qt=new Uint8Array([140,31,16,0]),Wt=new Uint8Array([97,101,67,111,108,111,114,0]);Object.assign(mt,{...m,type:2,name:'struct{comptime type: type = @Vector(3, f32), comptime minValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0, 0}, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}, comptime defaultValue: struct{comptime comptime_float = 0.3, comptime comptime_float = 0.33, comptime comptime_float = 0.35} = .{0.3, 0.33, 0.35}, comptime aeUIControl: *const [7:0]u8 = "aeColor"}',length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:V},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:R},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:A},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:ue},{...e,type:8,isRequired:!1,slot:3,name:"aeUIControl",structure:O}],methods:[],template:{memory:{array:us},slots:{0:{structure:R,memory:{array:ls},slots:{0:{structure:C,memory:{array:s},address:-1431655766}}},1:{structure:A,memory:{array:ps},slots:{0:{structure:I,memory:{array:s},address:-1431655766}}},2:{structure:ue,memory:{array:ys},slots:{0:{structure:tt,memory:{array:s},address:-1431655766}}},3:{structure:O,memory:{array:fs},slots:{0:{structure:v,memory:{array:Qt},address:1056576,slots:{0:{structure:k,memory:{array:Wt},address:1056652}}}}}}}},slot:54});Object.assign(le,{...m,type:11,name:'*const struct{comptime type: type = @Vector(3, f32), comptime minValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0, 0}, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}, comptime defaultValue: struct{comptime comptime_float = 0.3, comptime comptime_float = 0.33, comptime comptime_float = 0.35} = .{0.3, 0.33, 0.35}, comptime aeUIControl: *const [7:0]u8 = "aeColor"}',length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:mt}],methods:[],template:null},slot:53});Object.assign(rt,{...m,type:1,name:"[24:0]u8",length:24,byteSize:25,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:108});Object.assign(st,{...m,type:11,name:"*const [24:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:rt}],methods:[],template:null},slot:107});Object.assign(pe,{...m,type:11,name:"*const *const [24:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:st}],methods:[],template:null},slot:106});const ds=new Uint8Array([]),bs=new Uint8Array([64,30,16,0]),_s=new Uint8Array([112,30,16,0]),gs=new Uint8Array([112,30,16,0]),hs=new Uint8Array([68,31,16,0]),Vs=new Uint8Array([115,31,16,0]),Ss=new Uint8Array([66,97,99,107,103,114,111,117,110,100,32,116,114,97,110,115,112,97,114,101,110,99,121,46,0]);Object.assign(at,{...m,type:2,name:'struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 1, comptime description: *const [24:0]u8 = "Background transparency."}',length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:c},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:t},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:pe}],methods:[],template:{memory:{array:ds},slots:{0:{structure:t,memory:{array:bs},slots:{0:{structure:r,memory:{array:y},address:1056320}}},1:{structure:t,memory:{array:_s},slots:{0:{structure:r,memory:{array:g},address:1056368}}},2:{structure:t,memory:{array:gs},slots:{0:{structure:r,memory:{array:g},address:1056368}}},3:{structure:pe,memory:{array:hs},slots:{0:{structure:st,memory:{array:Vs},address:1056580,slots:{0:{structure:rt,memory:{array:Ss},address:1056627}}}}}}}},slot:56});Object.assign(ye,{...m,type:11,name:'*const struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 1, comptime description: *const [24:0]u8 = "Background transparency."}',length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:at}],methods:[],template:null},slot:55});const zs=new Uint8Array([]),qs=new Uint8Array([80,30,16,0]),ws=new Uint8Array([41,92,143,194,245,40,228,63]),Us=new Uint8Array([72,30,16,0]),Rs=new Uint8Array([123,20,174,71,225,122,180,63]),As=new Uint8Array([64,30,16,0]);Object.assign(ot,{...m,type:2,name:"struct{comptime comptime_float = 0.63, comptime comptime_float = 0.08, comptime comptime_float = 0}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t}],methods:[],template:{memory:{array:zs},slots:{0:{structure:t,memory:{array:qs},slots:{0:{structure:r,memory:{array:ws},address:1056336}}},1:{structure:t,memory:{array:Us},slots:{0:{structure:r,memory:{array:Rs},address:1056328}}},2:{structure:t,memory:{array:As},slots:{0:{structure:r,memory:{array:y},address:1056320}}}}}},slot:110});Object.assign(fe,{...m,type:11,name:"*const struct{comptime comptime_float = 0.63, comptime comptime_float = 0.08, comptime comptime_float = 0}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ot}],methods:[],template:null},slot:109});const Os=new Uint8Array([]),js=new Uint8Array([170,170,170,170]),xs=new Uint8Array([170,170,170,170]),Ps=new Uint8Array([170,170,170,170]),Cs=new Uint8Array([64,31,16,0]);Object.assign(it,{...m,type:2,name:'struct{comptime type: type = @Vector(3, f32), comptime minValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0, 0}, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}, comptime defaultValue: struct{comptime comptime_float = 0.63, comptime comptime_float = 0.08, comptime comptime_float = 0} = .{0.63, 0.08, 0}, comptime aeUIControl: *const [7:0]u8 = "aeColor"}',length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:V},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:R},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:A},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:fe},{...e,type:8,isRequired:!1,slot:3,name:"aeUIControl",structure:O}],methods:[],template:{memory:{array:Os},slots:{0:{structure:R,memory:{array:js},slots:{0:{structure:C,memory:{array:s},address:-1431655766}}},1:{structure:A,memory:{array:xs},slots:{0:{structure:I,memory:{array:s},address:-1431655766}}},2:{structure:fe,memory:{array:Ps},slots:{0:{structure:ot,memory:{array:s},address:-1431655766}}},3:{structure:O,memory:{array:Cs},slots:{0:{structure:v,memory:{array:Qt},address:1056576,slots:{0:{structure:k,memory:{array:Wt},address:1056652}}}}}}}},slot:58});Object.assign(de,{...m,type:11,name:'*const struct{comptime type: type = @Vector(3, f32), comptime minValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0, 0}, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}, comptime defaultValue: struct{comptime comptime_float = 0.63, comptime comptime_float = 0.08, comptime comptime_float = 0} = .{0.63, 0.08, 0}, comptime aeUIControl: *const [7:0]u8 = "aeColor"}',length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:it}],methods:[],template:null},slot:57});const Is=new Uint8Array([]),ks=new Uint8Array([64,30,16,0]),vs=new Uint8Array([112,30,16,0]),Es=new Uint8Array([56,31,16,0]),Ts=new Uint8Array([164,112,61,10,215,163,192,63]);Object.assign(ct,{...m,type:2,name:"struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0.13}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:c},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:t}],methods:[],template:{memory:{array:Is},slots:{0:{structure:t,memory:{array:ks},slots:{0:{structure:r,memory:{array:y},address:1056320}}},1:{structure:t,memory:{array:vs},slots:{0:{structure:r,memory:{array:g},address:1056368}}},2:{structure:t,memory:{array:Es},slots:{0:{structure:r,memory:{array:Ts},address:1056568}}}}}},slot:60});Object.assign(be,{...m,type:11,name:"*const struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0.13}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ct}],methods:[],template:null},slot:59});Object.assign(_e,{...m,type:11,name:"*const *const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:j}],methods:[],template:null},slot:111});const Bs=new Uint8Array([]),Ks=new Uint8Array([64,30,16,0]),Ds=new Uint8Array([112,30,16,0]),Fs=new Uint8Array([48,31,16,0]),Ls=new Uint8Array([0,0,0,0,0,0,224,63]),Ms=new Uint8Array([40,31,16,0]),$s=new Uint8Array([103,31,16,0]),Gs=new Uint8Array([115,112,101,99,117,108,97,114,105,116,121,0]);Object.assign(nt,{...m,type:2,name:'struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0.5, comptime description: *const [11:0]u8 = "specularity"}',length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:c},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:t},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:_e}],methods:[],template:{memory:{array:Bs},slots:{0:{structure:t,memory:{array:Ks},slots:{0:{structure:r,memory:{array:y},address:1056320}}},1:{structure:t,memory:{array:Ds},slots:{0:{structure:r,memory:{array:g},address:1056368}}},2:{structure:t,memory:{array:Fs},slots:{0:{structure:r,memory:{array:Ls},address:1056560}}},3:{structure:_e,memory:{array:Ms},slots:{0:{structure:j,memory:{array:$s},address:1056552,slots:{0:{structure:P,memory:{array:Gs},address:1056615}}}}}}}},slot:62});Object.assign(ge,{...m,type:11,name:'*const struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0.5, comptime description: *const [11:0]u8 = "specularity"}',length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:nt}],methods:[],template:null},slot:61});Object.assign(ut,{...m,type:1,name:"[9:0]u8",length:9,byteSize:10,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:114});Object.assign(lt,{...m,type:11,name:"*const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ut}],methods:[],template:null},slot:113});Object.assign(he,{...m,type:11,name:"*const *const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:lt}],methods:[],template:null},slot:112});const Hs=new Uint8Array([]),Js=new Uint8Array([32,31,16,0]),Ns=new Uint8Array([154,153,153,153,153,153,185,63]),Qs=new Uint8Array([24,31,16,0]),Ws=new Uint8Array([0,0,0,0,0,0,73,64]),Xs=new Uint8Array([16,31,16,0]),Ys=new Uint8Array([0,0,0,0,0,0,28,64]),Zs=new Uint8Array([8,31,16,0]),ea=new Uint8Array([93,31,16,0]),ta=new Uint8Array([115,104,105,110,105,110,101,115,115,0]);Object.assign(pt,{...m,type:2,name:'struct{comptime type: type = f32, comptime minValue: comptime_float = 0.1, comptime maxValue: comptime_float = 50, comptime defaultValue: comptime_float = 7, comptime description: *const [9:0]u8 = "shininess"}',length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:c},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:t},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:he}],methods:[],template:{memory:{array:Hs},slots:{0:{structure:t,memory:{array:Js},slots:{0:{structure:r,memory:{array:Ns},address:1056544}}},1:{structure:t,memory:{array:Qs},slots:{0:{structure:r,memory:{array:Ws},address:1056536}}},2:{structure:t,memory:{array:Xs},slots:{0:{structure:r,memory:{array:Ys},address:1056528}}},3:{structure:he,memory:{array:Zs},slots:{0:{structure:lt,memory:{array:ea},address:1056520,slots:{0:{structure:ut,memory:{array:ta},address:1056605}}}}}}}},slot:64});Object.assign(Ve,{...m,type:11,name:'*const struct{comptime type: type = f32, comptime minValue: comptime_float = 0.1, comptime maxValue: comptime_float = 50, comptime defaultValue: comptime_float = 7, comptime description: *const [9:0]u8 = "shininess"}',length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pt}],methods:[],template:null},slot:63});Object.assign(a,{...m,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:o}],methods:[],template:null},slot:115});const ma=new Uint8Array([]),ra=new Uint8Array([4,31,16,0]),sa=new Uint8Array([2,0,0,0]),aa=new Uint8Array([0,31,16,0]),oa=new Uint8Array([14,0,0,0]),ia=new Uint8Array([252,30,16,0]),ca=new Uint8Array([8,0,0,0]);Object.assign(yt,{...m,type:2,name:"struct{comptime type: type = i32, comptime minValue: comptime_int = 2, comptime maxValue: comptime_int = 14, comptime defaultValue: comptime_int = 8}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:o},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:a},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:a},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:a}],methods:[],template:{memory:{array:ma},slots:{0:{structure:a,memory:{array:ra},slots:{0:{structure:o,memory:{array:sa},address:1056516}}},1:{structure:a,memory:{array:aa},slots:{0:{structure:o,memory:{array:oa},address:1056512}}},2:{structure:a,memory:{array:ia},slots:{0:{structure:o,memory:{array:ca},address:1056508}}}}}},slot:66});Object.assign(Se,{...m,type:11,name:"*const struct{comptime type: type = i32, comptime minValue: comptime_int = 2, comptime maxValue: comptime_int = 14, comptime defaultValue: comptime_int = 8}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:yt}],methods:[],template:null},slot:65});Object.assign(ft,{...m,type:13,name:"@Vector(2, i32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,structure:o}],methods:[],template:null},slot:34});const na=new Uint8Array([]),ua=new Uint8Array([56,30,16,0]),Ht=new Uint8Array([100,0,0,0]),la=new Uint8Array([56,30,16,0]);Object.assign(dt,{...m,type:2,name:"struct{comptime comptime_int = 100, comptime comptime_int = 100}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:a},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:a}],methods:[],template:{memory:{array:na},slots:{0:{structure:a,memory:{array:ua},slots:{0:{structure:o,memory:{array:Ht},address:1056312}}},1:{structure:a,memory:{array:la},slots:{0:{structure:o,memory:{array:Ht},address:1056312}}}}}},slot:117});Object.assign(ze,{...m,type:11,name:"*const struct{comptime comptime_int = 100, comptime comptime_int = 100}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:dt}],methods:[],template:null},slot:116});const pa=new Uint8Array([]),ya=new Uint8Array([52,30,16,0]),Jt=new Uint8Array([0,8,0,0]),fa=new Uint8Array([52,30,16,0]);Object.assign(bt,{...m,type:2,name:"struct{comptime comptime_int = 2048, comptime comptime_int = 2048}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:a},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:a}],methods:[],template:{memory:{array:pa},slots:{0:{structure:a,memory:{array:ya},slots:{0:{structure:o,memory:{array:Jt},address:1056308}}},1:{structure:a,memory:{array:fa},slots:{0:{structure:o,memory:{array:Jt},address:1056308}}}}}},slot:119});Object.assign(qe,{...m,type:11,name:"*const struct{comptime comptime_int = 2048, comptime comptime_int = 2048}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:bt}],methods:[],template:null},slot:118});const da=new Uint8Array([]),ba=new Uint8Array([48,30,16,0]),Nt=new Uint8Array([0,2,0,0]),_a=new Uint8Array([48,30,16,0]);Object.assign(_t,{...m,type:2,name:"struct{comptime comptime_int = 512, comptime comptime_int = 512}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:a},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:a}],methods:[],template:{memory:{array:da},slots:{0:{structure:a,memory:{array:ba},slots:{0:{structure:o,memory:{array:Nt},address:1056304}}},1:{structure:a,memory:{array:_a},slots:{0:{structure:o,memory:{array:Nt},address:1056304}}}}}},slot:121});Object.assign(we,{...m,type:11,name:"*const struct{comptime comptime_int = 512, comptime comptime_int = 512}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:_t}],methods:[],template:null},slot:120});const ga=new Uint8Array([]),ha=new Uint8Array([170,170,170,170]),Va=new Uint8Array([170,170,170,170]),Sa=new Uint8Array([170,170,170,170]);Object.assign(gt,{...m,type:2,name:"struct{comptime type: type = @Vector(2, i32), comptime minValue: struct{comptime comptime_int = 100, comptime comptime_int = 100} = .{100, 100}, comptime maxValue: struct{comptime comptime_int = 2048, comptime comptime_int = 2048} = .{2048, 2048}, comptime defaultValue: struct{comptime comptime_int = 512, comptime comptime_int = 512} = .{512, 512}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:ft},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:ze},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:qe},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:we}],methods:[],template:{memory:{array:ga},slots:{0:{structure:ze,memory:{array:ha},slots:{0:{structure:dt,memory:{array:s},address:-1431655766}}},1:{structure:qe,memory:{array:Va},slots:{0:{structure:bt,memory:{array:s},address:-1431655766}}},2:{structure:we,memory:{array:Sa},slots:{0:{structure:_t,memory:{array:s},address:-1431655766}}}}}},slot:68});Object.assign(Ue,{...m,type:11,name:"*const struct{comptime type: type = @Vector(2, i32), comptime minValue: struct{comptime comptime_int = 100, comptime comptime_int = 100} = .{100, 100}, comptime maxValue: struct{comptime comptime_int = 2048, comptime comptime_int = 2048} = .{2048, 2048}, comptime defaultValue: struct{comptime comptime_int = 512, comptime comptime_int = 512} = .{512, 512}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:gt}],methods:[],template:null},slot:67});const za=new Uint8Array([]),qa=new Uint8Array([170,170,170,170]),wa=new Uint8Array([170,170,170,170]),Ua=new Uint8Array([170,170,170,170]),Ra=new Uint8Array([170,170,170,170]),Aa=new Uint8Array([170,170,170,170]),Oa=new Uint8Array([170,170,170,170]),ja=new Uint8Array([170,170,170,170]),xa=new Uint8Array([170,170,170,170]),Pa=new Uint8Array([170,170,170,170]),Ca=new Uint8Array([170,170,170,170]),Ia=new Uint8Array([170,170,170,170]),ka=new Uint8Array([170,170,170,170]),va=new Uint8Array([170,170,170,170]),Ea=new Uint8Array([170,170,170,170]),Ta=new Uint8Array([170,170,170,170]);Object.assign(ht,{...m,type:2,name:'struct{comptime antialiasing: struct{comptime type: type = bool, comptime defaultValue: bool = false, comptime description: *const [32:0]u8 = "Average 4 sample rays per pixel."} = .{.type = bool, .defaultValue = false, .description = "Average 4 sample rays per pixel."}, comptime ambientLight: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0.64} = .{.type = f32, .minValue = 0, .maxValue = 1, .defaultValue = 0.64}, comptime ambientOcclusion: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 3, comptime defaultValue: comptime_float = 1.3} = .{.type = f32, .minValue = 0, .maxValue = 3, .defaultValue = 1.3}, comptime shadows: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0} = .{.type = f32, .minValue = 0, .maxValue = 1, .defaultValue = 0}, comptime mu: struct{comptime type: type = @Vector(4, f32), comptime minValue: struct{comptime comptime_float = -2.1, comptime comptime_float = -3, comptime comptime_float = -3, comptime comptime_float = -1.5} = .{-2.1, -3, -3, -1.5}, comptime maxValue: struct{comptime comptime_float = 2.1, comptime comptime_float = 3, comptime comptime_float = 3, comptime comptime_float = 1.5} = .{2.1, 3, 3, 1.5}, comptime defaultValue: struct{comptime comptime_float = -0.04, comptime comptime_float = 0, comptime comptime_float = 0.72, comptime comptime_float = 0} = .{-0.04, 0, 0.72, 0}} = .{.type = @Vector(4, f32), .minValue = .{-2.1, -3, -3, -1.5}, .maxValue = .{2.1, 3, 3, 1.5}, .defaultValue = .{-0.04, 0, 0.72, 0}}, comptime camera: struct{comptime type: type = @Vector(4, f32), comptime minValue: struct{comptime comptime_float = -180, comptime comptime_float = -180, comptime comptime_float = -180, comptime comptime_float = 0} = .{-180, -180, -180, 0}, comptime maxValue: struct{comptime comptime_float = 180, comptime comptime_float = 180, comptime comptime_float = 180, comptime comptime_float = 20} = .{180, 180, 180, 20}, comptime defaultValue: struct{comptime comptime_float = -30, comptime comptime_float = 0, comptime comptime_float = -20, comptime comptime_float = 3} = .{-30, 0, -20, 3}} = .{.type = @Vector(4, f32), .minValue = .{-180, -180, -180, 0}, .maxValue = .{180, 180, 180, 20}, .defaultValue = .{-30, 0, -20, 3}}, comptime light: struct{comptime type: type = @Vector(3, f32), comptime minValue: struct{comptime comptime_float = -10, comptime comptime_float = -10, comptime comptime_float = -10} = .{-10, -10, -10}, comptime maxValue: struct{comptime comptime_float = 10, comptime comptime_float = 10, comptime comptime_float = 10} = .{10, 10, 10}, comptime defaultValue: struct{comptime comptime_float = 2, comptime comptime_float = 2, comptime comptime_float = 2} = .{2, 2, 2}} = .{.type = @Vector(3, f32), .minValue = .{-10, -10, -10}, .maxValue = .{10, 10, 10}, .defaultValue = .{2, 2, 2}}, comptime background: struct{comptime type: type = @Vector(3, f32), comptime minValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0, 0}, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}, comptime defaultValue: struct{comptime comptime_float = 0.3, comptime comptime_float = 0.33, comptime comptime_float = 0.35} = .{0.3, 0.33, 0.35}, comptime aeUIControl: *const [7:0]u8 = "aeColor"} = .{.type = @Vector(3, f32), .minValue = .{0, 0, 0}, .maxValue = .{1, 1, 1}, .defaultValue = .{0.3, 0.33, 0.35}, .aeUIControl = "aeColor"}, comptime backgroundTransparency: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 1, comptime description: *const [24:0]u8 = "Background transparency."} = .{.type = f32, .minValue = 0, .maxValue = 1, .defaultValue = 1, .description = "Background transparency."}, comptime color: struct{comptime type: type = @Vector(3, f32), comptime minValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0, 0}, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}, comptime defaultValue: struct{comptime comptime_float = 0.63, comptime comptime_float = 0.08, comptime comptime_float = 0} = .{0.63, 0.08, 0}, comptime aeUIControl: *const [7:0]u8 = "aeColor"} = .{.type = @Vector(3, f32), .minValue = .{0, 0, 0}, .maxValue = .{1, 1, 1}, .defaultValue = .{0.63, 0.08, 0}, .aeUIControl = "aeColor"}, comptime colorSpread: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0.13} = .{.type = f32, .minValue = 0, .maxValue = 1, .defaultValue = 0.13}, comptime specularity: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0.5, comptime description: *const [11:0]u8 = "specularity"} = .{.type = f32, .minValue = 0, .maxValue = 1, .defaultValue = 0.5, .description = "specularity"}, comptime specularExponent: struct{comptime type: type = f32, comptime minValue: comptime_float = 0.1, comptime maxValue: comptime_float = 50, comptime defaultValue: comptime_float = 7, comptime description: *const [9:0]u8 = "shininess"} = .{.type = f32, .minValue = 0.1, .maxValue = 50, .defaultValue = 7, .description = "shininess"}, comptime maxIterations: struct{comptime type: type = i32, comptime minValue: comptime_int = 2, comptime maxValue: comptime_int = 14, comptime defaultValue: comptime_int = 8} = .{.type = i32, .minValue = 2, .maxValue = 14, .defaultValue = 8}, comptime size: struct{comptime type: type = @Vector(2, i32), comptime minValue: struct{comptime comptime_int = 100, comptime comptime_int = 100} = .{100, 100}, comptime maxValue: struct{comptime comptime_int = 2048, comptime comptime_int = 2048} = .{2048, 2048}, comptime defaultValue: struct{comptime comptime_int = 512, comptime comptime_int = 512} = .{512, 512}} = .{.type = @Vector(2, i32), .minValue = .{100, 100}, .maxValue = .{2048, 2048}, .defaultValue = .{512, 512}}}',length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"antialiasing",structure:N},{...e,type:8,isRequired:!1,slot:1,name:"ambientLight",structure:Q},{...e,type:8,isRequired:!1,slot:2,name:"ambientOcclusion",structure:W},{...e,type:8,isRequired:!1,slot:3,name:"shadows",structure:X},{...e,type:8,isRequired:!1,slot:4,name:"mu",structure:te},{...e,type:8,isRequired:!1,slot:5,name:"camera",structure:ae},{...e,type:8,isRequired:!1,slot:6,name:"light",structure:ne},{...e,type:8,isRequired:!1,slot:7,name:"background",structure:le},{...e,type:8,isRequired:!1,slot:8,name:"backgroundTransparency",structure:ye},{...e,type:8,isRequired:!1,slot:9,name:"color",structure:de},{...e,type:8,isRequired:!1,slot:10,name:"colorSpread",structure:be},{...e,type:8,isRequired:!1,slot:11,name:"specularity",structure:ge},{...e,type:8,isRequired:!1,slot:12,name:"specularExponent",structure:Ve},{...e,type:8,isRequired:!1,slot:13,name:"maxIterations",structure:Se},{...e,type:8,isRequired:!1,slot:14,name:"size",structure:Ue}],methods:[],template:{memory:{array:za},slots:{0:{structure:N,memory:{array:qa},slots:{0:{structure:Ke,memory:{array:s},address:-1431655766}}},1:{structure:Q,memory:{array:wa},slots:{0:{structure:De,memory:{array:s},address:-1431655766}}},2:{structure:W,memory:{array:Ua},slots:{0:{structure:Fe,memory:{array:s},address:-1431655766}}},3:{structure:X,memory:{array:Ra},slots:{0:{structure:Le,memory:{array:s},address:-1431655766}}},4:{structure:te,memory:{array:Aa},slots:{0:{structure:He,memory:{array:s},address:-1431655766}}},5:{structure:ae,memory:{array:Oa},slots:{0:{structure:We,memory:{array:s},address:-1431655766}}},6:{structure:ne,memory:{array:ja},slots:{0:{structure:et,memory:{array:s},address:-1431655766}}},7:{structure:le,memory:{array:xa},slots:{0:{structure:mt,memory:{array:s},address:-1431655766}}},8:{structure:ye,memory:{array:Pa},slots:{0:{structure:at,memory:{array:s},address:-1431655766}}},9:{structure:de,memory:{array:Ca},slots:{0:{structure:it,memory:{array:s},address:-1431655766}}},10:{structure:be,memory:{array:Ia},slots:{0:{structure:ct,memory:{array:s},address:-1431655766}}},11:{structure:ge,memory:{array:ka},slots:{0:{structure:nt,memory:{array:s},address:-1431655766}}},12:{structure:Ve,memory:{array:va},slots:{0:{structure:pt,memory:{array:s},address:-1431655766}}},13:{structure:Se,memory:{array:Ea},slots:{0:{structure:yt,memory:{array:s},address:-1431655766}}},14:{structure:Ue,memory:{array:Ta},slots:{0:{structure:gt,memory:{array:s},address:-1431655766}}}}}},slot:15});Object.assign(Re,{...m,type:11,name:'*struct{comptime antialiasing: struct{comptime type: type = bool, comptime defaultValue: bool = false, comptime description: *const [32:0]u8 = "Average 4 sample rays per pixel."} = .{.type = bool, .defaultValue = false, .description = "Average 4 sample rays per pixel."}, comptime ambientLight: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0.64} = .{.type = f32, .minValue = 0, .maxValue = 1, .defaultValue = 0.64}, comptime ambientOcclusion: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 3, comptime defaultValue: comptime_float = 1.3} = .{.type = f32, .minValue = 0, .maxValue = 3, .defaultValue = 1.3}, comptime shadows: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0} = .{.type = f32, .minValue = 0, .maxValue = 1, .defaultValue = 0}, comptime mu: struct{comptime type: type = @Vector(4, f32), comptime minValue: struct{comptime comptime_float = -2.1, comptime comptime_float = -3, comptime comptime_float = -3, comptime comptime_float = -1.5} = .{-2.1, -3, -3, -1.5}, comptime maxValue: struct{comptime comptime_float = 2.1, comptime comptime_float = 3, comptime comptime_float = 3, comptime comptime_float = 1.5} = .{2.1, 3, 3, 1.5}, comptime defaultValue: struct{comptime comptime_float = -0.04, comptime comptime_float = 0, comptime comptime_float = 0.72, comptime comptime_float = 0} = .{-0.04, 0, 0.72, 0}} = .{.type = @Vector(4, f32), .minValue = .{-2.1, -3, -3, -1.5}, .maxValue = .{2.1, 3, 3, 1.5}, .defaultValue = .{-0.04, 0, 0.72, 0}}, comptime camera: struct{comptime type: type = @Vector(4, f32), comptime minValue: struct{comptime comptime_float = -180, comptime comptime_float = -180, comptime comptime_float = -180, comptime comptime_float = 0} = .{-180, -180, -180, 0}, comptime maxValue: struct{comptime comptime_float = 180, comptime comptime_float = 180, comptime comptime_float = 180, comptime comptime_float = 20} = .{180, 180, 180, 20}, comptime defaultValue: struct{comptime comptime_float = -30, comptime comptime_float = 0, comptime comptime_float = -20, comptime comptime_float = 3} = .{-30, 0, -20, 3}} = .{.type = @Vector(4, f32), .minValue = .{-180, -180, -180, 0}, .maxValue = .{180, 180, 180, 20}, .defaultValue = .{-30, 0, -20, 3}}, comptime light: struct{comptime type: type = @Vector(3, f32), comptime minValue: struct{comptime comptime_float = -10, comptime comptime_float = -10, comptime comptime_float = -10} = .{-10, -10, -10}, comptime maxValue: struct{comptime comptime_float = 10, comptime comptime_float = 10, comptime comptime_float = 10} = .{10, 10, 10}, comptime defaultValue: struct{comptime comptime_float = 2, comptime comptime_float = 2, comptime comptime_float = 2} = .{2, 2, 2}} = .{.type = @Vector(3, f32), .minValue = .{-10, -10, -10}, .maxValue = .{10, 10, 10}, .defaultValue = .{2, 2, 2}}, comptime background: struct{comptime type: type = @Vector(3, f32), comptime minValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0, 0}, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}, comptime defaultValue: struct{comptime comptime_float = 0.3, comptime comptime_float = 0.33, comptime comptime_float = 0.35} = .{0.3, 0.33, 0.35}, comptime aeUIControl: *const [7:0]u8 = "aeColor"} = .{.type = @Vector(3, f32), .minValue = .{0, 0, 0}, .maxValue = .{1, 1, 1}, .defaultValue = .{0.3, 0.33, 0.35}, .aeUIControl = "aeColor"}, comptime backgroundTransparency: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 1, comptime description: *const [24:0]u8 = "Background transparency."} = .{.type = f32, .minValue = 0, .maxValue = 1, .defaultValue = 1, .description = "Background transparency."}, comptime color: struct{comptime type: type = @Vector(3, f32), comptime minValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0, 0}, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}, comptime defaultValue: struct{comptime comptime_float = 0.63, comptime comptime_float = 0.08, comptime comptime_float = 0} = .{0.63, 0.08, 0}, comptime aeUIControl: *const [7:0]u8 = "aeColor"} = .{.type = @Vector(3, f32), .minValue = .{0, 0, 0}, .maxValue = .{1, 1, 1}, .defaultValue = .{0.63, 0.08, 0}, .aeUIControl = "aeColor"}, comptime colorSpread: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0.13} = .{.type = f32, .minValue = 0, .maxValue = 1, .defaultValue = 0.13}, comptime specularity: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0.5, comptime description: *const [11:0]u8 = "specularity"} = .{.type = f32, .minValue = 0, .maxValue = 1, .defaultValue = 0.5, .description = "specularity"}, comptime specularExponent: struct{comptime type: type = f32, comptime minValue: comptime_float = 0.1, comptime maxValue: comptime_float = 50, comptime defaultValue: comptime_float = 7, comptime description: *const [9:0]u8 = "shininess"} = .{.type = f32, .minValue = 0.1, .maxValue = 50, .defaultValue = 7, .description = "shininess"}, comptime maxIterations: struct{comptime type: type = i32, comptime minValue: comptime_int = 2, comptime maxValue: comptime_int = 14, comptime defaultValue: comptime_int = 8} = .{.type = i32, .minValue = 2, .maxValue = 14, .defaultValue = 8}, comptime size: struct{comptime type: type = @Vector(2, i32), comptime minValue: struct{comptime comptime_int = 100, comptime comptime_int = 100} = .{100, 100}, comptime maxValue: struct{comptime comptime_int = 2048, comptime comptime_int = 2048} = .{2048, 2048}, comptime defaultValue: struct{comptime comptime_int = 512, comptime comptime_int = 512} = .{512, 512}} = .{.type = @Vector(2, i32), .minValue = .{100, 100}, .maxValue = .{2048, 2048}, .defaultValue = .{512, 512}}}',length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ht}],methods:[],template:null},slot:14});const Ba=new Uint8Array([]);Object.assign(Vt,{...m,type:2,name:"@TypeOf(.{})",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Ba}}},slot:17});Object.assign(Ae,{...m,type:11,name:"*@TypeOf(.{})",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Vt}],methods:[],template:null},slot:16});const Ka=new Uint8Array([]),Da=new Uint8Array([248,30,16,0]),Fa=new Uint8Array([4,0,0,0]);Object.assign(St,{...m,type:2,name:"struct{comptime channels: comptime_int = 4}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:a}],methods:[],template:{memory:{array:Ka},slots:{0:{structure:a,memory:{array:Da},slots:{0:{structure:o,memory:{array:Fa},address:1056504}}}}}},slot:70});Object.assign(Oe,{...m,type:11,name:"*const struct{comptime channels: comptime_int = 4}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:St}],methods:[],template:null},slot:69});const La=new Uint8Array([]),Ma=new Uint8Array([170,170,170,170]);Object.assign(zt,{...m,type:2,name:"struct{comptime dst: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:Oe}],methods:[],template:{memory:{array:La},slots:{0:{structure:Oe,memory:{array:Ma},slots:{0:{structure:St,memory:{array:s},address:-1431655766}}}}}},slot:19});Object.assign(je,{...m,type:11,name:"*struct{comptime dst: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:zt}],methods:[],template:null},slot:18});const $a=new Uint8Array([]),Ga=new Uint8Array([]),Ha=new Uint8Array([196,250,15,0]),Ja=new Uint8Array([107,140,16,0]),Na=new Uint8Array([99,111,109,46,115,117,98,98,108,117,101,46,102,105,108,116,101,114,115,0]),Qa=new Uint8Array([4,251,15,0]),Wa=new Uint8Array([95,140,16,0]),Xa=new Uint8Array([84,111,109,32,66,101,100,100,97,114,100,0]),Ya=new Uint8Array([68,251,15,0]),Za=new Uint8Array([1,0,0,0]),eo=new Uint8Array([156,251,15,0]),to=new Uint8Array([67,140,16,0]),mo=new Uint8Array([81,117,97,116,101,114,110,105,111,110,32,74,117,108,105,97,32,82,97,121,32,84,114,97,99,101,114,0]),ro=new Uint8Array([170,170,170,170]),so=new Uint8Array([170,170,170,170]),ao=new Uint8Array([170,170,170,170]);Object.assign(It,{...m,type:2,name:"quaternion-julia.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:$a}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:M},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:$},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:U},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:G},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:Re},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:Ae},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:je}],methods:[],template:{memory:{array:Ga},slots:{0:{structure:M,memory:{array:Ha},slots:{0:{structure:ke,memory:{array:Ja},slots:{0:{structure:Ie,memory:{array:Na},address:1084523}}}}},1:{structure:$,memory:{array:Qa},slots:{0:{structure:j,memory:{array:Wa},slots:{0:{structure:P,memory:{array:Xa},address:1084511}}}}},2:{structure:U,memory:{array:Ya},slots:{0:{structure:o,memory:{array:Za}}}},3:{structure:G,memory:{array:eo},slots:{0:{structure:Ee,memory:{array:to},slots:{0:{structure:ve,memory:{array:mo},address:1084483}}}}},4:{structure:Re,memory:{array:ro},slots:{0:{structure:ht,memory:{array:s},address:-1431655766}}},5:{structure:Ae,memory:{array:so},slots:{0:{structure:Vt,memory:{array:s},address:-1431655766}}},6:{structure:je,memory:{array:ao},slots:{0:{structure:zt,memory:{array:s},address:-1431655766}}}}}},slot:1});const oo=new Uint8Array([]);Object.assign(E,{...m,type:2,name:"quaternion-julia.KernelInput(u8,quaternion-julia.kernel)",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:oo}}},slot:20});Object.assign(qt,{...m,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:25});Object.assign(wt,{...m,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:qt}],methods:[],template:null},slot:24});Object.assign(Ut,{...m,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:wt}],methods:[],template:null},slot:23});Object.assign(d,{...m,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:d}],methods:[],template:null},slot:26});const io=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(kt,{...m,type:9,name:"quaternion-julia.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:o},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:o}],methods:[],template:{memory:{array:io}}},slot:27});Object.assign(xe,{...m,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:xe}],methods:[],template:null},slot:29});const co=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),no=new Uint8Array([]),uo=new Uint8Array([144,249,15,0]),lo=new Uint8Array([4,0,0,0]);Object.assign(Pe,{...m,type:2,name:"quaternion-julia.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Ut},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:d},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:d},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:kt},{...e,type:1,isRequired:!1,bitOffset:168,bitSize:1,byteSize:1,slot:4,name:"premultiplied",structure:S},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:5,name:"offset",structure:xe}],methods:[],template:{memory:{array:co}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:qt},{...e,type:7,isRequired:!1,name:"FPixel",structure:z},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:U}],methods:[],template:{memory:{array:no},slots:{0:{structure:U,memory:{array:uo},slots:{0:{structure:o,memory:{array:lo}}}}}}},slot:22});const po=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),yo=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),fo=new Uint8Array([0,0,0,0,0,0,0,0]),Xt=new Uint8Array([]);Object.assign(T,{...m,type:2,name:"quaternion-julia.KernelOutput(u8,quaternion-julia.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:Pe}],methods:[],template:{memory:{array:po},slots:{0:{structure:Pe,memory:{array:yo},slots:{0:{structure:Ut,memory:{array:fo},slots:{0:{structure:wt,memory:{array:Xt}}}}}}}}},slot:21});const bo=new Uint8Array([10,215,35,189,0,0,0,0,236,81,56,63,0,0,0,0,0,0,240,193,0,0,0,0,0,0,160,193,0,0,64,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,0,154,153,153,62,195,245,168,62,51,51,179,62,0,0,0,0,174,71,33,63,10,215,163,61,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,10,215,35,63,102,102,166,63,0,0,0,0,0,0,128,63,184,30,5,62,0,0,0,63,0,0,224,64,8,0,0,0,0,0,0,0,0,0,0,0]);Object.assign(B,{...m,type:2,name:"quaternion-julia.KernelParameters(quaternion-julia.kernel)",length:1,byteSize:128,align:4,instance:{members:[{...e,type:1,isRequired:!1,bitOffset:960,bitSize:1,byteSize:1,slot:0,name:"antialiasing",structure:S},{...e,type:4,isRequired:!1,bitOffset:704,bitSize:32,byteSize:4,slot:1,name:"ambientLight",structure:c},{...e,type:4,isRequired:!1,bitOffset:736,bitSize:32,byteSize:4,slot:2,name:"ambientOcclusion",structure:c},{...e,type:4,isRequired:!1,bitOffset:768,bitSize:32,byteSize:4,slot:3,name:"shadows",structure:c},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:128,byteSize:16,slot:4,name:"mu",structure:z},{...e,type:6,isRequired:!1,bitOffset:128,bitSize:128,byteSize:16,slot:5,name:"camera",structure:z},{...e,type:6,isRequired:!1,bitOffset:256,bitSize:96,byteSize:16,slot:6,name:"light",structure:V},{...e,type:6,isRequired:!1,bitOffset:384,bitSize:96,byteSize:16,slot:7,name:"background",structure:V},{...e,type:4,isRequired:!1,bitOffset:800,bitSize:32,byteSize:4,slot:8,name:"backgroundTransparency",structure:c},{...e,type:6,isRequired:!1,bitOffset:512,bitSize:96,byteSize:16,slot:9,name:"color",structure:V},{...e,type:4,isRequired:!1,bitOffset:832,bitSize:32,byteSize:4,slot:10,name:"colorSpread",structure:c},{...e,type:4,isRequired:!1,bitOffset:864,bitSize:32,byteSize:4,slot:11,name:"specularity",structure:c},{...e,type:4,isRequired:!1,bitOffset:896,bitSize:32,byteSize:4,slot:12,name:"specularExponent",structure:c},{...e,type:2,isRequired:!1,bitOffset:928,bitSize:32,byteSize:4,slot:13,name:"maxIterations",structure:o},{...e,type:6,isRequired:!1,bitOffset:640,bitSize:64,byteSize:8,slot:14,name:"size",structure:ft}],methods:[],template:{memory:{array:bo}}},slot:30});Object.assign(vt,{...m,type:8,name:"@typeInfo(@typeInfo(@TypeOf(quaternion-julia.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:71});Object.assign(Et,{...m,type:7,name:"@typeInfo(@typeInfo(@TypeOf(quaternion-julia.createOutput)).Fn.return_type.?).ErrorUnion.error_set!quaternion-julia.KernelOutput(u8,quaternion-julia.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:T},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:vt}],methods:[],template:null},slot:37});Object.assign(Tt,{...m,type:3,name:"createOutput",length:1,byteSize:176,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:1024,bitSize:32,byteSize:4,slot:0,name:"0",structure:d},{...e,type:3,bitOffset:1056,bitSize:32,byteSize:4,slot:1,name:"1",structure:d},{...e,type:6,bitOffset:1408,bitSize:0,byteSize:0,slot:2,name:"2",structure:E},{...e,type:6,bitOffset:0,bitSize:1024,byteSize:128,slot:3,name:"3",structure:B},{...e,type:6,bitOffset:1088,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Et}],methods:[],template:null},slot:35});Object.assign(Bt,{...m,type:8,name:"@typeInfo(@typeInfo(@TypeOf(quaternion-julia.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:72});Object.assign(Kt,{...m,type:7,name:"@typeInfo(@typeInfo(@TypeOf(quaternion-julia.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set!quaternion-julia.KernelOutput(u8,quaternion-julia.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:T},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Bt}],methods:[],template:null},slot:38});Object.assign(Dt,{...m,type:3,name:"createPartialOutput",length:1,byteSize:176,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:1024,bitSize:32,byteSize:4,slot:0,name:"0",structure:d},{...e,type:3,bitOffset:1056,bitSize:32,byteSize:4,slot:1,name:"1",structure:d},{...e,type:3,bitOffset:1088,bitSize:32,byteSize:4,slot:2,name:"2",structure:d},{...e,type:3,bitOffset:1120,bitSize:32,byteSize:4,slot:3,name:"3",structure:d},{...e,type:6,bitOffset:1408,bitSize:0,byteSize:0,slot:4,name:"4",structure:E},{...e,type:6,bitOffset:0,bitSize:1024,byteSize:128,slot:5,name:"5",structure:B},{...e,type:6,bitOffset:1152,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Kt}],methods:[],template:null},slot:36});const _o={argStruct:Tt,thunk:1,name:"createOutput"},go={argStruct:Dt,thunk:4,name:"createPartialOutput"};Object.assign(Ft,{...m,type:2,name:"quaternion-julia",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Xt}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:It},{...e,type:7,isRequired:!1,name:"Input",structure:E},{...e,type:7,isRequired:!1,name:"Output",structure:T},{...e,type:7,isRequired:!1,name:"Parameters",structure:B}],methods:[_o,go],template:null},slot:0});const ho=[b,Ie,ke,M,P,j,$,o,U,ve,Ee,G,S,H,Te,Be,J,Ke,N,c,r,t,De,Q,Fe,W,Le,X,z,Me,Y,$e,Z,Ge,ee,He,te,Je,me,Ne,re,Qe,se,We,ae,V,Xe,oe,Ye,ie,Ze,ce,et,ne,C,R,I,A,tt,ue,k,v,O,mt,le,rt,st,pe,at,ye,ot,fe,it,de,ct,be,_e,nt,ge,ut,lt,he,pt,Ve,a,yt,Se,ft,dt,ze,bt,qe,_t,we,gt,Ue,ht,Re,Vt,Ae,St,Oe,zt,je,It,E,qt,wt,Ut,d,kt,xe,Pe,T,B,vt,Et,Tt,Bt,Kt,Dt,Ft],Vo=gm(ho),So=Ft.constructor,zo=(async()=>{const l=new URL("quaternion-julia-2fff4ce5.wasm",import.meta.url).href;return fetch(l)})();hm(zo,{...Vo,writeBack:!0});const{createOutput:xo,createPartialOutput:qo,kernel:Ct,Input:wo,Output:Po,Parameters:Co}=So;function Uo(l,f,n,i,u={},q={}){if(Array.isArray(u)){const h=u;u={};for(const[_,w]of Object.keys(Ct.inputImages).entries())u[w]=h[_]}const K=new wo(void 0),D=Object.keys(Ct.inputImages),p=[];let x;for(const h of D){let _=u[h];if(_||(D.length===1&&["data","width","height"].every(w=>!!u[w])?_=u:p.push(h)),K[h]=_,x){if(_.colorSpace!==x)throw new Error(`Input images must all use the same color space: ${x}`)}else x=_.colorSpace}if(p.length>0)throw new Error(`Missing input image${p.length>1?"s":""}: ${p.join(", ")}`);const Rt=qo(l,f,n,i,K,q),Lt=h=>{const _=Object.keys(h),w={};for(const Mt of _){const{data:{typedArray:F},width:$t,height:Zt}=h[Mt];let L;if(typeof ImageData=="function"){const em=new Uint8ClampedArray(F.buffer,F.byteOffset,F.byteLength);L=new ImageData(em,$t,i,{colorSpace:x})}else L={data:F,width:$t,height:Zt};if(_.length===1)return L;w[Mt]=L}return w};return Rt[Symbol.toStringTag]==="Promise"?Rt.then(Lt):Lt(Rt)}function Ro(){const l={};for(let[f,n]of Object.entries(Ct)){if(f==="parameters"){const i={};for(const[u,q]of Object.entries(n)){const K=i[u]={};for(let[D,p]of Object.entries(q))typeof p=="object"?"string"in p?p=p.string:p=Yt(p):typeof p=="function"&&(p=Ao(p.name)),K[D]=p}n=i}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());l[f]=n}return l}function Yt(l){const f=[];for(let[n,i]of Object.entries(l))typeof i=="object"&&(i=Yt(i)),f[n]=i;return f}function Ao(l){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[l]}onmessage=l=>{const[f,n,...i]=l.data;Oo(f,i).then(([u,q])=>{postMessage([f,n,u],{transfer:q})}).catch(u=>{postMessage(["error",n,u])})};async function Oo(l,f){switch(l){case"getKernelInfo":return[Ro(...f)];case"createPartialImageData":const i=await Uo(...f),u=[];if("data"in i&&"width"in i&&"height"in i)u.push(i.data.buffer);else for(const q of Object.entries(i))u.push(i.data.buffer);return[i,u];default:throw new Error(`Unknown function: ${l}`)}}
