import{u as St,a as gt,b as ht,c as zt,d as wt,e as At,f as Ut,g as Rt,h as qt,i as Ot,j as jt,k as Pt,l as Vt,n as Ct,m as kt,r as It,o as xt,p as vt,q as Et}from"./index-357cbc86.js";St();gt();ht();zt();wt();At();Ut();Rt();qt();Ot();jt();Pt();Vt();Ct();kt();It();xt();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},g={},ce={},be={},x={},pe={},de={},v={},i={},n={},fe={},Se={},E={},ge={},he={},D={},ze={},K={},we={},F={},Ae={},Ue={},M={},Re={},T={},l={},A={},s={},r={},qe={},_={},Oe={},H={},je={},L={},Pe={},$={},Ve={},B={},Ce={},N={},ke={},G={},Ie={},J={},xe={},Q={},ve={},W={},Ee={},X={},d={},U={},q={},w={},De={},Y={},Ke={},Z={},Fe={},ee={},Me={},Te={},te={},_e={},re={},He={},se={},Le={},ae={},$e={},ne={},Be={},ie={},Ne={},ue={},Ge={},oe={},Je={},me={},et={},O={},Qe={},We={},Xe={},p={},tt={},le={},rt={},ye={},j={},P={},st={},at={},nt={},it={},ut={},ot={},mt={};Object.assign(g,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:5});Object.assign(ce,{...t,type:1,name:"[19:0]u8",length:19,byteSize:20,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:4});Object.assign(be,{...t,type:11,name:"*const [19:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:3});Object.assign(x,{...t,type:11,name:"*const *const [19:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:2});Object.assign(pe,{...t,type:1,name:"[11:0]u8",length:11,byteSize:12,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:8});Object.assign(de,{...t,type:11,name:"*const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:7});Object.assign(v,{...t,type:11,name:"*const *const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:de}],methods:[],template:null},slot:6});Object.assign(i,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:i}],methods:[],template:null},slot:10});Object.assign(n,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:i}],methods:[],template:null},slot:9});Object.assign(fe,{...t,type:1,name:"[38:0]u8",length:38,byteSize:39,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:13});Object.assign(Se,{...t,type:11,name:"*const [38:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:12});Object.assign(E,{...t,type:11,name:"*const *const [38:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Se}],methods:[],template:null},slot:11});Object.assign(ge,{...t,type:13,name:"@Vector(2, i32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,structure:i}],methods:[],template:null},slot:30});const Dt=new Uint8Array([]),Kt=new Uint8Array([144,249,15,0]),Ft=new Uint8Array([100,0,0,0]),Mt=new Uint8Array([112,248,15,0]),Tt=new Uint8Array([100,0,0,0]);Object.assign(he,{...t,type:2,name:"Struct0044",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:n},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:n}],methods:[],template:{memory:{array:Dt},slots:{0:{structure:n,memory:{array:Kt},slots:{0:{structure:i,memory:{array:Ft}}}},1:{structure:n,memory:{array:Mt},slots:{0:{structure:i,memory:{array:Tt}}}}}}},slot:69});Object.assign(D,{...t,type:11,name:"Struct0032",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:he}],methods:[],template:null},slot:68});const _t=new Uint8Array([]),Ht=new Uint8Array([144,249,15,0]),Lt=new Uint8Array([232,3,0,0]),$t=new Uint8Array([112,248,15,0]),Bt=new Uint8Array([232,3,0,0]);Object.assign(ze,{...t,type:2,name:"Struct0045",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:n},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:n}],methods:[],template:{memory:{array:_t},slots:{0:{structure:n,memory:{array:Ht},slots:{0:{structure:i,memory:{array:Lt}}}},1:{structure:n,memory:{array:$t},slots:{0:{structure:i,memory:{array:Bt}}}}}}},slot:71});Object.assign(K,{...t,type:11,name:"Struct0033",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ze}],methods:[],template:null},slot:70});const Nt=new Uint8Array([]),Gt=new Uint8Array([144,249,15,0]),Jt=new Uint8Array([0,2,0,0]),Qt=new Uint8Array([112,248,15,0]),Wt=new Uint8Array([0,2,0,0]);Object.assign(we,{...t,type:2,name:"Struct0046",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:n},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:n}],methods:[],template:{memory:{array:Nt},slots:{0:{structure:n,memory:{array:Gt},slots:{0:{structure:i,memory:{array:Jt}}}},1:{structure:n,memory:{array:Qt},slots:{0:{structure:i,memory:{array:Wt}}}}}}},slot:73});Object.assign(F,{...t,type:11,name:"Struct0034",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:we}],methods:[],template:null},slot:72});Object.assign(Ae,{...t,type:1,name:"[17:0]u8",length:17,byteSize:18,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:76});Object.assign(Ue,{...t,type:11,name:"*const [17:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ae}],methods:[],template:null},slot:75});Object.assign(M,{...t,type:11,name:"*const *const [17:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ue}],methods:[],template:null},slot:74});const Xt=new Uint8Array([]),Yt=new Uint8Array([170,170,170,170]),a=new Uint8Array([]),Zt=new Uint8Array([170,170,170,170]),er=new Uint8Array([170,170,170,170]),tr=new Uint8Array([96,249,15,0]),rr=new Uint8Array([127,34,16,0]),sr=new Uint8Array([79,117,116,112,117,116,32,105,109,97,103,101,32,115,105,122,101,0]);Object.assign(Re,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:ge},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:D},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:K},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:F},{...e,type:8,isRequired:!1,slot:3,name:"aeDisplayName",structure:M}],methods:[],template:{memory:{array:Xt},slots:{0:{structure:D,memory:{array:Yt},slots:{0:{structure:he,memory:{array:a},address:-1431655766}}},1:{structure:K,memory:{array:Zt},slots:{0:{structure:ze,memory:{array:a},address:-1431655766}}},2:{structure:F,memory:{array:er},slots:{0:{structure:we,memory:{array:a},address:-1431655766}}},3:{structure:M,memory:{array:tr},slots:{0:{structure:Ue,memory:{array:rr},slots:{0:{structure:Ae,memory:{array:sr},address:1057407}}}}}}}},slot:40});Object.assign(T,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Re}],methods:[],template:null},slot:39});Object.assign(l,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:l}],methods:[],template:null},slot:32});Object.assign(A,{...t,type:13,name:"@Vector(3, f32)",length:3,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:l}],methods:[],template:null},slot:31});Object.assign(s,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:s}],methods:[],template:null},slot:90});Object.assign(r,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:s}],methods:[],template:null},slot:89});const ar=new Uint8Array([]),nr=new Uint8Array([224,249,15,0]),ir=new Uint8Array([0,0,0,0,0,0,89,192]),ur=new Uint8Array([56,250,15,0]),or=new Uint8Array([0,0,0,0,0,0,0,0]),mr=new Uint8Array([144,250,15,0]),lr=new Uint8Array([0,0,0,0,0,0,89,192]);Object.assign(qe,{...t,type:2,name:"Struct0047",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r}],methods:[],template:{memory:{array:ar},slots:{0:{structure:r,memory:{array:nr},slots:{0:{structure:s,memory:{array:ir}}}},1:{structure:r,memory:{array:ur},slots:{0:{structure:s,memory:{array:or}}}},2:{structure:r,memory:{array:mr},slots:{0:{structure:s,memory:{array:lr}}}}}}},slot:78});Object.assign(_,{...t,type:11,name:"Struct0035",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:qe}],methods:[],template:null},slot:77});const yr=new Uint8Array([]),cr=new Uint8Array([224,249,15,0]),br=new Uint8Array([0,0,0,0,0,0,89,64]),pr=new Uint8Array([56,250,15,0]),dr=new Uint8Array([0,0,0,0,0,0,52,64]),fr=new Uint8Array([144,250,15,0]),Sr=new Uint8Array([0,0,0,0,0,0,89,64]);Object.assign(Oe,{...t,type:2,name:"Struct0048",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r}],methods:[],template:{memory:{array:yr},slots:{0:{structure:r,memory:{array:cr},slots:{0:{structure:s,memory:{array:br}}}},1:{structure:r,memory:{array:pr},slots:{0:{structure:s,memory:{array:dr}}}},2:{structure:r,memory:{array:fr},slots:{0:{structure:s,memory:{array:Sr}}}}}}},slot:80});Object.assign(H,{...t,type:11,name:"Struct0036",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Oe}],methods:[],template:null},slot:79});const gr=new Uint8Array([]),hr=new Uint8Array([224,249,15,0]),zr=new Uint8Array([0,0,0,0,0,0,24,192]),wr=new Uint8Array([56,250,15,0]),Ar=new Uint8Array([0,0,0,0,0,0,16,64]),Ur=new Uint8Array([144,250,15,0]),Rr=new Uint8Array([0,0,0,0,0,0,24,64]);Object.assign(je,{...t,type:2,name:"Struct0049",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r}],methods:[],template:{memory:{array:gr},slots:{0:{structure:r,memory:{array:hr},slots:{0:{structure:s,memory:{array:zr}}}},1:{structure:r,memory:{array:wr},slots:{0:{structure:s,memory:{array:Ar}}}},2:{structure:r,memory:{array:Ur},slots:{0:{structure:s,memory:{array:Rr}}}}}}},slot:82});Object.assign(L,{...t,type:11,name:"Struct0037",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:je}],methods:[],template:null},slot:81});const qr=new Uint8Array([]),Or=new Uint8Array([170,170,170,170]),jr=new Uint8Array([170,170,170,170]),Pr=new Uint8Array([170,170,170,170]);Object.assign(Pe,{...t,type:2,name:"Struct0020",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:A},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:_},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:H},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:L}],methods:[],template:{memory:{array:qr},slots:{0:{structure:_,memory:{array:Or},slots:{0:{structure:qe,memory:{array:a},address:-1431655766}}},1:{structure:H,memory:{array:jr},slots:{0:{structure:Oe,memory:{array:a},address:-1431655766}}},2:{structure:L,memory:{array:Pr},slots:{0:{structure:je,memory:{array:a},address:-1431655766}}}}}},slot:42});Object.assign($,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Pe}],methods:[],template:null},slot:41});const Vr=new Uint8Array([]),Cr=new Uint8Array([224,249,15,0]),kr=new Uint8Array([0,0,0,0,0,0,20,192]),Ir=new Uint8Array([56,250,15,0]),xr=new Uint8Array([0,0,0,0,0,0,240,191]),vr=new Uint8Array([144,250,15,0]),Er=new Uint8Array([0,0,0,0,0,0,20,192]);Object.assign(Ve,{...t,type:2,name:"Struct0050",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r}],methods:[],template:{memory:{array:Vr},slots:{0:{structure:r,memory:{array:Cr},slots:{0:{structure:s,memory:{array:kr}}}},1:{structure:r,memory:{array:Ir},slots:{0:{structure:s,memory:{array:xr}}}},2:{structure:r,memory:{array:vr},slots:{0:{structure:s,memory:{array:Er}}}}}}},slot:84});Object.assign(B,{...t,type:11,name:"Struct0038",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ve}],methods:[],template:null},slot:83});const Dr=new Uint8Array([]),Kr=new Uint8Array([224,249,15,0]),Fr=new Uint8Array([0,0,0,0,0,0,20,64]),Mr=new Uint8Array([56,250,15,0]),Tr=new Uint8Array([0,0,0,0,0,0,240,63]),_r=new Uint8Array([144,250,15,0]),Hr=new Uint8Array([0,0,0,0,0,0,20,64]);Object.assign(Ce,{...t,type:2,name:"Struct0051",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r}],methods:[],template:{memory:{array:Dr},slots:{0:{structure:r,memory:{array:Kr},slots:{0:{structure:s,memory:{array:Fr}}}},1:{structure:r,memory:{array:Mr},slots:{0:{structure:s,memory:{array:Tr}}}},2:{structure:r,memory:{array:_r},slots:{0:{structure:s,memory:{array:Hr}}}}}}},slot:86});Object.assign(N,{...t,type:11,name:"Struct0039",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ce}],methods:[],template:null},slot:85});const Lr=new Uint8Array([]),$r=new Uint8Array([224,249,15,0]),Br=new Uint8Array([0,0,0,0,0,0,0,0]),Nr=new Uint8Array([56,250,15,0]),Gr=new Uint8Array([0,0,0,0,0,0,0,0]),Jr=new Uint8Array([144,250,15,0]),Qr=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(ke,{...t,type:2,name:"Struct0052",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r}],methods:[],template:{memory:{array:Lr},slots:{0:{structure:r,memory:{array:$r},slots:{0:{structure:s,memory:{array:Br}}}},1:{structure:r,memory:{array:Nr},slots:{0:{structure:s,memory:{array:Gr}}}},2:{structure:r,memory:{array:Jr},slots:{0:{structure:s,memory:{array:Qr}}}}}}},slot:88});Object.assign(G,{...t,type:11,name:"Struct0040",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ke}],methods:[],template:null},slot:87});const Wr=new Uint8Array([]),Xr=new Uint8Array([170,170,170,170]),Yr=new Uint8Array([170,170,170,170]),Zr=new Uint8Array([170,170,170,170]);Object.assign(Ie,{...t,type:2,name:"Struct0021",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:A},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:B},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:N},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:G}],methods:[],template:{memory:{array:Wr},slots:{0:{structure:B,memory:{array:Xr},slots:{0:{structure:Ve,memory:{array:a},address:-1431655766}}},1:{structure:N,memory:{array:Yr},slots:{0:{structure:Ce,memory:{array:a},address:-1431655766}}},2:{structure:G,memory:{array:Zr},slots:{0:{structure:ke,memory:{array:a},address:-1431655766}}}}}},slot:44});Object.assign(J,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ie}],methods:[],template:null},slot:43});const es=new Uint8Array([]),ts=new Uint8Array([144,250,15,0]),rs=new Uint8Array([0,0,0,0,0,128,102,192]),ss=new Uint8Array([40,248,15,0]),as=new Uint8Array([0,0,0,0,0,128,102,64]),ns=new Uint8Array([160,249,15,0]),is=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(xe,{...t,type:2,name:"Struct0022",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:l},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:es},slots:{0:{structure:r,memory:{array:ts},slots:{0:{structure:s,memory:{array:rs}}}},1:{structure:r,memory:{array:ss},slots:{0:{structure:s,memory:{array:as}}}},2:{structure:r,memory:{array:ns},slots:{0:{structure:s,memory:{array:is}}}}}}},slot:46});Object.assign(Q,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:xe}],methods:[],template:null},slot:45});const us=new Uint8Array([]),os=new Uint8Array([144,250,15,0]),ms=new Uint8Array([0,0,0,0,0,0,36,64]),ls=new Uint8Array([40,248,15,0]),ys=new Uint8Array([0,0,0,0,0,0,89,64]),cs=new Uint8Array([160,249,15,0]),bs=new Uint8Array([0,0,0,0,0,0,57,64]);Object.assign(ve,{...t,type:2,name:"Struct0023",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:l},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:us},slots:{0:{structure:r,memory:{array:os},slots:{0:{structure:s,memory:{array:ms}}}},1:{structure:r,memory:{array:ls},slots:{0:{structure:s,memory:{array:ys}}}},2:{structure:r,memory:{array:cs},slots:{0:{structure:s,memory:{array:bs}}}}}}},slot:48});Object.assign(W,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ve}],methods:[],template:null},slot:47});const ps=new Uint8Array([]),ds=new Uint8Array([144,250,15,0]),fs=new Uint8Array([0,0,0,0,0,0,240,63]),Ss=new Uint8Array([40,248,15,0]),gs=new Uint8Array([0,0,0,0,0,0,36,64]),hs=new Uint8Array([160,249,15,0]),zs=new Uint8Array([0,0,0,0,0,0,28,64]);Object.assign(Ee,{...t,type:2,name:"Struct0024",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:l},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:ps},slots:{0:{structure:r,memory:{array:ds},slots:{0:{structure:s,memory:{array:fs}}}},1:{structure:r,memory:{array:Ss},slots:{0:{structure:s,memory:{array:gs}}}},2:{structure:r,memory:{array:hs},slots:{0:{structure:s,memory:{array:zs}}}}}}},slot:50});Object.assign(X,{...t,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ee}],methods:[],template:null},slot:49});Object.assign(d,{...t,name:"bool",length:1,byteSize:1,align:0,instance:{members:[{...e,type:1,isRequired:!1,bitOffset:0,bitSize:1,byteSize:1,structure:d}],methods:[],template:null},slot:33});Object.assign(U,{...t,type:11,name:"*const bool",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:d}],methods:[],template:null},slot:91});const ws=new Uint8Array([]),As=new Uint8Array([67,245,15,0]),Us=new Uint8Array([0]);Object.assign(q,{...t,type:2,name:"Struct0025",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:d},{...e,type:8,isRequired:!1,slot:0,name:"defaultValue",structure:U}],methods:[],template:{memory:{array:ws},slots:{0:{structure:U,memory:{array:As},slots:{0:{structure:d,memory:{array:Us}}}}}}},slot:52});Object.assign(w,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:q}],methods:[],template:null},slot:51});const Rs=new Uint8Array([]),qs=new Uint8Array([144,250,15,0]),Os=new Uint8Array([154,153,153,153,153,153,185,191]),js=new Uint8Array([40,248,15,0]),Ps=new Uint8Array([0,0,0,0,0,0,240,63]),Vs=new Uint8Array([160,249,15,0]),Cs=new Uint8Array([195,245,40,92,143,194,213,63]);Object.assign(De,{...t,type:2,name:"Struct0026",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:l},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:Rs},slots:{0:{structure:r,memory:{array:qs},slots:{0:{structure:s,memory:{array:Os}}}},1:{structure:r,memory:{array:js},slots:{0:{structure:s,memory:{array:Ps}}}},2:{structure:r,memory:{array:Vs},slots:{0:{structure:s,memory:{array:Cs}}}}}}},slot:54});Object.assign(Y,{...t,type:11,name:"Struct0013",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:De}],methods:[],template:null},slot:53});const ks=new Uint8Array([]),Is=new Uint8Array([16,249,15,0]),xs=new Uint8Array([0,0,0,0]),vs=new Uint8Array([120,249,15,0]),Es=new Uint8Array([2,0,0,0]),Ds=new Uint8Array([184,249,15,0]),Ks=new Uint8Array([0,0,0,0]);Object.assign(Ke,{...t,type:2,name:"Struct0027",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:i},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:n},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:n},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:n}],methods:[],template:{memory:{array:ks},slots:{0:{structure:n,memory:{array:Is},slots:{0:{structure:i,memory:{array:xs}}}},1:{structure:n,memory:{array:vs},slots:{0:{structure:i,memory:{array:Es}}}},2:{structure:n,memory:{array:Ds},slots:{0:{structure:i,memory:{array:Ks}}}}}}},slot:56});Object.assign(Z,{...t,type:11,name:"Struct0014",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ke}],methods:[],template:null},slot:55});const Fs=new Uint8Array([]),Ms=new Uint8Array([144,250,15,0]),Ts=new Uint8Array([1]);Object.assign(Fe,{...t,type:2,name:"Struct0028",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:d},{...e,type:8,isRequired:!1,slot:0,name:"defaultValue",structure:U}],methods:[],template:{memory:{array:Fs},slots:{0:{structure:U,memory:{array:Ms},slots:{0:{structure:d,memory:{array:Ts}}}}}}},slot:58});Object.assign(ee,{...t,type:11,name:"Struct0015",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Fe}],methods:[],template:null},slot:57});Object.assign(Me,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:l}],methods:[],template:null},slot:34});const _s=new Uint8Array([]),Hs=new Uint8Array([96,250,15,0]),Ls=new Uint8Array([0,0,0,0,0,0,0,0]),$s=new Uint8Array([152,250,15,0]),Bs=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(Te,{...t,type:2,name:"Struct0053",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:_s},slots:{0:{structure:r,memory:{array:Hs},slots:{0:{structure:s,memory:{array:Ls}}}},1:{structure:r,memory:{array:$s},slots:{0:{structure:s,memory:{array:Bs}}}}}}},slot:93});Object.assign(te,{...t,type:11,name:"Struct0041",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Te}],methods:[],template:null},slot:92});const Ns=new Uint8Array([]),Gs=new Uint8Array([96,250,15,0]),Js=new Uint8Array([0,0,0,0,0,128,86,64]),Qs=new Uint8Array([152,250,15,0]),Ws=new Uint8Array([0,0,0,0,0,128,118,64]);Object.assign(_e,{...t,type:2,name:"Struct0054",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Ns},slots:{0:{structure:r,memory:{array:Gs},slots:{0:{structure:s,memory:{array:Js}}}},1:{structure:r,memory:{array:Qs},slots:{0:{structure:s,memory:{array:Ws}}}}}}},slot:95});Object.assign(re,{...t,type:11,name:"Struct0042",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:_e}],methods:[],template:null},slot:94});const Xs=new Uint8Array([]),Ys=new Uint8Array([96,250,15,0]),Zs=new Uint8Array([0,0,0,0,0,0,44,64]),ea=new Uint8Array([152,250,15,0]),ta=new Uint8Array([0,0,0,0,0,128,111,64]);Object.assign(He,{...t,type:2,name:"Struct0055",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Xs},slots:{0:{structure:r,memory:{array:Ys},slots:{0:{structure:s,memory:{array:Zs}}}},1:{structure:r,memory:{array:ea},slots:{0:{structure:s,memory:{array:ta}}}}}}},slot:97});Object.assign(se,{...t,type:11,name:"Struct0043",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:He}],methods:[],template:null},slot:96});const ra=new Uint8Array([]),sa=new Uint8Array([170,170,170,170]),aa=new Uint8Array([170,170,170,170]),na=new Uint8Array([170,170,170,170]);Object.assign(Le,{...t,type:2,name:"Struct0029",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:Me},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:te},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:re},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:se}],methods:[],template:{memory:{array:ra},slots:{0:{structure:te,memory:{array:sa},slots:{0:{structure:Te,memory:{array:a},address:-1431655766}}},1:{structure:re,memory:{array:aa},slots:{0:{structure:_e,memory:{array:a},address:-1431655766}}},2:{structure:se,memory:{array:na},slots:{0:{structure:He,memory:{array:a},address:-1431655766}}}}}},slot:60});Object.assign(ae,{...t,type:11,name:"Struct0016",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Le}],methods:[],template:null},slot:59});const ia=new Uint8Array([]),ua=new Uint8Array([144,250,15,0]),oa=new Uint8Array([0,0,0,0,0,0,224,63]),ma=new Uint8Array([40,248,15,0]),la=new Uint8Array([0,0,0,0,0,0,36,64]),ya=new Uint8Array([160,249,15,0]),ca=new Uint8Array([0,0,0,0,0,0,12,64]);Object.assign($e,{...t,type:2,name:"Struct0030",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:l},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:ia},slots:{0:{structure:r,memory:{array:ua},slots:{0:{structure:s,memory:{array:oa}}}},1:{structure:r,memory:{array:ma},slots:{0:{structure:s,memory:{array:la}}}},2:{structure:r,memory:{array:ya},slots:{0:{structure:s,memory:{array:ca}}}}}}},slot:62});Object.assign(ne,{...t,type:11,name:"Struct0017",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:$e}],methods:[],template:null},slot:61});const ba=new Uint8Array([]),pa=new Uint8Array([170,170,170,170]),da=new Uint8Array([170,170,170,170]),fa=new Uint8Array([170,170,170,170]),Sa=new Uint8Array([170,170,170,170]),ga=new Uint8Array([170,170,170,170]),ha=new Uint8Array([170,170,170,170]),za=new Uint8Array([170,170,170,170]),wa=new Uint8Array([170,170,170,170]),Aa=new Uint8Array([170,170,170,170]),Ua=new Uint8Array([170,170,170,170]),Ra=new Uint8Array([170,170,170,170]),qa=new Uint8Array([170,170,170,170]),Oa=new Uint8Array([170,170,170,170]);Object.assign(Be,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"size",structure:T},{...e,type:8,isRequired:!1,slot:1,name:"cameraPosition",structure:$},{...e,type:8,isRequired:!1,slot:2,name:"cameraPositionFine",structure:J},{...e,type:8,isRequired:!1,slot:3,name:"cameraRotation",structure:Q},{...e,type:8,isRequired:!1,slot:4,name:"terrainHorizon",structure:W},{...e,type:8,isRequired:!1,slot:5,name:"terrainDetail",structure:X},{...e,type:8,isRequired:!1,slot:6,name:"buildings",structure:w},{...e,type:8,isRequired:!1,slot:7,name:"waterLevel",structure:Y},{...e,type:8,isRequired:!1,slot:8,name:"sampling",structure:Z},{...e,type:8,isRequired:!1,slot:9,name:"shadows",structure:ee},{...e,type:8,isRequired:!1,slot:10,name:"contours",structure:w},{...e,type:8,isRequired:!1,slot:11,name:"sun",structure:ae},{...e,type:8,isRequired:!1,slot:12,name:"terrainHeight",structure:ne}],methods:[],template:{memory:{array:ba},slots:{0:{structure:T,memory:{array:pa},slots:{0:{structure:Re,memory:{array:a},address:-1431655766}}},1:{structure:$,memory:{array:da},slots:{0:{structure:Pe,memory:{array:a},address:-1431655766}}},2:{structure:J,memory:{array:fa},slots:{0:{structure:Ie,memory:{array:a},address:-1431655766}}},3:{structure:Q,memory:{array:Sa},slots:{0:{structure:xe,memory:{array:a},address:-1431655766}}},4:{structure:W,memory:{array:ga},slots:{0:{structure:ve,memory:{array:a},address:-1431655766}}},5:{structure:X,memory:{array:ha},slots:{0:{structure:Ee,memory:{array:a},address:-1431655766}}},6:{structure:w,memory:{array:za},slots:{0:{structure:q,memory:{array:a},address:-1431655766}}},7:{structure:Y,memory:{array:wa},slots:{0:{structure:De,memory:{array:a},address:-1431655766}}},8:{structure:Z,memory:{array:Aa},slots:{0:{structure:Ke,memory:{array:a},address:-1431655766}}},9:{structure:ee,memory:{array:Ua},slots:{0:{structure:Fe,memory:{array:a},address:-1431655766}}},10:{structure:w,memory:{array:Ra},slots:{0:{structure:q,memory:{array:a},address:-1431655766}}},11:{structure:ae,memory:{array:qa},slots:{0:{structure:Le,memory:{array:a},address:-1431655766}}},12:{structure:ne,memory:{array:Oa},slots:{0:{structure:$e,memory:{array:a},address:-1431655766}}}}}},slot:15});Object.assign(ie,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Be}],methods:[],template:null},slot:14});const ja=new Uint8Array([]);Object.assign(Ne,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:ja}}},slot:17});Object.assign(ue,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ne}],methods:[],template:null},slot:16});const Pa=new Uint8Array([]),Va=new Uint8Array([176,253,15,0]),Ca=new Uint8Array([4,0,0,0]);Object.assign(Ge,{...t,type:2,name:"Struct0031",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:n}],methods:[],template:{memory:{array:Pa},slots:{0:{structure:n,memory:{array:Va},slots:{0:{structure:i,memory:{array:Ca}}}}}}},slot:64});Object.assign(oe,{...t,type:11,name:"Struct0018",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ge}],methods:[],template:null},slot:63});const ka=new Uint8Array([]),Ia=new Uint8Array([170,170,170,170]);Object.assign(Je,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:oe}],methods:[],template:{memory:{array:ka},slots:{0:{structure:oe,memory:{array:Ia},slots:{0:{structure:Ge,memory:{array:a},address:-1431655766}}}}}},slot:19});Object.assign(me,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Je}],methods:[],template:null},slot:18});const xa=new Uint8Array([]),va=new Uint8Array([]),Ea=new Uint8Array([164,250,15,0]),Da=new Uint8Array([173,38,16,0]),Ka=new Uint8Array([99,111,109,46,115,117,98,98,108,117,101,46,102,105,108,116,101,114,115,0]),Fa=new Uint8Array([228,250,15,0]),Ma=new Uint8Array([161,38,16,0]),Ta=new Uint8Array([84,111,109,32,66,101,100,100,97,114,100,0]),_a=new Uint8Array([36,251,15,0]),Ha=new Uint8Array([1,0,0,0]),La=new Uint8Array([124,251,15,0]),$a=new Uint8Array([122,38,16,0]),Ba=new Uint8Array([76,97,110,100,115,99,97,112,101,32,114,101,110,100,101,114,105,110,103,32,117,115,105,110,103,32,114,97,121,32,109,97,114,99,104,105,110,103,0]),Na=new Uint8Array([170,170,170,170]),Ga=new Uint8Array([170,170,170,170]),Ja=new Uint8Array([170,170,170,170]);Object.assign(et,{...t,type:2,name:"landscape.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:xa}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:x},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:v},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:n},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:E},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:ie},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:ue},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:me}],methods:[],template:{memory:{array:va},slots:{0:{structure:x,memory:{array:Ea},slots:{0:{structure:be,memory:{array:Da},slots:{0:{structure:ce,memory:{array:Ka},address:1058477}}}}},1:{structure:v,memory:{array:Fa},slots:{0:{structure:de,memory:{array:Ma},slots:{0:{structure:pe,memory:{array:Ta},address:1058465}}}}},2:{structure:n,memory:{array:_a},slots:{0:{structure:i,memory:{array:Ha}}}},3:{structure:E,memory:{array:La},slots:{0:{structure:Se,memory:{array:$a},slots:{0:{structure:fe,memory:{array:Ba},address:1058426}}}}},4:{structure:ie,memory:{array:Na},slots:{0:{structure:Be,memory:{array:a},address:-1431655766}}},5:{structure:ue,memory:{array:Ga},slots:{0:{structure:Ne,memory:{array:a},address:-1431655766}}},6:{structure:me,memory:{array:Ja},slots:{0:{structure:Je,memory:{array:a},address:-1431655766}}}}}},slot:1});const Qa=new Uint8Array([]);Object.assign(O,{...t,type:2,name:"landscape.KernelInput(u8,landscape.kernel)",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Qa}}},slot:20});Object.assign(Qe,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:25});Object.assign(We,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:Qe}],methods:[],template:null},slot:24});Object.assign(Xe,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:We}],methods:[],template:null},slot:23});Object.assign(p,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[],template:null},slot:26});const Wa=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(tt,{...t,type:9,name:"landscape.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:i},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:i}],methods:[],template:{memory:{array:Wa}}},slot:27});Object.assign(le,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:le}],methods:[],template:null},slot:28});Object.assign(rt,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:l}],methods:[],template:null},slot:65});const Xa=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ya=new Uint8Array([]),Za=new Uint8Array([240,252,15,0]),en=new Uint8Array([4,0,0,0]);Object.assign(ye,{...t,type:2,name:"landscape.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Xe},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:p},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:p},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:tt},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:le}],methods:[],template:{memory:{array:Xa}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:Qe},{...e,type:7,isRequired:!1,name:"FPixel",structure:rt},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:n}],methods:[],template:{memory:{array:Ya},slots:{0:{structure:n,memory:{array:Za},slots:{0:{structure:i,memory:{array:en}}}}}}},slot:22});const tn=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),rn=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),sn=new Uint8Array([0,0,0,0,0,0,0,0]),bt=new Uint8Array([]);Object.assign(j,{...t,type:2,name:"landscape.KernelOutput(u8,landscape.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:ye}],methods:[],template:{memory:{array:tn},slots:{0:{structure:ye,memory:{array:rn},slots:{0:{structure:Xe,memory:{array:sn},slots:{0:{structure:We,memory:{array:bt}}}}}}}}},slot:21});const an=new Uint8Array([0,0,192,192,0,0,128,64,0,0,192,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,96,65,0,0,124,67,0,0,0,0,0,0,200,65,0,0,224,64,123,20,174,62,0,0,0,0,0,0,96,64,0,1,0,0,0,0,0,0]);Object.assign(P,{...t,type:2,name:"landscape.KernelParameters(landscape.kernel)",length:1,byteSize:80,align:4,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:256,bitSize:64,byteSize:8,slot:0,name:"size",structure:ge},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:96,byteSize:16,slot:1,name:"cameraPosition",structure:A},{...e,type:6,isRequired:!1,bitOffset:128,bitSize:96,byteSize:16,slot:2,name:"cameraPositionFine",structure:A},{...e,type:4,isRequired:!1,bitOffset:384,bitSize:32,byteSize:4,slot:3,name:"cameraRotation",structure:l},{...e,type:4,isRequired:!1,bitOffset:416,bitSize:32,byteSize:4,slot:4,name:"terrainHorizon",structure:l},{...e,type:4,isRequired:!1,bitOffset:448,bitSize:32,byteSize:4,slot:5,name:"terrainDetail",structure:l},{...e,type:1,isRequired:!1,bitOffset:576,bitSize:1,byteSize:1,slot:6,name:"buildings",structure:d},{...e,type:4,isRequired:!1,bitOffset:480,bitSize:32,byteSize:4,slot:7,name:"waterLevel",structure:l},{...e,type:2,isRequired:!1,bitOffset:512,bitSize:32,byteSize:4,slot:8,name:"sampling",structure:i},{...e,type:1,isRequired:!1,bitOffset:584,bitSize:1,byteSize:1,slot:9,name:"shadows",structure:d},{...e,type:1,isRequired:!1,bitOffset:592,bitSize:1,byteSize:1,slot:10,name:"contours",structure:d},{...e,type:6,isRequired:!1,bitOffset:320,bitSize:64,byteSize:8,slot:11,name:"sun",structure:Me},{...e,type:4,isRequired:!1,bitOffset:544,bitSize:32,byteSize:4,slot:12,name:"terrainHeight",structure:l}],methods:[],template:{memory:{array:an}}},slot:29});Object.assign(st,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(landscape.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:66});Object.assign(at,{...t,type:7,name:"ErrorSet0000!landscape.KernelOutput(u8,landscape.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:j},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:st}],methods:[],template:null},slot:37});Object.assign(nt,{...t,type:3,name:"createOutput",length:1,byteSize:128,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:640,bitSize:32,byteSize:4,slot:0,name:"0",structure:p},{...e,type:3,bitOffset:672,bitSize:32,byteSize:4,slot:1,name:"1",structure:p},{...e,type:6,bitOffset:1024,bitSize:0,byteSize:0,slot:2,name:"2",structure:O},{...e,type:6,bitOffset:0,bitSize:640,byteSize:80,slot:3,name:"3",structure:P},{...e,type:6,bitOffset:704,bitSize:224,byteSize:28,slot:4,name:"retval",structure:at}],methods:[],template:null},slot:35});Object.assign(it,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(landscape.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:67});Object.assign(ut,{...t,type:7,name:"ErrorSet0001!landscape.KernelOutput(u8,landscape.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:j},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:it}],methods:[],template:null},slot:38});Object.assign(ot,{...t,type:3,name:"createPartialOutput",length:1,byteSize:128,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:640,bitSize:32,byteSize:4,slot:0,name:"0",structure:p},{...e,type:3,bitOffset:672,bitSize:32,byteSize:4,slot:1,name:"1",structure:p},{...e,type:3,bitOffset:704,bitSize:32,byteSize:4,slot:2,name:"2",structure:p},{...e,type:3,bitOffset:736,bitSize:32,byteSize:4,slot:3,name:"3",structure:p},{...e,type:6,bitOffset:1024,bitSize:0,byteSize:0,slot:4,name:"4",structure:O},{...e,type:6,bitOffset:0,bitSize:640,byteSize:80,slot:5,name:"5",structure:P},{...e,type:6,bitOffset:768,bitSize:224,byteSize:28,slot:6,name:"retval",structure:ut}],methods:[],template:null},slot:36});const nn={argStruct:nt,thunk:8,name:"createOutput"},un={argStruct:ot,thunk:2,name:"createPartialOutput"};Object.assign(mt,{...t,type:2,name:"landscape",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:bt}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:et},{...e,type:7,isRequired:!1,name:"Input",structure:O},{...e,type:7,isRequired:!1,name:"Output",structure:j},{...e,type:7,isRequired:!1,name:"Parameters",structure:P}],methods:[nn,un],template:null},slot:0});const on=[g,ce,be,x,pe,de,v,i,n,fe,Se,E,ge,he,D,ze,K,we,F,Ae,Ue,M,Re,T,l,A,s,r,qe,_,Oe,H,je,L,Pe,$,Ve,B,Ce,N,ke,G,Ie,J,xe,Q,ve,W,Ee,X,d,U,q,w,De,Y,Ke,Z,Fe,ee,Me,Te,te,_e,re,He,se,Le,ae,$e,ne,Be,ie,Ne,ue,Ge,oe,Je,me,et,O,Qe,We,Xe,p,tt,le,rt,ye,j,P,st,at,nt,it,ut,ot,mt],mn=vt(on),ln=mt.constructor,yn=(async()=>{const y=new URL("landscape-27c008e6.wasm",import.meta.url).href;return fetch(y)})();Et(yn,{...mn,writeBack:!0});const{createOutput:hn,createPartialOutput:cn,kernel:Ze,Input:bn,Output:zn,Parameters:wn}=ln;function pn(y,b,o,u,m={},h={}){if(Array.isArray(m)){const S=m;m={};for(const[f,z]of Object.keys(Ze.inputImages).entries())m[z]=S[f]}const V=new bn(void 0),C=Object.keys(Ze.inputImages),c=[];let R;for(const S of C){let f=m[S];if(f||(C.length===1&&["data","width","height"].every(z=>!!m[z])?f=m:c.push(S)),V[S]=f,R){if(f.colorSpace!==R)throw new Error(`Input images must all use the same color space: ${R}`)}else R=f.colorSpace}if(c.length>0)throw new Error(`Missing input image${c.length>1?"s":""}: ${c.join(", ")}`);const Ye=cn(y,b,o,u,V,h),lt=S=>{const f=Object.keys(S),z={};for(const yt of f){const{data:{typedArray:k},width:ct,height:dt}=S[yt];let I;if(typeof ImageData=="function"){const ft=new Uint8ClampedArray(k.buffer,k.byteOffset,k.byteLength);I=new ImageData(ft,ct,u,{colorSpace:R})}else I={data:k,width:ct,height:dt};if(f.length===1)return I;z[yt]=I}return z};return Ye[Symbol.toStringTag]==="Promise"?Ye.then(lt):lt(Ye)}function dn(){const y={};for(let[b,o]of Object.entries(Ze)){if(b==="parameters"){const u={};for(const[m,h]of Object.entries(o)){const V=u[m]={};for(let[C,c]of Object.entries(h))typeof c=="object"?"string"in c?c=c.string:c=pt(c):typeof c=="function"&&(c=fn(c.name)),V[C]=c}o=u}else typeof o=="object"&&("string"in o?o=o.string:o=o.valueOf());y[b]=o}return y}function pt(y){const b=[];for(let[o,u]of Object.entries(y))typeof u=="object"&&(u=pt(u)),b[o]=u;return b}function fn(y){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[y]}onmessage=y=>{const[b,o,...u]=y.data;Sn(b,u).then(([m,h])=>{postMessage([b,o,m],{transfer:h})}).catch(m=>{postMessage(["error",o,m])})};async function Sn(y,b){switch(y){case"getKernelInfo":return[dn(...b)];case"createPartialImageData":const u=await pn(...b),m=[];if("data"in u&&"width"in u&&"height"in u)m.push(u.data.buffer);else for(const h of Object.entries(u))m.push(u.data.buffer);return[u,m];default:throw new Error(`Unknown function: ${y}`)}}
