import{u as ct,a as nt,b as lt,d as ut,c as pt,e as yt,f as ft,g as bt,h as dt,i as ht,j as gt,k as St,l as _t,o as zt,n as Vt,m as Ot,p as Rt,q as qt,r as wt}from"./index-467e5205.js";ct();nt();lt();ut();pt();yt();ft();bt();dt();ht();gt();St();_t();zt();Vt();Ot();Rt();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},S={},oe={},ie={},k={},ce={},ne={},v={},f={},O={},le={},ue={},E={},h={},y={},r={},s={},_={},b={},w={},R={},pe={},K={},ye={},T={},fe={},D={},be={},F={},de={},M={},he={},$={},ge={},B={},Se={},L={},_e={},ze={},G={},Ve={},H={},Oe={},J={},Re={},N={},qe={},Q={},we={},W={},Ae={},X={},Ue={},Y={},je={},Z={},ee={},Pe={},te={},xe={},se={},Me={},A={},Ce={},Ie={},ke={},u={},$e={},re={},me={},Be={},ae={},U={},j={},Le={},Ge={},He={},Je={},Ne={},Qe={},We={};Object.assign(S,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:5});Object.assign(oe,{...t,type:1,name:"[18:0]u8",length:18,byteSize:19,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:4});Object.assign(ie,{...t,type:11,name:"*const [18:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:3});Object.assign(k,{...t,type:11,name:"**const [18:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:2});Object.assign(ce,{...t,type:1,name:"[7:0]u8",length:7,byteSize:8,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:8});Object.assign(ne,{...t,type:11,name:"*const [7:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:7});Object.assign(v,{...t,type:11,name:"**const [7:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:6});Object.assign(f,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:f}],methods:[],template:null},slot:10});Object.assign(O,{...t,type:11,name:"*i32",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:f}],methods:[],template:null},slot:9});Object.assign(le,{...t,type:1,name:"[22:0]u8",length:22,byteSize:23,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:13});Object.assign(ue,{...t,type:11,name:"*const [22:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:12});Object.assign(E,{...t,type:11,name:"**const [22:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:11});Object.assign(h,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:h}],methods:[],template:null},slot:32});Object.assign(y,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:h}],methods:[],template:null},slot:31});Object.assign(r,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[],template:null},slot:64});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:r}],methods:[],template:null},slot:63});const At=new Uint8Array([]),Ut=new Uint8Array([64,30,16,0]),g=new Uint8Array([0,0,0,0,0,0,0,0]),jt=new Uint8Array([64,30,16,0]);Object.assign(_,{...t,type:2,name:"struct{comptime comptime_float = 0, comptime comptime_float = 0}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:At},slots:{0:{structure:s,memory:{array:Ut},slots:{0:{structure:r,memory:{array:g},address:1056320}}},1:{structure:s,memory:{array:jt},slots:{0:{structure:r,memory:{array:g},address:1056320}}}}}},slot:56});Object.assign(b,{...t,type:11,name:"*const struct{comptime comptime_float = 0, comptime comptime_float = 0}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[],template:null},slot:55});const Pt=new Uint8Array([]),xt=new Uint8Array([120,30,16,0]),Te=new Uint8Array([0,0,0,0,0,0,144,64]),Ct=new Uint8Array([120,30,16,0]);Object.assign(w,{...t,type:2,name:"struct{comptime comptime_float = 1024, comptime comptime_float = 1024}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Pt},slots:{0:{structure:s,memory:{array:xt},slots:{0:{structure:r,memory:{array:Te},address:1056376}}},1:{structure:s,memory:{array:Ct},slots:{0:{structure:r,memory:{array:Te},address:1056376}}}}}},slot:58});Object.assign(R,{...t,type:11,name:"*const struct{comptime comptime_float = 1024, comptime comptime_float = 1024}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:w}],methods:[],template:null},slot:57});const It=new Uint8Array([]),kt=new Uint8Array([120,30,16,0]),vt=new Uint8Array([112,30,16,0]),rt=new Uint8Array([0,0,0,0,0,0,128,64]);Object.assign(pe,{...t,type:2,name:"struct{comptime comptime_float = 1024, comptime comptime_float = 512}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:It},slots:{0:{structure:s,memory:{array:kt},slots:{0:{structure:r,memory:{array:Te},address:1056376}}},1:{structure:s,memory:{array:vt},slots:{0:{structure:r,memory:{array:rt},address:1056368}}}}}},slot:60});Object.assign(K,{...t,type:11,name:"*const struct{comptime comptime_float = 1024, comptime comptime_float = 512}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:59});const Et=new Uint8Array([]),Kt=new Uint8Array([170,170,170,170]),m=new Uint8Array([]),Tt=new Uint8Array([170,170,170,170]),Dt=new Uint8Array([170,170,170,170]);Object.assign(ye,{...t,type:2,name:"struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0}, comptime maxValue: struct{comptime comptime_float = 1024, comptime comptime_float = 1024} = .{1024, 1024}, comptime defaultValue: struct{comptime comptime_float = 1024, comptime comptime_float = 512} = .{1024, 512}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:b},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:R},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:K}],methods:[],template:{memory:{array:Et},slots:{0:{structure:b,memory:{array:Kt},slots:{0:{structure:_,memory:{array:m},address:-1431655766}}},1:{structure:R,memory:{array:Tt},slots:{0:{structure:w,memory:{array:m},address:-1431655766}}},2:{structure:K,memory:{array:Dt},slots:{0:{structure:pe,memory:{array:m},address:-1431655766}}}}}},slot:39});Object.assign(T,{...t,type:11,name:"*const struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0}, comptime maxValue: struct{comptime comptime_float = 1024, comptime comptime_float = 1024} = .{1024, 1024}, comptime defaultValue: struct{comptime comptime_float = 1024, comptime comptime_float = 512} = .{1024, 512}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:38});const Ft=new Uint8Array([]),Mt=new Uint8Array([112,30,16,0]),$t=new Uint8Array([104,30,16,0]),Bt=new Uint8Array([0,0,0,0,0,0,112,64]);Object.assign(fe,{...t,type:2,name:"struct{comptime comptime_float = 512, comptime comptime_float = 256}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Ft},slots:{0:{structure:s,memory:{array:Mt},slots:{0:{structure:r,memory:{array:rt},address:1056368}}},1:{structure:s,memory:{array:$t},slots:{0:{structure:r,memory:{array:Bt},address:1056360}}}}}},slot:62});Object.assign(D,{...t,type:11,name:"*const struct{comptime comptime_float = 512, comptime comptime_float = 256}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:61});const Lt=new Uint8Array([]),Gt=new Uint8Array([170,170,170,170]),Ht=new Uint8Array([170,170,170,170]),Jt=new Uint8Array([170,170,170,170]);Object.assign(be,{...t,type:2,name:"struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0}, comptime maxValue: struct{comptime comptime_float = 1024, comptime comptime_float = 1024} = .{1024, 1024}, comptime defaultValue: struct{comptime comptime_float = 512, comptime comptime_float = 256} = .{512, 256}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:b},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:R},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:D}],methods:[],template:{memory:{array:Lt},slots:{0:{structure:b,memory:{array:Gt},slots:{0:{structure:_,memory:{array:m},address:-1431655766}}},1:{structure:R,memory:{array:Ht},slots:{0:{structure:w,memory:{array:m},address:-1431655766}}},2:{structure:D,memory:{array:Jt},slots:{0:{structure:fe,memory:{array:m},address:-1431655766}}}}}},slot:41});Object.assign(F,{...t,type:11,name:"*const struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0}, comptime maxValue: struct{comptime comptime_float = 1024, comptime comptime_float = 1024} = .{1024, 1024}, comptime defaultValue: struct{comptime comptime_float = 512, comptime comptime_float = 256} = .{512, 256}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:40});const Nt=new Uint8Array([]),Qt=new Uint8Array([64,30,16,0]),Wt=new Uint8Array([56,30,16,0]),De=new Uint8Array([154,153,153,153,153,153,185,63]),Xt=new Uint8Array([64,30,16,0]);Object.assign(de,{...t,type:2,name:"struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 0.1, comptime defaultValue: comptime_float = 0}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:h},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:Nt},slots:{0:{structure:s,memory:{array:Qt},slots:{0:{structure:r,memory:{array:g},address:1056320}}},1:{structure:s,memory:{array:Wt},slots:{0:{structure:r,memory:{array:De},address:1056312}}},2:{structure:s,memory:{array:Xt},slots:{0:{structure:r,memory:{array:g},address:1056320}}}}}},slot:43});Object.assign(M,{...t,type:11,name:"*const struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 0.1, comptime defaultValue: comptime_float = 0}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:de}],methods:[],template:null},slot:42});const Yt=new Uint8Array([]),Zt=new Uint8Array([96,30,16,0]),et=new Uint8Array([0,0,0,0,0,0,89,192]),es=new Uint8Array([96,30,16,0]);Object.assign(he,{...t,type:2,name:"struct{comptime comptime_float = -100, comptime comptime_float = -100}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Yt},slots:{0:{structure:s,memory:{array:Zt},slots:{0:{structure:r,memory:{array:et},address:1056352}}},1:{structure:s,memory:{array:es},slots:{0:{structure:r,memory:{array:et},address:1056352}}}}}},slot:66});Object.assign($,{...t,type:11,name:"*const struct{comptime comptime_float = -100, comptime comptime_float = -100}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:he}],methods:[],template:null},slot:65});const ts=new Uint8Array([]),ss=new Uint8Array([88,30,16,0]),tt=new Uint8Array([0,0,0,0,0,0,89,64]),rs=new Uint8Array([88,30,16,0]);Object.assign(ge,{...t,type:2,name:"struct{comptime comptime_float = 100, comptime comptime_float = 100}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:ts},slots:{0:{structure:s,memory:{array:ss},slots:{0:{structure:r,memory:{array:tt},address:1056344}}},1:{structure:s,memory:{array:rs},slots:{0:{structure:r,memory:{array:tt},address:1056344}}}}}},slot:68});Object.assign(B,{...t,type:11,name:"*const struct{comptime comptime_float = 100, comptime comptime_float = 100}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ge}],methods:[],template:null},slot:67});const ms=new Uint8Array([]),as=new Uint8Array([170,170,170,170]),os=new Uint8Array([170,170,170,170]),is=new Uint8Array([170,170,170,170]);Object.assign(Se,{...t,type:2,name:"struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = -100, comptime comptime_float = -100} = .{-100, -100}, comptime maxValue: struct{comptime comptime_float = 100, comptime comptime_float = 100} = .{100, 100}, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:$},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:B},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:b}],methods:[],template:{memory:{array:ms},slots:{0:{structure:$,memory:{array:as},slots:{0:{structure:he,memory:{array:m},address:-1431655766}}},1:{structure:B,memory:{array:os},slots:{0:{structure:ge,memory:{array:m},address:-1431655766}}},2:{structure:b,memory:{array:is},slots:{0:{structure:_,memory:{array:m},address:-1431655766}}}}}},slot:45});Object.assign(L,{...t,type:11,name:"*const struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = -100, comptime comptime_float = -100} = .{-100, -100}, comptime maxValue: struct{comptime comptime_float = 100, comptime comptime_float = 100} = .{100, 100}, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Se}],methods:[],template:null},slot:44});Object.assign(_e,{...t,type:13,name:"@Vector(3, f32)",length:3,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:h}],methods:[],template:null},slot:33});const cs=new Uint8Array([]),ns=new Uint8Array([80,30,16,0]),Ee=new Uint8Array([0,0,0,0,0,0,20,192]),ls=new Uint8Array([80,30,16,0]),us=new Uint8Array([80,30,16,0]);Object.assign(ze,{...t,type:2,name:"struct{comptime comptime_float = -5, comptime comptime_float = -5, comptime comptime_float = -5}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:cs},slots:{0:{structure:s,memory:{array:ns},slots:{0:{structure:r,memory:{array:Ee},address:1056336}}},1:{structure:s,memory:{array:ls},slots:{0:{structure:r,memory:{array:Ee},address:1056336}}},2:{structure:s,memory:{array:us},slots:{0:{structure:r,memory:{array:Ee},address:1056336}}}}}},slot:70});Object.assign(G,{...t,type:11,name:"*const struct{comptime comptime_float = -5, comptime comptime_float = -5, comptime comptime_float = -5}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ze}],methods:[],template:null},slot:69});const ps=new Uint8Array([]),ys=new Uint8Array([72,30,16,0]),Ke=new Uint8Array([0,0,0,0,0,0,20,64]),fs=new Uint8Array([72,30,16,0]),bs=new Uint8Array([72,30,16,0]);Object.assign(Ve,{...t,type:2,name:"struct{comptime comptime_float = 5, comptime comptime_float = 5, comptime comptime_float = 5}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:ps},slots:{0:{structure:s,memory:{array:ys},slots:{0:{structure:r,memory:{array:Ke},address:1056328}}},1:{structure:s,memory:{array:fs},slots:{0:{structure:r,memory:{array:Ke},address:1056328}}},2:{structure:s,memory:{array:bs},slots:{0:{structure:r,memory:{array:Ke},address:1056328}}}}}},slot:72});Object.assign(H,{...t,type:11,name:"*const struct{comptime comptime_float = 5, comptime comptime_float = 5, comptime comptime_float = 5}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ve}],methods:[],template:null},slot:71});const ds=new Uint8Array([]),hs=new Uint8Array([64,30,16,0]),gs=new Uint8Array([64,30,16,0]),Ss=new Uint8Array([64,30,16,0]);Object.assign(Oe,{...t,type:2,name:"struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:ds},slots:{0:{structure:s,memory:{array:hs},slots:{0:{structure:r,memory:{array:g},address:1056320}}},1:{structure:s,memory:{array:gs},slots:{0:{structure:r,memory:{array:g},address:1056320}}},2:{structure:s,memory:{array:Ss},slots:{0:{structure:r,memory:{array:g},address:1056320}}}}}},slot:74});Object.assign(J,{...t,type:11,name:"*const struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Oe}],methods:[],template:null},slot:73});const _s=new Uint8Array([]),zs=new Uint8Array([170,170,170,170]),Vs=new Uint8Array([170,170,170,170]),Os=new Uint8Array([170,170,170,170]);Object.assign(Re,{...t,type:2,name:"struct{comptime type: type = @Vector(3, f32), comptime minValue: struct{comptime comptime_float = -5, comptime comptime_float = -5, comptime comptime_float = -5} = .{-5, -5, -5}, comptime maxValue: struct{comptime comptime_float = 5, comptime comptime_float = 5, comptime comptime_float = 5} = .{5, 5, 5}, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0, 0}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:_e},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:G},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:H},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:J}],methods:[],template:{memory:{array:_s},slots:{0:{structure:G,memory:{array:zs},slots:{0:{structure:ze,memory:{array:m},address:-1431655766}}},1:{structure:H,memory:{array:Vs},slots:{0:{structure:Ve,memory:{array:m},address:-1431655766}}},2:{structure:J,memory:{array:Os},slots:{0:{structure:Oe,memory:{array:m},address:-1431655766}}}}}},slot:47});Object.assign(N,{...t,type:11,name:"*const struct{comptime type: type = @Vector(3, f32), comptime minValue: struct{comptime comptime_float = -5, comptime comptime_float = -5, comptime comptime_float = -5} = .{-5, -5, -5}, comptime maxValue: struct{comptime comptime_float = 5, comptime comptime_float = 5, comptime comptime_float = 5} = .{5, 5, 5}, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0, 0}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Re}],methods:[],template:null},slot:46});const Rs=new Uint8Array([]),qs=new Uint8Array([56,30,16,0]),ws=new Uint8Array([56,30,16,0]);Object.assign(qe,{...t,type:2,name:"struct{comptime comptime_float = 0.1, comptime comptime_float = 0.1}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Rs},slots:{0:{structure:s,memory:{array:qs},slots:{0:{structure:r,memory:{array:De},address:1056312}}},1:{structure:s,memory:{array:ws},slots:{0:{structure:r,memory:{array:De},address:1056312}}}}}},slot:76});Object.assign(Q,{...t,type:11,name:"*const struct{comptime comptime_float = 0.1, comptime comptime_float = 0.1}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:qe}],methods:[],template:null},slot:75});const As=new Uint8Array([]),Us=new Uint8Array([48,30,16,0]),st=new Uint8Array([154,153,153,153,153,153,169,63]),js=new Uint8Array([48,30,16,0]);Object.assign(we,{...t,type:2,name:"struct{comptime comptime_float = 0.05, comptime comptime_float = 0.05}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:As},slots:{0:{structure:s,memory:{array:Us},slots:{0:{structure:r,memory:{array:st},address:1056304}}},1:{structure:s,memory:{array:js},slots:{0:{structure:r,memory:{array:st},address:1056304}}}}}},slot:78});Object.assign(W,{...t,type:11,name:"*const struct{comptime comptime_float = 0.05, comptime comptime_float = 0.05}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:we}],methods:[],template:null},slot:77});const Ps=new Uint8Array([]),xs=new Uint8Array([170,170,170,170]),Cs=new Uint8Array([170,170,170,170]),Is=new Uint8Array([170,170,170,170]);Object.assign(Ae,{...t,type:2,name:"struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0}, comptime maxValue: struct{comptime comptime_float = 0.1, comptime comptime_float = 0.1} = .{0.1, 0.1}, comptime defaultValue: struct{comptime comptime_float = 0.05, comptime comptime_float = 0.05} = .{0.05, 0.05}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:b},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:Q},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:W}],methods:[],template:{memory:{array:Ps},slots:{0:{structure:b,memory:{array:xs},slots:{0:{structure:_,memory:{array:m},address:-1431655766}}},1:{structure:Q,memory:{array:Cs},slots:{0:{structure:qe,memory:{array:m},address:-1431655766}}},2:{structure:W,memory:{array:Is},slots:{0:{structure:we,memory:{array:m},address:-1431655766}}}}}},slot:49});Object.assign(X,{...t,type:11,name:"*const struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0}, comptime maxValue: struct{comptime comptime_float = 0.1, comptime comptime_float = 0.1} = .{0.1, 0.1}, comptime defaultValue: struct{comptime comptime_float = 0.05, comptime comptime_float = 0.05} = .{0.05, 0.05}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ae}],methods:[],template:null},slot:48});const ks=new Uint8Array([]),vs=new Uint8Array([170,170,170,170]),Es=new Uint8Array([170,170,170,170]),Ks=new Uint8Array([170,170,170,170]),Ts=new Uint8Array([170,170,170,170]),Ds=new Uint8Array([170,170,170,170]),Fs=new Uint8Array([170,170,170,170]);Object.assign(Ue,{...t,type:2,name:"struct{comptime size: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0}, comptime maxValue: struct{comptime comptime_float = 1024, comptime comptime_float = 1024} = .{1024, 1024}, comptime defaultValue: struct{comptime comptime_float = 1024, comptime comptime_float = 512} = .{1024, 512}} = .{.type = @Vector(2, f32), .minValue = .{0, 0}, .maxValue = .{1024, 1024}, .defaultValue = .{1024, 512}}, comptime center: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0}, comptime maxValue: struct{comptime comptime_float = 1024, comptime comptime_float = 1024} = .{1024, 1024}, comptime defaultValue: struct{comptime comptime_float = 512, comptime comptime_float = 256} = .{512, 256}} = .{.type = @Vector(2, f32), .minValue = .{0, 0}, .maxValue = .{1024, 1024}, .defaultValue = .{512, 256}}, comptime distort: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 0.1, comptime defaultValue: comptime_float = 0} = .{.type = f32, .minValue = 0, .maxValue = 0.1, .defaultValue = 0}, comptime offset: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = -100, comptime comptime_float = -100} = .{-100, -100}, comptime maxValue: struct{comptime comptime_float = 100, comptime comptime_float = 100} = .{100, 100}, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0}} = .{.type = @Vector(2, f32), .minValue = .{-100, -100}, .maxValue = .{100, 100}, .defaultValue = .{0, 0}}, comptime color_offset: struct{comptime type: type = @Vector(3, f32), comptime minValue: struct{comptime comptime_float = -5, comptime comptime_float = -5, comptime comptime_float = -5} = .{-5, -5, -5}, comptime maxValue: struct{comptime comptime_float = 5, comptime comptime_float = 5, comptime comptime_float = 5} = .{5, 5, 5}, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0, 0}} = .{.type = @Vector(3, f32), .minValue = .{-5, -5, -5}, .maxValue = .{5, 5, 5}, .defaultValue = .{0, 0, 0}}, comptime wave: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0}, comptime maxValue: struct{comptime comptime_float = 0.1, comptime comptime_float = 0.1} = .{0.1, 0.1}, comptime defaultValue: struct{comptime comptime_float = 0.05, comptime comptime_float = 0.05} = .{0.05, 0.05}} = .{.type = @Vector(2, f32), .minValue = .{0, 0}, .maxValue = .{0.1, 0.1}, .defaultValue = .{0.05, 0.05}}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"size",structure:T},{...e,type:8,isRequired:!1,slot:1,name:"center",structure:F},{...e,type:8,isRequired:!1,slot:2,name:"distort",structure:M},{...e,type:8,isRequired:!1,slot:3,name:"offset",structure:L},{...e,type:8,isRequired:!1,slot:4,name:"color_offset",structure:N},{...e,type:8,isRequired:!1,slot:5,name:"wave",structure:X}],methods:[],template:{memory:{array:ks},slots:{0:{structure:T,memory:{array:vs},slots:{0:{structure:ye,memory:{array:m},address:-1431655766}}},1:{structure:F,memory:{array:Es},slots:{0:{structure:be,memory:{array:m},address:-1431655766}}},2:{structure:M,memory:{array:Ks},slots:{0:{structure:de,memory:{array:m},address:-1431655766}}},3:{structure:L,memory:{array:Ts},slots:{0:{structure:Se,memory:{array:m},address:-1431655766}}},4:{structure:N,memory:{array:Ds},slots:{0:{structure:Re,memory:{array:m},address:-1431655766}}},5:{structure:X,memory:{array:Fs},slots:{0:{structure:Ae,memory:{array:m},address:-1431655766}}}}}},slot:15});Object.assign(Y,{...t,type:11,name:"*struct{comptime size: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0}, comptime maxValue: struct{comptime comptime_float = 1024, comptime comptime_float = 1024} = .{1024, 1024}, comptime defaultValue: struct{comptime comptime_float = 1024, comptime comptime_float = 512} = .{1024, 512}} = .{.type = @Vector(2, f32), .minValue = .{0, 0}, .maxValue = .{1024, 1024}, .defaultValue = .{1024, 512}}, comptime center: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0}, comptime maxValue: struct{comptime comptime_float = 1024, comptime comptime_float = 1024} = .{1024, 1024}, comptime defaultValue: struct{comptime comptime_float = 512, comptime comptime_float = 256} = .{512, 256}} = .{.type = @Vector(2, f32), .minValue = .{0, 0}, .maxValue = .{1024, 1024}, .defaultValue = .{512, 256}}, comptime distort: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 0.1, comptime defaultValue: comptime_float = 0} = .{.type = f32, .minValue = 0, .maxValue = 0.1, .defaultValue = 0}, comptime offset: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = -100, comptime comptime_float = -100} = .{-100, -100}, comptime maxValue: struct{comptime comptime_float = 100, comptime comptime_float = 100} = .{100, 100}, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0}} = .{.type = @Vector(2, f32), .minValue = .{-100, -100}, .maxValue = .{100, 100}, .defaultValue = .{0, 0}}, comptime color_offset: struct{comptime type: type = @Vector(3, f32), comptime minValue: struct{comptime comptime_float = -5, comptime comptime_float = -5, comptime comptime_float = -5} = .{-5, -5, -5}, comptime maxValue: struct{comptime comptime_float = 5, comptime comptime_float = 5, comptime comptime_float = 5} = .{5, 5, 5}, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0, 0}} = .{.type = @Vector(3, f32), .minValue = .{-5, -5, -5}, .maxValue = .{5, 5, 5}, .defaultValue = .{0, 0, 0}}, comptime wave: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0}, comptime maxValue: struct{comptime comptime_float = 0.1, comptime comptime_float = 0.1} = .{0.1, 0.1}, comptime defaultValue: struct{comptime comptime_float = 0.05, comptime comptime_float = 0.05} = .{0.05, 0.05}} = .{.type = @Vector(2, f32), .minValue = .{0, 0}, .maxValue = .{0.1, 0.1}, .defaultValue = .{0.05, 0.05}}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ue}],methods:[],template:null},slot:14});const Ms=new Uint8Array([]);Object.assign(je,{...t,type:2,name:"@TypeOf(.{})",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Ms}}},slot:17});Object.assign(Z,{...t,type:11,name:"*@TypeOf(.{})",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:je}],methods:[],template:null},slot:16});Object.assign(ee,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:f}],methods:[],template:null},slot:79});const $s=new Uint8Array([]),Bs=new Uint8Array([128,30,16,0]),Ls=new Uint8Array([4,0,0,0]);Object.assign(Pe,{...t,type:2,name:"struct{comptime channels: comptime_int = 4}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:ee}],methods:[],template:{memory:{array:$s},slots:{0:{structure:ee,memory:{array:Bs},slots:{0:{structure:f,memory:{array:Ls},address:1056384}}}}}},slot:51});Object.assign(te,{...t,type:11,name:"*const struct{comptime channels: comptime_int = 4}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Pe}],methods:[],template:null},slot:50});const Gs=new Uint8Array([]),Hs=new Uint8Array([170,170,170,170]);Object.assign(xe,{...t,type:2,name:"struct{comptime dst: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:te}],methods:[],template:{memory:{array:Gs},slots:{0:{structure:te,memory:{array:Hs},slots:{0:{structure:Pe,memory:{array:m},address:-1431655766}}}}}},slot:19});Object.assign(se,{...t,type:11,name:"*struct{comptime dst: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:xe}],methods:[],template:null},slot:18});const Js=new Uint8Array([]),Ns=new Uint8Array([]),Qs=new Uint8Array([124,250,15,0]),Ws=new Uint8Array([97,81,16,0]),Xs=new Uint8Array([99,111,109,46,109,114,100,111,111,98,46,115,104,97,100,101,114,115,0]),Ys=new Uint8Array([188,250,15,0]),Zs=new Uint8Array([89,81,16,0]),er=new Uint8Array([77,114,46,100,111,111,98,0]),tr=new Uint8Array([252,250,15,0]),sr=new Uint8Array([1,0,0,0]),rr=new Uint8Array([84,251,15,0]),mr=new Uint8Array([66,81,16,0]),ar=new Uint8Array([71,111,111,100,32,111,108,100,32,112,108,97,115,109,97,32,101,102,102,101,99,116,0]),or=new Uint8Array([170,170,170,170]),ir=new Uint8Array([170,170,170,170]),cr=new Uint8Array([170,170,170,170]);Object.assign(Me,{...t,type:2,name:"plasma.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Js}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:k},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:v},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:O},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:E},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:Y},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:Z},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:se}],methods:[],template:{memory:{array:Ns},slots:{0:{structure:k,memory:{array:Qs},slots:{0:{structure:ie,memory:{array:Ws},slots:{0:{structure:oe,memory:{array:Xs},address:1069409}}}}},1:{structure:v,memory:{array:Ys},slots:{0:{structure:ne,memory:{array:Zs},slots:{0:{structure:ce,memory:{array:er},address:1069401}}}}},2:{structure:O,memory:{array:tr},slots:{0:{structure:f,memory:{array:sr}}}},3:{structure:E,memory:{array:rr},slots:{0:{structure:ue,memory:{array:mr},slots:{0:{structure:le,memory:{array:ar},address:1069378}}}}},4:{structure:Y,memory:{array:or},slots:{0:{structure:Ue,memory:{array:m},address:-1431655766}}},5:{structure:Z,memory:{array:ir},slots:{0:{structure:je,memory:{array:m},address:-1431655766}}},6:{structure:se,memory:{array:cr},slots:{0:{structure:xe,memory:{array:m},address:-1431655766}}}}}},slot:1});const nr=new Uint8Array([]);Object.assign(A,{...t,type:2,name:"plasma.KernelInput(u8,plasma.kernel)",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:nr}}},slot:20});Object.assign(Ce,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:25});Object.assign(Ie,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:Ce}],methods:[],template:null},slot:24});Object.assign(ke,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Ie}],methods:[],template:null},slot:23});Object.assign(u,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:u}],methods:[],template:null},slot:26});const lr=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign($e,{...t,type:9,name:"plasma.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:f},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:f}],methods:[],template:{memory:{array:lr}}},slot:27});Object.assign(re,{...t,name:"bool",length:1,byteSize:1,align:0,instance:{members:[{...e,type:1,isRequired:!1,bitOffset:0,bitSize:1,byteSize:1,structure:re}],methods:[],template:null},slot:28});Object.assign(me,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:me}],methods:[],template:null},slot:29});Object.assign(Be,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:h}],methods:[],template:null},slot:52});const ur=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),pr=new Uint8Array([]),yr=new Uint8Array([40,253,15,0]),fr=new Uint8Array([4,0,0,0]);Object.assign(ae,{...t,type:2,name:"plasma.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:ke},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:$e},{...e,type:1,isRequired:!1,bitOffset:168,bitSize:1,byteSize:1,slot:4,name:"premultiplied",structure:re},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:5,name:"offset",structure:me}],methods:[],template:{memory:{array:ur}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:Ce},{...e,type:7,isRequired:!1,name:"FPixel",structure:Be},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:O}],methods:[],template:{memory:{array:pr},slots:{0:{structure:O,memory:{array:yr},slots:{0:{structure:f,memory:{array:fr}}}}}}},slot:22});const br=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),dr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),hr=new Uint8Array([0,0,0,0,0,0,0,0]),mt=new Uint8Array([]);Object.assign(U,{...t,type:2,name:"plasma.KernelOutput(u8,plasma.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:ae}],methods:[],template:{memory:{array:br},slots:{0:{structure:ae,memory:{array:dr},slots:{0:{structure:ke,memory:{array:hr},slots:{0:{structure:Ie,memory:{array:mt}}}}}}}}},slot:21});const gr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,68,0,0,0,68,0,0,0,68,0,0,128,67,0,0,0,0,0,0,0,0,205,204,76,61,205,204,76,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);Object.assign(j,{...t,type:2,name:"plasma.KernelParameters(plasma.kernel)",length:1,byteSize:64,align:4,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:128,bitSize:64,byteSize:8,slot:0,name:"size",structure:y},{...e,type:6,isRequired:!1,bitOffset:192,bitSize:64,byteSize:8,slot:1,name:"center",structure:y},{...e,type:4,isRequired:!1,bitOffset:384,bitSize:32,byteSize:4,slot:2,name:"distort",structure:h},{...e,type:6,isRequired:!1,bitOffset:256,bitSize:64,byteSize:8,slot:3,name:"offset",structure:y},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:96,byteSize:16,slot:4,name:"color_offset",structure:_e},{...e,type:6,isRequired:!1,bitOffset:320,bitSize:64,byteSize:8,slot:5,name:"wave",structure:y}],methods:[],template:{memory:{array:gr}}},slot:30});Object.assign(Le,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(plasma.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:53});Object.assign(Ge,{...t,type:7,name:"@typeInfo(@typeInfo(@TypeOf(plasma.createOutput)).Fn.return_type.?).ErrorUnion.error_set!plasma.KernelOutput(u8,plasma.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:U},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Le}],methods:[],template:null},slot:36});Object.assign(He,{...t,type:3,name:"createOutput",length:1,byteSize:112,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:512,bitSize:32,byteSize:4,slot:0,name:"0",structure:u},{...e,type:3,bitOffset:544,bitSize:32,byteSize:4,slot:1,name:"1",structure:u},{...e,type:6,bitOffset:896,bitSize:0,byteSize:0,slot:2,name:"2",structure:A},{...e,type:6,bitOffset:0,bitSize:512,byteSize:64,slot:3,name:"3",structure:j},{...e,type:6,bitOffset:576,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Ge}],methods:[],template:null},slot:34});Object.assign(Je,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(plasma.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:54});Object.assign(Ne,{...t,type:7,name:"@typeInfo(@typeInfo(@TypeOf(plasma.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set!plasma.KernelOutput(u8,plasma.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:U},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Je}],methods:[],template:null},slot:37});Object.assign(Qe,{...t,type:3,name:"createPartialOutput",length:1,byteSize:112,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:512,bitSize:32,byteSize:4,slot:0,name:"0",structure:u},{...e,type:3,bitOffset:544,bitSize:32,byteSize:4,slot:1,name:"1",structure:u},{...e,type:3,bitOffset:576,bitSize:32,byteSize:4,slot:2,name:"2",structure:u},{...e,type:3,bitOffset:608,bitSize:32,byteSize:4,slot:3,name:"3",structure:u},{...e,type:6,bitOffset:896,bitSize:0,byteSize:0,slot:4,name:"4",structure:A},{...e,type:6,bitOffset:0,bitSize:512,byteSize:64,slot:5,name:"5",structure:j},{...e,type:6,bitOffset:640,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Ne}],methods:[],template:null},slot:35});const Sr={argStruct:He,thunk:8,name:"createOutput"},_r={argStruct:Qe,thunk:2,name:"createPartialOutput"};Object.assign(We,{...t,type:2,name:"plasma",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:mt}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:Me},{...e,type:7,isRequired:!1,name:"Input",structure:A},{...e,type:7,isRequired:!1,name:"Output",structure:U},{...e,type:7,isRequired:!1,name:"Parameters",structure:j}],methods:[Sr,_r],template:null},slot:0});const zr=[S,oe,ie,k,ce,ne,v,f,O,le,ue,E,h,y,r,s,_,b,w,R,pe,K,ye,T,fe,D,be,F,de,M,he,$,ge,B,Se,L,_e,ze,G,Ve,H,Oe,J,Re,N,qe,Q,we,W,Ae,X,Ue,Y,je,Z,ee,Pe,te,xe,se,Me,A,Ce,Ie,ke,u,$e,re,me,Be,ae,U,j,Le,Ge,He,Je,Ne,Qe,We],Vr=qt(zr),Or=We.constructor,Rr=(async()=>{const c=new URL("plasma-d26c1dc4.wasm",import.meta.url).href;return fetch(c)})();wt(Rr,{...Vr,writeBack:!0});const{createOutput:Cr,createPartialOutput:qr,kernel:Fe,Input:wr,Output:Ir,Parameters:kr}=Or;function Ar(c,l,o,a,i={},z={}){if(Array.isArray(i)){const d=i;i={};for(const[p,V]of Object.keys(Fe.inputImages).entries())i[V]=d[p]}const P=new wr(void 0),x=Object.keys(Fe.inputImages),n=[];let q;for(const d of x){let p=i[d];if(p||(x.length===1&&["data","width","height"].every(V=>!!i[V])?p=i:n.push(d)),P[d]=p,q){if(p.colorSpace!==q)throw new Error(`Input images must all use the same color space: ${q}`)}else q=p.colorSpace}if(n.length>0)throw new Error(`Missing input image${n.length>1?"s":""}: ${n.join(", ")}`);const ve=qr(c,l,o,a,P,z),Xe=d=>{const p=Object.keys(d),V={};for(const Ye of p){const{data:{typedArray:C},width:Ze,height:ot}=d[Ye];let I;if(typeof ImageData=="function"){const it=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);I=new ImageData(it,Ze,a,{colorSpace:q})}else I={data:C,width:Ze,height:ot};if(p.length===1)return I;V[Ye]=I}return V};return ve[Symbol.toStringTag]==="Promise"?ve.then(Xe):Xe(ve)}function Ur(){const c={};for(let[l,o]of Object.entries(Fe)){if(l==="parameters"){const a={};for(const[i,z]of Object.entries(o)){const P=a[i]={};for(let[x,n]of Object.entries(z))typeof n=="object"?"string"in n?n=n.string:n=at(n):typeof n=="function"&&(n=jr(n.name)),P[x]=n}o=a}else typeof o=="object"&&("string"in o?o=o.string:o=o.valueOf());c[l]=o}return c}function at(c){const l=[];for(let[o,a]of Object.entries(c))typeof a=="object"&&(a=at(a)),l[o]=a;return l}function jr(c){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[c]}onmessage=c=>{const[l,o,...a]=c.data;Pr(l,a).then(([i,z])=>{postMessage([l,o,i],{transfer:z})}).catch(i=>{postMessage(["error",o,i])})};async function Pr(c,l){switch(c){case"getKernelInfo":return[Ur(...l)];case"createPartialImageData":const a=await Ar(...l),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const z of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${c}`)}}
