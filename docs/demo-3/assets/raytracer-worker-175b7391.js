import{u as Kr,a as Mr,b as _r,c as Fr,d as Tr,e as $r,f as Lr,g as Br,h as Gr,i as Hr,j as Jr,k as Nr,l as Qr,m as Wr,n as Xr,o as Yr,p as Zr,q as ta,r as ea,s as sa}from"./index-34581284.js";Kr();Jr();Nr();Mr();_r();Qr();Wr();Xr();Yr();Fr();Tr();$r();Lr();Zr();sa();Br();ta();Gr();Hr();const s={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},a={},A={},K={},U={},g={},z={},M={},_={},e={},p={},r={},F={},h={},T={},$={},w={},L={},B={},G={},H={},J={},N={},Q={},W={},X={},Y={},Z={},tt={},et={},st={},rt={},at={},nt={},ot={},jt={},I={},ct={},it={},k={},b={},O={},C={},ut={},R={},q={},P={},ft={},St={},D={},wt={},At={},Ut={},$e={},zt={},ht={},dt={},Le={},Vt={},Be={},Pt={},Ge={},He={},yt={},Je={},mt={},Ne={},bt={},Qe={},We={},It={},Xe={},kt={},Ye={},Rt={},Ze={},ts={},qt={},es={},vt={},ss={},Et={},rs={},as={},xt={},lt={},Ct={},Dt={},Kt={},ns={},Mt={},os={},_t={},cs={},Ft={},is={},us={},Tt={},ys={},$t={},ms={},Lt={},bs={},ls={},Bt={},Gt={},Ht={},Jt={},gs={},Nt={},Qt={},ps={},Wt={},Os={},Xt={},js={},fs={},Yt={},Ss={},Zt={},ws={},te={},As={},Us={},ee={},zs={},se={},hs={},re={},ds={},Vs={},ae={},Ps={},ne={},Is={},oe={},ks={},Rs={},ce={},ie={},ue={},ye={},qs={},me={},vs={},be={},Es={},le={},xs={},ge={},Cs={},Ds={},pe={},Ks={},Oe={},Ms={},je={},_s={},fe={},Fs={},Ts={},Se={},$s={},we={},Ls={},Ae={},Bs={},Ue={},Gs={},Hs={},ze={},he={},de={},Ve={},Pe={},Js={},Ie={},ke={},Re={},qe={},ve={},Ee={},Ns={},xe={},Qs={},Ws={},Ce={},Xs={},Ys={},De={},Zs={},tr={},er={},sr={},rr={},ar={},nr={},or={},cr={},ir={},ur={},yr={},mr={},Ke={},br={},lr={},gr={},pr={},Or={},jr={},fr={},Sr={},wr={},Ar={},Ur={},Me={},zr={},hr={},dr={},Vr={},Pr={},Ir={},kr={},Rr={},qr={},vr={},ra=new Uint8Array,aa=new Uint8Array,na=new Uint8Array([154,153,153,153,153,153,185,63]),oa=new Uint8Array,ca=new Uint8Array([0,0,0,0,0,0,20,64]),ia=new Uint8Array,ua=new Uint8Array([0,0,0,0,0,0,0,64]),ya=new Uint8Array,ma=new Uint8Array([0,0,0,0,0,0,24,192]),ba=new Uint8Array,la=new Uint8Array([0,0,0,0,0,0,24,192]),ga=new Uint8Array,pa=new Uint8Array([0,0,0,0,0,0,57,192]),Oa=new Uint8Array,ja=new Uint8Array([0,0,0,0,0,0,24,64]),fa=new Uint8Array,Sa=new Uint8Array([0,0,0,0,0,0,24,64]),wa=new Uint8Array,Aa=new Uint8Array([0,0,0,0,0,0,0,0]),Ua=new Uint8Array,za=new Uint8Array([0,0,0,0,0,0,0,0]),ha=new Uint8Array,da=new Uint8Array([0,0,0,0,0,0,0,64]),Va=new Uint8Array,Pa=new Uint8Array([0,0,0,0,0,0,16,192]),Ia=new Uint8Array,ka=new Uint8Array,Ra=new Uint8Array,qa=new Uint8Array,va=new Uint8Array,Ea=new Uint8Array([0,0,0,0,0,0,24,64]),xa=new Uint8Array,Ca=new Uint8Array([0,0,0,0,0,0,24,64]),Da=new Uint8Array,Ka=new Uint8Array([0,0,0,0,0,0,0,192]),Ma=new Uint8Array,_a=new Uint8Array([0,0,0,0,0,0,0,0]),Fa=new Uint8Array,Ta=new Uint8Array([0,0,0,0,0,0,0,64]),$a=new Uint8Array,La=new Uint8Array([0,0,0,0,0,0,36,192]),Ba=new Uint8Array,Ga=new Uint8Array,Ha=new Uint8Array,Ja=new Uint8Array,Na=new Uint8Array,Qa=new Uint8Array,Wa=new Uint8Array([154,153,153,153,153,153,185,63]),Xa=new Uint8Array,Ya=new Uint8Array([0,0,0,0,0,0,32,64]),Za=new Uint8Array,tn=new Uint8Array([0,0,0,0,0,0,0,64]),en=new Uint8Array,sn=new Uint8Array([0,0,0,0,0,0,0,0]),rn=new Uint8Array,an=new Uint8Array([0,0,0,0,0,0,0,0]),nn=new Uint8Array,on=new Uint8Array([0,0,0,0,0,0,0,0]),cn=new Uint8Array,un=new Uint8Array([0,0,0,0,0,0,240,63]),yn=new Uint8Array,mn=new Uint8Array([0,0,0,0,0,0,240,63]),bn=new Uint8Array,ln=new Uint8Array([0,0,0,0,0,0,240,63]),gn=new Uint8Array,pn=new Uint8Array([154,153,153,153,153,153,233,63]),On=new Uint8Array,jn=new Uint8Array([154,153,153,153,153,153,233,63]),fn=new Uint8Array,Sn=new Uint8Array([154,153,153,153,153,153,233,63]),wn=new Uint8Array,An=new Uint8Array,Un=new Uint8Array,zn=new Uint8Array,hn=new Uint8Array,dn=new Uint8Array([0,0,0,0,0,0,0,0]),Vn=new Uint8Array,Pn=new Uint8Array([0,0,0,0,0,0,0,0]),In=new Uint8Array,kn=new Uint8Array([0,0,0,0,0,0,0,0]),Rn=new Uint8Array,qn=new Uint8Array([0,0,0,0,0,0,0,0]),vn=new Uint8Array,En=new Uint8Array([0,0,0,0,0,0,240,63]),xn=new Uint8Array,Cn=new Uint8Array([0,0,0,0,0,0,240,63]),Dn=new Uint8Array,Kn=new Uint8Array([0,0,0,0,0,0,240,63]),Mn=new Uint8Array,_n=new Uint8Array([0,0,0,0,0,0,240,63]),Fn=new Uint8Array,Tn=new Uint8Array([154,153,153,153,153,153,169,63]),$n=new Uint8Array,Ln=new Uint8Array([154,153,153,153,153,153,185,63]),Bn=new Uint8Array,Gn=new Uint8Array([0,0,0,0,0,0,240,63]),Hn=new Uint8Array,Jn=new Uint8Array([0,0,0,0,0,0,240,63]),Nn=new Uint8Array,Qn=new Uint8Array,Wn=new Uint8Array,Xn=new Uint8Array,Yn=new Uint8Array,Zn=new Uint8Array,to=new Uint8Array,eo=new Uint8Array,so=new Uint8Array,ro=new Uint8Array,ao=new Uint8Array,no=new Uint8Array([4]),oo=new Uint8Array,co=new Uint8Array([10,16,0,1]),io=new Uint8Array([78,101,119,103,114,111,117,110,100,115,0]),uo=new Uint8Array([10,16,0,1]),yo=new Uint8Array,mo=new Uint8Array([1]),bo=new Uint8Array([49,16,0,1]),lo=new Uint8Array([80,105,120,101,108,32,66,108,101,110,100,101,114,32,82,97,121,116,114,97,99,105,110,103,0]),go=new Uint8Array,po=new Uint8Array,Oo=new Uint8Array,jo=new Uint8Array([0]),fo=new Uint8Array([1]),Er=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),So=new Uint8Array,wo=new Uint8Array,Ao=new Uint8Array,Uo=new Uint8Array,zo=new Uint8Array([4]),_e=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ho=new Uint8Array([0,0,0,0,0,0,0,64,0,0,128,192,0,0,0,0,0,0,0,0,0,0,0,64,0,0,32,193,0,0,0,0,205,204,76,63,205,204,76,63,205,204,76,63,0,0,0,0,205,204,76,61,205,204,204,61,0,0,128,63,0,0,128,63,0,0,0,64,0,0,0,64,0,0,0,0,0,0,0,0]),Vo=new Uint8Array([27,0]),Po=new Uint8Array,Io=new Uint8Array,ko=new Uint8Array,Ro=new Uint8Array;Object.assign($e,{slots:{0:zt,1:dt,2:Vt,3:Pt}});Object.assign(zt,{structure:a,memory:{array:ra},slots:{0:ht}});Object.assign(ht,{structure:p});Object.assign(dt,{structure:e,memory:{array:aa},slots:{0:Le}});Object.assign(Le,{structure:r,memory:{array:na}});Object.assign(Vt,{structure:e,memory:{array:oa},slots:{0:Be}});Object.assign(Be,{structure:r,memory:{array:ca}});Object.assign(Pt,{structure:e,memory:{array:ia},slots:{0:Ge}});Object.assign(Ge,{structure:r,memory:{array:ua}});Object.assign(He,{slots:{0:yt,1:mt,2:bt}});Object.assign(yt,{structure:e,memory:{array:ya},slots:{0:Je}});Object.assign(Je,{structure:r,memory:{array:ma}});Object.assign(mt,{structure:e,memory:{array:ba},slots:{0:Ne}});Object.assign(Ne,{structure:r,memory:{array:la}});Object.assign(bt,{structure:e,memory:{array:ga},slots:{0:Qe}});Object.assign(Qe,{structure:r,memory:{array:pa}});Object.assign(We,{slots:{0:It,1:kt,2:Rt}});Object.assign(It,{structure:e,memory:{array:Oa},slots:{0:Xe}});Object.assign(Xe,{structure:r,memory:{array:ja}});Object.assign(kt,{structure:e,memory:{array:fa},slots:{0:Ye}});Object.assign(Ye,{structure:r,memory:{array:Sa}});Object.assign(Rt,{structure:e,memory:{array:wa},slots:{0:Ze}});Object.assign(Ze,{structure:r,memory:{array:Aa}});Object.assign(ts,{slots:{0:qt,1:vt,2:Et}});Object.assign(qt,{structure:e,memory:{array:Ua},slots:{0:es}});Object.assign(es,{structure:r,memory:{array:za}});Object.assign(vt,{structure:e,memory:{array:ha},slots:{0:ss}});Object.assign(ss,{structure:r,memory:{array:da}});Object.assign(Et,{structure:e,memory:{array:Va},slots:{0:rs}});Object.assign(rs,{structure:r,memory:{array:Pa}});Object.assign(as,{slots:{0:xt,1:Ct,2:Dt,3:Kt}});Object.assign(xt,{structure:a,memory:{array:Ia},slots:{0:lt}});Object.assign(lt,{structure:w});Object.assign(Ct,{structure:h,memory:{array:ka},slots:{0:yt,1:mt,2:bt}});Object.assign(Dt,{structure:T,memory:{array:Ra},slots:{0:It,1:kt,2:Rt}});Object.assign(Kt,{structure:$,memory:{array:qa},slots:{0:qt,1:vt,2:Et}});Object.assign(ns,{slots:{0:Mt,1:_t,2:Ft}});Object.assign(Mt,{structure:e,memory:{array:va},slots:{0:os}});Object.assign(os,{structure:r,memory:{array:Ea}});Object.assign(_t,{structure:e,memory:{array:xa},slots:{0:cs}});Object.assign(cs,{structure:r,memory:{array:Ca}});Object.assign(Ft,{structure:e,memory:{array:Da},slots:{0:is}});Object.assign(is,{structure:r,memory:{array:Ka}});Object.assign(us,{slots:{0:Tt,1:$t,2:Lt}});Object.assign(Tt,{structure:e,memory:{array:Ma},slots:{0:ys}});Object.assign(ys,{structure:r,memory:{array:_a}});Object.assign($t,{structure:e,memory:{array:Fa},slots:{0:ms}});Object.assign(ms,{structure:r,memory:{array:Ta}});Object.assign(Lt,{structure:e,memory:{array:$a},slots:{0:bs}});Object.assign(bs,{structure:r,memory:{array:La}});Object.assign(ls,{slots:{0:Bt,1:Gt,2:Ht,3:Jt}});Object.assign(Bt,{structure:a,memory:{array:Ba},slots:{0:lt}});Object.assign(Gt,{structure:h,memory:{array:Ga},slots:{0:yt,1:mt,2:bt}});Object.assign(Ht,{structure:B,memory:{array:Ha},slots:{0:Mt,1:_t,2:Ft}});Object.assign(Jt,{structure:G,memory:{array:Ja},slots:{0:Tt,1:$t,2:Lt}});Object.assign(gs,{slots:{0:Nt,1:Qt,2:Wt,3:Xt}});Object.assign(Nt,{structure:a,memory:{array:Na},slots:{0:ht}});Object.assign(Qt,{structure:e,memory:{array:Qa},slots:{0:ps}});Object.assign(ps,{structure:r,memory:{array:Wa}});Object.assign(Wt,{structure:e,memory:{array:Xa},slots:{0:Os}});Object.assign(Os,{structure:r,memory:{array:Ya}});Object.assign(Xt,{structure:e,memory:{array:Za},slots:{0:js}});Object.assign(js,{structure:r,memory:{array:tn}});Object.assign(fs,{slots:{0:Yt,1:Zt,2:te}});Object.assign(Yt,{structure:e,memory:{array:en},slots:{0:Ss}});Object.assign(Ss,{structure:r,memory:{array:sn}});Object.assign(Zt,{structure:e,memory:{array:rn},slots:{0:ws}});Object.assign(ws,{structure:r,memory:{array:an}});Object.assign(te,{structure:e,memory:{array:nn},slots:{0:As}});Object.assign(As,{structure:r,memory:{array:on}});Object.assign(Us,{slots:{0:ee,1:se,2:re}});Object.assign(ee,{structure:e,memory:{array:cn},slots:{0:zs}});Object.assign(zs,{structure:r,memory:{array:un}});Object.assign(se,{structure:e,memory:{array:yn},slots:{0:hs}});Object.assign(hs,{structure:r,memory:{array:mn}});Object.assign(re,{structure:e,memory:{array:bn},slots:{0:ds}});Object.assign(ds,{structure:r,memory:{array:ln}});Object.assign(Vs,{slots:{0:ae,1:ne,2:oe}});Object.assign(ae,{structure:e,memory:{array:gn},slots:{0:Ps}});Object.assign(Ps,{structure:r,memory:{array:pn}});Object.assign(ne,{structure:e,memory:{array:On},slots:{0:Is}});Object.assign(Is,{structure:r,memory:{array:jn}});Object.assign(oe,{structure:e,memory:{array:fn},slots:{0:ks}});Object.assign(ks,{structure:r,memory:{array:Sn}});Object.assign(Rs,{slots:{0:ce,1:ie,2:ue,3:ye}});Object.assign(ce,{structure:a,memory:{array:wn},slots:{0:lt}});Object.assign(ie,{structure:N,memory:{array:An},slots:{0:Yt,1:Zt,2:te}});Object.assign(ue,{structure:Q,memory:{array:Un},slots:{0:ee,1:se,2:re}});Object.assign(ye,{structure:W,memory:{array:zn},slots:{0:ae,1:ne,2:oe}});Object.assign(qs,{slots:{0:me,1:be,2:le,3:ge}});Object.assign(me,{structure:e,memory:{array:hn},slots:{0:vs}});Object.assign(vs,{structure:r,memory:{array:dn}});Object.assign(be,{structure:e,memory:{array:Vn},slots:{0:Es}});Object.assign(Es,{structure:r,memory:{array:Pn}});Object.assign(le,{structure:e,memory:{array:In},slots:{0:xs}});Object.assign(xs,{structure:r,memory:{array:kn}});Object.assign(ge,{structure:e,memory:{array:Rn},slots:{0:Cs}});Object.assign(Cs,{structure:r,memory:{array:qn}});Object.assign(Ds,{slots:{0:pe,1:Oe,2:je,3:fe}});Object.assign(pe,{structure:e,memory:{array:vn},slots:{0:Ks}});Object.assign(Ks,{structure:r,memory:{array:En}});Object.assign(Oe,{structure:e,memory:{array:xn},slots:{0:Ms}});Object.assign(Ms,{structure:r,memory:{array:Cn}});Object.assign(je,{structure:e,memory:{array:Dn},slots:{0:_s}});Object.assign(_s,{structure:r,memory:{array:Kn}});Object.assign(fe,{structure:e,memory:{array:Mn},slots:{0:Fs}});Object.assign(Fs,{structure:r,memory:{array:_n}});Object.assign(Ts,{slots:{0:Se,1:we,2:Ae,3:Ue}});Object.assign(Se,{structure:e,memory:{array:Fn},slots:{0:$s}});Object.assign($s,{structure:r,memory:{array:Tn}});Object.assign(we,{structure:e,memory:{array:$n},slots:{0:Ls}});Object.assign(Ls,{structure:r,memory:{array:Ln}});Object.assign(Ae,{structure:e,memory:{array:Bn},slots:{0:Bs}});Object.assign(Bs,{structure:r,memory:{array:Gn}});Object.assign(Ue,{structure:e,memory:{array:Hn},slots:{0:Gs}});Object.assign(Gs,{structure:r,memory:{array:Jn}});Object.assign(Hs,{slots:{0:ze,1:de,2:Ve,3:Pe}});Object.assign(ze,{structure:a,memory:{array:Nn},slots:{0:he}});Object.assign(he,{structure:et});Object.assign(de,{structure:Y,memory:{array:Qn},slots:{0:me,1:be,2:le,3:ge}});Object.assign(Ve,{structure:Z,memory:{array:Wn},slots:{0:pe,1:Oe,2:je,3:fe}});Object.assign(Pe,{structure:tt,memory:{array:Xn},slots:{0:Se,1:we,2:Ae,3:Ue}});Object.assign(Js,{slots:{0:Ie,1:ke,2:Re,3:qe,4:ve,5:Ee}});Object.assign(Ie,{structure:F,memory:{array:Yn},slots:{0:zt,1:dt,2:Vt,3:Pt}});Object.assign(ke,{structure:L,memory:{array:Zn},slots:{0:xt,1:Ct,2:Dt,3:Kt}});Object.assign(Re,{structure:H,memory:{array:to},slots:{0:Bt,1:Gt,2:Ht,3:Jt}});Object.assign(qe,{structure:J,memory:{array:eo},slots:{0:Nt,1:Qt,2:Wt,3:Xt}});Object.assign(ve,{structure:X,memory:{array:so},slots:{0:ce,1:ie,2:ue,3:ye}});Object.assign(Ee,{structure:st,memory:{array:ro},slots:{0:ze,1:de,2:Ve,3:Pe}});Object.assign(Ns,{slots:{0:xe}});Object.assign(xe,{structure:g,memory:{array:ao},slots:{0:Qs}});Object.assign(Qs,{structure:z,memory:{array:no}});Object.assign(Ws,{slots:{0:Ce}});Object.assign(Ce,{structure:nt,memory:{array:oo},slots:{0:xe}});Object.assign(Xs,{slots:{0:Ys,1:Zs,2:tr,3:sr,4:ar,5:nr,6:or}});Object.assign(Ys,{structure:U,memory:{array:co},slots:{0:De}});Object.assign(De,{structure:K,memory:{array:io},reloc:16781322,const:!0});Object.assign(Zs,{structure:U,memory:{array:uo},slots:{0:De}});Object.assign(tr,{structure:g,memory:{array:yo},slots:{0:er}});Object.assign(er,{structure:z,memory:{array:mo}});Object.assign(sr,{structure:_,memory:{array:bo},slots:{0:rr}});Object.assign(rr,{structure:M,memory:{array:lo},reloc:16781361,const:!0});Object.assign(ar,{structure:rt,memory:{array:go},slots:{0:Ie,1:ke,2:Re,3:qe,4:ve,5:Ee}});Object.assign(nr,{structure:at,memory:{array:po}});Object.assign(or,{structure:ot,memory:{array:Oo},slots:{0:Ce}});Object.assign(cr,{slots:{0:ir,1:ur}});Object.assign(ir,{structure:O,memory:{array:jo}});Object.assign(ur,{structure:O,memory:{array:fo}});Object.assign(yr,{memory:{array:Er},slots:{0:mr}});Object.assign(mr,{structure:k,memory:{array:Er,offset:0,length:8},slots:{0:Ke}});Object.assign(Ke,{structure:it,memory:{array:So},reloc:0});Object.assign(br,{slots:{0:lr,1:pr,2:Or}});Object.assign(lr,{structure:a,memory:{array:wo},slots:{0:gr}});Object.assign(gr,{structure:ct});Object.assign(pr,{structure:a,memory:{array:Ao},slots:{0:he}});Object.assign(Or,{structure:g,memory:{array:Uo},slots:{0:jr}});Object.assign(jr,{structure:z,memory:{array:zo}});Object.assign(fr,{memory:{array:_e},slots:{0:Sr}});Object.assign(Sr,{structure:ut,memory:{array:_e},slots:{0:wr}});Object.assign(wr,{structure:k,memory:{array:_e,offset:0,length:8},slots:{0:Ke}});Object.assign(Ar,{memory:{array:ho}});Object.assign(Ur,{slots:{0:Me}});Object.assign(Me,{structure:P,memory:{array:Vo}});Object.assign(zr,{slots:{0:Me}});Object.assign(hr,{slots:{0:dr,1:Pr,2:kr,3:qr}});Object.assign(dr,{structure:a,memory:{array:Po},slots:{0:Vr}});Object.assign(Vr,{structure:jt});Object.assign(Pr,{structure:a,memory:{array:Io},slots:{0:Ir}});Object.assign(Ir,{structure:I});Object.assign(kr,{structure:a,memory:{array:ko},slots:{0:Rr}});Object.assign(Rr,{structure:R});Object.assign(qr,{structure:a,memory:{array:Ro},slots:{0:vr}});Object.assign(vr,{structure:q});const qo={argStruct:St,thunkId:2,name:"createOutput"},vo={argStruct:At,thunkId:3,name:"createPartialOutput"};Object.assign(a,{...s,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:a}],methods:[]}});Object.assign(A,{...s,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:A}],methods:[]}});Object.assign(K,{...s,type:1,name:"[10:0]u8",length:10,byteSize:11,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:A}],methods:[]}});Object.assign(U,{...s,type:13,name:"*const [10:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:K}],methods:[]}});Object.assign(g,{...s,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:g}],methods:[]}});Object.assign(z,{...s,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:z}],methods:[]}});Object.assign(M,{...s,type:1,name:"[24:0]u8",length:24,byteSize:25,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:A}],methods:[]}});Object.assign(_,{...s,type:13,name:"*const [24:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(e,{...s,name:"comptime_float",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:e}],methods:[]}});Object.assign(p,{...s,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[]}});Object.assign(r,{...s,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[]}});Object.assign(F,{...s,type:2,name:"Struct2106938606",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"minValue",structure:e},{...t,type:9,slot:2,name:"maxValue",structure:e},{...t,type:9,slot:3,name:"defaultValue",structure:e}],methods:[],template:$e}});Object.assign(h,{...s,type:2,name:"Struct1573664369",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e},{...t,type:9,slot:2,name:"2",structure:e}],methods:[],template:He}});Object.assign(T,{...s,type:2,name:"Struct3067162147",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e},{...t,type:9,slot:2,name:"2",structure:e}],methods:[],template:We}});Object.assign($,{...s,type:2,name:"Struct673269508",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e},{...t,type:9,slot:2,name:"2",structure:e}],methods:[],template:ts}});Object.assign(w,{...s,type:15,name:"@Vector(3, f32)",length:3,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:p}],methods:[]}});Object.assign(L,{...s,type:2,name:"Struct2636297267",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"minValue",structure:h},{...t,type:9,slot:2,name:"maxValue",structure:T},{...t,type:9,slot:3,name:"defaultValue",structure:$}],methods:[],template:as}});Object.assign(B,{...s,type:2,name:"Struct2777181692",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e},{...t,type:9,slot:2,name:"2",structure:e}],methods:[],template:ns}});Object.assign(G,{...s,type:2,name:"Struct4225377734",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e},{...t,type:9,slot:2,name:"2",structure:e}],methods:[],template:us}});Object.assign(H,{...s,type:2,name:"Struct2684155510",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"minValue",structure:h},{...t,type:9,slot:2,name:"maxValue",structure:B},{...t,type:9,slot:3,name:"defaultValue",structure:G}],methods:[],template:ls}});Object.assign(J,{...s,type:2,name:"Struct2559962643",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"minValue",structure:e},{...t,type:9,slot:2,name:"maxValue",structure:e},{...t,type:9,slot:3,name:"defaultValue",structure:e}],methods:[],template:gs}});Object.assign(N,{...s,type:2,name:"Struct4174069246",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e},{...t,type:9,slot:2,name:"2",structure:e}],methods:[],template:fs}});Object.assign(Q,{...s,type:2,name:"Struct2060771296",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e},{...t,type:9,slot:2,name:"2",structure:e}],methods:[],template:Us}});Object.assign(W,{...s,type:2,name:"Struct1281261272",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e},{...t,type:9,slot:2,name:"2",structure:e}],methods:[],template:Vs}});Object.assign(X,{...s,type:2,name:"Struct4082202062",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"minValue",structure:N},{...t,type:9,slot:2,name:"maxValue",structure:Q},{...t,type:9,slot:3,name:"defaultValue",structure:W}],methods:[],template:Rs}});Object.assign(Y,{...s,type:2,name:"Struct142040656",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e},{...t,type:9,slot:2,name:"2",structure:e},{...t,type:9,slot:3,name:"3",structure:e}],methods:[],template:qs}});Object.assign(Z,{...s,type:2,name:"Struct2121898850",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e},{...t,type:9,slot:2,name:"2",structure:e},{...t,type:9,slot:3,name:"3",structure:e}],methods:[],template:Ds}});Object.assign(tt,{...s,type:2,name:"Struct2605639370",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e},{...t,type:9,slot:2,name:"2",structure:e},{...t,type:9,slot:3,name:"3",structure:e}],methods:[],template:Ts}});Object.assign(et,{...s,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:p}],methods:[]}});Object.assign(st,{...s,type:2,name:"Struct4251897103",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"minValue",structure:Y},{...t,type:9,slot:2,name:"maxValue",structure:Z},{...t,type:9,slot:3,name:"defaultValue",structure:tt}],methods:[],template:Hs}});Object.assign(rt,{...s,type:2,name:"Struct66271221",align:1,instance:{members:[{...t,type:9,slot:0,name:"viewPlaneDistance",structure:F},{...t,type:9,slot:1,name:"lightPos",structure:L},{...t,type:9,slot:2,name:"sphere0Position",structure:H},{...t,type:9,slot:3,name:"sphere0Radius",structure:J},{...t,type:9,slot:4,name:"sphere0Color",structure:X},{...t,type:9,slot:5,name:"sphere0Material",structure:st}],methods:[],template:Js}});Object.assign(at,{...s,type:2,name:"Struct2871943947",align:1});Object.assign(nt,{...s,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:g}],methods:[],template:Ns}});Object.assign(ot,{...s,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:9,slot:0,name:"dst",structure:nt}],methods:[],template:Ws}});Object.assign(jt,{...s,type:2,name:"raytracer.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:U},{...t,type:9,slot:1,name:"vendor",structure:U},{...t,type:9,slot:2,name:"version",structure:g},{...t,type:9,slot:3,name:"description",structure:_},{...t,type:9,slot:4,name:"parameters",structure:rt},{...t,type:9,slot:5,name:"inputImages",structure:at},{...t,type:9,slot:6,name:"outputImages",structure:ot}],methods:[],template:Xs}});Object.assign(I,{...s,type:2,name:"raytracer.KernelInput(u8,raytracer.kernel)",align:1});Object.assign(ct,{...s,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:A}],methods:[]}});Object.assign(it,{...s,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:ct}],methods:[]}});Object.assign(k,{...s,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:it}],methods:[]}});Object.assign(b,{...s,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[]}});Object.assign(O,{...s,type:11,name:"raytracer.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:O},{...t,type:9,slot:1,name:"display-p3",structure:O}],methods:[],template:cr}});Object.assign(C,{...s,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:C}],methods:[]}});Object.assign(ut,{...s,type:2,name:"raytracer.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:k},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:b},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:b},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:C}],methods:[],template:yr},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:a},{...t,type:9,slot:1,name:"FPixel",structure:a},{...t,type:9,slot:2,name:"channels",structure:g}],methods:[],template:br}});Object.assign(R,{...s,type:2,name:"raytracer.KernelOutput(u8,raytracer.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:ut}],methods:[],template:fr}});Object.assign(q,{...s,type:2,name:"raytracer.KernelParameters(raytracer.kernel)",byteSize:80,align:16,instance:{members:[{...t,type:4,bitOffset:512,bitSize:32,byteSize:4,slot:4,name:"viewPlaneDistance",structure:p},{...t,type:7,bitOffset:0,bitSize:96,byteSize:16,slot:0,name:"lightPos",structure:w},{...t,type:7,bitOffset:128,bitSize:96,byteSize:16,slot:1,name:"sphere0Position",structure:w},{...t,type:4,bitOffset:544,bitSize:32,byteSize:4,slot:5,name:"sphere0Radius",structure:p},{...t,type:7,bitOffset:256,bitSize:96,byteSize:16,slot:2,name:"sphere0Color",structure:w},{...t,type:7,bitOffset:384,bitSize:128,byteSize:16,slot:3,name:"sphere0Material",structure:et}],methods:[],template:Ar}});Object.assign(P,{...s,type:10,name:"@typeInfo(@typeInfo(@TypeOf(raytracer.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:P}],methods:[],template:Ur}});Object.assign(ft,{...s,type:9,name:"ErrorSet2989147267!raytracer.KernelOutput(u8,raytracer.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:R},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:P}],methods:[]}});Object.assign(St,{...s,type:5,name:"createOutput",byteSize:128,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:640,bitSize:32,byteSize:4,slot:3,name:"0",structure:b},{...t,type:3,isRequired:!0,bitOffset:672,bitSize:32,byteSize:4,slot:4,name:"1",structure:b},{...t,type:7,isRequired:!0,bitOffset:928,bitSize:0,byteSize:0,slot:0,name:"2",structure:I},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:640,byteSize:80,slot:1,name:"3",structure:q},{...t,type:7,isRequired:!0,bitOffset:704,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ft}],methods:[]}});Object.assign(D,{...s,type:10,name:"@typeInfo(@typeInfo(@TypeOf(raytracer.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:D}],methods:[],template:zr}});Object.assign(wt,{...s,type:9,name:"ErrorSet2486615414!raytracer.KernelOutput(u8,raytracer.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:R},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:D}],methods:[]}});Object.assign(At,{...s,type:5,name:"createPartialOutput",byteSize:128,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:640,bitSize:32,byteSize:4,slot:3,name:"0",structure:b},{...t,type:3,isRequired:!0,bitOffset:672,bitSize:32,byteSize:4,slot:4,name:"1",structure:b},{...t,type:3,isRequired:!0,bitOffset:704,bitSize:32,byteSize:4,slot:5,name:"2",structure:b},{...t,type:3,isRequired:!0,bitOffset:736,bitSize:32,byteSize:4,slot:6,name:"3",structure:b},{...t,type:7,isRequired:!0,bitOffset:992,bitSize:0,byteSize:0,slot:0,name:"4",structure:I},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:640,byteSize:80,slot:1,name:"5",structure:q},{...t,type:7,isRequired:!0,bitOffset:768,bitSize:224,byteSize:28,slot:2,name:"retval",structure:wt}],methods:[]}});Object.assign(Ut,{...s,type:2,name:"raytracer",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:a},{...t,type:9,slot:1,name:"Input",structure:a},{...t,type:9,slot:2,name:"Output",structure:a},{...t,type:9,slot:3,name:"Parameters",structure:a}],methods:[qo,vo],template:hr}});const Eo=[a,A,K,U,g,z,M,_,e,p,r,F,h,T,$,w,L,B,G,H,J,N,Q,W,X,Y,Z,tt,et,st,rt,at,nt,ot,jt,I,ct,it,k,b,O,C,ut,R,q,P,ft,St,D,wt,At,Ut],xo=Ut,Co={runtimeSafety:!1,littleEndian:!0},gt=ea();gt.getControlObject();gt.recreateStructures(Eo,Co);const Do=(async()=>{const i=new URL("raytracer-8f8e44bc.wasm",import.meta.url).href;return fetch(i)})();gt.loadModule(Do);gt.linkVariables(!0);const{constructor:Ko}=xo,{createPartialOutput:Mo,Input:_o,kernel:Ot}=Ko;function Fo(i,u,o,n,c={},j={}){const f=[];for(const[m]of Ot.inputImages)f.push(m);const d=[];for(const[m]of Ot.outputImages)d.push(m);if(Array.isArray(c)){const m=c;c={};for(const[l,S]of f.entries())c[S]=m[l]}const y=new _o(void 0),v=[];let V;for(const m of f){let l=c[m];if(l||(f.length===1&&["data","width","height"].every(S=>!!c[S])?l=c:v.push(m)),y[m]=l,V){if(l.colorSpace!==V)throw new Error(`Input images must all use the same color space: ${V}`)}else V=l.colorSpace}if(v.length>0)throw new Error(`Missing input image${v.length>1?"s":""}: ${v.join(", ")}`);const pt=Mo(i,u,o,n,y,j),Fe=m=>{const l={};for(const S of d){const{data:{typedArray:E},width:Te,height:Cr}=m[S];let x;if(typeof ImageData=="function"){const Dr=new Uint8ClampedArray(E.buffer,E.byteOffset,E.byteLength);x=new ImageData(Dr,Te,n,{colorSpace:V})}else x={data:E,width:Te,height:Cr};if(d.length===1)return x;l[S]=x}return l};return pt[Symbol.toStringTag]==="Promise"?pt.then(Fe):Fe(pt)}function To(){const i={};for(let[u,o]of Ot){if(u==="parameters"){const n={};for(const[c,j]of o){const f=n[c]={};for(let[d,y]of j)typeof y=="object"?"string"in y?y=y.string:y=xr(y):typeof y=="function"&&(y=$o(y.name)),f[d]=y}o=n}else typeof o=="object"&&("string"in o?o=o.string:o=o.valueOf());i[u]=o}return i}function xr(i){const u=[];for(let[o,n]of i)typeof n=="object"&&(n=xr(n)),u[o]=n;return u}function $o(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[u,o,...n]=i.data;Lo(u,n).then(([c,j])=>{postMessage([u,o,c],{transfer:j})}).catch(c=>{postMessage(["error",o,c])})};async function Lo(i,u){switch(i){case"getKernelInfo":return[To(...u)];case"createPartialImageData":const n=await Fo(...u),c=[];if("data"in n&&"width"in n&&"height"in n)c.push(n.data.buffer);else for(const j of Object.entries(n))c.push(n.data.buffer);return[n,c];default:throw new Error(`Unknown function: ${i}`)}}
