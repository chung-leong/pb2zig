import{u as Mr,a as Cr,b as Dr,c as $r,d as Fr,e as _r,f as Lr,g as Br,h as Gr,i as Hr,j as Jr,k as Nr,l as Qr,m as Wr,n as Xr,o as Yr,p as Zr,q as ta}from"./index-67c7daa1.js";Mr();Nr();Qr();Cr();Dr();Wr();Xr();Yr();Zr();$r();Fr();_r();Lr();ta();Br();Gr();Hr();const s={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},a={},z={},M={},h={},g={},d={},C={},D={},e={},O={},r={},$={},V={},F={},_={},w={},L={},B={},G={},H={},J={},N={},Q={},W={},X={},Y={},Z={},tt={},et={},st={},rt={},at={},nt={},ot={},jt={},R={},ct={},ut={},I={},l={},p={},K={},it={},q={},T={},A={},ft={},St={},U={},wt={},At={},Ut={},Fe={},zt={},ht={},dt={},_e={},Vt={},Le={},Pt={},Be={},Ge={},yt={},He={},mt={},Je={},lt={},Ne={},Qe={},kt={},We={},Rt={},Xe={},It={},Ye={},Ze={},qt={},ts={},Tt={},es={},vt={},ss={},rs={},xt={},bt={},Et={},Kt={},Mt={},as={},Ct={},ns={},Dt={},os={},$t={},cs={},us={},Ft={},is={},_t={},ys={},Lt={},ms={},ls={},Bt={},Gt={},Ht={},Jt={},bs={},Nt={},Qt={},gs={},Wt={},ps={},Xt={},Os={},js={},Yt={},fs={},Zt={},Ss={},te={},ws={},As={},ee={},Us={},se={},zs={},re={},hs={},ds={},ae={},Vs={},ne={},Ps={},oe={},ks={},Rs={},ce={},ue={},ie={},ye={},Is={},me={},qs={},le={},Ts={},be={},vs={},ge={},xs={},Es={},pe={},Ks={},Oe={},Ms={},je={},Cs={},fe={},Ds={},$s={},Se={},Fs={},we={},_s={},Ae={},Ls={},Ue={},Bs={},Gs={},ze={},he={},de={},Ve={},Pe={},Hs={},ke={},Re={},Ie={},qe={},Te={},ve={},Js={},xe={},Ns={},Qs={},Ee={},Ws={},Xs={},Ke={},Ys={},Zs={},tr={},er={},sr={},rr={},ar={},nr={},or={},cr={},ur={},ir={},yr={},Me={},mr={},lr={},br={},gr={},pr={},Or={},jr={},fr={},Sr={},wr={},Ar={},Ur={},zr={},hr={},dr={},Vr={},Pr={},kr={},Rr={},Ir={},qr={},Tr={},vr={},ea=new Uint8Array,sa=new Uint8Array,ra=new Uint8Array([154,153,153,153,153,153,185,63]),aa=new Uint8Array,na=new Uint8Array([0,0,0,0,0,0,20,64]),oa=new Uint8Array,ca=new Uint8Array([0,0,0,0,0,0,0,64]),ua=new Uint8Array,ia=new Uint8Array([0,0,0,0,0,0,24,192]),ya=new Uint8Array,ma=new Uint8Array([0,0,0,0,0,0,24,192]),la=new Uint8Array,ba=new Uint8Array([0,0,0,0,0,0,57,192]),ga=new Uint8Array,pa=new Uint8Array([0,0,0,0,0,0,24,64]),Oa=new Uint8Array,ja=new Uint8Array([0,0,0,0,0,0,24,64]),fa=new Uint8Array,Sa=new Uint8Array([0,0,0,0,0,0,0,0]),wa=new Uint8Array,Aa=new Uint8Array([0,0,0,0,0,0,0,0]),Ua=new Uint8Array,za=new Uint8Array([0,0,0,0,0,0,0,64]),ha=new Uint8Array,da=new Uint8Array([0,0,0,0,0,0,16,192]),Va=new Uint8Array,Pa=new Uint8Array,ka=new Uint8Array,Ra=new Uint8Array,Ia=new Uint8Array,qa=new Uint8Array([0,0,0,0,0,0,24,64]),Ta=new Uint8Array,va=new Uint8Array([0,0,0,0,0,0,24,64]),xa=new Uint8Array,Ea=new Uint8Array([0,0,0,0,0,0,0,192]),Ka=new Uint8Array,Ma=new Uint8Array([0,0,0,0,0,0,0,0]),Ca=new Uint8Array,Da=new Uint8Array([0,0,0,0,0,0,0,64]),$a=new Uint8Array,Fa=new Uint8Array([0,0,0,0,0,0,36,192]),_a=new Uint8Array,La=new Uint8Array,Ba=new Uint8Array,Ga=new Uint8Array,Ha=new Uint8Array,Ja=new Uint8Array,Na=new Uint8Array([154,153,153,153,153,153,185,63]),Qa=new Uint8Array,Wa=new Uint8Array([0,0,0,0,0,0,32,64]),Xa=new Uint8Array,Ya=new Uint8Array([0,0,0,0,0,0,0,64]),Za=new Uint8Array,tn=new Uint8Array([0,0,0,0,0,0,0,0]),en=new Uint8Array,sn=new Uint8Array([0,0,0,0,0,0,0,0]),rn=new Uint8Array,an=new Uint8Array([0,0,0,0,0,0,0,0]),nn=new Uint8Array,on=new Uint8Array([0,0,0,0,0,0,240,63]),cn=new Uint8Array,un=new Uint8Array([0,0,0,0,0,0,240,63]),yn=new Uint8Array,mn=new Uint8Array([0,0,0,0,0,0,240,63]),ln=new Uint8Array,bn=new Uint8Array([154,153,153,153,153,153,233,63]),gn=new Uint8Array,pn=new Uint8Array([154,153,153,153,153,153,233,63]),On=new Uint8Array,jn=new Uint8Array([154,153,153,153,153,153,233,63]),fn=new Uint8Array,Sn=new Uint8Array,wn=new Uint8Array,An=new Uint8Array,Un=new Uint8Array,zn=new Uint8Array([0,0,0,0,0,0,0,0]),hn=new Uint8Array,dn=new Uint8Array([0,0,0,0,0,0,0,0]),Vn=new Uint8Array,Pn=new Uint8Array([0,0,0,0,0,0,0,0]),kn=new Uint8Array,Rn=new Uint8Array([0,0,0,0,0,0,0,0]),In=new Uint8Array,qn=new Uint8Array([0,0,0,0,0,0,240,63]),Tn=new Uint8Array,vn=new Uint8Array([0,0,0,0,0,0,240,63]),xn=new Uint8Array,En=new Uint8Array([0,0,0,0,0,0,240,63]),Kn=new Uint8Array,Mn=new Uint8Array([0,0,0,0,0,0,240,63]),Cn=new Uint8Array,Dn=new Uint8Array([154,153,153,153,153,153,169,63]),$n=new Uint8Array,Fn=new Uint8Array([154,153,153,153,153,153,185,63]),_n=new Uint8Array,Ln=new Uint8Array([0,0,0,0,0,0,240,63]),Bn=new Uint8Array,Gn=new Uint8Array([0,0,0,0,0,0,240,63]),Hn=new Uint8Array,Jn=new Uint8Array,Nn=new Uint8Array,Qn=new Uint8Array,Wn=new Uint8Array,Xn=new Uint8Array,Yn=new Uint8Array,Zn=new Uint8Array,to=new Uint8Array,eo=new Uint8Array,so=new Uint8Array,ro=new Uint8Array([4]),ao=new Uint8Array,no=new Uint8Array([18,16,0,1]),oo=new Uint8Array([78,101,119,103,114,111,117,110,100,115,0]),co=new Uint8Array([18,16,0,1]),uo=new Uint8Array,io=new Uint8Array([1]),yo=new Uint8Array([57,16,0,1]),mo=new Uint8Array([80,105,120,101,108,32,66,108,101,110,100,101,114,32,82,97,121,116,114,97,99,105,110,103,0]),lo=new Uint8Array,bo=new Uint8Array,go=new Uint8Array,po=new Uint8Array([0]),Oo=new Uint8Array([1]),xr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),jo=new Uint8Array,fo=new Uint8Array,So=new Uint8Array,wo=new Uint8Array,Ao=new Uint8Array([4]),Ce=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Uo=new Uint8Array([0,0,0,0,0,0,0,64,0,0,128,192,0,0,0,0,0,0,0,0,0,0,0,64,0,0,32,193,0,0,0,0,205,204,76,63,205,204,76,63,205,204,76,63,0,0,0,0,205,204,76,61,205,204,204,61,0,0,128,63,0,0,128,63,0,0,0,64,0,0,0,64,0,0,0,0,0,0,0,0]),zo=new Uint8Array([27,0]),ho=new Uint8Array([27,0]),Vo=new Uint8Array,Po=new Uint8Array,ko=new Uint8Array,Ro=new Uint8Array;Object.assign(Fe,{slots:{0:zt,1:dt,2:Vt,3:Pt}});Object.assign(zt,{structure:a,memory:{array:ea},const:!0,slots:{0:ht}});Object.assign(ht,{structure:O});Object.assign(dt,{structure:e,memory:{array:sa},const:!0,slots:{0:_e}});Object.assign(_e,{structure:r,memory:{array:ra},const:!0});Object.assign(Vt,{structure:e,memory:{array:aa},const:!0,slots:{0:Le}});Object.assign(Le,{structure:r,memory:{array:na},const:!0});Object.assign(Pt,{structure:e,memory:{array:oa},const:!0,slots:{0:Be}});Object.assign(Be,{structure:r,memory:{array:ca},const:!0});Object.assign(Ge,{slots:{0:yt,1:mt,2:lt}});Object.assign(yt,{structure:e,memory:{array:ua},const:!0,slots:{0:He}});Object.assign(He,{structure:r,memory:{array:ia},const:!0});Object.assign(mt,{structure:e,memory:{array:ya},const:!0,slots:{0:Je}});Object.assign(Je,{structure:r,memory:{array:ma},const:!0});Object.assign(lt,{structure:e,memory:{array:la},const:!0,slots:{0:Ne}});Object.assign(Ne,{structure:r,memory:{array:ba},const:!0});Object.assign(Qe,{slots:{0:kt,1:Rt,2:It}});Object.assign(kt,{structure:e,memory:{array:ga},const:!0,slots:{0:We}});Object.assign(We,{structure:r,memory:{array:pa},const:!0});Object.assign(Rt,{structure:e,memory:{array:Oa},const:!0,slots:{0:Xe}});Object.assign(Xe,{structure:r,memory:{array:ja},const:!0});Object.assign(It,{structure:e,memory:{array:fa},const:!0,slots:{0:Ye}});Object.assign(Ye,{structure:r,memory:{array:Sa},const:!0});Object.assign(Ze,{slots:{0:qt,1:Tt,2:vt}});Object.assign(qt,{structure:e,memory:{array:wa},const:!0,slots:{0:ts}});Object.assign(ts,{structure:r,memory:{array:Aa},const:!0});Object.assign(Tt,{structure:e,memory:{array:Ua},const:!0,slots:{0:es}});Object.assign(es,{structure:r,memory:{array:za},const:!0});Object.assign(vt,{structure:e,memory:{array:ha},const:!0,slots:{0:ss}});Object.assign(ss,{structure:r,memory:{array:da},const:!0});Object.assign(rs,{slots:{0:xt,1:Et,2:Kt,3:Mt}});Object.assign(xt,{structure:a,memory:{array:Va},const:!0,slots:{0:bt}});Object.assign(bt,{structure:w});Object.assign(Et,{structure:V,memory:{array:Pa},const:!0,slots:{0:yt,1:mt,2:lt}});Object.assign(Kt,{structure:F,memory:{array:ka},const:!0,slots:{0:kt,1:Rt,2:It}});Object.assign(Mt,{structure:_,memory:{array:Ra},const:!0,slots:{0:qt,1:Tt,2:vt}});Object.assign(as,{slots:{0:Ct,1:Dt,2:$t}});Object.assign(Ct,{structure:e,memory:{array:Ia},const:!0,slots:{0:ns}});Object.assign(ns,{structure:r,memory:{array:qa},const:!0});Object.assign(Dt,{structure:e,memory:{array:Ta},const:!0,slots:{0:os}});Object.assign(os,{structure:r,memory:{array:va},const:!0});Object.assign($t,{structure:e,memory:{array:xa},const:!0,slots:{0:cs}});Object.assign(cs,{structure:r,memory:{array:Ea},const:!0});Object.assign(us,{slots:{0:Ft,1:_t,2:Lt}});Object.assign(Ft,{structure:e,memory:{array:Ka},const:!0,slots:{0:is}});Object.assign(is,{structure:r,memory:{array:Ma},const:!0});Object.assign(_t,{structure:e,memory:{array:Ca},const:!0,slots:{0:ys}});Object.assign(ys,{structure:r,memory:{array:Da},const:!0});Object.assign(Lt,{structure:e,memory:{array:$a},const:!0,slots:{0:ms}});Object.assign(ms,{structure:r,memory:{array:Fa},const:!0});Object.assign(ls,{slots:{0:Bt,1:Gt,2:Ht,3:Jt}});Object.assign(Bt,{structure:a,memory:{array:_a},const:!0,slots:{0:bt}});Object.assign(Gt,{structure:V,memory:{array:La},const:!0,slots:{0:yt,1:mt,2:lt}});Object.assign(Ht,{structure:B,memory:{array:Ba},const:!0,slots:{0:Ct,1:Dt,2:$t}});Object.assign(Jt,{structure:G,memory:{array:Ga},const:!0,slots:{0:Ft,1:_t,2:Lt}});Object.assign(bs,{slots:{0:Nt,1:Qt,2:Wt,3:Xt}});Object.assign(Nt,{structure:a,memory:{array:Ha},const:!0,slots:{0:ht}});Object.assign(Qt,{structure:e,memory:{array:Ja},const:!0,slots:{0:gs}});Object.assign(gs,{structure:r,memory:{array:Na},const:!0});Object.assign(Wt,{structure:e,memory:{array:Qa},const:!0,slots:{0:ps}});Object.assign(ps,{structure:r,memory:{array:Wa},const:!0});Object.assign(Xt,{structure:e,memory:{array:Xa},const:!0,slots:{0:Os}});Object.assign(Os,{structure:r,memory:{array:Ya},const:!0});Object.assign(js,{slots:{0:Yt,1:Zt,2:te}});Object.assign(Yt,{structure:e,memory:{array:Za},const:!0,slots:{0:fs}});Object.assign(fs,{structure:r,memory:{array:tn},const:!0});Object.assign(Zt,{structure:e,memory:{array:en},const:!0,slots:{0:Ss}});Object.assign(Ss,{structure:r,memory:{array:sn},const:!0});Object.assign(te,{structure:e,memory:{array:rn},const:!0,slots:{0:ws}});Object.assign(ws,{structure:r,memory:{array:an},const:!0});Object.assign(As,{slots:{0:ee,1:se,2:re}});Object.assign(ee,{structure:e,memory:{array:nn},const:!0,slots:{0:Us}});Object.assign(Us,{structure:r,memory:{array:on},const:!0});Object.assign(se,{structure:e,memory:{array:cn},const:!0,slots:{0:zs}});Object.assign(zs,{structure:r,memory:{array:un},const:!0});Object.assign(re,{structure:e,memory:{array:yn},const:!0,slots:{0:hs}});Object.assign(hs,{structure:r,memory:{array:mn},const:!0});Object.assign(ds,{slots:{0:ae,1:ne,2:oe}});Object.assign(ae,{structure:e,memory:{array:ln},const:!0,slots:{0:Vs}});Object.assign(Vs,{structure:r,memory:{array:bn},const:!0});Object.assign(ne,{structure:e,memory:{array:gn},const:!0,slots:{0:Ps}});Object.assign(Ps,{structure:r,memory:{array:pn},const:!0});Object.assign(oe,{structure:e,memory:{array:On},const:!0,slots:{0:ks}});Object.assign(ks,{structure:r,memory:{array:jn},const:!0});Object.assign(Rs,{slots:{0:ce,1:ue,2:ie,3:ye}});Object.assign(ce,{structure:a,memory:{array:fn},const:!0,slots:{0:bt}});Object.assign(ue,{structure:N,memory:{array:Sn},const:!0,slots:{0:Yt,1:Zt,2:te}});Object.assign(ie,{structure:Q,memory:{array:wn},const:!0,slots:{0:ee,1:se,2:re}});Object.assign(ye,{structure:W,memory:{array:An},const:!0,slots:{0:ae,1:ne,2:oe}});Object.assign(Is,{slots:{0:me,1:le,2:be,3:ge}});Object.assign(me,{structure:e,memory:{array:Un},const:!0,slots:{0:qs}});Object.assign(qs,{structure:r,memory:{array:zn},const:!0});Object.assign(le,{structure:e,memory:{array:hn},const:!0,slots:{0:Ts}});Object.assign(Ts,{structure:r,memory:{array:dn},const:!0});Object.assign(be,{structure:e,memory:{array:Vn},const:!0,slots:{0:vs}});Object.assign(vs,{structure:r,memory:{array:Pn},const:!0});Object.assign(ge,{structure:e,memory:{array:kn},const:!0,slots:{0:xs}});Object.assign(xs,{structure:r,memory:{array:Rn},const:!0});Object.assign(Es,{slots:{0:pe,1:Oe,2:je,3:fe}});Object.assign(pe,{structure:e,memory:{array:In},const:!0,slots:{0:Ks}});Object.assign(Ks,{structure:r,memory:{array:qn},const:!0});Object.assign(Oe,{structure:e,memory:{array:Tn},const:!0,slots:{0:Ms}});Object.assign(Ms,{structure:r,memory:{array:vn},const:!0});Object.assign(je,{structure:e,memory:{array:xn},const:!0,slots:{0:Cs}});Object.assign(Cs,{structure:r,memory:{array:En},const:!0});Object.assign(fe,{structure:e,memory:{array:Kn},const:!0,slots:{0:Ds}});Object.assign(Ds,{structure:r,memory:{array:Mn},const:!0});Object.assign($s,{slots:{0:Se,1:we,2:Ae,3:Ue}});Object.assign(Se,{structure:e,memory:{array:Cn},const:!0,slots:{0:Fs}});Object.assign(Fs,{structure:r,memory:{array:Dn},const:!0});Object.assign(we,{structure:e,memory:{array:$n},const:!0,slots:{0:_s}});Object.assign(_s,{structure:r,memory:{array:Fn},const:!0});Object.assign(Ae,{structure:e,memory:{array:_n},const:!0,slots:{0:Ls}});Object.assign(Ls,{structure:r,memory:{array:Ln},const:!0});Object.assign(Ue,{structure:e,memory:{array:Bn},const:!0,slots:{0:Bs}});Object.assign(Bs,{structure:r,memory:{array:Gn},const:!0});Object.assign(Gs,{slots:{0:ze,1:de,2:Ve,3:Pe}});Object.assign(ze,{structure:a,memory:{array:Hn},const:!0,slots:{0:he}});Object.assign(he,{structure:et});Object.assign(de,{structure:Y,memory:{array:Jn},const:!0,slots:{0:me,1:le,2:be,3:ge}});Object.assign(Ve,{structure:Z,memory:{array:Nn},const:!0,slots:{0:pe,1:Oe,2:je,3:fe}});Object.assign(Pe,{structure:tt,memory:{array:Qn},const:!0,slots:{0:Se,1:we,2:Ae,3:Ue}});Object.assign(Hs,{slots:{0:ke,1:Re,2:Ie,3:qe,4:Te,5:ve}});Object.assign(ke,{structure:$,memory:{array:Wn},const:!0,slots:{0:zt,1:dt,2:Vt,3:Pt}});Object.assign(Re,{structure:L,memory:{array:Xn},const:!0,slots:{0:xt,1:Et,2:Kt,3:Mt}});Object.assign(Ie,{structure:H,memory:{array:Yn},const:!0,slots:{0:Bt,1:Gt,2:Ht,3:Jt}});Object.assign(qe,{structure:J,memory:{array:Zn},const:!0,slots:{0:Nt,1:Qt,2:Wt,3:Xt}});Object.assign(Te,{structure:X,memory:{array:to},const:!0,slots:{0:ce,1:ue,2:ie,3:ye}});Object.assign(ve,{structure:st,memory:{array:eo},const:!0,slots:{0:ze,1:de,2:Ve,3:Pe}});Object.assign(Js,{slots:{0:xe}});Object.assign(xe,{structure:g,memory:{array:so},const:!0,slots:{0:Ns}});Object.assign(Ns,{structure:d,memory:{array:ro},const:!0});Object.assign(Qs,{slots:{0:Ee}});Object.assign(Ee,{structure:nt,memory:{array:ao},const:!0,slots:{0:xe}});Object.assign(Ws,{slots:{0:Xs,1:Ys,2:Zs,3:er,4:rr,5:ar,6:nr}});Object.assign(Xs,{structure:h,memory:{array:no},const:!0,slots:{0:Ke}});Object.assign(Ke,{structure:M,memory:{array:oo},reloc:16781330});Object.assign(Ys,{structure:h,memory:{array:co},const:!0,slots:{0:Ke}});Object.assign(Zs,{structure:g,memory:{array:uo},const:!0,slots:{0:tr}});Object.assign(tr,{structure:d,memory:{array:io},const:!0});Object.assign(er,{structure:D,memory:{array:yo},const:!0,slots:{0:sr}});Object.assign(sr,{structure:C,memory:{array:mo},reloc:16781369});Object.assign(rr,{structure:rt,memory:{array:lo},const:!0,slots:{0:ke,1:Re,2:Ie,3:qe,4:Te,5:ve}});Object.assign(ar,{structure:at,memory:{array:bo},const:!0});Object.assign(nr,{structure:ot,memory:{array:go},const:!0,slots:{0:Ee}});Object.assign(or,{slots:{0:cr,1:ur}});Object.assign(cr,{structure:p,memory:{array:po},const:!0});Object.assign(ur,{structure:p,memory:{array:Oo},const:!0});Object.assign(ir,{memory:{array:xr},slots:{0:yr}});Object.assign(yr,{structure:I,memory:{array:xr,offset:0,length:8},slots:{0:Me}});Object.assign(Me,{structure:ut,memory:{array:jo},reloc:0});Object.assign(mr,{slots:{0:lr,1:gr,2:pr}});Object.assign(lr,{structure:a,memory:{array:fo},const:!0,slots:{0:br}});Object.assign(br,{structure:ct});Object.assign(gr,{structure:a,memory:{array:So},const:!0,slots:{0:he}});Object.assign(pr,{structure:g,memory:{array:wo},const:!0,slots:{0:Or}});Object.assign(Or,{structure:d,memory:{array:Ao},const:!0});Object.assign(jr,{memory:{array:Ce},slots:{0:fr}});Object.assign(fr,{structure:it,memory:{array:Ce},slots:{0:Sr}});Object.assign(Sr,{structure:I,memory:{array:Ce,offset:0,length:8},slots:{0:Me}});Object.assign(wr,{memory:{array:Uo}});Object.assign(Ar,{slots:{0:Ur}});Object.assign(Ur,{structure:A,memory:{array:zo},const:!0});Object.assign(zr,{slots:{0:hr}});Object.assign(hr,{structure:U,memory:{array:ho},const:!0});Object.assign(dr,{slots:{0:Vr,1:kr,2:Ir,3:Tr}});Object.assign(Vr,{structure:a,memory:{array:Vo},const:!0,slots:{0:Pr}});Object.assign(Pr,{structure:jt});Object.assign(kr,{structure:a,memory:{array:Po},const:!0,slots:{0:Rr}});Object.assign(Rr,{structure:R});Object.assign(Ir,{structure:a,memory:{array:ko},const:!0,slots:{0:qr}});Object.assign(qr,{structure:q});Object.assign(Tr,{structure:a,memory:{array:Ro},const:!0,slots:{0:vr}});Object.assign(vr,{structure:T});const Io={argStruct:St,thunkId:2,name:"createOutput"},qo={argStruct:At,thunkId:3,name:"createPartialOutput"};Object.assign(a,{...s,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:a}],methods:[]}});Object.assign(z,{...s,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:z}],methods:[]}});Object.assign(M,{...s,type:1,name:"[10:0]u8",length:10,byteSize:11,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:z}],methods:[]}});Object.assign(h,{...s,type:13,name:"*const [10:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(g,{...s,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:g}],methods:[]}});Object.assign(d,{...s,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:d}],methods:[]}});Object.assign(C,{...s,type:1,name:"[24:0]u8",length:24,byteSize:25,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:z}],methods:[]}});Object.assign(D,{...s,type:13,name:"*const [24:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:C}],methods:[]}});Object.assign(e,{...s,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:e}],methods:[]}});Object.assign(O,{...s,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:O}],methods:[]}});Object.assign(r,{...s,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[]}});Object.assign($,{...s,type:2,name:"Struct2106938606",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:a},{...t,type:7,slot:1,name:"minValue",structure:e},{...t,type:7,slot:2,name:"maxValue",structure:e},{...t,type:7,slot:3,name:"defaultValue",structure:e}],methods:[],template:Fe}});Object.assign(V,{...s,type:2,name:"Struct1573664369",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e}],methods:[],template:Ge}});Object.assign(F,{...s,type:2,name:"Struct3067162147",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e}],methods:[],template:Qe}});Object.assign(_,{...s,type:2,name:"Struct673269508",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e}],methods:[],template:Ze}});Object.assign(w,{...s,type:15,name:"@Vector(3, f32)",length:3,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:O}],methods:[]}});Object.assign(L,{...s,type:2,name:"Struct2636297267",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:a},{...t,type:7,slot:1,name:"minValue",structure:V},{...t,type:7,slot:2,name:"maxValue",structure:F},{...t,type:7,slot:3,name:"defaultValue",structure:_}],methods:[],template:rs}});Object.assign(B,{...s,type:2,name:"Struct2777181692",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e}],methods:[],template:as}});Object.assign(G,{...s,type:2,name:"Struct4225377734",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e}],methods:[],template:us}});Object.assign(H,{...s,type:2,name:"Struct2684155510",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:a},{...t,type:7,slot:1,name:"minValue",structure:V},{...t,type:7,slot:2,name:"maxValue",structure:B},{...t,type:7,slot:3,name:"defaultValue",structure:G}],methods:[],template:ls}});Object.assign(J,{...s,type:2,name:"Struct2559962643",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:a},{...t,type:7,slot:1,name:"minValue",structure:e},{...t,type:7,slot:2,name:"maxValue",structure:e},{...t,type:7,slot:3,name:"defaultValue",structure:e}],methods:[],template:bs}});Object.assign(N,{...s,type:2,name:"Struct4174069246",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e}],methods:[],template:js}});Object.assign(Q,{...s,type:2,name:"Struct2060771296",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e}],methods:[],template:As}});Object.assign(W,{...s,type:2,name:"Struct1281261272",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e}],methods:[],template:ds}});Object.assign(X,{...s,type:2,name:"Struct4082202062",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:a},{...t,type:7,slot:1,name:"minValue",structure:N},{...t,type:7,slot:2,name:"maxValue",structure:Q},{...t,type:7,slot:3,name:"defaultValue",structure:W}],methods:[],template:Rs}});Object.assign(Y,{...s,type:2,name:"Struct142040656",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e},{...t,type:7,slot:3,name:"3",structure:e}],methods:[],template:Is}});Object.assign(Z,{...s,type:2,name:"Struct2121898850",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e},{...t,type:7,slot:3,name:"3",structure:e}],methods:[],template:Es}});Object.assign(tt,{...s,type:2,name:"Struct2605639370",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e},{...t,type:7,slot:3,name:"3",structure:e}],methods:[],template:$s}});Object.assign(et,{...s,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:O}],methods:[]}});Object.assign(st,{...s,type:2,name:"Struct4251897103",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:a},{...t,type:7,slot:1,name:"minValue",structure:Y},{...t,type:7,slot:2,name:"maxValue",structure:Z},{...t,type:7,slot:3,name:"defaultValue",structure:tt}],methods:[],template:Gs}});Object.assign(rt,{...s,type:2,name:"Struct66271221",align:1,instance:{members:[{...t,type:7,slot:0,name:"viewPlaneDistance",structure:$},{...t,type:7,slot:1,name:"lightPos",structure:L},{...t,type:7,slot:2,name:"sphere0Position",structure:H},{...t,type:7,slot:3,name:"sphere0Radius",structure:J},{...t,type:7,slot:4,name:"sphere0Color",structure:X},{...t,type:7,slot:5,name:"sphere0Material",structure:st}],methods:[],template:Hs}});Object.assign(at,{...s,type:2,name:"@TypeOf(.{})",align:1,isTuple:!0});Object.assign(nt,{...s,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:g}],methods:[],template:Js}});Object.assign(ot,{...s,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:nt}],methods:[],template:Qs}});Object.assign(jt,{...s,type:2,name:"raytracer.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:h},{...t,type:7,slot:1,name:"vendor",structure:h},{...t,type:7,slot:2,name:"version",structure:g},{...t,type:7,slot:3,name:"description",structure:D},{...t,type:7,slot:4,name:"parameters",structure:rt},{...t,type:7,slot:5,name:"inputImages",structure:at},{...t,type:7,slot:6,name:"outputImages",structure:ot}],methods:[],template:Ws}});Object.assign(R,{...s,type:2,name:"raytracer.KernelInput(u8,raytracer.kernel)",align:1});Object.assign(ct,{...s,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:z}],methods:[]}});Object.assign(ut,{...s,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:ct}],methods:[]}});Object.assign(I,{...s,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:ut}],methods:[]}});Object.assign(l,{...s,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:l}],methods:[]}});Object.assign(p,{...s,type:11,name:"raytracer.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:p}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:p},{...t,type:7,slot:1,name:"display-p3",structure:p}],methods:[],template:or}});Object.assign(K,{...s,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:K}],methods:[]}});Object.assign(it,{...s,type:2,name:"raytracer.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:I},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:K}],methods:[],template:ir},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:a},{...t,type:7,slot:1,name:"FPixel",structure:a},{...t,type:7,slot:2,name:"channels",structure:g}],methods:[],template:mr}});Object.assign(q,{...s,type:2,name:"raytracer.KernelOutput(u8,raytracer.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:it}],methods:[],template:jr}});Object.assign(T,{...s,type:2,name:"raytracer.KernelParameters(raytracer.kernel)",byteSize:80,align:16,instance:{members:[{...t,type:4,bitOffset:512,bitSize:32,byteSize:4,slot:4,name:"viewPlaneDistance",structure:O},{...t,type:5,bitOffset:0,bitSize:96,byteSize:16,slot:0,name:"lightPos",structure:w},{...t,type:5,bitOffset:128,bitSize:96,byteSize:16,slot:1,name:"sphere0Position",structure:w},{...t,type:4,bitOffset:544,bitSize:32,byteSize:4,slot:5,name:"sphere0Radius",structure:O},{...t,type:5,bitOffset:256,bitSize:96,byteSize:16,slot:2,name:"sphere0Color",structure:w},{...t,type:5,bitOffset:384,bitSize:128,byteSize:16,slot:3,name:"sphere0Material",structure:et}],methods:[],template:wr}});Object.assign(A,{...s,type:10,name:"ErrorSet2989147267",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:A}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:A}],methods:[],template:Ar}});Object.assign(ft,{...s,type:9,name:"ErrorSet2989147267!raytracer.KernelOutput(u8,raytracer.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:q},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:A}],methods:[]}});Object.assign(St,{...s,type:5,name:"createOutput",byteSize:128,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:640,bitSize:32,byteSize:4,slot:3,name:"0",structure:l},{...t,type:3,isRequired:!0,bitOffset:672,bitSize:32,byteSize:4,slot:4,name:"1",structure:l},{...t,type:5,isRequired:!0,bitOffset:928,bitSize:0,byteSize:0,slot:0,name:"2",structure:R},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:640,byteSize:80,slot:1,name:"3",structure:T},{...t,type:5,isRequired:!0,bitOffset:704,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ft}],methods:[]}});Object.assign(U,{...s,type:10,name:"ErrorSet2486615414",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:U}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:U}],methods:[],template:zr}});Object.assign(wt,{...s,type:9,name:"ErrorSet2486615414!raytracer.KernelOutput(u8,raytracer.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:q},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:U}],methods:[]}});Object.assign(At,{...s,type:5,name:"createPartialOutput",byteSize:128,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:640,bitSize:32,byteSize:4,slot:3,name:"0",structure:l},{...t,type:3,isRequired:!0,bitOffset:672,bitSize:32,byteSize:4,slot:4,name:"1",structure:l},{...t,type:3,isRequired:!0,bitOffset:704,bitSize:32,byteSize:4,slot:5,name:"2",structure:l},{...t,type:3,isRequired:!0,bitOffset:736,bitSize:32,byteSize:4,slot:6,name:"3",structure:l},{...t,type:5,isRequired:!0,bitOffset:992,bitSize:0,byteSize:0,slot:0,name:"4",structure:R},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:640,byteSize:80,slot:1,name:"5",structure:T},{...t,type:5,isRequired:!0,bitOffset:768,bitSize:224,byteSize:28,slot:2,name:"retval",structure:wt}],methods:[]}});Object.assign(Ut,{...s,type:2,name:"raytracer",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:a},{...t,type:7,slot:1,name:"Input",structure:a},{...t,type:7,slot:2,name:"Output",structure:a},{...t,type:7,slot:3,name:"Parameters",structure:a}],methods:[Io,qo],template:dr}});const To=[a,z,M,h,g,d,C,D,e,O,r,$,V,F,_,w,L,B,G,H,J,N,Q,W,X,Y,Z,tt,et,st,rt,at,nt,ot,jt,R,ct,ut,I,l,p,K,it,q,T,A,ft,St,U,wt,At,Ut],vo=Ut,xo={runtimeSafety:!1,littleEndian:!0},gt=Jr();gt.getSpecialExports();gt.recreateStructures(To,xo);const Eo=(async()=>{const c=new URL("raytracer-b4b946aa.wasm",import.meta.url).href;return fetch(c)})();gt.loadModule(Eo);gt.linkVariables(!0);const{constructor:Ko}=vo,{createPartialOutput:Mo,Input:Co,kernel:Ot}=Ko;function Do(c,i,u,o,n={},j={}){const f=[];for(const[m]of Ot.inputImages)f.push(m);const P=[];for(const[m]of Ot.outputImages)P.push(m);if(Array.isArray(n)){const m=n;n={};for(const[b,S]of f.entries())n[S]=m[b]}const y=new Co(void 0),v=[];let k;for(const m of f){let b=n[m];if(b||(f.length===1&&["data","width","height"].every(S=>!!n[S])?b=n:v.push(m)),y[m]=b,k){if(b.colorSpace!==k)throw new Error(`Input images must all use the same color space: ${k}`)}else k=b.colorSpace}if(v.length>0)throw new Error(`Missing input image${v.length>1?"s":""}: ${v.join(", ")}`);const pt=Mo(c,i,u,o,y,j),De=m=>{const b={};for(const S of P){const{data:{typedArray:x},width:$e,height:Er}=m[S];let E;if(typeof ImageData=="function"){const Kr=new Uint8ClampedArray(x.buffer,x.byteOffset,x.byteLength);E=new ImageData(Kr,$e,o,{colorSpace:k})}else E={data:x,width:$e,height:Er};if(P.length===1)return E;b[S]=E}return b};return pt[Symbol.toStringTag]==="Promise"?pt.then(De):De(pt)}function $o(){const c={};for(let[i,u]of Ot){if(i==="parameters"){const o={};for(const[n,j]of u){const f=o[n]={};for(let[P,y]of j)typeof y=="object"?y=y.string??y.valueOf():typeof y=="function"&&(y=Fo(y.name)),f[P]=y}u=o}else typeof u=="object"&&(u=u.string??u.valueOf());c[i]=u}return c}function Fo(c){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[c]}onmessage=async c=>{if(!Array.isArray(c.data))return;const[i,u,...o]=c.data;try{const[n,j]=await _o(i,o);postMessage([i,u,n],{transfer:j})}catch(n){postMessage(["error",u,n])}};async function _o(c,i){switch(c){case"getKernelInfo":return[$o(...i)];case"createPartialImageData":const o=await Do(...i),n=[];if("data"in o&&"width"in o&&"height"in o)n.push(o.data.buffer);else for(const j of Object.entries(o))n.push(o.data.buffer);return[o,n];default:throw new Error(`Unknown function: ${c}`)}}postMessage("ready");
