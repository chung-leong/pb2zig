import{u as Ve,a as ke,b as Ce,d as Ie,c as ve,e as xe,f as Ee,g as De,h as Ke,i as Me,j as Fe,k as Te,l as _e,m as $e,n as Be,o as Le,p as Ye,q as Ge}from"./index-b8a86fe8.js";Ve();ke();Ce();Ie();ve();xe();Ee();De();Ke();Me();Fe();Te();_e();$e();Be();Le();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},d={},G={},H={},k={},J={},N={},C={},b={},f={},Q={},W={},I={},m={},s={},r={},w={},g={},O={},X={},v={},Z={},x={},ee={},E={},te={},D={},re={},K={},se={},M={},ae={},F={},ne={},T={},ie={},_={},ue={},$={},oe={},B={},pe={},A={},le={},me={},ye={},y={},fe={},L={},Y={},U={},R={},de={},Se={},he={},ge={},ze={},we={},Oe={};Object.assign(d,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:5});Object.assign(G,{...t,type:1,name:"[14:0]u8",length:14,byteSize:15,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:4});Object.assign(H,{...t,type:11,name:"*const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:G}],methods:[],template:null},slot:3});Object.assign(k,{...t,type:11,name:"*const *const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[],template:null},slot:2});Object.assign(J,{...t,type:1,name:"[11:0]u8",length:11,byteSize:12,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:8});Object.assign(N,{...t,type:11,name:"*const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:J}],methods:[],template:null},slot:7});Object.assign(C,{...t,type:11,name:"*const *const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:N}],methods:[],template:null},slot:6});Object.assign(b,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:10});Object.assign(f,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:b}],methods:[],template:null},slot:9});Object.assign(Q,{...t,type:1,name:"[32:0]u8",length:32,byteSize:33,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:13});Object.assign(W,{...t,type:11,name:"*const [32:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[],template:null},slot:12});Object.assign(I,{...t,type:11,name:"*const *const [32:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:11});Object.assign(m,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[],template:null},slot:30});Object.assign(s,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:s}],methods:[],template:null},slot:51});Object.assign(r,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:s}],methods:[],template:null},slot:50});const He=new Uint8Array,Je=new Uint8Array([56,246,15,0]),Ne=new Uint8Array([0,0,0,0,0,0,128,64]);Object.assign(w,{...t,type:2,name:"Struct0012",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:He},slots:{0:{structure:r,memory:{array:Je},slots:{0:{structure:s,memory:{array:Ne}}}}}}},slot:37});Object.assign(g,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:w}],methods:[],template:null},slot:36});Object.assign(O,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:m}],methods:[],template:null},slot:31});const Qe=new Uint8Array,We=new Uint8Array([96,249,15,0]),Xe=new Uint8Array([0,0,0,0,0,0,240,191]),Ze=new Uint8Array([168,249,15,0]),et=new Uint8Array([0,0,0,0,0,0,240,191]),tt=new Uint8Array([0,250,15,0]),rt=new Uint8Array([0,0,0,0,0,0,0,192]),st=new Uint8Array([120,250,15,0]),at=new Uint8Array([0,0,0,0,0,0,224,191]);Object.assign(X,{...t,type:2,name:"Struct0021",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:r}],methods:[],template:{memory:{array:Qe},slots:{0:{structure:r,memory:{array:We},slots:{0:{structure:s,memory:{array:Xe}}}},1:{structure:r,memory:{array:Ze},slots:{0:{structure:s,memory:{array:et}}}},2:{structure:r,memory:{array:tt},slots:{0:{structure:s,memory:{array:rt}}}},3:{structure:r,memory:{array:st},slots:{0:{structure:s,memory:{array:at}}}}}}},slot:53});Object.assign(v,{...t,type:11,name:"Struct0018",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:52});const nt=new Uint8Array,it=new Uint8Array([96,249,15,0]),ut=new Uint8Array([0,0,0,0,0,0,240,63]),ot=new Uint8Array([168,249,15,0]),lt=new Uint8Array([0,0,0,0,0,0,240,63]),mt=new Uint8Array([0,250,15,0]),yt=new Uint8Array([0,0,0,0,0,0,0,64]),ct=new Uint8Array([120,250,15,0]),bt=new Uint8Array([0,0,0,0,0,0,224,63]);Object.assign(Z,{...t,type:2,name:"Struct0022",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:r}],methods:[],template:{memory:{array:nt},slots:{0:{structure:r,memory:{array:it},slots:{0:{structure:s,memory:{array:ut}}}},1:{structure:r,memory:{array:ot},slots:{0:{structure:s,memory:{array:lt}}}},2:{structure:r,memory:{array:mt},slots:{0:{structure:s,memory:{array:yt}}}},3:{structure:r,memory:{array:ct},slots:{0:{structure:s,memory:{array:bt}}}}}}},slot:55});Object.assign(x,{...t,type:11,name:"Struct0019",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:54});const pt=new Uint8Array,ft=new Uint8Array([96,249,15,0]),dt=new Uint8Array([154,153,153,153,153,153,217,191]),St=new Uint8Array([168,249,15,0]),ht=new Uint8Array([195,245,40,92,143,194,229,191]),gt=new Uint8Array([0,250,15,0]),zt=new Uint8Array([10,215,163,112,61,10,215,191]),wt=new Uint8Array([120,250,15,0]),Ot=new Uint8Array([123,20,174,71,225,122,164,191]);Object.assign(ee,{...t,type:2,name:"Struct0023",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:r}],methods:[],template:{memory:{array:pt},slots:{0:{structure:r,memory:{array:ft},slots:{0:{structure:s,memory:{array:dt}}}},1:{structure:r,memory:{array:St},slots:{0:{structure:s,memory:{array:ht}}}},2:{structure:r,memory:{array:gt},slots:{0:{structure:s,memory:{array:zt}}}},3:{structure:r,memory:{array:wt},slots:{0:{structure:s,memory:{array:Ot}}}}}}},slot:57});Object.assign(E,{...t,type:11,name:"Struct0020",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:56});const At=new Uint8Array,Ut=new Uint8Array([170,170,170,170]),Rt=new Uint8Array,qt=new Uint8Array([170,170,170,170]),jt=new Uint8Array,Pt=new Uint8Array([170,170,170,170]),Vt=new Uint8Array;Object.assign(te,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:O},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:v},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:x},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:E}],methods:[],template:{memory:{array:At},slots:{0:{structure:v,memory:{array:Ut},slots:{0:{structure:X,memory:{array:Rt}}}},1:{structure:x,memory:{array:qt},slots:{0:{structure:Z,memory:{array:jt}}}},2:{structure:E,memory:{array:Pt},slots:{0:{structure:ee,memory:{array:Vt}}}}}}},slot:39});Object.assign(D,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:38});const kt=new Uint8Array,Ct=new Uint8Array([128,250,15,0]),It=new Uint8Array([0,0,0,0,0,0,240,191]),vt=new Uint8Array([8,248,15,0]),xt=new Uint8Array([0,0,0,0,0,0,240,63]),Et=new Uint8Array([232,247,15,0]),Dt=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(re,{...t,type:2,name:"Struct0014",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:kt},slots:{0:{structure:r,memory:{array:Ct},slots:{0:{structure:s,memory:{array:It}}}},1:{structure:r,memory:{array:vt},slots:{0:{structure:s,memory:{array:xt}}}},2:{structure:r,memory:{array:Et},slots:{0:{structure:s,memory:{array:Dt}}}}}}},slot:41});Object.assign(K,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:40});const Kt=new Uint8Array,Mt=new Uint8Array([128,250,15,0]),Ft=new Uint8Array([0,0,0,0,0,0,0,0]),Tt=new Uint8Array([8,248,15,0]),_t=new Uint8Array([0,0,0,0,0,0,36,64]),$t=new Uint8Array([232,247,15,0]),Bt=new Uint8Array([0,0,0,0,0,0,8,64]);Object.assign(se,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:Kt},slots:{0:{structure:r,memory:{array:Mt},slots:{0:{structure:s,memory:{array:Ft}}}},1:{structure:r,memory:{array:Tt},slots:{0:{structure:s,memory:{array:_t}}}},2:{structure:r,memory:{array:$t},slots:{0:{structure:s,memory:{array:Bt}}}}}}},slot:43});Object.assign(M,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:42});const Lt=new Uint8Array,Yt=new Uint8Array([128,250,15,0]),Gt=new Uint8Array([0,0,0,0,0,0,20,192]),Ht=new Uint8Array([8,248,15,0]),Jt=new Uint8Array([0,0,0,0,0,0,20,64]),Nt=new Uint8Array([232,247,15,0]),Qt=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(ae,{...t,type:2,name:"Struct0016",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:Lt},slots:{0:{structure:r,memory:{array:Yt},slots:{0:{structure:s,memory:{array:Gt}}}},1:{structure:r,memory:{array:Ht},slots:{0:{structure:s,memory:{array:Jt}}}},2:{structure:r,memory:{array:Nt},slots:{0:{structure:s,memory:{array:Qt}}}}}}},slot:45});Object.assign(F,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:44});const Wt=new Uint8Array,Xt=new Uint8Array([170,170,170,170]),Zt=new Uint8Array,er=new Uint8Array([170,170,170,170]),tr=new Uint8Array,rr=new Uint8Array([170,170,170,170]),sr=new Uint8Array,ar=new Uint8Array([170,170,170,170]),nr=new Uint8Array,ir=new Uint8Array([170,170,170,170]),ur=new Uint8Array,or=new Uint8Array([170,170,170,170]),lr=new Uint8Array;Object.assign(ne,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"width",structure:g},{...e,type:8,isRequired:!1,slot:1,name:"height",structure:g},{...e,type:8,isRequired:!1,slot:2,name:"c",structure:D},{...e,type:8,isRequired:!1,slot:3,name:"w",structure:K},{...e,type:8,isRequired:!1,slot:4,name:"camDistance",structure:M},{...e,type:8,isRequired:!1,slot:5,name:"rotationY",structure:F}],methods:[],template:{memory:{array:Wt},slots:{0:{structure:g,memory:{array:Xt},slots:{0:{structure:w,memory:{array:Zt}}}},1:{structure:g,memory:{array:er},slots:{0:{structure:w,memory:{array:tr}}}},2:{structure:D,memory:{array:rr},slots:{0:{structure:te,memory:{array:sr}}}},3:{structure:K,memory:{array:ar},slots:{0:{structure:re,memory:{array:nr}}}},4:{structure:M,memory:{array:ir},slots:{0:{structure:se,memory:{array:ur}}}},5:{structure:F,memory:{array:or},slots:{0:{structure:ae,memory:{array:lr}}}}}}},slot:15});Object.assign(T,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:14});const mr=new Uint8Array;Object.assign(ie,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:mr}}},slot:17});Object.assign(_,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:16});const yr=new Uint8Array,cr=new Uint8Array([160,253,15,0]),br=new Uint8Array([4,0,0,0]);Object.assign(ue,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:yr},slots:{0:{structure:f,memory:{array:cr},slots:{0:{structure:b,memory:{array:br}}}}}}},slot:47});Object.assign($,{...t,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:46});const pr=new Uint8Array,fr=new Uint8Array([170,170,170,170]),dr=new Uint8Array;Object.assign(oe,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:$}],methods:[],template:{memory:{array:pr},slots:{0:{structure:$,memory:{array:fr},slots:{0:{structure:ue,memory:{array:dr}}}}}}},slot:19});Object.assign(B,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:18});const Sr=new Uint8Array,hr=new Uint8Array,gr=new Uint8Array([28,36,16,0]),zr=new Uint8Array([217,35,16,0]),wr=new Uint8Array([100,101,114,115,99,104,109,97,108,101,46,99,111,109,0]),Or=new Uint8Array([24,36,16,0]),Ar=new Uint8Array([194,35,16,0]),Ur=new Uint8Array([68,101,114,32,83,99,104,109,97,108,101,0]),Rr=new Uint8Array([20,36,16,0]),qr=new Uint8Array([1,0,0,0]),jr=new Uint8Array([16,36,16,0]),Pr=new Uint8Array([144,35,16,0]),Vr=new Uint8Array([82,97,121,116,114,97,99,101,115,32,97,32,81,117,97,116,101,114,110,105,111,110,32,74,117,108,105,97,32,115,101,116,0]),kr=new Uint8Array([170,170,170,170]),Cr=new Uint8Array,Ir=new Uint8Array([170,170,170,170]),vr=new Uint8Array,xr=new Uint8Array([170,170,170,170]),Er=new Uint8Array;Object.assign(pe,{...t,type:2,name:"rt-julia.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Sr}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:k},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:C},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:f},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:I},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:T},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:_},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:B}],methods:[],template:{memory:{array:hr},slots:{0:{structure:k,memory:{array:gr},slots:{0:{structure:H,memory:{array:zr},slots:{0:{structure:G,memory:{array:wr}}}}}},1:{structure:C,memory:{array:Or},slots:{0:{structure:N,memory:{array:Ar},slots:{0:{structure:J,memory:{array:Ur}}}}}},2:{structure:f,memory:{array:Rr},slots:{0:{structure:b,memory:{array:qr}}}},3:{structure:I,memory:{array:jr},slots:{0:{structure:W,memory:{array:Pr},slots:{0:{structure:Q,memory:{array:Vr}}}}}},4:{structure:T,memory:{array:kr},slots:{0:{structure:ne,memory:{array:Cr}}}},5:{structure:_,memory:{array:Ir},slots:{0:{structure:ie,memory:{array:vr}}}},6:{structure:B,memory:{array:xr},slots:{0:{structure:oe,memory:{array:Er}}}}}}},slot:1});const Dr=new Uint8Array;Object.assign(A,{...t,type:2,name:"rt-julia.KernelInput(u8,rt-julia.kernel)",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Dr}}},slot:20});Object.assign(le,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:25});Object.assign(me,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:le}],methods:[],template:null},slot:24});Object.assign(ye,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:me}],methods:[],template:null},slot:23});Object.assign(y,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:26});const Kr=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(fe,{...t,type:9,name:"rt-julia.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:b},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:b}],methods:[],template:{memory:{array:Kr}}},slot:27});Object.assign(L,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:L}],methods:[],template:null},slot:28});const Mr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Fr=new Uint8Array,Tr=new Uint8Array([88,35,16,0]),_r=new Uint8Array([4,0,0,0]);Object.assign(Y,{...t,type:2,name:"rt-julia.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:ye},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:fe},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:L}],methods:[],template:{memory:{array:Mr}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:le},{...e,type:7,isRequired:!1,name:"FPixel",structure:O},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:Fr},slots:{0:{structure:f,memory:{array:Tr},slots:{0:{structure:b,memory:{array:_r}}}}}}},slot:22});const $r=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Br=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Lr=new Uint8Array([0,0,0,0,0,0,0,0]),Yr=new Uint8Array;Object.assign(U,{...t,type:2,name:"rt-julia.KernelOutput(u8,rt-julia.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:Y}],methods:[],template:{memory:{array:$r},slots:{0:{structure:Y,memory:{array:Br},slots:{0:{structure:ye,memory:{array:Lr},address:1047560,slots:{0:{structure:me,memory:{array:Yr},address:0}}}}}}}},slot:21});const Gr=new Uint8Array([205,204,204,190,123,20,46,191,236,81,184,190,10,215,35,189,0,0,0,68,0,0,0,68,0,0,0,0,0,0,64,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);Object.assign(R,{...t,type:2,name:"rt-julia.KernelParameters(rt-julia.kernel)",length:1,byteSize:48,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:0,name:"width",structure:m},{...e,type:4,isRequired:!1,bitOffset:160,bitSize:32,byteSize:4,slot:1,name:"height",structure:m},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:128,byteSize:16,slot:2,name:"c",structure:O},{...e,type:4,isRequired:!1,bitOffset:192,bitSize:32,byteSize:4,slot:3,name:"w",structure:m},{...e,type:4,isRequired:!1,bitOffset:224,bitSize:32,byteSize:4,slot:4,name:"camDistance",structure:m},{...e,type:4,isRequired:!1,bitOffset:256,bitSize:32,byteSize:4,slot:5,name:"rotationY",structure:m}],methods:[],template:{memory:{array:Gr}}},slot:29});Object.assign(de,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(rt-julia.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:48});Object.assign(Se,{...t,type:7,name:"ErrorSet0000!rt-julia.KernelOutput(u8,rt-julia.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:U},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:de}],methods:[],template:null},slot:34});Object.assign(he,{...t,type:3,name:"createOutput",length:1,byteSize:96,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:6,bitOffset:768,bitSize:0,byteSize:0,slot:2,name:"2",structure:A},{...e,type:6,bitOffset:0,bitSize:384,byteSize:48,slot:3,name:"3",structure:R},{...e,type:6,bitOffset:448,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Se}],methods:[],template:null},slot:32});Object.assign(ge,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(rt-julia.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:49});Object.assign(ze,{...t,type:7,name:"ErrorSet0001!rt-julia.KernelOutput(u8,rt-julia.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:U},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:ge}],methods:[],template:null},slot:35});Object.assign(we,{...t,type:3,name:"createPartialOutput",length:1,byteSize:96,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:3,bitOffset:448,bitSize:32,byteSize:4,slot:2,name:"2",structure:y},{...e,type:3,bitOffset:480,bitSize:32,byteSize:4,slot:3,name:"3",structure:y},{...e,type:6,bitOffset:768,bitSize:0,byteSize:0,slot:4,name:"4",structure:A},{...e,type:6,bitOffset:0,bitSize:384,byteSize:48,slot:5,name:"5",structure:R},{...e,type:6,bitOffset:512,bitSize:224,byteSize:28,slot:6,name:"retval",structure:ze}],methods:[],template:null},slot:33});const Hr=new Uint8Array,Jr={argStruct:he,thunk:7,name:"createOutput"},Nr={argStruct:we,thunk:2,name:"createPartialOutput"};Object.assign(Oe,{...t,type:2,name:"rt-julia",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Hr}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:pe},{...e,type:7,isRequired:!1,name:"Input",structure:A},{...e,type:7,isRequired:!1,name:"Output",structure:U},{...e,type:7,isRequired:!1,name:"Parameters",structure:R}],methods:[Jr,Nr],template:null},slot:0});const Qr=[d,G,H,k,J,N,C,b,f,Q,W,I,m,s,r,w,g,O,X,v,Z,x,ee,E,te,D,re,K,se,M,ae,F,ne,T,ie,_,ue,$,oe,B,pe,A,le,me,ye,y,fe,L,Y,U,R,de,Se,he,ge,ze,we,Oe],Wr=Ye(Qr),Xr=Oe.constructor,Zr=(async()=>{const u=new URL("rt-julia-342be967.wasm",import.meta.url).href;return fetch(u)})();Ge(Zr,{...Wr,writeBack:!0});const{createOutput:us,createPartialOutput:es,kernel:be,Input:ts,Output:os,Parameters:ls}=Xr;function rs(u,l,n,a,i={},S={}){if(Array.isArray(i)){const p=i;i={};for(const[c,h]of Object.keys(be.inputImages).entries())i[h]=p[c]}const q=new ts(void 0),j=Object.keys(be.inputImages),o=[];let z;for(const p of j){let c=i[p];if(c||(j.length===1&&["data","width","height"].every(h=>!!i[h])?c=i:o.push(p)),q[p]=c,z){if(c.colorSpace!==z)throw new Error(`Input images must all use the same color space: ${z}`)}else z=c.colorSpace}if(o.length>0)throw new Error(`Missing input image${o.length>1?"s":""}: ${o.join(", ")}`);const ce=es(u,l,n,a,q,S),Ae=p=>{const c=Object.keys(p),h={};for(const Ue of c){const{data:{typedArray:P},width:Re,height:je}=p[Ue];let V;if(typeof ImageData=="function"){const Pe=new Uint8ClampedArray(P.buffer,P.byteOffset,P.byteLength);V=new ImageData(Pe,Re,a,{colorSpace:z})}else V={data:P,width:Re,height:je};if(c.length===1)return V;h[Ue]=V}return h};return ce[Symbol.toStringTag]==="Promise"?ce.then(Ae):Ae(ce)}function ss(){const u={};for(let[l,n]of Object.entries(be)){if(l==="parameters"){const a={};for(const[i,S]of Object.entries(n)){const q=a[i]={};for(let[j,o]of Object.entries(S))typeof o=="object"?"string"in o?o=o.string:o=qe(o):typeof o=="function"&&(o=as(o.name)),q[j]=o}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());u[l]=n}return u}function qe(u){const l=[];for(let[n,a]of Object.entries(u))typeof a=="object"&&(a=qe(a)),l[n]=a;return l}function as(u){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[u]}onmessage=u=>{const[l,n,...a]=u.data;ns(l,a).then(([i,S])=>{postMessage([l,n,i],{transfer:S})}).catch(i=>{postMessage(["error",n,i])})};async function ns(u,l){switch(u){case"getKernelInfo":return[ss(...l)];case"createPartialImageData":const a=await rs(...l),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const S of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${u}`)}}
