import{u as ft,a as dt,b as St,c as gt,d as ht,e as zt,f as wt,g as At,h as Ut,i as Rt,j as qt,k as Ot,l as jt,n as Pt,m as Vt,r as Ct,o as kt,p as It,q as xt}from"./index-b8a86fe8.js";ft();dt();St();gt();ht();zt();wt();At();Ut();Rt();qt();Ot();jt();Pt();Vt();Ct();kt();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},S={},le={},ce={},I={},be={},pe={},x={},n={},a={},fe={},de={},v={},Se={},ge={},E={},he={},D={},ze={},K={},we={},Ae={},F={},Ue={},M={},m={},w={},s={},r={},Re={},T={},qe={},_={},Oe={},H={},je={},L={},Pe={},$={},Ve={},B={},Ce={},N={},ke={},G={},Ie={},J={},xe={},Q={},ve={},W={},p={},A={},R={},z={},Ee={},X={},De={},Y={},Ke={},Z={},Fe={},Me={},ee={},Te={},te={},_e={},re={},He={},se={},Le={},ae={},$e={},ne={},Be={},ie={},Ne={},ue={},Ge={},oe={},Ze={},q={},Je={},Qe={},We={},b={},et={},me={},tt={},ye={},O={},j={},rt={},st={},at={},nt={},it={},ut={},ot={};Object.assign(S,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:5});Object.assign(le,{...t,type:1,name:"[19:0]u8",length:19,byteSize:20,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:4});Object.assign(ce,{...t,type:11,name:"*const [19:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:3});Object.assign(I,{...t,type:11,name:"*const *const [19:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:2});Object.assign(be,{...t,type:1,name:"[11:0]u8",length:11,byteSize:12,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:8});Object.assign(pe,{...t,type:11,name:"*const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:7});Object.assign(x,{...t,type:11,name:"*const *const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:6});Object.assign(n,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:n}],methods:[],template:null},slot:10});Object.assign(a,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:n}],methods:[],template:null},slot:9});Object.assign(fe,{...t,type:1,name:"[38:0]u8",length:38,byteSize:39,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:13});Object.assign(de,{...t,type:11,name:"*const [38:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:12});Object.assign(v,{...t,type:11,name:"*const *const [38:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:de}],methods:[],template:null},slot:11});Object.assign(Se,{...t,type:13,name:"@Vector(2, i32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,structure:n}],methods:[],template:null},slot:30});const vt=new Uint8Array,Et=new Uint8Array([112,249,15,0]),Dt=new Uint8Array([100,0,0,0]),Kt=new Uint8Array([80,248,15,0]),Ft=new Uint8Array([100,0,0,0]);Object.assign(ge,{...t,type:2,name:"Struct0044",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:a},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:a}],methods:[],template:{memory:{array:vt},slots:{0:{structure:a,memory:{array:Et},slots:{0:{structure:n,memory:{array:Dt}}}},1:{structure:a,memory:{array:Kt},slots:{0:{structure:n,memory:{array:Ft}}}}}}},slot:69});Object.assign(E,{...t,type:11,name:"Struct0032",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ge}],methods:[],template:null},slot:68});const Mt=new Uint8Array,Tt=new Uint8Array([112,249,15,0]),_t=new Uint8Array([232,3,0,0]),Ht=new Uint8Array([80,248,15,0]),Lt=new Uint8Array([232,3,0,0]);Object.assign(he,{...t,type:2,name:"Struct0045",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:a},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:a}],methods:[],template:{memory:{array:Mt},slots:{0:{structure:a,memory:{array:Tt},slots:{0:{structure:n,memory:{array:_t}}}},1:{structure:a,memory:{array:Ht},slots:{0:{structure:n,memory:{array:Lt}}}}}}},slot:71});Object.assign(D,{...t,type:11,name:"Struct0033",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:he}],methods:[],template:null},slot:70});const $t=new Uint8Array,Bt=new Uint8Array([112,249,15,0]),Nt=new Uint8Array([0,2,0,0]),Gt=new Uint8Array([80,248,15,0]),Jt=new Uint8Array([0,2,0,0]);Object.assign(ze,{...t,type:2,name:"Struct0046",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:a},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:a}],methods:[],template:{memory:{array:$t},slots:{0:{structure:a,memory:{array:Bt},slots:{0:{structure:n,memory:{array:Nt}}}},1:{structure:a,memory:{array:Gt},slots:{0:{structure:n,memory:{array:Jt}}}}}}},slot:73});Object.assign(K,{...t,type:11,name:"Struct0034",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ze}],methods:[],template:null},slot:72});Object.assign(we,{...t,type:1,name:"[17:0]u8",length:17,byteSize:18,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:76});Object.assign(Ae,{...t,type:11,name:"*const [17:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:we}],methods:[],template:null},slot:75});Object.assign(F,{...t,type:11,name:"*const *const [17:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ae}],methods:[],template:null},slot:74});const Qt=new Uint8Array,Wt=new Uint8Array([170,170,170,170]),Xt=new Uint8Array,Yt=new Uint8Array([170,170,170,170]),Zt=new Uint8Array,er=new Uint8Array([170,170,170,170]),tr=new Uint8Array,rr=new Uint8Array([64,249,15,0]),sr=new Uint8Array([127,34,16,0]),ar=new Uint8Array([79,117,116,112,117,116,32,105,109,97,103,101,32,115,105,122,101,0]);Object.assign(Ue,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:Se},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:E},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:D},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:K},{...e,type:8,isRequired:!1,slot:3,name:"aeDisplayName",structure:F}],methods:[],template:{memory:{array:Qt},slots:{0:{structure:E,memory:{array:Wt},slots:{0:{structure:ge,memory:{array:Xt}}}},1:{structure:D,memory:{array:Yt},slots:{0:{structure:he,memory:{array:Zt}}}},2:{structure:K,memory:{array:er},slots:{0:{structure:ze,memory:{array:tr}}}},3:{structure:F,memory:{array:rr},slots:{0:{structure:Ae,memory:{array:sr},slots:{0:{structure:we,memory:{array:ar}}}}}}}}},slot:40});Object.assign(M,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ue}],methods:[],template:null},slot:39});Object.assign(m,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[],template:null},slot:32});Object.assign(w,{...t,type:13,name:"@Vector(3, f32)",length:3,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:m}],methods:[],template:null},slot:31});Object.assign(s,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:s}],methods:[],template:null},slot:90});Object.assign(r,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:s}],methods:[],template:null},slot:89});const nr=new Uint8Array,ir=new Uint8Array([192,249,15,0]),ur=new Uint8Array([0,0,0,0,0,0,89,192]),or=new Uint8Array([24,250,15,0]),mr=new Uint8Array([0,0,0,0,0,0,0,0]),yr=new Uint8Array([112,250,15,0]),lr=new Uint8Array([0,0,0,0,0,0,89,192]);Object.assign(Re,{...t,type:2,name:"Struct0047",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r}],methods:[],template:{memory:{array:nr},slots:{0:{structure:r,memory:{array:ir},slots:{0:{structure:s,memory:{array:ur}}}},1:{structure:r,memory:{array:or},slots:{0:{structure:s,memory:{array:mr}}}},2:{structure:r,memory:{array:yr},slots:{0:{structure:s,memory:{array:lr}}}}}}},slot:78});Object.assign(T,{...t,type:11,name:"Struct0035",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Re}],methods:[],template:null},slot:77});const cr=new Uint8Array,br=new Uint8Array([192,249,15,0]),pr=new Uint8Array([0,0,0,0,0,0,89,64]),fr=new Uint8Array([24,250,15,0]),dr=new Uint8Array([0,0,0,0,0,0,52,64]),Sr=new Uint8Array([112,250,15,0]),gr=new Uint8Array([0,0,0,0,0,0,89,64]);Object.assign(qe,{...t,type:2,name:"Struct0048",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r}],methods:[],template:{memory:{array:cr},slots:{0:{structure:r,memory:{array:br},slots:{0:{structure:s,memory:{array:pr}}}},1:{structure:r,memory:{array:fr},slots:{0:{structure:s,memory:{array:dr}}}},2:{structure:r,memory:{array:Sr},slots:{0:{structure:s,memory:{array:gr}}}}}}},slot:80});Object.assign(_,{...t,type:11,name:"Struct0036",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:qe}],methods:[],template:null},slot:79});const hr=new Uint8Array,zr=new Uint8Array([192,249,15,0]),wr=new Uint8Array([0,0,0,0,0,0,24,192]),Ar=new Uint8Array([24,250,15,0]),Ur=new Uint8Array([0,0,0,0,0,0,16,64]),Rr=new Uint8Array([112,250,15,0]),qr=new Uint8Array([0,0,0,0,0,0,24,64]);Object.assign(Oe,{...t,type:2,name:"Struct0049",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r}],methods:[],template:{memory:{array:hr},slots:{0:{structure:r,memory:{array:zr},slots:{0:{structure:s,memory:{array:wr}}}},1:{structure:r,memory:{array:Ar},slots:{0:{structure:s,memory:{array:Ur}}}},2:{structure:r,memory:{array:Rr},slots:{0:{structure:s,memory:{array:qr}}}}}}},slot:82});Object.assign(H,{...t,type:11,name:"Struct0037",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Oe}],methods:[],template:null},slot:81});const Or=new Uint8Array,jr=new Uint8Array([170,170,170,170]),Pr=new Uint8Array,Vr=new Uint8Array([170,170,170,170]),Cr=new Uint8Array,kr=new Uint8Array([170,170,170,170]),Ir=new Uint8Array;Object.assign(je,{...t,type:2,name:"Struct0020",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:w},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:T},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:_},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:H}],methods:[],template:{memory:{array:Or},slots:{0:{structure:T,memory:{array:jr},slots:{0:{structure:Re,memory:{array:Pr}}}},1:{structure:_,memory:{array:Vr},slots:{0:{structure:qe,memory:{array:Cr}}}},2:{structure:H,memory:{array:kr},slots:{0:{structure:Oe,memory:{array:Ir}}}}}}},slot:42});Object.assign(L,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:je}],methods:[],template:null},slot:41});const xr=new Uint8Array,vr=new Uint8Array([192,249,15,0]),Er=new Uint8Array([0,0,0,0,0,0,20,192]),Dr=new Uint8Array([24,250,15,0]),Kr=new Uint8Array([0,0,0,0,0,0,240,191]),Fr=new Uint8Array([112,250,15,0]),Mr=new Uint8Array([0,0,0,0,0,0,20,192]);Object.assign(Pe,{...t,type:2,name:"Struct0050",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r}],methods:[],template:{memory:{array:xr},slots:{0:{structure:r,memory:{array:vr},slots:{0:{structure:s,memory:{array:Er}}}},1:{structure:r,memory:{array:Dr},slots:{0:{structure:s,memory:{array:Kr}}}},2:{structure:r,memory:{array:Fr},slots:{0:{structure:s,memory:{array:Mr}}}}}}},slot:84});Object.assign($,{...t,type:11,name:"Struct0038",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Pe}],methods:[],template:null},slot:83});const Tr=new Uint8Array,_r=new Uint8Array([192,249,15,0]),Hr=new Uint8Array([0,0,0,0,0,0,20,64]),Lr=new Uint8Array([24,250,15,0]),$r=new Uint8Array([0,0,0,0,0,0,240,63]),Br=new Uint8Array([112,250,15,0]),Nr=new Uint8Array([0,0,0,0,0,0,20,64]);Object.assign(Ve,{...t,type:2,name:"Struct0051",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r}],methods:[],template:{memory:{array:Tr},slots:{0:{structure:r,memory:{array:_r},slots:{0:{structure:s,memory:{array:Hr}}}},1:{structure:r,memory:{array:Lr},slots:{0:{structure:s,memory:{array:$r}}}},2:{structure:r,memory:{array:Br},slots:{0:{structure:s,memory:{array:Nr}}}}}}},slot:86});Object.assign(B,{...t,type:11,name:"Struct0039",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ve}],methods:[],template:null},slot:85});const Gr=new Uint8Array,Jr=new Uint8Array([192,249,15,0]),Qr=new Uint8Array([0,0,0,0,0,0,0,0]),Wr=new Uint8Array([24,250,15,0]),Xr=new Uint8Array([0,0,0,0,0,0,0,0]),Yr=new Uint8Array([112,250,15,0]),Zr=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(Ce,{...t,type:2,name:"Struct0052",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r}],methods:[],template:{memory:{array:Gr},slots:{0:{structure:r,memory:{array:Jr},slots:{0:{structure:s,memory:{array:Qr}}}},1:{structure:r,memory:{array:Wr},slots:{0:{structure:s,memory:{array:Xr}}}},2:{structure:r,memory:{array:Yr},slots:{0:{structure:s,memory:{array:Zr}}}}}}},slot:88});Object.assign(N,{...t,type:11,name:"Struct0040",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ce}],methods:[],template:null},slot:87});const es=new Uint8Array,ts=new Uint8Array([170,170,170,170]),rs=new Uint8Array,ss=new Uint8Array([170,170,170,170]),as=new Uint8Array,ns=new Uint8Array([170,170,170,170]),is=new Uint8Array;Object.assign(ke,{...t,type:2,name:"Struct0021",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:w},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:$},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:B},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:N}],methods:[],template:{memory:{array:es},slots:{0:{structure:$,memory:{array:ts},slots:{0:{structure:Pe,memory:{array:rs}}}},1:{structure:B,memory:{array:ss},slots:{0:{structure:Ve,memory:{array:as}}}},2:{structure:N,memory:{array:ns},slots:{0:{structure:Ce,memory:{array:is}}}}}}},slot:44});Object.assign(G,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ke}],methods:[],template:null},slot:43});const us=new Uint8Array,os=new Uint8Array([112,250,15,0]),ms=new Uint8Array([0,0,0,0,0,128,102,192]),ys=new Uint8Array([8,248,15,0]),ls=new Uint8Array([0,0,0,0,0,128,102,64]),cs=new Uint8Array([128,249,15,0]),bs=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(Ie,{...t,type:2,name:"Struct0022",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:us},slots:{0:{structure:r,memory:{array:os},slots:{0:{structure:s,memory:{array:ms}}}},1:{structure:r,memory:{array:ys},slots:{0:{structure:s,memory:{array:ls}}}},2:{structure:r,memory:{array:cs},slots:{0:{structure:s,memory:{array:bs}}}}}}},slot:46});Object.assign(J,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ie}],methods:[],template:null},slot:45});const ps=new Uint8Array,fs=new Uint8Array([112,250,15,0]),ds=new Uint8Array([0,0,0,0,0,0,36,64]),Ss=new Uint8Array([8,248,15,0]),gs=new Uint8Array([0,0,0,0,0,0,89,64]),hs=new Uint8Array([128,249,15,0]),zs=new Uint8Array([0,0,0,0,0,0,57,64]);Object.assign(xe,{...t,type:2,name:"Struct0023",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:ps},slots:{0:{structure:r,memory:{array:fs},slots:{0:{structure:s,memory:{array:ds}}}},1:{structure:r,memory:{array:Ss},slots:{0:{structure:s,memory:{array:gs}}}},2:{structure:r,memory:{array:hs},slots:{0:{structure:s,memory:{array:zs}}}}}}},slot:48});Object.assign(Q,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:xe}],methods:[],template:null},slot:47});const ws=new Uint8Array,As=new Uint8Array([112,250,15,0]),Us=new Uint8Array([0,0,0,0,0,0,240,63]),Rs=new Uint8Array([8,248,15,0]),qs=new Uint8Array([0,0,0,0,0,0,36,64]),Os=new Uint8Array([128,249,15,0]),js=new Uint8Array([0,0,0,0,0,0,28,64]);Object.assign(ve,{...t,type:2,name:"Struct0024",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:ws},slots:{0:{structure:r,memory:{array:As},slots:{0:{structure:s,memory:{array:Us}}}},1:{structure:r,memory:{array:Rs},slots:{0:{structure:s,memory:{array:qs}}}},2:{structure:r,memory:{array:Os},slots:{0:{structure:s,memory:{array:js}}}}}}},slot:50});Object.assign(W,{...t,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ve}],methods:[],template:null},slot:49});Object.assign(p,{...t,name:"bool",length:1,byteSize:1,align:0,instance:{members:[{...e,type:1,isRequired:!1,bitOffset:0,bitSize:1,byteSize:1,structure:p}],methods:[],template:null},slot:33});Object.assign(A,{...t,type:11,name:"*const bool",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:p}],methods:[],template:null},slot:91});const Ps=new Uint8Array,Vs=new Uint8Array([35,245,15,0]),Cs=new Uint8Array([0]);Object.assign(R,{...t,type:2,name:"Struct0025",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:p},{...e,type:8,isRequired:!1,slot:0,name:"defaultValue",structure:A}],methods:[],template:{memory:{array:Ps},slots:{0:{structure:A,memory:{array:Vs},slots:{0:{structure:p,memory:{array:Cs}}}}}}},slot:52});Object.assign(z,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:R}],methods:[],template:null},slot:51});const ks=new Uint8Array,Is=new Uint8Array([112,250,15,0]),xs=new Uint8Array([154,153,153,153,153,153,185,191]),vs=new Uint8Array([8,248,15,0]),Es=new Uint8Array([0,0,0,0,0,0,240,63]),Ds=new Uint8Array([128,249,15,0]),Ks=new Uint8Array([195,245,40,92,143,194,213,63]);Object.assign(Ee,{...t,type:2,name:"Struct0026",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:ks},slots:{0:{structure:r,memory:{array:Is},slots:{0:{structure:s,memory:{array:xs}}}},1:{structure:r,memory:{array:vs},slots:{0:{structure:s,memory:{array:Es}}}},2:{structure:r,memory:{array:Ds},slots:{0:{structure:s,memory:{array:Ks}}}}}}},slot:54});Object.assign(X,{...t,type:11,name:"Struct0013",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ee}],methods:[],template:null},slot:53});const Fs=new Uint8Array,Ms=new Uint8Array([240,248,15,0]),Ts=new Uint8Array([0,0,0,0]),_s=new Uint8Array([88,249,15,0]),Hs=new Uint8Array([2,0,0,0]),Ls=new Uint8Array([152,249,15,0]),$s=new Uint8Array([0,0,0,0]);Object.assign(De,{...t,type:2,name:"Struct0027",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:n},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:a},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:a},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:a}],methods:[],template:{memory:{array:Fs},slots:{0:{structure:a,memory:{array:Ms},slots:{0:{structure:n,memory:{array:Ts}}}},1:{structure:a,memory:{array:_s},slots:{0:{structure:n,memory:{array:Hs}}}},2:{structure:a,memory:{array:Ls},slots:{0:{structure:n,memory:{array:$s}}}}}}},slot:56});Object.assign(Y,{...t,type:11,name:"Struct0014",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:De}],methods:[],template:null},slot:55});const Bs=new Uint8Array,Ns=new Uint8Array([112,250,15,0]),Gs=new Uint8Array([1]);Object.assign(Ke,{...t,type:2,name:"Struct0028",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:p},{...e,type:8,isRequired:!1,slot:0,name:"defaultValue",structure:A}],methods:[],template:{memory:{array:Bs},slots:{0:{structure:A,memory:{array:Ns},slots:{0:{structure:p,memory:{array:Gs}}}}}}},slot:58});Object.assign(Z,{...t,type:11,name:"Struct0015",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ke}],methods:[],template:null},slot:57});Object.assign(Fe,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:m}],methods:[],template:null},slot:34});const Js=new Uint8Array,Qs=new Uint8Array([64,250,15,0]),Ws=new Uint8Array([0,0,0,0,0,0,0,0]),Xs=new Uint8Array([120,250,15,0]),Ys=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(Me,{...t,type:2,name:"Struct0053",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Js},slots:{0:{structure:r,memory:{array:Qs},slots:{0:{structure:s,memory:{array:Ws}}}},1:{structure:r,memory:{array:Xs},slots:{0:{structure:s,memory:{array:Ys}}}}}}},slot:93});Object.assign(ee,{...t,type:11,name:"Struct0041",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Me}],methods:[],template:null},slot:92});const Zs=new Uint8Array,ea=new Uint8Array([64,250,15,0]),ta=new Uint8Array([0,0,0,0,0,128,86,64]),ra=new Uint8Array([120,250,15,0]),sa=new Uint8Array([0,0,0,0,0,128,118,64]);Object.assign(Te,{...t,type:2,name:"Struct0054",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Zs},slots:{0:{structure:r,memory:{array:ea},slots:{0:{structure:s,memory:{array:ta}}}},1:{structure:r,memory:{array:ra},slots:{0:{structure:s,memory:{array:sa}}}}}}},slot:95});Object.assign(te,{...t,type:11,name:"Struct0042",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Te}],methods:[],template:null},slot:94});const aa=new Uint8Array,na=new Uint8Array([64,250,15,0]),ia=new Uint8Array([0,0,0,0,0,0,44,64]),ua=new Uint8Array([120,250,15,0]),oa=new Uint8Array([0,0,0,0,0,128,111,64]);Object.assign(_e,{...t,type:2,name:"Struct0055",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:aa},slots:{0:{structure:r,memory:{array:na},slots:{0:{structure:s,memory:{array:ia}}}},1:{structure:r,memory:{array:ua},slots:{0:{structure:s,memory:{array:oa}}}}}}},slot:97});Object.assign(re,{...t,type:11,name:"Struct0043",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:_e}],methods:[],template:null},slot:96});const ma=new Uint8Array,ya=new Uint8Array([170,170,170,170]),la=new Uint8Array,ca=new Uint8Array([170,170,170,170]),ba=new Uint8Array,pa=new Uint8Array([170,170,170,170]),fa=new Uint8Array;Object.assign(He,{...t,type:2,name:"Struct0029",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:Fe},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:ee},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:te},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:re}],methods:[],template:{memory:{array:ma},slots:{0:{structure:ee,memory:{array:ya},slots:{0:{structure:Me,memory:{array:la}}}},1:{structure:te,memory:{array:ca},slots:{0:{structure:Te,memory:{array:ba}}}},2:{structure:re,memory:{array:pa},slots:{0:{structure:_e,memory:{array:fa}}}}}}},slot:60});Object.assign(se,{...t,type:11,name:"Struct0016",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:He}],methods:[],template:null},slot:59});const da=new Uint8Array,Sa=new Uint8Array([112,250,15,0]),ga=new Uint8Array([0,0,0,0,0,0,224,63]),ha=new Uint8Array([8,248,15,0]),za=new Uint8Array([0,0,0,0,0,0,36,64]),wa=new Uint8Array([128,249,15,0]),Aa=new Uint8Array([0,0,0,0,0,0,12,64]);Object.assign(Le,{...t,type:2,name:"Struct0030",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:da},slots:{0:{structure:r,memory:{array:Sa},slots:{0:{structure:s,memory:{array:ga}}}},1:{structure:r,memory:{array:ha},slots:{0:{structure:s,memory:{array:za}}}},2:{structure:r,memory:{array:wa},slots:{0:{structure:s,memory:{array:Aa}}}}}}},slot:62});Object.assign(ae,{...t,type:11,name:"Struct0017",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Le}],methods:[],template:null},slot:61});const Ua=new Uint8Array,Ra=new Uint8Array([170,170,170,170]),qa=new Uint8Array,Oa=new Uint8Array([170,170,170,170]),ja=new Uint8Array,Pa=new Uint8Array([170,170,170,170]),Va=new Uint8Array,Ca=new Uint8Array([170,170,170,170]),ka=new Uint8Array,Ia=new Uint8Array([170,170,170,170]),xa=new Uint8Array,va=new Uint8Array([170,170,170,170]),Ea=new Uint8Array,Da=new Uint8Array([170,170,170,170]),Ka=new Uint8Array,Fa=new Uint8Array([170,170,170,170]),Ma=new Uint8Array,Ta=new Uint8Array([170,170,170,170]),_a=new Uint8Array,Ha=new Uint8Array([170,170,170,170]),La=new Uint8Array,$a=new Uint8Array([170,170,170,170]),Ba=new Uint8Array,Na=new Uint8Array([170,170,170,170]),Ga=new Uint8Array,Ja=new Uint8Array([170,170,170,170]),Qa=new Uint8Array;Object.assign($e,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"size",structure:M},{...e,type:8,isRequired:!1,slot:1,name:"cameraPosition",structure:L},{...e,type:8,isRequired:!1,slot:2,name:"cameraPositionFine",structure:G},{...e,type:8,isRequired:!1,slot:3,name:"cameraRotation",structure:J},{...e,type:8,isRequired:!1,slot:4,name:"terrainHorizon",structure:Q},{...e,type:8,isRequired:!1,slot:5,name:"terrainDetail",structure:W},{...e,type:8,isRequired:!1,slot:6,name:"buildings",structure:z},{...e,type:8,isRequired:!1,slot:7,name:"waterLevel",structure:X},{...e,type:8,isRequired:!1,slot:8,name:"sampling",structure:Y},{...e,type:8,isRequired:!1,slot:9,name:"shadows",structure:Z},{...e,type:8,isRequired:!1,slot:10,name:"contours",structure:z},{...e,type:8,isRequired:!1,slot:11,name:"sun",structure:se},{...e,type:8,isRequired:!1,slot:12,name:"terrainHeight",structure:ae}],methods:[],template:{memory:{array:Ua},slots:{0:{structure:M,memory:{array:Ra},slots:{0:{structure:Ue,memory:{array:qa}}}},1:{structure:L,memory:{array:Oa},slots:{0:{structure:je,memory:{array:ja}}}},2:{structure:G,memory:{array:Pa},slots:{0:{structure:ke,memory:{array:Va}}}},3:{structure:J,memory:{array:Ca},slots:{0:{structure:Ie,memory:{array:ka}}}},4:{structure:Q,memory:{array:Ia},slots:{0:{structure:xe,memory:{array:xa}}}},5:{structure:W,memory:{array:va},slots:{0:{structure:ve,memory:{array:Ea}}}},6:{structure:z,memory:{array:Da},slots:{0:{structure:R,memory:{array:Ka}}}},7:{structure:X,memory:{array:Fa},slots:{0:{structure:Ee,memory:{array:Ma}}}},8:{structure:Y,memory:{array:Ta},slots:{0:{structure:De,memory:{array:_a}}}},9:{structure:Z,memory:{array:Ha},slots:{0:{structure:Ke,memory:{array:La}}}},10:{structure:z,memory:{array:$a},slots:{0:{structure:R,memory:{array:Ba}}}},11:{structure:se,memory:{array:Na},slots:{0:{structure:He,memory:{array:Ga}}}},12:{structure:ae,memory:{array:Ja},slots:{0:{structure:Le,memory:{array:Qa}}}}}}},slot:15});Object.assign(ne,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:$e}],methods:[],template:null},slot:14});const Wa=new Uint8Array;Object.assign(Be,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Wa}}},slot:17});Object.assign(ie,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Be}],methods:[],template:null},slot:16});const Xa=new Uint8Array,Ya=new Uint8Array([176,253,15,0]),Za=new Uint8Array([4,0,0,0]);Object.assign(Ne,{...t,type:2,name:"Struct0031",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:a}],methods:[],template:{memory:{array:Xa},slots:{0:{structure:a,memory:{array:Ya},slots:{0:{structure:n,memory:{array:Za}}}}}}},slot:64});Object.assign(ue,{...t,type:11,name:"Struct0018",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ne}],methods:[],template:null},slot:63});const en=new Uint8Array,tn=new Uint8Array([170,170,170,170]),rn=new Uint8Array;Object.assign(Ge,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:ue}],methods:[],template:{memory:{array:en},slots:{0:{structure:ue,memory:{array:tn},slots:{0:{structure:Ne,memory:{array:rn}}}}}}},slot:19});Object.assign(oe,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ge}],methods:[],template:null},slot:18});const sn=new Uint8Array,an=new Uint8Array,nn=new Uint8Array([212,38,16,0]),un=new Uint8Array([139,38,16,0]),on=new Uint8Array([99,111,109,46,115,117,98,98,108,117,101,46,102,105,108,116,101,114,115,0]),mn=new Uint8Array([208,38,16,0]),yn=new Uint8Array([116,38,16,0]),ln=new Uint8Array([84,111,109,32,66,101,100,100,97,114,100,0]),cn=new Uint8Array([204,38,16,0]),bn=new Uint8Array([1,0,0,0]),pn=new Uint8Array([200,38,16,0]),fn=new Uint8Array([60,38,16,0]),dn=new Uint8Array([76,97,110,100,115,99,97,112,101,32,114,101,110,100,101,114,105,110,103,32,117,115,105,110,103,32,114,97,121,32,109,97,114,99,104,105,110,103,0]),Sn=new Uint8Array([170,170,170,170]),gn=new Uint8Array,hn=new Uint8Array([170,170,170,170]),zn=new Uint8Array,wn=new Uint8Array([170,170,170,170]),An=new Uint8Array;Object.assign(Ze,{...t,type:2,name:"landscape.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:sn}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:I},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:x},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:a},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:v},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:ne},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:ie},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:oe}],methods:[],template:{memory:{array:an},slots:{0:{structure:I,memory:{array:nn},slots:{0:{structure:ce,memory:{array:un},slots:{0:{structure:le,memory:{array:on}}}}}},1:{structure:x,memory:{array:mn},slots:{0:{structure:pe,memory:{array:yn},slots:{0:{structure:be,memory:{array:ln}}}}}},2:{structure:a,memory:{array:cn},slots:{0:{structure:n,memory:{array:bn}}}},3:{structure:v,memory:{array:pn},slots:{0:{structure:de,memory:{array:fn},slots:{0:{structure:fe,memory:{array:dn}}}}}},4:{structure:ne,memory:{array:Sn},slots:{0:{structure:$e,memory:{array:gn}}}},5:{structure:ie,memory:{array:hn},slots:{0:{structure:Be,memory:{array:zn}}}},6:{structure:oe,memory:{array:wn},slots:{0:{structure:Ge,memory:{array:An}}}}}}},slot:1});const Un=new Uint8Array;Object.assign(q,{...t,type:2,name:"landscape.KernelInput(u8,landscape.kernel)",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Un}}},slot:20});Object.assign(Je,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:25});Object.assign(Qe,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:Je}],methods:[],template:null},slot:24});Object.assign(We,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Qe}],methods:[],template:null},slot:23});Object.assign(b,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:26});const Rn=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(et,{...t,type:9,name:"landscape.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:n},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:n}],methods:[],template:{memory:{array:Rn}}},slot:27});Object.assign(me,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:me}],methods:[],template:null},slot:28});Object.assign(tt,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:m}],methods:[],template:null},slot:65});const qn=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),On=new Uint8Array,jn=new Uint8Array([4,38,16,0]),Pn=new Uint8Array([4,0,0,0]);Object.assign(ye,{...t,type:2,name:"landscape.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:We},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:b},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:b},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:et},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:me}],methods:[],template:{memory:{array:qn}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:Je},{...e,type:7,isRequired:!1,name:"FPixel",structure:tt},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:a}],methods:[],template:{memory:{array:On},slots:{0:{structure:a,memory:{array:jn},slots:{0:{structure:n,memory:{array:Pn}}}}}}},slot:22});const Vn=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Cn=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),kn=new Uint8Array([0,0,0,0,0,0,0,0]),In=new Uint8Array;Object.assign(O,{...t,type:2,name:"landscape.KernelOutput(u8,landscape.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:ye}],methods:[],template:{memory:{array:Vn},slots:{0:{structure:ye,memory:{array:Cn},slots:{0:{structure:We,memory:{array:kn},address:1047560,slots:{0:{structure:Qe,memory:{array:In},address:0}}}}}}}},slot:21});const xn=new Uint8Array([0,0,192,192,0,0,128,64,0,0,192,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,0,96,65,0,0,124,67,0,0,0,0,0,0,200,65,0,0,224,64,123,20,174,62,0,0,0,0,0,0,96,64,0,1,0,0,0,0,0,0]);Object.assign(j,{...t,type:2,name:"landscape.KernelParameters(landscape.kernel)",length:1,byteSize:80,align:4,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:256,bitSize:64,byteSize:8,slot:0,name:"size",structure:Se},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:96,byteSize:16,slot:1,name:"cameraPosition",structure:w},{...e,type:6,isRequired:!1,bitOffset:128,bitSize:96,byteSize:16,slot:2,name:"cameraPositionFine",structure:w},{...e,type:4,isRequired:!1,bitOffset:384,bitSize:32,byteSize:4,slot:3,name:"cameraRotation",structure:m},{...e,type:4,isRequired:!1,bitOffset:416,bitSize:32,byteSize:4,slot:4,name:"terrainHorizon",structure:m},{...e,type:4,isRequired:!1,bitOffset:448,bitSize:32,byteSize:4,slot:5,name:"terrainDetail",structure:m},{...e,type:1,isRequired:!1,bitOffset:576,bitSize:1,byteSize:1,slot:6,name:"buildings",structure:p},{...e,type:4,isRequired:!1,bitOffset:480,bitSize:32,byteSize:4,slot:7,name:"waterLevel",structure:m},{...e,type:2,isRequired:!1,bitOffset:512,bitSize:32,byteSize:4,slot:8,name:"sampling",structure:n},{...e,type:1,isRequired:!1,bitOffset:584,bitSize:1,byteSize:1,slot:9,name:"shadows",structure:p},{...e,type:1,isRequired:!1,bitOffset:592,bitSize:1,byteSize:1,slot:10,name:"contours",structure:p},{...e,type:6,isRequired:!1,bitOffset:320,bitSize:64,byteSize:8,slot:11,name:"sun",structure:Fe},{...e,type:4,isRequired:!1,bitOffset:544,bitSize:32,byteSize:4,slot:12,name:"terrainHeight",structure:m}],methods:[],template:{memory:{array:xn}}},slot:29});Object.assign(rt,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(landscape.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:66});Object.assign(st,{...t,type:7,name:"ErrorSet0000!landscape.KernelOutput(u8,landscape.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:O},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:rt}],methods:[],template:null},slot:37});Object.assign(at,{...t,type:3,name:"createOutput",length:1,byteSize:128,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:640,bitSize:32,byteSize:4,slot:0,name:"0",structure:b},{...e,type:3,bitOffset:672,bitSize:32,byteSize:4,slot:1,name:"1",structure:b},{...e,type:6,bitOffset:1024,bitSize:0,byteSize:0,slot:2,name:"2",structure:q},{...e,type:6,bitOffset:0,bitSize:640,byteSize:80,slot:3,name:"3",structure:j},{...e,type:6,bitOffset:704,bitSize:224,byteSize:28,slot:4,name:"retval",structure:st}],methods:[],template:null},slot:35});Object.assign(nt,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(landscape.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:67});Object.assign(it,{...t,type:7,name:"ErrorSet0001!landscape.KernelOutput(u8,landscape.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:O},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:nt}],methods:[],template:null},slot:38});Object.assign(ut,{...t,type:3,name:"createPartialOutput",length:1,byteSize:128,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:640,bitSize:32,byteSize:4,slot:0,name:"0",structure:b},{...e,type:3,bitOffset:672,bitSize:32,byteSize:4,slot:1,name:"1",structure:b},{...e,type:3,bitOffset:704,bitSize:32,byteSize:4,slot:2,name:"2",structure:b},{...e,type:3,bitOffset:736,bitSize:32,byteSize:4,slot:3,name:"3",structure:b},{...e,type:6,bitOffset:1024,bitSize:0,byteSize:0,slot:4,name:"4",structure:q},{...e,type:6,bitOffset:0,bitSize:640,byteSize:80,slot:5,name:"5",structure:j},{...e,type:6,bitOffset:768,bitSize:224,byteSize:28,slot:6,name:"retval",structure:it}],methods:[],template:null},slot:36});const vn=new Uint8Array,En={argStruct:at,thunk:4,name:"createOutput"},Dn={argStruct:ut,thunk:9,name:"createPartialOutput"};Object.assign(ot,{...t,type:2,name:"landscape",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:vn}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:Ze},{...e,type:7,isRequired:!1,name:"Input",structure:q},{...e,type:7,isRequired:!1,name:"Output",structure:O},{...e,type:7,isRequired:!1,name:"Parameters",structure:j}],methods:[En,Dn],template:null},slot:0});const Kn=[S,le,ce,I,be,pe,x,n,a,fe,de,v,Se,ge,E,he,D,ze,K,we,Ae,F,Ue,M,m,w,s,r,Re,T,qe,_,Oe,H,je,L,Pe,$,Ve,B,Ce,N,ke,G,Ie,J,xe,Q,ve,W,p,A,R,z,Ee,X,De,Y,Ke,Z,Fe,Me,ee,Te,te,_e,re,He,se,Le,ae,$e,ne,Be,ie,Ne,ue,Ge,oe,Ze,q,Je,Qe,We,b,et,me,tt,ye,O,j,rt,st,at,nt,it,ut,ot],Fn=It(Kn),Mn=ot.constructor,Tn=(async()=>{const y=new URL("landscape-6cf05620.wasm",import.meta.url).href;return fetch(y)})();xt(Tn,{...Fn,writeBack:!0});const{createOutput:Jn,createPartialOutput:_n,kernel:Ye,Input:Hn,Output:Qn,Parameters:Wn}=Mn;function Ln(y,c,u,i,o={},g={}){if(Array.isArray(o)){const d=o;o={};for(const[f,h]of Object.keys(Ye.inputImages).entries())o[h]=d[f]}const P=new Hn(void 0),V=Object.keys(Ye.inputImages),l=[];let U;for(const d of V){let f=o[d];if(f||(V.length===1&&["data","width","height"].every(h=>!!o[h])?f=o:l.push(d)),P[d]=f,U){if(f.colorSpace!==U)throw new Error(`Input images must all use the same color space: ${U}`)}else U=f.colorSpace}if(l.length>0)throw new Error(`Missing input image${l.length>1?"s":""}: ${l.join(", ")}`);const Xe=_n(y,c,u,i,P,g),mt=d=>{const f=Object.keys(d),h={};for(const yt of f){const{data:{typedArray:C},width:lt,height:bt}=d[yt];let k;if(typeof ImageData=="function"){const pt=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);k=new ImageData(pt,lt,i,{colorSpace:U})}else k={data:C,width:lt,height:bt};if(f.length===1)return k;h[yt]=k}return h};return Xe[Symbol.toStringTag]==="Promise"?Xe.then(mt):mt(Xe)}function $n(){const y={};for(let[c,u]of Object.entries(Ye)){if(c==="parameters"){const i={};for(const[o,g]of Object.entries(u)){const P=i[o]={};for(let[V,l]of Object.entries(g))typeof l=="object"?"string"in l?l=l.string:l=ct(l):typeof l=="function"&&(l=Bn(l.name)),P[V]=l}u=i}else typeof u=="object"&&("string"in u?u=u.string:u=u.valueOf());y[c]=u}return y}function ct(y){const c=[];for(let[u,i]of Object.entries(y))typeof i=="object"&&(i=ct(i)),c[u]=i;return c}function Bn(y){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[y]}onmessage=y=>{const[c,u,...i]=y.data;Nn(c,i).then(([o,g])=>{postMessage([c,u,o],{transfer:g})}).catch(o=>{postMessage(["error",u,o])})};async function Nn(y,c){switch(y){case"getKernelInfo":return[$n(...c)];case"createPartialImageData":const i=await Ln(...c),o=[];if("data"in i&&"width"in i&&"height"in i)o.push(i.data.buffer);else for(const g of Object.entries(i))o.push(i.data.buffer);return[i,o];default:throw new Error(`Unknown function: ${y}`)}}
