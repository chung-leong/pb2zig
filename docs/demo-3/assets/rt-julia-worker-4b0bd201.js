import{u as Ce,a as Ie,b as ve,d as xe,c as Ee,e as De,f as Ke,g as Me,h as Fe,i as Te,j as _e,k as $e,l as Be,m as Le,n as Ye,o as Ge,p as He,q as Je}from"./index-357cbc86.js";Ce();Ie();ve();xe();Ee();De();Ke();Me();Fe();Te();_e();$e();Be();Le();Ye();Ge();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},S={},H={},J={},C={},N={},Q={},I={},p={},d={},W={},X={},v={},y={},r={},s={},w={},z={},A={},Z={},x={},ee={},E={},te={},D={},se={},K={},re={},M={},ae={},F={},ne={},T={},ie={},_={},ue={},$={},oe={},B={},le={},L={},fe={},R={},me={},ye={},ce={},c={},de={},Y={},G={},q={},U={},Se={},he={},ge={},ze={},Oe={},we={},Ae={};Object.assign(S,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:5});Object.assign(H,{...t,type:1,name:"[14:0]u8",length:14,byteSize:15,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:4});Object.assign(J,{...t,type:11,name:"*const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[],template:null},slot:3});Object.assign(C,{...t,type:11,name:"*const *const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:J}],methods:[],template:null},slot:2});Object.assign(N,{...t,type:1,name:"[11:0]u8",length:11,byteSize:12,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:8});Object.assign(Q,{...t,type:11,name:"*const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:N}],methods:[],template:null},slot:7});Object.assign(I,{...t,type:11,name:"*const *const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[],template:null},slot:6});Object.assign(p,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[],template:null},slot:10});Object.assign(d,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:p}],methods:[],template:null},slot:9});Object.assign(W,{...t,type:1,name:"[32:0]u8",length:32,byteSize:33,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:13});Object.assign(X,{...t,type:11,name:"*const [32:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:12});Object.assign(v,{...t,type:11,name:"*const *const [32:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:11});Object.assign(y,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:30});Object.assign(r,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[],template:null},slot:51});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:r}],methods:[],template:null},slot:50});const Ne=new Uint8Array([]),Qe=new Uint8Array([56,246,15,0]),We=new Uint8Array([0,0,0,0,0,0,128,64]);Object.assign(w,{...t,type:2,name:"Struct0012",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:Ne},slots:{0:{structure:s,memory:{array:Qe},slots:{0:{structure:r,memory:{array:We}}}}}}},slot:37});Object.assign(z,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:w}],methods:[],template:null},slot:36});Object.assign(A,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:31});const Xe=new Uint8Array([]),Ze=new Uint8Array([96,249,15,0]),et=new Uint8Array([0,0,0,0,0,0,240,191]),tt=new Uint8Array([168,249,15,0]),st=new Uint8Array([0,0,0,0,0,0,240,191]),rt=new Uint8Array([0,250,15,0]),at=new Uint8Array([0,0,0,0,0,0,0,192]),nt=new Uint8Array([120,250,15,0]),it=new Uint8Array([0,0,0,0,0,0,224,191]);Object.assign(Z,{...t,type:2,name:"Struct0021",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:s}],methods:[],template:{memory:{array:Xe},slots:{0:{structure:s,memory:{array:Ze},slots:{0:{structure:r,memory:{array:et}}}},1:{structure:s,memory:{array:tt},slots:{0:{structure:r,memory:{array:st}}}},2:{structure:s,memory:{array:rt},slots:{0:{structure:r,memory:{array:at}}}},3:{structure:s,memory:{array:nt},slots:{0:{structure:r,memory:{array:it}}}}}}},slot:53});Object.assign(x,{...t,type:11,name:"Struct0018",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:52});const ut=new Uint8Array([]),ot=new Uint8Array([96,249,15,0]),lt=new Uint8Array([0,0,0,0,0,0,240,63]),mt=new Uint8Array([168,249,15,0]),yt=new Uint8Array([0,0,0,0,0,0,240,63]),ct=new Uint8Array([0,250,15,0]),bt=new Uint8Array([0,0,0,0,0,0,0,64]),pt=new Uint8Array([120,250,15,0]),ft=new Uint8Array([0,0,0,0,0,0,224,63]);Object.assign(ee,{...t,type:2,name:"Struct0022",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:s}],methods:[],template:{memory:{array:ut},slots:{0:{structure:s,memory:{array:ot},slots:{0:{structure:r,memory:{array:lt}}}},1:{structure:s,memory:{array:mt},slots:{0:{structure:r,memory:{array:yt}}}},2:{structure:s,memory:{array:ct},slots:{0:{structure:r,memory:{array:bt}}}},3:{structure:s,memory:{array:pt},slots:{0:{structure:r,memory:{array:ft}}}}}}},slot:55});Object.assign(E,{...t,type:11,name:"Struct0019",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:54});const dt=new Uint8Array([]),St=new Uint8Array([96,249,15,0]),ht=new Uint8Array([154,153,153,153,153,153,217,191]),gt=new Uint8Array([168,249,15,0]),zt=new Uint8Array([195,245,40,92,143,194,229,191]),Ot=new Uint8Array([0,250,15,0]),wt=new Uint8Array([10,215,163,112,61,10,215,191]),At=new Uint8Array([120,250,15,0]),Rt=new Uint8Array([123,20,174,71,225,122,164,191]);Object.assign(te,{...t,type:2,name:"Struct0023",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:s}],methods:[],template:{memory:{array:dt},slots:{0:{structure:s,memory:{array:St},slots:{0:{structure:r,memory:{array:ht}}}},1:{structure:s,memory:{array:gt},slots:{0:{structure:r,memory:{array:zt}}}},2:{structure:s,memory:{array:Ot},slots:{0:{structure:r,memory:{array:wt}}}},3:{structure:s,memory:{array:At},slots:{0:{structure:r,memory:{array:Rt}}}}}}},slot:57});Object.assign(D,{...t,type:11,name:"Struct0020",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:56});const qt=new Uint8Array([]),Ut=new Uint8Array([170,170,170,170]),m=new Uint8Array([]),jt=new Uint8Array([170,170,170,170]),Pt=new Uint8Array([170,170,170,170]);Object.assign(se,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:A},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:x},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:E},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:D}],methods:[],template:{memory:{array:qt},slots:{0:{structure:x,memory:{array:Ut},slots:{0:{structure:Z,memory:{array:m},address:-1431655766}}},1:{structure:E,memory:{array:jt},slots:{0:{structure:ee,memory:{array:m},address:-1431655766}}},2:{structure:D,memory:{array:Pt},slots:{0:{structure:te,memory:{array:m},address:-1431655766}}}}}},slot:39});Object.assign(K,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:38});const Vt=new Uint8Array([]),kt=new Uint8Array([128,250,15,0]),Ct=new Uint8Array([0,0,0,0,0,0,240,191]),It=new Uint8Array([8,248,15,0]),vt=new Uint8Array([0,0,0,0,0,0,240,63]),xt=new Uint8Array([232,247,15,0]),Et=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(re,{...t,type:2,name:"Struct0014",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:Vt},slots:{0:{structure:s,memory:{array:kt},slots:{0:{structure:r,memory:{array:Ct}}}},1:{structure:s,memory:{array:It},slots:{0:{structure:r,memory:{array:vt}}}},2:{structure:s,memory:{array:xt},slots:{0:{structure:r,memory:{array:Et}}}}}}},slot:41});Object.assign(M,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:40});const Dt=new Uint8Array([]),Kt=new Uint8Array([128,250,15,0]),Mt=new Uint8Array([0,0,0,0,0,0,0,0]),Ft=new Uint8Array([8,248,15,0]),Tt=new Uint8Array([0,0,0,0,0,0,36,64]),_t=new Uint8Array([232,247,15,0]),$t=new Uint8Array([0,0,0,0,0,0,8,64]);Object.assign(ae,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:Dt},slots:{0:{structure:s,memory:{array:Kt},slots:{0:{structure:r,memory:{array:Mt}}}},1:{structure:s,memory:{array:Ft},slots:{0:{structure:r,memory:{array:Tt}}}},2:{structure:s,memory:{array:_t},slots:{0:{structure:r,memory:{array:$t}}}}}}},slot:43});Object.assign(F,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:42});const Bt=new Uint8Array([]),Lt=new Uint8Array([128,250,15,0]),Yt=new Uint8Array([0,0,0,0,0,0,20,192]),Gt=new Uint8Array([8,248,15,0]),Ht=new Uint8Array([0,0,0,0,0,0,20,64]),Jt=new Uint8Array([232,247,15,0]),Nt=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(ne,{...t,type:2,name:"Struct0016",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:Bt},slots:{0:{structure:s,memory:{array:Lt},slots:{0:{structure:r,memory:{array:Yt}}}},1:{structure:s,memory:{array:Gt},slots:{0:{structure:r,memory:{array:Ht}}}},2:{structure:s,memory:{array:Jt},slots:{0:{structure:r,memory:{array:Nt}}}}}}},slot:45});Object.assign(T,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:44});const Qt=new Uint8Array([]),Wt=new Uint8Array([170,170,170,170]),Xt=new Uint8Array([170,170,170,170]),Zt=new Uint8Array([170,170,170,170]),es=new Uint8Array([170,170,170,170]),ts=new Uint8Array([170,170,170,170]),ss=new Uint8Array([170,170,170,170]);Object.assign(ie,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"width",structure:z},{...e,type:8,isRequired:!1,slot:1,name:"height",structure:z},{...e,type:8,isRequired:!1,slot:2,name:"c",structure:K},{...e,type:8,isRequired:!1,slot:3,name:"w",structure:M},{...e,type:8,isRequired:!1,slot:4,name:"camDistance",structure:F},{...e,type:8,isRequired:!1,slot:5,name:"rotationY",structure:T}],methods:[],template:{memory:{array:Qt},slots:{0:{structure:z,memory:{array:Wt},slots:{0:{structure:w,memory:{array:m},address:-1431655766}}},1:{structure:z,memory:{array:Xt},slots:{0:{structure:w,memory:{array:m},address:-1431655766}}},2:{structure:K,memory:{array:Zt},slots:{0:{structure:se,memory:{array:m},address:-1431655766}}},3:{structure:M,memory:{array:es},slots:{0:{structure:re,memory:{array:m},address:-1431655766}}},4:{structure:F,memory:{array:ts},slots:{0:{structure:ae,memory:{array:m},address:-1431655766}}},5:{structure:T,memory:{array:ss},slots:{0:{structure:ne,memory:{array:m},address:-1431655766}}}}}},slot:15});Object.assign(_,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:14});const rs=new Uint8Array([]);Object.assign(ue,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:rs}}},slot:17});Object.assign($,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:16});const as=new Uint8Array([]),ns=new Uint8Array([160,253,15,0]),is=new Uint8Array([4,0,0,0]);Object.assign(oe,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:d}],methods:[],template:{memory:{array:as},slots:{0:{structure:d,memory:{array:ns},slots:{0:{structure:p,memory:{array:is}}}}}}},slot:47});Object.assign(B,{...t,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:46});const us=new Uint8Array([]),os=new Uint8Array([170,170,170,170]);Object.assign(le,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:B}],methods:[],template:{memory:{array:us},slots:{0:{structure:B,memory:{array:os},slots:{0:{structure:oe,memory:{array:m},address:-1431655766}}}}}},slot:19});Object.assign(L,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:18});const ls=new Uint8Array([]),ms=new Uint8Array([]),ys=new Uint8Array([148,250,15,0]),cs=new Uint8Array([249,35,16,0]),bs=new Uint8Array([100,101,114,115,99,104,109,97,108,101,46,99,111,109,0]),ps=new Uint8Array([212,250,15,0]),fs=new Uint8Array([237,35,16,0]),ds=new Uint8Array([68,101,114,32,83,99,104,109,97,108,101,0]),Ss=new Uint8Array([20,251,15,0]),hs=new Uint8Array([1,0,0,0]),gs=new Uint8Array([108,251,15,0]),zs=new Uint8Array([204,35,16,0]),Os=new Uint8Array([82,97,121,116,114,97,99,101,115,32,97,32,81,117,97,116,101,114,110,105,111,110,32,74,117,108,105,97,32,115,101,116,0]),ws=new Uint8Array([170,170,170,170]),As=new Uint8Array([170,170,170,170]),Rs=new Uint8Array([170,170,170,170]);Object.assign(fe,{...t,type:2,name:"rt-julia.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:ls}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:C},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:I},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:d},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:v},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:_},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:$},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:L}],methods:[],template:{memory:{array:ms},slots:{0:{structure:C,memory:{array:ys},slots:{0:{structure:J,memory:{array:cs},slots:{0:{structure:H,memory:{array:bs},address:1057785}}}}},1:{structure:I,memory:{array:ps},slots:{0:{structure:Q,memory:{array:fs},slots:{0:{structure:N,memory:{array:ds},address:1057773}}}}},2:{structure:d,memory:{array:Ss},slots:{0:{structure:p,memory:{array:hs}}}},3:{structure:v,memory:{array:gs},slots:{0:{structure:X,memory:{array:zs},slots:{0:{structure:W,memory:{array:Os},address:1057740}}}}},4:{structure:_,memory:{array:ws},slots:{0:{structure:ie,memory:{array:m},address:-1431655766}}},5:{structure:$,memory:{array:As},slots:{0:{structure:ue,memory:{array:m},address:-1431655766}}},6:{structure:L,memory:{array:Rs},slots:{0:{structure:le,memory:{array:m},address:-1431655766}}}}}},slot:1});const qs=new Uint8Array([]);Object.assign(R,{...t,type:2,name:"rt-julia.KernelInput(u8,rt-julia.kernel)",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:qs}}},slot:20});Object.assign(me,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:25});Object.assign(ye,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:me}],methods:[],template:null},slot:24});Object.assign(ce,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:ye}],methods:[],template:null},slot:23});Object.assign(c,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:26});const Us=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(de,{...t,type:9,name:"rt-julia.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:p},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:p}],methods:[],template:{memory:{array:Us}}},slot:27});Object.assign(Y,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:Y}],methods:[],template:null},slot:28});const js=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ps=new Uint8Array([]),Vs=new Uint8Array([88,253,15,0]),ks=new Uint8Array([4,0,0,0]);Object.assign(G,{...t,type:2,name:"rt-julia.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:ce},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:de},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:Y}],methods:[],template:{memory:{array:js}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:me},{...e,type:7,isRequired:!1,name:"FPixel",structure:A},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:d}],methods:[],template:{memory:{array:Ps},slots:{0:{structure:d,memory:{array:Vs},slots:{0:{structure:p,memory:{array:ks}}}}}}},slot:22});const Cs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Is=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),vs=new Uint8Array([0,0,0,0,0,0,0,0]),je=new Uint8Array([]);Object.assign(q,{...t,type:2,name:"rt-julia.KernelOutput(u8,rt-julia.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:G}],methods:[],template:{memory:{array:Cs},slots:{0:{structure:G,memory:{array:Is},slots:{0:{structure:ce,memory:{array:vs},slots:{0:{structure:ye,memory:{array:je}}}}}}}}},slot:21});const xs=new Uint8Array([205,204,204,190,123,20,46,191,236,81,184,190,10,215,35,189,0,0,0,68,0,0,0,68,0,0,0,0,0,0,64,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);Object.assign(U,{...t,type:2,name:"rt-julia.KernelParameters(rt-julia.kernel)",length:1,byteSize:48,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:0,name:"width",structure:y},{...e,type:4,isRequired:!1,bitOffset:160,bitSize:32,byteSize:4,slot:1,name:"height",structure:y},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:128,byteSize:16,slot:2,name:"c",structure:A},{...e,type:4,isRequired:!1,bitOffset:192,bitSize:32,byteSize:4,slot:3,name:"w",structure:y},{...e,type:4,isRequired:!1,bitOffset:224,bitSize:32,byteSize:4,slot:4,name:"camDistance",structure:y},{...e,type:4,isRequired:!1,bitOffset:256,bitSize:32,byteSize:4,slot:5,name:"rotationY",structure:y}],methods:[],template:{memory:{array:xs}}},slot:29});Object.assign(Se,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(rt-julia.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:48});Object.assign(he,{...t,type:7,name:"ErrorSet0000!rt-julia.KernelOutput(u8,rt-julia.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:q},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Se}],methods:[],template:null},slot:34});Object.assign(ge,{...t,type:3,name:"createOutput",length:1,byteSize:96,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:0,name:"0",structure:c},{...e,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:1,name:"1",structure:c},{...e,type:6,bitOffset:768,bitSize:0,byteSize:0,slot:2,name:"2",structure:R},{...e,type:6,bitOffset:0,bitSize:384,byteSize:48,slot:3,name:"3",structure:U},{...e,type:6,bitOffset:448,bitSize:224,byteSize:28,slot:4,name:"retval",structure:he}],methods:[],template:null},slot:32});Object.assign(ze,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(rt-julia.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:49});Object.assign(Oe,{...t,type:7,name:"ErrorSet0001!rt-julia.KernelOutput(u8,rt-julia.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:q},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:ze}],methods:[],template:null},slot:35});Object.assign(we,{...t,type:3,name:"createPartialOutput",length:1,byteSize:96,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:0,name:"0",structure:c},{...e,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:1,name:"1",structure:c},{...e,type:3,bitOffset:448,bitSize:32,byteSize:4,slot:2,name:"2",structure:c},{...e,type:3,bitOffset:480,bitSize:32,byteSize:4,slot:3,name:"3",structure:c},{...e,type:6,bitOffset:768,bitSize:0,byteSize:0,slot:4,name:"4",structure:R},{...e,type:6,bitOffset:0,bitSize:384,byteSize:48,slot:5,name:"5",structure:U},{...e,type:6,bitOffset:512,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Oe}],methods:[],template:null},slot:33});const Es={argStruct:ge,thunk:7,name:"createOutput"},Ds={argStruct:we,thunk:2,name:"createPartialOutput"};Object.assign(Ae,{...t,type:2,name:"rt-julia",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:je}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:fe},{...e,type:7,isRequired:!1,name:"Input",structure:R},{...e,type:7,isRequired:!1,name:"Output",structure:q},{...e,type:7,isRequired:!1,name:"Parameters",structure:U}],methods:[Es,Ds],template:null},slot:0});const Ks=[S,H,J,C,N,Q,I,p,d,W,X,v,y,r,s,w,z,A,Z,x,ee,E,te,D,se,K,re,M,ae,F,ne,T,ie,_,ue,$,oe,B,le,L,fe,R,me,ye,ce,c,de,Y,G,q,U,Se,he,ge,ze,Oe,we,Ae],Ms=He(Ks),Fs=Ae.constructor,Ts=(async()=>{const u=new URL("rt-julia-e1254379.wasm",import.meta.url).href;return fetch(u)})();Je(Ts,{...Ms,writeBack:!0});const{createOutput:Js,createPartialOutput:_s,kernel:pe,Input:$s,Output:Ns,Parameters:Qs}=Fs;function Bs(u,l,n,a,i={},h={}){if(Array.isArray(i)){const f=i;i={};for(const[b,g]of Object.keys(pe.inputImages).entries())i[g]=f[b]}const j=new $s(void 0),P=Object.keys(pe.inputImages),o=[];let O;for(const f of P){let b=i[f];if(b||(P.length===1&&["data","width","height"].every(g=>!!i[g])?b=i:o.push(f)),j[f]=b,O){if(b.colorSpace!==O)throw new Error(`Input images must all use the same color space: ${O}`)}else O=b.colorSpace}if(o.length>0)throw new Error(`Missing input image${o.length>1?"s":""}: ${o.join(", ")}`);const be=_s(u,l,n,a,j,h),Re=f=>{const b=Object.keys(f),g={};for(const qe of b){const{data:{typedArray:V},width:Ue,height:Ve}=f[qe];let k;if(typeof ImageData=="function"){const ke=new Uint8ClampedArray(V.buffer,V.byteOffset,V.byteLength);k=new ImageData(ke,Ue,a,{colorSpace:O})}else k={data:V,width:Ue,height:Ve};if(b.length===1)return k;g[qe]=k}return g};return be[Symbol.toStringTag]==="Promise"?be.then(Re):Re(be)}function Ls(){const u={};for(let[l,n]of Object.entries(pe)){if(l==="parameters"){const a={};for(const[i,h]of Object.entries(n)){const j=a[i]={};for(let[P,o]of Object.entries(h))typeof o=="object"?"string"in o?o=o.string:o=Pe(o):typeof o=="function"&&(o=Ys(o.name)),j[P]=o}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());u[l]=n}return u}function Pe(u){const l=[];for(let[n,a]of Object.entries(u))typeof a=="object"&&(a=Pe(a)),l[n]=a;return l}function Ys(u){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[u]}onmessage=u=>{const[l,n,...a]=u.data;Gs(l,a).then(([i,h])=>{postMessage([l,n,i],{transfer:h})}).catch(i=>{postMessage(["error",n,i])})};async function Gs(u,l){switch(u){case"getKernelInfo":return[Ls(...l)];case"createPartialImageData":const a=await Bs(...l),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const h of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${u}`)}}
