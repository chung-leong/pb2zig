import{u as Ne,a as Qe,b as We,d as Xe,c as Ye,e as Ze,f as et,g as tt,h as rt,i as st,j as at,k as nt,l as it,m as ut,n as ot,o as mt,p as yt,q as lt}from"./index-357cbc86.js";Ne();Qe();We();Xe();Ye();Ze();et();tt();rt();st();at();nt();it();ut();ot();mt();const r={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},w={},R={},q={},z={},b={},S={},ae={},ne={},E={},p={},s={},t={},ie={},D={},d={},O={},A={},ue={},K={},oe={},M={},me={},F={},ye={},T={},le={},_={},ce={},$={},be={},B={},pe={},L={},fe={},G={},de={},H={},Se={},J={},j={},he={},N={},ge={},Q={},ze={},W={},we={},X={},Ae={},Y={},Ue={},Z={},Re={},ee={},qe={},te={},ke={},P={},Oe={},je={},Pe={},l={},Ie={},re={},se={},V={},C={},ve={},xe={},Ee={},De={},Ke={},Me={},Fe={};Object.assign(w,{...r,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:w}],methods:[],template:null},slot:5});Object.assign(R,{...r,type:1,name:"[10:0]u8",length:10,byteSize:11,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:w}],methods:[],template:null},slot:4});Object.assign(q,{...r,type:11,name:"*const [10:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:R}],methods:[],template:null},slot:3});Object.assign(z,{...r,type:11,name:"*const *const [10:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:q}],methods:[],template:null},slot:2});Object.assign(b,{...r,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:7});Object.assign(S,{...r,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:b}],methods:[],template:null},slot:6});Object.assign(ae,{...r,type:1,name:"[24:0]u8",length:24,byteSize:25,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:w}],methods:[],template:null},slot:10});Object.assign(ne,{...r,type:11,name:"*const [24:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:9});Object.assign(E,{...r,type:11,name:"*const *const [24:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:8});Object.assign(p,{...r,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[],template:null},slot:27});Object.assign(s,{...r,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:s}],methods:[],template:null},slot:51});Object.assign(t,{...r,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:s}],methods:[],template:null},slot:50});const ct=new Uint8Array([]),bt=new Uint8Array([120,251,15,0]),pt=new Uint8Array([154,153,153,153,153,153,185,63]),ft=new Uint8Array([248,248,15,0]),dt=new Uint8Array([0,0,0,0,0,0,20,64]),St=new Uint8Array([216,248,15,0]),ht=new Uint8Array([0,0,0,0,0,0,0,64]);Object.assign(ie,{...r,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:p},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:t}],methods:[],template:{memory:{array:ct},slots:{0:{structure:t,memory:{array:bt},slots:{0:{structure:s,memory:{array:pt}}}},1:{structure:t,memory:{array:ft},slots:{0:{structure:s,memory:{array:dt}}}},2:{structure:t,memory:{array:St},slots:{0:{structure:s,memory:{array:ht}}}}}}},slot:35});Object.assign(D,{...r,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:34});Object.assign(d,{...r,type:13,name:"@Vector(3, f32)",length:3,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:p}],methods:[],template:null},slot:28});const gt=new Uint8Array([]),zt=new Uint8Array([8,247,15,0]),wt=new Uint8Array([0,0,0,0,0,0,24,192]),At=new Uint8Array([48,247,15,0]),Ut=new Uint8Array([0,0,0,0,0,0,24,192]),Rt=new Uint8Array([88,247,15,0]),qt=new Uint8Array([0,0,0,0,0,0,57,192]);Object.assign(O,{...r,type:2,name:"Struct0031",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t}],methods:[],template:{memory:{array:gt},slots:{0:{structure:t,memory:{array:zt},slots:{0:{structure:s,memory:{array:wt}}}},1:{structure:t,memory:{array:At},slots:{0:{structure:s,memory:{array:Ut}}}},2:{structure:t,memory:{array:Rt},slots:{0:{structure:s,memory:{array:qt}}}}}}},slot:53});Object.assign(A,{...r,type:11,name:"Struct0020",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:O}],methods:[],template:null},slot:52});const Ot=new Uint8Array([]),jt=new Uint8Array([40,251,15,0]),Pt=new Uint8Array([0,0,0,0,0,0,24,64]),Vt=new Uint8Array([80,251,15,0]),Ct=new Uint8Array([0,0,0,0,0,0,24,64]),kt=new Uint8Array([120,251,15,0]),It=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(ue,{...r,type:2,name:"Struct0032",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t}],methods:[],template:{memory:{array:Ot},slots:{0:{structure:t,memory:{array:jt},slots:{0:{structure:s,memory:{array:Pt}}}},1:{structure:t,memory:{array:Vt},slots:{0:{structure:s,memory:{array:Ct}}}},2:{structure:t,memory:{array:kt},slots:{0:{structure:s,memory:{array:It}}}}}}},slot:55});Object.assign(K,{...r,type:11,name:"Struct0021",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:54});const vt=new Uint8Array([]),xt=new Uint8Array([40,251,15,0]),Et=new Uint8Array([0,0,0,0,0,0,0,0]),Dt=new Uint8Array([80,251,15,0]),Kt=new Uint8Array([0,0,0,0,0,0,0,64]),Mt=new Uint8Array([120,251,15,0]),Ft=new Uint8Array([0,0,0,0,0,0,16,192]);Object.assign(oe,{...r,type:2,name:"Struct0033",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t}],methods:[],template:{memory:{array:vt},slots:{0:{structure:t,memory:{array:xt},slots:{0:{structure:s,memory:{array:Et}}}},1:{structure:t,memory:{array:Dt},slots:{0:{structure:s,memory:{array:Kt}}}},2:{structure:t,memory:{array:Mt},slots:{0:{structure:s,memory:{array:Ft}}}}}}},slot:57});Object.assign(M,{...r,type:11,name:"Struct0022",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:56});const Tt=new Uint8Array([]),_t=new Uint8Array([170,170,170,170]),a=new Uint8Array([]),$t=new Uint8Array([170,170,170,170]),Bt=new Uint8Array([170,170,170,170]);Object.assign(me,{...r,type:2,name:"Struct0014",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:d},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:A},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:K},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:M}],methods:[],template:{memory:{array:Tt},slots:{0:{structure:A,memory:{array:_t},slots:{0:{structure:O,memory:{array:a},address:-1431655766}}},1:{structure:K,memory:{array:$t},slots:{0:{structure:ue,memory:{array:a},address:-1431655766}}},2:{structure:M,memory:{array:Bt},slots:{0:{structure:oe,memory:{array:a},address:-1431655766}}}}}},slot:37});Object.assign(F,{...r,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:36});const Lt=new Uint8Array([]),Gt=new Uint8Array([40,251,15,0]),Ht=new Uint8Array([0,0,0,0,0,0,24,64]),Jt=new Uint8Array([80,251,15,0]),Nt=new Uint8Array([0,0,0,0,0,0,24,64]),Qt=new Uint8Array([120,251,15,0]),Wt=new Uint8Array([0,0,0,0,0,0,0,192]);Object.assign(ye,{...r,type:2,name:"Struct0034",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t}],methods:[],template:{memory:{array:Lt},slots:{0:{structure:t,memory:{array:Gt},slots:{0:{structure:s,memory:{array:Ht}}}},1:{structure:t,memory:{array:Jt},slots:{0:{structure:s,memory:{array:Nt}}}},2:{structure:t,memory:{array:Qt},slots:{0:{structure:s,memory:{array:Wt}}}}}}},slot:59});Object.assign(T,{...r,type:11,name:"Struct0023",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:58});const Xt=new Uint8Array([]),Yt=new Uint8Array([40,251,15,0]),Zt=new Uint8Array([0,0,0,0,0,0,0,0]),er=new Uint8Array([80,251,15,0]),tr=new Uint8Array([0,0,0,0,0,0,0,64]),rr=new Uint8Array([120,251,15,0]),sr=new Uint8Array([0,0,0,0,0,0,36,192]);Object.assign(le,{...r,type:2,name:"Struct0035",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t}],methods:[],template:{memory:{array:Xt},slots:{0:{structure:t,memory:{array:Yt},slots:{0:{structure:s,memory:{array:Zt}}}},1:{structure:t,memory:{array:er},slots:{0:{structure:s,memory:{array:tr}}}},2:{structure:t,memory:{array:rr},slots:{0:{structure:s,memory:{array:sr}}}}}}},slot:61});Object.assign(_,{...r,type:11,name:"Struct0024",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:60});const ar=new Uint8Array([]),nr=new Uint8Array([170,170,170,170]),ir=new Uint8Array([170,170,170,170]),ur=new Uint8Array([170,170,170,170]);Object.assign(ce,{...r,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:d},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:A},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:T},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:_}],methods:[],template:{memory:{array:ar},slots:{0:{structure:A,memory:{array:nr},slots:{0:{structure:O,memory:{array:a},address:-1431655766}}},1:{structure:T,memory:{array:ir},slots:{0:{structure:ye,memory:{array:a},address:-1431655766}}},2:{structure:_,memory:{array:ur},slots:{0:{structure:le,memory:{array:a},address:-1431655766}}}}}},slot:39});Object.assign($,{...r,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:38});const or=new Uint8Array([]),mr=new Uint8Array([120,251,15,0]),yr=new Uint8Array([154,153,153,153,153,153,185,63]),lr=new Uint8Array([248,248,15,0]),cr=new Uint8Array([0,0,0,0,0,0,32,64]),br=new Uint8Array([216,248,15,0]),pr=new Uint8Array([0,0,0,0,0,0,0,64]);Object.assign(be,{...r,type:2,name:"Struct0016",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:p},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:t}],methods:[],template:{memory:{array:or},slots:{0:{structure:t,memory:{array:mr},slots:{0:{structure:s,memory:{array:yr}}}},1:{structure:t,memory:{array:lr},slots:{0:{structure:s,memory:{array:cr}}}},2:{structure:t,memory:{array:br},slots:{0:{structure:s,memory:{array:pr}}}}}}},slot:41});Object.assign(B,{...r,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:40});const fr=new Uint8Array([]),dr=new Uint8Array([40,251,15,0]),Sr=new Uint8Array([0,0,0,0,0,0,0,0]),hr=new Uint8Array([80,251,15,0]),gr=new Uint8Array([0,0,0,0,0,0,0,0]),zr=new Uint8Array([120,251,15,0]),wr=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(pe,{...r,type:2,name:"Struct0036",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t}],methods:[],template:{memory:{array:fr},slots:{0:{structure:t,memory:{array:dr},slots:{0:{structure:s,memory:{array:Sr}}}},1:{structure:t,memory:{array:hr},slots:{0:{structure:s,memory:{array:gr}}}},2:{structure:t,memory:{array:zr},slots:{0:{structure:s,memory:{array:wr}}}}}}},slot:63});Object.assign(L,{...r,type:11,name:"Struct0025",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:62});const Ar=new Uint8Array([]),Ur=new Uint8Array([40,251,15,0]),Rr=new Uint8Array([0,0,0,0,0,0,240,63]),qr=new Uint8Array([80,251,15,0]),Or=new Uint8Array([0,0,0,0,0,0,240,63]),jr=new Uint8Array([120,251,15,0]),Pr=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(fe,{...r,type:2,name:"Struct0037",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t}],methods:[],template:{memory:{array:Ar},slots:{0:{structure:t,memory:{array:Ur},slots:{0:{structure:s,memory:{array:Rr}}}},1:{structure:t,memory:{array:qr},slots:{0:{structure:s,memory:{array:Or}}}},2:{structure:t,memory:{array:jr},slots:{0:{structure:s,memory:{array:Pr}}}}}}},slot:65});Object.assign(G,{...r,type:11,name:"Struct0026",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:64});const Vr=new Uint8Array([]),Cr=new Uint8Array([40,251,15,0]),kr=new Uint8Array([154,153,153,153,153,153,233,63]),Ir=new Uint8Array([80,251,15,0]),vr=new Uint8Array([154,153,153,153,153,153,233,63]),xr=new Uint8Array([120,251,15,0]),Er=new Uint8Array([154,153,153,153,153,153,233,63]);Object.assign(de,{...r,type:2,name:"Struct0038",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t}],methods:[],template:{memory:{array:Vr},slots:{0:{structure:t,memory:{array:Cr},slots:{0:{structure:s,memory:{array:kr}}}},1:{structure:t,memory:{array:Ir},slots:{0:{structure:s,memory:{array:vr}}}},2:{structure:t,memory:{array:xr},slots:{0:{structure:s,memory:{array:Er}}}}}}},slot:67});Object.assign(H,{...r,type:11,name:"Struct0027",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:de}],methods:[],template:null},slot:66});const Dr=new Uint8Array([]),Kr=new Uint8Array([170,170,170,170]),Mr=new Uint8Array([170,170,170,170]),Fr=new Uint8Array([170,170,170,170]);Object.assign(Se,{...r,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:d},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:L},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:G},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:H}],methods:[],template:{memory:{array:Dr},slots:{0:{structure:L,memory:{array:Kr},slots:{0:{structure:pe,memory:{array:a},address:-1431655766}}},1:{structure:G,memory:{array:Mr},slots:{0:{structure:fe,memory:{array:a},address:-1431655766}}},2:{structure:H,memory:{array:Fr},slots:{0:{structure:de,memory:{array:a},address:-1431655766}}}}}},slot:43});Object.assign(J,{...r,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Se}],methods:[],template:null},slot:42});Object.assign(j,{...r,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:p}],methods:[],template:null},slot:29});const Tr=new Uint8Array([]),_r=new Uint8Array([240,250,15,0]),$r=new Uint8Array([0,0,0,0,0,0,0,0]),Br=new Uint8Array([24,251,15,0]),Lr=new Uint8Array([0,0,0,0,0,0,0,0]),Gr=new Uint8Array([64,251,15,0]),Hr=new Uint8Array([0,0,0,0,0,0,0,0]),Jr=new Uint8Array([104,251,15,0]),Nr=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(he,{...r,type:2,name:"Struct0039",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:t}],methods:[],template:{memory:{array:Tr},slots:{0:{structure:t,memory:{array:_r},slots:{0:{structure:s,memory:{array:$r}}}},1:{structure:t,memory:{array:Br},slots:{0:{structure:s,memory:{array:Lr}}}},2:{structure:t,memory:{array:Gr},slots:{0:{structure:s,memory:{array:Hr}}}},3:{structure:t,memory:{array:Jr},slots:{0:{structure:s,memory:{array:Nr}}}}}}},slot:69});Object.assign(N,{...r,type:11,name:"Struct0028",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:he}],methods:[],template:null},slot:68});const Qr=new Uint8Array([]),Wr=new Uint8Array([240,250,15,0]),Xr=new Uint8Array([0,0,0,0,0,0,240,63]),Yr=new Uint8Array([24,251,15,0]),Zr=new Uint8Array([0,0,0,0,0,0,240,63]),es=new Uint8Array([64,251,15,0]),ts=new Uint8Array([0,0,0,0,0,0,240,63]),rs=new Uint8Array([104,251,15,0]),ss=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(ge,{...r,type:2,name:"Struct0040",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:t}],methods:[],template:{memory:{array:Qr},slots:{0:{structure:t,memory:{array:Wr},slots:{0:{structure:s,memory:{array:Xr}}}},1:{structure:t,memory:{array:Yr},slots:{0:{structure:s,memory:{array:Zr}}}},2:{structure:t,memory:{array:es},slots:{0:{structure:s,memory:{array:ts}}}},3:{structure:t,memory:{array:rs},slots:{0:{structure:s,memory:{array:ss}}}}}}},slot:71});Object.assign(Q,{...r,type:11,name:"Struct0029",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ge}],methods:[],template:null},slot:70});const as=new Uint8Array([]),ns=new Uint8Array([240,250,15,0]),is=new Uint8Array([154,153,153,153,153,153,169,63]),us=new Uint8Array([24,251,15,0]),os=new Uint8Array([154,153,153,153,153,153,185,63]),ms=new Uint8Array([64,251,15,0]),ys=new Uint8Array([0,0,0,0,0,0,240,63]),ls=new Uint8Array([104,251,15,0]),cs=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(ze,{...r,type:2,name:"Struct0041",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:t}],methods:[],template:{memory:{array:as},slots:{0:{structure:t,memory:{array:ns},slots:{0:{structure:s,memory:{array:is}}}},1:{structure:t,memory:{array:us},slots:{0:{structure:s,memory:{array:os}}}},2:{structure:t,memory:{array:ms},slots:{0:{structure:s,memory:{array:ys}}}},3:{structure:t,memory:{array:ls},slots:{0:{structure:s,memory:{array:cs}}}}}}},slot:73});Object.assign(W,{...r,type:11,name:"Struct0030",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ze}],methods:[],template:null},slot:72});const bs=new Uint8Array([]),ps=new Uint8Array([170,170,170,170]),fs=new Uint8Array([170,170,170,170]),ds=new Uint8Array([170,170,170,170]);Object.assign(we,{...r,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:j},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:N},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:Q},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:W}],methods:[],template:{memory:{array:bs},slots:{0:{structure:N,memory:{array:ps},slots:{0:{structure:he,memory:{array:a},address:-1431655766}}},1:{structure:Q,memory:{array:fs},slots:{0:{structure:ge,memory:{array:a},address:-1431655766}}},2:{structure:W,memory:{array:ds},slots:{0:{structure:ze,memory:{array:a},address:-1431655766}}}}}},slot:45});Object.assign(X,{...r,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:we}],methods:[],template:null},slot:44});const Ss=new Uint8Array([]),hs=new Uint8Array([170,170,170,170]),gs=new Uint8Array([170,170,170,170]),zs=new Uint8Array([170,170,170,170]),ws=new Uint8Array([170,170,170,170]),As=new Uint8Array([170,170,170,170]),Us=new Uint8Array([170,170,170,170]);Object.assign(Ae,{...r,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"viewPlaneDistance",structure:D},{...e,type:8,isRequired:!1,slot:1,name:"lightPos",structure:F},{...e,type:8,isRequired:!1,slot:2,name:"sphere0Position",structure:$},{...e,type:8,isRequired:!1,slot:3,name:"sphere0Radius",structure:B},{...e,type:8,isRequired:!1,slot:4,name:"sphere0Color",structure:J},{...e,type:8,isRequired:!1,slot:5,name:"sphere0Material",structure:X}],methods:[],template:{memory:{array:Ss},slots:{0:{structure:D,memory:{array:hs},slots:{0:{structure:ie,memory:{array:a},address:-1431655766}}},1:{structure:F,memory:{array:gs},slots:{0:{structure:me,memory:{array:a},address:-1431655766}}},2:{structure:$,memory:{array:zs},slots:{0:{structure:ce,memory:{array:a},address:-1431655766}}},3:{structure:B,memory:{array:ws},slots:{0:{structure:be,memory:{array:a},address:-1431655766}}},4:{structure:J,memory:{array:As},slots:{0:{structure:Se,memory:{array:a},address:-1431655766}}},5:{structure:X,memory:{array:Us},slots:{0:{structure:we,memory:{array:a},address:-1431655766}}}}}},slot:12});Object.assign(Y,{...r,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ae}],methods:[],template:null},slot:11});const Rs=new Uint8Array([]);Object.assign(Ue,{...r,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Rs}}},slot:14});Object.assign(Z,{...r,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ue}],methods:[],template:null},slot:13});const qs=new Uint8Array([]),Os=new Uint8Array([96,254,15,0]),js=new Uint8Array([4,0,0,0]);Object.assign(Re,{...r,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:S}],methods:[],template:{memory:{array:qs},slots:{0:{structure:S,memory:{array:Os},slots:{0:{structure:b,memory:{array:js}}}}}}},slot:47});Object.assign(ee,{...r,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Re}],methods:[],template:null},slot:46});const Ps=new Uint8Array([]),Vs=new Uint8Array([170,170,170,170]);Object.assign(qe,{...r,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:ee}],methods:[],template:{memory:{array:Ps},slots:{0:{structure:ee,memory:{array:Vs},slots:{0:{structure:Re,memory:{array:a},address:-1431655766}}}}}},slot:16});Object.assign(te,{...r,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:qe}],methods:[],template:null},slot:15});const Cs=new Uint8Array([]),ks=new Uint8Array([]),Is=new Uint8Array([116,252,15,0]),vs=new Uint8Array([232,36,16,0]),Be=new Uint8Array([78,101,119,103,114,111,117,110,100,115,0]),xs=new Uint8Array([204,252,15,0]),Es=new Uint8Array([232,36,16,0]),Ds=new Uint8Array([4,253,15,0]),Ks=new Uint8Array([1,0,0,0]),Ms=new Uint8Array([60,253,15,0]),Fs=new Uint8Array([207,36,16,0]),Ts=new Uint8Array([80,105,120,101,108,32,66,108,101,110,100,101,114,32,82,97,121,116,114,97,99,105,110,103,0]),_s=new Uint8Array([170,170,170,170]),$s=new Uint8Array([170,170,170,170]),Bs=new Uint8Array([170,170,170,170]);Object.assign(ke,{...r,type:2,name:"raytracer.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Cs}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:z},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:z},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:S},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:E},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:Y},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:Z},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:te}],methods:[],template:{memory:{array:ks},slots:{0:{structure:z,memory:{array:Is},slots:{0:{structure:q,memory:{array:vs},slots:{0:{structure:R,memory:{array:Be},address:1058024}}}}},1:{structure:z,memory:{array:xs},slots:{0:{structure:q,memory:{array:Es},slots:{0:{structure:R,memory:{array:Be},address:1058024}}}}},2:{structure:S,memory:{array:Ds},slots:{0:{structure:b,memory:{array:Ks}}}},3:{structure:E,memory:{array:Ms},slots:{0:{structure:ne,memory:{array:Fs},slots:{0:{structure:ae,memory:{array:Ts},address:1057999}}}}},4:{structure:Y,memory:{array:_s},slots:{0:{structure:Ae,memory:{array:a},address:-1431655766}}},5:{structure:Z,memory:{array:$s},slots:{0:{structure:Ue,memory:{array:a},address:-1431655766}}},6:{structure:te,memory:{array:Bs},slots:{0:{structure:qe,memory:{array:a},address:-1431655766}}}}}},slot:1});const Ls=new Uint8Array([]);Object.assign(P,{...r,type:2,name:"raytracer.KernelInput(u8,raytracer.kernel)",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Ls}}},slot:17});Object.assign(Oe,{...r,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:w}],methods:[],template:null},slot:22});Object.assign(je,{...r,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:Oe}],methods:[],template:null},slot:21});Object.assign(Pe,{...r,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:je}],methods:[],template:null},slot:20});Object.assign(l,{...r,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:l}],methods:[],template:null},slot:23});const Gs=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(Ie,{...r,type:9,name:"raytracer.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:b},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:b}],methods:[],template:{memory:{array:Gs}}},slot:24});Object.assign(re,{...r,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:re}],methods:[],template:null},slot:25});const Hs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Js=new Uint8Array([]),Ns=new Uint8Array([24,251,15,0]),Qs=new Uint8Array([4,0,0,0]);Object.assign(se,{...r,type:2,name:"raytracer.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Pe},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Ie},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:re}],methods:[],template:{memory:{array:Hs}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:Oe},{...e,type:7,isRequired:!1,name:"FPixel",structure:j},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:S}],methods:[],template:{memory:{array:Js},slots:{0:{structure:S,memory:{array:Ns},slots:{0:{structure:b,memory:{array:Qs}}}}}}},slot:19});const Ws=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Xs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ys=new Uint8Array([0,0,0,0,0,0,0,0]),Le=new Uint8Array([]);Object.assign(V,{...r,type:2,name:"raytracer.KernelOutput(u8,raytracer.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:se}],methods:[],template:{memory:{array:Ws},slots:{0:{structure:se,memory:{array:Xs},slots:{0:{structure:Pe,memory:{array:Ys},slots:{0:{structure:je,memory:{array:Le}}}}}}}}},slot:18});const Zs=new Uint8Array([0,0,0,0,0,0,0,64,0,0,128,192,0,0,0,0,0,0,0,0,0,0,0,64,0,0,32,193,0,0,0,0,205,204,76,63,205,204,76,63,205,204,76,63,0,0,0,0,205,204,76,61,205,204,204,61,0,0,128,63,0,0,128,63,0,0,0,64,0,0,0,64,0,0,0,0,0,0,0,0]);Object.assign(C,{...r,type:2,name:"raytracer.KernelParameters(raytracer.kernel)",length:1,byteSize:80,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:512,bitSize:32,byteSize:4,slot:0,name:"viewPlaneDistance",structure:p},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:96,byteSize:16,slot:1,name:"lightPos",structure:d},{...e,type:6,isRequired:!1,bitOffset:128,bitSize:96,byteSize:16,slot:2,name:"sphere0Position",structure:d},{...e,type:4,isRequired:!1,bitOffset:544,bitSize:32,byteSize:4,slot:3,name:"sphere0Radius",structure:p},{...e,type:6,isRequired:!1,bitOffset:256,bitSize:96,byteSize:16,slot:4,name:"sphere0Color",structure:d},{...e,type:6,isRequired:!1,bitOffset:384,bitSize:128,byteSize:16,slot:5,name:"sphere0Material",structure:j}],methods:[],template:{memory:{array:Zs}}},slot:26});Object.assign(ve,{...r,type:8,name:"@typeInfo(@typeInfo(@TypeOf(raytracer.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:48});Object.assign(xe,{...r,type:7,name:"ErrorSet0000!raytracer.KernelOutput(u8,raytracer.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:V},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:ve}],methods:[],template:null},slot:32});Object.assign(Ee,{...r,type:3,name:"createOutput",length:1,byteSize:128,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:640,bitSize:32,byteSize:4,slot:0,name:"0",structure:l},{...e,type:3,bitOffset:672,bitSize:32,byteSize:4,slot:1,name:"1",structure:l},{...e,type:6,bitOffset:1024,bitSize:0,byteSize:0,slot:2,name:"2",structure:P},{...e,type:6,bitOffset:0,bitSize:640,byteSize:80,slot:3,name:"3",structure:C},{...e,type:6,bitOffset:704,bitSize:224,byteSize:28,slot:4,name:"retval",structure:xe}],methods:[],template:null},slot:30});Object.assign(De,{...r,type:8,name:"@typeInfo(@typeInfo(@TypeOf(raytracer.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:49});Object.assign(Ke,{...r,type:7,name:"ErrorSet0001!raytracer.KernelOutput(u8,raytracer.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:V},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:De}],methods:[],template:null},slot:33});Object.assign(Me,{...r,type:3,name:"createPartialOutput",length:1,byteSize:128,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:640,bitSize:32,byteSize:4,slot:0,name:"0",structure:l},{...e,type:3,bitOffset:672,bitSize:32,byteSize:4,slot:1,name:"1",structure:l},{...e,type:3,bitOffset:704,bitSize:32,byteSize:4,slot:2,name:"2",structure:l},{...e,type:3,bitOffset:736,bitSize:32,byteSize:4,slot:3,name:"3",structure:l},{...e,type:6,bitOffset:1024,bitSize:0,byteSize:0,slot:4,name:"4",structure:P},{...e,type:6,bitOffset:0,bitSize:640,byteSize:80,slot:5,name:"5",structure:C},{...e,type:6,bitOffset:768,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Ke}],methods:[],template:null},slot:31});const ea={argStruct:Ee,thunk:4,name:"createOutput"},ta={argStruct:Me,thunk:7,name:"createPartialOutput"};Object.assign(Fe,{...r,type:2,name:"raytracer",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Le}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:ke},{...e,type:7,isRequired:!1,name:"Input",structure:P},{...e,type:7,isRequired:!1,name:"Output",structure:V},{...e,type:7,isRequired:!1,name:"Parameters",structure:C}],methods:[ea,ta],template:null},slot:0});const ra=[w,R,q,z,b,S,ae,ne,E,p,s,t,ie,D,d,O,A,ue,K,oe,M,me,F,ye,T,le,_,ce,$,be,B,pe,L,fe,G,de,H,Se,J,j,he,N,ge,Q,ze,W,we,X,Ae,Y,Ue,Z,Re,ee,qe,te,ke,P,Oe,je,Pe,l,Ie,re,se,V,C,ve,xe,Ee,De,Ke,Me,Fe],sa=yt(ra),aa=Fe.constructor,na=(async()=>{const o=new URL("raytracer-873b9328.wasm",import.meta.url).href;return fetch(o)})();lt(na,{...sa,writeBack:!0});const{createOutput:ba,createPartialOutput:ia,kernel:Ce,Input:ua,Output:pa,Parameters:fa}=aa;function oa(o,y,i,n,u={},h={}){if(Array.isArray(u)){const f=u;u={};for(const[c,g]of Object.keys(Ce.inputImages).entries())u[g]=f[c]}const k=new ua(void 0),I=Object.keys(Ce.inputImages),m=[];let U;for(const f of I){let c=u[f];if(c||(I.length===1&&["data","width","height"].every(g=>!!u[g])?c=u:m.push(f)),k[f]=c,U){if(c.colorSpace!==U)throw new Error(`Input images must all use the same color space: ${U}`)}else U=c.colorSpace}if(m.length>0)throw new Error(`Missing input image${m.length>1?"s":""}: ${m.join(", ")}`);const Ve=ia(o,y,i,n,k,h),Te=f=>{const c=Object.keys(f),g={};for(const _e of c){const{data:{typedArray:v},width:$e,height:He}=f[_e];let x;if(typeof ImageData=="function"){const Je=new Uint8ClampedArray(v.buffer,v.byteOffset,v.byteLength);x=new ImageData(Je,$e,n,{colorSpace:U})}else x={data:v,width:$e,height:He};if(c.length===1)return x;g[_e]=x}return g};return Ve[Symbol.toStringTag]==="Promise"?Ve.then(Te):Te(Ve)}function ma(){const o={};for(let[y,i]of Object.entries(Ce)){if(y==="parameters"){const n={};for(const[u,h]of Object.entries(i)){const k=n[u]={};for(let[I,m]of Object.entries(h))typeof m=="object"?"string"in m?m=m.string:m=Ge(m):typeof m=="function"&&(m=ya(m.name)),k[I]=m}i=n}else typeof i=="object"&&("string"in i?i=i.string:i=i.valueOf());o[y]=i}return o}function Ge(o){const y=[];for(let[i,n]of Object.entries(o))typeof n=="object"&&(n=Ge(n)),y[i]=n;return y}function ya(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[y,i,...n]=o.data;la(y,n).then(([u,h])=>{postMessage([y,i,u],{transfer:h})}).catch(u=>{postMessage(["error",i,u])})};async function la(o,y){switch(o){case"getKernelInfo":return[ma(...y)];case"createPartialImageData":const n=await oa(...y),u=[];if("data"in n&&"width"in n&&"height"in n)u.push(n.data.buffer);else for(const h of Object.entries(n))u.push(n.data.buffer);return[n,u];default:throw new Error(`Unknown function: ${o}`)}}
