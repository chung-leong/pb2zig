import{u as Pr,a as Ir,b as kr,c as Rr,d as qr,e as vr,f as Er,g as xr,h as Tr,i as Kr,j as Cr,k as Dr,l as Mr,m as $r,n as Fr,o as _r,p as Lr,q as Xr}from"./index-270629a1.js";Pr();Dr();Mr();Ir();kr();$r();Fr();_r();Lr();Rr();qr();vr();Er();Xr();xr();Tr();Kr();const s={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},n={},h={},Q={},W={},Z={},tt={},w={},R={},et={},st={},e={},r={},v={},rt={},nt={},A={},u={},at={},E={},U={},D={},ot={},ct={},ut={},x={},T={},it={},q={},a={},yt={},mt={},bt={},lt={},pt={},gt={},Dt={},M={},Ot={},jt={},$={},p={},z={},N={},ft={},F={},_={},I={},Mt={},$t={},k={},Ft={},_t={},Lt={},_e={},St={},Le={},wt={},Xe={},Ye={},Xt={},Be={},Yt={},Ge={},He={},Bt={},Je={},Gt={},Ne={},Qe={},Ht={},zt={},Jt={},Nt={},Qt={},We={},At={},Ze={},Ut={},ts={},ht={},es={},dt={},ss={},rs={},L={},ns={},X={},as={},Y={},os={},B={},cs={},us={},Wt={},Vt={},Zt={},te={},ee={},is={},se={},ys={},re={},ms={},ne={},bs={},ae={},ls={},ps={},oe={},ce={},ue={},ie={},gs={},Pt={},Os={},It={},js={},fs={},kt={},Ss={},Rt={},ws={},zs={},ye={},As={},me={},Us={},hs={},qt={},vt={},Et={},xt={},ds={},O={},j={},f={},S={},Vs={},be={},le={},pe={},Ps={},ge={},Is={},Oe={},ks={},Rs={},je={},fe={},qs={},Se={},vs={},we={},Es={},xs={},ze={},Ae={},Ue={},he={},de={},Ve={},Pe={},Ie={},ke={},Re={},qe={},ve={},Ee={},xe={},Te={},Ts={},Ke={},Ks={},Cs={},Ce={},Ds={},Ms={},$s={},Fs={},_s={},Ls={},Xs={},Ys={},Bs={},Gs={},Hs={},Js={},Ns={},Qs={},Ws={},Zs={},tr={},De={},er={},sr={},rr={},nr={},ar={},or={},cr={},ur={},ir={},yr={},mr={},br={},lr={},pr={},gr={},Or={},jr={},fr={},Sr={},wr={},zr={},Ar={},Ur={},Yr=new Uint8Array,Br=new Uint8Array([0,0,0,0,0,0,0,0]),Gr=new Uint8Array,Hr=new Uint8Array([0,0,0,0,0,0,0,0]),Jr=new Uint8Array,Nr=new Uint8Array([0,0,0,0,0,64,143,64]),Qr=new Uint8Array,Wr=new Uint8Array([0,0,0,0,0,64,143,64]),Zr=new Uint8Array,tn=new Uint8Array([0,0,0,0,0,0,128,64]),en=new Uint8Array,sn=new Uint8Array([0,0,0,0,0,0,128,64]),rn=new Uint8Array,nn=new Uint8Array,an=new Uint8Array,on=new Uint8Array,cn=new Uint8Array,un=new Uint8Array([0,0,0,0,0,0,0,0]),yn=new Uint8Array,mn=new Uint8Array([0,0,0,0,0,0,0,0]),bn=new Uint8Array,ln=new Uint8Array([0,0,0,0,0,0,0,0]),pn=new Uint8Array,gn=new Uint8Array([0,0,0,0,0,0,0,0]),On=new Uint8Array,jn=new Uint8Array([0,0,0,0,0,0,240,63]),fn=new Uint8Array,Sn=new Uint8Array([0,0,0,0,0,0,240,63]),wn=new Uint8Array,zn=new Uint8Array([0,0,0,0,0,0,240,63]),An=new Uint8Array,Un=new Uint8Array([0,0,0,0,0,0,240,63]),hn=new Uint8Array,dn=new Uint8Array,Vn=new Uint8Array,Pn=new Uint8Array,In=new Uint8Array,kn=new Uint8Array([0,0,0,0,0,0,0,0]),Rn=new Uint8Array,qn=new Uint8Array([0,0,0,0,0,0,0,0]),vn=new Uint8Array,En=new Uint8Array([154,153,153,153,153,153,233,63]),xn=new Uint8Array,Tn=new Uint8Array([0,0,0,0,0,0,240,63]),Kn=new Uint8Array,Cn=new Uint8Array,Dn=new Uint8Array,Mn=new Uint8Array,$n=new Uint8Array,Fn=new Uint8Array([0,0,0,0,0,0,36,192]),_n=new Uint8Array,Ln=new Uint8Array([0,0,0,0,0,0,36,192]),Xn=new Uint8Array,Yn=new Uint8Array([0,0,0,0,0,0,36,64]),Bn=new Uint8Array,Gn=new Uint8Array([0,0,0,0,0,0,36,64]),Hn=new Uint8Array,Jn=new Uint8Array([0,0,0,0,0,0,20,192]),Nn=new Uint8Array,Qn=new Uint8Array([0,0,0,0,0,0,20,64]),Wn=new Uint8Array,Zn=new Uint8Array,ta=new Uint8Array,ea=new Uint8Array,sa=new Uint8Array,ra=new Uint8Array,na=new Uint8Array,aa=new Uint8Array,oa=new Uint8Array,ca=new Uint8Array,ua=new Uint8Array([0,0,0,0,0,0,240,63]),ia=new Uint8Array,ya=new Uint8Array([0,0,0,0,0,0,36,64]),ma=new Uint8Array,ba=new Uint8Array([0,0,0,0,0,0,8,64]),la=new Uint8Array,pa=new Uint8Array,ga=new Uint8Array([0,0,0,0,0,0,240,63]),Oa=new Uint8Array,ja=new Uint8Array([0,0,0,0,0,0,89,64]),fa=new Uint8Array,Sa=new Uint8Array([0,0,0,0,0,0,57,64]),wa=new Uint8Array,za=new Uint8Array,Aa=new Uint8Array,Ua=new Uint8Array,ha=new Uint8Array,da=new Uint8Array,Va=new Uint8Array,Pa=new Uint8Array,Ia=new Uint8Array,ka=new Uint8Array,Ra=new Uint8Array,qa=new Uint8Array,va=new Uint8Array,Ea=new Uint8Array,xa=new Uint8Array,Ta=new Uint8Array,Ka=new Uint8Array([4]),Ca=new Uint8Array,Da=new Uint8Array([12,5,0,1]),Ma=new Uint8Array([99,111,109,46,111,109,45,108,97,98,115,46,102,105,108,116,101,114,115,46,110,101,119,116,111,110,82,97,112,104,115,111,110,0]),$a=new Uint8Array([57,5,0,1]),Fa=new Uint8Array([79,109,32,76,97,98,115,0]),_a=new Uint8Array,La=new Uint8Array([1]),Xa=new Uint8Array([82,5,0,1]),Ya=new Uint8Array([78,101,119,116,111,110,32,82,97,112,104,115,111,110,32,70,114,97,99,116,97,108,115,0]),Ba=new Uint8Array,Ga=new Uint8Array,Ha=new Uint8Array,Ja=new Uint8Array([0]),Na=new Uint8Array([1]),hr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Qa=new Uint8Array,Wa=new Uint8Array,Za=new Uint8Array,to=new Uint8Array,eo=new Uint8Array([4]),Me=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),so=new Uint8Array([0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,0,0,0,0,0,0,205,204,76,63,0,0,128,63,0,0,0,68,0,0,0,68,0,0,160,192,0,0,160,64,0,0,160,192,0,0,160,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,64,0,0,200,65]),ro=new Uint8Array([27,0]),no=new Uint8Array([27,0]),ao=new Uint8Array,oo=new Uint8Array,co=new Uint8Array,uo=new Uint8Array;Object.assign(_e,{slots:{0:St,1:wt}});Object.assign(St,{structure:e,memory:{array:Yr},const:!0,slots:{0:Le}});Object.assign(Le,{structure:r,memory:{array:Br},const:!0});Object.assign(wt,{structure:e,memory:{array:Gr},const:!0,slots:{0:Xe}});Object.assign(Xe,{structure:r,memory:{array:Hr},const:!0});Object.assign(Ye,{slots:{0:Xt,1:Yt}});Object.assign(Xt,{structure:e,memory:{array:Jr},const:!0,slots:{0:Be}});Object.assign(Be,{structure:r,memory:{array:Nr},const:!0});Object.assign(Yt,{structure:e,memory:{array:Qr},const:!0,slots:{0:Ge}});Object.assign(Ge,{structure:r,memory:{array:Wr},const:!0});Object.assign(He,{slots:{0:Bt,1:Gt}});Object.assign(Bt,{structure:e,memory:{array:Zr},const:!0,slots:{0:Je}});Object.assign(Je,{structure:r,memory:{array:tn},const:!0});Object.assign(Gt,{structure:e,memory:{array:en},const:!0,slots:{0:Ne}});Object.assign(Ne,{structure:r,memory:{array:sn},const:!0});Object.assign(Qe,{slots:{0:Ht,1:Jt,2:Nt,3:Qt}});Object.assign(Ht,{structure:n,memory:{array:rn},const:!0,slots:{0:zt}});Object.assign(zt,{structure:u});Object.assign(Jt,{structure:v,memory:{array:nn},const:!0,slots:{0:St,1:wt}});Object.assign(Nt,{structure:rt,memory:{array:an},const:!0,slots:{0:Xt,1:Yt}});Object.assign(Qt,{structure:nt,memory:{array:on},const:!0,slots:{0:Bt,1:Gt}});Object.assign(We,{slots:{0:At,1:Ut,2:ht,3:dt}});Object.assign(At,{structure:e,memory:{array:cn},const:!0,slots:{0:Ze}});Object.assign(Ze,{structure:r,memory:{array:un},const:!0});Object.assign(Ut,{structure:e,memory:{array:yn},const:!0,slots:{0:ts}});Object.assign(ts,{structure:r,memory:{array:mn},const:!0});Object.assign(ht,{structure:e,memory:{array:bn},const:!0,slots:{0:es}});Object.assign(es,{structure:r,memory:{array:ln},const:!0});Object.assign(dt,{structure:e,memory:{array:pn},const:!0,slots:{0:ss}});Object.assign(ss,{structure:r,memory:{array:gn},const:!0});Object.assign(rs,{slots:{0:L,1:X,2:Y,3:B}});Object.assign(L,{structure:e,memory:{array:On},const:!0,slots:{0:ns}});Object.assign(ns,{structure:r,memory:{array:jn},const:!0});Object.assign(X,{structure:e,memory:{array:fn},const:!0,slots:{0:as}});Object.assign(as,{structure:r,memory:{array:Sn},const:!0});Object.assign(Y,{structure:e,memory:{array:wn},const:!0,slots:{0:os}});Object.assign(os,{structure:r,memory:{array:zn},const:!0});Object.assign(B,{structure:e,memory:{array:An},const:!0,slots:{0:cs}});Object.assign(cs,{structure:r,memory:{array:Un},const:!0});Object.assign(us,{slots:{0:Wt,1:Zt,2:te,3:ee}});Object.assign(Wt,{structure:n,memory:{array:hn},const:!0,slots:{0:Vt}});Object.assign(Vt,{structure:D});Object.assign(Zt,{structure:E,memory:{array:dn},const:!0,slots:{0:At,1:Ut,2:ht,3:dt}});Object.assign(te,{structure:U,memory:{array:Vn},const:!0,slots:{0:L,1:X,2:Y,3:B}});Object.assign(ee,{structure:U,memory:{array:Pn},const:!0,slots:{0:L,1:X,2:Y,3:B}});Object.assign(is,{slots:{0:se,1:re,2:ne,3:ae}});Object.assign(se,{structure:e,memory:{array:In},const:!0,slots:{0:ys}});Object.assign(ys,{structure:r,memory:{array:kn},const:!0});Object.assign(re,{structure:e,memory:{array:Rn},const:!0,slots:{0:ms}});Object.assign(ms,{structure:r,memory:{array:qn},const:!0});Object.assign(ne,{structure:e,memory:{array:vn},const:!0,slots:{0:bs}});Object.assign(bs,{structure:r,memory:{array:En},const:!0});Object.assign(ae,{structure:e,memory:{array:xn},const:!0,slots:{0:ls}});Object.assign(ls,{structure:r,memory:{array:Tn},const:!0});Object.assign(ps,{slots:{0:oe,1:ce,2:ue,3:ie}});Object.assign(oe,{structure:n,memory:{array:Kn},const:!0,slots:{0:Vt}});Object.assign(ce,{structure:E,memory:{array:Cn},const:!0,slots:{0:At,1:Ut,2:ht,3:dt}});Object.assign(ue,{structure:U,memory:{array:Dn},const:!0,slots:{0:L,1:X,2:Y,3:B}});Object.assign(ie,{structure:ct,memory:{array:Mn},const:!0,slots:{0:se,1:re,2:ne,3:ae}});Object.assign(gs,{slots:{0:Pt,1:It}});Object.assign(Pt,{structure:e,memory:{array:$n},const:!0,slots:{0:Os}});Object.assign(Os,{structure:r,memory:{array:Fn},const:!0});Object.assign(It,{structure:e,memory:{array:_n},const:!0,slots:{0:js}});Object.assign(js,{structure:r,memory:{array:Ln},const:!0});Object.assign(fs,{slots:{0:kt,1:Rt}});Object.assign(kt,{structure:e,memory:{array:Xn},const:!0,slots:{0:Ss}});Object.assign(Ss,{structure:r,memory:{array:Yn},const:!0});Object.assign(Rt,{structure:e,memory:{array:Bn},const:!0,slots:{0:ws}});Object.assign(ws,{structure:r,memory:{array:Gn},const:!0});Object.assign(zs,{slots:{0:ye,1:me}});Object.assign(ye,{structure:e,memory:{array:Hn},const:!0,slots:{0:As}});Object.assign(As,{structure:r,memory:{array:Jn},const:!0});Object.assign(me,{structure:e,memory:{array:Nn},const:!0,slots:{0:Us}});Object.assign(Us,{structure:r,memory:{array:Qn},const:!0});Object.assign(hs,{slots:{0:qt,1:vt,2:Et,3:xt}});Object.assign(qt,{structure:n,memory:{array:Wn},const:!0,slots:{0:zt}});Object.assign(vt,{structure:x,memory:{array:Zn},const:!0,slots:{0:Pt,1:It}});Object.assign(Et,{structure:T,memory:{array:ta},const:!0,slots:{0:kt,1:Rt}});Object.assign(xt,{structure:it,memory:{array:ea},const:!0,slots:{0:ye,1:me}});Object.assign(ds,{slots:{0:O,1:j,2:f,3:S}});Object.assign(O,{structure:n,memory:{array:sa},const:!0,slots:{0:zt}});Object.assign(j,{structure:x,memory:{array:ra},const:!0,slots:{0:Pt,1:It}});Object.assign(f,{structure:T,memory:{array:na},const:!0,slots:{0:kt,1:Rt}});Object.assign(S,{structure:v,memory:{array:aa},const:!0,slots:{0:St,1:wt}});Object.assign(Vs,{slots:{0:be,1:pe,2:ge,3:Oe}});Object.assign(be,{structure:n,memory:{array:oa},const:!0,slots:{0:le}});Object.assign(le,{structure:A});Object.assign(pe,{structure:e,memory:{array:ca},const:!0,slots:{0:Ps}});Object.assign(Ps,{structure:r,memory:{array:ua},const:!0});Object.assign(ge,{structure:e,memory:{array:ia},const:!0,slots:{0:Is}});Object.assign(Is,{structure:r,memory:{array:ya},const:!0});Object.assign(Oe,{structure:e,memory:{array:ma},const:!0,slots:{0:ks}});Object.assign(ks,{structure:r,memory:{array:ba},const:!0});Object.assign(Rs,{slots:{0:je,1:fe,2:Se,3:we}});Object.assign(je,{structure:n,memory:{array:la},const:!0,slots:{0:le}});Object.assign(fe,{structure:e,memory:{array:pa},const:!0,slots:{0:qs}});Object.assign(qs,{structure:r,memory:{array:ga},const:!0});Object.assign(Se,{structure:e,memory:{array:Oa},const:!0,slots:{0:vs}});Object.assign(vs,{structure:r,memory:{array:ja},const:!0});Object.assign(we,{structure:e,memory:{array:fa},const:!0,slots:{0:Es}});Object.assign(Es,{structure:r,memory:{array:Sa},const:!0});Object.assign(xs,{slots:{0:ze,1:Ae,2:Ue,3:he,4:de,5:Ve,6:Pe,7:Ie,8:ke,9:Re,10:qe,11:ve,12:Ee,13:xe,14:Te}});Object.assign(ze,{structure:at,memory:{array:wa},const:!0,slots:{0:Ht,1:Jt,2:Nt,3:Qt}});Object.assign(Ae,{structure:ot,memory:{array:za},const:!0,slots:{0:Wt,1:Zt,2:te,3:ee}});Object.assign(Ue,{structure:ut,memory:{array:Aa},const:!0,slots:{0:oe,1:ce,2:ue,3:ie}});Object.assign(he,{structure:q,memory:{array:Ua},const:!0,slots:{0:qt,1:vt,2:Et,3:xt}});Object.assign(de,{structure:q,memory:{array:ha},const:!0,slots:{0:qt,1:vt,2:Et,3:xt}});Object.assign(Ve,{structure:a,memory:{array:da},const:!0,slots:{0:O,1:j,2:f,3:S}});Object.assign(Pe,{structure:a,memory:{array:Va},const:!0,slots:{0:O,1:j,2:f,3:S}});Object.assign(Ie,{structure:a,memory:{array:Pa},const:!0,slots:{0:O,1:j,2:f,3:S}});Object.assign(ke,{structure:a,memory:{array:Ia},const:!0,slots:{0:O,1:j,2:f,3:S}});Object.assign(Re,{structure:a,memory:{array:ka},const:!0,slots:{0:O,1:j,2:f,3:S}});Object.assign(qe,{structure:a,memory:{array:Ra},const:!0,slots:{0:O,1:j,2:f,3:S}});Object.assign(ve,{structure:a,memory:{array:qa},const:!0,slots:{0:O,1:j,2:f,3:S}});Object.assign(Ee,{structure:a,memory:{array:va},const:!0,slots:{0:O,1:j,2:f,3:S}});Object.assign(xe,{structure:yt,memory:{array:Ea},const:!0,slots:{0:be,1:pe,2:ge,3:Oe}});Object.assign(Te,{structure:mt,memory:{array:xa},const:!0,slots:{0:je,1:fe,2:Se,3:we}});Object.assign(Ts,{slots:{0:Ke}});Object.assign(Ke,{structure:w,memory:{array:Ta},const:!0,slots:{0:Ks}});Object.assign(Ks,{structure:R,memory:{array:Ka},const:!0});Object.assign(Cs,{slots:{0:Ce}});Object.assign(Ce,{structure:pt,memory:{array:Ca},const:!0,slots:{0:Ke}});Object.assign(Ds,{slots:{0:Ms,1:Fs,2:Ls,3:Ys,4:Gs,5:Hs,6:Js}});Object.assign(Ms,{structure:W,memory:{array:Da},const:!0,slots:{0:$s}});Object.assign($s,{structure:Q,memory:{array:Ma},reloc:16778508});Object.assign(Fs,{structure:tt,memory:{array:$a},const:!0,slots:{0:_s}});Object.assign(_s,{structure:Z,memory:{array:Fa},reloc:16778553});Object.assign(Ls,{structure:w,memory:{array:_a},const:!0,slots:{0:Xs}});Object.assign(Xs,{structure:R,memory:{array:La},const:!0});Object.assign(Ys,{structure:st,memory:{array:Xa},const:!0,slots:{0:Bs}});Object.assign(Bs,{structure:et,memory:{array:Ya},reloc:16778578});Object.assign(Gs,{structure:bt,memory:{array:Ba},const:!0,slots:{0:ze,1:Ae,2:Ue,3:he,4:de,5:Ve,6:Pe,7:Ie,8:ke,9:Re,10:qe,11:ve,12:Ee,13:xe,14:Te}});Object.assign(Hs,{structure:lt,memory:{array:Ga},const:!0});Object.assign(Js,{structure:gt,memory:{array:Ha},const:!0,slots:{0:Ce}});Object.assign(Ns,{slots:{0:Qs,1:Ws}});Object.assign(Qs,{structure:z,memory:{array:Ja},const:!0});Object.assign(Ws,{structure:z,memory:{array:Na},const:!0});Object.assign(Zs,{memory:{array:hr},slots:{0:tr}});Object.assign(tr,{structure:$,memory:{array:hr,offset:0,length:8},slots:{0:De}});Object.assign(De,{structure:jt,memory:{array:Qa},reloc:0});Object.assign(er,{slots:{0:sr,1:nr,2:ar}});Object.assign(sr,{structure:n,memory:{array:Wa},const:!0,slots:{0:rr}});Object.assign(rr,{structure:Ot});Object.assign(nr,{structure:n,memory:{array:Za},const:!0,slots:{0:Vt}});Object.assign(ar,{structure:w,memory:{array:to},const:!0,slots:{0:or}});Object.assign(or,{structure:R,memory:{array:eo},const:!0});Object.assign(cr,{memory:{array:Me},slots:{0:ur}});Object.assign(ur,{structure:ft,memory:{array:Me},slots:{0:ir}});Object.assign(ir,{structure:$,memory:{array:Me,offset:0,length:8},slots:{0:De}});Object.assign(yr,{memory:{array:so}});Object.assign(mr,{slots:{0:br}});Object.assign(br,{structure:I,memory:{array:ro},const:!0});Object.assign(lr,{slots:{0:pr}});Object.assign(pr,{structure:k,memory:{array:no},const:!0});Object.assign(gr,{slots:{0:Or,1:fr,2:wr,3:Ar}});Object.assign(Or,{structure:n,memory:{array:ao},const:!0,slots:{0:jr}});Object.assign(jr,{structure:Dt});Object.assign(fr,{structure:n,memory:{array:oo},const:!0,slots:{0:Sr}});Object.assign(Sr,{structure:M});Object.assign(wr,{structure:n,memory:{array:co},const:!0,slots:{0:zr}});Object.assign(zr,{structure:F});Object.assign(Ar,{structure:n,memory:{array:uo},const:!0,slots:{0:Ur}});Object.assign(Ur,{structure:_});const io={argStruct:$t,thunkId:2,name:"createOutput"},yo={argStruct:_t,thunkId:3,name:"createPartialOutput"};Object.assign(n,{...s,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:n}],methods:[]}});Object.assign(h,{...s,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:h}],methods:[]}});Object.assign(Q,{...s,type:1,name:"[33:0]u8",length:33,byteSize:34,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:h}],methods:[]}});Object.assign(W,{...s,type:13,name:"*const [33:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[]}});Object.assign(Z,{...s,type:1,name:"[7:0]u8",length:7,byteSize:8,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:h}],methods:[]}});Object.assign(tt,{...s,type:13,name:"*const [7:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[]}});Object.assign(w,{...s,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:w}],methods:[]}});Object.assign(R,{...s,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:R}],methods:[]}});Object.assign(et,{...s,type:1,name:"[23:0]u8",length:23,byteSize:24,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:h}],methods:[]}});Object.assign(st,{...s,type:13,name:"*const [23:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:et}],methods:[]}});Object.assign(e,{...s,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:e}],methods:[]}});Object.assign(r,{...s,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[]}});Object.assign(v,{...s,type:2,name:"Struct738220547",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:_e}});Object.assign(rt,{...s,type:2,name:"Struct830517164",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:Ye}});Object.assign(nt,{...s,type:2,name:"Struct2210712367",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:He}});Object.assign(A,{...s,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:A}],methods:[]}});Object.assign(u,{...s,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:A}],methods:[]}});Object.assign(at,{...s,type:2,name:"Struct3779807375",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:n},{...t,type:7,slot:1,name:"minValue",structure:v},{...t,type:7,slot:2,name:"maxValue",structure:rt},{...t,type:7,slot:3,name:"defaultValue",structure:nt}],methods:[],template:Qe}});Object.assign(E,{...s,type:2,name:"Struct142040656",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e},{...t,type:7,slot:3,name:"3",structure:e}],methods:[],template:We}});Object.assign(U,{...s,type:2,name:"Struct2121898850",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e},{...t,type:7,slot:3,name:"3",structure:e}],methods:[],template:rs}});Object.assign(D,{...s,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:A}],methods:[]}});Object.assign(ot,{...s,type:2,name:"Struct1722451063",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:n},{...t,type:7,slot:1,name:"minValue",structure:E},{...t,type:7,slot:2,name:"maxValue",structure:U},{...t,type:7,slot:3,name:"defaultValue",structure:U}],methods:[],template:us}});Object.assign(ct,{...s,type:2,name:"Struct2713510617",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e},{...t,type:7,slot:3,name:"3",structure:e}],methods:[],template:is}});Object.assign(ut,{...s,type:2,name:"Struct1091123548",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:n},{...t,type:7,slot:1,name:"minValue",structure:E},{...t,type:7,slot:2,name:"maxValue",structure:U},{...t,type:7,slot:3,name:"defaultValue",structure:ct}],methods:[],template:ps}});Object.assign(x,{...s,type:2,name:"Struct2010658752",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:gs}});Object.assign(T,{...s,type:2,name:"Struct1464340365",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:fs}});Object.assign(it,{...s,type:2,name:"Struct1278149096",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:zs}});Object.assign(q,{...s,type:2,name:"Struct209288354",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:n},{...t,type:7,slot:1,name:"minValue",structure:x},{...t,type:7,slot:2,name:"maxValue",structure:T},{...t,type:7,slot:3,name:"defaultValue",structure:it}],methods:[],template:hs}});Object.assign(a,{...s,type:2,name:"Struct4270045594",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:n},{...t,type:7,slot:1,name:"minValue",structure:x},{...t,type:7,slot:2,name:"maxValue",structure:T},{...t,type:7,slot:3,name:"defaultValue",structure:v}],methods:[],template:ds}});Object.assign(yt,{...s,type:2,name:"Struct3869885801",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:n},{...t,type:7,slot:1,name:"minValue",structure:e},{...t,type:7,slot:2,name:"maxValue",structure:e},{...t,type:7,slot:3,name:"defaultValue",structure:e}],methods:[],template:Vs}});Object.assign(mt,{...s,type:2,name:"Struct3809048985",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:n},{...t,type:7,slot:1,name:"minValue",structure:e},{...t,type:7,slot:2,name:"maxValue",structure:e},{...t,type:7,slot:3,name:"defaultValue",structure:e}],methods:[],template:Rs}});Object.assign(bt,{...s,type:2,name:"Struct2262504290",align:1,instance:{members:[{...t,type:7,slot:0,name:"size",structure:at},{...t,type:7,slot:1,name:"colorStart",structure:ot},{...t,type:7,slot:2,name:"colorEnd",structure:ut},{...t,type:7,slot:3,name:"rangeX",structure:q},{...t,type:7,slot:4,name:"rangeY",structure:q},{...t,type:7,slot:5,name:"c0",structure:a},{...t,type:7,slot:6,name:"c1",structure:a},{...t,type:7,slot:7,name:"c2",structure:a},{...t,type:7,slot:8,name:"c3",structure:a},{...t,type:7,slot:9,name:"c4",structure:a},{...t,type:7,slot:10,name:"c5",structure:a},{...t,type:7,slot:11,name:"c6",structure:a},{...t,type:7,slot:12,name:"c7",structure:a},{...t,type:7,slot:13,name:"toleranceInversePower",structure:yt},{...t,type:7,slot:14,name:"iterations",structure:mt}],methods:[],template:xs}});Object.assign(lt,{...s,type:2,name:"@TypeOf(.{})",align:1,isTuple:!0});Object.assign(pt,{...s,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:w}],methods:[],template:Ts}});Object.assign(gt,{...s,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:pt}],methods:[],template:Cs}});Object.assign(Dt,{...s,type:2,name:"newton-raphson.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:W},{...t,type:7,slot:1,name:"vendor",structure:tt},{...t,type:7,slot:2,name:"version",structure:w},{...t,type:7,slot:3,name:"description",structure:st},{...t,type:7,slot:4,name:"parameters",structure:bt},{...t,type:7,slot:5,name:"inputImages",structure:lt},{...t,type:7,slot:6,name:"outputImages",structure:gt}],methods:[],template:Ds}});Object.assign(M,{...s,type:2,name:"newton-raphson.KernelInput(u8,newton-raphson.kernel)",align:1});Object.assign(Ot,{...s,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:h}],methods:[]}});Object.assign(jt,{...s,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:Ot}],methods:[]}});Object.assign($,{...s,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:jt}],methods:[]}});Object.assign(p,{...s,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[]}});Object.assign(z,{...s,type:11,name:"newton-raphson.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:z}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:z},{...t,type:7,slot:1,name:"display-p3",structure:z}],methods:[],template:Ns}});Object.assign(N,{...s,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:N}],methods:[]}});Object.assign(ft,{...s,type:2,name:"newton-raphson.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:$},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:p},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:p},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:z},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:N}],methods:[],template:Zs},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:n},{...t,type:7,slot:1,name:"FPixel",structure:n},{...t,type:7,slot:2,name:"channels",structure:w}],methods:[],template:er}});Object.assign(F,{...s,type:2,name:"newton-raphson.KernelOutput(u8,newton-raphson.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:ft}],methods:[],template:cr}});Object.assign(_,{...s,type:2,name:"newton-raphson.KernelParameters(newton-raphson.kernel)",byteSize:128,align:16,instance:{members:[{...t,type:5,bitOffset:256,bitSize:64,byteSize:8,slot:0,name:"size",structure:u},{...t,type:5,bitOffset:0,bitSize:128,byteSize:16,slot:1,name:"colorStart",structure:D},{...t,type:5,bitOffset:128,bitSize:128,byteSize:16,slot:2,name:"colorEnd",structure:D},{...t,type:5,bitOffset:320,bitSize:64,byteSize:8,slot:3,name:"rangeX",structure:u},{...t,type:5,bitOffset:384,bitSize:64,byteSize:8,slot:4,name:"rangeY",structure:u},{...t,type:5,bitOffset:448,bitSize:64,byteSize:8,slot:5,name:"c0",structure:u},{...t,type:5,bitOffset:512,bitSize:64,byteSize:8,slot:6,name:"c1",structure:u},{...t,type:5,bitOffset:576,bitSize:64,byteSize:8,slot:7,name:"c2",structure:u},{...t,type:5,bitOffset:640,bitSize:64,byteSize:8,slot:8,name:"c3",structure:u},{...t,type:5,bitOffset:704,bitSize:64,byteSize:8,slot:9,name:"c4",structure:u},{...t,type:5,bitOffset:768,bitSize:64,byteSize:8,slot:10,name:"c5",structure:u},{...t,type:5,bitOffset:832,bitSize:64,byteSize:8,slot:11,name:"c6",structure:u},{...t,type:5,bitOffset:896,bitSize:64,byteSize:8,slot:12,name:"c7",structure:u},{...t,type:4,bitOffset:960,bitSize:32,byteSize:4,slot:13,name:"toleranceInversePower",structure:A},{...t,type:4,bitOffset:992,bitSize:32,byteSize:4,slot:14,name:"iterations",structure:A}],methods:[],template:yr}});Object.assign(I,{...s,type:10,name:"ErrorSet3708995262",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:I}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:I}],methods:[],template:mr}});Object.assign(Mt,{...s,type:9,name:"ErrorSet3708995262!newton-raphson.KernelOutput(u8,newton-raphson.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:F},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:I}],methods:[]}});Object.assign($t,{...s,type:5,name:"createOutput",byteSize:176,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:1024,bitSize:32,byteSize:4,slot:3,name:"0",structure:p},{...t,type:3,isRequired:!0,bitOffset:1056,bitSize:32,byteSize:4,slot:4,name:"1",structure:p},{...t,type:5,isRequired:!0,bitOffset:1312,bitSize:0,byteSize:0,slot:0,name:"2",structure:M},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:1024,byteSize:128,slot:1,name:"3",structure:_},{...t,type:5,isRequired:!0,bitOffset:1088,bitSize:224,byteSize:28,slot:2,name:"retval",structure:Mt}],methods:[]}});Object.assign(k,{...s,type:10,name:"ErrorSet3060176423",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:k}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:k}],methods:[],template:lr}});Object.assign(Ft,{...s,type:9,name:"ErrorSet3060176423!newton-raphson.KernelOutput(u8,newton-raphson.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:F},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:k}],methods:[]}});Object.assign(_t,{...s,type:5,name:"createPartialOutput",byteSize:176,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:1024,bitSize:32,byteSize:4,slot:3,name:"0",structure:p},{...t,type:3,isRequired:!0,bitOffset:1056,bitSize:32,byteSize:4,slot:4,name:"1",structure:p},{...t,type:3,isRequired:!0,bitOffset:1088,bitSize:32,byteSize:4,slot:5,name:"2",structure:p},{...t,type:3,isRequired:!0,bitOffset:1120,bitSize:32,byteSize:4,slot:6,name:"3",structure:p},{...t,type:5,isRequired:!0,bitOffset:1376,bitSize:0,byteSize:0,slot:0,name:"4",structure:M},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:1024,byteSize:128,slot:1,name:"5",structure:_},{...t,type:5,isRequired:!0,bitOffset:1152,bitSize:224,byteSize:28,slot:2,name:"retval",structure:Ft}],methods:[]}});Object.assign(Lt,{...s,type:2,name:"newton-raphson",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:n},{...t,type:7,slot:1,name:"Input",structure:n},{...t,type:7,slot:2,name:"Output",structure:n},{...t,type:7,slot:3,name:"Parameters",structure:n}],methods:[io,yo],template:gr}});const mo=[n,h,Q,W,Z,tt,w,R,et,st,e,r,v,rt,nt,A,u,at,E,U,D,ot,ct,ut,x,T,it,q,a,yt,mt,bt,lt,pt,gt,Dt,M,Ot,jt,$,p,z,N,ft,F,_,I,Mt,$t,k,Ft,_t,Lt],bo=Lt,lo={runtimeSafety:!1,littleEndian:!0},Tt=Cr();Tt.getSpecialExports();Tt.recreateStructures(mo,lo);const po=(async()=>{const i=new URL("newton-raphson-a59cda83.wasm",import.meta.url).href;return fetch(i)})();Tt.loadModule(po);Tt.linkVariables(!0);const{constructor:go}=bo,{createPartialOutput:Oo,Input:jo,kernel:Ct}=go;function fo(i,m,y,c,o={},d={}){const V=[];for(const[l]of Ct.inputImages)V.push(l);const K=[];for(const[l]of Ct.outputImages)K.push(l);if(Array.isArray(o)){const l=o;o={};for(const[g,P]of V.entries())o[P]=l[g]}const b=new jo(void 0),G=[];let C;for(const l of V){let g=o[l];if(g||(V.length===1&&["data","width","height"].every(P=>!!o[P])?g=o:G.push(l)),b[l]=g,C){if(g.colorSpace!==C)throw new Error(`Input images must all use the same color space: ${C}`)}else C=g.colorSpace}if(G.length>0)throw new Error(`Missing input image${G.length>1?"s":""}: ${G.join(", ")}`);const Kt=Oo(i,m,y,c,b,d),$e=l=>{const g={};for(const P of K){const{data:{typedArray:H},width:Fe,height:dr}=l[P];let J;if(typeof ImageData=="function"){const Vr=new Uint8ClampedArray(H.buffer,H.byteOffset,H.byteLength);J=new ImageData(Vr,Fe,c,{colorSpace:C})}else J={data:H,width:Fe,height:dr};if(K.length===1)return J;g[P]=J}return g};return Kt[Symbol.toStringTag]==="Promise"?Kt.then($e):$e(Kt)}function So(){const i={};for(let[m,y]of Ct){if(m==="parameters"){const c={};for(const[o,d]of y){const V=c[o]={};for(let[K,b]of d)typeof b=="object"?b=b.string??b.valueOf():typeof b=="function"&&(b=wo(b.name)),V[K]=b}y=c}else typeof y=="object"&&(y=y.string??y.valueOf());i[m]=y}return i}function wo(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[m,y,...c]=i.data;zo(m,c).then(([o,d])=>{postMessage([m,y,o],{transfer:d})}).catch(o=>{postMessage(["error",y,o])})};async function zo(i,m){switch(i){case"getKernelInfo":return[So(...m)];case"createPartialImageData":const c=await fo(...m),o=[];if("data"in c&&"width"in c&&"height"in c)o.push(c.data.buffer);else for(const d of Object.entries(c))o.push(c.data.buffer);return[c,o];default:throw new Error(`Unknown function: ${i}`)}}
