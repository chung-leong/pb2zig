import{u as jr,a as fr,b as Sr,c as zr,d as wr,e as Ar,f as Ur,g as dr,h as hr,i as Vr,j as Pr,k as Ir,l as kr,m as Rr,n as qr,o as vr,p as Er,q as xr,r as Kr,s as _r}from"./index-34581284.js";jr();Pr();Ir();fr();Sr();kr();Rr();qr();vr();zr();wr();Ar();Ur();Er();_r();dr();xr();hr();Vr();const s={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},a={},S={},F={},T={},$={},L={},p={},U={},B={},G={},e={},r={},g={},d={},H={},O={},j={},J={},N={},Q={},W={},X={},Y={},Z={},tt={},et={},st={},rt={},at={},nt={},ot={},it={},ct={},ut={},mt={},yt={},zt={},R={},lt={},bt={},q={},l={},f={},D={},wt={},gt={},v={},E={},k={},At={},Ut={},M={},dt={},ht={},Vt={},qe={},h={},ve={},V={},Ee={},xe={},pt={},Ke={},Ot={},_e={},Ce={},Pt={},De={},It={},Me={},Fe={},kt={},x={},Rt={},qt={},vt={},Te={},Et={},$e={},xt={},Le={},Be={},Kt={},_t={},Ct={},Dt={},Ge={},Mt={},He={},Ft={},Je={},Tt={},Ne={},$t={},Qe={},We={},Lt={},Xe={},Bt={},Ye={},Ze={},Gt={},ts={},Ht={},es={},ss={},Jt={},Nt={},Qt={},Wt={},rs={},Xt={},as={},Yt={},ns={},Zt={},os={},is={},te={},cs={},ee={},us={},se={},ms={},ys={},re={},ls={},ae={},bs={},ne={},gs={},ps={},oe={},Os={},ie={},ce={},ue={},js={},me={},fs={},ye={},Ss={},zs={},le={},ws={},be={},As={},Us={},ge={},pe={},Oe={},je={},ds={},fe={},Se={},ze={},we={},Ae={},Ue={},hs={},de={},Vs={},Ps={},he={},Is={},ks={},Rs={},qs={},vs={},Es={},xs={},Ks={},_s={},Cs={},Ds={},Ms={},Fs={},Ts={},$s={},Ls={},Bs={},Ve={},Gs={},Hs={},Js={},Ns={},Qs={},Ws={},Xs={},Ys={},Zs={},tr={},er={},sr={},Pe={},rr={},ar={},nr={},or={},ir={},cr={},ur={},mr={},yr={},lr={},Cr=new Uint8Array,Dr=new Uint8Array([0,0,0,0,0,0,0,0]),Mr=new Uint8Array,Fr=new Uint8Array([0,0,0,0,0,0,0,0]),Tr=new Uint8Array,$r=new Uint8Array([0,0,0,0,0,0,144,64]),Lr=new Uint8Array,Br=new Uint8Array([0,0,0,0,0,0,144,64]),Gr=new Uint8Array,Hr=new Uint8Array([0,0,0,0,0,0,144,64]),Jr=new Uint8Array,Nr=new Uint8Array([0,0,0,0,0,0,128,64]),Qr=new Uint8Array,Wr=new Uint8Array,Xr=new Uint8Array,Yr=new Uint8Array,Zr=new Uint8Array,ta=new Uint8Array([0,0,0,0,0,0,128,64]),ea=new Uint8Array,sa=new Uint8Array([0,0,0,0,0,0,112,64]),ra=new Uint8Array,aa=new Uint8Array,na=new Uint8Array,oa=new Uint8Array,ia=new Uint8Array,ca=new Uint8Array,ua=new Uint8Array([0,0,0,0,0,0,0,0]),ma=new Uint8Array,ya=new Uint8Array([154,153,153,153,153,153,185,63]),la=new Uint8Array,ba=new Uint8Array([0,0,0,0,0,0,0,0]),ga=new Uint8Array,pa=new Uint8Array([0,0,0,0,0,0,89,192]),Oa=new Uint8Array,ja=new Uint8Array([0,0,0,0,0,0,89,192]),fa=new Uint8Array,Sa=new Uint8Array([0,0,0,0,0,0,89,64]),za=new Uint8Array,wa=new Uint8Array([0,0,0,0,0,0,89,64]),Aa=new Uint8Array,Ua=new Uint8Array,da=new Uint8Array,ha=new Uint8Array,Va=new Uint8Array,Pa=new Uint8Array([0,0,0,0,0,0,20,192]),Ia=new Uint8Array,ka=new Uint8Array([0,0,0,0,0,0,20,192]),Ra=new Uint8Array,qa=new Uint8Array([0,0,0,0,0,0,20,192]),va=new Uint8Array,Ea=new Uint8Array([0,0,0,0,0,0,20,64]),xa=new Uint8Array,Ka=new Uint8Array([0,0,0,0,0,0,20,64]),_a=new Uint8Array,Ca=new Uint8Array([0,0,0,0,0,0,20,64]),Da=new Uint8Array,Ma=new Uint8Array([0,0,0,0,0,0,0,0]),Fa=new Uint8Array,Ta=new Uint8Array([0,0,0,0,0,0,0,0]),$a=new Uint8Array,La=new Uint8Array([0,0,0,0,0,0,0,0]),Ba=new Uint8Array,Ga=new Uint8Array,Ha=new Uint8Array,Ja=new Uint8Array,Na=new Uint8Array,Qa=new Uint8Array([154,153,153,153,153,153,185,63]),Wa=new Uint8Array,Xa=new Uint8Array([154,153,153,153,153,153,185,63]),Ya=new Uint8Array,Za=new Uint8Array([154,153,153,153,153,153,169,63]),tn=new Uint8Array,en=new Uint8Array([154,153,153,153,153,153,169,63]),sn=new Uint8Array,rn=new Uint8Array,an=new Uint8Array,nn=new Uint8Array,on=new Uint8Array,cn=new Uint8Array,un=new Uint8Array,mn=new Uint8Array,yn=new Uint8Array,ln=new Uint8Array,bn=new Uint8Array,gn=new Uint8Array([4]),pn=new Uint8Array,On=new Uint8Array([4,16,0,1]),jn=new Uint8Array([99,111,109,46,109,114,100,111,111,98,46,115,104,97,100,101,114,115,0]),fn=new Uint8Array([34,16,0,1]),Sn=new Uint8Array([77,114,46,100,111,111,98,0]),zn=new Uint8Array,wn=new Uint8Array([1]),An=new Uint8Array([59,16,0,1]),Un=new Uint8Array([71,111,111,100,32,111,108,100,32,112,108,97,115,109,97,32,101,102,102,101,99,116,0]),dn=new Uint8Array,hn=new Uint8Array,Vn=new Uint8Array,Pn=new Uint8Array([0]),In=new Uint8Array([1]),br=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),kn=new Uint8Array,Rn=new Uint8Array,qn=new Uint8Array,vn=new Uint8Array,En=new Uint8Array([4]),Ie=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),xn=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,68,0,0,0,68,0,0,0,68,0,0,128,67,0,0,0,0,0,0,0,0,205,204,76,61,205,204,76,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Kn=new Uint8Array([27,0]),_n=new Uint8Array,Cn=new Uint8Array,Dn=new Uint8Array,Mn=new Uint8Array;Object.assign(qe,{slots:{0:h,1:V}});Object.assign(h,{structure:e,memory:{array:Cr},slots:{0:ve}});Object.assign(ve,{structure:r,memory:{array:Dr}});Object.assign(V,{structure:e,memory:{array:Mr},slots:{0:Ee}});Object.assign(Ee,{structure:r,memory:{array:Fr}});Object.assign(xe,{slots:{0:pt,1:Ot}});Object.assign(pt,{structure:e,memory:{array:Tr},slots:{0:Ke}});Object.assign(Ke,{structure:r,memory:{array:$r}});Object.assign(Ot,{structure:e,memory:{array:Lr},slots:{0:_e}});Object.assign(_e,{structure:r,memory:{array:Br}});Object.assign(Ce,{slots:{0:Pt,1:It}});Object.assign(Pt,{structure:e,memory:{array:Gr},slots:{0:De}});Object.assign(De,{structure:r,memory:{array:Hr}});Object.assign(It,{structure:e,memory:{array:Jr},slots:{0:Me}});Object.assign(Me,{structure:r,memory:{array:Nr}});Object.assign(Fe,{slots:{0:kt,1:Rt,2:qt,3:vt}});Object.assign(kt,{structure:a,memory:{array:Qr},slots:{0:x}});Object.assign(x,{structure:j});Object.assign(Rt,{structure:g,memory:{array:Wr},slots:{0:h,1:V}});Object.assign(qt,{structure:d,memory:{array:Xr},slots:{0:pt,1:Ot}});Object.assign(vt,{structure:H,memory:{array:Yr},slots:{0:Pt,1:It}});Object.assign(Te,{slots:{0:Et,1:xt}});Object.assign(Et,{structure:e,memory:{array:Zr},slots:{0:$e}});Object.assign($e,{structure:r,memory:{array:ta}});Object.assign(xt,{structure:e,memory:{array:ea},slots:{0:Le}});Object.assign(Le,{structure:r,memory:{array:sa}});Object.assign(Be,{slots:{0:Kt,1:_t,2:Ct,3:Dt}});Object.assign(Kt,{structure:a,memory:{array:ra},slots:{0:x}});Object.assign(_t,{structure:g,memory:{array:aa},slots:{0:h,1:V}});Object.assign(Ct,{structure:d,memory:{array:na},slots:{0:pt,1:Ot}});Object.assign(Dt,{structure:N,memory:{array:oa},slots:{0:Et,1:xt}});Object.assign(Ge,{slots:{0:Mt,1:Ft,2:Tt,3:$t}});Object.assign(Mt,{structure:a,memory:{array:ia},slots:{0:He}});Object.assign(He,{structure:O});Object.assign(Ft,{structure:e,memory:{array:ca},slots:{0:Je}});Object.assign(Je,{structure:r,memory:{array:ua}});Object.assign(Tt,{structure:e,memory:{array:ma},slots:{0:Ne}});Object.assign(Ne,{structure:r,memory:{array:ya}});Object.assign($t,{structure:e,memory:{array:la},slots:{0:Qe}});Object.assign(Qe,{structure:r,memory:{array:ba}});Object.assign(We,{slots:{0:Lt,1:Bt}});Object.assign(Lt,{structure:e,memory:{array:ga},slots:{0:Xe}});Object.assign(Xe,{structure:r,memory:{array:pa}});Object.assign(Bt,{structure:e,memory:{array:Oa},slots:{0:Ye}});Object.assign(Ye,{structure:r,memory:{array:ja}});Object.assign(Ze,{slots:{0:Gt,1:Ht}});Object.assign(Gt,{structure:e,memory:{array:fa},slots:{0:ts}});Object.assign(ts,{structure:r,memory:{array:Sa}});Object.assign(Ht,{structure:e,memory:{array:za},slots:{0:es}});Object.assign(es,{structure:r,memory:{array:wa}});Object.assign(ss,{slots:{0:Jt,1:Nt,2:Qt,3:Wt}});Object.assign(Jt,{structure:a,memory:{array:Aa},slots:{0:x}});Object.assign(Nt,{structure:X,memory:{array:Ua},slots:{0:Lt,1:Bt}});Object.assign(Qt,{structure:Y,memory:{array:da},slots:{0:Gt,1:Ht}});Object.assign(Wt,{structure:g,memory:{array:ha},slots:{0:h,1:V}});Object.assign(rs,{slots:{0:Xt,1:Yt,2:Zt}});Object.assign(Xt,{structure:e,memory:{array:Va},slots:{0:as}});Object.assign(as,{structure:r,memory:{array:Pa}});Object.assign(Yt,{structure:e,memory:{array:Ia},slots:{0:ns}});Object.assign(ns,{structure:r,memory:{array:ka}});Object.assign(Zt,{structure:e,memory:{array:Ra},slots:{0:os}});Object.assign(os,{structure:r,memory:{array:qa}});Object.assign(is,{slots:{0:te,1:ee,2:se}});Object.assign(te,{structure:e,memory:{array:va},slots:{0:cs}});Object.assign(cs,{structure:r,memory:{array:Ea}});Object.assign(ee,{structure:e,memory:{array:xa},slots:{0:us}});Object.assign(us,{structure:r,memory:{array:Ka}});Object.assign(se,{structure:e,memory:{array:_a},slots:{0:ms}});Object.assign(ms,{structure:r,memory:{array:Ca}});Object.assign(ys,{slots:{0:re,1:ae,2:ne}});Object.assign(re,{structure:e,memory:{array:Da},slots:{0:ls}});Object.assign(ls,{structure:r,memory:{array:Ma}});Object.assign(ae,{structure:e,memory:{array:Fa},slots:{0:bs}});Object.assign(bs,{structure:r,memory:{array:Ta}});Object.assign(ne,{structure:e,memory:{array:$a},slots:{0:gs}});Object.assign(gs,{structure:r,memory:{array:La}});Object.assign(ps,{slots:{0:oe,1:ie,2:ce,3:ue}});Object.assign(oe,{structure:a,memory:{array:Ba},slots:{0:Os}});Object.assign(Os,{structure:rt});Object.assign(ie,{structure:tt,memory:{array:Ga},slots:{0:Xt,1:Yt,2:Zt}});Object.assign(ce,{structure:et,memory:{array:Ha},slots:{0:te,1:ee,2:se}});Object.assign(ue,{structure:st,memory:{array:Ja},slots:{0:re,1:ae,2:ne}});Object.assign(js,{slots:{0:me,1:ye}});Object.assign(me,{structure:e,memory:{array:Na},slots:{0:fs}});Object.assign(fs,{structure:r,memory:{array:Qa}});Object.assign(ye,{structure:e,memory:{array:Wa},slots:{0:Ss}});Object.assign(Ss,{structure:r,memory:{array:Xa}});Object.assign(zs,{slots:{0:le,1:be}});Object.assign(le,{structure:e,memory:{array:Ya},slots:{0:ws}});Object.assign(ws,{structure:r,memory:{array:Za}});Object.assign(be,{structure:e,memory:{array:tn},slots:{0:As}});Object.assign(As,{structure:r,memory:{array:en}});Object.assign(Us,{slots:{0:ge,1:pe,2:Oe,3:je}});Object.assign(ge,{structure:a,memory:{array:sn},slots:{0:x}});Object.assign(pe,{structure:g,memory:{array:rn},slots:{0:h,1:V}});Object.assign(Oe,{structure:nt,memory:{array:an},slots:{0:me,1:ye}});Object.assign(je,{structure:ot,memory:{array:nn},slots:{0:le,1:be}});Object.assign(ds,{slots:{0:fe,1:Se,2:ze,3:we,4:Ae,5:Ue}});Object.assign(fe,{structure:J,memory:{array:on},slots:{0:kt,1:Rt,2:qt,3:vt}});Object.assign(Se,{structure:Q,memory:{array:cn},slots:{0:Kt,1:_t,2:Ct,3:Dt}});Object.assign(ze,{structure:W,memory:{array:un},slots:{0:Mt,1:Ft,2:Tt,3:$t}});Object.assign(we,{structure:Z,memory:{array:mn},slots:{0:Jt,1:Nt,2:Qt,3:Wt}});Object.assign(Ae,{structure:at,memory:{array:yn},slots:{0:oe,1:ie,2:ce,3:ue}});Object.assign(Ue,{structure:it,memory:{array:ln},slots:{0:ge,1:pe,2:Oe,3:je}});Object.assign(hs,{slots:{0:de}});Object.assign(de,{structure:p,memory:{array:bn},slots:{0:Vs}});Object.assign(Vs,{structure:U,memory:{array:gn}});Object.assign(Ps,{slots:{0:he}});Object.assign(he,{structure:mt,memory:{array:pn},slots:{0:de}});Object.assign(Is,{slots:{0:ks,1:qs,2:Es,3:Ks,4:Cs,5:Ds,6:Ms}});Object.assign(ks,{structure:T,memory:{array:On},slots:{0:Rs}});Object.assign(Rs,{structure:F,memory:{array:jn},reloc:16781316,const:!0});Object.assign(qs,{structure:L,memory:{array:fn},slots:{0:vs}});Object.assign(vs,{structure:$,memory:{array:Sn},reloc:16781346,const:!0});Object.assign(Es,{structure:p,memory:{array:zn},slots:{0:xs}});Object.assign(xs,{structure:U,memory:{array:wn}});Object.assign(Ks,{structure:G,memory:{array:An},slots:{0:_s}});Object.assign(_s,{structure:B,memory:{array:Un},reloc:16781371,const:!0});Object.assign(Cs,{structure:ct,memory:{array:dn},slots:{0:fe,1:Se,2:ze,3:we,4:Ae,5:Ue}});Object.assign(Ds,{structure:ut,memory:{array:hn}});Object.assign(Ms,{structure:yt,memory:{array:Vn},slots:{0:he}});Object.assign(Fs,{slots:{0:Ts,1:$s}});Object.assign(Ts,{structure:f,memory:{array:Pn}});Object.assign($s,{structure:f,memory:{array:In}});Object.assign(Ls,{memory:{array:br},slots:{0:Bs}});Object.assign(Bs,{structure:q,memory:{array:br,offset:0,length:8},slots:{0:Ve}});Object.assign(Ve,{structure:bt,memory:{array:kn},reloc:0});Object.assign(Gs,{slots:{0:Hs,1:Ns,2:Ws}});Object.assign(Hs,{structure:a,memory:{array:Rn},slots:{0:Js}});Object.assign(Js,{structure:lt});Object.assign(Ns,{structure:a,memory:{array:qn},slots:{0:Qs}});Object.assign(Qs,{structure:wt});Object.assign(Ws,{structure:p,memory:{array:vn},slots:{0:Xs}});Object.assign(Xs,{structure:U,memory:{array:En}});Object.assign(Ys,{memory:{array:Ie},slots:{0:Zs}});Object.assign(Zs,{structure:gt,memory:{array:Ie},slots:{0:tr}});Object.assign(tr,{structure:q,memory:{array:Ie,offset:0,length:8},slots:{0:Ve}});Object.assign(er,{memory:{array:xn}});Object.assign(sr,{slots:{0:Pe}});Object.assign(Pe,{structure:k,memory:{array:Kn}});Object.assign(rr,{slots:{0:Pe}});Object.assign(ar,{slots:{0:nr,1:ir,2:ur,3:yr}});Object.assign(nr,{structure:a,memory:{array:_n},slots:{0:or}});Object.assign(or,{structure:zt});Object.assign(ir,{structure:a,memory:{array:Cn},slots:{0:cr}});Object.assign(cr,{structure:R});Object.assign(ur,{structure:a,memory:{array:Dn},slots:{0:mr}});Object.assign(mr,{structure:v});Object.assign(yr,{structure:a,memory:{array:Mn},slots:{0:lr}});Object.assign(lr,{structure:E});const Fn={argStruct:Ut,thunkId:2,name:"createOutput"},Tn={argStruct:ht,thunkId:3,name:"createPartialOutput"};Object.assign(a,{...s,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:a}],methods:[]}});Object.assign(S,{...s,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(F,{...s,type:1,name:"[18:0]u8",length:18,byteSize:19,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(T,{...s,type:13,name:"*const [18:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign($,{...s,type:1,name:"[7:0]u8",length:7,byteSize:8,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(L,{...s,type:13,name:"*const [7:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[]}});Object.assign(p,{...s,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:p}],methods:[]}});Object.assign(U,{...s,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:U}],methods:[]}});Object.assign(B,{...s,type:1,name:"[22:0]u8",length:22,byteSize:23,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(G,{...s,type:13,name:"*const [22:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:B}],methods:[]}});Object.assign(e,{...s,name:"comptime_float",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:e}],methods:[]}});Object.assign(r,{...s,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[]}});Object.assign(g,{...s,type:2,name:"Struct738220547",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:qe}});Object.assign(d,{...s,type:2,name:"Struct1391759938",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:xe}});Object.assign(H,{...s,type:2,name:"Struct2804892289",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:Ce}});Object.assign(O,{...s,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:O}],methods:[]}});Object.assign(j,{...s,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:O}],methods:[]}});Object.assign(J,{...s,type:2,name:"Struct2184834162",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"minValue",structure:g},{...t,type:9,slot:2,name:"maxValue",structure:d},{...t,type:9,slot:3,name:"defaultValue",structure:H}],methods:[],template:Fe}});Object.assign(N,{...s,type:2,name:"Struct321950653",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:Te}});Object.assign(Q,{...s,type:2,name:"Struct3082381710",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"minValue",structure:g},{...t,type:9,slot:2,name:"maxValue",structure:d},{...t,type:9,slot:3,name:"defaultValue",structure:N}],methods:[],template:Be}});Object.assign(W,{...s,type:2,name:"Struct3774340857",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"minValue",structure:e},{...t,type:9,slot:2,name:"maxValue",structure:e},{...t,type:9,slot:3,name:"defaultValue",structure:e}],methods:[],template:Ge}});Object.assign(X,{...s,type:2,name:"Struct909833941",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:We}});Object.assign(Y,{...s,type:2,name:"Struct2155520631",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:Ze}});Object.assign(Z,{...s,type:2,name:"Struct16988915",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"minValue",structure:X},{...t,type:9,slot:2,name:"maxValue",structure:Y},{...t,type:9,slot:3,name:"defaultValue",structure:g}],methods:[],template:ss}});Object.assign(tt,{...s,type:2,name:"Struct3501456061",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e},{...t,type:9,slot:2,name:"2",structure:e}],methods:[],template:rs}});Object.assign(et,{...s,type:2,name:"Struct3644929469",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e},{...t,type:9,slot:2,name:"2",structure:e}],methods:[],template:is}});Object.assign(st,{...s,type:2,name:"Struct4174069246",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e},{...t,type:9,slot:2,name:"2",structure:e}],methods:[],template:ys}});Object.assign(rt,{...s,type:15,name:"@Vector(3, f32)",length:3,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:O}],methods:[]}});Object.assign(at,{...s,type:2,name:"Struct576820718",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"minValue",structure:tt},{...t,type:9,slot:2,name:"maxValue",structure:et},{...t,type:9,slot:3,name:"defaultValue",structure:st}],methods:[],template:ps}});Object.assign(nt,{...s,type:2,name:"Struct3785042217",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:js}});Object.assign(ot,{...s,type:2,name:"Struct27682327",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:zs}});Object.assign(it,{...s,type:2,name:"Struct2320569155",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"minValue",structure:g},{...t,type:9,slot:2,name:"maxValue",structure:nt},{...t,type:9,slot:3,name:"defaultValue",structure:ot}],methods:[],template:Us}});Object.assign(ct,{...s,type:2,name:"Struct3182742454",align:1,instance:{members:[{...t,type:9,slot:0,name:"size",structure:J},{...t,type:9,slot:1,name:"center",structure:Q},{...t,type:9,slot:2,name:"distort",structure:W},{...t,type:9,slot:3,name:"offset",structure:Z},{...t,type:9,slot:4,name:"color_offset",structure:at},{...t,type:9,slot:5,name:"wave",structure:it}],methods:[],template:ds}});Object.assign(ut,{...s,type:2,name:"Struct2871943947",align:1});Object.assign(mt,{...s,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:p}],methods:[],template:hs}});Object.assign(yt,{...s,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:9,slot:0,name:"dst",structure:mt}],methods:[],template:Ps}});Object.assign(zt,{...s,type:2,name:"plasma.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:T},{...t,type:9,slot:1,name:"vendor",structure:L},{...t,type:9,slot:2,name:"version",structure:p},{...t,type:9,slot:3,name:"description",structure:G},{...t,type:9,slot:4,name:"parameters",structure:ct},{...t,type:9,slot:5,name:"inputImages",structure:ut},{...t,type:9,slot:6,name:"outputImages",structure:yt}],methods:[],template:Is}});Object.assign(R,{...s,type:2,name:"plasma.KernelInput(u8,plasma.kernel)",align:1});Object.assign(lt,{...s,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(bt,{...s,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:lt}],methods:[]}});Object.assign(q,{...s,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:bt}],methods:[]}});Object.assign(l,{...s,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:l}],methods:[]}});Object.assign(f,{...s,type:11,name:"plasma.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:f},{...t,type:9,slot:1,name:"display-p3",structure:f}],methods:[],template:Fs}});Object.assign(D,{...s,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:D}],methods:[]}});Object.assign(wt,{...s,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:O}],methods:[]}});Object.assign(gt,{...s,type:2,name:"plasma.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:q},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:f},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:D}],methods:[],template:Ls},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:a},{...t,type:9,slot:1,name:"FPixel",structure:a},{...t,type:9,slot:2,name:"channels",structure:p}],methods:[],template:Gs}});Object.assign(v,{...s,type:2,name:"plasma.KernelOutput(u8,plasma.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:gt}],methods:[],template:Ys}});Object.assign(E,{...s,type:2,name:"plasma.KernelParameters(plasma.kernel)",byteSize:64,align:16,instance:{members:[{...t,type:7,bitOffset:128,bitSize:64,byteSize:8,slot:0,name:"size",structure:j},{...t,type:7,bitOffset:192,bitSize:64,byteSize:8,slot:1,name:"center",structure:j},{...t,type:4,bitOffset:384,bitSize:32,byteSize:4,slot:5,name:"distort",structure:O},{...t,type:7,bitOffset:256,bitSize:64,byteSize:8,slot:2,name:"offset",structure:j},{...t,type:7,bitOffset:0,bitSize:96,byteSize:16,slot:3,name:"color_offset",structure:rt},{...t,type:7,bitOffset:320,bitSize:64,byteSize:8,slot:4,name:"wave",structure:j}],methods:[],template:er}});Object.assign(k,{...s,type:10,name:"@typeInfo(@typeInfo(@TypeOf(plasma.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:k}],methods:[],template:sr}});Object.assign(At,{...s,type:9,name:"ErrorSet3618935218!plasma.KernelOutput(u8,plasma.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:k}],methods:[]}});Object.assign(Ut,{...s,type:5,name:"createOutput",byteSize:112,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:512,bitSize:32,byteSize:4,slot:3,name:"0",structure:l},{...t,type:3,isRequired:!0,bitOffset:544,bitSize:32,byteSize:4,slot:4,name:"1",structure:l},{...t,type:7,isRequired:!0,bitOffset:800,bitSize:0,byteSize:0,slot:0,name:"2",structure:R},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:512,byteSize:64,slot:1,name:"3",structure:E},{...t,type:7,isRequired:!0,bitOffset:576,bitSize:224,byteSize:28,slot:2,name:"retval",structure:At}],methods:[]}});Object.assign(M,{...s,type:10,name:"@typeInfo(@typeInfo(@TypeOf(plasma.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:M}],methods:[],template:rr}});Object.assign(dt,{...s,type:9,name:"ErrorSet177646977!plasma.KernelOutput(u8,plasma.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:M}],methods:[]}});Object.assign(ht,{...s,type:5,name:"createPartialOutput",byteSize:112,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:512,bitSize:32,byteSize:4,slot:3,name:"0",structure:l},{...t,type:3,isRequired:!0,bitOffset:544,bitSize:32,byteSize:4,slot:4,name:"1",structure:l},{...t,type:3,isRequired:!0,bitOffset:576,bitSize:32,byteSize:4,slot:5,name:"2",structure:l},{...t,type:3,isRequired:!0,bitOffset:608,bitSize:32,byteSize:4,slot:6,name:"3",structure:l},{...t,type:7,isRequired:!0,bitOffset:864,bitSize:0,byteSize:0,slot:0,name:"4",structure:R},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:512,byteSize:64,slot:1,name:"5",structure:E},{...t,type:7,isRequired:!0,bitOffset:640,bitSize:224,byteSize:28,slot:2,name:"retval",structure:dt}],methods:[]}});Object.assign(Vt,{...s,type:2,name:"plasma",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:a},{...t,type:9,slot:1,name:"Input",structure:a},{...t,type:9,slot:2,name:"Output",structure:a},{...t,type:9,slot:3,name:"Parameters",structure:a}],methods:[Fn,Tn],template:ar}});const $n=[a,S,F,T,$,L,p,U,B,G,e,r,g,d,H,O,j,J,N,Q,W,X,Y,Z,tt,et,st,rt,at,nt,ot,it,ct,ut,mt,yt,zt,R,lt,bt,q,l,f,D,wt,gt,v,E,k,At,Ut,M,dt,ht,Vt],Ln=Vt,Bn={runtimeSafety:!1,littleEndian:!0},jt=Kr();jt.getControlObject();jt.recreateStructures($n,Bn);const Gn=(async()=>{const c=new URL("plasma-becc4cb1.wasm",import.meta.url).href;return fetch(c)})();jt.loadModule(Gn);jt.linkVariables(!0);const{constructor:Hn}=Ln,{createPartialOutput:Jn,Input:Nn,kernel:St}=Hn;function Qn(c,u,o,n,i={},z={}){const w=[];for(const[y]of St.inputImages)w.push(y);const P=[];for(const[y]of St.outputImages)P.push(y);if(Array.isArray(i)){const y=i;i={};for(const[b,A]of w.entries())i[A]=y[b]}const m=new Nn(void 0),K=[];let I;for(const y of w){let b=i[y];if(b||(w.length===1&&["data","width","height"].every(A=>!!i[A])?b=i:K.push(y)),m[y]=b,I){if(b.colorSpace!==I)throw new Error(`Input images must all use the same color space: ${I}`)}else I=b.colorSpace}if(K.length>0)throw new Error(`Missing input image${K.length>1?"s":""}: ${K.join(", ")}`);const ft=Jn(c,u,o,n,m,z),ke=y=>{const b={};for(const A of P){const{data:{typedArray:_},width:Re,height:pr}=y[A];let C;if(typeof ImageData=="function"){const Or=new Uint8ClampedArray(_.buffer,_.byteOffset,_.byteLength);C=new ImageData(Or,Re,n,{colorSpace:I})}else C={data:_,width:Re,height:pr};if(P.length===1)return C;b[A]=C}return b};return ft[Symbol.toStringTag]==="Promise"?ft.then(ke):ke(ft)}function Wn(){const c={};for(let[u,o]of St){if(u==="parameters"){const n={};for(const[i,z]of o){const w=n[i]={};for(let[P,m]of z)typeof m=="object"?"string"in m?m=m.string:m=gr(m):typeof m=="function"&&(m=Xn(m.name)),w[P]=m}o=n}else typeof o=="object"&&("string"in o?o=o.string:o=o.valueOf());c[u]=o}return c}function gr(c){const u=[];for(let[o,n]of c)typeof n=="object"&&(n=gr(n)),u[o]=n;return u}function Xn(c){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[c]}onmessage=c=>{const[u,o,...n]=c.data;Yn(u,n).then(([i,z])=>{postMessage([u,o,i],{transfer:z})}).catch(i=>{postMessage(["error",o,i])})};async function Yn(c,u){switch(c){case"getKernelInfo":return[Wn(...u)];case"createPartialImageData":const n=await Qn(...u),i=[];if("data"in n&&"width"in n&&"height"in n)i.push(n.data.buffer);else for(const z of Object.entries(n))i.push(n.data.buffer);return[n,i];default:throw new Error(`Unknown function: ${c}`)}}
