import{u as As,a as Us,b as Vs,c as Ps,d as ks,e as Is,f as Rs,g as qs,h as vs,i as Es,j as xs,k as Ks,l as Ts,m as Ds,n as Cs,o as Ms,p as $s,q as Fs}from"./index-33238b17.js";As();Ks();Ts();Us();Vs();Ds();Cs();Ms();$s();Ps();ks();Is();Rs();Fs();qs();vs();Es();const s={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},r={},f={},T={},D={},C={},M={},p={},h={},$={},F={},e={},g={},a={},A={},_={},L={},Y={},B={},G={},H={},J={},N={},Q={},W={},X={},Z={},ct={},P={},tt={},et={},k={},b={},O={},K={},st={},I={},R={},w={},ut={},mt={},d={},yt={},bt={},lt={},ee={},rt={},q={},at={},se={},re={},gt={},ae={},pt={},ne={},Ot={},oe={},ft={},ie={},ce={},jt={},ue={},St={},me={},zt={},ye={},wt={},be={},le={},dt={},ge={},ht={},pe={},At={},Oe={},Ut={},fe={},je={},Vt={},Pt={},kt={},It={},Rt={},Se={},qt={},vt={},ze={},Et={},we={},xt={},de={},he={},Kt={},Tt={},Ae={},Dt={},Ue={},Ct={},Ve={},Pe={},Mt={},$t={},ke={},Ft={},Ie={},_t={},Re={},qe={},Lt={},Yt={},Bt={},Gt={},Ht={},Jt={},ve={},Nt={},Ee={},xe={},Qt={},Ke={},Te={},De={},Ce={},Me={},$e={},Fe={},_e={},Le={},Ye={},Be={},Ge={},He={},Je={},Ne={},Qe={},We={},Wt={},Xe={},Ze={},ts={},es={},ss={},rs={},as={},ns={},os={},is={},cs={},us={},ms={},ys={},bs={},ls={},gs={},ps={},Os={},fs={},js={},Ss={},zs={},_s=new Uint8Array,Ls=new Uint8Array,Ys=new Uint8Array([0,0,0,0,0,0,128,64]),Bs=new Uint8Array,Gs=new Uint8Array([0,0,0,0,0,0,240,191]),Hs=new Uint8Array,Js=new Uint8Array([0,0,0,0,0,0,240,191]),Ns=new Uint8Array,Qs=new Uint8Array([0,0,0,0,0,0,0,192]),Ws=new Uint8Array,Xs=new Uint8Array([0,0,0,0,0,0,224,191]),Zs=new Uint8Array,tr=new Uint8Array([0,0,0,0,0,0,240,63]),er=new Uint8Array,sr=new Uint8Array([0,0,0,0,0,0,240,63]),rr=new Uint8Array,ar=new Uint8Array([0,0,0,0,0,0,0,64]),nr=new Uint8Array,or=new Uint8Array([0,0,0,0,0,0,224,63]),ir=new Uint8Array,cr=new Uint8Array([154,153,153,153,153,153,217,191]),ur=new Uint8Array,mr=new Uint8Array([195,245,40,92,143,194,229,191]),yr=new Uint8Array,br=new Uint8Array([10,215,163,112,61,10,215,191]),lr=new Uint8Array,gr=new Uint8Array([123,20,174,71,225,122,164,191]),pr=new Uint8Array,Or=new Uint8Array,fr=new Uint8Array,jr=new Uint8Array,Sr=new Uint8Array,zr=new Uint8Array,wr=new Uint8Array([0,0,0,0,0,0,240,191]),dr=new Uint8Array,hr=new Uint8Array([0,0,0,0,0,0,240,63]),Ar=new Uint8Array,Ur=new Uint8Array([0,0,0,0,0,0,0,0]),Vr=new Uint8Array,Pr=new Uint8Array,kr=new Uint8Array([0,0,0,0,0,0,0,0]),Ir=new Uint8Array,Rr=new Uint8Array([0,0,0,0,0,0,36,64]),qr=new Uint8Array,vr=new Uint8Array([0,0,0,0,0,0,8,64]),Er=new Uint8Array,xr=new Uint8Array,Kr=new Uint8Array([0,0,0,0,0,0,20,192]),Tr=new Uint8Array,Dr=new Uint8Array([0,0,0,0,0,0,20,64]),Cr=new Uint8Array,Mr=new Uint8Array([0,0,0,0,0,0,0,0]),$r=new Uint8Array,Fr=new Uint8Array,_r=new Uint8Array,Lr=new Uint8Array,Yr=new Uint8Array,Br=new Uint8Array,Gr=new Uint8Array,Hr=new Uint8Array([4]),Jr=new Uint8Array,Nr=new Uint8Array([24,16,0,1]),Qr=new Uint8Array([100,101,114,115,99,104,109,97,108,101,46,99,111,109,0]),Wr=new Uint8Array([50,16,0,1]),Xr=new Uint8Array([68,101,114,32,83,99,104,109,97,108,101,0]),Zr=new Uint8Array,ta=new Uint8Array([1]),ea=new Uint8Array([79,16,0,1]),sa=new Uint8Array([82,97,121,116,114,97,99,101,115,32,97,32,81,117,97,116,101,114,110,105,111,110,32,74,117,108,105,97,32,115,101,116,0]),ra=new Uint8Array,aa=new Uint8Array,na=new Uint8Array,oa=new Uint8Array([0]),ia=new Uint8Array([1]),ws=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ca=new Uint8Array,ua=new Uint8Array,ma=new Uint8Array,ya=new Uint8Array,ba=new Uint8Array([4]),Xt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),la=new Uint8Array([205,204,204,190,123,20,46,191,236,81,184,190,10,215,35,189,0,0,0,68,0,0,0,68,0,0,0,0,0,0,64,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ga=new Uint8Array([27,0]),pa=new Uint8Array([27,0]),Oa=new Uint8Array,fa=new Uint8Array,ja=new Uint8Array,Sa=new Uint8Array;Object.assign(ee,{slots:{0:rt,1:at}});Object.assign(rt,{structure:r,memory:{array:_s},const:!0,slots:{0:q}});Object.assign(q,{structure:g});Object.assign(at,{structure:e,memory:{array:Ls},const:!0,slots:{0:se}});Object.assign(se,{structure:a,memory:{array:Ys},const:!0});Object.assign(re,{slots:{0:gt,1:pt,2:Ot,3:ft}});Object.assign(gt,{structure:e,memory:{array:Bs},const:!0,slots:{0:ae}});Object.assign(ae,{structure:a,memory:{array:Gs},const:!0});Object.assign(pt,{structure:e,memory:{array:Hs},const:!0,slots:{0:ne}});Object.assign(ne,{structure:a,memory:{array:Js},const:!0});Object.assign(Ot,{structure:e,memory:{array:Ns},const:!0,slots:{0:oe}});Object.assign(oe,{structure:a,memory:{array:Qs},const:!0});Object.assign(ft,{structure:e,memory:{array:Ws},const:!0,slots:{0:ie}});Object.assign(ie,{structure:a,memory:{array:Xs},const:!0});Object.assign(ce,{slots:{0:jt,1:St,2:zt,3:wt}});Object.assign(jt,{structure:e,memory:{array:Zs},const:!0,slots:{0:ue}});Object.assign(ue,{structure:a,memory:{array:tr},const:!0});Object.assign(St,{structure:e,memory:{array:er},const:!0,slots:{0:me}});Object.assign(me,{structure:a,memory:{array:sr},const:!0});Object.assign(zt,{structure:e,memory:{array:rr},const:!0,slots:{0:ye}});Object.assign(ye,{structure:a,memory:{array:ar},const:!0});Object.assign(wt,{structure:e,memory:{array:nr},const:!0,slots:{0:be}});Object.assign(be,{structure:a,memory:{array:or},const:!0});Object.assign(le,{slots:{0:dt,1:ht,2:At,3:Ut}});Object.assign(dt,{structure:e,memory:{array:ir},const:!0,slots:{0:ge}});Object.assign(ge,{structure:a,memory:{array:cr},const:!0});Object.assign(ht,{structure:e,memory:{array:ur},const:!0,slots:{0:pe}});Object.assign(pe,{structure:a,memory:{array:mr},const:!0});Object.assign(At,{structure:e,memory:{array:yr},const:!0,slots:{0:Oe}});Object.assign(Oe,{structure:a,memory:{array:br},const:!0});Object.assign(Ut,{structure:e,memory:{array:lr},const:!0,slots:{0:fe}});Object.assign(fe,{structure:a,memory:{array:gr},const:!0});Object.assign(je,{slots:{0:Vt,1:kt,2:It,3:Rt}});Object.assign(Vt,{structure:r,memory:{array:pr},const:!0,slots:{0:Pt}});Object.assign(Pt,{structure:B});Object.assign(kt,{structure:_,memory:{array:Or},const:!0,slots:{0:gt,1:pt,2:Ot,3:ft}});Object.assign(It,{structure:L,memory:{array:fr},const:!0,slots:{0:jt,1:St,2:zt,3:wt}});Object.assign(Rt,{structure:Y,memory:{array:jr},const:!0,slots:{0:dt,1:ht,2:At,3:Ut}});Object.assign(Se,{slots:{0:qt,1:vt,2:Et,3:xt}});Object.assign(qt,{structure:r,memory:{array:Sr},const:!0,slots:{0:q}});Object.assign(vt,{structure:e,memory:{array:zr},const:!0,slots:{0:ze}});Object.assign(ze,{structure:a,memory:{array:wr},const:!0});Object.assign(Et,{structure:e,memory:{array:dr},const:!0,slots:{0:we}});Object.assign(we,{structure:a,memory:{array:hr},const:!0});Object.assign(xt,{structure:e,memory:{array:Ar},const:!0,slots:{0:de}});Object.assign(de,{structure:a,memory:{array:Ur},const:!0});Object.assign(he,{slots:{0:Kt,1:Tt,2:Dt,3:Ct}});Object.assign(Kt,{structure:r,memory:{array:Vr},const:!0,slots:{0:q}});Object.assign(Tt,{structure:e,memory:{array:Pr},const:!0,slots:{0:Ae}});Object.assign(Ae,{structure:a,memory:{array:kr},const:!0});Object.assign(Dt,{structure:e,memory:{array:Ir},const:!0,slots:{0:Ue}});Object.assign(Ue,{structure:a,memory:{array:Rr},const:!0});Object.assign(Ct,{structure:e,memory:{array:qr},const:!0,slots:{0:Ve}});Object.assign(Ve,{structure:a,memory:{array:vr},const:!0});Object.assign(Pe,{slots:{0:Mt,1:$t,2:Ft,3:_t}});Object.assign(Mt,{structure:r,memory:{array:Er},const:!0,slots:{0:q}});Object.assign($t,{structure:e,memory:{array:xr},const:!0,slots:{0:ke}});Object.assign(ke,{structure:a,memory:{array:Kr},const:!0});Object.assign(Ft,{structure:e,memory:{array:Tr},const:!0,slots:{0:Ie}});Object.assign(Ie,{structure:a,memory:{array:Dr},const:!0});Object.assign(_t,{structure:e,memory:{array:Cr},const:!0,slots:{0:Re}});Object.assign(Re,{structure:a,memory:{array:Mr},const:!0});Object.assign(qe,{slots:{0:Lt,1:Yt,2:Bt,3:Gt,4:Ht,5:Jt}});Object.assign(Lt,{structure:A,memory:{array:$r},const:!0,slots:{0:rt,1:at}});Object.assign(Yt,{structure:A,memory:{array:Fr},const:!0,slots:{0:rt,1:at}});Object.assign(Bt,{structure:G,memory:{array:_r},const:!0,slots:{0:Vt,1:kt,2:It,3:Rt}});Object.assign(Gt,{structure:H,memory:{array:Lr},const:!0,slots:{0:qt,1:vt,2:Et,3:xt}});Object.assign(Ht,{structure:J,memory:{array:Yr},const:!0,slots:{0:Kt,1:Tt,2:Dt,3:Ct}});Object.assign(Jt,{structure:N,memory:{array:Br},const:!0,slots:{0:Mt,1:$t,2:Ft,3:_t}});Object.assign(ve,{slots:{0:Nt}});Object.assign(Nt,{structure:p,memory:{array:Gr},const:!0,slots:{0:Ee}});Object.assign(Ee,{structure:h,memory:{array:Hr},const:!0});Object.assign(xe,{slots:{0:Qt}});Object.assign(Qt,{structure:X,memory:{array:Jr},const:!0,slots:{0:Nt}});Object.assign(Ke,{slots:{0:Te,1:Ce,2:$e,3:_e,4:Ye,5:Be,6:Ge}});Object.assign(Te,{structure:D,memory:{array:Nr},const:!0,slots:{0:De}});Object.assign(De,{structure:T,memory:{array:Qr},reloc:16781336});Object.assign(Ce,{structure:M,memory:{array:Wr},const:!0,slots:{0:Me}});Object.assign(Me,{structure:C,memory:{array:Xr},reloc:16781362});Object.assign($e,{structure:p,memory:{array:Zr},const:!0,slots:{0:Fe}});Object.assign(Fe,{structure:h,memory:{array:ta},const:!0});Object.assign(_e,{structure:F,memory:{array:ea},const:!0,slots:{0:Le}});Object.assign(Le,{structure:$,memory:{array:sa},reloc:16781391});Object.assign(Ye,{structure:Q,memory:{array:ra},const:!0,slots:{0:Lt,1:Yt,2:Bt,3:Gt,4:Ht,5:Jt}});Object.assign(Be,{structure:W,memory:{array:aa},const:!0});Object.assign(Ge,{structure:Z,memory:{array:na},const:!0,slots:{0:Qt}});Object.assign(He,{slots:{0:Je,1:Ne}});Object.assign(Je,{structure:O,memory:{array:oa},const:!0});Object.assign(Ne,{structure:O,memory:{array:ia},const:!0});Object.assign(Qe,{memory:{array:ws},slots:{0:We}});Object.assign(We,{structure:k,memory:{array:ws,offset:0,length:8},slots:{0:Wt}});Object.assign(Wt,{structure:et,memory:{array:ca},reloc:0});Object.assign(Xe,{slots:{0:Ze,1:es,2:ss}});Object.assign(Ze,{structure:r,memory:{array:ua},const:!0,slots:{0:ts}});Object.assign(ts,{structure:tt});Object.assign(es,{structure:r,memory:{array:ma},const:!0,slots:{0:Pt}});Object.assign(ss,{structure:p,memory:{array:ya},const:!0,slots:{0:rs}});Object.assign(rs,{structure:h,memory:{array:ba},const:!0});Object.assign(as,{memory:{array:Xt},slots:{0:ns}});Object.assign(ns,{structure:st,memory:{array:Xt},slots:{0:os}});Object.assign(os,{structure:k,memory:{array:Xt,offset:0,length:8},slots:{0:Wt}});Object.assign(is,{memory:{array:la}});Object.assign(cs,{slots:{0:us}});Object.assign(us,{structure:w,memory:{array:ga},const:!0});Object.assign(ms,{slots:{0:ys}});Object.assign(ys,{structure:d,memory:{array:pa},const:!0});Object.assign(bs,{slots:{0:ls,1:ps,2:fs,3:Ss}});Object.assign(ls,{structure:r,memory:{array:Oa},const:!0,slots:{0:gs}});Object.assign(gs,{structure:ct});Object.assign(ps,{structure:r,memory:{array:fa},const:!0,slots:{0:Os}});Object.assign(Os,{structure:P});Object.assign(fs,{structure:r,memory:{array:ja},const:!0,slots:{0:js}});Object.assign(js,{structure:I});Object.assign(Ss,{structure:r,memory:{array:Sa},const:!0,slots:{0:zs}});Object.assign(zs,{structure:R});const za={argStruct:mt,thunkId:2,name:"createOutput"},wa={argStruct:bt,thunkId:3,name:"createPartialOutput"};Object.assign(r,{...s,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(f,{...s,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(T,{...s,type:1,name:"[14:0]u8",length:14,byteSize:15,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(D,{...s,type:13,name:"*const [14:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[]}});Object.assign(C,{...s,type:1,name:"[11:0]u8",length:11,byteSize:12,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(M,{...s,type:13,name:"*const [11:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:C}],methods:[]}});Object.assign(p,{...s,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:p}],methods:[]}});Object.assign(h,{...s,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:h}],methods:[]}});Object.assign($,{...s,type:1,name:"[32:0]u8",length:32,byteSize:33,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(F,{...s,type:13,name:"*const [32:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[]}});Object.assign(e,{...s,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:e}],methods:[]}});Object.assign(g,{...s,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:g}],methods:[]}});Object.assign(a,{...s,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:a}],methods:[]}});Object.assign(A,{...s,type:2,name:"Struct2424028647",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"defaultValue",structure:e}],methods:[],template:ee}});Object.assign(_,{...s,type:2,name:"Struct1307934727",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e},{...t,type:7,slot:3,name:"3",structure:e}],methods:[],template:re}});Object.assign(L,{...s,type:2,name:"Struct567241631",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e},{...t,type:7,slot:3,name:"3",structure:e}],methods:[],template:ce}});Object.assign(Y,{...s,type:2,name:"Struct774457094",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e},{...t,type:7,slot:3,name:"3",structure:e}],methods:[],template:le}});Object.assign(B,{...s,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:g}],methods:[]}});Object.assign(G,{...s,type:2,name:"Struct3326991185",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:_},{...t,type:7,slot:2,name:"maxValue",structure:L},{...t,type:7,slot:3,name:"defaultValue",structure:Y}],methods:[],template:je}});Object.assign(H,{...s,type:2,name:"Struct3347425011",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:e},{...t,type:7,slot:2,name:"maxValue",structure:e},{...t,type:7,slot:3,name:"defaultValue",structure:e}],methods:[],template:Se}});Object.assign(J,{...s,type:2,name:"Struct2425327588",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:e},{...t,type:7,slot:2,name:"maxValue",structure:e},{...t,type:7,slot:3,name:"defaultValue",structure:e}],methods:[],template:he}});Object.assign(N,{...s,type:2,name:"Struct382720152",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:e},{...t,type:7,slot:2,name:"maxValue",structure:e},{...t,type:7,slot:3,name:"defaultValue",structure:e}],methods:[],template:Pe}});Object.assign(Q,{...s,type:2,name:"Struct2940758651",align:1,instance:{members:[{...t,type:7,slot:0,name:"width",structure:A},{...t,type:7,slot:1,name:"height",structure:A},{...t,type:7,slot:2,name:"c",structure:G},{...t,type:7,slot:3,name:"w",structure:H},{...t,type:7,slot:4,name:"camDistance",structure:J},{...t,type:7,slot:5,name:"rotationY",structure:N}],methods:[],template:qe}});Object.assign(W,{...s,type:2,name:"@TypeOf(.{})",align:1,isTuple:!0});Object.assign(X,{...s,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:p}],methods:[],template:ve}});Object.assign(Z,{...s,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:X}],methods:[],template:xe}});Object.assign(ct,{...s,type:2,name:"rt-julia.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:D},{...t,type:7,slot:1,name:"vendor",structure:M},{...t,type:7,slot:2,name:"version",structure:p},{...t,type:7,slot:3,name:"description",structure:F},{...t,type:7,slot:4,name:"parameters",structure:Q},{...t,type:7,slot:5,name:"inputImages",structure:W},{...t,type:7,slot:6,name:"outputImages",structure:Z}],methods:[],template:Ke}});Object.assign(P,{...s,type:2,name:"rt-julia.KernelInput(u8,rt-julia.kernel)",align:1});Object.assign(tt,{...s,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(et,{...s,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:tt}],methods:[]}});Object.assign(k,{...s,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:et}],methods:[]}});Object.assign(b,{...s,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[]}});Object.assign(O,{...s,type:11,name:"rt-julia.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:O}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:O},{...t,type:7,slot:1,name:"display-p3",structure:O}],methods:[],template:He}});Object.assign(K,{...s,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:K}],methods:[]}});Object.assign(st,{...s,type:2,name:"rt-julia.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:k},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:b},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:b},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:K}],methods:[],template:Qe},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:r},{...t,type:7,slot:1,name:"FPixel",structure:r},{...t,type:7,slot:2,name:"channels",structure:p}],methods:[],template:Xe}});Object.assign(I,{...s,type:2,name:"rt-julia.KernelOutput(u8,rt-julia.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:st}],methods:[],template:as}});Object.assign(R,{...s,type:2,name:"rt-julia.KernelParameters(rt-julia.kernel)",byteSize:48,align:16,instance:{members:[{...t,type:4,bitOffset:128,bitSize:32,byteSize:4,slot:1,name:"width",structure:g},{...t,type:4,bitOffset:160,bitSize:32,byteSize:4,slot:2,name:"height",structure:g},{...t,type:5,bitOffset:0,bitSize:128,byteSize:16,slot:0,name:"c",structure:B},{...t,type:4,bitOffset:192,bitSize:32,byteSize:4,slot:3,name:"w",structure:g},{...t,type:4,bitOffset:224,bitSize:32,byteSize:4,slot:4,name:"camDistance",structure:g},{...t,type:4,bitOffset:256,bitSize:32,byteSize:4,slot:5,name:"rotationY",structure:g}],methods:[],template:is}});Object.assign(w,{...s,type:10,name:"ErrorSet3950631824",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:w}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:w}],methods:[],template:cs}});Object.assign(ut,{...s,type:9,name:"ErrorSet3950631824!rt-julia.KernelOutput(u8,rt-julia.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:I},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:w}],methods:[]}});Object.assign(mt,{...s,type:5,name:"createOutput",byteSize:96,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:384,bitSize:32,byteSize:4,slot:3,name:"0",structure:b},{...t,type:3,isRequired:!0,bitOffset:416,bitSize:32,byteSize:4,slot:4,name:"1",structure:b},{...t,type:5,isRequired:!0,bitOffset:672,bitSize:0,byteSize:0,slot:0,name:"2",structure:P},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:384,byteSize:48,slot:1,name:"3",structure:R},{...t,type:5,isRequired:!0,bitOffset:448,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ut}],methods:[]}});Object.assign(d,{...s,type:10,name:"ErrorSet4030816959",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:d}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:d}],methods:[],template:ms}});Object.assign(yt,{...s,type:9,name:"ErrorSet4030816959!rt-julia.KernelOutput(u8,rt-julia.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:I},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:d}],methods:[]}});Object.assign(bt,{...s,type:5,name:"createPartialOutput",byteSize:96,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:384,bitSize:32,byteSize:4,slot:3,name:"0",structure:b},{...t,type:3,isRequired:!0,bitOffset:416,bitSize:32,byteSize:4,slot:4,name:"1",structure:b},{...t,type:3,isRequired:!0,bitOffset:448,bitSize:32,byteSize:4,slot:5,name:"2",structure:b},{...t,type:3,isRequired:!0,bitOffset:480,bitSize:32,byteSize:4,slot:6,name:"3",structure:b},{...t,type:5,isRequired:!0,bitOffset:736,bitSize:0,byteSize:0,slot:0,name:"4",structure:P},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:384,byteSize:48,slot:1,name:"5",structure:R},{...t,type:5,isRequired:!0,bitOffset:512,bitSize:224,byteSize:28,slot:2,name:"retval",structure:yt}],methods:[]}});Object.assign(lt,{...s,type:2,name:"rt-julia",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:r},{...t,type:7,slot:1,name:"Input",structure:r},{...t,type:7,slot:2,name:"Output",structure:r},{...t,type:7,slot:3,name:"Parameters",structure:r}],methods:[za,wa],template:bs}});const da=[r,f,T,D,C,M,p,h,$,F,e,g,a,A,_,L,Y,B,G,H,J,N,Q,W,X,Z,ct,P,tt,et,k,b,O,K,st,I,R,w,ut,mt,d,yt,bt,lt],ha=lt,Aa={runtimeSafety:!1,littleEndian:!0},nt=xs();nt.getSpecialExports();nt.recreateStructures(da,Aa);const Ua=(async()=>{const i=new URL("rt-julia-4849a40a.wasm",import.meta.url).href;return fetch(i)})();nt.loadModule(Ua);nt.linkVariables(!0);const{constructor:Va}=ha,{createPartialOutput:Pa,Input:ka,kernel:it}=Va;function Ia(i,u,c,o,n={},j={}){const S=[];for(const[y]of it.inputImages)S.push(y);const U=[];for(const[y]of it.outputImages)U.push(y);if(Array.isArray(n)){const y=n;n={};for(const[l,z]of S.entries())n[z]=y[l]}const m=new ka(void 0),v=[];let V;for(const y of S){let l=n[y];if(l||(S.length===1&&["data","width","height"].every(z=>!!n[z])?l=n:v.push(y)),m[y]=l,V){if(l.colorSpace!==V)throw new Error(`Input images must all use the same color space: ${V}`)}else V=l.colorSpace}if(v.length>0)throw new Error(`Missing input image${v.length>1?"s":""}: ${v.join(", ")}`);const ot=Pa(i,u,c,o,m,j),Zt=y=>{const l={};for(const z of U){const{data:{typedArray:E},width:te,height:ds}=y[z];let x;if(typeof ImageData=="function"){const hs=new Uint8ClampedArray(E.buffer,E.byteOffset,E.byteLength);x=new ImageData(hs,te,o,{colorSpace:V})}else x={data:E,width:te,height:ds};if(U.length===1)return x;l[z]=x}return l};return ot[Symbol.toStringTag]==="Promise"?ot.then(Zt):Zt(ot)}function Ra(){const i={};for(let[u,c]of it){if(u==="parameters"){const o={};for(const[n,j]of c){const S=o[n]={};for(let[U,m]of j)typeof m=="object"?m=m.string??m.valueOf():typeof m=="function"&&(m=qa(m.name)),S[U]=m}c=o}else typeof c=="object"&&(c=c.string??c.valueOf());i[u]=c}return i}function qa(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=async i=>{if(!Array.isArray(i.data))return;const[u,c,...o]=i.data;try{const[n,j]=await va(u,o);postMessage([u,c,n],{transfer:j})}catch(n){postMessage(["error",c,n])}};async function va(i,u){switch(i){case"getKernelInfo":return[Ra(...u)];case"createPartialImageData":const o=await Ia(...u),n=[];if("data"in o&&"width"in o&&"height"in o)n.push(o.data.buffer);else for(const j of Object.entries(o))n.push(o.data.buffer);return[o,n];default:throw new Error(`Unknown function: ${i}`)}}postMessage("ready");
