import{u as Pr,a as Ir,b as kr,c as Rr,d as qr,e as vr,f as Er,g as xr,h as Kr,i as Cr,j as Dr,k as _r,l as Mr,m as Fr,n as Tr,o as $r,p as Lr,q as Xr,r as Yr,s as Br}from"./index-34581284.js";Pr();Dr();_r();Ir();kr();Mr();Fr();Tr();$r();Rr();qr();vr();Er();Lr();Br();xr();Xr();Kr();Cr();const s={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},a={},h={},Q={},W={},Z={},tt={},w={},I={},et={},st={},e={},r={},R={},rt={},at={},z={},m={},nt={},q={},A={},C={},ot={},it={},ct={},v={},E={},ut={},k={},o={},yt={},mt={},bt={},lt={},gt={},pt={},_t={},_={},Ot={},jt={},M={},g={},U={},J={},ft={},F={},T={},D={},Mt={},Ft={},N={},Tt={},$t={},Lt={},Le={},St={},Xe={},wt={},Ye={},Be={},Xt={},Ge={},Yt={},He={},Je={},Bt={},Ne={},Gt={},Qe={},We={},Ht={},zt={},Jt={},Nt={},Qt={},Ze={},At={},ts={},Ut={},es={},ht={},ss={},dt={},rs={},as={},$={},ns={},L={},os={},X={},is={},Y={},cs={},us={},Wt={},Vt={},Zt={},te={},ee={},ys={},se={},ms={},re={},bs={},ae={},ls={},ne={},gs={},ps={},oe={},ie={},ce={},ue={},Os={},Pt={},js={},It={},fs={},Ss={},kt={},ws={},Rt={},zs={},As={},ye={},Us={},me={},hs={},ds={},qt={},vt={},Et={},xt={},Vs={},O={},j={},f={},S={},Ps={},be={},le={},ge={},Is={},pe={},ks={},Oe={},Rs={},qs={},je={},fe={},vs={},Se={},Es={},we={},xs={},Ks={},ze={},Ae={},Ue={},he={},de={},Ve={},Pe={},Ie={},ke={},Re={},qe={},ve={},Ee={},xe={},Ke={},Cs={},Ce={},Ds={},_s={},De={},Ms={},Fs={},Ts={},$s={},Ls={},Xs={},Ys={},Bs={},Gs={},Hs={},Js={},Ns={},Qs={},Ws={},Zs={},tr={},er={},_e={},sr={},rr={},ar={},nr={},or={},ir={},cr={},ur={},yr={},mr={},br={},Me={},lr={},gr={},pr={},Or={},jr={},fr={},Sr={},wr={},zr={},Ar={},Gr=new Uint8Array,Hr=new Uint8Array([0,0,0,0,0,0,0,0]),Jr=new Uint8Array,Nr=new Uint8Array([0,0,0,0,0,0,0,0]),Qr=new Uint8Array,Wr=new Uint8Array([0,0,0,0,0,64,143,64]),Zr=new Uint8Array,ta=new Uint8Array([0,0,0,0,0,64,143,64]),ea=new Uint8Array,sa=new Uint8Array([0,0,0,0,0,0,128,64]),ra=new Uint8Array,aa=new Uint8Array([0,0,0,0,0,0,128,64]),na=new Uint8Array,oa=new Uint8Array,ia=new Uint8Array,ca=new Uint8Array,ua=new Uint8Array,ya=new Uint8Array([0,0,0,0,0,0,0,0]),ma=new Uint8Array,ba=new Uint8Array([0,0,0,0,0,0,0,0]),la=new Uint8Array,ga=new Uint8Array([0,0,0,0,0,0,0,0]),pa=new Uint8Array,Oa=new Uint8Array([0,0,0,0,0,0,0,0]),ja=new Uint8Array,fa=new Uint8Array([0,0,0,0,0,0,240,63]),Sa=new Uint8Array,wa=new Uint8Array([0,0,0,0,0,0,240,63]),za=new Uint8Array,Aa=new Uint8Array([0,0,0,0,0,0,240,63]),Ua=new Uint8Array,ha=new Uint8Array([0,0,0,0,0,0,240,63]),da=new Uint8Array,Va=new Uint8Array,Pa=new Uint8Array,Ia=new Uint8Array,ka=new Uint8Array,Ra=new Uint8Array([0,0,0,0,0,0,0,0]),qa=new Uint8Array,va=new Uint8Array([0,0,0,0,0,0,0,0]),Ea=new Uint8Array,xa=new Uint8Array([154,153,153,153,153,153,233,63]),Ka=new Uint8Array,Ca=new Uint8Array([0,0,0,0,0,0,240,63]),Da=new Uint8Array,_a=new Uint8Array,Ma=new Uint8Array,Fa=new Uint8Array,Ta=new Uint8Array,$a=new Uint8Array([0,0,0,0,0,0,36,192]),La=new Uint8Array,Xa=new Uint8Array([0,0,0,0,0,0,36,192]),Ya=new Uint8Array,Ba=new Uint8Array([0,0,0,0,0,0,36,64]),Ga=new Uint8Array,Ha=new Uint8Array([0,0,0,0,0,0,36,64]),Ja=new Uint8Array,Na=new Uint8Array([0,0,0,0,0,0,20,192]),Qa=new Uint8Array,Wa=new Uint8Array([0,0,0,0,0,0,20,64]),Za=new Uint8Array,tn=new Uint8Array,en=new Uint8Array,sn=new Uint8Array,rn=new Uint8Array,an=new Uint8Array,nn=new Uint8Array,on=new Uint8Array,cn=new Uint8Array,un=new Uint8Array,yn=new Uint8Array([0,0,0,0,0,0,240,63]),mn=new Uint8Array,bn=new Uint8Array([0,0,0,0,0,0,36,64]),ln=new Uint8Array,gn=new Uint8Array([0,0,0,0,0,0,8,64]),pn=new Uint8Array,On=new Uint8Array,jn=new Uint8Array([0,0,0,0,0,0,240,63]),fn=new Uint8Array,Sn=new Uint8Array([0,0,0,0,0,0,89,64]),wn=new Uint8Array,zn=new Uint8Array([0,0,0,0,0,0,57,64]),An=new Uint8Array,Un=new Uint8Array,hn=new Uint8Array,dn=new Uint8Array,Vn=new Uint8Array,Pn=new Uint8Array,In=new Uint8Array,kn=new Uint8Array,Rn=new Uint8Array,qn=new Uint8Array,vn=new Uint8Array,En=new Uint8Array,xn=new Uint8Array,Kn=new Uint8Array,Cn=new Uint8Array,Dn=new Uint8Array,_n=new Uint8Array([4]),Mn=new Uint8Array,Fn=new Uint8Array([4,5,0,1]),Tn=new Uint8Array([99,111,109,46,111,109,45,108,97,98,115,46,102,105,108,116,101,114,115,46,110,101,119,116,111,110,82,97,112,104,115,111,110,0]),$n=new Uint8Array([49,5,0,1]),Ln=new Uint8Array([79,109,32,76,97,98,115,0]),Xn=new Uint8Array,Yn=new Uint8Array([1]),Bn=new Uint8Array([74,5,0,1]),Gn=new Uint8Array([78,101,119,116,111,110,32,82,97,112,104,115,111,110,32,70,114,97,99,116,97,108,115,0]),Hn=new Uint8Array,Jn=new Uint8Array,Nn=new Uint8Array,Qn=new Uint8Array([0]),Wn=new Uint8Array([1]),Ur=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Zn=new Uint8Array,to=new Uint8Array,eo=new Uint8Array,so=new Uint8Array,ro=new Uint8Array([4]),Fe=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ao=new Uint8Array([0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,0,0,0,0,0,0,205,204,76,63,0,0,128,63,0,0,0,68,0,0,0,68,0,0,160,192,0,0,160,64,0,0,160,192,0,0,160,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,64,0,0,200,65]),no=new Uint8Array([27,0]),oo=new Uint8Array,io=new Uint8Array,co=new Uint8Array,uo=new Uint8Array;Object.assign(Le,{slots:{0:St,1:wt}});Object.assign(St,{structure:e,memory:{array:Gr},slots:{0:Xe}});Object.assign(Xe,{structure:r,memory:{array:Hr}});Object.assign(wt,{structure:e,memory:{array:Jr},slots:{0:Ye}});Object.assign(Ye,{structure:r,memory:{array:Nr}});Object.assign(Be,{slots:{0:Xt,1:Yt}});Object.assign(Xt,{structure:e,memory:{array:Qr},slots:{0:Ge}});Object.assign(Ge,{structure:r,memory:{array:Wr}});Object.assign(Yt,{structure:e,memory:{array:Zr},slots:{0:He}});Object.assign(He,{structure:r,memory:{array:ta}});Object.assign(Je,{slots:{0:Bt,1:Gt}});Object.assign(Bt,{structure:e,memory:{array:ea},slots:{0:Ne}});Object.assign(Ne,{structure:r,memory:{array:sa}});Object.assign(Gt,{structure:e,memory:{array:ra},slots:{0:Qe}});Object.assign(Qe,{structure:r,memory:{array:aa}});Object.assign(We,{slots:{0:Ht,1:Jt,2:Nt,3:Qt}});Object.assign(Ht,{structure:a,memory:{array:na},slots:{0:zt}});Object.assign(zt,{structure:m});Object.assign(Jt,{structure:R,memory:{array:oa},slots:{0:St,1:wt}});Object.assign(Nt,{structure:rt,memory:{array:ia},slots:{0:Xt,1:Yt}});Object.assign(Qt,{structure:at,memory:{array:ca},slots:{0:Bt,1:Gt}});Object.assign(Ze,{slots:{0:At,1:Ut,2:ht,3:dt}});Object.assign(At,{structure:e,memory:{array:ua},slots:{0:ts}});Object.assign(ts,{structure:r,memory:{array:ya}});Object.assign(Ut,{structure:e,memory:{array:ma},slots:{0:es}});Object.assign(es,{structure:r,memory:{array:ba}});Object.assign(ht,{structure:e,memory:{array:la},slots:{0:ss}});Object.assign(ss,{structure:r,memory:{array:ga}});Object.assign(dt,{structure:e,memory:{array:pa},slots:{0:rs}});Object.assign(rs,{structure:r,memory:{array:Oa}});Object.assign(as,{slots:{0:$,1:L,2:X,3:Y}});Object.assign($,{structure:e,memory:{array:ja},slots:{0:ns}});Object.assign(ns,{structure:r,memory:{array:fa}});Object.assign(L,{structure:e,memory:{array:Sa},slots:{0:os}});Object.assign(os,{structure:r,memory:{array:wa}});Object.assign(X,{structure:e,memory:{array:za},slots:{0:is}});Object.assign(is,{structure:r,memory:{array:Aa}});Object.assign(Y,{structure:e,memory:{array:Ua},slots:{0:cs}});Object.assign(cs,{structure:r,memory:{array:ha}});Object.assign(us,{slots:{0:Wt,1:Zt,2:te,3:ee}});Object.assign(Wt,{structure:a,memory:{array:da},slots:{0:Vt}});Object.assign(Vt,{structure:C});Object.assign(Zt,{structure:q,memory:{array:Va},slots:{0:At,1:Ut,2:ht,3:dt}});Object.assign(te,{structure:A,memory:{array:Pa},slots:{0:$,1:L,2:X,3:Y}});Object.assign(ee,{structure:A,memory:{array:Ia},slots:{0:$,1:L,2:X,3:Y}});Object.assign(ys,{slots:{0:se,1:re,2:ae,3:ne}});Object.assign(se,{structure:e,memory:{array:ka},slots:{0:ms}});Object.assign(ms,{structure:r,memory:{array:Ra}});Object.assign(re,{structure:e,memory:{array:qa},slots:{0:bs}});Object.assign(bs,{structure:r,memory:{array:va}});Object.assign(ae,{structure:e,memory:{array:Ea},slots:{0:ls}});Object.assign(ls,{structure:r,memory:{array:xa}});Object.assign(ne,{structure:e,memory:{array:Ka},slots:{0:gs}});Object.assign(gs,{structure:r,memory:{array:Ca}});Object.assign(ps,{slots:{0:oe,1:ie,2:ce,3:ue}});Object.assign(oe,{structure:a,memory:{array:Da},slots:{0:Vt}});Object.assign(ie,{structure:q,memory:{array:_a},slots:{0:At,1:Ut,2:ht,3:dt}});Object.assign(ce,{structure:A,memory:{array:Ma},slots:{0:$,1:L,2:X,3:Y}});Object.assign(ue,{structure:it,memory:{array:Fa},slots:{0:se,1:re,2:ae,3:ne}});Object.assign(Os,{slots:{0:Pt,1:It}});Object.assign(Pt,{structure:e,memory:{array:Ta},slots:{0:js}});Object.assign(js,{structure:r,memory:{array:$a}});Object.assign(It,{structure:e,memory:{array:La},slots:{0:fs}});Object.assign(fs,{structure:r,memory:{array:Xa}});Object.assign(Ss,{slots:{0:kt,1:Rt}});Object.assign(kt,{structure:e,memory:{array:Ya},slots:{0:ws}});Object.assign(ws,{structure:r,memory:{array:Ba}});Object.assign(Rt,{structure:e,memory:{array:Ga},slots:{0:zs}});Object.assign(zs,{structure:r,memory:{array:Ha}});Object.assign(As,{slots:{0:ye,1:me}});Object.assign(ye,{structure:e,memory:{array:Ja},slots:{0:Us}});Object.assign(Us,{structure:r,memory:{array:Na}});Object.assign(me,{structure:e,memory:{array:Qa},slots:{0:hs}});Object.assign(hs,{structure:r,memory:{array:Wa}});Object.assign(ds,{slots:{0:qt,1:vt,2:Et,3:xt}});Object.assign(qt,{structure:a,memory:{array:Za},slots:{0:zt}});Object.assign(vt,{structure:v,memory:{array:tn},slots:{0:Pt,1:It}});Object.assign(Et,{structure:E,memory:{array:en},slots:{0:kt,1:Rt}});Object.assign(xt,{structure:ut,memory:{array:sn},slots:{0:ye,1:me}});Object.assign(Vs,{slots:{0:O,1:j,2:f,3:S}});Object.assign(O,{structure:a,memory:{array:rn},slots:{0:zt}});Object.assign(j,{structure:v,memory:{array:an},slots:{0:Pt,1:It}});Object.assign(f,{structure:E,memory:{array:nn},slots:{0:kt,1:Rt}});Object.assign(S,{structure:R,memory:{array:on},slots:{0:St,1:wt}});Object.assign(Ps,{slots:{0:be,1:ge,2:pe,3:Oe}});Object.assign(be,{structure:a,memory:{array:cn},slots:{0:le}});Object.assign(le,{structure:z});Object.assign(ge,{structure:e,memory:{array:un},slots:{0:Is}});Object.assign(Is,{structure:r,memory:{array:yn}});Object.assign(pe,{structure:e,memory:{array:mn},slots:{0:ks}});Object.assign(ks,{structure:r,memory:{array:bn}});Object.assign(Oe,{structure:e,memory:{array:ln},slots:{0:Rs}});Object.assign(Rs,{structure:r,memory:{array:gn}});Object.assign(qs,{slots:{0:je,1:fe,2:Se,3:we}});Object.assign(je,{structure:a,memory:{array:pn},slots:{0:le}});Object.assign(fe,{structure:e,memory:{array:On},slots:{0:vs}});Object.assign(vs,{structure:r,memory:{array:jn}});Object.assign(Se,{structure:e,memory:{array:fn},slots:{0:Es}});Object.assign(Es,{structure:r,memory:{array:Sn}});Object.assign(we,{structure:e,memory:{array:wn},slots:{0:xs}});Object.assign(xs,{structure:r,memory:{array:zn}});Object.assign(Ks,{slots:{0:ze,1:Ae,2:Ue,3:he,4:de,5:Ve,6:Pe,7:Ie,8:ke,9:Re,10:qe,11:ve,12:Ee,13:xe,14:Ke}});Object.assign(ze,{structure:nt,memory:{array:An},slots:{0:Ht,1:Jt,2:Nt,3:Qt}});Object.assign(Ae,{structure:ot,memory:{array:Un},slots:{0:Wt,1:Zt,2:te,3:ee}});Object.assign(Ue,{structure:ct,memory:{array:hn},slots:{0:oe,1:ie,2:ce,3:ue}});Object.assign(he,{structure:k,memory:{array:dn},slots:{0:qt,1:vt,2:Et,3:xt}});Object.assign(de,{structure:k,memory:{array:Vn},slots:{0:qt,1:vt,2:Et,3:xt}});Object.assign(Ve,{structure:o,memory:{array:Pn},slots:{0:O,1:j,2:f,3:S}});Object.assign(Pe,{structure:o,memory:{array:In},slots:{0:O,1:j,2:f,3:S}});Object.assign(Ie,{structure:o,memory:{array:kn},slots:{0:O,1:j,2:f,3:S}});Object.assign(ke,{structure:o,memory:{array:Rn},slots:{0:O,1:j,2:f,3:S}});Object.assign(Re,{structure:o,memory:{array:qn},slots:{0:O,1:j,2:f,3:S}});Object.assign(qe,{structure:o,memory:{array:vn},slots:{0:O,1:j,2:f,3:S}});Object.assign(ve,{structure:o,memory:{array:En},slots:{0:O,1:j,2:f,3:S}});Object.assign(Ee,{structure:o,memory:{array:xn},slots:{0:O,1:j,2:f,3:S}});Object.assign(xe,{structure:yt,memory:{array:Kn},slots:{0:be,1:ge,2:pe,3:Oe}});Object.assign(Ke,{structure:mt,memory:{array:Cn},slots:{0:je,1:fe,2:Se,3:we}});Object.assign(Cs,{slots:{0:Ce}});Object.assign(Ce,{structure:w,memory:{array:Dn},slots:{0:Ds}});Object.assign(Ds,{structure:I,memory:{array:_n}});Object.assign(_s,{slots:{0:De}});Object.assign(De,{structure:gt,memory:{array:Mn},slots:{0:Ce}});Object.assign(Ms,{slots:{0:Fs,1:$s,2:Xs,3:Bs,4:Hs,5:Js,6:Ns}});Object.assign(Fs,{structure:W,memory:{array:Fn},slots:{0:Ts}});Object.assign(Ts,{structure:Q,memory:{array:Tn},reloc:16778500,const:!0});Object.assign($s,{structure:tt,memory:{array:$n},slots:{0:Ls}});Object.assign(Ls,{structure:Z,memory:{array:Ln},reloc:16778545,const:!0});Object.assign(Xs,{structure:w,memory:{array:Xn},slots:{0:Ys}});Object.assign(Ys,{structure:I,memory:{array:Yn}});Object.assign(Bs,{structure:st,memory:{array:Bn},slots:{0:Gs}});Object.assign(Gs,{structure:et,memory:{array:Gn},reloc:16778570,const:!0});Object.assign(Hs,{structure:bt,memory:{array:Hn},slots:{0:ze,1:Ae,2:Ue,3:he,4:de,5:Ve,6:Pe,7:Ie,8:ke,9:Re,10:qe,11:ve,12:Ee,13:xe,14:Ke}});Object.assign(Js,{structure:lt,memory:{array:Jn}});Object.assign(Ns,{structure:pt,memory:{array:Nn},slots:{0:De}});Object.assign(Qs,{slots:{0:Ws,1:Zs}});Object.assign(Ws,{structure:U,memory:{array:Qn}});Object.assign(Zs,{structure:U,memory:{array:Wn}});Object.assign(tr,{memory:{array:Ur},slots:{0:er}});Object.assign(er,{structure:M,memory:{array:Ur,offset:0,length:8},slots:{0:_e}});Object.assign(_e,{structure:jt,memory:{array:Zn},reloc:0});Object.assign(sr,{slots:{0:rr,1:nr,2:or}});Object.assign(rr,{structure:a,memory:{array:to},slots:{0:ar}});Object.assign(ar,{structure:Ot});Object.assign(nr,{structure:a,memory:{array:eo},slots:{0:Vt}});Object.assign(or,{structure:w,memory:{array:so},slots:{0:ir}});Object.assign(ir,{structure:I,memory:{array:ro}});Object.assign(cr,{memory:{array:Fe},slots:{0:ur}});Object.assign(ur,{structure:ft,memory:{array:Fe},slots:{0:yr}});Object.assign(yr,{structure:M,memory:{array:Fe,offset:0,length:8},slots:{0:_e}});Object.assign(mr,{memory:{array:ao}});Object.assign(br,{slots:{0:Me}});Object.assign(Me,{structure:D,memory:{array:no}});Object.assign(lr,{slots:{0:Me}});Object.assign(gr,{slots:{0:pr,1:jr,2:Sr,3:zr}});Object.assign(pr,{structure:a,memory:{array:oo},slots:{0:Or}});Object.assign(Or,{structure:_t});Object.assign(jr,{structure:a,memory:{array:io},slots:{0:fr}});Object.assign(fr,{structure:_});Object.assign(Sr,{structure:a,memory:{array:co},slots:{0:wr}});Object.assign(wr,{structure:F});Object.assign(zr,{structure:a,memory:{array:uo},slots:{0:Ar}});Object.assign(Ar,{structure:T});const yo={argStruct:Ft,thunkId:2,name:"createOutput"},mo={argStruct:$t,thunkId:3,name:"createPartialOutput"};Object.assign(a,{...s,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:a}],methods:[]}});Object.assign(h,{...s,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:h}],methods:[]}});Object.assign(Q,{...s,type:1,name:"[33:0]u8",length:33,byteSize:34,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:h}],methods:[]}});Object.assign(W,{...s,type:13,name:"*const [33:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[]}});Object.assign(Z,{...s,type:1,name:"[7:0]u8",length:7,byteSize:8,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:h}],methods:[]}});Object.assign(tt,{...s,type:13,name:"*const [7:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[]}});Object.assign(w,{...s,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:w}],methods:[]}});Object.assign(I,{...s,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:I}],methods:[]}});Object.assign(et,{...s,type:1,name:"[23:0]u8",length:23,byteSize:24,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:h}],methods:[]}});Object.assign(st,{...s,type:13,name:"*const [23:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:et}],methods:[]}});Object.assign(e,{...s,name:"comptime_float",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:e}],methods:[]}});Object.assign(r,{...s,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[]}});Object.assign(R,{...s,type:2,name:"Struct738220547",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:Le}});Object.assign(rt,{...s,type:2,name:"Struct830517164",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:Be}});Object.assign(at,{...s,type:2,name:"Struct2210712367",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:Je}});Object.assign(z,{...s,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:z}],methods:[]}});Object.assign(m,{...s,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:z}],methods:[]}});Object.assign(nt,{...s,type:2,name:"Struct3779807375",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"minValue",structure:R},{...t,type:9,slot:2,name:"maxValue",structure:rt},{...t,type:9,slot:3,name:"defaultValue",structure:at}],methods:[],template:We}});Object.assign(q,{...s,type:2,name:"Struct142040656",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e},{...t,type:9,slot:2,name:"2",structure:e},{...t,type:9,slot:3,name:"3",structure:e}],methods:[],template:Ze}});Object.assign(A,{...s,type:2,name:"Struct2121898850",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e},{...t,type:9,slot:2,name:"2",structure:e},{...t,type:9,slot:3,name:"3",structure:e}],methods:[],template:as}});Object.assign(C,{...s,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:z}],methods:[]}});Object.assign(ot,{...s,type:2,name:"Struct1722451063",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"minValue",structure:q},{...t,type:9,slot:2,name:"maxValue",structure:A},{...t,type:9,slot:3,name:"defaultValue",structure:A}],methods:[],template:us}});Object.assign(it,{...s,type:2,name:"Struct2713510617",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e},{...t,type:9,slot:2,name:"2",structure:e},{...t,type:9,slot:3,name:"3",structure:e}],methods:[],template:ys}});Object.assign(ct,{...s,type:2,name:"Struct1091123548",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"minValue",structure:q},{...t,type:9,slot:2,name:"maxValue",structure:A},{...t,type:9,slot:3,name:"defaultValue",structure:it}],methods:[],template:ps}});Object.assign(v,{...s,type:2,name:"Struct2010658752",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:Os}});Object.assign(E,{...s,type:2,name:"Struct1464340365",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:Ss}});Object.assign(ut,{...s,type:2,name:"Struct1278149096",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:As}});Object.assign(k,{...s,type:2,name:"Struct209288354",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"minValue",structure:v},{...t,type:9,slot:2,name:"maxValue",structure:E},{...t,type:9,slot:3,name:"defaultValue",structure:ut}],methods:[],template:ds}});Object.assign(o,{...s,type:2,name:"Struct4270045594",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"minValue",structure:v},{...t,type:9,slot:2,name:"maxValue",structure:E},{...t,type:9,slot:3,name:"defaultValue",structure:R}],methods:[],template:Vs}});Object.assign(yt,{...s,type:2,name:"Struct3869885801",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"minValue",structure:e},{...t,type:9,slot:2,name:"maxValue",structure:e},{...t,type:9,slot:3,name:"defaultValue",structure:e}],methods:[],template:Ps}});Object.assign(mt,{...s,type:2,name:"Struct3809048985",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"minValue",structure:e},{...t,type:9,slot:2,name:"maxValue",structure:e},{...t,type:9,slot:3,name:"defaultValue",structure:e}],methods:[],template:qs}});Object.assign(bt,{...s,type:2,name:"Struct2262504290",align:1,instance:{members:[{...t,type:9,slot:0,name:"size",structure:nt},{...t,type:9,slot:1,name:"colorStart",structure:ot},{...t,type:9,slot:2,name:"colorEnd",structure:ct},{...t,type:9,slot:3,name:"rangeX",structure:k},{...t,type:9,slot:4,name:"rangeY",structure:k},{...t,type:9,slot:5,name:"c0",structure:o},{...t,type:9,slot:6,name:"c1",structure:o},{...t,type:9,slot:7,name:"c2",structure:o},{...t,type:9,slot:8,name:"c3",structure:o},{...t,type:9,slot:9,name:"c4",structure:o},{...t,type:9,slot:10,name:"c5",structure:o},{...t,type:9,slot:11,name:"c6",structure:o},{...t,type:9,slot:12,name:"c7",structure:o},{...t,type:9,slot:13,name:"toleranceInversePower",structure:yt},{...t,type:9,slot:14,name:"iterations",structure:mt}],methods:[],template:Ks}});Object.assign(lt,{...s,type:2,name:"Struct2871943947",align:1});Object.assign(gt,{...s,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:w}],methods:[],template:Cs}});Object.assign(pt,{...s,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:9,slot:0,name:"dst",structure:gt}],methods:[],template:_s}});Object.assign(_t,{...s,type:2,name:"newton-raphson.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:W},{...t,type:9,slot:1,name:"vendor",structure:tt},{...t,type:9,slot:2,name:"version",structure:w},{...t,type:9,slot:3,name:"description",structure:st},{...t,type:9,slot:4,name:"parameters",structure:bt},{...t,type:9,slot:5,name:"inputImages",structure:lt},{...t,type:9,slot:6,name:"outputImages",structure:pt}],methods:[],template:Ms}});Object.assign(_,{...s,type:2,name:"newton-raphson.KernelInput(u8,newton-raphson.kernel)",align:1});Object.assign(Ot,{...s,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:h}],methods:[]}});Object.assign(jt,{...s,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:Ot}],methods:[]}});Object.assign(M,{...s,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:jt}],methods:[]}});Object.assign(g,{...s,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:g}],methods:[]}});Object.assign(U,{...s,type:11,name:"newton-raphson.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:U},{...t,type:9,slot:1,name:"display-p3",structure:U}],methods:[],template:Qs}});Object.assign(J,{...s,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:J}],methods:[]}});Object.assign(ft,{...s,type:2,name:"newton-raphson.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:M},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:g},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:g},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:U},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:J}],methods:[],template:tr},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:a},{...t,type:9,slot:1,name:"FPixel",structure:a},{...t,type:9,slot:2,name:"channels",structure:w}],methods:[],template:sr}});Object.assign(F,{...s,type:2,name:"newton-raphson.KernelOutput(u8,newton-raphson.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:ft}],methods:[],template:cr}});Object.assign(T,{...s,type:2,name:"newton-raphson.KernelParameters(newton-raphson.kernel)",byteSize:128,align:16,instance:{members:[{...t,type:7,bitOffset:256,bitSize:64,byteSize:8,slot:0,name:"size",structure:m},{...t,type:7,bitOffset:0,bitSize:128,byteSize:16,slot:1,name:"colorStart",structure:C},{...t,type:7,bitOffset:128,bitSize:128,byteSize:16,slot:2,name:"colorEnd",structure:C},{...t,type:7,bitOffset:320,bitSize:64,byteSize:8,slot:3,name:"rangeX",structure:m},{...t,type:7,bitOffset:384,bitSize:64,byteSize:8,slot:4,name:"rangeY",structure:m},{...t,type:7,bitOffset:448,bitSize:64,byteSize:8,slot:5,name:"c0",structure:m},{...t,type:7,bitOffset:512,bitSize:64,byteSize:8,slot:6,name:"c1",structure:m},{...t,type:7,bitOffset:576,bitSize:64,byteSize:8,slot:7,name:"c2",structure:m},{...t,type:7,bitOffset:640,bitSize:64,byteSize:8,slot:8,name:"c3",structure:m},{...t,type:7,bitOffset:704,bitSize:64,byteSize:8,slot:9,name:"c4",structure:m},{...t,type:7,bitOffset:768,bitSize:64,byteSize:8,slot:10,name:"c5",structure:m},{...t,type:7,bitOffset:832,bitSize:64,byteSize:8,slot:11,name:"c6",structure:m},{...t,type:7,bitOffset:896,bitSize:64,byteSize:8,slot:12,name:"c7",structure:m},{...t,type:4,bitOffset:960,bitSize:32,byteSize:4,slot:13,name:"toleranceInversePower",structure:z},{...t,type:4,bitOffset:992,bitSize:32,byteSize:4,slot:14,name:"iterations",structure:z}],methods:[],template:mr}});Object.assign(D,{...s,type:10,name:"@typeInfo(@typeInfo(@TypeOf(newton-raphson.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:D}],methods:[],template:br}});Object.assign(Mt,{...s,type:9,name:"ErrorSet3708995262!newton-raphson.KernelOutput(u8,newton-raphson.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:F},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:D}],methods:[]}});Object.assign(Ft,{...s,type:5,name:"createOutput",byteSize:176,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:1024,bitSize:32,byteSize:4,slot:3,name:"0",structure:g},{...t,type:3,isRequired:!0,bitOffset:1056,bitSize:32,byteSize:4,slot:4,name:"1",structure:g},{...t,type:7,isRequired:!0,bitOffset:1312,bitSize:0,byteSize:0,slot:0,name:"2",structure:_},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:1024,byteSize:128,slot:1,name:"3",structure:T},{...t,type:7,isRequired:!0,bitOffset:1088,bitSize:224,byteSize:28,slot:2,name:"retval",structure:Mt}],methods:[]}});Object.assign(N,{...s,type:10,name:"@typeInfo(@typeInfo(@TypeOf(newton-raphson.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:N}],methods:[],template:lr}});Object.assign(Tt,{...s,type:9,name:"ErrorSet3060176423!newton-raphson.KernelOutput(u8,newton-raphson.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:F},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:N}],methods:[]}});Object.assign($t,{...s,type:5,name:"createPartialOutput",byteSize:176,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:1024,bitSize:32,byteSize:4,slot:3,name:"0",structure:g},{...t,type:3,isRequired:!0,bitOffset:1056,bitSize:32,byteSize:4,slot:4,name:"1",structure:g},{...t,type:3,isRequired:!0,bitOffset:1088,bitSize:32,byteSize:4,slot:5,name:"2",structure:g},{...t,type:3,isRequired:!0,bitOffset:1120,bitSize:32,byteSize:4,slot:6,name:"3",structure:g},{...t,type:7,isRequired:!0,bitOffset:1376,bitSize:0,byteSize:0,slot:0,name:"4",structure:_},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:1024,byteSize:128,slot:1,name:"5",structure:T},{...t,type:7,isRequired:!0,bitOffset:1152,bitSize:224,byteSize:28,slot:2,name:"retval",structure:Tt}],methods:[]}});Object.assign(Lt,{...s,type:2,name:"newton-raphson",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:a},{...t,type:9,slot:1,name:"Input",structure:a},{...t,type:9,slot:2,name:"Output",structure:a},{...t,type:9,slot:3,name:"Parameters",structure:a}],methods:[yo,mo],template:gr}});const bo=[a,h,Q,W,Z,tt,w,I,et,st,e,r,R,rt,at,z,m,nt,q,A,C,ot,it,ct,v,E,ut,k,o,yt,mt,bt,lt,gt,pt,_t,_,Ot,jt,M,g,U,J,ft,F,T,D,Mt,Ft,N,Tt,$t,Lt],lo=Lt,go={runtimeSafety:!1,littleEndian:!0},Kt=Yr();Kt.getControlObject();Kt.recreateStructures(bo,go);const po=(async()=>{const u=new URL("newton-raphson-15a65562.wasm",import.meta.url).href;return fetch(u)})();Kt.loadModule(po);Kt.linkVariables(!0);const{constructor:Oo}=lo,{createPartialOutput:jo,Input:fo,kernel:Dt}=Oo;function So(u,y,i,n,c={},d={}){const V=[];for(const[l]of Dt.inputImages)V.push(l);const x=[];for(const[l]of Dt.outputImages)x.push(l);if(Array.isArray(c)){const l=c;c={};for(const[p,P]of V.entries())c[P]=l[p]}const b=new fo(void 0),B=[];let K;for(const l of V){let p=c[l];if(p||(V.length===1&&["data","width","height"].every(P=>!!c[P])?p=c:B.push(l)),b[l]=p,K){if(p.colorSpace!==K)throw new Error(`Input images must all use the same color space: ${K}`)}else K=p.colorSpace}if(B.length>0)throw new Error(`Missing input image${B.length>1?"s":""}: ${B.join(", ")}`);const Ct=jo(u,y,i,n,b,d),Te=l=>{const p={};for(const P of x){const{data:{typedArray:G},width:$e,height:dr}=l[P];let H;if(typeof ImageData=="function"){const Vr=new Uint8ClampedArray(G.buffer,G.byteOffset,G.byteLength);H=new ImageData(Vr,$e,n,{colorSpace:K})}else H={data:G,width:$e,height:dr};if(x.length===1)return H;p[P]=H}return p};return Ct[Symbol.toStringTag]==="Promise"?Ct.then(Te):Te(Ct)}function wo(){const u={};for(let[y,i]of Dt){if(y==="parameters"){const n={};for(const[c,d]of i){const V=n[c]={};for(let[x,b]of d)typeof b=="object"?"string"in b?b=b.string:b=hr(b):typeof b=="function"&&(b=zo(b.name)),V[x]=b}i=n}else typeof i=="object"&&("string"in i?i=i.string:i=i.valueOf());u[y]=i}return u}function hr(u){const y=[];for(let[i,n]of u)typeof n=="object"&&(n=hr(n)),y[i]=n;return y}function zo(u){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[u]}onmessage=u=>{const[y,i,...n]=u.data;Ao(y,n).then(([c,d])=>{postMessage([y,i,c],{transfer:d})}).catch(c=>{postMessage(["error",i,c])})};async function Ao(u,y){switch(u){case"getKernelInfo":return[wo(...y)];case"createPartialImageData":const n=await So(...y),c=[];if("data"in n&&"width"in n&&"height"in n)c.push(n.data.buffer);else for(const d of Object.entries(n))c.push(n.data.buffer);return[n,c];default:throw new Error(`Unknown function: ${u}`)}}
