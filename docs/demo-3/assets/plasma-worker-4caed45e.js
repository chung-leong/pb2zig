import{u as jr,a as fr,b as Sr,c as zr,d as wr,e as Ar,f as dr,g as Ur,h as hr,i as Vr,j as Pr,k as kr,l as Ir,m as Rr,n as qr,o as Tr,p as vr,q as xr}from"./index-67c7daa1.js";jr();kr();Ir();fr();Sr();Rr();qr();Tr();vr();zr();wr();Ar();dr();xr();Ur();hr();Vr();const s={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},a={},S={},_={},$={},F={},L={},p={},h={},B={},G={},e={},r={},g={},V={},H={},j={},f={},J={},N={},Q={},W={},X={},Y={},Z={},tt={},et={},st={},rt={},at={},nt={},ot={},ct={},ut={},it={},mt={},yt={},zt={},q={},lt={},bt={},T={},l={},O={},D={},wt={},gt={},v={},x={},d={},At={},dt={},U={},Ut={},ht={},Vt={},Re={},P={},qe={},k={},Te={},ve={},pt={},xe={},Ot={},Ee={},Ke={},Pt={},Ce={},kt={},Me={},De={},It={},E={},Rt={},qt={},Tt={},_e={},vt={},$e={},xt={},Fe={},Le={},Et={},Kt={},Ct={},Mt={},Be={},Dt={},Ge={},_t={},He={},$t={},Je={},Ft={},Ne={},Qe={},Lt={},We={},Bt={},Xe={},Ye={},Gt={},Ze={},Ht={},ts={},es={},Jt={},Nt={},Qt={},Wt={},ss={},Xt={},rs={},Yt={},as={},Zt={},ns={},os={},te={},cs={},ee={},us={},se={},is={},ms={},re={},ys={},ae={},ls={},ne={},bs={},gs={},oe={},ps={},ce={},ue={},ie={},Os={},me={},js={},ye={},fs={},Ss={},le={},zs={},be={},ws={},As={},ge={},pe={},Oe={},je={},ds={},fe={},Se={},ze={},we={},Ae={},de={},Us={},Ue={},hs={},Vs={},he={},Ps={},ks={},Is={},Rs={},qs={},Ts={},vs={},xs={},Es={},Ks={},Cs={},Ms={},Ds={},_s={},$s={},Fs={},Ls={},Ve={},Bs={},Gs={},Hs={},Js={},Ns={},Qs={},Ws={},Xs={},Ys={},Zs={},tr={},er={},sr={},rr={},ar={},nr={},or={},cr={},ur={},ir={},mr={},yr={},lr={},br={},Er=new Uint8Array,Kr=new Uint8Array([0,0,0,0,0,0,0,0]),Cr=new Uint8Array,Mr=new Uint8Array([0,0,0,0,0,0,0,0]),Dr=new Uint8Array,_r=new Uint8Array([0,0,0,0,0,0,144,64]),$r=new Uint8Array,Fr=new Uint8Array([0,0,0,0,0,0,144,64]),Lr=new Uint8Array,Br=new Uint8Array([0,0,0,0,0,0,144,64]),Gr=new Uint8Array,Hr=new Uint8Array([0,0,0,0,0,0,128,64]),Jr=new Uint8Array,Nr=new Uint8Array,Qr=new Uint8Array,Wr=new Uint8Array,Xr=new Uint8Array,Yr=new Uint8Array([0,0,0,0,0,0,128,64]),Zr=new Uint8Array,ta=new Uint8Array([0,0,0,0,0,0,112,64]),ea=new Uint8Array,sa=new Uint8Array,ra=new Uint8Array,aa=new Uint8Array,na=new Uint8Array,oa=new Uint8Array,ca=new Uint8Array([0,0,0,0,0,0,0,0]),ua=new Uint8Array,ia=new Uint8Array([154,153,153,153,153,153,185,63]),ma=new Uint8Array,ya=new Uint8Array([0,0,0,0,0,0,0,0]),la=new Uint8Array,ba=new Uint8Array([0,0,0,0,0,0,89,192]),ga=new Uint8Array,pa=new Uint8Array([0,0,0,0,0,0,89,192]),Oa=new Uint8Array,ja=new Uint8Array([0,0,0,0,0,0,89,64]),fa=new Uint8Array,Sa=new Uint8Array([0,0,0,0,0,0,89,64]),za=new Uint8Array,wa=new Uint8Array,Aa=new Uint8Array,da=new Uint8Array,Ua=new Uint8Array,ha=new Uint8Array([0,0,0,0,0,0,20,192]),Va=new Uint8Array,Pa=new Uint8Array([0,0,0,0,0,0,20,192]),ka=new Uint8Array,Ia=new Uint8Array([0,0,0,0,0,0,20,192]),Ra=new Uint8Array,qa=new Uint8Array([0,0,0,0,0,0,20,64]),Ta=new Uint8Array,va=new Uint8Array([0,0,0,0,0,0,20,64]),xa=new Uint8Array,Ea=new Uint8Array([0,0,0,0,0,0,20,64]),Ka=new Uint8Array,Ca=new Uint8Array([0,0,0,0,0,0,0,0]),Ma=new Uint8Array,Da=new Uint8Array([0,0,0,0,0,0,0,0]),_a=new Uint8Array,$a=new Uint8Array([0,0,0,0,0,0,0,0]),Fa=new Uint8Array,La=new Uint8Array,Ba=new Uint8Array,Ga=new Uint8Array,Ha=new Uint8Array,Ja=new Uint8Array([154,153,153,153,153,153,185,63]),Na=new Uint8Array,Qa=new Uint8Array([154,153,153,153,153,153,185,63]),Wa=new Uint8Array,Xa=new Uint8Array([154,153,153,153,153,153,169,63]),Ya=new Uint8Array,Za=new Uint8Array([154,153,153,153,153,153,169,63]),tn=new Uint8Array,en=new Uint8Array,sn=new Uint8Array,rn=new Uint8Array,an=new Uint8Array,nn=new Uint8Array,on=new Uint8Array,cn=new Uint8Array,un=new Uint8Array,mn=new Uint8Array,yn=new Uint8Array,ln=new Uint8Array([4]),bn=new Uint8Array,gn=new Uint8Array([12,16,0,1]),pn=new Uint8Array([99,111,109,46,109,114,100,111,111,98,46,115,104,97,100,101,114,115,0]),On=new Uint8Array([42,16,0,1]),jn=new Uint8Array([77,114,46,100,111,111,98,0]),fn=new Uint8Array,Sn=new Uint8Array([1]),zn=new Uint8Array([67,16,0,1]),wn=new Uint8Array([71,111,111,100,32,111,108,100,32,112,108,97,115,109,97,32,101,102,102,101,99,116,0]),An=new Uint8Array,dn=new Uint8Array,Un=new Uint8Array,hn=new Uint8Array([0]),Vn=new Uint8Array([1]),gr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Pn=new Uint8Array,kn=new Uint8Array,In=new Uint8Array,Rn=new Uint8Array,qn=new Uint8Array([4]),Pe=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Tn=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,68,0,0,0,68,0,0,0,68,0,0,128,67,0,0,0,0,0,0,0,0,205,204,76,61,205,204,76,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),vn=new Uint8Array([27,0]),xn=new Uint8Array([27,0]),En=new Uint8Array,Kn=new Uint8Array,Cn=new Uint8Array,Mn=new Uint8Array;Object.assign(Re,{slots:{0:P,1:k}});Object.assign(P,{structure:e,memory:{array:Er},const:!0,slots:{0:qe}});Object.assign(qe,{structure:r,memory:{array:Kr},const:!0});Object.assign(k,{structure:e,memory:{array:Cr},const:!0,slots:{0:Te}});Object.assign(Te,{structure:r,memory:{array:Mr},const:!0});Object.assign(ve,{slots:{0:pt,1:Ot}});Object.assign(pt,{structure:e,memory:{array:Dr},const:!0,slots:{0:xe}});Object.assign(xe,{structure:r,memory:{array:_r},const:!0});Object.assign(Ot,{structure:e,memory:{array:$r},const:!0,slots:{0:Ee}});Object.assign(Ee,{structure:r,memory:{array:Fr},const:!0});Object.assign(Ke,{slots:{0:Pt,1:kt}});Object.assign(Pt,{structure:e,memory:{array:Lr},const:!0,slots:{0:Ce}});Object.assign(Ce,{structure:r,memory:{array:Br},const:!0});Object.assign(kt,{structure:e,memory:{array:Gr},const:!0,slots:{0:Me}});Object.assign(Me,{structure:r,memory:{array:Hr},const:!0});Object.assign(De,{slots:{0:It,1:Rt,2:qt,3:Tt}});Object.assign(It,{structure:a,memory:{array:Jr},const:!0,slots:{0:E}});Object.assign(E,{structure:f});Object.assign(Rt,{structure:g,memory:{array:Nr},const:!0,slots:{0:P,1:k}});Object.assign(qt,{structure:V,memory:{array:Qr},const:!0,slots:{0:pt,1:Ot}});Object.assign(Tt,{structure:H,memory:{array:Wr},const:!0,slots:{0:Pt,1:kt}});Object.assign(_e,{slots:{0:vt,1:xt}});Object.assign(vt,{structure:e,memory:{array:Xr},const:!0,slots:{0:$e}});Object.assign($e,{structure:r,memory:{array:Yr},const:!0});Object.assign(xt,{structure:e,memory:{array:Zr},const:!0,slots:{0:Fe}});Object.assign(Fe,{structure:r,memory:{array:ta},const:!0});Object.assign(Le,{slots:{0:Et,1:Kt,2:Ct,3:Mt}});Object.assign(Et,{structure:a,memory:{array:ea},const:!0,slots:{0:E}});Object.assign(Kt,{structure:g,memory:{array:sa},const:!0,slots:{0:P,1:k}});Object.assign(Ct,{structure:V,memory:{array:ra},const:!0,slots:{0:pt,1:Ot}});Object.assign(Mt,{structure:N,memory:{array:aa},const:!0,slots:{0:vt,1:xt}});Object.assign(Be,{slots:{0:Dt,1:_t,2:$t,3:Ft}});Object.assign(Dt,{structure:a,memory:{array:na},const:!0,slots:{0:Ge}});Object.assign(Ge,{structure:j});Object.assign(_t,{structure:e,memory:{array:oa},const:!0,slots:{0:He}});Object.assign(He,{structure:r,memory:{array:ca},const:!0});Object.assign($t,{structure:e,memory:{array:ua},const:!0,slots:{0:Je}});Object.assign(Je,{structure:r,memory:{array:ia},const:!0});Object.assign(Ft,{structure:e,memory:{array:ma},const:!0,slots:{0:Ne}});Object.assign(Ne,{structure:r,memory:{array:ya},const:!0});Object.assign(Qe,{slots:{0:Lt,1:Bt}});Object.assign(Lt,{structure:e,memory:{array:la},const:!0,slots:{0:We}});Object.assign(We,{structure:r,memory:{array:ba},const:!0});Object.assign(Bt,{structure:e,memory:{array:ga},const:!0,slots:{0:Xe}});Object.assign(Xe,{structure:r,memory:{array:pa},const:!0});Object.assign(Ye,{slots:{0:Gt,1:Ht}});Object.assign(Gt,{structure:e,memory:{array:Oa},const:!0,slots:{0:Ze}});Object.assign(Ze,{structure:r,memory:{array:ja},const:!0});Object.assign(Ht,{structure:e,memory:{array:fa},const:!0,slots:{0:ts}});Object.assign(ts,{structure:r,memory:{array:Sa},const:!0});Object.assign(es,{slots:{0:Jt,1:Nt,2:Qt,3:Wt}});Object.assign(Jt,{structure:a,memory:{array:za},const:!0,slots:{0:E}});Object.assign(Nt,{structure:X,memory:{array:wa},const:!0,slots:{0:Lt,1:Bt}});Object.assign(Qt,{structure:Y,memory:{array:Aa},const:!0,slots:{0:Gt,1:Ht}});Object.assign(Wt,{structure:g,memory:{array:da},const:!0,slots:{0:P,1:k}});Object.assign(ss,{slots:{0:Xt,1:Yt,2:Zt}});Object.assign(Xt,{structure:e,memory:{array:Ua},const:!0,slots:{0:rs}});Object.assign(rs,{structure:r,memory:{array:ha},const:!0});Object.assign(Yt,{structure:e,memory:{array:Va},const:!0,slots:{0:as}});Object.assign(as,{structure:r,memory:{array:Pa},const:!0});Object.assign(Zt,{structure:e,memory:{array:ka},const:!0,slots:{0:ns}});Object.assign(ns,{structure:r,memory:{array:Ia},const:!0});Object.assign(os,{slots:{0:te,1:ee,2:se}});Object.assign(te,{structure:e,memory:{array:Ra},const:!0,slots:{0:cs}});Object.assign(cs,{structure:r,memory:{array:qa},const:!0});Object.assign(ee,{structure:e,memory:{array:Ta},const:!0,slots:{0:us}});Object.assign(us,{structure:r,memory:{array:va},const:!0});Object.assign(se,{structure:e,memory:{array:xa},const:!0,slots:{0:is}});Object.assign(is,{structure:r,memory:{array:Ea},const:!0});Object.assign(ms,{slots:{0:re,1:ae,2:ne}});Object.assign(re,{structure:e,memory:{array:Ka},const:!0,slots:{0:ys}});Object.assign(ys,{structure:r,memory:{array:Ca},const:!0});Object.assign(ae,{structure:e,memory:{array:Ma},const:!0,slots:{0:ls}});Object.assign(ls,{structure:r,memory:{array:Da},const:!0});Object.assign(ne,{structure:e,memory:{array:_a},const:!0,slots:{0:bs}});Object.assign(bs,{structure:r,memory:{array:$a},const:!0});Object.assign(gs,{slots:{0:oe,1:ce,2:ue,3:ie}});Object.assign(oe,{structure:a,memory:{array:Fa},const:!0,slots:{0:ps}});Object.assign(ps,{structure:rt});Object.assign(ce,{structure:tt,memory:{array:La},const:!0,slots:{0:Xt,1:Yt,2:Zt}});Object.assign(ue,{structure:et,memory:{array:Ba},const:!0,slots:{0:te,1:ee,2:se}});Object.assign(ie,{structure:st,memory:{array:Ga},const:!0,slots:{0:re,1:ae,2:ne}});Object.assign(Os,{slots:{0:me,1:ye}});Object.assign(me,{structure:e,memory:{array:Ha},const:!0,slots:{0:js}});Object.assign(js,{structure:r,memory:{array:Ja},const:!0});Object.assign(ye,{structure:e,memory:{array:Na},const:!0,slots:{0:fs}});Object.assign(fs,{structure:r,memory:{array:Qa},const:!0});Object.assign(Ss,{slots:{0:le,1:be}});Object.assign(le,{structure:e,memory:{array:Wa},const:!0,slots:{0:zs}});Object.assign(zs,{structure:r,memory:{array:Xa},const:!0});Object.assign(be,{structure:e,memory:{array:Ya},const:!0,slots:{0:ws}});Object.assign(ws,{structure:r,memory:{array:Za},const:!0});Object.assign(As,{slots:{0:ge,1:pe,2:Oe,3:je}});Object.assign(ge,{structure:a,memory:{array:tn},const:!0,slots:{0:E}});Object.assign(pe,{structure:g,memory:{array:en},const:!0,slots:{0:P,1:k}});Object.assign(Oe,{structure:nt,memory:{array:sn},const:!0,slots:{0:me,1:ye}});Object.assign(je,{structure:ot,memory:{array:rn},const:!0,slots:{0:le,1:be}});Object.assign(ds,{slots:{0:fe,1:Se,2:ze,3:we,4:Ae,5:de}});Object.assign(fe,{structure:J,memory:{array:an},const:!0,slots:{0:It,1:Rt,2:qt,3:Tt}});Object.assign(Se,{structure:Q,memory:{array:nn},const:!0,slots:{0:Et,1:Kt,2:Ct,3:Mt}});Object.assign(ze,{structure:W,memory:{array:on},const:!0,slots:{0:Dt,1:_t,2:$t,3:Ft}});Object.assign(we,{structure:Z,memory:{array:cn},const:!0,slots:{0:Jt,1:Nt,2:Qt,3:Wt}});Object.assign(Ae,{structure:at,memory:{array:un},const:!0,slots:{0:oe,1:ce,2:ue,3:ie}});Object.assign(de,{structure:ct,memory:{array:mn},const:!0,slots:{0:ge,1:pe,2:Oe,3:je}});Object.assign(Us,{slots:{0:Ue}});Object.assign(Ue,{structure:p,memory:{array:yn},const:!0,slots:{0:hs}});Object.assign(hs,{structure:h,memory:{array:ln},const:!0});Object.assign(Vs,{slots:{0:he}});Object.assign(he,{structure:mt,memory:{array:bn},const:!0,slots:{0:Ue}});Object.assign(Ps,{slots:{0:ks,1:Rs,2:Ts,3:xs,4:Ks,5:Cs,6:Ms}});Object.assign(ks,{structure:$,memory:{array:gn},const:!0,slots:{0:Is}});Object.assign(Is,{structure:_,memory:{array:pn},reloc:16781324});Object.assign(Rs,{structure:L,memory:{array:On},const:!0,slots:{0:qs}});Object.assign(qs,{structure:F,memory:{array:jn},reloc:16781354});Object.assign(Ts,{structure:p,memory:{array:fn},const:!0,slots:{0:vs}});Object.assign(vs,{structure:h,memory:{array:Sn},const:!0});Object.assign(xs,{structure:G,memory:{array:zn},const:!0,slots:{0:Es}});Object.assign(Es,{structure:B,memory:{array:wn},reloc:16781379});Object.assign(Ks,{structure:ut,memory:{array:An},const:!0,slots:{0:fe,1:Se,2:ze,3:we,4:Ae,5:de}});Object.assign(Cs,{structure:it,memory:{array:dn},const:!0});Object.assign(Ms,{structure:yt,memory:{array:Un},const:!0,slots:{0:he}});Object.assign(Ds,{slots:{0:_s,1:$s}});Object.assign(_s,{structure:O,memory:{array:hn},const:!0});Object.assign($s,{structure:O,memory:{array:Vn},const:!0});Object.assign(Fs,{memory:{array:gr},slots:{0:Ls}});Object.assign(Ls,{structure:T,memory:{array:gr,offset:0,length:8},slots:{0:Ve}});Object.assign(Ve,{structure:bt,memory:{array:Pn},reloc:0});Object.assign(Bs,{slots:{0:Gs,1:Js,2:Qs}});Object.assign(Gs,{structure:a,memory:{array:kn},const:!0,slots:{0:Hs}});Object.assign(Hs,{structure:lt});Object.assign(Js,{structure:a,memory:{array:In},const:!0,slots:{0:Ns}});Object.assign(Ns,{structure:wt});Object.assign(Qs,{structure:p,memory:{array:Rn},const:!0,slots:{0:Ws}});Object.assign(Ws,{structure:h,memory:{array:qn},const:!0});Object.assign(Xs,{memory:{array:Pe},slots:{0:Ys}});Object.assign(Ys,{structure:gt,memory:{array:Pe},slots:{0:Zs}});Object.assign(Zs,{structure:T,memory:{array:Pe,offset:0,length:8},slots:{0:Ve}});Object.assign(tr,{memory:{array:Tn}});Object.assign(er,{slots:{0:sr}});Object.assign(sr,{structure:d,memory:{array:vn},const:!0});Object.assign(rr,{slots:{0:ar}});Object.assign(ar,{structure:U,memory:{array:xn},const:!0});Object.assign(nr,{slots:{0:or,1:ur,2:mr,3:lr}});Object.assign(or,{structure:a,memory:{array:En},const:!0,slots:{0:cr}});Object.assign(cr,{structure:zt});Object.assign(ur,{structure:a,memory:{array:Kn},const:!0,slots:{0:ir}});Object.assign(ir,{structure:q});Object.assign(mr,{structure:a,memory:{array:Cn},const:!0,slots:{0:yr}});Object.assign(yr,{structure:v});Object.assign(lr,{structure:a,memory:{array:Mn},const:!0,slots:{0:br}});Object.assign(br,{structure:x});const Dn={argStruct:dt,thunkId:2,name:"createOutput"},_n={argStruct:ht,thunkId:3,name:"createPartialOutput"};Object.assign(a,{...s,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:a}],methods:[]}});Object.assign(S,{...s,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(_,{...s,type:1,name:"[18:0]u8",length:18,byteSize:19,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign($,{...s,type:13,name:"*const [18:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[]}});Object.assign(F,{...s,type:1,name:"[7:0]u8",length:7,byteSize:8,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(L,{...s,type:13,name:"*const [7:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(p,{...s,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:p}],methods:[]}});Object.assign(h,{...s,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:h}],methods:[]}});Object.assign(B,{...s,type:1,name:"[22:0]u8",length:22,byteSize:23,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(G,{...s,type:13,name:"*const [22:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:B}],methods:[]}});Object.assign(e,{...s,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:e}],methods:[]}});Object.assign(r,{...s,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[]}});Object.assign(g,{...s,type:2,name:"Struct738220547",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:Re}});Object.assign(V,{...s,type:2,name:"Struct1391759938",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:ve}});Object.assign(H,{...s,type:2,name:"Struct2804892289",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:Ke}});Object.assign(j,{...s,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:j}],methods:[]}});Object.assign(f,{...s,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:j}],methods:[]}});Object.assign(J,{...s,type:2,name:"Struct2184834162",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:a},{...t,type:7,slot:1,name:"minValue",structure:g},{...t,type:7,slot:2,name:"maxValue",structure:V},{...t,type:7,slot:3,name:"defaultValue",structure:H}],methods:[],template:De}});Object.assign(N,{...s,type:2,name:"Struct321950653",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:_e}});Object.assign(Q,{...s,type:2,name:"Struct3082381710",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:a},{...t,type:7,slot:1,name:"minValue",structure:g},{...t,type:7,slot:2,name:"maxValue",structure:V},{...t,type:7,slot:3,name:"defaultValue",structure:N}],methods:[],template:Le}});Object.assign(W,{...s,type:2,name:"Struct3774340857",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:a},{...t,type:7,slot:1,name:"minValue",structure:e},{...t,type:7,slot:2,name:"maxValue",structure:e},{...t,type:7,slot:3,name:"defaultValue",structure:e}],methods:[],template:Be}});Object.assign(X,{...s,type:2,name:"Struct909833941",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:Qe}});Object.assign(Y,{...s,type:2,name:"Struct2155520631",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:Ye}});Object.assign(Z,{...s,type:2,name:"Struct16988915",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:a},{...t,type:7,slot:1,name:"minValue",structure:X},{...t,type:7,slot:2,name:"maxValue",structure:Y},{...t,type:7,slot:3,name:"defaultValue",structure:g}],methods:[],template:es}});Object.assign(tt,{...s,type:2,name:"Struct3501456061",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e}],methods:[],template:ss}});Object.assign(et,{...s,type:2,name:"Struct3644929469",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e}],methods:[],template:os}});Object.assign(st,{...s,type:2,name:"Struct4174069246",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e}],methods:[],template:ms}});Object.assign(rt,{...s,type:15,name:"@Vector(3, f32)",length:3,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:j}],methods:[]}});Object.assign(at,{...s,type:2,name:"Struct576820718",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:a},{...t,type:7,slot:1,name:"minValue",structure:tt},{...t,type:7,slot:2,name:"maxValue",structure:et},{...t,type:7,slot:3,name:"defaultValue",structure:st}],methods:[],template:gs}});Object.assign(nt,{...s,type:2,name:"Struct3785042217",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:Os}});Object.assign(ot,{...s,type:2,name:"Struct27682327",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:Ss}});Object.assign(ct,{...s,type:2,name:"Struct2320569155",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:a},{...t,type:7,slot:1,name:"minValue",structure:g},{...t,type:7,slot:2,name:"maxValue",structure:nt},{...t,type:7,slot:3,name:"defaultValue",structure:ot}],methods:[],template:As}});Object.assign(ut,{...s,type:2,name:"Struct3182742454",align:1,instance:{members:[{...t,type:7,slot:0,name:"size",structure:J},{...t,type:7,slot:1,name:"center",structure:Q},{...t,type:7,slot:2,name:"distort",structure:W},{...t,type:7,slot:3,name:"offset",structure:Z},{...t,type:7,slot:4,name:"color_offset",structure:at},{...t,type:7,slot:5,name:"wave",structure:ct}],methods:[],template:ds}});Object.assign(it,{...s,type:2,name:"@TypeOf(.{})",align:1,isTuple:!0});Object.assign(mt,{...s,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:p}],methods:[],template:Us}});Object.assign(yt,{...s,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:mt}],methods:[],template:Vs}});Object.assign(zt,{...s,type:2,name:"plasma.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:$},{...t,type:7,slot:1,name:"vendor",structure:L},{...t,type:7,slot:2,name:"version",structure:p},{...t,type:7,slot:3,name:"description",structure:G},{...t,type:7,slot:4,name:"parameters",structure:ut},{...t,type:7,slot:5,name:"inputImages",structure:it},{...t,type:7,slot:6,name:"outputImages",structure:yt}],methods:[],template:Ps}});Object.assign(q,{...s,type:2,name:"plasma.KernelInput(u8,plasma.kernel)",align:1});Object.assign(lt,{...s,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(bt,{...s,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:lt}],methods:[]}});Object.assign(T,{...s,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:bt}],methods:[]}});Object.assign(l,{...s,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:l}],methods:[]}});Object.assign(O,{...s,type:11,name:"plasma.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:O}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:O},{...t,type:7,slot:1,name:"display-p3",structure:O}],methods:[],template:Ds}});Object.assign(D,{...s,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:D}],methods:[]}});Object.assign(wt,{...s,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:j}],methods:[]}});Object.assign(gt,{...s,type:2,name:"plasma.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:T},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:D}],methods:[],template:Fs},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:a},{...t,type:7,slot:1,name:"FPixel",structure:a},{...t,type:7,slot:2,name:"channels",structure:p}],methods:[],template:Bs}});Object.assign(v,{...s,type:2,name:"plasma.KernelOutput(u8,plasma.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:gt}],methods:[],template:Xs}});Object.assign(x,{...s,type:2,name:"plasma.KernelParameters(plasma.kernel)",byteSize:64,align:16,instance:{members:[{...t,type:5,bitOffset:128,bitSize:64,byteSize:8,slot:0,name:"size",structure:f},{...t,type:5,bitOffset:192,bitSize:64,byteSize:8,slot:1,name:"center",structure:f},{...t,type:4,bitOffset:384,bitSize:32,byteSize:4,slot:5,name:"distort",structure:j},{...t,type:5,bitOffset:256,bitSize:64,byteSize:8,slot:2,name:"offset",structure:f},{...t,type:5,bitOffset:0,bitSize:96,byteSize:16,slot:3,name:"color_offset",structure:rt},{...t,type:5,bitOffset:320,bitSize:64,byteSize:8,slot:4,name:"wave",structure:f}],methods:[],template:tr}});Object.assign(d,{...s,type:10,name:"ErrorSet3618935218",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:d}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:d}],methods:[],template:er}});Object.assign(At,{...s,type:9,name:"ErrorSet3618935218!plasma.KernelOutput(u8,plasma.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:d}],methods:[]}});Object.assign(dt,{...s,type:5,name:"createOutput",byteSize:112,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:512,bitSize:32,byteSize:4,slot:3,name:"0",structure:l},{...t,type:3,isRequired:!0,bitOffset:544,bitSize:32,byteSize:4,slot:4,name:"1",structure:l},{...t,type:5,isRequired:!0,bitOffset:800,bitSize:0,byteSize:0,slot:0,name:"2",structure:q},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:512,byteSize:64,slot:1,name:"3",structure:x},{...t,type:5,isRequired:!0,bitOffset:576,bitSize:224,byteSize:28,slot:2,name:"retval",structure:At}],methods:[]}});Object.assign(U,{...s,type:10,name:"ErrorSet177646977",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:U}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:U}],methods:[],template:rr}});Object.assign(Ut,{...s,type:9,name:"ErrorSet177646977!plasma.KernelOutput(u8,plasma.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:U}],methods:[]}});Object.assign(ht,{...s,type:5,name:"createPartialOutput",byteSize:112,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:512,bitSize:32,byteSize:4,slot:3,name:"0",structure:l},{...t,type:3,isRequired:!0,bitOffset:544,bitSize:32,byteSize:4,slot:4,name:"1",structure:l},{...t,type:3,isRequired:!0,bitOffset:576,bitSize:32,byteSize:4,slot:5,name:"2",structure:l},{...t,type:3,isRequired:!0,bitOffset:608,bitSize:32,byteSize:4,slot:6,name:"3",structure:l},{...t,type:5,isRequired:!0,bitOffset:864,bitSize:0,byteSize:0,slot:0,name:"4",structure:q},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:512,byteSize:64,slot:1,name:"5",structure:x},{...t,type:5,isRequired:!0,bitOffset:640,bitSize:224,byteSize:28,slot:2,name:"retval",structure:Ut}],methods:[]}});Object.assign(Vt,{...s,type:2,name:"plasma",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:a},{...t,type:7,slot:1,name:"Input",structure:a},{...t,type:7,slot:2,name:"Output",structure:a},{...t,type:7,slot:3,name:"Parameters",structure:a}],methods:[Dn,_n],template:nr}});const $n=[a,S,_,$,F,L,p,h,B,G,e,r,g,V,H,j,f,J,N,Q,W,X,Y,Z,tt,et,st,rt,at,nt,ot,ct,ut,it,mt,yt,zt,q,lt,bt,T,l,O,D,wt,gt,v,x,d,At,dt,U,Ut,ht,Vt],Fn=Vt,Ln={runtimeSafety:!1,littleEndian:!0},jt=Pr();jt.getSpecialExports();jt.recreateStructures($n,Ln);const Bn=(async()=>{const c=new URL("plasma-fe01ecdf.wasm",import.meta.url).href;return fetch(c)})();jt.loadModule(Bn);jt.linkVariables(!0);const{constructor:Gn}=Fn,{createPartialOutput:Hn,Input:Jn,kernel:St}=Gn;function Nn(c,i,u,o,n={},z={}){const w=[];for(const[y]of St.inputImages)w.push(y);const I=[];for(const[y]of St.outputImages)I.push(y);if(Array.isArray(n)){const y=n;n={};for(const[b,A]of w.entries())n[A]=y[b]}const m=new Jn(void 0),K=[];let R;for(const y of w){let b=n[y];if(b||(w.length===1&&["data","width","height"].every(A=>!!n[A])?b=n:K.push(y)),m[y]=b,R){if(b.colorSpace!==R)throw new Error(`Input images must all use the same color space: ${R}`)}else R=b.colorSpace}if(K.length>0)throw new Error(`Missing input image${K.length>1?"s":""}: ${K.join(", ")}`);const ft=Hn(c,i,u,o,m,z),ke=y=>{const b={};for(const A of I){const{data:{typedArray:C},width:Ie,height:pr}=y[A];let M;if(typeof ImageData=="function"){const Or=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);M=new ImageData(Or,Ie,o,{colorSpace:R})}else M={data:C,width:Ie,height:pr};if(I.length===1)return M;b[A]=M}return b};return ft[Symbol.toStringTag]==="Promise"?ft.then(ke):ke(ft)}function Qn(){const c={};for(let[i,u]of St){if(i==="parameters"){const o={};for(const[n,z]of u){const w=o[n]={};for(let[I,m]of z)typeof m=="object"?m=m.string??m.valueOf():typeof m=="function"&&(m=Wn(m.name)),w[I]=m}u=o}else typeof u=="object"&&(u=u.string??u.valueOf());c[i]=u}return c}function Wn(c){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[c]}onmessage=async c=>{if(!Array.isArray(c.data))return;const[i,u,...o]=c.data;try{const[n,z]=await Xn(i,o);postMessage([i,u,n],{transfer:z})}catch(n){postMessage(["error",u,n])}};async function Xn(c,i){switch(c){case"getKernelInfo":return[Qn(...i)];case"createPartialImageData":const o=await Nn(...i),n=[];if("data"in o&&"width"in o&&"height"in o)n.push(o.data.buffer);else for(const z of Object.entries(o))n.push(o.data.buffer);return[o,n];default:throw new Error(`Unknown function: ${c}`)}}postMessage("ready");
