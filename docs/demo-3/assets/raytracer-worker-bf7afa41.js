import{u as Ge,a as He,b as Je,d as Ne,c as Qe,e as We,f as Xe,g as Ye,h as Ze,i as et,j as tt,k as rt,l as st,m as at,n as nt,o as it,p as ut,q as ot}from"./index-b8a86fe8.js";Ge();He();Je();Ne();Qe();We();Xe();Ye();Ze();et();tt();rt();st();at();nt();it();const r={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},w={},U={},R={},g={},c={},d={},se={},ae={},x={},b={},s={},t={},ne={},E={},f={},q={},A={},ie={},D={},ue={},K={},oe={},M={},ye={},F={},me={},T={},le={},_={},ce={},$={},be={},B={},pe={},L={},fe={},G={},de={},H={},O={},Se={},J={},he={},N={},ge={},Q={},we={},W={},Ae={},X={},ze={},Y={},Ue={},Z={},Re={},ee={},Ce={},j={},qe={},Oe={},je={},m={},ke={},te={},re={},P={},V={},Ie={},ve={},xe={},Ee={},De={},Ke={},Me={};Object.assign(w,{...r,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:w}],methods:[],template:null},slot:5});Object.assign(U,{...r,type:1,name:"[10:0]u8",length:10,byteSize:11,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:w}],methods:[],template:null},slot:4});Object.assign(R,{...r,type:11,name:"*const [10:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:U}],methods:[],template:null},slot:3});Object.assign(g,{...r,type:11,name:"*const *const [10:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:R}],methods:[],template:null},slot:2});Object.assign(c,{...r,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:7});Object.assign(d,{...r,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:c}],methods:[],template:null},slot:6});Object.assign(se,{...r,type:1,name:"[24:0]u8",length:24,byteSize:25,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:w}],methods:[],template:null},slot:10});Object.assign(ae,{...r,type:11,name:"*const [24:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:9});Object.assign(x,{...r,type:11,name:"*const *const [24:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:8});Object.assign(b,{...r,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:27});Object.assign(s,{...r,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:s}],methods:[],template:null},slot:51});Object.assign(t,{...r,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:s}],methods:[],template:null},slot:50});const yt=new Uint8Array,mt=new Uint8Array([120,251,15,0]),lt=new Uint8Array([154,153,153,153,153,153,185,63]),ct=new Uint8Array([248,248,15,0]),bt=new Uint8Array([0,0,0,0,0,0,20,64]),pt=new Uint8Array([216,248,15,0]),ft=new Uint8Array([0,0,0,0,0,0,0,64]);Object.assign(ne,{...r,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:b},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:t}],methods:[],template:{memory:{array:yt},slots:{0:{structure:t,memory:{array:mt},slots:{0:{structure:s,memory:{array:lt}}}},1:{structure:t,memory:{array:ct},slots:{0:{structure:s,memory:{array:bt}}}},2:{structure:t,memory:{array:pt},slots:{0:{structure:s,memory:{array:ft}}}}}}},slot:35});Object.assign(E,{...r,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:34});Object.assign(f,{...r,type:13,name:"@Vector(3, f32)",length:3,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:28});const dt=new Uint8Array,St=new Uint8Array([8,247,15,0]),ht=new Uint8Array([0,0,0,0,0,0,24,192]),gt=new Uint8Array([48,247,15,0]),wt=new Uint8Array([0,0,0,0,0,0,24,192]),At=new Uint8Array([88,247,15,0]),zt=new Uint8Array([0,0,0,0,0,0,57,192]);Object.assign(q,{...r,type:2,name:"Struct0031",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t}],methods:[],template:{memory:{array:dt},slots:{0:{structure:t,memory:{array:St},slots:{0:{structure:s,memory:{array:ht}}}},1:{structure:t,memory:{array:gt},slots:{0:{structure:s,memory:{array:wt}}}},2:{structure:t,memory:{array:At},slots:{0:{structure:s,memory:{array:zt}}}}}}},slot:53});Object.assign(A,{...r,type:11,name:"Struct0020",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:q}],methods:[],template:null},slot:52});const Ut=new Uint8Array,Rt=new Uint8Array([40,251,15,0]),qt=new Uint8Array([0,0,0,0,0,0,24,64]),Ot=new Uint8Array([80,251,15,0]),jt=new Uint8Array([0,0,0,0,0,0,24,64]),Pt=new Uint8Array([120,251,15,0]),Vt=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(ie,{...r,type:2,name:"Struct0032",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t}],methods:[],template:{memory:{array:Ut},slots:{0:{structure:t,memory:{array:Rt},slots:{0:{structure:s,memory:{array:qt}}}},1:{structure:t,memory:{array:Ot},slots:{0:{structure:s,memory:{array:jt}}}},2:{structure:t,memory:{array:Pt},slots:{0:{structure:s,memory:{array:Vt}}}}}}},slot:55});Object.assign(D,{...r,type:11,name:"Struct0021",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:54});const Ct=new Uint8Array,kt=new Uint8Array([40,251,15,0]),It=new Uint8Array([0,0,0,0,0,0,0,0]),vt=new Uint8Array([80,251,15,0]),xt=new Uint8Array([0,0,0,0,0,0,0,64]),Et=new Uint8Array([120,251,15,0]),Dt=new Uint8Array([0,0,0,0,0,0,16,192]);Object.assign(ue,{...r,type:2,name:"Struct0033",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t}],methods:[],template:{memory:{array:Ct},slots:{0:{structure:t,memory:{array:kt},slots:{0:{structure:s,memory:{array:It}}}},1:{structure:t,memory:{array:vt},slots:{0:{structure:s,memory:{array:xt}}}},2:{structure:t,memory:{array:Et},slots:{0:{structure:s,memory:{array:Dt}}}}}}},slot:57});Object.assign(K,{...r,type:11,name:"Struct0022",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:56});const Kt=new Uint8Array,Mt=new Uint8Array([170,170,170,170]),Ft=new Uint8Array,Tt=new Uint8Array([170,170,170,170]),_t=new Uint8Array,$t=new Uint8Array([170,170,170,170]),Bt=new Uint8Array;Object.assign(oe,{...r,type:2,name:"Struct0014",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:f},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:A},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:D},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:K}],methods:[],template:{memory:{array:Kt},slots:{0:{structure:A,memory:{array:Mt},slots:{0:{structure:q,memory:{array:Ft}}}},1:{structure:D,memory:{array:Tt},slots:{0:{structure:ie,memory:{array:_t}}}},2:{structure:K,memory:{array:$t},slots:{0:{structure:ue,memory:{array:Bt}}}}}}},slot:37});Object.assign(M,{...r,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:36});const Lt=new Uint8Array,Gt=new Uint8Array([40,251,15,0]),Ht=new Uint8Array([0,0,0,0,0,0,24,64]),Jt=new Uint8Array([80,251,15,0]),Nt=new Uint8Array([0,0,0,0,0,0,24,64]),Qt=new Uint8Array([120,251,15,0]),Wt=new Uint8Array([0,0,0,0,0,0,0,192]);Object.assign(ye,{...r,type:2,name:"Struct0034",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t}],methods:[],template:{memory:{array:Lt},slots:{0:{structure:t,memory:{array:Gt},slots:{0:{structure:s,memory:{array:Ht}}}},1:{structure:t,memory:{array:Jt},slots:{0:{structure:s,memory:{array:Nt}}}},2:{structure:t,memory:{array:Qt},slots:{0:{structure:s,memory:{array:Wt}}}}}}},slot:59});Object.assign(F,{...r,type:11,name:"Struct0023",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:58});const Xt=new Uint8Array,Yt=new Uint8Array([40,251,15,0]),Zt=new Uint8Array([0,0,0,0,0,0,0,0]),er=new Uint8Array([80,251,15,0]),tr=new Uint8Array([0,0,0,0,0,0,0,64]),rr=new Uint8Array([120,251,15,0]),sr=new Uint8Array([0,0,0,0,0,0,36,192]);Object.assign(me,{...r,type:2,name:"Struct0035",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t}],methods:[],template:{memory:{array:Xt},slots:{0:{structure:t,memory:{array:Yt},slots:{0:{structure:s,memory:{array:Zt}}}},1:{structure:t,memory:{array:er},slots:{0:{structure:s,memory:{array:tr}}}},2:{structure:t,memory:{array:rr},slots:{0:{structure:s,memory:{array:sr}}}}}}},slot:61});Object.assign(T,{...r,type:11,name:"Struct0024",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:60});const ar=new Uint8Array,nr=new Uint8Array([170,170,170,170]),ir=new Uint8Array,ur=new Uint8Array([170,170,170,170]),or=new Uint8Array,yr=new Uint8Array([170,170,170,170]),mr=new Uint8Array;Object.assign(le,{...r,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:f},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:A},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:F},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:T}],methods:[],template:{memory:{array:ar},slots:{0:{structure:A,memory:{array:nr},slots:{0:{structure:q,memory:{array:ir}}}},1:{structure:F,memory:{array:ur},slots:{0:{structure:ye,memory:{array:or}}}},2:{structure:T,memory:{array:yr},slots:{0:{structure:me,memory:{array:mr}}}}}}},slot:39});Object.assign(_,{...r,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:38});const lr=new Uint8Array,cr=new Uint8Array([120,251,15,0]),br=new Uint8Array([154,153,153,153,153,153,185,63]),pr=new Uint8Array([248,248,15,0]),fr=new Uint8Array([0,0,0,0,0,0,32,64]),dr=new Uint8Array([216,248,15,0]),Sr=new Uint8Array([0,0,0,0,0,0,0,64]);Object.assign(ce,{...r,type:2,name:"Struct0016",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:b},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:t}],methods:[],template:{memory:{array:lr},slots:{0:{structure:t,memory:{array:cr},slots:{0:{structure:s,memory:{array:br}}}},1:{structure:t,memory:{array:pr},slots:{0:{structure:s,memory:{array:fr}}}},2:{structure:t,memory:{array:dr},slots:{0:{structure:s,memory:{array:Sr}}}}}}},slot:41});Object.assign($,{...r,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:40});const hr=new Uint8Array,gr=new Uint8Array([40,251,15,0]),wr=new Uint8Array([0,0,0,0,0,0,0,0]),Ar=new Uint8Array([80,251,15,0]),zr=new Uint8Array([0,0,0,0,0,0,0,0]),Ur=new Uint8Array([120,251,15,0]),Rr=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(be,{...r,type:2,name:"Struct0036",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t}],methods:[],template:{memory:{array:hr},slots:{0:{structure:t,memory:{array:gr},slots:{0:{structure:s,memory:{array:wr}}}},1:{structure:t,memory:{array:Ar},slots:{0:{structure:s,memory:{array:zr}}}},2:{structure:t,memory:{array:Ur},slots:{0:{structure:s,memory:{array:Rr}}}}}}},slot:63});Object.assign(B,{...r,type:11,name:"Struct0025",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:62});const qr=new Uint8Array,Or=new Uint8Array([40,251,15,0]),jr=new Uint8Array([0,0,0,0,0,0,240,63]),Pr=new Uint8Array([80,251,15,0]),Vr=new Uint8Array([0,0,0,0,0,0,240,63]),Cr=new Uint8Array([120,251,15,0]),kr=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(pe,{...r,type:2,name:"Struct0037",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t}],methods:[],template:{memory:{array:qr},slots:{0:{structure:t,memory:{array:Or},slots:{0:{structure:s,memory:{array:jr}}}},1:{structure:t,memory:{array:Pr},slots:{0:{structure:s,memory:{array:Vr}}}},2:{structure:t,memory:{array:Cr},slots:{0:{structure:s,memory:{array:kr}}}}}}},slot:65});Object.assign(L,{...r,type:11,name:"Struct0026",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:64});const Ir=new Uint8Array,vr=new Uint8Array([40,251,15,0]),xr=new Uint8Array([154,153,153,153,153,153,233,63]),Er=new Uint8Array([80,251,15,0]),Dr=new Uint8Array([154,153,153,153,153,153,233,63]),Kr=new Uint8Array([120,251,15,0]),Mr=new Uint8Array([154,153,153,153,153,153,233,63]);Object.assign(fe,{...r,type:2,name:"Struct0038",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t}],methods:[],template:{memory:{array:Ir},slots:{0:{structure:t,memory:{array:vr},slots:{0:{structure:s,memory:{array:xr}}}},1:{structure:t,memory:{array:Er},slots:{0:{structure:s,memory:{array:Dr}}}},2:{structure:t,memory:{array:Kr},slots:{0:{structure:s,memory:{array:Mr}}}}}}},slot:67});Object.assign(G,{...r,type:11,name:"Struct0027",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:66});const Fr=new Uint8Array,Tr=new Uint8Array([170,170,170,170]),_r=new Uint8Array,$r=new Uint8Array([170,170,170,170]),Br=new Uint8Array,Lr=new Uint8Array([170,170,170,170]),Gr=new Uint8Array;Object.assign(de,{...r,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:f},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:B},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:L},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:G}],methods:[],template:{memory:{array:Fr},slots:{0:{structure:B,memory:{array:Tr},slots:{0:{structure:be,memory:{array:_r}}}},1:{structure:L,memory:{array:$r},slots:{0:{structure:pe,memory:{array:Br}}}},2:{structure:G,memory:{array:Lr},slots:{0:{structure:fe,memory:{array:Gr}}}}}}},slot:43});Object.assign(H,{...r,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:de}],methods:[],template:null},slot:42});Object.assign(O,{...r,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:29});const Hr=new Uint8Array,Jr=new Uint8Array([240,250,15,0]),Nr=new Uint8Array([0,0,0,0,0,0,0,0]),Qr=new Uint8Array([24,251,15,0]),Wr=new Uint8Array([0,0,0,0,0,0,0,0]),Xr=new Uint8Array([64,251,15,0]),Yr=new Uint8Array([0,0,0,0,0,0,0,0]),Zr=new Uint8Array([104,251,15,0]),es=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(Se,{...r,type:2,name:"Struct0039",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:t}],methods:[],template:{memory:{array:Hr},slots:{0:{structure:t,memory:{array:Jr},slots:{0:{structure:s,memory:{array:Nr}}}},1:{structure:t,memory:{array:Qr},slots:{0:{structure:s,memory:{array:Wr}}}},2:{structure:t,memory:{array:Xr},slots:{0:{structure:s,memory:{array:Yr}}}},3:{structure:t,memory:{array:Zr},slots:{0:{structure:s,memory:{array:es}}}}}}},slot:69});Object.assign(J,{...r,type:11,name:"Struct0028",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Se}],methods:[],template:null},slot:68});const ts=new Uint8Array,rs=new Uint8Array([240,250,15,0]),ss=new Uint8Array([0,0,0,0,0,0,240,63]),as=new Uint8Array([24,251,15,0]),ns=new Uint8Array([0,0,0,0,0,0,240,63]),is=new Uint8Array([64,251,15,0]),us=new Uint8Array([0,0,0,0,0,0,240,63]),os=new Uint8Array([104,251,15,0]),ys=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(he,{...r,type:2,name:"Struct0040",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:t}],methods:[],template:{memory:{array:ts},slots:{0:{structure:t,memory:{array:rs},slots:{0:{structure:s,memory:{array:ss}}}},1:{structure:t,memory:{array:as},slots:{0:{structure:s,memory:{array:ns}}}},2:{structure:t,memory:{array:is},slots:{0:{structure:s,memory:{array:us}}}},3:{structure:t,memory:{array:os},slots:{0:{structure:s,memory:{array:ys}}}}}}},slot:71});Object.assign(N,{...r,type:11,name:"Struct0029",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:he}],methods:[],template:null},slot:70});const ms=new Uint8Array,ls=new Uint8Array([240,250,15,0]),cs=new Uint8Array([154,153,153,153,153,153,169,63]),bs=new Uint8Array([24,251,15,0]),ps=new Uint8Array([154,153,153,153,153,153,185,63]),fs=new Uint8Array([64,251,15,0]),ds=new Uint8Array([0,0,0,0,0,0,240,63]),Ss=new Uint8Array([104,251,15,0]),hs=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(ge,{...r,type:2,name:"Struct0041",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:t}],methods:[],template:{memory:{array:ms},slots:{0:{structure:t,memory:{array:ls},slots:{0:{structure:s,memory:{array:cs}}}},1:{structure:t,memory:{array:bs},slots:{0:{structure:s,memory:{array:ps}}}},2:{structure:t,memory:{array:fs},slots:{0:{structure:s,memory:{array:ds}}}},3:{structure:t,memory:{array:Ss},slots:{0:{structure:s,memory:{array:hs}}}}}}},slot:73});Object.assign(Q,{...r,type:11,name:"Struct0030",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ge}],methods:[],template:null},slot:72});const gs=new Uint8Array,ws=new Uint8Array([170,170,170,170]),As=new Uint8Array,zs=new Uint8Array([170,170,170,170]),Us=new Uint8Array,Rs=new Uint8Array([170,170,170,170]),qs=new Uint8Array;Object.assign(we,{...r,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:O},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:J},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:N},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:Q}],methods:[],template:{memory:{array:gs},slots:{0:{structure:J,memory:{array:ws},slots:{0:{structure:Se,memory:{array:As}}}},1:{structure:N,memory:{array:zs},slots:{0:{structure:he,memory:{array:Us}}}},2:{structure:Q,memory:{array:Rs},slots:{0:{structure:ge,memory:{array:qs}}}}}}},slot:45});Object.assign(W,{...r,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:we}],methods:[],template:null},slot:44});const Os=new Uint8Array,js=new Uint8Array([170,170,170,170]),Ps=new Uint8Array,Vs=new Uint8Array([170,170,170,170]),Cs=new Uint8Array,ks=new Uint8Array([170,170,170,170]),Is=new Uint8Array,vs=new Uint8Array([170,170,170,170]),xs=new Uint8Array,Es=new Uint8Array([170,170,170,170]),Ds=new Uint8Array,Ks=new Uint8Array([170,170,170,170]),Ms=new Uint8Array;Object.assign(Ae,{...r,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"viewPlaneDistance",structure:E},{...e,type:8,isRequired:!1,slot:1,name:"lightPos",structure:M},{...e,type:8,isRequired:!1,slot:2,name:"sphere0Position",structure:_},{...e,type:8,isRequired:!1,slot:3,name:"sphere0Radius",structure:$},{...e,type:8,isRequired:!1,slot:4,name:"sphere0Color",structure:H},{...e,type:8,isRequired:!1,slot:5,name:"sphere0Material",structure:W}],methods:[],template:{memory:{array:Os},slots:{0:{structure:E,memory:{array:js},slots:{0:{structure:ne,memory:{array:Ps}}}},1:{structure:M,memory:{array:Vs},slots:{0:{structure:oe,memory:{array:Cs}}}},2:{structure:_,memory:{array:ks},slots:{0:{structure:le,memory:{array:Is}}}},3:{structure:$,memory:{array:vs},slots:{0:{structure:ce,memory:{array:xs}}}},4:{structure:H,memory:{array:Es},slots:{0:{structure:de,memory:{array:Ds}}}},5:{structure:W,memory:{array:Ks},slots:{0:{structure:we,memory:{array:Ms}}}}}}},slot:12});Object.assign(X,{...r,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ae}],methods:[],template:null},slot:11});const Fs=new Uint8Array;Object.assign(ze,{...r,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Fs}}},slot:14});Object.assign(Y,{...r,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ze}],methods:[],template:null},slot:13});const Ts=new Uint8Array,_s=new Uint8Array([96,254,15,0]),$s=new Uint8Array([4,0,0,0]);Object.assign(Ue,{...r,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:d}],methods:[],template:{memory:{array:Ts},slots:{0:{structure:d,memory:{array:_s},slots:{0:{structure:c,memory:{array:$s}}}}}}},slot:47});Object.assign(Z,{...r,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ue}],methods:[],template:null},slot:46});const Bs=new Uint8Array,Ls=new Uint8Array([170,170,170,170]),Gs=new Uint8Array;Object.assign(Re,{...r,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:Z}],methods:[],template:{memory:{array:Bs},slots:{0:{structure:Z,memory:{array:Ls},slots:{0:{structure:Ue,memory:{array:Gs}}}}}}},slot:16});Object.assign(ee,{...r,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Re}],methods:[],template:null},slot:15});const Hs=new Uint8Array,Js=new Uint8Array,Ns=new Uint8Array([4,37,16,0]),Qs=new Uint8Array([201,36,16,0]),Ws=new Uint8Array([78,101,119,103,114,111,117,110,100,115,0]),Xs=new Uint8Array([4,37,16,0]),Ys=new Uint8Array([201,36,16,0]),Zs=new Uint8Array([78,101,119,103,114,111,117,110,100,115,0]),ea=new Uint8Array([0,37,16,0]),ta=new Uint8Array([1,0,0,0]),ra=new Uint8Array([252,36,16,0]),sa=new Uint8Array([148,36,16,0]),aa=new Uint8Array([80,105,120,101,108,32,66,108,101,110,100,101,114,32,82,97,121,116,114,97,99,105,110,103,0]),na=new Uint8Array([170,170,170,170]),ia=new Uint8Array,ua=new Uint8Array([170,170,170,170]),oa=new Uint8Array,ya=new Uint8Array([170,170,170,170]),ma=new Uint8Array;Object.assign(Ce,{...r,type:2,name:"raytracer.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Hs}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:g},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:g},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:d},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:x},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:X},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:Y},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:ee}],methods:[],template:{memory:{array:Js},slots:{0:{structure:g,memory:{array:Ns},slots:{0:{structure:R,memory:{array:Qs},slots:{0:{structure:U,memory:{array:Ws}}}}}},1:{structure:g,memory:{array:Xs},slots:{0:{structure:R,memory:{array:Ys},slots:{0:{structure:U,memory:{array:Zs}}}}}},2:{structure:d,memory:{array:ea},slots:{0:{structure:c,memory:{array:ta}}}},3:{structure:x,memory:{array:ra},slots:{0:{structure:ae,memory:{array:sa},slots:{0:{structure:se,memory:{array:aa}}}}}},4:{structure:X,memory:{array:na},slots:{0:{structure:Ae,memory:{array:ia}}}},5:{structure:Y,memory:{array:ua},slots:{0:{structure:ze,memory:{array:oa}}}},6:{structure:ee,memory:{array:ya},slots:{0:{structure:Re,memory:{array:ma}}}}}}},slot:1});const la=new Uint8Array;Object.assign(j,{...r,type:2,name:"raytracer.KernelInput(u8,raytracer.kernel)",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:la}}},slot:17});Object.assign(qe,{...r,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:w}],methods:[],template:null},slot:22});Object.assign(Oe,{...r,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:qe}],methods:[],template:null},slot:21});Object.assign(je,{...r,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Oe}],methods:[],template:null},slot:20});Object.assign(m,{...r,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[],template:null},slot:23});const ca=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(ke,{...r,type:9,name:"raytracer.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:c},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:c}],methods:[],template:{memory:{array:ca}}},slot:24});Object.assign(te,{...r,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:te}],methods:[],template:null},slot:25});const ba=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),pa=new Uint8Array,fa=new Uint8Array([92,36,16,0]),da=new Uint8Array([4,0,0,0]);Object.assign(re,{...r,type:2,name:"raytracer.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:je},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ke},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:te}],methods:[],template:{memory:{array:ba}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:qe},{...e,type:7,isRequired:!1,name:"FPixel",structure:O},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:d}],methods:[],template:{memory:{array:pa},slots:{0:{structure:d,memory:{array:fa},slots:{0:{structure:c,memory:{array:da}}}}}}},slot:19});const Sa=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ha=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ga=new Uint8Array([0,0,0,0,0,0,0,0]),wa=new Uint8Array;Object.assign(P,{...r,type:2,name:"raytracer.KernelOutput(u8,raytracer.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:re}],methods:[],template:{memory:{array:Sa},slots:{0:{structure:re,memory:{array:ha},slots:{0:{structure:je,memory:{array:ga},address:1046984,slots:{0:{structure:Oe,memory:{array:wa},address:0}}}}}}}},slot:18});const Aa=new Uint8Array([0,0,0,0,0,0,0,64,0,0,128,192,0,0,0,0,0,0,0,0,0,0,0,64,0,0,32,193,0,0,0,0,205,204,76,63,205,204,76,63,205,204,76,63,0,0,0,0,205,204,76,61,205,204,204,61,0,0,128,63,0,0,128,63,0,0,0,64,0,0,0,64,0,0,0,0,0,0,0,0]);Object.assign(V,{...r,type:2,name:"raytracer.KernelParameters(raytracer.kernel)",length:1,byteSize:80,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:512,bitSize:32,byteSize:4,slot:0,name:"viewPlaneDistance",structure:b},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:96,byteSize:16,slot:1,name:"lightPos",structure:f},{...e,type:6,isRequired:!1,bitOffset:128,bitSize:96,byteSize:16,slot:2,name:"sphere0Position",structure:f},{...e,type:4,isRequired:!1,bitOffset:544,bitSize:32,byteSize:4,slot:3,name:"sphere0Radius",structure:b},{...e,type:6,isRequired:!1,bitOffset:256,bitSize:96,byteSize:16,slot:4,name:"sphere0Color",structure:f},{...e,type:6,isRequired:!1,bitOffset:384,bitSize:128,byteSize:16,slot:5,name:"sphere0Material",structure:O}],methods:[],template:{memory:{array:Aa}}},slot:26});Object.assign(Ie,{...r,type:8,name:"@typeInfo(@typeInfo(@TypeOf(raytracer.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:48});Object.assign(ve,{...r,type:7,name:"ErrorSet0000!raytracer.KernelOutput(u8,raytracer.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:P},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Ie}],methods:[],template:null},slot:32});Object.assign(xe,{...r,type:3,name:"createOutput",length:1,byteSize:128,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:640,bitSize:32,byteSize:4,slot:0,name:"0",structure:m},{...e,type:3,bitOffset:672,bitSize:32,byteSize:4,slot:1,name:"1",structure:m},{...e,type:6,bitOffset:1024,bitSize:0,byteSize:0,slot:2,name:"2",structure:j},{...e,type:6,bitOffset:0,bitSize:640,byteSize:80,slot:3,name:"3",structure:V},{...e,type:6,bitOffset:704,bitSize:224,byteSize:28,slot:4,name:"retval",structure:ve}],methods:[],template:null},slot:30});Object.assign(Ee,{...r,type:8,name:"@typeInfo(@typeInfo(@TypeOf(raytracer.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:49});Object.assign(De,{...r,type:7,name:"ErrorSet0001!raytracer.KernelOutput(u8,raytracer.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:P},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Ee}],methods:[],template:null},slot:33});Object.assign(Ke,{...r,type:3,name:"createPartialOutput",length:1,byteSize:128,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:640,bitSize:32,byteSize:4,slot:0,name:"0",structure:m},{...e,type:3,bitOffset:672,bitSize:32,byteSize:4,slot:1,name:"1",structure:m},{...e,type:3,bitOffset:704,bitSize:32,byteSize:4,slot:2,name:"2",structure:m},{...e,type:3,bitOffset:736,bitSize:32,byteSize:4,slot:3,name:"3",structure:m},{...e,type:6,bitOffset:1024,bitSize:0,byteSize:0,slot:4,name:"4",structure:j},{...e,type:6,bitOffset:0,bitSize:640,byteSize:80,slot:5,name:"5",structure:V},{...e,type:6,bitOffset:768,bitSize:224,byteSize:28,slot:6,name:"retval",structure:De}],methods:[],template:null},slot:31});const za=new Uint8Array,Ua={argStruct:xe,thunk:4,name:"createOutput"},Ra={argStruct:Ke,thunk:6,name:"createPartialOutput"};Object.assign(Me,{...r,type:2,name:"raytracer",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:za}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:Ce},{...e,type:7,isRequired:!1,name:"Input",structure:j},{...e,type:7,isRequired:!1,name:"Output",structure:P},{...e,type:7,isRequired:!1,name:"Parameters",structure:V}],methods:[Ua,Ra],template:null},slot:0});const qa=[w,U,R,g,c,d,se,ae,x,b,s,t,ne,E,f,q,A,ie,D,ue,K,oe,M,ye,F,me,T,le,_,ce,$,be,B,pe,L,fe,G,de,H,O,Se,J,he,N,ge,Q,we,W,Ae,X,ze,Y,Ue,Z,Re,ee,Ce,j,qe,Oe,je,m,ke,te,re,P,V,Ie,ve,xe,Ee,De,Ke,Me],Oa=ut(qa),ja=Me.constructor,Pa=(async()=>{const u=new URL("raytracer-8b638275.wasm",import.meta.url).href;return fetch(u)})();ot(Pa,{...Oa,writeBack:!0});const{createOutput:Da,createPartialOutput:Va,kernel:Ve,Input:Ca,Output:Ka,Parameters:Ma}=ja;function ka(u,y,n,a,i={},S={}){if(Array.isArray(i)){const p=i;i={};for(const[l,h]of Object.keys(Ve.inputImages).entries())i[h]=p[l]}const C=new Ca(void 0),k=Object.keys(Ve.inputImages),o=[];let z;for(const p of k){let l=i[p];if(l||(k.length===1&&["data","width","height"].every(h=>!!i[h])?l=i:o.push(p)),C[p]=l,z){if(l.colorSpace!==z)throw new Error(`Input images must all use the same color space: ${z}`)}else z=l.colorSpace}if(o.length>0)throw new Error(`Missing input image${o.length>1?"s":""}: ${o.join(", ")}`);const Pe=Va(u,y,n,a,C,S),Fe=p=>{const l=Object.keys(p),h={};for(const Te of l){const{data:{typedArray:I},width:_e,height:Be}=p[Te];let v;if(typeof ImageData=="function"){const Le=new Uint8ClampedArray(I.buffer,I.byteOffset,I.byteLength);v=new ImageData(Le,_e,a,{colorSpace:z})}else v={data:I,width:_e,height:Be};if(l.length===1)return v;h[Te]=v}return h};return Pe[Symbol.toStringTag]==="Promise"?Pe.then(Fe):Fe(Pe)}function Ia(){const u={};for(let[y,n]of Object.entries(Ve)){if(y==="parameters"){const a={};for(const[i,S]of Object.entries(n)){const C=a[i]={};for(let[k,o]of Object.entries(S))typeof o=="object"?"string"in o?o=o.string:o=$e(o):typeof o=="function"&&(o=va(o.name)),C[k]=o}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());u[y]=n}return u}function $e(u){const y=[];for(let[n,a]of Object.entries(u))typeof a=="object"&&(a=$e(a)),y[n]=a;return y}function va(u){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[u]}onmessage=u=>{const[y,n,...a]=u.data;xa(y,a).then(([i,S])=>{postMessage([y,n,i],{transfer:S})}).catch(i=>{postMessage(["error",n,i])})};async function xa(u,y){switch(u){case"getKernelInfo":return[Ia(...y)];case"createPartialImageData":const a=await ka(...y),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const S of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${u}`)}}
