import{u as Xe,a as Ye,b as Ze,c as et,d as tt,e as st,f as rt,g as at,h as nt,i as it,j as ut,k as ot,l as mt,m as lt,n as yt,o as ct,p as bt,q as pt}from"./index-357cbc86.js";Xe();Ye();Ze();et();tt();st();rt();at();nt();it();ut();ot();mt();lt();yt();ct();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},h={},re={},ae={},v={},ne={},ie={},x={},f={},S={},ue={},oe={},E={},g={},b={},r={},s={},z={},p={},R={},A={},me={},K={},le={},D={},ye={},_={},ce={},M={},be={},F={},pe={},T={},fe={},$={},de={},B={},Se={},ge={},L={},he={},G={},ze={},H={},we={},J={},Oe={},N={},Ae={},Q={},Ue={},W={},Re={},X={},qe={},Y={},je={},Z={},Pe={},ee={},xe={},q={},Ve={},Ce={},ke={},y={},Ee={},te={},Ke={},se={},j={},P={},De={},_e={},Me={},Fe={},Te={},$e={},Be={};Object.assign(h,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:h}],methods:[],template:null},slot:5});Object.assign(re,{...t,type:1,name:"[18:0]u8",length:18,byteSize:19,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:h}],methods:[],template:null},slot:4});Object.assign(ae,{...t,type:11,name:"*const [18:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:3});Object.assign(v,{...t,type:11,name:"*const *const [18:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:2});Object.assign(ne,{...t,type:1,name:"[7:0]u8",length:7,byteSize:8,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:h}],methods:[],template:null},slot:8});Object.assign(ie,{...t,type:11,name:"*const [7:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:7});Object.assign(x,{...t,type:11,name:"*const *const [7:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:6});Object.assign(f,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:f}],methods:[],template:null},slot:10});Object.assign(S,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:f}],methods:[],template:null},slot:9});Object.assign(ue,{...t,type:1,name:"[22:0]u8",length:22,byteSize:23,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:h}],methods:[],template:null},slot:13});Object.assign(oe,{...t,type:11,name:"*const [22:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:12});Object.assign(E,{...t,type:11,name:"*const *const [22:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:11});Object.assign(g,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:g}],methods:[],template:null},slot:31});Object.assign(b,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:g}],methods:[],template:null},slot:30});Object.assign(r,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[],template:null},slot:63});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:r}],methods:[],template:null},slot:62});const ft=new Uint8Array([]),dt=new Uint8Array([144,246,15,0]),St=new Uint8Array([0,0,0,0,0,0,0,0]),gt=new Uint8Array([184,246,15,0]),ht=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(z,{...t,type:2,name:"Struct0031",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:ft},slots:{0:{structure:s,memory:{array:dt},slots:{0:{structure:r,memory:{array:St}}}},1:{structure:s,memory:{array:gt},slots:{0:{structure:r,memory:{array:ht}}}}}}},slot:55});Object.assign(p,{...t,type:11,name:"Struct0020",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:z}],methods:[],template:null},slot:54});const zt=new Uint8Array([]),wt=new Uint8Array([144,246,15,0]),Ot=new Uint8Array([0,0,0,0,0,0,144,64]),At=new Uint8Array([184,246,15,0]),Ut=new Uint8Array([0,0,0,0,0,0,144,64]);Object.assign(R,{...t,type:2,name:"Struct0032",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:zt},slots:{0:{structure:s,memory:{array:wt},slots:{0:{structure:r,memory:{array:Ot}}}},1:{structure:s,memory:{array:At},slots:{0:{structure:r,memory:{array:Ut}}}}}}},slot:57});Object.assign(A,{...t,type:11,name:"Struct0021",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:R}],methods:[],template:null},slot:56});const Rt=new Uint8Array([]),qt=new Uint8Array([96,250,15,0]),jt=new Uint8Array([0,0,0,0,0,0,144,64]),Pt=new Uint8Array([128,250,15,0]),Vt=new Uint8Array([0,0,0,0,0,0,128,64]);Object.assign(me,{...t,type:2,name:"Struct0033",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Rt},slots:{0:{structure:s,memory:{array:qt},slots:{0:{structure:r,memory:{array:jt}}}},1:{structure:s,memory:{array:Pt},slots:{0:{structure:r,memory:{array:Vt}}}}}}},slot:59});Object.assign(K,{...t,type:11,name:"Struct0022",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:58});const Ct=new Uint8Array([]),kt=new Uint8Array([170,170,170,170]),a=new Uint8Array([]),It=new Uint8Array([170,170,170,170]),vt=new Uint8Array([170,170,170,170]);Object.assign(le,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:b},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:p},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:A},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:K}],methods:[],template:{memory:{array:Ct},slots:{0:{structure:p,memory:{array:kt},slots:{0:{structure:z,memory:{array:a},address:-1431655766}}},1:{structure:A,memory:{array:It},slots:{0:{structure:R,memory:{array:a},address:-1431655766}}},2:{structure:K,memory:{array:vt},slots:{0:{structure:me,memory:{array:a},address:-1431655766}}}}}},slot:38});Object.assign(D,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:37});const xt=new Uint8Array([]),Et=new Uint8Array([96,250,15,0]),Kt=new Uint8Array([0,0,0,0,0,0,128,64]),Dt=new Uint8Array([128,250,15,0]),_t=new Uint8Array([0,0,0,0,0,0,112,64]);Object.assign(ye,{...t,type:2,name:"Struct0034",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:xt},slots:{0:{structure:s,memory:{array:Et},slots:{0:{structure:r,memory:{array:Kt}}}},1:{structure:s,memory:{array:Dt},slots:{0:{structure:r,memory:{array:_t}}}}}}},slot:61});Object.assign(_,{...t,type:11,name:"Struct0023",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:60});const Mt=new Uint8Array([]),Ft=new Uint8Array([170,170,170,170]),Tt=new Uint8Array([170,170,170,170]),$t=new Uint8Array([170,170,170,170]);Object.assign(ce,{...t,type:2,name:"Struct0014",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:b},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:p},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:A},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:_}],methods:[],template:{memory:{array:Mt},slots:{0:{structure:p,memory:{array:Ft},slots:{0:{structure:z,memory:{array:a},address:-1431655766}}},1:{structure:A,memory:{array:Tt},slots:{0:{structure:R,memory:{array:a},address:-1431655766}}},2:{structure:_,memory:{array:$t},slots:{0:{structure:ye,memory:{array:a},address:-1431655766}}}}}},slot:40});Object.assign(M,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:39});const Bt=new Uint8Array([]),Lt=new Uint8Array([120,250,15,0]),Gt=new Uint8Array([0,0,0,0,0,0,0,0]),Ht=new Uint8Array([16,248,15,0]),Jt=new Uint8Array([154,153,153,153,153,153,185,63]),Nt=new Uint8Array([184,249,15,0]),Qt=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(be,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:g},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:Bt},slots:{0:{structure:s,memory:{array:Lt},slots:{0:{structure:r,memory:{array:Gt}}}},1:{structure:s,memory:{array:Ht},slots:{0:{structure:r,memory:{array:Jt}}}},2:{structure:s,memory:{array:Nt},slots:{0:{structure:r,memory:{array:Qt}}}}}}},slot:42});Object.assign(F,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:41});const Wt=new Uint8Array([]),Xt=new Uint8Array([96,250,15,0]),Yt=new Uint8Array([0,0,0,0,0,0,89,192]),Zt=new Uint8Array([128,250,15,0]),es=new Uint8Array([0,0,0,0,0,0,89,192]);Object.assign(pe,{...t,type:2,name:"Struct0035",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Wt},slots:{0:{structure:s,memory:{array:Xt},slots:{0:{structure:r,memory:{array:Yt}}}},1:{structure:s,memory:{array:Zt},slots:{0:{structure:r,memory:{array:es}}}}}}},slot:65});Object.assign(T,{...t,type:11,name:"Struct0024",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:64});const ts=new Uint8Array([]),ss=new Uint8Array([96,250,15,0]),rs=new Uint8Array([0,0,0,0,0,0,89,64]),as=new Uint8Array([128,250,15,0]),ns=new Uint8Array([0,0,0,0,0,0,89,64]);Object.assign(fe,{...t,type:2,name:"Struct0036",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:ts},slots:{0:{structure:s,memory:{array:ss},slots:{0:{structure:r,memory:{array:rs}}}},1:{structure:s,memory:{array:as},slots:{0:{structure:r,memory:{array:ns}}}}}}},slot:67});Object.assign($,{...t,type:11,name:"Struct0025",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:66});const is=new Uint8Array([]),us=new Uint8Array([170,170,170,170]),os=new Uint8Array([170,170,170,170]),ms=new Uint8Array([170,170,170,170]);Object.assign(de,{...t,type:2,name:"Struct0016",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:b},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:T},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:$},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:p}],methods:[],template:{memory:{array:is},slots:{0:{structure:T,memory:{array:us},slots:{0:{structure:pe,memory:{array:a},address:-1431655766}}},1:{structure:$,memory:{array:os},slots:{0:{structure:fe,memory:{array:a},address:-1431655766}}},2:{structure:p,memory:{array:ms},slots:{0:{structure:z,memory:{array:a},address:-1431655766}}}}}},slot:44});Object.assign(B,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:de}],methods:[],template:null},slot:43});Object.assign(Se,{...t,type:13,name:"@Vector(3, f32)",length:3,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:g}],methods:[],template:null},slot:32});const ls=new Uint8Array([]),ys=new Uint8Array([248,249,15,0]),cs=new Uint8Array([0,0,0,0,0,0,20,192]),bs=new Uint8Array([88,250,15,0]),ps=new Uint8Array([0,0,0,0,0,0,20,192]),fs=new Uint8Array([120,250,15,0]),ds=new Uint8Array([0,0,0,0,0,0,20,192]);Object.assign(ge,{...t,type:2,name:"Struct0037",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:ls},slots:{0:{structure:s,memory:{array:ys},slots:{0:{structure:r,memory:{array:cs}}}},1:{structure:s,memory:{array:bs},slots:{0:{structure:r,memory:{array:ps}}}},2:{structure:s,memory:{array:fs},slots:{0:{structure:r,memory:{array:ds}}}}}}},slot:69});Object.assign(L,{...t,type:11,name:"Struct0026",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ge}],methods:[],template:null},slot:68});const Ss=new Uint8Array([]),gs=new Uint8Array([248,249,15,0]),hs=new Uint8Array([0,0,0,0,0,0,20,64]),zs=new Uint8Array([88,250,15,0]),ws=new Uint8Array([0,0,0,0,0,0,20,64]),Os=new Uint8Array([120,250,15,0]),As=new Uint8Array([0,0,0,0,0,0,20,64]);Object.assign(he,{...t,type:2,name:"Struct0038",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:Ss},slots:{0:{structure:s,memory:{array:gs},slots:{0:{structure:r,memory:{array:hs}}}},1:{structure:s,memory:{array:zs},slots:{0:{structure:r,memory:{array:ws}}}},2:{structure:s,memory:{array:Os},slots:{0:{structure:r,memory:{array:As}}}}}}},slot:71});Object.assign(G,{...t,type:11,name:"Struct0027",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:he}],methods:[],template:null},slot:70});const Us=new Uint8Array([]),Rs=new Uint8Array([248,249,15,0]),qs=new Uint8Array([0,0,0,0,0,0,0,0]),js=new Uint8Array([88,250,15,0]),Ps=new Uint8Array([0,0,0,0,0,0,0,0]),Vs=new Uint8Array([120,250,15,0]),Cs=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(ze,{...t,type:2,name:"Struct0039",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:Us},slots:{0:{structure:s,memory:{array:Rs},slots:{0:{structure:r,memory:{array:qs}}}},1:{structure:s,memory:{array:js},slots:{0:{structure:r,memory:{array:Ps}}}},2:{structure:s,memory:{array:Vs},slots:{0:{structure:r,memory:{array:Cs}}}}}}},slot:73});Object.assign(H,{...t,type:11,name:"Struct0028",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ze}],methods:[],template:null},slot:72});const ks=new Uint8Array([]),Is=new Uint8Array([170,170,170,170]),vs=new Uint8Array([170,170,170,170]),xs=new Uint8Array([170,170,170,170]);Object.assign(we,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:Se},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:L},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:G},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:H}],methods:[],template:{memory:{array:ks},slots:{0:{structure:L,memory:{array:Is},slots:{0:{structure:ge,memory:{array:a},address:-1431655766}}},1:{structure:G,memory:{array:vs},slots:{0:{structure:he,memory:{array:a},address:-1431655766}}},2:{structure:H,memory:{array:xs},slots:{0:{structure:ze,memory:{array:a},address:-1431655766}}}}}},slot:46});Object.assign(J,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:we}],methods:[],template:null},slot:45});const Es=new Uint8Array([]),Ks=new Uint8Array([96,250,15,0]),Ds=new Uint8Array([154,153,153,153,153,153,185,63]),_s=new Uint8Array([128,250,15,0]),Ms=new Uint8Array([154,153,153,153,153,153,185,63]);Object.assign(Oe,{...t,type:2,name:"Struct0040",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Es},slots:{0:{structure:s,memory:{array:Ks},slots:{0:{structure:r,memory:{array:Ds}}}},1:{structure:s,memory:{array:_s},slots:{0:{structure:r,memory:{array:Ms}}}}}}},slot:75});Object.assign(N,{...t,type:11,name:"Struct0029",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Oe}],methods:[],template:null},slot:74});const Fs=new Uint8Array([]),Ts=new Uint8Array([96,250,15,0]),$s=new Uint8Array([154,153,153,153,153,153,169,63]),Bs=new Uint8Array([128,250,15,0]),Ls=new Uint8Array([154,153,153,153,153,153,169,63]);Object.assign(Ae,{...t,type:2,name:"Struct0041",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Fs},slots:{0:{structure:s,memory:{array:Ts},slots:{0:{structure:r,memory:{array:$s}}}},1:{structure:s,memory:{array:Bs},slots:{0:{structure:r,memory:{array:Ls}}}}}}},slot:77});Object.assign(Q,{...t,type:11,name:"Struct0030",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ae}],methods:[],template:null},slot:76});const Gs=new Uint8Array([]),Hs=new Uint8Array([170,170,170,170]),Js=new Uint8Array([170,170,170,170]),Ns=new Uint8Array([170,170,170,170]);Object.assign(Ue,{...t,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:b},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:p},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:N},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:Q}],methods:[],template:{memory:{array:Gs},slots:{0:{structure:p,memory:{array:Hs},slots:{0:{structure:z,memory:{array:a},address:-1431655766}}},1:{structure:N,memory:{array:Js},slots:{0:{structure:Oe,memory:{array:a},address:-1431655766}}},2:{structure:Q,memory:{array:Ns},slots:{0:{structure:Ae,memory:{array:a},address:-1431655766}}}}}},slot:48});Object.assign(W,{...t,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ue}],methods:[],template:null},slot:47});const Qs=new Uint8Array([]),Ws=new Uint8Array([170,170,170,170]),Xs=new Uint8Array([170,170,170,170]),Ys=new Uint8Array([170,170,170,170]),Zs=new Uint8Array([170,170,170,170]),er=new Uint8Array([170,170,170,170]),tr=new Uint8Array([170,170,170,170]);Object.assign(Re,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"size",structure:D},{...e,type:8,isRequired:!1,slot:1,name:"center",structure:M},{...e,type:8,isRequired:!1,slot:2,name:"distort",structure:F},{...e,type:8,isRequired:!1,slot:3,name:"offset",structure:B},{...e,type:8,isRequired:!1,slot:4,name:"color_offset",structure:J},{...e,type:8,isRequired:!1,slot:5,name:"wave",structure:W}],methods:[],template:{memory:{array:Qs},slots:{0:{structure:D,memory:{array:Ws},slots:{0:{structure:le,memory:{array:a},address:-1431655766}}},1:{structure:M,memory:{array:Xs},slots:{0:{structure:ce,memory:{array:a},address:-1431655766}}},2:{structure:F,memory:{array:Ys},slots:{0:{structure:be,memory:{array:a},address:-1431655766}}},3:{structure:B,memory:{array:Zs},slots:{0:{structure:de,memory:{array:a},address:-1431655766}}},4:{structure:J,memory:{array:er},slots:{0:{structure:we,memory:{array:a},address:-1431655766}}},5:{structure:W,memory:{array:tr},slots:{0:{structure:Ue,memory:{array:a},address:-1431655766}}}}}},slot:15});Object.assign(X,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Re}],methods:[],template:null},slot:14});const sr=new Uint8Array([]);Object.assign(qe,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:sr}}},slot:17});Object.assign(Y,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:qe}],methods:[],template:null},slot:16});const rr=new Uint8Array([]),ar=new Uint8Array([160,253,15,0]),nr=new Uint8Array([4,0,0,0]);Object.assign(je,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:S}],methods:[],template:{memory:{array:rr},slots:{0:{structure:S,memory:{array:ar},slots:{0:{structure:f,memory:{array:nr}}}}}}},slot:50});Object.assign(Z,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:je}],methods:[],template:null},slot:49});const ir=new Uint8Array([]),ur=new Uint8Array([170,170,170,170]);Object.assign(Pe,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:Z}],methods:[],template:{memory:{array:ir},slots:{0:{structure:Z,memory:{array:ur},slots:{0:{structure:je,memory:{array:a},address:-1431655766}}}}}},slot:19});Object.assign(ee,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Pe}],methods:[],template:null},slot:18});const or=new Uint8Array([]),mr=new Uint8Array([]),lr=new Uint8Array([148,250,15,0]),yr=new Uint8Array([209,36,16,0]),cr=new Uint8Array([99,111,109,46,109,114,100,111,111,98,46,115,104,97,100,101,114,115,0]),br=new Uint8Array([212,250,15,0]),pr=new Uint8Array([201,36,16,0]),fr=new Uint8Array([77,114,46,100,111,111,98,0]),dr=new Uint8Array([20,251,15,0]),Sr=new Uint8Array([1,0,0,0]),gr=new Uint8Array([108,251,15,0]),hr=new Uint8Array([178,36,16,0]),zr=new Uint8Array([71,111,111,100,32,111,108,100,32,112,108,97,115,109,97,32,101,102,102,101,99,116,0]),wr=new Uint8Array([170,170,170,170]),Or=new Uint8Array([170,170,170,170]),Ar=new Uint8Array([170,170,170,170]);Object.assign(xe,{...t,type:2,name:"plasma.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:or}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:v},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:x},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:S},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:E},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:X},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:Y},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:ee}],methods:[],template:{memory:{array:mr},slots:{0:{structure:v,memory:{array:lr},slots:{0:{structure:ae,memory:{array:yr},slots:{0:{structure:re,memory:{array:cr},address:1058001}}}}},1:{structure:x,memory:{array:br},slots:{0:{structure:ie,memory:{array:pr},slots:{0:{structure:ne,memory:{array:fr},address:1057993}}}}},2:{structure:S,memory:{array:dr},slots:{0:{structure:f,memory:{array:Sr}}}},3:{structure:E,memory:{array:gr},slots:{0:{structure:oe,memory:{array:hr},slots:{0:{structure:ue,memory:{array:zr},address:1057970}}}}},4:{structure:X,memory:{array:wr},slots:{0:{structure:Re,memory:{array:a},address:-1431655766}}},5:{structure:Y,memory:{array:Or},slots:{0:{structure:qe,memory:{array:a},address:-1431655766}}},6:{structure:ee,memory:{array:Ar},slots:{0:{structure:Pe,memory:{array:a},address:-1431655766}}}}}},slot:1});const Ur=new Uint8Array([]);Object.assign(q,{...t,type:2,name:"plasma.KernelInput(u8,plasma.kernel)",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Ur}}},slot:20});Object.assign(Ve,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:h}],methods:[],template:null},slot:25});Object.assign(Ce,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:Ve}],methods:[],template:null},slot:24});Object.assign(ke,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Ce}],methods:[],template:null},slot:23});Object.assign(y,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:26});const Rr=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(Ee,{...t,type:9,name:"plasma.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:f},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:f}],methods:[],template:{memory:{array:Rr}}},slot:27});Object.assign(te,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:te}],methods:[],template:null},slot:28});Object.assign(Ke,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:g}],methods:[],template:null},slot:51});const qr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),jr=new Uint8Array([]),Pr=new Uint8Array([240,252,15,0]),Vr=new Uint8Array([4,0,0,0]);Object.assign(se,{...t,type:2,name:"plasma.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:ke},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Ee},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:te}],methods:[],template:{memory:{array:qr}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:Ve},{...e,type:7,isRequired:!1,name:"FPixel",structure:Ke},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:S}],methods:[],template:{memory:{array:jr},slots:{0:{structure:S,memory:{array:Pr},slots:{0:{structure:f,memory:{array:Vr}}}}}}},slot:22});const Cr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),kr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ir=new Uint8Array([0,0,0,0,0,0,0,0]),Je=new Uint8Array([]);Object.assign(j,{...t,type:2,name:"plasma.KernelOutput(u8,plasma.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:se}],methods:[],template:{memory:{array:Cr},slots:{0:{structure:se,memory:{array:kr},slots:{0:{structure:ke,memory:{array:Ir},slots:{0:{structure:Ce,memory:{array:Je}}}}}}}}},slot:21});const vr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,68,0,0,0,68,0,0,0,68,0,0,128,67,0,0,0,0,0,0,0,0,205,204,76,61,205,204,76,61,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);Object.assign(P,{...t,type:2,name:"plasma.KernelParameters(plasma.kernel)",length:1,byteSize:64,align:4,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:128,bitSize:64,byteSize:8,slot:0,name:"size",structure:b},{...e,type:6,isRequired:!1,bitOffset:192,bitSize:64,byteSize:8,slot:1,name:"center",structure:b},{...e,type:4,isRequired:!1,bitOffset:384,bitSize:32,byteSize:4,slot:2,name:"distort",structure:g},{...e,type:6,isRequired:!1,bitOffset:256,bitSize:64,byteSize:8,slot:3,name:"offset",structure:b},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:96,byteSize:16,slot:4,name:"color_offset",structure:Se},{...e,type:6,isRequired:!1,bitOffset:320,bitSize:64,byteSize:8,slot:5,name:"wave",structure:b}],methods:[],template:{memory:{array:vr}}},slot:29});Object.assign(De,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(plasma.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:52});Object.assign(_e,{...t,type:7,name:"ErrorSet0000!plasma.KernelOutput(u8,plasma.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:j},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:De}],methods:[],template:null},slot:35});Object.assign(Me,{...t,type:3,name:"createOutput",length:1,byteSize:112,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:512,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:544,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:6,bitOffset:896,bitSize:0,byteSize:0,slot:2,name:"2",structure:q},{...e,type:6,bitOffset:0,bitSize:512,byteSize:64,slot:3,name:"3",structure:P},{...e,type:6,bitOffset:576,bitSize:224,byteSize:28,slot:4,name:"retval",structure:_e}],methods:[],template:null},slot:33});Object.assign(Fe,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(plasma.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:53});Object.assign(Te,{...t,type:7,name:"ErrorSet0001!plasma.KernelOutput(u8,plasma.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:j},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Fe}],methods:[],template:null},slot:36});Object.assign($e,{...t,type:3,name:"createPartialOutput",length:1,byteSize:112,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:512,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:544,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:3,bitOffset:576,bitSize:32,byteSize:4,slot:2,name:"2",structure:y},{...e,type:3,bitOffset:608,bitSize:32,byteSize:4,slot:3,name:"3",structure:y},{...e,type:6,bitOffset:896,bitSize:0,byteSize:0,slot:4,name:"4",structure:q},{...e,type:6,bitOffset:0,bitSize:512,byteSize:64,slot:5,name:"5",structure:P},{...e,type:6,bitOffset:640,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Te}],methods:[],template:null},slot:34});const xr={argStruct:Me,thunk:8,name:"createOutput"},Er={argStruct:$e,thunk:2,name:"createPartialOutput"};Object.assign(Be,{...t,type:2,name:"plasma",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Je}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:xe},{...e,type:7,isRequired:!1,name:"Input",structure:q},{...e,type:7,isRequired:!1,name:"Output",structure:j},{...e,type:7,isRequired:!1,name:"Parameters",structure:P}],methods:[xr,Er],template:null},slot:0});const Kr=[h,re,ae,v,ne,ie,x,f,S,ue,oe,E,g,b,r,s,z,p,R,A,me,K,le,D,ye,_,ce,M,be,F,pe,T,fe,$,de,B,Se,ge,L,he,G,ze,H,we,J,Oe,N,Ae,Q,Ue,W,Re,X,qe,Y,je,Z,Pe,ee,xe,q,Ve,Ce,ke,y,Ee,te,Ke,se,j,P,De,_e,Me,Fe,Te,$e,Be],Dr=bt(Kr),_r=Be.constructor,Mr=(async()=>{const o=new URL("plasma-e7147b5d.wasm",import.meta.url).href;return fetch(o)})();pt(Mr,{...Dr,writeBack:!0});const{createOutput:Jr,createPartialOutput:Fr,kernel:ve,Input:Tr,Output:Nr,Parameters:Qr}=_r;function $r(o,l,i,n,u={},w={}){if(Array.isArray(u)){const d=u;u={};for(const[c,O]of Object.keys(ve.inputImages).entries())u[O]=d[c]}const V=new Tr(void 0),C=Object.keys(ve.inputImages),m=[];let U;for(const d of C){let c=u[d];if(c||(C.length===1&&["data","width","height"].every(O=>!!u[O])?c=u:m.push(d)),V[d]=c,U){if(c.colorSpace!==U)throw new Error(`Input images must all use the same color space: ${U}`)}else U=c.colorSpace}if(m.length>0)throw new Error(`Missing input image${m.length>1?"s":""}: ${m.join(", ")}`);const Ie=Fr(o,l,i,n,V,w),Le=d=>{const c=Object.keys(d),O={};for(const Ge of c){const{data:{typedArray:k},width:He,height:Qe}=d[Ge];let I;if(typeof ImageData=="function"){const We=new Uint8ClampedArray(k.buffer,k.byteOffset,k.byteLength);I=new ImageData(We,He,n,{colorSpace:U})}else I={data:k,width:He,height:Qe};if(c.length===1)return I;O[Ge]=I}return O};return Ie[Symbol.toStringTag]==="Promise"?Ie.then(Le):Le(Ie)}function Br(){const o={};for(let[l,i]of Object.entries(ve)){if(l==="parameters"){const n={};for(const[u,w]of Object.entries(i)){const V=n[u]={};for(let[C,m]of Object.entries(w))typeof m=="object"?"string"in m?m=m.string:m=Ne(m):typeof m=="function"&&(m=Lr(m.name)),V[C]=m}i=n}else typeof i=="object"&&("string"in i?i=i.string:i=i.valueOf());o[l]=i}return o}function Ne(o){const l=[];for(let[i,n]of Object.entries(o))typeof n=="object"&&(n=Ne(n)),l[i]=n;return l}function Lr(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[l,i,...n]=o.data;Gr(l,n).then(([u,w])=>{postMessage([l,i,u],{transfer:w})}).catch(u=>{postMessage(["error",i,u])})};async function Gr(o,l){switch(o){case"getKernelInfo":return[Br(...l)];case"createPartialImageData":const n=await $r(...l),u=[];if("data"in n&&"width"in n&&"height"in n)u.push(n.data.buffer);else for(const w of Object.entries(n))u.push(n.data.buffer);return[n,u];default:throw new Error(`Unknown function: ${o}`)}}
