import{u as Be,a as Le,b as Ge,c as He,d as Je,e as Ne,f as Qe,g as We,h as Xe,i as Ye,j as Ze,k as et,l as tt,m as st,n as rt,o as at,p as it,q as mt,r as nt}from"./index-778418ea.js";Be();Le();Ge();He();Je();Ne();Qe();We();Xe();Ye();Ze();et();tt();st();rt();at();it();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},g={},Z={},ee={},K={},te={},se={},F={},r={},h={},re={},ae={},D={},_={},ie={},b={},u={},me={},T={},ne={},M={},oe={},$={},ce={},B={},ue={},m={},le={},L={},ye={},G={},pe={},H={},be={},J={},fe={},N={},R={},d={},de={},Q={},he={},W={},_e={},q={},A={},U={},y={},ge={},j={},V={},Se={},O={},P={},ze={},Oe={},X={},I={},k={},Ae={},Ue={},je={},Ve={},Pe={},Ie={},ke={};Object.assign(g,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:5});Object.assign(Z,{...t,type:1,name:"[21:0]u8",length:21,byteSize:22,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:4});Object.assign(ee,{...t,type:11,name:"*const [21:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:3});Object.assign(K,{...t,type:11,name:"**const [21:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:2});Object.assign(te,{...t,type:1,name:"[9:0]u8",length:9,byteSize:10,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:8});Object.assign(se,{...t,type:11,name:"*const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:7});Object.assign(F,{...t,type:11,name:"**const [9:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:6});Object.assign(r,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:r}],methods:[],template:null},slot:10});Object.assign(h,{...t,type:11,name:"*i32",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:r}],methods:[],template:null},slot:9});Object.assign(re,{...t,type:1,name:"[8:0]u8",length:8,byteSize:9,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:13});Object.assign(ae,{...t,type:11,name:"*const [8:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:12});Object.assign(D,{...t,type:11,name:"**const [8:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:11});Object.assign(_,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:_}],methods:[],template:null},slot:46});Object.assign(ie,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:_}],methods:[],template:null},slot:33});Object.assign(b,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:b}],methods:[],template:null},slot:63});Object.assign(u,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:b}],methods:[],template:null},slot:62});const ot=new Uint8Array([]),ct=new Uint8Array([80,30,16,0]),Ee=new Uint8Array([0,0,0,0,0,0,89,192]),ut=new Uint8Array([80,30,16,0]);Object.assign(me,{...t,type:2,name:"struct{comptime comptime_float = -100, comptime comptime_float = -100}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:u},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:u}],methods:[],template:{memory:{array:ot},slots:{0:{structure:u,memory:{array:ct},slots:{0:{structure:b,memory:{array:Ee},address:1056336}}},1:{structure:u,memory:{array:ut},slots:{0:{structure:b,memory:{array:Ee},address:1056336}}}}}},slot:50});Object.assign(T,{...t,type:11,name:"*const struct{comptime comptime_float = -100, comptime comptime_float = -100}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:49});const lt=new Uint8Array([]),yt=new Uint8Array([72,30,16,0]),Ke=new Uint8Array([0,0,0,0,0,0,89,64]),pt=new Uint8Array([72,30,16,0]);Object.assign(ne,{...t,type:2,name:"struct{comptime comptime_float = 100, comptime comptime_float = 100}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:u},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:u}],methods:[],template:{memory:{array:lt},slots:{0:{structure:u,memory:{array:yt},slots:{0:{structure:b,memory:{array:Ke},address:1056328}}},1:{structure:u,memory:{array:pt},slots:{0:{structure:b,memory:{array:Ke},address:1056328}}}}}},slot:52});Object.assign(M,{...t,type:11,name:"*const struct{comptime comptime_float = 100, comptime comptime_float = 100}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:51});const bt=new Uint8Array([]),ft=new Uint8Array([64,30,16,0]),Fe=new Uint8Array([0,0,0,0,0,0,0,0]),dt=new Uint8Array([64,30,16,0]);Object.assign(oe,{...t,type:2,name:"struct{comptime comptime_float = 0, comptime comptime_float = 0}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:u},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:u}],methods:[],template:{memory:{array:bt},slots:{0:{structure:u,memory:{array:ft},slots:{0:{structure:b,memory:{array:Fe},address:1056320}}},1:{structure:u,memory:{array:dt},slots:{0:{structure:b,memory:{array:Fe},address:1056320}}}}}},slot:54});Object.assign($,{...t,type:11,name:"*const struct{comptime comptime_float = 0, comptime comptime_float = 0}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:53});const ht=new Uint8Array([]),gt=new Uint8Array([170,170,170,170]),l=new Uint8Array([]),St=new Uint8Array([170,170,170,170]),zt=new Uint8Array([170,170,170,170]);Object.assign(ce,{...t,type:2,name:"struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = -100, comptime comptime_float = -100} = .{-100, -100}, comptime maxValue: struct{comptime comptime_float = 100, comptime comptime_float = 100} = .{100, 100}, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:ie},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:T},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:M},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:$}],methods:[],template:{memory:{array:ht},slots:{0:{structure:T,memory:{array:gt},slots:{0:{structure:me,memory:{array:l},address:-1431655766}}},1:{structure:M,memory:{array:St},slots:{0:{structure:ne,memory:{array:l},address:-1431655766}}},2:{structure:$,memory:{array:zt},slots:{0:{structure:oe,memory:{array:l},address:-1431655766}}}}}},slot:40});Object.assign(B,{...t,type:11,name:"*const struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = -100, comptime comptime_float = -100} = .{-100, -100}, comptime maxValue: struct{comptime comptime_float = 100, comptime comptime_float = 100} = .{100, 100}, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:39});Object.assign(ue,{...t,type:13,name:"@Vector(2, i32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,structure:r}],methods:[],template:null},slot:34});Object.assign(m,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:r}],methods:[],template:null},slot:61});const Ot=new Uint8Array([]),Rt=new Uint8Array([52,30,16,0]),qe=new Uint8Array([0,0,0,0]),qt=new Uint8Array([52,30,16,0]);Object.assign(le,{...t,type:2,name:"struct{comptime comptime_int = 0, comptime comptime_int = 0}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:m},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:m}],methods:[],template:{memory:{array:Ot},slots:{0:{structure:m,memory:{array:Rt},slots:{0:{structure:r,memory:{array:qe},address:1056308}}},1:{structure:m,memory:{array:qt},slots:{0:{structure:r,memory:{array:qe},address:1056308}}}}}},slot:56});Object.assign(L,{...t,type:11,name:"*const struct{comptime comptime_int = 0, comptime comptime_int = 0}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:55});const wt=new Uint8Array([]),_t=new Uint8Array([56,30,16,0]),De=new Uint8Array([3,0,0,0]),At=new Uint8Array([56,30,16,0]);Object.assign(ye,{...t,type:2,name:"struct{comptime comptime_int = 3, comptime comptime_int = 3}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:m},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:m}],methods:[],template:{memory:{array:wt},slots:{0:{structure:m,memory:{array:_t},slots:{0:{structure:r,memory:{array:De},address:1056312}}},1:{structure:m,memory:{array:At},slots:{0:{structure:r,memory:{array:De},address:1056312}}}}}},slot:58});Object.assign(G,{...t,type:11,name:"*const struct{comptime comptime_int = 3, comptime comptime_int = 3}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:57});const Ut=new Uint8Array([]),jt=new Uint8Array([52,30,16,0]),Vt=new Uint8Array([48,30,16,0]),Pt=new Uint8Array([1,0,0,0]);Object.assign(pe,{...t,type:2,name:"struct{comptime comptime_int = 0, comptime comptime_int = 1}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:m},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:m}],methods:[],template:{memory:{array:Ut},slots:{0:{structure:m,memory:{array:jt},slots:{0:{structure:r,memory:{array:qe},address:1056308}}},1:{structure:m,memory:{array:Vt},slots:{0:{structure:r,memory:{array:Pt},address:1056304}}}}}},slot:60});Object.assign(H,{...t,type:11,name:"*const struct{comptime comptime_int = 0, comptime comptime_int = 1}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:59});const It=new Uint8Array([]),kt=new Uint8Array([170,170,170,170]),xt=new Uint8Array([170,170,170,170]),Ct=new Uint8Array([170,170,170,170]);Object.assign(be,{...t,type:2,name:"struct{comptime type: type = @Vector(2, i32), comptime minValue: struct{comptime comptime_int = 0, comptime comptime_int = 0} = .{0, 0}, comptime maxValue: struct{comptime comptime_int = 3, comptime comptime_int = 3} = .{3, 3}, comptime defaultValue: struct{comptime comptime_int = 0, comptime comptime_int = 1} = .{0, 1}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:ue},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:L},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:G},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:H}],methods:[],template:{memory:{array:It},slots:{0:{structure:L,memory:{array:kt},slots:{0:{structure:le,memory:{array:l},address:-1431655766}}},1:{structure:G,memory:{array:xt},slots:{0:{structure:ye,memory:{array:l},address:-1431655766}}},2:{structure:H,memory:{array:Ct},slots:{0:{structure:pe,memory:{array:l},address:-1431655766}}}}}},slot:42});Object.assign(J,{...t,type:11,name:"*const struct{comptime type: type = @Vector(2, i32), comptime minValue: struct{comptime comptime_int = 0, comptime comptime_int = 0} = .{0, 0}, comptime maxValue: struct{comptime comptime_int = 3, comptime comptime_int = 3} = .{3, 3}, comptime defaultValue: struct{comptime comptime_int = 0, comptime comptime_int = 1} = .{0, 1}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:41});const vt=new Uint8Array([]),Et=new Uint8Array([170,170,170,170]),Kt=new Uint8Array([170,170,170,170]);Object.assign(fe,{...t,type:2,name:"struct{comptime amplitude: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = -100, comptime comptime_float = -100} = .{-100, -100}, comptime maxValue: struct{comptime comptime_float = 100, comptime comptime_float = 100} = .{100, 100}, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0}} = .{.type = @Vector(2, f32), .minValue = .{-100, -100}, .maxValue = .{100, 100}, .defaultValue = .{0, 0}}, comptime channels: struct{comptime type: type = @Vector(2, i32), comptime minValue: struct{comptime comptime_int = 0, comptime comptime_int = 0} = .{0, 0}, comptime maxValue: struct{comptime comptime_int = 3, comptime comptime_int = 3} = .{3, 3}, comptime defaultValue: struct{comptime comptime_int = 0, comptime comptime_int = 1} = .{0, 1}} = .{.type = @Vector(2, i32), .minValue = .{0, 0}, .maxValue = .{3, 3}, .defaultValue = .{0, 1}}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"amplitude",structure:B},{...e,type:8,isRequired:!1,slot:1,name:"channels",structure:J}],methods:[],template:{memory:{array:vt},slots:{0:{structure:B,memory:{array:Et},slots:{0:{structure:ce,memory:{array:l},address:-1431655766}}},1:{structure:J,memory:{array:Kt},slots:{0:{structure:be,memory:{array:l},address:-1431655766}}}}}},slot:15});Object.assign(N,{...t,type:11,name:"*struct{comptime amplitude: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = -100, comptime comptime_float = -100} = .{-100, -100}, comptime maxValue: struct{comptime comptime_float = 100, comptime comptime_float = 100} = .{100, 100}, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0}} = .{.type = @Vector(2, f32), .minValue = .{-100, -100}, .maxValue = .{100, 100}, .defaultValue = .{0, 0}}, comptime channels: struct{comptime type: type = @Vector(2, i32), comptime minValue: struct{comptime comptime_int = 0, comptime comptime_int = 0} = .{0, 0}, comptime maxValue: struct{comptime comptime_int = 3, comptime comptime_int = 3} = .{3, 3}, comptime defaultValue: struct{comptime comptime_int = 0, comptime comptime_int = 1} = .{0, 1}} = .{.type = @Vector(2, i32), .minValue = .{0, 0}, .maxValue = .{3, 3}, .defaultValue = .{0, 1}}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:14});const Ft=new Uint8Array([]),Dt=new Uint8Array([88,30,16,0]),Tt=new Uint8Array([4,0,0,0]);Object.assign(R,{...t,type:2,name:"struct{comptime channels: comptime_int = 4}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:m}],methods:[],template:{memory:{array:Ft},slots:{0:{structure:m,memory:{array:Dt},slots:{0:{structure:r,memory:{array:Tt},address:1056344}}}}}},slot:44});Object.assign(d,{...t,type:11,name:"*const struct{comptime channels: comptime_int = 4}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:R}],methods:[],template:null},slot:43});const Mt=new Uint8Array([]),$t=new Uint8Array([170,170,170,170]),Bt=new Uint8Array([170,170,170,170]);Object.assign(de,{...t,type:2,name:"struct{comptime src: struct{comptime channels: comptime_int = 4} = .{.channels = 4}, comptime src1: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:d},{...e,type:8,isRequired:!1,slot:1,name:"src1",structure:d}],methods:[],template:{memory:{array:Mt},slots:{0:{structure:d,memory:{array:$t},slots:{0:{structure:R,memory:{array:l},address:-1431655766}}},1:{structure:d,memory:{array:Bt},slots:{0:{structure:R,memory:{array:l},address:-1431655766}}}}}},slot:17});Object.assign(Q,{...t,type:11,name:"*struct{comptime src: struct{comptime channels: comptime_int = 4} = .{.channels = 4}, comptime src1: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:de}],methods:[],template:null},slot:16});const Lt=new Uint8Array([]),Gt=new Uint8Array([170,170,170,170]);Object.assign(he,{...t,type:2,name:"struct{comptime dst: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:d}],methods:[],template:{memory:{array:Lt},slots:{0:{structure:d,memory:{array:Gt},slots:{0:{structure:R,memory:{array:l},address:-1431655766}}}}}},slot:19});Object.assign(W,{...t,type:11,name:"*struct{comptime dst: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:he}],methods:[],template:null},slot:18});const Ht=new Uint8Array([]),Jt=new Uint8Array([]),Nt=new Uint8Array([12,251,15,0]),Qt=new Uint8Array([44,54,16,0]),Wt=new Uint8Array([110,101,116,46,110,105,99,111,112,116,101,114,101,46,102,105,108,116,101,114,115,0]),Xt=new Uint8Array([76,251,15,0]),Yt=new Uint8Array([34,54,16,0]),Zt=new Uint8Array([110,105,99,111,112,116,101,114,101,0]),es=new Uint8Array([140,251,15,0]),ts=new Uint8Array([1,0,0,0]),ss=new Uint8Array([228,251,15,0]),rs=new Uint8Array([242,53,16,0]),as=new Uint8Array([100,105,115,112,108,97,99,101,0]),is=new Uint8Array([170,170,170,170]),ms=new Uint8Array([170,170,170,170]),ns=new Uint8Array([170,170,170,170]);Object.assign(_e,{...t,type:2,name:"displace.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Ht}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:K},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:F},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:h},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:D},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:N},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:Q},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:W}],methods:[],template:{memory:{array:Jt},slots:{0:{structure:K,memory:{array:Nt},slots:{0:{structure:ee,memory:{array:Qt},slots:{0:{structure:Z,memory:{array:Wt},address:1062444}}}}},1:{structure:F,memory:{array:Xt},slots:{0:{structure:se,memory:{array:Yt},slots:{0:{structure:te,memory:{array:Zt},address:1062434}}}}},2:{structure:h,memory:{array:es},slots:{0:{structure:r,memory:{array:ts}}}},3:{structure:D,memory:{array:ss},slots:{0:{structure:ae,memory:{array:rs},slots:{0:{structure:re,memory:{array:as},address:1062386}}}}},4:{structure:N,memory:{array:is},slots:{0:{structure:fe,memory:{array:l},address:-1431655766}}},5:{structure:Q,memory:{array:ms},slots:{0:{structure:de,memory:{array:l},address:-1431655766}}},6:{structure:W,memory:{array:ns},slots:{0:{structure:he,memory:{array:l},address:-1431655766}}}}}},slot:1});Object.assign(q,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:24});Object.assign(A,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:23});Object.assign(U,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:A}],methods:[],template:null},slot:22});Object.assign(y,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:25});const os=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(ge,{...t,type:9,name:"displace.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:r},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:r}],methods:[],template:{memory:{array:os}}},slot:26});Object.assign(j,{...t,name:"bool",length:1,byteSize:1,align:0,instance:{members:[{...e,type:1,isRequired:!1,bitOffset:0,bitSize:1,byteSize:1,structure:j}],methods:[],template:null},slot:27});Object.assign(V,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:V}],methods:[],template:null},slot:28});Object.assign(Se,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:_}],methods:[],template:null},slot:45});const cs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),us=new Uint8Array([]),ls=new Uint8Array([168,252,15,0]),ys=new Uint8Array([4,0,0,0]);Object.assign(O,{...t,type:2,name:"displace.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:U},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ge},{...e,type:1,isRequired:!1,bitOffset:168,bitSize:1,byteSize:1,slot:4,name:"premultiplied",structure:j},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:5,name:"offset",structure:V}],methods:[],template:{memory:{array:cs}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:q},{...e,type:7,isRequired:!1,name:"FPixel",structure:Se},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:h}],methods:[],template:{memory:{array:us},slots:{0:{structure:h,memory:{array:ls},slots:{0:{structure:r,memory:{array:ys}}}}}}},slot:21});const ps=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),bs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),fs=new Uint8Array([0,0,0,0,0,0,0,0]),Y=new Uint8Array([]),ds=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),hs=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(P,{...t,type:2,name:"displace.KernelInput(u8,displace.kernel)",length:1,byteSize:48,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:O},{...e,type:6,isRequired:!1,bitOffset:192,bitSize:192,byteSize:24,slot:1,name:"src1",structure:O}],methods:[],template:{memory:{array:ps},slots:{0:{structure:O,memory:{array:bs},slots:{0:{structure:U,memory:{array:fs},slots:{0:{structure:A,memory:{array:Y}}}}}},1:{structure:O,memory:{array:ds},slots:{0:{structure:U,memory:{array:hs},slots:{0:{structure:A,memory:{array:Y}}}}}}}}},slot:20});Object.assign(ze,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:23});Object.assign(Oe,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:ze}],methods:[],template:null},slot:31});const gs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ss=new Uint8Array([]),zs=new Uint8Array([104,253,15,0]),Os=new Uint8Array([4,0,0,0]);Object.assign(X,{...t,type:2,name:"displace.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Oe},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ge},{...e,type:1,isRequired:!1,bitOffset:168,bitSize:1,byteSize:1,slot:4,name:"premultiplied",structure:j},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:5,name:"offset",structure:V}],methods:[],template:{memory:{array:gs}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:q},{...e,type:7,isRequired:!1,name:"FPixel",structure:Se},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:h}],methods:[],template:{memory:{array:Ss},slots:{0:{structure:h,memory:{array:zs},slots:{0:{structure:r,memory:{array:Os}}}}}}},slot:30});const Rs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),qs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ws=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(I,{...t,type:2,name:"displace.KernelOutput(u8,displace.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:X}],methods:[],template:{memory:{array:Rs},slots:{0:{structure:X,memory:{array:qs},slots:{0:{structure:Oe,memory:{array:ws},slots:{0:{structure:ze,memory:{array:Y}}}}}}}}},slot:29});const _s=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0]);Object.assign(k,{...t,type:2,name:"displace.KernelParameters(displace.kernel)",length:1,byteSize:16,align:3,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"amplitude",structure:ie},{...e,type:6,isRequired:!1,bitOffset:64,bitSize:64,byteSize:8,slot:1,name:"channels",structure:ue}],methods:[],template:{memory:{array:_s}}},slot:32});Object.assign(Ae,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(displace.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:47});Object.assign(Ue,{...t,type:7,name:"@typeInfo(@typeInfo(@TypeOf(displace.createOutput)).Fn.return_type.?).ErrorUnion.error_set!displace.KernelOutput(u8,displace.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:I},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Ae}],methods:[],template:null},slot:37});Object.assign(je,{...t,type:3,name:"createOutput",length:1,byteSize:104,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:160,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:6,bitOffset:192,bitSize:384,byteSize:48,slot:2,name:"2",structure:P},{...e,type:6,bitOffset:0,bitSize:128,byteSize:16,slot:3,name:"3",structure:k},{...e,type:6,bitOffset:576,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Ue}],methods:[],template:null},slot:35});Object.assign(Ve,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(displace.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:48});Object.assign(Pe,{...t,type:7,name:"@typeInfo(@typeInfo(@TypeOf(displace.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set!displace.KernelOutput(u8,displace.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:I},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Ve}],methods:[],template:null},slot:38});Object.assign(Ie,{...t,type:3,name:"createPartialOutput",length:1,byteSize:112,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:160,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:3,bitOffset:192,bitSize:32,byteSize:4,slot:2,name:"2",structure:y},{...e,type:3,bitOffset:224,bitSize:32,byteSize:4,slot:3,name:"3",structure:y},{...e,type:6,bitOffset:256,bitSize:384,byteSize:48,slot:4,name:"4",structure:P},{...e,type:6,bitOffset:0,bitSize:128,byteSize:16,slot:5,name:"5",structure:k},{...e,type:6,bitOffset:640,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Pe}],methods:[],template:null},slot:36});const As={argStruct:je,thunk:3,name:"createOutput"},Us={argStruct:Ie,thunk:9,name:"createPartialOutput"};Object.assign(ke,{...t,type:2,name:"displace",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Y}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:_e},{...e,type:7,isRequired:!1,name:"Input",structure:P},{...e,type:7,isRequired:!1,name:"Output",structure:I},{...e,type:7,isRequired:!1,name:"Parameters",structure:k}],methods:[As,Us],template:null},slot:0});const js=[g,Z,ee,K,te,se,F,r,h,re,ae,D,_,ie,b,u,me,T,ne,M,oe,$,ce,B,ue,m,le,L,ye,G,pe,H,be,J,fe,N,R,d,de,Q,he,W,_e,q,A,U,y,ge,j,V,Se,O,P,ze,Oe,X,I,k,Ae,Ue,je,Ve,Pe,Ie,ke],Vs=mt(js),Ps=ke.constructor,Is=(async()=>{const n=new URL("displace-0746ca4a.wasm",import.meta.url).href;return fetch(n)})();nt(Is,{...Vs,writeBack:!0});const{createOutput:Ds,createPartialOutput:ks,kernel:we,Input:xs,Output:Ts,Parameters:Ms}=Ps;function Cs(n,c,a,s,i={},S={}){if(Array.isArray(i)){const f=i;i={};for(const[p,z]of Object.keys(we.inputImages).entries())i[z]=f[p]}const x=new xs(void 0),C=Object.keys(we.inputImages),o=[];let w;for(const f of C){let p=i[f];if(p||(C.length===1&&["data","width","height"].every(z=>!!i[z])?p=i:o.push(f)),x[f]=p,w){if(p.colorSpace!==w)throw new Error(`Input images must all use the same color space: ${w}`)}else w=p.colorSpace}if(o.length>0)throw new Error(`Missing input image${o.length>1?"s":""}: ${o.join(", ")}`);const Re=ks(n,c,a,s,x,S),xe=f=>{const p=Object.keys(f),z={};for(const Ce of p){const{data:{typedArray:v},width:ve,height:Me}=f[Ce];let E;if(typeof ImageData=="function"){const $e=new Uint8ClampedArray(v.buffer,v.byteOffset,v.byteLength);E=new ImageData($e,ve,s,{colorSpace:w})}else E={data:v,width:ve,height:Me};if(p.length===1)return E;z[Ce]=E}return z};return Re[Symbol.toStringTag]==="Promise"?Re.then(xe):xe(Re)}function vs(){const n={};for(let[c,a]of Object.entries(we)){if(c==="parameters"){const s={};for(const[i,S]of Object.entries(a)){const x=s[i]={};for(let[C,o]of Object.entries(S))typeof o=="object"?"string"in o?o=o.string:o=Te(o):typeof o=="function"&&(o=Es(o.name)),x[C]=o}a=s}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());n[c]=a}return n}function Te(n){const c=[];for(let[a,s]of Object.entries(n))typeof s=="object"&&(s=Te(s)),c[a]=s;return c}function Es(n){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[n]}onmessage=n=>{const[c,a,...s]=n.data;Ks(c,s).then(([i,S])=>{postMessage([c,a,i],{transfer:S})}).catch(i=>{postMessage(["error",a,i])})};async function Ks(n,c){switch(n){case"getKernelInfo":return[vs(...c)];case"createPartialImageData":const s=await Cs(...c),i=[];if("data"in s&&"width"in s&&"height"in s)i.push(s.data.buffer);else for(const S of Object.entries(s))i.push(s.data.buffer);return[s,i];default:throw new Error(`Unknown function: ${n}`)}}
