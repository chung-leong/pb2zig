import{u as pe,a as fe,b as de,c as Se,d as he,e as ge,f as ze,g as Oe,h as we,i as Re,j as qe,k as Ae,l as Ue,m as je,n as Pe,o as ke,p as Ie,q as Ve}from"./index-076239a4.js";pe();fe();de();Se();he();ge();ze();Oe();we();Re();qe();Ae();Ue();je();Pe();ke();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},p={},M={},_={},V={},T={},$={},C={},m={},c={},B={},L={},v={},G={},E={},h={},b={},H={},x={},J={},K={},ee={},g={},O={},w={},u={},N={},R={},D={},Q={},S={},q={},W={},X={},F={},A={},U={},te={},se={},re={},ne={},ae={},ie={},oe={};Object.assign(p,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:5});Object.assign(M,{...t,type:1,name:"[14:0]u8",length:14,byteSize:15,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:4});Object.assign(_,{...t,type:11,name:"*const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[],template:null},slot:3});Object.assign(V,{...t,type:11,name:"*const *const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[],template:null},slot:2});Object.assign(T,{...t,type:1,name:"[10:0]u8",length:10,byteSize:11,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:8});Object.assign($,{...t,type:11,name:"*const [10:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[],template:null},slot:7});Object.assign(C,{...t,type:11,name:"*const *const [10:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[],template:null},slot:6});Object.assign(m,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[],template:null},slot:10});Object.assign(c,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:m}],methods:[],template:null},slot:9});Object.assign(B,{...t,type:1,name:"[27:0]u8",length:27,byteSize:28,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:13});Object.assign(L,{...t,type:11,name:"*const [27:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:B}],methods:[],template:null},slot:12});Object.assign(v,{...t,type:11,name:"*const *const [27:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[],template:null},slot:11});const Ce=new Uint8Array;Object.assign(G,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Ce}}},slot:15});Object.assign(E,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:G}],methods:[],template:null},slot:14});const ve=new Uint8Array,Ee=new Uint8Array([16,250,15,0]),xe=new Uint8Array([4,0,0,0]);Object.assign(h,{...t,type:2,name:"Struct0007",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:c}],methods:[],template:{memory:{array:ve},slots:{0:{structure:c,memory:{array:Ee},slots:{0:{structure:m,memory:{array:xe}}}}}}},slot:37});Object.assign(b,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:h}],methods:[],template:null},slot:36});const Ke=new Uint8Array,De=new Uint8Array([170,170,170,170]),Fe=new Uint8Array,Me=new Uint8Array([170,170,170,170]),_e=new Uint8Array;Object.assign(H,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src1",structure:b},{...e,type:8,isRequired:!1,slot:1,name:"src2",structure:b}],methods:[],template:{memory:{array:Ke},slots:{0:{structure:b,memory:{array:De},slots:{0:{structure:h,memory:{array:Fe}}}},1:{structure:b,memory:{array:Me},slots:{0:{structure:h,memory:{array:_e}}}}}}},slot:17});Object.assign(x,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[],template:null},slot:16});const Te=new Uint8Array,$e=new Uint8Array([170,170,170,170]),Be=new Uint8Array;Object.assign(J,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:b}],methods:[],template:{memory:{array:Te},slots:{0:{structure:b,memory:{array:$e},slots:{0:{structure:h,memory:{array:Be}}}}}}},slot:19});Object.assign(K,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:J}],methods:[],template:null},slot:18});const Le=new Uint8Array,Ge=new Uint8Array,He=new Uint8Array([236,35,16,0]),Je=new Uint8Array([151,35,16,0]),Ne=new Uint8Array([99,111,109,46,113,117,97,115,105,109,111,110,100,111,0]),Qe=new Uint8Array([232,35,16,0]),We=new Uint8Array([129,35,16,0]),Xe=new Uint8Array([81,117,97,115,105,109,111,110,100,111,0]),Ye=new Uint8Array([228,35,16,0]),Ze=new Uint8Array([1,0,0,0]),et=new Uint8Array([224,35,16,0]),tt=new Uint8Array([84,35,16,0]),st=new Uint8Array([65,108,116,101,114,110,97,116,105,118,101,32,67,111,108,111,114,32,66,108,101,110,100,109,111,100,101,0]),rt=new Uint8Array([170,170,170,170]),nt=new Uint8Array,at=new Uint8Array([170,170,170,170]),it=new Uint8Array,ot=new Uint8Array([170,170,170,170]),ut=new Uint8Array;Object.assign(ee,{...t,type:2,name:"blendmode-color2.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Le}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:V},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:C},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:c},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:v},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:E},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:x},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:K}],methods:[],template:{memory:{array:Ge},slots:{0:{structure:V,memory:{array:He},slots:{0:{structure:_,memory:{array:Je},slots:{0:{structure:M,memory:{array:Ne}}}}}},1:{structure:C,memory:{array:Qe},slots:{0:{structure:$,memory:{array:We},slots:{0:{structure:T,memory:{array:Xe}}}}}},2:{structure:c,memory:{array:Ye},slots:{0:{structure:m,memory:{array:Ze}}}},3:{structure:v,memory:{array:et},slots:{0:{structure:L,memory:{array:tt},slots:{0:{structure:B,memory:{array:st}}}}}},4:{structure:E,memory:{array:rt},slots:{0:{structure:G,memory:{array:nt}}}},5:{structure:x,memory:{array:at},slots:{0:{structure:H,memory:{array:it}}}},6:{structure:K,memory:{array:ot},slots:{0:{structure:J,memory:{array:ut}}}}}}},slot:1});Object.assign(g,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:24});Object.assign(O,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:g}],methods:[],template:null},slot:23});Object.assign(w,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:O}],methods:[],template:null},slot:22});Object.assign(u,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:u}],methods:[],template:null},slot:25});const lt=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(N,{...t,type:9,name:"blendmode-color2.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:m},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:m}],methods:[],template:{memory:{array:lt}}},slot:26});Object.assign(R,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:R}],methods:[],template:null},slot:27});Object.assign(D,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:D}],methods:[],template:null},slot:41});Object.assign(Q,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:D}],methods:[],template:null},slot:38});const mt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ct=new Uint8Array,yt=new Uint8Array([28,35,16,0]),bt=new Uint8Array([4,0,0,0]);Object.assign(S,{...t,type:2,name:"blendmode-color2.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:w},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:N},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:{memory:{array:mt}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:g},{...e,type:7,isRequired:!1,name:"FPixel",structure:Q},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:c}],methods:[],template:{memory:{array:ct},slots:{0:{structure:c,memory:{array:yt},slots:{0:{structure:m,memory:{array:bt}}}}}}},slot:21});const pt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ft=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),dt=new Uint8Array([0,0,0,0,0,0,0,0]),St=new Uint8Array,ht=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),gt=new Uint8Array([0,0,0,0,0,0,0,0]),zt=new Uint8Array;Object.assign(q,{...t,type:2,name:"blendmode-color2.KernelInput(u8,blendmode-color2.kernel)",length:1,byteSize:48,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src1",structure:S},{...e,type:6,isRequired:!1,bitOffset:192,bitSize:192,byteSize:24,slot:1,name:"src2",structure:S}],methods:[],template:{memory:{array:pt},slots:{0:{structure:S,memory:{array:ft},slots:{0:{structure:w,memory:{array:dt},address:1047024,slots:{0:{structure:O,memory:{array:St},address:0}}}}},1:{structure:S,memory:{array:ht},slots:{0:{structure:w,memory:{array:gt},address:1047048,slots:{0:{structure:O,memory:{array:zt},address:0}}}}}}}},slot:20});Object.assign(W,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:g}],methods:[],template:null},slot:23});Object.assign(X,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:W}],methods:[],template:null},slot:30});const Ot=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),wt=new Uint8Array,Rt=new Uint8Array([28,35,16,0]),qt=new Uint8Array([4,0,0,0]);Object.assign(F,{...t,type:2,name:"blendmode-color2.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:X},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:N},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:{memory:{array:Ot}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:g},{...e,type:7,isRequired:!1,name:"FPixel",structure:Q},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:c}],methods:[],template:{memory:{array:wt},slots:{0:{structure:c,memory:{array:Rt},slots:{0:{structure:m,memory:{array:qt}}}}}}},slot:29});const At=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ut=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),jt=new Uint8Array([0,0,0,0,0,0,0,0]),Pt=new Uint8Array;Object.assign(A,{...t,type:2,name:"blendmode-color2.KernelOutput(u8,blendmode-color2.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:F}],methods:[],template:{memory:{array:At},slots:{0:{structure:F,memory:{array:Ut},slots:{0:{structure:X,memory:{array:jt},address:1046656,slots:{0:{structure:W,memory:{array:Pt},address:0}}}}}}}},slot:28});const kt=new Uint8Array;Object.assign(U,{...t,type:2,name:"blendmode-color2.KernelParameters(blendmode-color2.kernel)",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:kt}}},slot:31});Object.assign(te,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(blendmode-color2.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:39});Object.assign(se,{...t,type:7,name:"ErrorSet0000!blendmode-color2.KernelOutput(u8,blendmode-color2.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:A},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:te}],methods:[],template:null},slot:34});Object.assign(re,{...t,type:3,name:"createOutput",length:1,byteSize:84,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"0",structure:u},{...e,type:3,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"1",structure:u},{...e,type:6,bitOffset:64,bitSize:384,byteSize:48,slot:2,name:"2",structure:q},{...e,type:6,bitOffset:672,bitSize:0,byteSize:0,slot:3,name:"3",structure:U},{...e,type:6,bitOffset:448,bitSize:224,byteSize:28,slot:4,name:"retval",structure:se}],methods:[],template:null},slot:32});Object.assign(ne,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(blendmode-color2.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:40});Object.assign(ae,{...t,type:7,name:"ErrorSet0001!blendmode-color2.KernelOutput(u8,blendmode-color2.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:A},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:ne}],methods:[],template:null},slot:35});Object.assign(ie,{...t,type:3,name:"createPartialOutput",length:1,byteSize:92,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"0",structure:u},{...e,type:3,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"1",structure:u},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:2,name:"2",structure:u},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:3,name:"3",structure:u},{...e,type:6,bitOffset:128,bitSize:384,byteSize:48,slot:4,name:"4",structure:q},{...e,type:6,bitOffset:736,bitSize:0,byteSize:0,slot:5,name:"5",structure:U},{...e,type:6,bitOffset:512,bitSize:224,byteSize:28,slot:6,name:"retval",structure:ae}],methods:[],template:null},slot:33});const It=new Uint8Array,Vt={argStruct:re,thunk:1,name:"createOutput"},Ct={argStruct:ie,thunk:5,name:"createPartialOutput"};Object.assign(oe,{...t,type:2,name:"blendmode-color2",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:It}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:ee},{...e,type:7,isRequired:!1,name:"Input",structure:q},{...e,type:7,isRequired:!1,name:"Output",structure:A},{...e,type:7,isRequired:!1,name:"Parameters",structure:U}],methods:[Vt,Ct],template:null},slot:0});const vt=[p,M,_,V,T,$,C,m,c,B,L,v,G,E,h,b,H,x,J,K,ee,g,O,w,u,N,R,D,Q,S,q,W,X,F,A,U,te,se,re,ne,ae,ie,oe],Et=Ie(vt),xt=oe.constructor,Kt=(async()=>{const a=new URL("blendmode-color2-7b9d7226.wasm",import.meta.url).href;return fetch(a)})();Ve(Kt,{...Et,writeBack:!0});const{createOutput:Lt,createPartialOutput:Dt,kernel:Z,Input:Ft,Output:Gt,Parameters:Ht}=xt;function Mt(a,o,r,s,n={},f={}){if(Array.isArray(n)){const y=n;n={};for(const[l,d]of Object.keys(Z.inputImages).entries())n[d]=y[l]}const j=new Ft(void 0),P=Object.keys(Z.inputImages),i=[];let z;for(const y of P){let l=n[y];if(l||(P.length===1&&["data","width","height"].every(d=>!!n[d])?l=n:i.push(y)),j[y]=l,z){if(l.colorSpace!==z)throw new Error(`Input images must all use the same color space: ${z}`)}else z=l.colorSpace}if(i.length>0)throw new Error(`Missing input image${i.length>1?"s":""}: ${i.join(", ")}`);const Y=Dt(a,o,r,s,j,f),ue=y=>{const l=Object.keys(y),d={};for(const le of l){const{data:{typedArray:k},width:me,height:ye}=y[le];let I;if(typeof ImageData=="function"){const be=new Uint8ClampedArray(k.buffer,k.byteOffset,k.byteLength);I=new ImageData(be,me,s,{colorSpace:z})}else I={data:k,width:me,height:ye};if(l.length===1)return I;d[le]=I}return d};return Y[Symbol.toStringTag]==="Promise"?Y.then(ue):ue(Y)}function _t(){const a={};for(let[o,r]of Object.entries(Z)){if(o==="parameters"){const s={};for(const[n,f]of Object.entries(r)){const j=s[n]={};for(let[P,i]of Object.entries(f))typeof i=="object"?"string"in i?i=i.string:i=ce(i):typeof i=="function"&&(i=Tt(i.name)),j[P]=i}r=s}else typeof r=="object"&&("string"in r?r=r.string:r=r.valueOf());a[o]=r}return a}function ce(a){const o=[];for(let[r,s]of Object.entries(a))typeof s=="object"&&(s=ce(s)),o[r]=s;return o}function Tt(a){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[a]}onmessage=a=>{const[o,r,...s]=a.data;$t(o,s).then(([n,f])=>{postMessage([o,r,n],{transfer:f})}).catch(n=>{postMessage(["error",r,n])})};async function $t(a,o){switch(a){case"getKernelInfo":return[_t(...o)];case"createPartialImageData":const s=await Mt(...o),n=[];if("data"in s&&"width"in s&&"height"in s)n.push(s.data.buffer);else for(const f of Object.entries(s))n.push(s.data.buffer);return[s,n];default:throw new Error(`Unknown function: ${a}`)}}
