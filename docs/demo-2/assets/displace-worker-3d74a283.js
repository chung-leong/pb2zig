import{u as Us,a as Ps,b as Vs,c as Is,d as Rs,e as ks,f as qs,g as vs,h as Es,i as xs,j as Cs,k as Ks,l as _s,m as Ds,n as Fs,p as Ms,o as Ts,q as $s,r as Ls,s as Bs}from"./index-6ff6e058.js";Us();Cs();Ks();Ps();Vs();_s();Ds();Fs();Ms();Is();Rs();ks();qs();Ts();Bs();vs();$s();Es();xs();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},S={},T={},$={},L={},B={},r={},b={},G={},H={},c={},g={},J={},N={},Q={},P={},W={},X={},Y={},Z={},tt={},F={},et={},st={},rt={},f={},at={},nt={},lt={},R={},it={},w={},y={},O={},V={},pt={},h={},k={},ot={},q={},ct={},v={},E={},I={},gt={},Ot={},M={},ft={},St={},jt={},Yt={},zt={},Zt={},dt={},te={},ee={},ht={},se={},wt={},re={},ae={},At={},ne={},Ut={},ie={},oe={},Pt={},ce={},Vt={},It={},Rt={},ue={},kt={},me={},qt={},ye={},be={},vt={},le={},Et={},pe={},ge={},xt={},Oe={},Ct={},fe={},Se={},Kt={},je={},_t={},Dt={},Ft={},ze={},Mt={},Tt={},de={},x={},he={},we={},$t={},Lt={},Ae={},Bt={},Ue={},Pe={},Ve={},Ie={},Re={},ke={},qe={},ve={},Ee={},xe={},Ce={},Ke={},_e={},De={},Fe={},Me={},Te={},ut={},$e={},Le={},Gt={},Be={},Ht={},Ge={},He={},Je={},Ne={},Qe={},We={},Xe={},Ye={},Ze={},Jt={},ts={},es={},ss={},rs={},as={},ns={},is={},os={},cs={},us={},Nt={},ms={},ys={},bs={},ls={},ps={},gs={},Os={},fs={},Ss={},js={},Gs=new Uint8Array,Hs=new Uint8Array([0,0,0,0,0,0,89,192]),Js=new Uint8Array,Ns=new Uint8Array([0,0,0,0,0,0,89,192]),Qs=new Uint8Array,Ws=new Uint8Array([0,0,0,0,0,0,89,64]),Xs=new Uint8Array,Ys=new Uint8Array([0,0,0,0,0,0,89,64]),Zs=new Uint8Array,tr=new Uint8Array([0,0,0,0,0,0,0,0]),er=new Uint8Array,sr=new Uint8Array([0,0,0,0,0,0,0,0]),rr=new Uint8Array,ar=new Uint8Array,nr=new Uint8Array,ir=new Uint8Array,or=new Uint8Array,cr=new Uint8Array([0]),ur=new Uint8Array,mr=new Uint8Array([0]),yr=new Uint8Array,br=new Uint8Array([3]),lr=new Uint8Array,pr=new Uint8Array([3]),gr=new Uint8Array,Or=new Uint8Array([0]),fr=new Uint8Array,Sr=new Uint8Array([1]),jr=new Uint8Array,zr=new Uint8Array,dr=new Uint8Array,hr=new Uint8Array,wr=new Uint8Array,Ar=new Uint8Array,Ur=new Uint8Array,Pr=new Uint8Array([4]),Vr=new Uint8Array,Ir=new Uint8Array,Rr=new Uint8Array,kr=new Uint8Array([240,4,0,1]),qr=new Uint8Array([110,101,116,46,110,105,99,111,112,116,101,114,101,46,102,105,108,116,101,114,115,0]),vr=new Uint8Array([17,5,0,1]),Er=new Uint8Array([110,105,99,111,112,116,101,114,101,0]),xr=new Uint8Array,Cr=new Uint8Array([1]),Kr=new Uint8Array([44,5,0,1]),_r=new Uint8Array([100,105,115,112,108,97,99,101,0]),Dr=new Uint8Array,Fr=new Uint8Array,Mr=new Uint8Array,Tr=new Uint8Array([0]),$r=new Uint8Array([1]),zs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Lr=new Uint8Array,Br=new Uint8Array,Gr=new Uint8Array,Hr=new Uint8Array,Jr=new Uint8Array([4]),C=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ds=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Nr=new Uint8Array,Qr=new Uint8Array,Wr=new Uint8Array,Xr=new Uint8Array,Yr=new Uint8Array([4]),Qt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Zr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0]),ta=new Uint8Array([27,0]),ea=new Uint8Array,sa=new Uint8Array,ra=new Uint8Array,aa=new Uint8Array;Object.assign(Yt,{slots:{0:zt,1:dt}});Object.assign(zt,{structure:c,memory:{array:Gs},slots:{0:Zt}});Object.assign(Zt,{structure:g,memory:{array:Hs}});Object.assign(dt,{structure:c,memory:{array:Js},slots:{0:te}});Object.assign(te,{structure:g,memory:{array:Ns}});Object.assign(ee,{slots:{0:ht,1:wt}});Object.assign(ht,{structure:c,memory:{array:Qs},slots:{0:se}});Object.assign(se,{structure:g,memory:{array:Ws}});Object.assign(wt,{structure:c,memory:{array:Xs},slots:{0:re}});Object.assign(re,{structure:g,memory:{array:Ys}});Object.assign(ae,{slots:{0:At,1:Ut}});Object.assign(At,{structure:c,memory:{array:Zs},slots:{0:ne}});Object.assign(ne,{structure:g,memory:{array:tr}});Object.assign(Ut,{structure:c,memory:{array:er},slots:{0:ie}});Object.assign(ie,{structure:g,memory:{array:sr}});Object.assign(oe,{slots:{0:Pt,1:Vt,2:It,3:Rt}});Object.assign(Pt,{structure:s,memory:{array:rr},slots:{0:ce}});Object.assign(ce,{structure:W});Object.assign(Vt,{structure:J,memory:{array:ar},slots:{0:zt,1:dt}});Object.assign(It,{structure:N,memory:{array:nr},slots:{0:ht,1:wt}});Object.assign(Rt,{structure:Q,memory:{array:ir},slots:{0:At,1:Ut}});Object.assign(ue,{slots:{0:kt,1:qt}});Object.assign(kt,{structure:r,memory:{array:or},slots:{0:me}});Object.assign(me,{structure:b,memory:{array:cr}});Object.assign(qt,{structure:r,memory:{array:ur},slots:{0:ye}});Object.assign(ye,{structure:b,memory:{array:mr}});Object.assign(be,{slots:{0:vt,1:Et}});Object.assign(vt,{structure:r,memory:{array:yr},slots:{0:le}});Object.assign(le,{structure:b,memory:{array:br}});Object.assign(Et,{structure:r,memory:{array:lr},slots:{0:pe}});Object.assign(pe,{structure:b,memory:{array:pr}});Object.assign(ge,{slots:{0:xt,1:Ct}});Object.assign(xt,{structure:r,memory:{array:gr},slots:{0:Oe}});Object.assign(Oe,{structure:b,memory:{array:Or}});Object.assign(Ct,{structure:r,memory:{array:fr},slots:{0:fe}});Object.assign(fe,{structure:b,memory:{array:Sr}});Object.assign(Se,{slots:{0:Kt,1:_t,2:Dt,3:Ft}});Object.assign(Kt,{structure:s,memory:{array:jr},slots:{0:je}});Object.assign(je,{structure:et});Object.assign(_t,{structure:Y,memory:{array:zr},slots:{0:kt,1:qt}});Object.assign(Dt,{structure:Z,memory:{array:dr},slots:{0:vt,1:Et}});Object.assign(Ft,{structure:tt,memory:{array:hr},slots:{0:xt,1:Ct}});Object.assign(ze,{slots:{0:Mt,1:Tt}});Object.assign(Mt,{structure:X,memory:{array:wr},slots:{0:Pt,1:Vt,2:It,3:Rt}});Object.assign(Tt,{structure:st,memory:{array:Ar},slots:{0:Kt,1:_t,2:Dt,3:Ft}});Object.assign(de,{slots:{0:x}});Object.assign(x,{structure:r,memory:{array:Ur},slots:{0:he}});Object.assign(he,{structure:b,memory:{array:Pr}});Object.assign(we,{slots:{0:$t,1:Lt}});Object.assign($t,{structure:f,memory:{array:Vr},slots:{0:x}});Object.assign(Lt,{structure:f,memory:{array:Ir},slots:{0:x}});Object.assign(Ae,{slots:{0:Bt}});Object.assign(Bt,{structure:f,memory:{array:Rr},slots:{0:x}});Object.assign(Ue,{slots:{0:Pe,1:Ie,2:ke,3:ve,4:xe,5:Ce,6:Ke}});Object.assign(Pe,{structure:$,memory:{array:kr},slots:{0:Ve}});Object.assign(Ve,{structure:T,memory:{array:qr},reloc:16778480,const:!0});Object.assign(Ie,{structure:B,memory:{array:vr},slots:{0:Re}});Object.assign(Re,{structure:L,memory:{array:Er},reloc:16778513,const:!0});Object.assign(ke,{structure:r,memory:{array:xr},slots:{0:qe}});Object.assign(qe,{structure:b,memory:{array:Cr}});Object.assign(ve,{structure:H,memory:{array:Kr},slots:{0:Ee}});Object.assign(Ee,{structure:G,memory:{array:_r},reloc:16778540,const:!0});Object.assign(xe,{structure:rt,memory:{array:Dr},slots:{0:Mt,1:Tt}});Object.assign(Ce,{structure:at,memory:{array:Fr},slots:{0:$t,1:Lt}});Object.assign(Ke,{structure:nt,memory:{array:Mr},slots:{0:Bt}});Object.assign(_e,{slots:{0:De,1:Fe}});Object.assign(De,{structure:O,memory:{array:Tr}});Object.assign(Fe,{structure:O,memory:{array:$r}});Object.assign(Me,{memory:{array:zs},slots:{0:Te}});Object.assign(Te,{structure:w,memory:{array:zs,offset:0,length:8},slots:{0:ut}});Object.assign(ut,{structure:it,memory:{array:Lr},reloc:0,const:!0});Object.assign($e,{slots:{0:Le,1:Be,2:Ge}});Object.assign(Le,{structure:s,memory:{array:Br},slots:{0:Gt}});Object.assign(Gt,{structure:R});Object.assign(Be,{structure:s,memory:{array:Gr},slots:{0:Ht}});Object.assign(Ht,{structure:pt});Object.assign(Ge,{structure:r,memory:{array:Hr},slots:{0:He}});Object.assign(He,{structure:b,memory:{array:Jr}});Object.assign(Je,{memory:{array:C},slots:{0:Ne,1:We}});Object.assign(Ne,{structure:h,memory:{array:C,offset:0,length:24},slots:{0:Qe}});Object.assign(Qe,{structure:w,memory:{array:C,offset:0,length:8},slots:{0:ut}});Object.assign(We,{structure:h,memory:{array:C,offset:24,length:24},slots:{0:Xe}});Object.assign(Xe,{structure:w,memory:{array:C,offset:24,length:8},slots:{0:ut}});Object.assign(Ye,{memory:{array:ds},slots:{0:Ze}});Object.assign(Ze,{structure:q,memory:{array:ds,offset:0,length:8},slots:{0:Jt}});Object.assign(Jt,{structure:ot,memory:{array:Nr},reloc:0});Object.assign(ts,{slots:{0:es,1:ss,2:rs}});Object.assign(es,{structure:s,memory:{array:Qr},slots:{0:Gt}});Object.assign(ss,{structure:s,memory:{array:Wr},slots:{0:Ht}});Object.assign(rs,{structure:r,memory:{array:Xr},slots:{0:as}});Object.assign(as,{structure:b,memory:{array:Yr}});Object.assign(ns,{memory:{array:Qt},slots:{0:is}});Object.assign(is,{structure:ct,memory:{array:Qt},slots:{0:os}});Object.assign(os,{structure:q,memory:{array:Qt,offset:0,length:8},slots:{0:Jt}});Object.assign(cs,{memory:{array:Zr}});Object.assign(us,{slots:{0:Nt}});Object.assign(Nt,{structure:I,memory:{array:ta}});Object.assign(ms,{slots:{0:Nt}});Object.assign(ys,{slots:{0:bs,1:ps,2:Os,3:Ss}});Object.assign(bs,{structure:s,memory:{array:ea},slots:{0:ls}});Object.assign(ls,{structure:lt});Object.assign(ps,{structure:s,memory:{array:sa},slots:{0:gs}});Object.assign(gs,{structure:k});Object.assign(Os,{structure:s,memory:{array:ra},slots:{0:fs}});Object.assign(fs,{structure:v});Object.assign(Ss,{structure:s,memory:{array:aa},slots:{0:js}});Object.assign(js,{structure:E});const na={argStruct:Ot,thunkId:2,name:"createOutput"},ia={argStruct:St,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(S,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(T,{...e,type:1,name:"[21:0]u8",length:21,byteSize:22,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign($,{...e,type:13,name:"*const [21:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[]}});Object.assign(L,{...e,type:1,name:"[9:0]u8",length:9,byteSize:10,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(B,{...e,type:13,name:"*const [9:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[]}});Object.assign(r,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(b,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:b}],methods:[]}});Object.assign(G,{...e,type:1,name:"[8:0]u8",length:8,byteSize:9,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(H,{...e,type:13,name:"*const [8:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:G}],methods:[]}});Object.assign(c,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:c}],methods:[]}});Object.assign(g,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:g}],methods:[]}});Object.assign(J,{...e,type:2,name:"Struct909833941",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:c},{...t,type:9,slot:1,name:"1",structure:c}],methods:[],template:Yt}});Object.assign(N,{...e,type:2,name:"Struct2155520631",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:c},{...t,type:9,slot:1,name:"1",structure:c}],methods:[],template:ee}});Object.assign(Q,{...e,type:2,name:"Struct738220547",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:c},{...t,type:9,slot:1,name:"1",structure:c}],methods:[],template:ae}});Object.assign(P,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(W,{...e,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(X,{...e,type:2,name:"Struct16988915",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:J},{...t,type:9,slot:2,name:"maxValue",structure:N},{...t,type:9,slot:3,name:"defaultValue",structure:Q}],methods:[],template:oe}});Object.assign(Y,{...e,type:2,name:"Struct3865421952",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:r},{...t,type:9,slot:1,name:"1",structure:r}],methods:[],template:ue}});Object.assign(Z,{...e,type:2,name:"Struct2193710746",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:r},{...t,type:9,slot:1,name:"1",structure:r}],methods:[],template:be}});Object.assign(tt,{...e,type:2,name:"Struct2120481315",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:r},{...t,type:9,slot:1,name:"1",structure:r}],methods:[],template:ge}});Object.assign(F,{...e,name:"i32",byteSize:4,align:4,instance:{members:[{...t,type:2,bitOffset:0,bitSize:32,byteSize:4,structure:F}],methods:[]}});Object.assign(et,{...e,type:15,name:"@Vector(2, i32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:2,bitSize:32,byteSize:4,structure:F}],methods:[]}});Object.assign(st,{...e,type:2,name:"Struct3745769591",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:Y},{...t,type:9,slot:2,name:"maxValue",structure:Z},{...t,type:9,slot:3,name:"defaultValue",structure:tt}],methods:[],template:Se}});Object.assign(rt,{...e,type:2,name:"Struct1852027982",align:1,instance:{members:[{...t,type:9,slot:0,name:"amplitude",structure:X},{...t,type:9,slot:1,name:"channels",structure:st}],methods:[],template:ze}});Object.assign(f,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:r}],methods:[],template:de}});Object.assign(at,{...e,type:2,name:"Struct2237388294",align:1,instance:{members:[{...t,type:9,slot:0,name:"src",structure:f},{...t,type:9,slot:1,name:"src1",structure:f}],methods:[],template:we}});Object.assign(nt,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:9,slot:0,name:"dst",structure:f}],methods:[],template:Ae}});Object.assign(lt,{...e,type:2,name:"displace.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:$},{...t,type:9,slot:1,name:"vendor",structure:B},{...t,type:9,slot:2,name:"version",structure:r},{...t,type:9,slot:3,name:"description",structure:H},{...t,type:9,slot:4,name:"parameters",structure:rt},{...t,type:9,slot:5,name:"inputImages",structure:at},{...t,type:9,slot:6,name:"outputImages",structure:nt}],methods:[],template:Ue}});Object.assign(R,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(it,{...e,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(w,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:it}],methods:[]}});Object.assign(y,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[]}});Object.assign(O,{...e,type:11,name:"displace.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:O},{...t,type:9,slot:1,name:"display-p3",structure:O}],methods:[],template:_e}});Object.assign(V,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(pt,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(h,{...e,type:2,name:"displace.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:w},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:Me},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:r}],methods:[],template:$e}});Object.assign(k,{...e,type:2,name:"displace.KernelInput(u8,displace.kernel)",byteSize:48,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:h},{...t,type:7,bitOffset:192,bitSize:192,byteSize:24,slot:1,name:"src1",structure:h}],methods:[],template:Je}});Object.assign(ot,{...e,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(q,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:ot}],methods:[]}});Object.assign(ct,{...e,type:2,name:"displace.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:q},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:Ye},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:r}],methods:[],template:ts}});Object.assign(v,{...e,type:2,name:"displace.KernelOutput(u8,displace.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:ct}],methods:[],template:ns}});Object.assign(E,{...e,type:2,name:"displace.KernelParameters(displace.kernel)",byteSize:16,align:8,instance:{members:[{...t,type:7,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"amplitude",structure:W},{...t,type:7,bitOffset:64,bitSize:64,byteSize:8,slot:1,name:"channels",structure:et}],methods:[],template:cs}});Object.assign(I,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(displace.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:I}],methods:[],template:us}});Object.assign(gt,{...e,type:9,name:"ErrorSet605087019!displace.KernelOutput(u8,displace.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:I}],methods:[]}});Object.assign(Ot,{...e,type:5,name:"createOutput",byteSize:104,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"0",structure:y},{...t,type:3,isRequired:!0,bitOffset:160,bitSize:32,byteSize:4,slot:4,name:"1",structure:y},{...t,type:7,isRequired:!0,bitOffset:192,bitSize:384,byteSize:48,slot:0,name:"2",structure:k},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:128,byteSize:16,slot:1,name:"3",structure:E},{...t,type:7,isRequired:!0,bitOffset:576,bitSize:224,byteSize:28,slot:2,name:"retval",structure:gt}],methods:[]}});Object.assign(M,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(displace.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:M}],methods:[],template:ms}});Object.assign(ft,{...e,type:9,name:"ErrorSet4233426922!displace.KernelOutput(u8,displace.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:M}],methods:[]}});Object.assign(St,{...e,type:5,name:"createPartialOutput",byteSize:112,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"0",structure:y},{...t,type:3,isRequired:!0,bitOffset:160,bitSize:32,byteSize:4,slot:4,name:"1",structure:y},{...t,type:3,isRequired:!0,bitOffset:192,bitSize:32,byteSize:4,slot:5,name:"2",structure:y},{...t,type:3,isRequired:!0,bitOffset:224,bitSize:32,byteSize:4,slot:6,name:"3",structure:y},{...t,type:7,isRequired:!0,bitOffset:256,bitSize:384,byteSize:48,slot:0,name:"4",structure:k},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:128,byteSize:16,slot:1,name:"5",structure:E},{...t,type:7,isRequired:!0,bitOffset:640,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ft}],methods:[]}});Object.assign(jt,{...e,type:2,name:"displace",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:s},{...t,type:9,slot:1,name:"Input",structure:s},{...t,type:9,slot:2,name:"Output",structure:s},{...t,type:9,slot:3,name:"Parameters",structure:s}],methods:[na,ia],template:ys}});const oa=[s,S,T,$,L,B,r,b,G,H,c,g,J,N,Q,P,W,X,Y,Z,tt,F,et,st,rt,f,at,nt,lt,R,it,w,y,O,V,pt,h,k,ot,q,ct,v,E,I,gt,Ot,M,ft,St,jt],ca=jt,ua={runtimeSafety:!1,littleEndian:!0},mt=Ls();mt.getControlObject();mt.recreateStructures(oa,ua);const ma=(async()=>{const o=new URL("displace-ced8ec9c.wasm",import.meta.url).href;return fetch(o)})();mt.loadModule(ma);mt.linkVariables(!0);const{constructor:ya}=ca,{createPartialOutput:ba,Input:la,kernel:bt}=ya;function pa(o,u,n,a,i={},j={}){const z=[];for(const[l]of bt.inputImages)z.push(l);const A=[];for(const[l]of bt.outputImages)A.push(l);if(Array.isArray(i)){const l=i;i={};for(const[p,d]of z.entries())i[d]=l[p]}const m=new la(void 0),K=[];let U;for(const l of z){let p=i[l];if(p||(z.length===1&&["data","width","height"].every(d=>!!i[d])?p=i:K.push(l)),m[l]=p,U){if(p.colorSpace!==U)throw new Error(`Input images must all use the same color space: ${U}`)}else U=p.colorSpace}if(K.length>0)throw new Error(`Missing input image${K.length>1?"s":""}: ${K.join(", ")}`);const yt=ba(o,u,n,a,m,j),Wt=l=>{const p={};for(const d of A){const{data:{typedArray:_},width:Xt,height:ws}=l[d];let D;if(typeof ImageData=="function"){const As=new Uint8ClampedArray(_.buffer,_.byteOffset,_.byteLength);D=new ImageData(As,Xt,a,{colorSpace:U})}else D={data:_,width:Xt,height:ws};if(A.length===1)return D;p[d]=D}return p};return yt[Symbol.toStringTag]==="Promise"?yt.then(Wt):Wt(yt)}function ga(){const o={};for(let[u,n]of bt){if(u==="parameters"){const a={};for(const[i,j]of n){const z=a[i]={};for(let[A,m]of j)typeof m=="object"?"string"in m?m=m.string:m=hs(m):typeof m=="function"&&(m=Oa(m.name)),z[A]=m}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());o[u]=n}return o}function hs(o){const u=[];for(let[n,a]of o)typeof a=="object"&&(a=hs(a)),u[n]=a;return u}function Oa(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[u,n,...a]=o.data;fa(u,a).then(([i,j])=>{postMessage([u,n,i],{transfer:j})}).catch(i=>{postMessage(["error",n,i])})};async function fa(o,u){switch(o){case"getKernelInfo":return[ga(...u)];case"createPartialImageData":const a=await pa(...u),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const j of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${o}`)}}
