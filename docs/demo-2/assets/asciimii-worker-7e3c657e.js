import{u as he,a as ge,b as ze,c as Oe,d as we,e as Ae,f as Re,g as Ue,h as qe,i as je,j as Pe,k as Ve,l as ke,o as Ie,m as Ce,n as ve,p as xe,q as Ee}from"./index-076239a4.js";he();ge();ze();Oe();we();Ae();Re();Ue();qe();je();Pe();Ve();ke();Ie();Ce();ve();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},p={},T={},$={},I={},B={},L={},C={},a={},s={},G={},H={},v={},J={},x={},N={},E={},Q={},K={},h={},b={},W={},D={},X={},F={},ae={},g={},O={},w={},l={},Y={},A={},M={},Z={},d={},R={},ee={},te={},_={},U={},q={},ie={},ne={},ue={},oe={},me={},le={},ce={};Object.assign(p,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:5});Object.assign(T,{...t,type:1,name:"[24:0]u8",length:24,byteSize:25,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:4});Object.assign($,{...t,type:11,name:"*const [24:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[],template:null},slot:3});Object.assign(I,{...t,type:11,name:"*const *const [24:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[],template:null},slot:2});Object.assign(B,{...t,type:1,name:"[13:0]u8",length:13,byteSize:14,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:8});Object.assign(L,{...t,type:11,name:"*const [13:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:B}],methods:[],template:null},slot:7});Object.assign(C,{...t,type:11,name:"*const *const [13:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[],template:null},slot:6});Object.assign(a,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:a}],methods:[],template:null},slot:10});Object.assign(s,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:a}],methods:[],template:null},slot:9});Object.assign(G,{...t,type:1,name:"[69:0]u8",length:69,byteSize:70,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:13});Object.assign(H,{...t,type:11,name:"*const [69:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:G}],methods:[],template:null},slot:12});Object.assign(v,{...t,type:11,name:"*const *const [69:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[],template:null},slot:11});const Ke=new Uint8Array,De=new Uint8Array([16,253,15,0]),Fe=new Uint8Array([1,0,0,0]),Me=new Uint8Array([48,253,15,0]),_e=new Uint8Array([32,0,0,0]),Te=new Uint8Array([80,253,15,0]),$e=new Uint8Array([8,0,0,0]);Object.assign(J,{...t,type:2,name:"Struct0009",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:a},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:Ke},slots:{0:{structure:s,memory:{array:De},slots:{0:{structure:a,memory:{array:Fe}}}},1:{structure:s,memory:{array:Me},slots:{0:{structure:a,memory:{array:_e}}}},2:{structure:s,memory:{array:Te},slots:{0:{structure:a,memory:{array:$e}}}}}}},slot:37});Object.assign(x,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:J}],methods:[],template:null},slot:36});const Be=new Uint8Array,Le=new Uint8Array([16,253,15,0]),Ge=new Uint8Array([1,0,0,0]),He=new Uint8Array([48,253,15,0]),Je=new Uint8Array([0,2,0,0]),Ne=new Uint8Array([80,253,15,0]),Qe=new Uint8Array([56,0,0,0]);Object.assign(N,{...t,type:2,name:"Struct0010",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:a},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:Be},slots:{0:{structure:s,memory:{array:Le},slots:{0:{structure:a,memory:{array:Ge}}}},1:{structure:s,memory:{array:He},slots:{0:{structure:a,memory:{array:Je}}}},2:{structure:s,memory:{array:Ne},slots:{0:{structure:a,memory:{array:Qe}}}}}}},slot:39});Object.assign(E,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:N}],methods:[],template:null},slot:38});const We=new Uint8Array,Xe=new Uint8Array([170,170,170,170]),Ye=new Uint8Array,Ze=new Uint8Array([170,170,170,170]),et=new Uint8Array;Object.assign(Q,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"size",structure:x},{...e,type:8,isRequired:!1,slot:1,name:"charCount",structure:E}],methods:[],template:{memory:{array:We},slots:{0:{structure:x,memory:{array:Xe},slots:{0:{structure:J,memory:{array:Ye}}}},1:{structure:E,memory:{array:Ze},slots:{0:{structure:N,memory:{array:et}}}}}}},slot:15});Object.assign(K,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[],template:null},slot:14});const tt=new Uint8Array,st=new Uint8Array([144,249,15,0]),rt=new Uint8Array([4,0,0,0]);Object.assign(h,{...t,type:2,name:"Struct0011",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:s}],methods:[],template:{memory:{array:tt},slots:{0:{structure:s,memory:{array:st},slots:{0:{structure:a,memory:{array:rt}}}}}}},slot:41});Object.assign(b,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:h}],methods:[],template:null},slot:40});const at=new Uint8Array,it=new Uint8Array([170,170,170,170]),nt=new Uint8Array,ut=new Uint8Array([170,170,170,170]),ot=new Uint8Array;Object.assign(W,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:b},{...e,type:8,isRequired:!1,slot:1,name:"text",structure:b}],methods:[],template:{memory:{array:at},slots:{0:{structure:b,memory:{array:it},slots:{0:{structure:h,memory:{array:nt}}}},1:{structure:b,memory:{array:ut},slots:{0:{structure:h,memory:{array:ot}}}}}}},slot:17});Object.assign(D,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:16});const mt=new Uint8Array,lt=new Uint8Array([170,170,170,170]),ct=new Uint8Array;Object.assign(X,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:b}],methods:[],template:{memory:{array:mt},slots:{0:{structure:b,memory:{array:lt},slots:{0:{structure:h,memory:{array:ct}}}}}}},slot:19});Object.assign(F,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:18});const yt=new Uint8Array,bt=new Uint8Array,pt=new Uint8Array([4,36,16,0]),ft=new Uint8Array([172,35,16,0]),St=new Uint8Array([99,111,109,46,103,114,101,121,98,111,120,119,97,114,101,46,97,115,99,105,105,109,105,105,0]),dt=new Uint8Array([0,36,16,0]),ht=new Uint8Array([147,35,16,0]),gt=new Uint8Array([82,105,99,104,97,114,100,32,90,117,114,97,100,0]),zt=new Uint8Array([252,35,16,0]),Ot=new Uint8Array([1,0,0,0]),wt=new Uint8Array([248,35,16,0]),At=new Uint8Array([60,35,16,0]),Rt=new Uint8Array([70,105,108,116,101,114,32,116,111,32,109,105,109,105,99,32,116,104,101,32,84,69,88,84,112,32,101,102,102,101,99,116,32,102,114,111,109,32,89,111,117,84,117,98,101,39,115,32,50,48,49,48,32,65,112,114,105,108,32,70,111,111,108,115,32,106,111,107,101,0]),Ut=new Uint8Array([170,170,170,170]),qt=new Uint8Array,jt=new Uint8Array([170,170,170,170]),Pt=new Uint8Array,Vt=new Uint8Array([170,170,170,170]),kt=new Uint8Array;Object.assign(ae,{...t,type:2,name:"asciimii.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:yt}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:I},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:C},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:s},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:v},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:K},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:D},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:F}],methods:[],template:{memory:{array:bt},slots:{0:{structure:I,memory:{array:pt},slots:{0:{structure:$,memory:{array:ft},slots:{0:{structure:T,memory:{array:St}}}}}},1:{structure:C,memory:{array:dt},slots:{0:{structure:L,memory:{array:ht},slots:{0:{structure:B,memory:{array:gt}}}}}},2:{structure:s,memory:{array:zt},slots:{0:{structure:a,memory:{array:Ot}}}},3:{structure:v,memory:{array:wt},slots:{0:{structure:H,memory:{array:At},slots:{0:{structure:G,memory:{array:Rt}}}}}},4:{structure:K,memory:{array:Ut},slots:{0:{structure:Q,memory:{array:qt}}}},5:{structure:D,memory:{array:jt},slots:{0:{structure:W,memory:{array:Pt}}}},6:{structure:F,memory:{array:Vt},slots:{0:{structure:X,memory:{array:kt}}}}}}},slot:1});Object.assign(g,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:24});Object.assign(O,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:g}],methods:[],template:null},slot:23});Object.assign(w,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:O}],methods:[],template:null},slot:22});Object.assign(l,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:l}],methods:[],template:null},slot:25});const It=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(Y,{...t,type:9,name:"asciimii.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:a},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:a}],methods:[],template:{memory:{array:It}}},slot:26});Object.assign(A,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:A}],methods:[],template:null},slot:27});Object.assign(M,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:M}],methods:[],template:null},slot:45});Object.assign(Z,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:M}],methods:[],template:null},slot:42});const Ct=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),vt=new Uint8Array,xt=new Uint8Array([4,35,16,0]),Et=new Uint8Array([4,0,0,0]);Object.assign(d,{...t,type:2,name:"asciimii.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:w},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Y},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:A}],methods:[],template:{memory:{array:Ct}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:g},{...e,type:7,isRequired:!1,name:"FPixel",structure:Z},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:s}],methods:[],template:{memory:{array:vt},slots:{0:{structure:s,memory:{array:xt},slots:{0:{structure:a,memory:{array:Et}}}}}}},slot:21});const Kt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Dt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ft=new Uint8Array([0,0,0,0,0,0,0,0]),Mt=new Uint8Array,_t=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Tt=new Uint8Array([0,0,0,0,0,0,0,0]),$t=new Uint8Array;Object.assign(R,{...t,type:2,name:"asciimii.KernelInput(u8,asciimii.kernel)",length:1,byteSize:48,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:d},{...e,type:6,isRequired:!1,bitOffset:192,bitSize:192,byteSize:24,slot:1,name:"text",structure:d}],methods:[],template:{memory:{array:Kt},slots:{0:{structure:d,memory:{array:Dt},slots:{0:{structure:w,memory:{array:Ft},address:1047936,slots:{0:{structure:O,memory:{array:Mt},address:0}}}}},1:{structure:d,memory:{array:_t},slots:{0:{structure:w,memory:{array:Tt},address:1047960,slots:{0:{structure:O,memory:{array:$t},address:0}}}}}}}},slot:20});Object.assign(ee,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:g}],methods:[],template:null},slot:23});Object.assign(te,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:ee}],methods:[],template:null},slot:30});const Bt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Lt=new Uint8Array,Gt=new Uint8Array([4,35,16,0]),Ht=new Uint8Array([4,0,0,0]);Object.assign(_,{...t,type:2,name:"asciimii.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:te},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Y},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:A}],methods:[],template:{memory:{array:Bt}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:g},{...e,type:7,isRequired:!1,name:"FPixel",structure:Z},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:s}],methods:[],template:{memory:{array:Lt},slots:{0:{structure:s,memory:{array:Gt},slots:{0:{structure:a,memory:{array:Ht}}}}}}},slot:29});const Jt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Nt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Qt=new Uint8Array([0,0,0,0,0,0,0,0]),Wt=new Uint8Array;Object.assign(U,{...t,type:2,name:"asciimii.KernelOutput(u8,asciimii.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:_}],methods:[],template:{memory:{array:Jt},slots:{0:{structure:_,memory:{array:Nt},slots:{0:{structure:te,memory:{array:Qt},address:1047568,slots:{0:{structure:ee,memory:{array:Wt},address:0}}}}}}}},slot:28});const Xt=new Uint8Array([8,0,0,0,56,0,0,0]);Object.assign(q,{...t,type:2,name:"asciimii.KernelParameters(asciimii.kernel)",length:1,byteSize:8,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"size",structure:a},{...e,type:2,isRequired:!1,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"charCount",structure:a}],methods:[],template:{memory:{array:Xt}}},slot:31});Object.assign(ie,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(asciimii.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:43});Object.assign(ne,{...t,type:7,name:"ErrorSet0000!asciimii.KernelOutput(u8,asciimii.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:U},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:ie}],methods:[],template:null},slot:34});Object.assign(ue,{...t,type:3,name:"createOutput",length:1,byteSize:92,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"0",structure:l},{...e,type:3,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"1",structure:l},{...e,type:6,bitOffset:64,bitSize:384,byteSize:48,slot:2,name:"2",structure:R},{...e,type:6,bitOffset:448,bitSize:64,byteSize:8,slot:3,name:"3",structure:q},{...e,type:6,bitOffset:512,bitSize:224,byteSize:28,slot:4,name:"retval",structure:ne}],methods:[],template:null},slot:32});Object.assign(oe,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(asciimii.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:44});Object.assign(me,{...t,type:7,name:"ErrorSet0001!asciimii.KernelOutput(u8,asciimii.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:U},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:oe}],methods:[],template:null},slot:35});Object.assign(le,{...t,type:3,name:"createPartialOutput",length:1,byteSize:100,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"0",structure:l},{...e,type:3,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"1",structure:l},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:2,name:"2",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:3,name:"3",structure:l},{...e,type:6,bitOffset:128,bitSize:384,byteSize:48,slot:4,name:"4",structure:R},{...e,type:6,bitOffset:512,bitSize:64,byteSize:8,slot:5,name:"5",structure:q},{...e,type:6,bitOffset:576,bitSize:224,byteSize:28,slot:6,name:"retval",structure:me}],methods:[],template:null},slot:33});const Yt=new Uint8Array,Zt={argStruct:ue,thunk:7,name:"createOutput"},es={argStruct:le,thunk:2,name:"createPartialOutput"};Object.assign(ce,{...t,type:2,name:"asciimii",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Yt}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:ae},{...e,type:7,isRequired:!1,name:"Input",structure:R},{...e,type:7,isRequired:!1,name:"Output",structure:U},{...e,type:7,isRequired:!1,name:"Parameters",structure:q}],methods:[Zt,es],template:null},slot:0});const ts=[p,T,$,I,B,L,C,a,s,G,H,v,J,x,N,E,Q,K,h,b,W,D,X,F,ae,g,O,w,l,Y,A,M,Z,d,R,ee,te,_,U,q,ie,ne,ue,oe,me,le,ce],ss=xe(ts),rs=ce.constructor,as=(async()=>{const u=new URL("asciimii-450d1e60.wasm",import.meta.url).href;return fetch(u)})();Ee(as,{...ss,writeBack:!0});const{createOutput:ys,createPartialOutput:is,kernel:re,Input:ns,Output:bs,Parameters:ps}=rs;function us(u,m,i,r,n={},f={}){if(Array.isArray(n)){const y=n;n={};for(const[c,S]of Object.keys(re.inputImages).entries())n[S]=y[c]}const j=new ns(void 0),P=Object.keys(re.inputImages),o=[];let z;for(const y of P){let c=n[y];if(c||(P.length===1&&["data","width","height"].every(S=>!!n[S])?c=n:o.push(y)),j[y]=c,z){if(c.colorSpace!==z)throw new Error(`Input images must all use the same color space: ${z}`)}else z=c.colorSpace}if(o.length>0)throw new Error(`Missing input image${o.length>1?"s":""}: ${o.join(", ")}`);const se=is(u,m,i,r,j,f),ye=y=>{const c=Object.keys(y),S={};for(const be of c){const{data:{typedArray:V},width:pe,height:Se}=y[be];let k;if(typeof ImageData=="function"){const de=new Uint8ClampedArray(V.buffer,V.byteOffset,V.byteLength);k=new ImageData(de,pe,r,{colorSpace:z})}else k={data:V,width:pe,height:Se};if(c.length===1)return k;S[be]=k}return S};return se[Symbol.toStringTag]==="Promise"?se.then(ye):ye(se)}function os(){const u={};for(let[m,i]of Object.entries(re)){if(m==="parameters"){const r={};for(const[n,f]of Object.entries(i)){const j=r[n]={};for(let[P,o]of Object.entries(f))typeof o=="object"?"string"in o?o=o.string:o=fe(o):typeof o=="function"&&(o=ms(o.name)),j[P]=o}i=r}else typeof i=="object"&&("string"in i?i=i.string:i=i.valueOf());u[m]=i}return u}function fe(u){const m=[];for(let[i,r]of Object.entries(u))typeof r=="object"&&(r=fe(r)),m[i]=r;return m}function ms(u){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[u]}onmessage=u=>{const[m,i,...r]=u.data;ls(m,r).then(([n,f])=>{postMessage([m,i,n],{transfer:f})}).catch(n=>{postMessage(["error",i,n])})};async function ls(u,m){switch(u){case"getKernelInfo":return[os(...m)];case"createPartialImageData":const r=await us(...m),n=[];if("data"in r&&"width"in r&&"height"in r)n.push(r.data.buffer);else for(const f of Object.entries(r))n.push(r.data.buffer);return[r,n];default:throw new Error(`Unknown function: ${u}`)}}
