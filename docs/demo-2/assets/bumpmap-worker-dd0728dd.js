import{u as an,a as on,b as cn,c as un,d as mn,e as yn,f as bn,g as ln,h as gn,i as pn,j as On,k as jn,l as Sn,m as fn,n as zn,o as hn,p as wn,q as dn}from"./index-031d01ca.js";an();jn();Sn();on();cn();fn();zn();hn();un();wn();mn();yn();bn();dn();ln();gn();pn();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},r={},c={},B={},G={},H={},J={},a={},b={},N={},Q={},W={},X={},V={},Y={},j={},z={},s={},n={},Z={},tt={},et={},st={},rt={},nt={},P={},at={},ot={},it={},ct={},ut={},mt={},yt={},bt={},lt={},gt={},pt={},Ot={},jt={},St={},ft={},zt={},ht={},wt={},dt={},f={},At={},Ut={},Kt={},v={},Vt={},k={},y={},S={},x={},Tt={},R={},C={},Pt={},E={},Rt={},K={},T={},A={},_t={},Dt={},U={},Mt={},Ft={},$t={},rs={},Lt={},Bt={},Gt={},ns={},Ht={},as={},Jt={},os={},Nt={},is={},cs={},Qt={},us={},Wt={},ms={},Xt={},ys={},bs={},Yt={},ls={},Zt={},gs={},te={},ps={},Os={},ee={},se={},re={},ne={},ae={},oe={},js={},Ss={},ie={},fs={},ce={},zs={},ue={},hs={},ws={},kt={},ds={},qt={},As={},It={},Us={},Vs={},me={},ye={},be={},le={},ge={},Ps={},Rs={},pe={},_={},Oe={},ks={},je={},qs={},Se={},Is={},fe={},xs={},vs={},ze={},he={},Cs={},we={},Es={},de={},Ks={},Ae={},Ts={},_s={},Ue={},Ve={},Ds={},Pe={},Ms={},Re={},Fs={},ke={},$s={},Ls={},qe={},Ie={},Bs={},xe={},Gs={},ve={},Hs={},Ce={},Js={},Ns={},Ee={},Ke={},Qs={},Te={},Ws={},_e={},Xs={},De={},Ys={},Zs={},Me={},Fe={},$e={},Le={},Be={},Ge={},He={},Je={},tr={},D={},er={},sr={},Ne={},Qe={},rr={},We={},nr={},ar={},or={},ir={},cr={},ur={},mr={},yr={},br={},lr={},gr={},pr={},Or={},jr={},Sr={},fr={},zr={},xt={},hr={},wr={},Xe={},dr={},Ye={},Ar={},Ur={},Vr={},Pr={},Rr={},kr={},qr={},Ir={},xr={},Ze={},vr={},Cr={},Er={},Kr={},Tr={},_r={},Dr={},Mr={},Fr={},$r={},Lr={},Br={},Gr={},Hr={},Jr={},Nr={},Qr={},Wr={},Xr={},Yr={},Zr={},tn={},An=new Uint8Array,Un=new Uint8Array,Vn=new Uint8Array([0]),Pn=new Uint8Array,Rn=new Uint8Array([1]),kn=new Uint8Array,qn=new Uint8Array([1]),In=new Uint8Array([36,7,0,1]),xn=new Uint8Array([79,110,108,121,32,119,104,105,108,101,32,111,110,32,105,115,32,49,44,32,116,104,101,32,115,104,97,100,101,114,32,119,105,108,108,32,98,101,32,97,112,112,108,105,101,100,32,116,111,32,116,104,101,32,105,110,112,117,116,32,105,109,97,103,101,0]),vn=new Uint8Array,Cn=new Uint8Array([0,0,0,0,0,0,164,64]),En=new Uint8Array,Kn=new Uint8Array([0,0,0,0,0,0,164,64]),Tn=new Uint8Array,_n=new Uint8Array([0,0,0,0,0,136,195,64]),Dn=new Uint8Array,Mn=new Uint8Array([0,0,0,0,0,64,111,64]),Fn=new Uint8Array,$n=new Uint8Array([0,0,0,0,0,64,111,64]),Ln=new Uint8Array,Bn=new Uint8Array([0,0,0,0,0,0,137,64]),Gn=new Uint8Array,Hn=new Uint8Array([0,0,32,197,0,0,32,197,0,64,28,198,0,0,0,0]),Jn=new Uint8Array,Nn=new Uint8Array,Qn=new Uint8Array([132,7,0,1]),Wn=new Uint8Array([84,104,101,32,108,105,103,104,116,32,99,111,111,114,100,105,110,97,116,101,115,32,40,120,44,121,44,122,41,46,32,84,104,101,32,122,45,99,111,111,114,100,105,110,97,116,101,32,97,108,119,97,121,115,32,110,101,101,100,115,32,116,111,32,98,101,32,112,111,115,105,116,105,118,101,32,116,111,32,98,101,32,105,110,32,102,114,111,110,116,32,111,102,32,116,104,101,32,105,109,97,103,101,0]),Xn=new Uint8Array,Yn=new Uint8Array([0,0,0,0,0,0,0,0]),Zn=new Uint8Array,ta=new Uint8Array([0,0,0,0,0,0,0,0]),ea=new Uint8Array,sa=new Uint8Array([0,0,0,0,0,0,0,0]),ra=new Uint8Array,na=new Uint8Array([0,0,0,0,0,0,240,63]),aa=new Uint8Array,oa=new Uint8Array([0,0,0,0,0,0,240,63]),ia=new Uint8Array,ca=new Uint8Array([0,0,0,0,0,0,240,63]),ua=new Uint8Array,ma=new Uint8Array,ya=new Uint8Array,ba=new Uint8Array,la=new Uint8Array([240,7,0,1]),ga=new Uint8Array([67,111,108,111,114,32,111,102,32,116,104,101,32,108,105,103,104,116,32,115,111,117,114,99,101,32,91,82,44,71,44,66,93,0]),pa=new Uint8Array,Oa=new Uint8Array,ja=new Uint8Array([0,0,0,0,0,0,240,63]),Sa=new Uint8Array,fa=new Uint8Array([0,0,0,0,0,0,36,64]),za=new Uint8Array,ha=new Uint8Array([0,0,0,0,0,0,240,63]),wa=new Uint8Array([44,8,0,1]),da=new Uint8Array([65,32,102,97,99,116,111,114,32,98,121,32,119,104,105,99,104,32,116,104,101,32,104,101,105,103,104,116,109,97,112,32,100,105,102,102,101,114,101,110,99,101,115,32,119,105,108,108,32,98,101,32,109,117,108,116,105,112,108,105,101,100,0]),Aa=new Uint8Array,Ua=new Uint8Array,Va=new Uint8Array([0]),Pa=new Uint8Array,Ra=new Uint8Array([1]),ka=new Uint8Array,qa=new Uint8Array([1]),Ia=new Uint8Array([112,8,0,1]),xa=new Uint8Array([73,110,118,101,114,116,32,104,101,105,103,104,116,109,97,112,0]),va=new Uint8Array,Ca=new Uint8Array,Ea=new Uint8Array([0,0,0,0,0,0,0,0]),Ka=new Uint8Array,Ta=new Uint8Array([0,0,0,0,0,136,195,64]),_a=new Uint8Array,Da=new Uint8Array([0,0,0,0,0,80,148,64]),Ma=new Uint8Array([156,8,0,1]),Fa=new Uint8Array([84,104,101,32,109,97,120,105,109,117,109,32,114,101,97,99,104,47,108,101,110,103,116,104,32,111,102,32,97,32,108,105,103,104,116,32,114,97,121,0]),$a=new Uint8Array,La=new Uint8Array,Ba=new Uint8Array([0,0,0,0,0,0,0,0]),Ga=new Uint8Array,Ha=new Uint8Array([0,0,0,0,0,0,0,64]),Ja=new Uint8Array,Na=new Uint8Array([51,51,51,51,51,51,227,63]),Qa=new Uint8Array([220,8,0,1]),Wa=new Uint8Array([84,104,101,32,115,116,114,101,110,103,116,104,32,111,102,32,116,104,101,32,115,117,114,102,97,99,101,32,114,101,102,108,101,99,116,105,111,110,0]),Xa=new Uint8Array,Ya=new Uint8Array,Za=new Uint8Array([0,0,0,0,0,0,0,0]),to=new Uint8Array,eo=new Uint8Array([0,0,0,0,0,64,143,64]),so=new Uint8Array,ro=new Uint8Array([0,0,0,0,0,0,34,64]),no=new Uint8Array([28,9,0,1]),ao=new Uint8Array([84,104,101,32,108,111,119,101,114,32,116,104,101,32,118,97,108,117,101,44,32,116,104,101,32,109,111,114,101,32,101,120,97,99,116,108,121,32,116,104,101,32,114,101,102,108,101,99,116,105,111,110,32,114,97,121,32,110,101,101,100,115,32,116,111,32,114,101,102,108,101,99,116,101,100,32,115,116,114,101,105,103,104,116,32,98,97,99,107,32,116,111,119,97,114,100,115,32,116,104,101,32,108,105,103,104,116,32,115,111,117,114,99,101,0]),oo=new Uint8Array,io=new Uint8Array,co=new Uint8Array,uo=new Uint8Array,mo=new Uint8Array,yo=new Uint8Array,bo=new Uint8Array,lo=new Uint8Array,go=new Uint8Array,po=new Uint8Array([4]),Oo=new Uint8Array,jo=new Uint8Array,So=new Uint8Array,fo=new Uint8Array([246,4,0,1]),zo=new Uint8Array([99,111,109,46,115,104,97,100,101,114,0]),ho=new Uint8Array([12,5,0,1]),wo=new Uint8Array([69,108,105,97,115,32,83,116,101,104,108,101,0]),Ao=new Uint8Array,Uo=new Uint8Array([1]),Vo=new Uint8Array([42,5,0,1]),Po=new Uint8Array([66,117,109,112,109,97,112,32,83,104,97,100,101,114,32,45,32,83,116,117,110,110,105,110,103,32,101,102,102,101,99,116,115,32,111,110,32,116,101,120,116,117,114,101,45,108,105,107,101,32,105,110,112,117,116,115,0]),Ro=new Uint8Array,ko=new Uint8Array,qo=new Uint8Array,Io=new Uint8Array([0]),xo=new Uint8Array([1]),en=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),vo=new Uint8Array,Co=new Uint8Array,Eo=new Uint8Array,Ko=new Uint8Array,To=new Uint8Array([4]),M=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),sn=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),_o=new Uint8Array,Do=new Uint8Array,Mo=new Uint8Array,Fo=new Uint8Array,$o=new Uint8Array([4]),ts=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Lo=new Uint8Array([0,0,122,67,0,0,122,67,0,0,72,68,0,0,0,0,0,0,128,63,0,0,128,63,0,0,128,63,0,0,0,0,1,0,0,0,0,0,128,63,1,0,0,0,0,128,162,68,154,153,25,63,0,0,16,65,0,0,0,0,0,0,0,0]),Bo=new Uint8Array([27,0]),Go=new Uint8Array([27,0]),Ho=new Uint8Array,Jo=new Uint8Array,No=new Uint8Array,Qo=new Uint8Array;Object.assign(rs,{slots:{0:Lt,1:Gt,2:Ht,3:Jt,4:Nt}});Object.assign(Lt,{structure:r,memory:{array:An},const:!0,slots:{0:Bt}});Object.assign(Bt,{structure:V});Object.assign(Gt,{structure:a,memory:{array:Un},const:!0,slots:{0:ns}});Object.assign(ns,{structure:b,memory:{array:Vn},const:!0});Object.assign(Ht,{structure:a,memory:{array:Pn},const:!0,slots:{0:as}});Object.assign(as,{structure:b,memory:{array:Rn},const:!0});Object.assign(Jt,{structure:a,memory:{array:kn},const:!0,slots:{0:os}});Object.assign(os,{structure:b,memory:{array:qn},const:!0});Object.assign(Nt,{structure:X,memory:{array:In},const:!0,slots:{0:is}});Object.assign(is,{structure:W,memory:{array:xn},reloc:16779044});Object.assign(cs,{slots:{0:Qt,1:Wt,2:Xt}});Object.assign(Qt,{structure:s,memory:{array:vn},const:!0,slots:{0:us}});Object.assign(us,{structure:n,memory:{array:Cn},const:!0});Object.assign(Wt,{structure:s,memory:{array:En},const:!0,slots:{0:ms}});Object.assign(ms,{structure:n,memory:{array:Kn},const:!0});Object.assign(Xt,{structure:s,memory:{array:Tn},const:!0,slots:{0:ys}});Object.assign(ys,{structure:n,memory:{array:_n},const:!0});Object.assign(bs,{slots:{0:Yt,1:Zt,2:te}});Object.assign(Yt,{structure:s,memory:{array:Dn},const:!0,slots:{0:ls}});Object.assign(ls,{structure:n,memory:{array:Mn},const:!0});Object.assign(Zt,{structure:s,memory:{array:Fn},const:!0,slots:{0:gs}});Object.assign(gs,{structure:n,memory:{array:$n},const:!0});Object.assign(te,{structure:s,memory:{array:Ln},const:!0,slots:{0:ps}});Object.assign(ps,{structure:n,memory:{array:Bn},const:!0});Object.assign(Os,{slots:{0:ee,1:re,2:ne,3:ae,4:oe}});Object.assign(ee,{structure:r,memory:{array:Gn},const:!0,slots:{0:se}});Object.assign(se,{structure:z});Object.assign(re,{structure:z,memory:{array:Hn},const:!0});Object.assign(ne,{structure:Z,memory:{array:Jn},const:!0,slots:{0:Qt,1:Wt,2:Xt}});Object.assign(ae,{structure:tt,memory:{array:Nn},const:!0,slots:{0:Yt,1:Zt,2:te}});Object.assign(oe,{structure:st,memory:{array:Qn},const:!0,slots:{0:js}});Object.assign(js,{structure:et,memory:{array:Wn},reloc:16779140});Object.assign(Ss,{slots:{0:ie,1:ce,2:ue}});Object.assign(ie,{structure:s,memory:{array:Xn},const:!0,slots:{0:fs}});Object.assign(fs,{structure:n,memory:{array:Yn},const:!0});Object.assign(ce,{structure:s,memory:{array:Zn},const:!0,slots:{0:zs}});Object.assign(zs,{structure:n,memory:{array:ta},const:!0});Object.assign(ue,{structure:s,memory:{array:ea},const:!0,slots:{0:hs}});Object.assign(hs,{structure:n,memory:{array:sa},const:!0});Object.assign(ws,{slots:{0:kt,1:qt,2:It}});Object.assign(kt,{structure:s,memory:{array:ra},const:!0,slots:{0:ds}});Object.assign(ds,{structure:n,memory:{array:na},const:!0});Object.assign(qt,{structure:s,memory:{array:aa},const:!0,slots:{0:As}});Object.assign(As,{structure:n,memory:{array:oa},const:!0});Object.assign(It,{structure:s,memory:{array:ia},const:!0,slots:{0:Us}});Object.assign(Us,{structure:n,memory:{array:ca},const:!0});Object.assign(Vs,{slots:{0:me,1:ye,2:be,3:le,4:ge}});Object.assign(me,{structure:r,memory:{array:ua},const:!0,slots:{0:se}});Object.assign(ye,{structure:nt,memory:{array:ma},const:!0,slots:{0:ie,1:ce,2:ue}});Object.assign(be,{structure:P,memory:{array:ya},const:!0,slots:{0:kt,1:qt,2:It}});Object.assign(le,{structure:P,memory:{array:ba},const:!0,slots:{0:kt,1:qt,2:It}});Object.assign(ge,{structure:ot,memory:{array:la},const:!0,slots:{0:Ps}});Object.assign(Ps,{structure:at,memory:{array:ga},reloc:16779248});Object.assign(Rs,{slots:{0:pe,1:Oe,2:je,3:Se,4:fe}});Object.assign(pe,{structure:r,memory:{array:pa},const:!0,slots:{0:_}});Object.assign(_,{structure:j});Object.assign(Oe,{structure:s,memory:{array:Oa},const:!0,slots:{0:ks}});Object.assign(ks,{structure:n,memory:{array:ja},const:!0});Object.assign(je,{structure:s,memory:{array:Sa},const:!0,slots:{0:qs}});Object.assign(qs,{structure:n,memory:{array:fa},const:!0});Object.assign(Se,{structure:s,memory:{array:za},const:!0,slots:{0:Is}});Object.assign(Is,{structure:n,memory:{array:ha},const:!0});Object.assign(fe,{structure:ut,memory:{array:wa},const:!0,slots:{0:xs}});Object.assign(xs,{structure:ct,memory:{array:da},reloc:16779308});Object.assign(vs,{slots:{0:ze,1:he,2:we,3:de,4:Ae}});Object.assign(ze,{structure:r,memory:{array:Aa},const:!0,slots:{0:Bt}});Object.assign(he,{structure:a,memory:{array:Ua},const:!0,slots:{0:Cs}});Object.assign(Cs,{structure:b,memory:{array:Va},const:!0});Object.assign(we,{structure:a,memory:{array:Pa},const:!0,slots:{0:Es}});Object.assign(Es,{structure:b,memory:{array:Ra},const:!0});Object.assign(de,{structure:a,memory:{array:ka},const:!0,slots:{0:Ks}});Object.assign(Ks,{structure:b,memory:{array:qa},const:!0});Object.assign(Ae,{structure:bt,memory:{array:Ia},const:!0,slots:{0:Ts}});Object.assign(Ts,{structure:yt,memory:{array:xa},reloc:16779376});Object.assign(_s,{slots:{0:Ue,1:Ve,2:Pe,3:Re,4:ke}});Object.assign(Ue,{structure:r,memory:{array:va},const:!0,slots:{0:_}});Object.assign(Ve,{structure:s,memory:{array:Ca},const:!0,slots:{0:Ds}});Object.assign(Ds,{structure:n,memory:{array:Ea},const:!0});Object.assign(Pe,{structure:s,memory:{array:Ka},const:!0,slots:{0:Ms}});Object.assign(Ms,{structure:n,memory:{array:Ta},const:!0});Object.assign(Re,{structure:s,memory:{array:_a},const:!0,slots:{0:Fs}});Object.assign(Fs,{structure:n,memory:{array:Da},const:!0});Object.assign(ke,{structure:pt,memory:{array:Ma},const:!0,slots:{0:$s}});Object.assign($s,{structure:gt,memory:{array:Fa},reloc:16779420});Object.assign(Ls,{slots:{0:qe,1:Ie,2:xe,3:ve,4:Ce}});Object.assign(qe,{structure:r,memory:{array:$a},const:!0,slots:{0:_}});Object.assign(Ie,{structure:s,memory:{array:La},const:!0,slots:{0:Bs}});Object.assign(Bs,{structure:n,memory:{array:Ba},const:!0});Object.assign(xe,{structure:s,memory:{array:Ga},const:!0,slots:{0:Gs}});Object.assign(Gs,{structure:n,memory:{array:Ha},const:!0});Object.assign(ve,{structure:s,memory:{array:Ja},const:!0,slots:{0:Hs}});Object.assign(Hs,{structure:n,memory:{array:Na},const:!0});Object.assign(Ce,{structure:St,memory:{array:Qa},const:!0,slots:{0:Js}});Object.assign(Js,{structure:jt,memory:{array:Wa},reloc:16779484});Object.assign(Ns,{slots:{0:Ee,1:Ke,2:Te,3:_e,4:De}});Object.assign(Ee,{structure:r,memory:{array:Xa},const:!0,slots:{0:_}});Object.assign(Ke,{structure:s,memory:{array:Ya},const:!0,slots:{0:Qs}});Object.assign(Qs,{structure:n,memory:{array:Za},const:!0});Object.assign(Te,{structure:s,memory:{array:to},const:!0,slots:{0:Ws}});Object.assign(Ws,{structure:n,memory:{array:eo},const:!0});Object.assign(_e,{structure:s,memory:{array:so},const:!0,slots:{0:Xs}});Object.assign(Xs,{structure:n,memory:{array:ro},const:!0});Object.assign(De,{structure:ht,memory:{array:no},const:!0,slots:{0:Ys}});Object.assign(Ys,{structure:zt,memory:{array:ao},reloc:16779548});Object.assign(Zs,{slots:{0:Me,1:Fe,2:$e,3:Le,4:Be,5:Ge,6:He,7:Je}});Object.assign(Me,{structure:Y,memory:{array:oo},const:!0,slots:{0:Lt,1:Gt,2:Ht,3:Jt,4:Nt}});Object.assign(Fe,{structure:rt,memory:{array:io},const:!0,slots:{0:ee,1:re,2:ne,3:ae,4:oe}});Object.assign($e,{structure:it,memory:{array:co},const:!0,slots:{0:me,1:ye,2:be,3:le,4:ge}});Object.assign(Le,{structure:mt,memory:{array:uo},const:!0,slots:{0:pe,1:Oe,2:je,3:Se,4:fe}});Object.assign(Be,{structure:lt,memory:{array:mo},const:!0,slots:{0:ze,1:he,2:we,3:de,4:Ae}});Object.assign(Ge,{structure:Ot,memory:{array:yo},const:!0,slots:{0:Ue,1:Ve,2:Pe,3:Re,4:ke}});Object.assign(He,{structure:ft,memory:{array:bo},const:!0,slots:{0:qe,1:Ie,2:xe,3:ve,4:Ce}});Object.assign(Je,{structure:wt,memory:{array:lo},const:!0,slots:{0:Ee,1:Ke,2:Te,3:_e,4:De}});Object.assign(tr,{slots:{0:D}});Object.assign(D,{structure:a,memory:{array:go},const:!0,slots:{0:er}});Object.assign(er,{structure:b,memory:{array:po},const:!0});Object.assign(sr,{slots:{0:Ne,1:Qe}});Object.assign(Ne,{structure:f,memory:{array:Oo},const:!0,slots:{0:D}});Object.assign(Qe,{structure:f,memory:{array:jo},const:!0,slots:{0:D}});Object.assign(rr,{slots:{0:We}});Object.assign(We,{structure:f,memory:{array:So},const:!0,slots:{0:D}});Object.assign(nr,{slots:{0:ar,1:ir,2:ur,3:yr,4:lr,5:gr,6:pr}});Object.assign(ar,{structure:G,memory:{array:fo},const:!0,slots:{0:or}});Object.assign(or,{structure:B,memory:{array:zo},reloc:16778486});Object.assign(ir,{structure:J,memory:{array:ho},const:!0,slots:{0:cr}});Object.assign(cr,{structure:H,memory:{array:wo},reloc:16778508});Object.assign(ur,{structure:a,memory:{array:Ao},const:!0,slots:{0:mr}});Object.assign(mr,{structure:b,memory:{array:Uo},const:!0});Object.assign(yr,{structure:Q,memory:{array:Vo},const:!0,slots:{0:br}});Object.assign(br,{structure:N,memory:{array:Po},reloc:16778538});Object.assign(lr,{structure:dt,memory:{array:Ro},const:!0,slots:{0:Me,1:Fe,2:$e,3:Le,4:Be,5:Ge,6:He,7:Je}});Object.assign(gr,{structure:At,memory:{array:ko},const:!0,slots:{0:Ne,1:Qe}});Object.assign(pr,{structure:Ut,memory:{array:qo},const:!0,slots:{0:We}});Object.assign(Or,{slots:{0:jr,1:Sr}});Object.assign(jr,{structure:S,memory:{array:Io},const:!0});Object.assign(Sr,{structure:S,memory:{array:xo},const:!0});Object.assign(fr,{memory:{array:en},slots:{0:zr}});Object.assign(zr,{structure:k,memory:{array:en,offset:0,length:8},slots:{0:xt}});Object.assign(xt,{structure:Vt,memory:{array:vo},reloc:0});Object.assign(hr,{slots:{0:wr,1:dr,2:Ar}});Object.assign(wr,{structure:r,memory:{array:Co},const:!0,slots:{0:Xe}});Object.assign(Xe,{structure:v});Object.assign(dr,{structure:r,memory:{array:Eo},const:!0,slots:{0:Ye}});Object.assign(Ye,{structure:Tt});Object.assign(Ar,{structure:a,memory:{array:Ko},const:!0,slots:{0:Ur}});Object.assign(Ur,{structure:b,memory:{array:To},const:!0});Object.assign(Vr,{memory:{array:M},slots:{0:Pr,1:kr}});Object.assign(Pr,{structure:R,memory:{array:M,offset:0,length:24},slots:{0:Rr}});Object.assign(Rr,{structure:k,memory:{array:M,offset:0,length:8},slots:{0:xt}});Object.assign(kr,{structure:R,memory:{array:M,offset:24,length:24},slots:{0:qr}});Object.assign(qr,{structure:k,memory:{array:M,offset:24,length:8},slots:{0:xt}});Object.assign(Ir,{memory:{array:sn},slots:{0:xr}});Object.assign(xr,{structure:E,memory:{array:sn,offset:0,length:8},slots:{0:Ze}});Object.assign(Ze,{structure:Pt,memory:{array:_o},reloc:0});Object.assign(vr,{slots:{0:Cr,1:Er,2:Kr}});Object.assign(Cr,{structure:r,memory:{array:Do},const:!0,slots:{0:Xe}});Object.assign(Er,{structure:r,memory:{array:Mo},const:!0,slots:{0:Ye}});Object.assign(Kr,{structure:a,memory:{array:Fo},const:!0,slots:{0:Tr}});Object.assign(Tr,{structure:b,memory:{array:$o},const:!0});Object.assign(_r,{memory:{array:ts},slots:{0:Dr}});Object.assign(Dr,{structure:Rt,memory:{array:ts},slots:{0:Mr}});Object.assign(Mr,{structure:E,memory:{array:ts,offset:0,length:8},slots:{0:Ze}});Object.assign(Fr,{memory:{array:Lo}});Object.assign($r,{slots:{0:Lr}});Object.assign(Lr,{structure:A,memory:{array:Bo},const:!0});Object.assign(Br,{slots:{0:Gr}});Object.assign(Gr,{structure:U,memory:{array:Go},const:!0});Object.assign(Hr,{slots:{0:Jr,1:Qr,2:Xr,3:Zr}});Object.assign(Jr,{structure:r,memory:{array:Ho},const:!0,slots:{0:Nr}});Object.assign(Nr,{structure:Kt});Object.assign(Qr,{structure:r,memory:{array:Jo},const:!0,slots:{0:Wr}});Object.assign(Wr,{structure:C});Object.assign(Xr,{structure:r,memory:{array:No},const:!0,slots:{0:Yr}});Object.assign(Yr,{structure:K});Object.assign(Zr,{structure:r,memory:{array:Qo},const:!0,slots:{0:tn}});Object.assign(tn,{structure:T});const Wo={argStruct:Dt,thunkId:2,name:"createOutput"},Xo={argStruct:Ft,thunkId:3,name:"createPartialOutput"};Object.assign(r,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(c,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:c}],methods:[]}});Object.assign(B,{...e,type:1,name:"[10:0]u8",length:10,byteSize:11,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:c}],methods:[]}});Object.assign(G,{...e,type:13,name:"*const [10:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:B}],methods:[]}});Object.assign(H,{...e,type:1,name:"[12:0]u8",length:12,byteSize:13,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:c}],methods:[]}});Object.assign(J,{...e,type:13,name:"*const [12:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[]}});Object.assign(a,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:a}],methods:[]}});Object.assign(b,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:b}],methods:[]}});Object.assign(N,{...e,type:1,name:"[56:0]u8",length:56,byteSize:57,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:c}],methods:[]}});Object.assign(Q,{...e,type:13,name:"*const [56:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:N}],methods:[]}});Object.assign(W,{...e,type:1,name:"[65:0]u8",length:65,byteSize:66,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:c}],methods:[]}});Object.assign(X,{...e,type:13,name:"*const [65:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[]}});Object.assign(V,{...e,name:"i32",byteSize:4,align:4,instance:{members:[{...t,type:2,bitOffset:0,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(Y,{...e,type:2,name:"Struct4264302793",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:a},{...t,type:7,slot:2,name:"maxValue",structure:a},{...t,type:7,slot:3,name:"defaultValue",structure:a},{...t,type:7,slot:4,name:"description",structure:X}],methods:[],template:rs}});Object.assign(j,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:j}],methods:[]}});Object.assign(z,{...e,type:15,name:"@Vector(3, f32)",length:3,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:j}],methods:[]}});Object.assign(s,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(n,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:n}],methods:[]}});Object.assign(Z,{...e,type:2,name:"Struct423903331",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s},{...t,type:7,slot:2,name:"2",structure:s}],methods:[],template:cs}});Object.assign(tt,{...e,type:2,name:"Struct2324277187",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s},{...t,type:7,slot:2,name:"2",structure:s}],methods:[],template:bs}});Object.assign(et,{...e,type:1,name:"[103:0]u8",length:103,byteSize:104,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:c}],methods:[]}});Object.assign(st,{...e,type:13,name:"*const [103:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:et}],methods:[]}});Object.assign(rt,{...e,type:2,name:"Struct2777357222",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:z},{...t,type:7,slot:2,name:"maxValue",structure:Z},{...t,type:7,slot:3,name:"defaultValue",structure:tt},{...t,type:7,slot:4,name:"description",structure:st}],methods:[],template:Os}});Object.assign(nt,{...e,type:2,name:"Struct4174069246",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s},{...t,type:7,slot:2,name:"2",structure:s}],methods:[],template:Ss}});Object.assign(P,{...e,type:2,name:"Struct2060771296",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s},{...t,type:7,slot:2,name:"2",structure:s}],methods:[],template:ws}});Object.assign(at,{...e,type:1,name:"[33:0]u8",length:33,byteSize:34,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:c}],methods:[]}});Object.assign(ot,{...e,type:13,name:"*const [33:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:at}],methods:[]}});Object.assign(it,{...e,type:2,name:"Struct3882146489",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:nt},{...t,type:7,slot:2,name:"maxValue",structure:P},{...t,type:7,slot:3,name:"defaultValue",structure:P},{...t,type:7,slot:4,name:"description",structure:ot}],methods:[],template:Vs}});Object.assign(ct,{...e,type:1,name:"[62:0]u8",length:62,byteSize:63,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:c}],methods:[]}});Object.assign(ut,{...e,type:13,name:"*const [62:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:ct}],methods:[]}});Object.assign(mt,{...e,type:2,name:"Struct3648844289",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:s},{...t,type:7,slot:2,name:"maxValue",structure:s},{...t,type:7,slot:3,name:"defaultValue",structure:s},{...t,type:7,slot:4,name:"description",structure:ut}],methods:[],template:Rs}});Object.assign(yt,{...e,type:1,name:"[16:0]u8",length:16,byteSize:17,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:c}],methods:[]}});Object.assign(bt,{...e,type:13,name:"*const [16:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:yt}],methods:[]}});Object.assign(lt,{...e,type:2,name:"Struct1629162950",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:a},{...t,type:7,slot:2,name:"maxValue",structure:a},{...t,type:7,slot:3,name:"defaultValue",structure:a},{...t,type:7,slot:4,name:"description",structure:bt}],methods:[],template:vs}});Object.assign(gt,{...e,type:1,name:"[39:0]u8",length:39,byteSize:40,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:c}],methods:[]}});Object.assign(pt,{...e,type:13,name:"*const [39:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:gt}],methods:[]}});Object.assign(Ot,{...e,type:2,name:"Struct3376896450",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:s},{...t,type:7,slot:2,name:"maxValue",structure:s},{...t,type:7,slot:3,name:"defaultValue",structure:s},{...t,type:7,slot:4,name:"description",structure:pt}],methods:[],template:_s}});Object.assign(jt,{...e,type:1,name:"[38:0]u8",length:38,byteSize:39,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:c}],methods:[]}});Object.assign(St,{...e,type:13,name:"*const [38:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:jt}],methods:[]}});Object.assign(ft,{...e,type:2,name:"Struct3453785135",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:s},{...t,type:7,slot:2,name:"maxValue",structure:s},{...t,type:7,slot:3,name:"defaultValue",structure:s},{...t,type:7,slot:4,name:"description",structure:St}],methods:[],template:Ls}});Object.assign(zt,{...e,type:1,name:"[114:0]u8",length:114,byteSize:115,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:c}],methods:[]}});Object.assign(ht,{...e,type:13,name:"*const [114:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:zt}],methods:[]}});Object.assign(wt,{...e,type:2,name:"Struct1306967236",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:s},{...t,type:7,slot:2,name:"maxValue",structure:s},{...t,type:7,slot:3,name:"defaultValue",structure:s},{...t,type:7,slot:4,name:"description",structure:ht}],methods:[],template:Ns}});Object.assign(dt,{...e,type:2,name:"Struct1940366952",align:1,instance:{members:[{...t,type:7,slot:0,name:"on",structure:Y},{...t,type:7,slot:1,name:"light",structure:rt},{...t,type:7,slot:2,name:"lightcolor",structure:it},{...t,type:7,slot:3,name:"heightmap_multi",structure:mt},{...t,type:7,slot:4,name:"invert",structure:lt},{...t,type:7,slot:5,name:"lightwidth",structure:Ot},{...t,type:7,slot:6,name:"reflection",structure:ft},{...t,type:7,slot:7,name:"refl_tolerance",structure:wt}],methods:[],template:Zs}});Object.assign(f,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:a}],methods:[],template:tr}});Object.assign(At,{...e,type:2,name:"Struct3971329992",align:1,instance:{members:[{...t,type:7,slot:0,name:"src",structure:f},{...t,type:7,slot:1,name:"img",structure:f}],methods:[],template:sr}});Object.assign(Ut,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:f}],methods:[],template:rr}});Object.assign(Kt,{...e,type:2,name:"bumpmap.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:G},{...t,type:7,slot:1,name:"vendor",structure:J},{...t,type:7,slot:2,name:"version",structure:a},{...t,type:7,slot:3,name:"description",structure:Q},{...t,type:7,slot:4,name:"parameters",structure:dt},{...t,type:7,slot:5,name:"inputImages",structure:At},{...t,type:7,slot:6,name:"outputImages",structure:Ut}],methods:[],template:nr}});Object.assign(v,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:c}],methods:[]}});Object.assign(Vt,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:v}],methods:[]}});Object.assign(k,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:Vt}],methods:[]}});Object.assign(y,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[]}});Object.assign(S,{...e,type:11,name:"bumpmap.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:S}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:S},{...t,type:7,slot:1,name:"display-p3",structure:S}],methods:[],template:Or}});Object.assign(x,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:x}],methods:[]}});Object.assign(Tt,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:j}],methods:[]}});Object.assign(R,{...e,type:2,name:"bumpmap.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:k},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:S},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:x}],methods:[],template:fr},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:r},{...t,type:7,slot:1,name:"FPixel",structure:r},{...t,type:7,slot:2,name:"channels",structure:a}],methods:[],template:hr}});Object.assign(C,{...e,type:2,name:"bumpmap.KernelInput(u8,bumpmap.kernel)",byteSize:48,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:R},{...t,type:5,bitOffset:192,bitSize:192,byteSize:24,slot:1,name:"img",structure:R}],methods:[],template:Vr}});Object.assign(Pt,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:v}],methods:[]}});Object.assign(E,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:Pt}],methods:[]}});Object.assign(Rt,{...e,type:2,name:"bumpmap.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:E},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:S},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:x}],methods:[],template:Ir},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:r},{...t,type:7,slot:1,name:"FPixel",structure:r},{...t,type:7,slot:2,name:"channels",structure:a}],methods:[],template:vr}});Object.assign(K,{...e,type:2,name:"bumpmap.KernelOutput(u8,bumpmap.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:Rt}],methods:[],template:_r}});Object.assign(T,{...e,type:2,name:"bumpmap.KernelParameters(bumpmap.kernel)",byteSize:64,align:16,instance:{members:[{...t,type:2,bitOffset:256,bitSize:32,byteSize:4,slot:2,name:"on",structure:V},{...t,type:5,bitOffset:0,bitSize:96,byteSize:16,slot:0,name:"light",structure:z},{...t,type:5,bitOffset:128,bitSize:96,byteSize:16,slot:1,name:"lightcolor",structure:z},{...t,type:4,bitOffset:288,bitSize:32,byteSize:4,slot:3,name:"heightmap_multi",structure:j},{...t,type:2,bitOffset:320,bitSize:32,byteSize:4,slot:4,name:"invert",structure:V},{...t,type:4,bitOffset:352,bitSize:32,byteSize:4,slot:5,name:"lightwidth",structure:j},{...t,type:4,bitOffset:384,bitSize:32,byteSize:4,slot:6,name:"reflection",structure:j},{...t,type:4,bitOffset:416,bitSize:32,byteSize:4,slot:7,name:"refl_tolerance",structure:j}],methods:[],template:Fr}});Object.assign(A,{...e,type:10,name:"ErrorSet1211071710",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:A}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:A}],methods:[],template:$r}});Object.assign(_t,{...e,type:9,name:"ErrorSet1211071710!bumpmap.KernelOutput(u8,bumpmap.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:K},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:A}],methods:[]}});Object.assign(Dt,{...e,type:5,name:"createOutput",byteSize:160,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:512,bitSize:32,byteSize:4,slot:3,name:"0",structure:y},{...t,type:3,isRequired:!0,bitOffset:544,bitSize:32,byteSize:4,slot:4,name:"1",structure:y},{...t,type:5,isRequired:!0,bitOffset:576,bitSize:384,byteSize:48,slot:0,name:"2",structure:C},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:512,byteSize:64,slot:1,name:"3",structure:T},{...t,type:5,isRequired:!0,bitOffset:960,bitSize:224,byteSize:28,slot:2,name:"retval",structure:_t}],methods:[]}});Object.assign(U,{...e,type:10,name:"ErrorSet3914400875",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:U}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:U}],methods:[],template:Br}});Object.assign(Mt,{...e,type:9,name:"ErrorSet3914400875!bumpmap.KernelOutput(u8,bumpmap.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:K},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:U}],methods:[]}});Object.assign(Ft,{...e,type:5,name:"createPartialOutput",byteSize:160,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:512,bitSize:32,byteSize:4,slot:3,name:"0",structure:y},{...t,type:3,isRequired:!0,bitOffset:544,bitSize:32,byteSize:4,slot:4,name:"1",structure:y},{...t,type:3,isRequired:!0,bitOffset:576,bitSize:32,byteSize:4,slot:5,name:"2",structure:y},{...t,type:3,isRequired:!0,bitOffset:608,bitSize:32,byteSize:4,slot:6,name:"3",structure:y},{...t,type:5,isRequired:!0,bitOffset:640,bitSize:384,byteSize:48,slot:0,name:"4",structure:C},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:512,byteSize:64,slot:1,name:"5",structure:T},{...t,type:5,isRequired:!0,bitOffset:1024,bitSize:224,byteSize:28,slot:2,name:"retval",structure:Mt}],methods:[]}});Object.assign($t,{...e,type:2,name:"bumpmap",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:r},{...t,type:7,slot:1,name:"Input",structure:r},{...t,type:7,slot:2,name:"Output",structure:r},{...t,type:7,slot:3,name:"Parameters",structure:r}],methods:[Wo,Xo],template:Hr}});const Yo=[r,c,B,G,H,J,a,b,N,Q,W,X,V,Y,j,z,s,n,Z,tt,et,st,rt,nt,P,at,ot,it,ct,ut,mt,yt,bt,lt,gt,pt,Ot,jt,St,ft,zt,ht,wt,dt,f,At,Ut,Kt,v,Vt,k,y,S,x,Tt,R,C,Pt,E,Rt,K,T,A,_t,Dt,U,Mt,Ft,$t],Zo=$t,t1={runtimeSafety:!1,littleEndian:!0},vt=On();vt.getSpecialExports();vt.recreateStructures(Yo,t1);const e1=(async()=>{const u=new URL("bumpmap-f2c9c871.wasm",import.meta.url).href;return fetch(u)})();vt.loadModule(e1);vt.linkVariables(!0);const{constructor:s1}=Zo,{createPartialOutput:r1,Input:n1,kernel:Et}=s1;function a1(u,l,m,i,o={},h={}){const w=[];for(const[p]of Et.inputImages)w.push(p);const q=[];for(const[p]of Et.outputImages)q.push(p);if(Array.isArray(o)){const p=o;o={};for(const[O,d]of w.entries())o[d]=p[O]}const g=new n1(void 0),F=[];let I;for(const p of w){let O=o[p];if(O||(w.length===1&&["data","width","height"].every(d=>!!o[d])?O=o:F.push(p)),g[p]=O,I){if(O.colorSpace!==I)throw new Error(`Input images must all use the same color space: ${I}`)}else I=O.colorSpace}if(F.length>0)throw new Error(`Missing input image${F.length>1?"s":""}: ${F.join(", ")}`);const Ct=r1(u,l,m,i,g,h),es=p=>{const O={};for(const d of q){const{data:{typedArray:$},width:ss,height:rn}=p[d];let L;if(typeof ImageData=="function"){const nn=new Uint8ClampedArray($.buffer,$.byteOffset,$.byteLength);L=new ImageData(nn,ss,i,{colorSpace:I})}else L={data:$,width:ss,height:rn};if(q.length===1)return L;O[d]=L}return O};return Ct[Symbol.toStringTag]==="Promise"?Ct.then(es):es(Ct)}function o1(){const u={};for(let[l,m]of Et){if(l==="parameters"){const i={};for(const[o,h]of m){const w=i[o]={};for(let[q,g]of h)typeof g=="object"?g=g.string??g.valueOf():typeof g=="function"&&(g=i1(g.name)),w[q]=g}m=i}else typeof m=="object"&&(m=m.string??m.valueOf());u[l]=m}return u}function i1(u){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[u]}onmessage=u=>{const[l,m,...i]=u.data;c1(l,i).then(([o,h])=>{postMessage([l,m,o],{transfer:h})}).catch(o=>{postMessage(["error",m,o])})};async function c1(u,l){switch(u){case"getKernelInfo":return[o1(...l)];case"createPartialImageData":const i=await a1(...l),o=[];if("data"in i&&"width"in i&&"height"in i)o.push(i.data.buffer);else for(const h of Object.entries(i))o.push(i.data.buffer);return[i,o];default:throw new Error(`Unknown function: ${u}`)}}
