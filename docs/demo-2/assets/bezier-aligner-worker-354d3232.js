import{u as $t,a as Bt,b as Lt,d as Gt,c as Ht,e as Jt,f as Nt,g as Qt,h as Wt,i as Xt,j as Yt,k as Zt,l as er,m as tr,o as rr,n as sr,p as ar,q as nr}from"./index-076239a4.js";$t();Bt();Lt();Gt();Ht();Jt();Nt();Qt();Wt();Xt();Yt();Zt();er();tr();rr();sr();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},y={},ke={},Ie={},Q={},xe={},ve={},W={},d={},S={},Ee={},Ke={},X={},p={},m={},s={},r={},A={},b={},U={},g={},De={},Y={},Fe={},Me={},Z={},_e={},ee={},Te={},te={},F={},M={},P={},$e={},re={},Be={},se={},Le={},ae={},Ge={},ne={},He={},Je={},ie={},Ne={},ue={},Qe={},oe={},We={},me={},C={},z={},_={},T={},V={},Xe={},ye={},Ye={},Ze={},le={},et={},ce={},tt={},be={},rt={},pe={},st={},at={},fe={},nt={},de={},it={},ut={},Se={},ot={},ge={},mt={},yt={},he={},lt={},ze={},ct={},v={},O={},bt={},we={},pt={},Ae={},ft={},Ue={},dt={},Re={},St={},qe={},gt={},Oe={},ht={},je={},k={},w={},zt={},Pe={},wt={},Ce={},Pt={},I={},E={},K={},c={},At={},D={},Ut={},j={},$={},Rt={},qt={},Ve={},B={},L={},Ct={},Vt={},kt={},It={},xt={},vt={},Et={};Object.assign(y,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:y}],methods:[],template:null},slot:5});Object.assign(ke,{...t,type:1,name:"[13:0]u8",length:13,byteSize:14,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:y}],methods:[],template:null},slot:4});Object.assign(Ie,{...t,type:11,name:"*const [13:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ke}],methods:[],template:null},slot:3});Object.assign(Q,{...t,type:11,name:"*const *const [13:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ie}],methods:[],template:null},slot:2});Object.assign(xe,{...t,type:1,name:"[14:0]u8",length:14,byteSize:15,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:y}],methods:[],template:null},slot:8});Object.assign(ve,{...t,type:11,name:"*const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:xe}],methods:[],template:null},slot:7});Object.assign(W,{...t,type:11,name:"*const *const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ve}],methods:[],template:null},slot:6});Object.assign(d,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:d}],methods:[],template:null},slot:10});Object.assign(S,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:d}],methods:[],template:null},slot:9});Object.assign(Ee,{...t,type:1,name:"[35:0]u8",length:35,byteSize:36,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:y}],methods:[],template:null},slot:13});Object.assign(Ke,{...t,type:11,name:"*const [35:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ee}],methods:[],template:null},slot:12});Object.assign(X,{...t,type:11,name:"*const *const [35:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ke}],methods:[],template:null},slot:11});Object.assign(p,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[],template:null},slot:33});Object.assign(m,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:p}],methods:[],template:null},slot:32});Object.assign(s,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:s}],methods:[],template:null},slot:95});Object.assign(r,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:s}],methods:[],template:null},slot:94});const ir=new Uint8Array,ur=new Uint8Array([176,244,15,0]),or=new Uint8Array([0,0,0,0,0,192,114,192]),mr=new Uint8Array([216,244,15,0]),yr=new Uint8Array([0,0,0,0,0,192,114,192]);Object.assign(A,{...t,type:2,name:"Struct0042",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:ir},slots:{0:{structure:r,memory:{array:ur},slots:{0:{structure:s,memory:{array:or}}}},1:{structure:r,memory:{array:mr},slots:{0:{structure:s,memory:{array:yr}}}}}}},slot:65});Object.assign(b,{...t,type:11,name:"Struct0028",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:A}],methods:[],template:null},slot:64});const lr=new Uint8Array,cr=new Uint8Array([176,244,15,0]),br=new Uint8Array([0,0,0,0,0,32,140,64]),pr=new Uint8Array([216,244,15,0]),fr=new Uint8Array([0,0,0,0,0,32,140,64]);Object.assign(U,{...t,type:2,name:"Struct0043",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:lr},slots:{0:{structure:r,memory:{array:cr},slots:{0:{structure:s,memory:{array:br}}}},1:{structure:r,memory:{array:pr},slots:{0:{structure:s,memory:{array:fr}}}}}}},slot:67});Object.assign(g,{...t,type:11,name:"Struct0029",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:U}],methods:[],template:null},slot:66});const dr=new Uint8Array,Sr=new Uint8Array([56,250,15,0]),gr=new Uint8Array([0,0,0,0,0,0,73,64]),hr=new Uint8Array([96,248,15,0]),zr=new Uint8Array([0,0,0,0,0,0,105,64]);Object.assign(De,{...t,type:2,name:"Struct0044",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:dr},slots:{0:{structure:r,memory:{array:Sr},slots:{0:{structure:s,memory:{array:gr}}}},1:{structure:r,memory:{array:hr},slots:{0:{structure:s,memory:{array:zr}}}}}}},slot:69});Object.assign(Y,{...t,type:11,name:"Struct0030",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:De}],methods:[],template:null},slot:68});Object.assign(Fe,{...t,type:1,name:"[31:0]u8",length:31,byteSize:32,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:y}],methods:[],template:null},slot:72});Object.assign(Me,{...t,type:11,name:"*const [31:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Fe}],methods:[],template:null},slot:71});Object.assign(Z,{...t,type:11,name:"*const *const [31:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Me}],methods:[],template:null},slot:70});const wr=new Uint8Array,Ar=new Uint8Array([170,170,170,170]),Ur=new Uint8Array,Rr=new Uint8Array([170,170,170,170]),qr=new Uint8Array,Or=new Uint8Array([170,170,170,170]),jr=new Uint8Array,Pr=new Uint8Array([72,247,15,0]),Cr=new Uint8Array([203,37,16,0]),Vr=new Uint8Array([115,116,97,114,116,32,112,111,105,110,116,32,102,111,114,32,98,101,122,105,101,114,32,115,101,113,117,101,110,99,101,0]);Object.assign(_e,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:b},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:g},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:Y},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:Z}],methods:[],template:{memory:{array:wr},slots:{0:{structure:b,memory:{array:Ar},slots:{0:{structure:A,memory:{array:Ur}}}},1:{structure:g,memory:{array:Rr},slots:{0:{structure:U,memory:{array:qr}}}},2:{structure:Y,memory:{array:Or},slots:{0:{structure:De,memory:{array:jr}}}},3:{structure:Z,memory:{array:Pr},slots:{0:{structure:Me,memory:{array:Cr},slots:{0:{structure:Fe,memory:{array:Vr}}}}}}}}},slot:40});Object.assign(ee,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:_e}],methods:[],template:null},slot:39});const kr=new Uint8Array,Ir=new Uint8Array([56,250,15,0]),xr=new Uint8Array([0,0,0,0,0,0,105,64]),vr=new Uint8Array([96,248,15,0]),Er=new Uint8Array([0,0,0,0,0,0,89,64]);Object.assign(Te,{...t,type:2,name:"Struct0045",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:kr},slots:{0:{structure:r,memory:{array:Ir},slots:{0:{structure:s,memory:{array:xr}}}},1:{structure:r,memory:{array:vr},slots:{0:{structure:s,memory:{array:Er}}}}}}},slot:74});Object.assign(te,{...t,type:11,name:"Struct0031",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Te}],methods:[],template:null},slot:73});Object.assign(F,{...t,type:1,name:"[39:0]u8",length:39,byteSize:40,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:y}],methods:[],template:null},slot:77});Object.assign(M,{...t,type:11,name:"*const [39:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[],template:null},slot:76});Object.assign(P,{...t,type:11,name:"*const *const [39:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[],template:null},slot:75});const Kr=new Uint8Array,Dr=new Uint8Array([170,170,170,170]),Fr=new Uint8Array,Mr=new Uint8Array([170,170,170,170]),_r=new Uint8Array,Tr=new Uint8Array([170,170,170,170]),$r=new Uint8Array,Br=new Uint8Array([32,250,15,0]),Lr=new Uint8Array([163,37,16,0]),Gr=new Uint8Array([102,105,114,115,116,32,99,111,110,116,114,111,108,32,112,111,105,110,116,32,102,111,114,32,98,101,122,105,101,114,32,115,101,113,117,101,110,99,101,0]);Object.assign($e,{...t,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:b},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:g},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:te},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:P}],methods:[],template:{memory:{array:Kr},slots:{0:{structure:b,memory:{array:Dr},slots:{0:{structure:A,memory:{array:Fr}}}},1:{structure:g,memory:{array:Mr},slots:{0:{structure:U,memory:{array:_r}}}},2:{structure:te,memory:{array:Tr},slots:{0:{structure:Te,memory:{array:$r}}}},3:{structure:P,memory:{array:Br},slots:{0:{structure:M,memory:{array:Lr},slots:{0:{structure:F,memory:{array:Gr}}}}}}}}},slot:42});Object.assign(re,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:$e}],methods:[],template:null},slot:41});const Hr=new Uint8Array,Jr=new Uint8Array([56,250,15,0]),Nr=new Uint8Array([0,0,0,0,0,0,121,64]),Qr=new Uint8Array([96,248,15,0]),Wr=new Uint8Array([0,0,0,0,0,192,114,64]);Object.assign(Be,{...t,type:2,name:"Struct0046",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Hr},slots:{0:{structure:r,memory:{array:Jr},slots:{0:{structure:s,memory:{array:Nr}}}},1:{structure:r,memory:{array:Qr},slots:{0:{structure:s,memory:{array:Wr}}}}}}},slot:79});Object.assign(se,{...t,type:11,name:"Struct0032",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Be}],methods:[],template:null},slot:78});const Xr=new Uint8Array,Yr=new Uint8Array([170,170,170,170]),Zr=new Uint8Array,es=new Uint8Array([170,170,170,170]),ts=new Uint8Array,rs=new Uint8Array([170,170,170,170]),ss=new Uint8Array,as=new Uint8Array([32,250,15,0]),ns=new Uint8Array([163,37,16,0]),is=new Uint8Array([102,105,114,115,116,32,99,111,110,116,114,111,108,32,112,111,105,110,116,32,102,111,114,32,98,101,122,105,101,114,32,115,101,113,117,101,110,99,101,0]);Object.assign(Le,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:b},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:g},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:se},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:P}],methods:[],template:{memory:{array:Xr},slots:{0:{structure:b,memory:{array:Yr},slots:{0:{structure:A,memory:{array:Zr}}}},1:{structure:g,memory:{array:es},slots:{0:{structure:U,memory:{array:ts}}}},2:{structure:se,memory:{array:rs},slots:{0:{structure:Be,memory:{array:ss}}}},3:{structure:P,memory:{array:as},slots:{0:{structure:M,memory:{array:ns},slots:{0:{structure:F,memory:{array:is}}}}}}}}},slot:44});Object.assign(ae,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Le}],methods:[],template:null},slot:43});const us=new Uint8Array,os=new Uint8Array([56,250,15,0]),ms=new Uint8Array([0,0,0,0,0,48,129,64]),ys=new Uint8Array([96,248,15,0]),ls=new Uint8Array([0,0,0,0,0,0,105,64]);Object.assign(Ge,{...t,type:2,name:"Struct0047",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:us},slots:{0:{structure:r,memory:{array:os},slots:{0:{structure:s,memory:{array:ms}}}},1:{structure:r,memory:{array:ys},slots:{0:{structure:s,memory:{array:ls}}}}}}},slot:81});Object.assign(ne,{...t,type:11,name:"Struct0033",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ge}],methods:[],template:null},slot:80});Object.assign(He,{...t,type:1,name:"[29:0]u8",length:29,byteSize:30,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:y}],methods:[],template:null},slot:84});Object.assign(Je,{...t,type:11,name:"*const [29:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:He}],methods:[],template:null},slot:83});Object.assign(ie,{...t,type:11,name:"*const *const [29:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Je}],methods:[],template:null},slot:82});const cs=new Uint8Array,bs=new Uint8Array([170,170,170,170]),ps=new Uint8Array,fs=new Uint8Array([170,170,170,170]),ds=new Uint8Array,Ss=new Uint8Array([170,170,170,170]),gs=new Uint8Array,hs=new Uint8Array([72,247,15,0]),zs=new Uint8Array([133,37,16,0]),ws=new Uint8Array([101,110,100,32,112,111,105,110,116,32,102,111,114,32,98,101,122,105,101,114,32,115,101,113,117,101,110,99,101,0]);Object.assign(Ne,{...t,type:2,name:"Struct0020",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:b},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:g},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:ne},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:ie}],methods:[],template:{memory:{array:cs},slots:{0:{structure:b,memory:{array:bs},slots:{0:{structure:A,memory:{array:ps}}}},1:{structure:g,memory:{array:fs},slots:{0:{structure:U,memory:{array:ds}}}},2:{structure:ne,memory:{array:Ss},slots:{0:{structure:Ge,memory:{array:gs}}}},3:{structure:ie,memory:{array:hs},slots:{0:{structure:Je,memory:{array:zs},slots:{0:{structure:He,memory:{array:ws}}}}}}}}},slot:46});Object.assign(ue,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ne}],methods:[],template:null},slot:45});const As=new Uint8Array,Us=new Uint8Array([56,250,15,0]),Rs=new Uint8Array([0,0,0,0,0,0,224,63]),qs=new Uint8Array([96,248,15,0]),Os=new Uint8Array([0,0,0,0,0,0,224,63]);Object.assign(Qe,{...t,type:2,name:"Struct0048",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:As},slots:{0:{structure:r,memory:{array:Us},slots:{0:{structure:s,memory:{array:Rs}}}},1:{structure:r,memory:{array:qs},slots:{0:{structure:s,memory:{array:Os}}}}}}},slot:86});Object.assign(oe,{...t,type:11,name:"Struct0034",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Qe}],methods:[],template:null},slot:85});const js=new Uint8Array,Ps=new Uint8Array([56,250,15,0]),Cs=new Uint8Array([0,0,0,0,0,0,4,64]),Vs=new Uint8Array([96,248,15,0]),ks=new Uint8Array([0,0,0,0,0,0,4,64]);Object.assign(We,{...t,type:2,name:"Struct0049",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:js},slots:{0:{structure:r,memory:{array:Ps},slots:{0:{structure:s,memory:{array:Cs}}}},1:{structure:r,memory:{array:Vs},slots:{0:{structure:s,memory:{array:ks}}}}}}},slot:88});Object.assign(me,{...t,type:11,name:"Struct0035",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:We}],methods:[],template:null},slot:87});const Is=new Uint8Array,xs=new Uint8Array([176,244,15,0]),vs=new Uint8Array([0,0,0,0,0,0,240,63]),Es=new Uint8Array([216,244,15,0]),Ks=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(C,{...t,type:2,name:"Struct0050",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Is},slots:{0:{structure:r,memory:{array:xs},slots:{0:{structure:s,memory:{array:vs}}}},1:{structure:r,memory:{array:Es},slots:{0:{structure:s,memory:{array:Ks}}}}}}},slot:90});Object.assign(z,{...t,type:11,name:"Struct0036",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:C}],methods:[],template:null},slot:89});Object.assign(_,{...t,type:1,name:"[24:0]u8",length:24,byteSize:25,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:y}],methods:[],template:null},slot:93});Object.assign(T,{...t,type:11,name:"*const [24:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[],template:null},slot:92});Object.assign(V,{...t,type:11,name:"*const *const [24:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[],template:null},slot:91});const Ds=new Uint8Array,Fs=new Uint8Array([170,170,170,170]),Ms=new Uint8Array,_s=new Uint8Array([170,170,170,170]),Ts=new Uint8Array,$s=new Uint8Array([170,170,170,170]),Bs=new Uint8Array,Ls=new Uint8Array([8,247,15,0]),Gs=new Uint8Array([108,37,16,0]),Hs=new Uint8Array([83,99,97,108,101,115,32,116,104,101,32,116,101,120,116,117,114,101,32,105,109,97,103,101,0]);Object.assign(Xe,{...t,type:2,name:"Struct0021",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:oe},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:me},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:z},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:V}],methods:[],template:{memory:{array:Ds},slots:{0:{structure:oe,memory:{array:Fs},slots:{0:{structure:Qe,memory:{array:Ms}}}},1:{structure:me,memory:{array:_s},slots:{0:{structure:We,memory:{array:Ts}}}},2:{structure:z,memory:{array:$s},slots:{0:{structure:C,memory:{array:Bs}}}},3:{structure:V,memory:{array:Ls},slots:{0:{structure:T,memory:{array:Gs},slots:{0:{structure:_,memory:{array:Hs}}}}}}}}},slot:48});Object.assign(ye,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Xe}],methods:[],template:null},slot:47});Object.assign(Ye,{...t,type:1,name:"[42:0]u8",length:42,byteSize:43,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:y}],methods:[],template:null},slot:98});Object.assign(Ze,{...t,type:11,name:"*const [42:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ye}],methods:[],template:null},slot:97});Object.assign(le,{...t,type:11,name:"*const *const [42:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ze}],methods:[],template:null},slot:96});const Js=new Uint8Array,Ns=new Uint8Array([136,249,15,0]),Qs=new Uint8Array([0,0,0,0,0,0,0,0]),Ws=new Uint8Array([232,249,15,0]),Xs=new Uint8Array([0,0,0,0,0,64,127,64]),Ys=new Uint8Array([16,250,15,0]),Zs=new Uint8Array([0,0,0,0,0,0,105,64]),ea=new Uint8Array([56,248,15,0]),ta=new Uint8Array([65,37,16,0]),ra=new Uint8Array([105,109,97,103,101,119,105,100,116,104,58,32,104,111,119,32,119,105,100,101,32,116,104,101,32,114,101,112,101,97,116,105,110,103,32,112,97,114,116,32,105,115,0]);Object.assign(et,{...t,type:2,name:"Struct0022",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:p},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:le}],methods:[],template:{memory:{array:Js},slots:{0:{structure:r,memory:{array:Ns},slots:{0:{structure:s,memory:{array:Qs}}}},1:{structure:r,memory:{array:Ws},slots:{0:{structure:s,memory:{array:Xs}}}},2:{structure:r,memory:{array:Ys},slots:{0:{structure:s,memory:{array:Zs}}}},3:{structure:le,memory:{array:ea},slots:{0:{structure:Ze,memory:{array:ta},slots:{0:{structure:Ye,memory:{array:ra}}}}}}}}},slot:50});Object.assign(ce,{...t,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:et}],methods:[],template:null},slot:49});const sa=new Uint8Array,aa=new Uint8Array([56,250,15,0]),na=new Uint8Array([0,0,0,0,0,192,114,64]),ia=new Uint8Array([96,248,15,0]),ua=new Uint8Array([0,0,0,0,0,192,114,64]);Object.assign(tt,{...t,type:2,name:"Struct0051",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:sa},slots:{0:{structure:r,memory:{array:aa},slots:{0:{structure:s,memory:{array:na}}}},1:{structure:r,memory:{array:ia},slots:{0:{structure:s,memory:{array:ua}}}}}}},slot:100});Object.assign(be,{...t,type:11,name:"Struct0037",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:tt}],methods:[],template:null},slot:99});const oa=new Uint8Array,ma=new Uint8Array([56,250,15,0]),ya=new Uint8Array([0,0,0,0,0,0,0,0]),la=new Uint8Array([96,248,15,0]),ca=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(rt,{...t,type:2,name:"Struct0052",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:oa},slots:{0:{structure:r,memory:{array:ma},slots:{0:{structure:s,memory:{array:ya}}}},1:{structure:r,memory:{array:la},slots:{0:{structure:s,memory:{array:ca}}}}}}},slot:102});Object.assign(pe,{...t,type:11,name:"Struct0038",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:rt}],methods:[],template:null},slot:101});Object.assign(st,{...t,type:1,name:"[87:0]u8",length:87,byteSize:88,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:y}],methods:[],template:null},slot:105});Object.assign(at,{...t,type:11,name:"*const [87:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:st}],methods:[],template:null},slot:104});Object.assign(fe,{...t,type:11,name:"*const *const [87:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:at}],methods:[],template:null},slot:103});const ba=new Uint8Array,pa=new Uint8Array([170,170,170,170]),fa=new Uint8Array,da=new Uint8Array([170,170,170,170]),Sa=new Uint8Array,ga=new Uint8Array([170,170,170,170]),ha=new Uint8Array,za=new Uint8Array([216,247,15,0]),wa=new Uint8Array([233,36,16,0]),Aa=new Uint8Array([111,102,102,115,101,116,46,120,61,68,105,115,112,108,97,99,101,109,101,110,116,32,97,108,111,110,103,32,116,104,101,32,99,117,114,118,101,44,32,111,102,102,115,101,116,46,121,61,68,105,115,112,108,97,99,101,109,101,110,116,32,112,101,114,112,101,110,100,105,99,117,108,97,114,32,116,111,32,116,104,101,32,99,117,114,118,101,0]);Object.assign(nt,{...t,type:2,name:"Struct0023",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:b},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:be},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:pe},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:fe}],methods:[],template:{memory:{array:ba},slots:{0:{structure:b,memory:{array:pa},slots:{0:{structure:A,memory:{array:fa}}}},1:{structure:be,memory:{array:da},slots:{0:{structure:tt,memory:{array:Sa}}}},2:{structure:pe,memory:{array:ga},slots:{0:{structure:rt,memory:{array:ha}}}},3:{structure:fe,memory:{array:za},slots:{0:{structure:at,memory:{array:wa},slots:{0:{structure:st,memory:{array:Aa}}}}}}}}},slot:52});Object.assign(de,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:nt}],methods:[],template:null},slot:51});Object.assign(it,{...t,type:1,name:"[61:0]u8",length:61,byteSize:62,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:y}],methods:[],template:null},slot:108});Object.assign(ut,{...t,type:11,name:"*const [61:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:it}],methods:[],template:null},slot:107});Object.assign(Se,{...t,type:11,name:"*const *const [61:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ut}],methods:[],template:null},slot:106});const Ua=new Uint8Array,Ra=new Uint8Array([136,249,15,0]),qa=new Uint8Array([0,0,0,0,0,0,0,0]),Oa=new Uint8Array([232,249,15,0]),ja=new Uint8Array([0,0,0,0,0,0,240,63]),Pa=new Uint8Array([16,250,15,0]),Ca=new Uint8Array([0,0,0,0,0,0,0,0]),Va=new Uint8Array([56,248,15,0]),ka=new Uint8Array([171,36,16,0]),Ia=new Uint8Array([116,104,101,32,100,101,102,97,117,108,116,32,48,32,109,101,97,110,115,32,116,104,97,116,32,116,104,101,32,99,117,114,118,101,32,115,116,97,114,116,115,32,102,114,111,109,32,116,104,101,32,115,116,97,114,116,112,111,105,110,116,0]);Object.assign(ot,{...t,type:2,name:"Struct0024",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:p},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:Se}],methods:[],template:{memory:{array:Ua},slots:{0:{structure:r,memory:{array:Ra},slots:{0:{structure:s,memory:{array:qa}}}},1:{structure:r,memory:{array:Oa},slots:{0:{structure:s,memory:{array:ja}}}},2:{structure:r,memory:{array:Pa},slots:{0:{structure:s,memory:{array:Ca}}}},3:{structure:Se,memory:{array:Va},slots:{0:{structure:ut,memory:{array:ka},slots:{0:{structure:it,memory:{array:Ia}}}}}}}}},slot:54});Object.assign(ge,{...t,type:11,name:"Struct0013",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ot}],methods:[],template:null},slot:53});Object.assign(mt,{...t,type:1,name:"[55:0]u8",length:55,byteSize:56,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:y}],methods:[],template:null},slot:111});Object.assign(yt,{...t,type:11,name:"*const [55:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:mt}],methods:[],template:null},slot:110});Object.assign(he,{...t,type:11,name:"*const *const [55:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:yt}],methods:[],template:null},slot:109});const xa=new Uint8Array,va=new Uint8Array([136,249,15,0]),Ea=new Uint8Array([0,0,0,0,0,0,0,0]),Ka=new Uint8Array([232,249,15,0]),Da=new Uint8Array([0,0,0,0,0,0,240,63]),Fa=new Uint8Array([16,250,15,0]),Ma=new Uint8Array([0,0,0,0,0,0,240,63]),_a=new Uint8Array([56,248,15,0]),Ta=new Uint8Array([115,36,16,0]),$a=new Uint8Array([116,104,101,32,100,101,102,97,117,108,116,32,49,32,109,101,97,110,115,32,116,104,97,116,32,116,104,101,32,99,117,114,118,101,32,101,110,100,115,32,97,116,32,116,104,101,32,101,110,100,112,111,105,110,116,0]);Object.assign(lt,{...t,type:2,name:"Struct0025",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:p},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:he}],methods:[],template:{memory:{array:xa},slots:{0:{structure:r,memory:{array:va},slots:{0:{structure:s,memory:{array:Ea}}}},1:{structure:r,memory:{array:Ka},slots:{0:{structure:s,memory:{array:Da}}}},2:{structure:r,memory:{array:Fa},slots:{0:{structure:s,memory:{array:Ma}}}},3:{structure:he,memory:{array:_a},slots:{0:{structure:yt,memory:{array:Ta},slots:{0:{structure:mt,memory:{array:$a}}}}}}}}},slot:56});Object.assign(ze,{...t,type:11,name:"Struct0014",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:lt}],methods:[],template:null},slot:55});Object.assign(ct,{...t,type:1,name:"[2]@Vector(2, f32)",length:2,byteSize:16,align:3,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,structure:m}],methods:[],template:null},slot:34});const Ba=new Uint8Array,La=new Uint8Array([176,244,15,0]),Ga=new Uint8Array([0,0,0,0,0,0,240,191]),Ha=new Uint8Array([216,244,15,0]),Ja=new Uint8Array([0,0,0,0,0,0,240,191]);Object.assign(v,{...t,type:2,name:"Struct0059",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Ba},slots:{0:{structure:r,memory:{array:La},slots:{0:{structure:s,memory:{array:Ga}}}},1:{structure:r,memory:{array:Ha},slots:{0:{structure:s,memory:{array:Ja}}}}}}},slot:119});Object.assign(O,{...t,type:11,name:"Struct0056",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:v}],methods:[],template:null},slot:118});const Na=new Uint8Array,Qa=new Uint8Array([170,170,170,170]),Wa=new Uint8Array,Xa=new Uint8Array([170,170,170,170]),Ya=new Uint8Array;Object.assign(bt,{...t,type:2,name:"Struct0053",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:O},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:O}],methods:[],template:{memory:{array:Na},slots:{0:{structure:O,memory:{array:Qa},slots:{0:{structure:v,memory:{array:Wa}}}},1:{structure:O,memory:{array:Xa},slots:{0:{structure:v,memory:{array:Ya}}}}}}},slot:113});Object.assign(we,{...t,type:11,name:"Struct0039",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:bt}],methods:[],template:null},slot:112});const Za=new Uint8Array,en=new Uint8Array([170,170,170,170]),tn=new Uint8Array,rn=new Uint8Array([170,170,170,170]),sn=new Uint8Array;Object.assign(pt,{...t,type:2,name:"Struct0054",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:z},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:z}],methods:[],template:{memory:{array:Za},slots:{0:{structure:z,memory:{array:en},slots:{0:{structure:C,memory:{array:tn}}}},1:{structure:z,memory:{array:rn},slots:{0:{structure:C,memory:{array:sn}}}}}}},slot:115});Object.assign(Ae,{...t,type:11,name:"Struct0040",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pt}],methods:[],template:null},slot:114});const an=new Uint8Array,nn=new Uint8Array([240,249,15,0]),un=new Uint8Array([0,0,0,0,0,0,240,63]),on=new Uint8Array([24,250,15,0]),mn=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(ft,{...t,type:2,name:"Struct0060",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:an},slots:{0:{structure:r,memory:{array:nn},slots:{0:{structure:s,memory:{array:un}}}},1:{structure:r,memory:{array:on},slots:{0:{structure:s,memory:{array:mn}}}}}}},slot:121});Object.assign(Ue,{...t,type:11,name:"Struct0057",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ft}],methods:[],template:null},slot:120});const yn=new Uint8Array,ln=new Uint8Array([240,249,15,0]),cn=new Uint8Array([0,0,0,0,0,0,0,0]),bn=new Uint8Array([24,250,15,0]),pn=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(dt,{...t,type:2,name:"Struct0061",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:yn},slots:{0:{structure:r,memory:{array:ln},slots:{0:{structure:s,memory:{array:cn}}}},1:{structure:r,memory:{array:bn},slots:{0:{structure:s,memory:{array:pn}}}}}}},slot:123});Object.assign(Re,{...t,type:11,name:"Struct0058",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:dt}],methods:[],template:null},slot:122});const fn=new Uint8Array,dn=new Uint8Array([170,170,170,170]),Sn=new Uint8Array,gn=new Uint8Array([170,170,170,170]),hn=new Uint8Array;Object.assign(St,{...t,type:2,name:"Struct0055",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:Ue},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:Re}],methods:[],template:{memory:{array:fn},slots:{0:{structure:Ue,memory:{array:dn},slots:{0:{structure:ft,memory:{array:Sn}}}},1:{structure:Re,memory:{array:gn},slots:{0:{structure:dt,memory:{array:hn}}}}}}},slot:117});Object.assign(qe,{...t,type:11,name:"Struct0041",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:St}],methods:[],template:null},slot:116});const zn=new Uint8Array,wn=new Uint8Array([170,170,170,170]),An=new Uint8Array,Un=new Uint8Array([170,170,170,170]),Rn=new Uint8Array,qn=new Uint8Array([170,170,170,170]),On=new Uint8Array,jn=new Uint8Array([64,248,15,0]),Pn=new Uint8Array([90,36,16,0]),Cn=new Uint8Array([82,111,116,97,116,105,111,110,32,97,114,111,117,110,100,32,116,104,101,32,97,120,105,115,0]);Object.assign(gt,{...t,type:2,name:"Struct0026",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:ct},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:we},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:Ae},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:qe},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:V}],methods:[],template:{memory:{array:zn},slots:{0:{structure:we,memory:{array:wn},slots:{0:{structure:bt,memory:{array:An}}}},1:{structure:Ae,memory:{array:Un},slots:{0:{structure:pt,memory:{array:Rn}}}},2:{structure:qe,memory:{array:qn},slots:{0:{structure:St,memory:{array:On}}}},3:{structure:V,memory:{array:jn},slots:{0:{structure:T,memory:{array:Pn},slots:{0:{structure:_,memory:{array:Cn}}}}}}}}},slot:58});Object.assign(Oe,{...t,type:11,name:"Struct0015",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:gt}],methods:[],template:null},slot:57});const Vn=new Uint8Array,kn=new Uint8Array([170,170,170,170]),In=new Uint8Array,xn=new Uint8Array([170,170,170,170]),vn=new Uint8Array,En=new Uint8Array([170,170,170,170]),Kn=new Uint8Array,Dn=new Uint8Array([170,170,170,170]),Fn=new Uint8Array,Mn=new Uint8Array([170,170,170,170]),_n=new Uint8Array,Tn=new Uint8Array([170,170,170,170]),$n=new Uint8Array,Bn=new Uint8Array([170,170,170,170]),Ln=new Uint8Array,Gn=new Uint8Array([170,170,170,170]),Hn=new Uint8Array,Jn=new Uint8Array([170,170,170,170]),Nn=new Uint8Array,Qn=new Uint8Array([170,170,170,170]),Wn=new Uint8Array;Object.assign(ht,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"startpoint",structure:ee},{...e,type:8,isRequired:!1,slot:1,name:"control1",structure:re},{...e,type:8,isRequired:!1,slot:2,name:"control2",structure:ae},{...e,type:8,isRequired:!1,slot:3,name:"endpoint",structure:ue},{...e,type:8,isRequired:!1,slot:4,name:"scale",structure:ye},{...e,type:8,isRequired:!1,slot:5,name:"imagewidth",structure:ce},{...e,type:8,isRequired:!1,slot:6,name:"offset",structure:de},{...e,type:8,isRequired:!1,slot:7,name:"tstart",structure:ge},{...e,type:8,isRequired:!1,slot:8,name:"tend",structure:ze},{...e,type:8,isRequired:!1,slot:9,name:"rotation",structure:Oe}],methods:[],template:{memory:{array:Vn},slots:{0:{structure:ee,memory:{array:kn},slots:{0:{structure:_e,memory:{array:In}}}},1:{structure:re,memory:{array:xn},slots:{0:{structure:$e,memory:{array:vn}}}},2:{structure:ae,memory:{array:En},slots:{0:{structure:Le,memory:{array:Kn}}}},3:{structure:ue,memory:{array:Dn},slots:{0:{structure:Ne,memory:{array:Fn}}}},4:{structure:ye,memory:{array:Mn},slots:{0:{structure:Xe,memory:{array:_n}}}},5:{structure:ce,memory:{array:Tn},slots:{0:{structure:et,memory:{array:$n}}}},6:{structure:de,memory:{array:Bn},slots:{0:{structure:nt,memory:{array:Ln}}}},7:{structure:ge,memory:{array:Gn},slots:{0:{structure:ot,memory:{array:Hn}}}},8:{structure:ze,memory:{array:Jn},slots:{0:{structure:lt,memory:{array:Nn}}}},9:{structure:Oe,memory:{array:Qn},slots:{0:{structure:gt,memory:{array:Wn}}}}}}},slot:15});Object.assign(je,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ht}],methods:[],template:null},slot:14});const Xn=new Uint8Array,Yn=new Uint8Array([16,250,15,0]),Zn=new Uint8Array([4,0,0,0]);Object.assign(k,{...t,type:2,name:"Struct0027",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:S}],methods:[],template:{memory:{array:Xn},slots:{0:{structure:S,memory:{array:Yn},slots:{0:{structure:d,memory:{array:Zn}}}}}}},slot:60});Object.assign(w,{...t,type:11,name:"Struct0016",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:k}],methods:[],template:null},slot:59});const ei=new Uint8Array,ti=new Uint8Array([170,170,170,170]),ri=new Uint8Array,si=new Uint8Array([170,170,170,170]),ai=new Uint8Array;Object.assign(zt,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"background",structure:w},{...e,type:8,isRequired:!1,slot:1,name:"texture",structure:w}],methods:[],template:{memory:{array:ei},slots:{0:{structure:w,memory:{array:ti},slots:{0:{structure:k,memory:{array:ri}}}},1:{structure:w,memory:{array:si},slots:{0:{structure:k,memory:{array:ai}}}}}}},slot:17});Object.assign(Pe,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:zt}],methods:[],template:null},slot:16});const ni=new Uint8Array,ii=new Uint8Array([170,170,170,170]),ui=new Uint8Array;Object.assign(wt,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:w}],methods:[],template:{memory:{array:ni},slots:{0:{structure:w,memory:{array:ii},slots:{0:{structure:k,memory:{array:ui}}}}}}},slot:19});Object.assign(Ce,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:wt}],methods:[],template:null},slot:18});const oi=new Uint8Array,mi=new Uint8Array,yi=new Uint8Array([84,42,16,0]),li=new Uint8Array([238,41,16,0]),ci=new Uint8Array([66,101,122,105,101,114,65,108,105,103,110,101,114,0]),bi=new Uint8Array([80,42,16,0]),pi=new Uint8Array([212,41,16,0]),fi=new Uint8Array([80,101,116,114,105,32,76,101,115,107,105,110,101,110,0]),di=new Uint8Array([76,42,16,0]),Si=new Uint8Array([1,0,0,0]),gi=new Uint8Array([72,42,16,0]),hi=new Uint8Array([159,41,16,0]),zi=new Uint8Array([68,114,97,119,115,32,97,110,32,73,109,97,103,101,32,97,108,111,110,103,32,97,32,66,101,122,105,101,114,32,67,117,114,118,101,0]),wi=new Uint8Array([170,170,170,170]),Ai=new Uint8Array,Ui=new Uint8Array([170,170,170,170]),Ri=new Uint8Array,qi=new Uint8Array([170,170,170,170]),Oi=new Uint8Array;Object.assign(Pt,{...t,type:2,name:"bezier-aligner.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:oi}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:Q},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:W},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:S},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:X},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:je},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:Pe},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:Ce}],methods:[],template:{memory:{array:mi},slots:{0:{structure:Q,memory:{array:yi},slots:{0:{structure:Ie,memory:{array:li},slots:{0:{structure:ke,memory:{array:ci}}}}}},1:{structure:W,memory:{array:bi},slots:{0:{structure:ve,memory:{array:pi},slots:{0:{structure:xe,memory:{array:fi}}}}}},2:{structure:S,memory:{array:di},slots:{0:{structure:d,memory:{array:Si}}}},3:{structure:X,memory:{array:gi},slots:{0:{structure:Ke,memory:{array:hi},slots:{0:{structure:Ee,memory:{array:zi}}}}}},4:{structure:je,memory:{array:wi},slots:{0:{structure:ht,memory:{array:Ai}}}},5:{structure:Pe,memory:{array:Ui},slots:{0:{structure:zt,memory:{array:Ri}}}},6:{structure:Ce,memory:{array:qi},slots:{0:{structure:wt,memory:{array:Oi}}}}}}},slot:1});Object.assign(I,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:y}],methods:[],template:null},slot:24});Object.assign(E,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:I}],methods:[],template:null},slot:23});Object.assign(K,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:E}],methods:[],template:null},slot:22});Object.assign(c,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:25});const ji=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(At,{...t,type:9,name:"bezier-aligner.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:d},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:d}],methods:[],template:{memory:{array:ji}}},slot:26});Object.assign(D,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:D}],methods:[],template:null},slot:27});Object.assign(Ut,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:p}],methods:[],template:null},slot:61});const Pi=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ci=new Uint8Array,Vi=new Uint8Array([116,41,16,0]),ki=new Uint8Array([4,0,0,0]);Object.assign(j,{...t,type:2,name:"bezier-aligner.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:K},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:At},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:D}],methods:[],template:{memory:{array:Pi}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:I},{...e,type:7,isRequired:!1,name:"FPixel",structure:Ut},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:S}],methods:[],template:{memory:{array:Ci},slots:{0:{structure:S,memory:{array:Vi},slots:{0:{structure:d,memory:{array:ki}}}}}}},slot:21});const Ii=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),xi=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),vi=new Uint8Array([0,0,0,0,0,0,0,0]),Ei=new Uint8Array,Ki=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Di=new Uint8Array([0,0,0,0,0,0,0,0]),Fi=new Uint8Array;Object.assign($,{...t,type:2,name:"bezier-aligner.KernelInput(u8,bezier-aligner.kernel)",length:1,byteSize:48,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"background",structure:j},{...e,type:6,isRequired:!1,bitOffset:192,bitSize:192,byteSize:24,slot:1,name:"texture",structure:j}],methods:[],template:{memory:{array:Ii},slots:{0:{structure:j,memory:{array:xi},slots:{0:{structure:K,memory:{array:vi},address:1047024,slots:{0:{structure:E,memory:{array:Ei},address:0}}}}},1:{structure:j,memory:{array:Ki},slots:{0:{structure:K,memory:{array:Di},address:1047048,slots:{0:{structure:E,memory:{array:Fi},address:0}}}}}}}},slot:20});Object.assign(Rt,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:I}],methods:[],template:null},slot:23});Object.assign(qt,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Rt}],methods:[],template:null},slot:30});const Mi=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),_i=new Uint8Array,Ti=new Uint8Array([116,41,16,0]),$i=new Uint8Array([4,0,0,0]);Object.assign(Ve,{...t,type:2,name:"bezier-aligner.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:qt},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:At},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:D}],methods:[],template:{memory:{array:Mi}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:I},{...e,type:7,isRequired:!1,name:"FPixel",structure:Ut},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:S}],methods:[],template:{memory:{array:_i},slots:{0:{structure:S,memory:{array:Ti},slots:{0:{structure:d,memory:{array:$i}}}}}}},slot:29});const Bi=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Li=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Gi=new Uint8Array([0,0,0,0,0,0,0,0]),Hi=new Uint8Array;Object.assign(B,{...t,type:2,name:"bezier-aligner.KernelOutput(u8,bezier-aligner.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:Ve}],methods:[],template:{memory:{array:Bi},slots:{0:{structure:Ve,memory:{array:Li},slots:{0:{structure:qt,memory:{array:Gi},address:1046656,slots:{0:{structure:Rt,memory:{array:Hi},address:0}}}}}}}},slot:28});const Ji=new Uint8Array([0,0,72,66,0,0,72,67,0,0,72,67,0,0,200,66,0,0,200,67,0,0,150,67,0,128,9,68,0,0,72,67,0,0,128,63,0,0,128,63,0,0,0,0,0,0,0,0,0,0,128,63,0,0,0,0,0,0,0,0,0,0,128,63,0,0,72,67,0,0,0,0,0,0,128,63,0,0,0,0]);Object.assign(L,{...t,type:2,name:"bezier-aligner.KernelParameters(bezier-aligner.kernel)",length:1,byteSize:80,align:3,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"startpoint",structure:m},{...e,type:6,isRequired:!1,bitOffset:64,bitSize:64,byteSize:8,slot:1,name:"control1",structure:m},{...e,type:6,isRequired:!1,bitOffset:128,bitSize:64,byteSize:8,slot:2,name:"control2",structure:m},{...e,type:6,isRequired:!1,bitOffset:192,bitSize:64,byteSize:8,slot:3,name:"endpoint",structure:m},{...e,type:6,isRequired:!1,bitOffset:256,bitSize:64,byteSize:8,slot:4,name:"scale",structure:m},{...e,type:4,isRequired:!1,bitOffset:512,bitSize:32,byteSize:4,slot:5,name:"imagewidth",structure:p},{...e,type:6,isRequired:!1,bitOffset:320,bitSize:64,byteSize:8,slot:6,name:"offset",structure:m},{...e,type:4,isRequired:!1,bitOffset:544,bitSize:32,byteSize:4,slot:7,name:"tstart",structure:p},{...e,type:4,isRequired:!1,bitOffset:576,bitSize:32,byteSize:4,slot:8,name:"tend",structure:p},{...e,type:6,isRequired:!1,bitOffset:384,bitSize:128,byteSize:16,slot:9,name:"rotation",structure:ct}],methods:[],template:{memory:{array:Ji}}},slot:31});Object.assign(Ct,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(bezier-aligner.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:62});Object.assign(Vt,{...t,type:7,name:"ErrorSet0000!bezier-aligner.KernelOutput(u8,bezier-aligner.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:B},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Ct}],methods:[],template:null},slot:37});Object.assign(kt,{...t,type:3,name:"createOutput",length:1,byteSize:168,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:640,bitSize:32,byteSize:4,slot:0,name:"0",structure:c},{...e,type:3,bitOffset:672,bitSize:32,byteSize:4,slot:1,name:"1",structure:c},{...e,type:6,bitOffset:704,bitSize:384,byteSize:48,slot:2,name:"2",structure:$},{...e,type:6,bitOffset:0,bitSize:640,byteSize:80,slot:3,name:"3",structure:L},{...e,type:6,bitOffset:1088,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Vt}],methods:[],template:null},slot:35});Object.assign(It,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(bezier-aligner.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:63});Object.assign(xt,{...t,type:7,name:"ErrorSet0001!bezier-aligner.KernelOutput(u8,bezier-aligner.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:B},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:It}],methods:[],template:null},slot:38});Object.assign(vt,{...t,type:3,name:"createPartialOutput",length:1,byteSize:176,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:640,bitSize:32,byteSize:4,slot:0,name:"0",structure:c},{...e,type:3,bitOffset:672,bitSize:32,byteSize:4,slot:1,name:"1",structure:c},{...e,type:3,bitOffset:704,bitSize:32,byteSize:4,slot:2,name:"2",structure:c},{...e,type:3,bitOffset:736,bitSize:32,byteSize:4,slot:3,name:"3",structure:c},{...e,type:6,bitOffset:768,bitSize:384,byteSize:48,slot:4,name:"4",structure:$},{...e,type:6,bitOffset:0,bitSize:640,byteSize:80,slot:5,name:"5",structure:L},{...e,type:6,bitOffset:1152,bitSize:224,byteSize:28,slot:6,name:"retval",structure:xt}],methods:[],template:null},slot:36});const Ni=new Uint8Array,Qi={argStruct:kt,thunk:1,name:"createOutput"},Wi={argStruct:vt,thunk:5,name:"createPartialOutput"};Object.assign(Et,{...t,type:2,name:"bezier-aligner",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Ni}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:Pt},{...e,type:7,isRequired:!1,name:"Input",structure:$},{...e,type:7,isRequired:!1,name:"Output",structure:B},{...e,type:7,isRequired:!1,name:"Parameters",structure:L}],methods:[Qi,Wi],template:null},slot:0});const Xi=[y,ke,Ie,Q,xe,ve,W,d,S,Ee,Ke,X,p,m,s,r,A,b,U,g,De,Y,Fe,Me,Z,_e,ee,Te,te,F,M,P,$e,re,Be,se,Le,ae,Ge,ne,He,Je,ie,Ne,ue,Qe,oe,We,me,C,z,_,T,V,Xe,ye,Ye,Ze,le,et,ce,tt,be,rt,pe,st,at,fe,nt,de,it,ut,Se,ot,ge,mt,yt,he,lt,ze,ct,v,O,bt,we,pt,Ae,ft,Ue,dt,Re,St,qe,gt,Oe,ht,je,k,w,zt,Pe,wt,Ce,Pt,I,E,K,c,At,D,Ut,j,$,Rt,qt,Ve,B,L,Ct,Vt,kt,It,xt,vt,Et],Yi=ar(Xi),Zi=Et.constructor,e0=(async()=>{const u=new URL("bezier-aligner-96b4c36e.wasm",import.meta.url).href;return fetch(u)})();nr(e0,{...Yi,writeBack:!0});const{createOutput:o0,createPartialOutput:t0,kernel:jt,Input:r0,Output:m0,Parameters:y0}=Zi;function s0(u,l,n,a,i={},R={}){if(Array.isArray(i)){const h=i;i={};for(const[f,q]of Object.keys(jt.inputImages).entries())i[q]=h[f]}const G=new r0(void 0),H=Object.keys(jt.inputImages),o=[];let x;for(const h of H){let f=i[h];if(f||(H.length===1&&["data","width","height"].every(q=>!!i[q])?f=i:o.push(h)),G[h]=f,x){if(f.colorSpace!==x)throw new Error(`Input images must all use the same color space: ${x}`)}else x=f.colorSpace}if(o.length>0)throw new Error(`Missing input image${o.length>1?"s":""}: ${o.join(", ")}`);const Ot=t0(u,l,n,a,G,R),Kt=h=>{const f=Object.keys(h),q={};for(const Dt of f){const{data:{typedArray:J},width:Ft,height:_t}=h[Dt];let N;if(typeof ImageData=="function"){const Tt=new Uint8ClampedArray(J.buffer,J.byteOffset,J.byteLength);N=new ImageData(Tt,Ft,a,{colorSpace:x})}else N={data:J,width:Ft,height:_t};if(f.length===1)return N;q[Dt]=N}return q};return Ot[Symbol.toStringTag]==="Promise"?Ot.then(Kt):Kt(Ot)}function a0(){const u={};for(let[l,n]of Object.entries(jt)){if(l==="parameters"){const a={};for(const[i,R]of Object.entries(n)){const G=a[i]={};for(let[H,o]of Object.entries(R))typeof o=="object"?"string"in o?o=o.string:o=Mt(o):typeof o=="function"&&(o=n0(o.name)),G[H]=o}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());u[l]=n}return u}function Mt(u){const l=[];for(let[n,a]of Object.entries(u))typeof a=="object"&&(a=Mt(a)),l[n]=a;return l}function n0(u){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[u]}onmessage=u=>{const[l,n,...a]=u.data;i0(l,a).then(([i,R])=>{postMessage([l,n,i],{transfer:R})}).catch(i=>{postMessage(["error",n,i])})};async function i0(u,l){switch(u){case"getKernelInfo":return[a0(...l)];case"createPartialImageData":const a=await s0(...l),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const R of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${u}`)}}
