import{u as ze,a as Oe,b as we,c as Re,d as qe,e as Ae,f as Ue,g as je,h as Pe,i as Ve,j as ke,k as Ie,l as Ce,o as ve,m as xe,n as Ee,p as Ke,q as De}from"./index-ccb3eb7b.js";ze();Oe();we();Re();qe();Ae();Ue();je();Pe();Ve();ke();Ie();Ce();ve();xe();Ee();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},f={},B={},L={},C={},G={},H={},v={},a={},s={},J={},N={},x={},Q={},E={},W={},K={},X={},D={},g={},b={},Y={},F={},Z={},M={},ne={},z={},w={},R={},l={},ee={},q={},_={},te={},h={},A={},se={},re={},T={},U={},j={},ue={},oe={},me={},le={},ce={},ye={},be={};Object.assign(f,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[],template:null},slot:5});Object.assign(B,{...t,type:1,name:"[24:0]u8",length:24,byteSize:25,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:f}],methods:[],template:null},slot:4});Object.assign(L,{...t,type:11,name:"*const [24:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:B}],methods:[],template:null},slot:3});Object.assign(C,{...t,type:11,name:"*const *const [24:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[],template:null},slot:2});Object.assign(G,{...t,type:1,name:"[13:0]u8",length:13,byteSize:14,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:f}],methods:[],template:null},slot:8});Object.assign(H,{...t,type:11,name:"*const [13:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:G}],methods:[],template:null},slot:7});Object.assign(v,{...t,type:11,name:"*const *const [13:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[],template:null},slot:6});Object.assign(a,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:a}],methods:[],template:null},slot:10});Object.assign(s,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:a}],methods:[],template:null},slot:9});Object.assign(J,{...t,type:1,name:"[69:0]u8",length:69,byteSize:70,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:f}],methods:[],template:null},slot:13});Object.assign(N,{...t,type:11,name:"*const [69:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:J}],methods:[],template:null},slot:12});Object.assign(x,{...t,type:11,name:"*const *const [69:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:N}],methods:[],template:null},slot:11});const Fe=new Uint8Array([]),Me=new Uint8Array([16,253,15,0]),_e=new Uint8Array([1,0,0,0]),Te=new Uint8Array([48,253,15,0]),$e=new Uint8Array([32,0,0,0]),Be=new Uint8Array([80,253,15,0]),Le=new Uint8Array([8,0,0,0]);Object.assign(Q,{...t,type:2,name:"Struct0009",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:a},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:Fe},slots:{0:{structure:s,memory:{array:Me},slots:{0:{structure:a,memory:{array:_e}}}},1:{structure:s,memory:{array:Te},slots:{0:{structure:a,memory:{array:$e}}}},2:{structure:s,memory:{array:Be},slots:{0:{structure:a,memory:{array:Le}}}}}}},slot:37});Object.assign(E,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[],template:null},slot:36});const Ge=new Uint8Array([]),He=new Uint8Array([16,253,15,0]),Je=new Uint8Array([1,0,0,0]),Ne=new Uint8Array([48,253,15,0]),Qe=new Uint8Array([0,2,0,0]),We=new Uint8Array([80,253,15,0]),Xe=new Uint8Array([0,1,0,0]);Object.assign(W,{...t,type:2,name:"Struct0010",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:a},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:Ge},slots:{0:{structure:s,memory:{array:He},slots:{0:{structure:a,memory:{array:Je}}}},1:{structure:s,memory:{array:Ne},slots:{0:{structure:a,memory:{array:Qe}}}},2:{structure:s,memory:{array:We},slots:{0:{structure:a,memory:{array:Xe}}}}}}},slot:39});Object.assign(K,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:38});const Ye=new Uint8Array([]),Ze=new Uint8Array([170,170,170,170]),p=new Uint8Array([]),et=new Uint8Array([170,170,170,170]);Object.assign(X,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"size",structure:E},{...e,type:8,isRequired:!1,slot:1,name:"charCount",structure:K}],methods:[],template:{memory:{array:Ye},slots:{0:{structure:E,memory:{array:Ze},slots:{0:{structure:Q,memory:{array:p},address:-1431655766}}},1:{structure:K,memory:{array:et},slots:{0:{structure:W,memory:{array:p},address:-1431655766}}}}}},slot:15});Object.assign(D,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:14});const tt=new Uint8Array([]),st=new Uint8Array([144,249,15,0]),rt=new Uint8Array([4,0,0,0]);Object.assign(g,{...t,type:2,name:"Struct0011",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:s}],methods:[],template:{memory:{array:tt},slots:{0:{structure:s,memory:{array:st},slots:{0:{structure:a,memory:{array:rt}}}}}}},slot:41});Object.assign(b,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:g}],methods:[],template:null},slot:40});const at=new Uint8Array([]),it=new Uint8Array([170,170,170,170]),nt=new Uint8Array([170,170,170,170]);Object.assign(Y,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:b},{...e,type:8,isRequired:!1,slot:1,name:"text",structure:b}],methods:[],template:{memory:{array:at},slots:{0:{structure:b,memory:{array:it},slots:{0:{structure:g,memory:{array:p},address:-1431655766}}},1:{structure:b,memory:{array:nt},slots:{0:{structure:g,memory:{array:p},address:-1431655766}}}}}},slot:17});Object.assign(F,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[],template:null},slot:16});const ut=new Uint8Array([]),ot=new Uint8Array([170,170,170,170]);Object.assign(Z,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:b}],methods:[],template:{memory:{array:ut},slots:{0:{structure:b,memory:{array:ot},slots:{0:{structure:g,memory:{array:p},address:-1431655766}}}}}},slot:19});Object.assign(M,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:18});const mt=new Uint8Array([]),lt=new Uint8Array([]),ct=new Uint8Array([188,249,15,0]),yt=new Uint8Array([215,35,16,0]),bt=new Uint8Array([99,111,109,46,103,114,101,121,98,111,120,119,97,114,101,46,97,115,99,105,105,109,105,105,0]),pt=new Uint8Array([252,249,15,0]),ft=new Uint8Array([201,35,16,0]),dt=new Uint8Array([82,105,99,104,97,114,100,32,90,117,114,97,100,0]),St=new Uint8Array([60,250,15,0]),ht=new Uint8Array([1,0,0,0]),gt=new Uint8Array([148,250,15,0]),zt=new Uint8Array([131,35,16,0]),Ot=new Uint8Array([70,105,108,116,101,114,32,116,111,32,109,105,109,105,99,32,116,104,101,32,84,69,88,84,112,32,101,102,102,101,99,116,32,102,114,111,109,32,89,111,117,84,117,98,101,39,115,32,50,48,49,48,32,65,112,114,105,108,32,70,111,111,108,115,32,106,111,107,101,0]),wt=new Uint8Array([170,170,170,170]),Rt=new Uint8Array([170,170,170,170]),qt=new Uint8Array([170,170,170,170]);Object.assign(ne,{...t,type:2,name:"asciimii.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:mt}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:C},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:v},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:s},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:x},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:D},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:F},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:M}],methods:[],template:{memory:{array:lt},slots:{0:{structure:C,memory:{array:ct},slots:{0:{structure:L,memory:{array:yt},slots:{0:{structure:B,memory:{array:bt},address:1057751}}}}},1:{structure:v,memory:{array:pt},slots:{0:{structure:H,memory:{array:ft},slots:{0:{structure:G,memory:{array:dt},address:1057737}}}}},2:{structure:s,memory:{array:St},slots:{0:{structure:a,memory:{array:ht}}}},3:{structure:x,memory:{array:gt},slots:{0:{structure:N,memory:{array:zt},slots:{0:{structure:J,memory:{array:Ot},address:1057667}}}}},4:{structure:D,memory:{array:wt},slots:{0:{structure:X,memory:{array:p},address:-1431655766}}},5:{structure:F,memory:{array:Rt},slots:{0:{structure:Y,memory:{array:p},address:-1431655766}}},6:{structure:M,memory:{array:qt},slots:{0:{structure:Z,memory:{array:p},address:-1431655766}}}}}},slot:1});Object.assign(z,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:f}],methods:[],template:null},slot:24});Object.assign(w,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:z}],methods:[],template:null},slot:23});Object.assign(R,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:w}],methods:[],template:null},slot:22});Object.assign(l,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:l}],methods:[],template:null},slot:25});const At=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(ee,{...t,type:9,name:"asciimii.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:a},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:a}],methods:[],template:{memory:{array:At}}},slot:26});Object.assign(q,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:27});Object.assign(_,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:_}],methods:[],template:null},slot:45});Object.assign(te,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:_}],methods:[],template:null},slot:42});const Ut=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),jt=new Uint8Array([]),Pt=new Uint8Array([136,252,15,0]),Vt=new Uint8Array([4,0,0,0]);Object.assign(h,{...t,type:2,name:"asciimii.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:R},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ee},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:q}],methods:[],template:{memory:{array:Ut}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:z},{...e,type:7,isRequired:!1,name:"FPixel",structure:te},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:s}],methods:[],template:{memory:{array:jt},slots:{0:{structure:s,memory:{array:Pt},slots:{0:{structure:a,memory:{array:Vt}}}}}}},slot:21});const kt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),It=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ct=new Uint8Array([0,0,0,0,0,0,0,0]),$=new Uint8Array([]),vt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),xt=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(A,{...t,type:2,name:"asciimii.KernelInput(u8,asciimii.kernel)",length:1,byteSize:48,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:h},{...e,type:6,isRequired:!1,bitOffset:192,bitSize:192,byteSize:24,slot:1,name:"text",structure:h}],methods:[],template:{memory:{array:kt},slots:{0:{structure:h,memory:{array:It},slots:{0:{structure:R,memory:{array:Ct},slots:{0:{structure:w,memory:{array:$}}}}}},1:{structure:h,memory:{array:vt},slots:{0:{structure:R,memory:{array:xt},slots:{0:{structure:w,memory:{array:$}}}}}}}}},slot:20});Object.assign(se,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:z}],methods:[],template:null},slot:23});Object.assign(re,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:se}],methods:[],template:null},slot:30});const Et=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Kt=new Uint8Array([]),Dt=new Uint8Array([72,253,15,0]),Ft=new Uint8Array([4,0,0,0]);Object.assign(T,{...t,type:2,name:"asciimii.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:re},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ee},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:q}],methods:[],template:{memory:{array:Et}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:z},{...e,type:7,isRequired:!1,name:"FPixel",structure:te},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:s}],methods:[],template:{memory:{array:Kt},slots:{0:{structure:s,memory:{array:Dt},slots:{0:{structure:a,memory:{array:Ft}}}}}}},slot:29});const Mt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),_t=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Tt=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(U,{...t,type:2,name:"asciimii.KernelOutput(u8,asciimii.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:T}],methods:[],template:{memory:{array:Mt},slots:{0:{structure:T,memory:{array:_t},slots:{0:{structure:re,memory:{array:Tt},slots:{0:{structure:se,memory:{array:$}}}}}}}}},slot:28});const $t=new Uint8Array([8,0,0,0,0,1,0,0]);Object.assign(j,{...t,type:2,name:"asciimii.KernelParameters(asciimii.kernel)",length:1,byteSize:8,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"size",structure:a},{...e,type:2,isRequired:!1,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"charCount",structure:a}],methods:[],template:{memory:{array:$t}}},slot:31});Object.assign(ue,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(asciimii.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:43});Object.assign(oe,{...t,type:7,name:"ErrorSet0000!asciimii.KernelOutput(u8,asciimii.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:U},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:ue}],methods:[],template:null},slot:34});Object.assign(me,{...t,type:3,name:"createOutput",length:1,byteSize:92,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"0",structure:l},{...e,type:3,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"1",structure:l},{...e,type:6,bitOffset:64,bitSize:384,byteSize:48,slot:2,name:"2",structure:A},{...e,type:6,bitOffset:448,bitSize:64,byteSize:8,slot:3,name:"3",structure:j},{...e,type:6,bitOffset:512,bitSize:224,byteSize:28,slot:4,name:"retval",structure:oe}],methods:[],template:null},slot:32});Object.assign(le,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(asciimii.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:44});Object.assign(ce,{...t,type:7,name:"ErrorSet0001!asciimii.KernelOutput(u8,asciimii.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:U},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:le}],methods:[],template:null},slot:35});Object.assign(ye,{...t,type:3,name:"createPartialOutput",length:1,byteSize:100,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"0",structure:l},{...e,type:3,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"1",structure:l},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:2,name:"2",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:3,name:"3",structure:l},{...e,type:6,bitOffset:128,bitSize:384,byteSize:48,slot:4,name:"4",structure:A},{...e,type:6,bitOffset:512,bitSize:64,byteSize:8,slot:5,name:"5",structure:j},{...e,type:6,bitOffset:576,bitSize:224,byteSize:28,slot:6,name:"retval",structure:ce}],methods:[],template:null},slot:33});const Bt={argStruct:me,thunk:8,name:"createOutput"},Lt={argStruct:ye,thunk:2,name:"createPartialOutput"};Object.assign(be,{...t,type:2,name:"asciimii",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:$}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:ne},{...e,type:7,isRequired:!1,name:"Input",structure:A},{...e,type:7,isRequired:!1,name:"Output",structure:U},{...e,type:7,isRequired:!1,name:"Parameters",structure:j}],methods:[Bt,Lt],template:null},slot:0});const Gt=[f,B,L,C,G,H,v,a,s,J,N,x,Q,E,W,K,X,D,g,b,Y,F,Z,M,ne,z,w,R,l,ee,q,_,te,h,A,se,re,T,U,j,ue,oe,me,le,ce,ye,be],Ht=Ke(Gt),Jt=be.constructor,Nt=(async()=>{const u=new URL("asciimii-c8b01c49.wasm",import.meta.url).href;return fetch(u)})();De(Nt,{...Ht,writeBack:!0});const{createOutput:ss,createPartialOutput:Qt,kernel:ie,Input:Wt,Output:rs,Parameters:as}=Jt;function Xt(u,m,i,r,n={},d={}){if(Array.isArray(n)){const y=n;n={};for(const[c,S]of Object.keys(ie.inputImages).entries())n[S]=y[c]}const P=new Wt(void 0),V=Object.keys(ie.inputImages),o=[];let O;for(const y of V){let c=n[y];if(c||(V.length===1&&["data","width","height"].every(S=>!!n[S])?c=n:o.push(y)),P[y]=c,O){if(c.colorSpace!==O)throw new Error(`Input images must all use the same color space: ${O}`)}else O=c.colorSpace}if(o.length>0)throw new Error(`Missing input image${o.length>1?"s":""}: ${o.join(", ")}`);const ae=Qt(u,m,i,r,P,d),pe=y=>{const c=Object.keys(y),S={};for(const fe of c){const{data:{typedArray:k},width:de,height:he}=y[fe];let I;if(typeof ImageData=="function"){const ge=new Uint8ClampedArray(k.buffer,k.byteOffset,k.byteLength);I=new ImageData(ge,de,r,{colorSpace:O})}else I={data:k,width:de,height:he};if(c.length===1)return I;S[fe]=I}return S};return ae[Symbol.toStringTag]==="Promise"?ae.then(pe):pe(ae)}function Yt(){const u={};for(let[m,i]of Object.entries(ie)){if(m==="parameters"){const r={};for(const[n,d]of Object.entries(i)){const P=r[n]={};for(let[V,o]of Object.entries(d))typeof o=="object"?"string"in o?o=o.string:o=Se(o):typeof o=="function"&&(o=Zt(o.name)),P[V]=o}i=r}else typeof i=="object"&&("string"in i?i=i.string:i=i.valueOf());u[m]=i}return u}function Se(u){const m=[];for(let[i,r]of Object.entries(u))typeof r=="object"&&(r=Se(r)),m[i]=r;return m}function Zt(u){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[u]}onmessage=u=>{const[m,i,...r]=u.data;es(m,r).then(([n,d])=>{postMessage([m,i,n],{transfer:d})}).catch(n=>{postMessage(["error",i,n])})};async function es(u,m){switch(u){case"getKernelInfo":return[Yt(...m)];case"createPartialImageData":const r=await Xt(...m),n=[];if("data"in r&&"width"in r&&"height"in r)n.push(r.data.buffer);else for(const d of Object.entries(r))n.push(r.data.buffer);return[r,n];default:throw new Error(`Unknown function: ${u}`)}}
