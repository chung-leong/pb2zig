import{u as Ct,a as Kt,b as _t,c as Dt,d as Ft,e as Mt,f as Tt,g as $t,h as Lt,i as Bt,j as Gt,k as Ht,l as Jt,m as Nt,n as Qt,p as Wt,o as Xt,q as Yt,r as Zt,s as es}from"./index-6ff6e058.js";Ct();Gt();Ht();Kt();_t();Jt();Nt();Qt();Wt();Dt();Ft();Mt();Tt();Xt();es();$t();Yt();Lt();Bt();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},e={type:0,isRequired:!1},s={},p={},M={},T={},$={},L={},y={},O={},B={},G={},l={},j={},h={},H={},J={},g={},N={},Q={},re={},k={},W={},A={},u={},f={},I={},ae={},w={},R={},X={},q={},Y={},v={},E={},V={},ne={},ie={},F={},oe={},ce={},ue={},Ue={},me={},Pe={},ye={},Ie={},be={},Ve={},le={},ke={},Re={},fe={},qe={},x={},ve={},Ee={},ge={},pe={},xe={},Oe={},Ce={},Ke={},_e={},De={},Fe={},Me={},Te={},$e={},Le={},Be={},Ge={},He={},Je={},Ne={},Qe={},We={},Xe={},Z={},Ye={},Ze={},Se={},et={},ze={},tt={},st={},rt={},at={},nt={},it={},ot={},ct={},ut={},de={},mt={},yt={},bt={},lt={},ft={},gt={},pt={},Ot={},St={},zt={},je={},dt={},jt={},ht={},wt={},At={},Ut={},Pt={},It={},Vt={},kt={},ts=new Uint8Array,ss=new Uint8Array,rs=new Uint8Array([0,0,0,0,0,0,0,0]),as=new Uint8Array,ns=new Uint8Array([0,0,0,0,0,0,240,63]),is=new Uint8Array,os=new Uint8Array([0,0,0,0,0,0,0,0]),cs=new Uint8Array,us=new Uint8Array,ms=new Uint8Array([4]),ys=new Uint8Array,bs=new Uint8Array,ls=new Uint8Array,fs=new Uint8Array([242,4,0,1]),gs=new Uint8Array([65,73,70,0]),ps=new Uint8Array([1,5,0,1]),Os=new Uint8Array([65,100,111,98,101,32,83,121,115,116,101,109,115,0]),Ss=new Uint8Array,zs=new Uint8Array([2]),ds=new Uint8Array([32,5,0,1]),js=new Uint8Array([67,114,111,115,115,102,97,100,101,32,98,101,116,119,101,101,110,32,116,119,111,32,105,109,97,103,101,115,0]),hs=new Uint8Array,ws=new Uint8Array,As=new Uint8Array,Us=new Uint8Array([0]),Ps=new Uint8Array([1]),Rt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Is=new Uint8Array,Vs=new Uint8Array,ks=new Uint8Array,Rs=new Uint8Array,qs=new Uint8Array([4]),C=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),qt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),vs=new Uint8Array,Es=new Uint8Array,xs=new Uint8Array,Cs=new Uint8Array,Ks=new Uint8Array([4]),he=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),_s=new Uint8Array([0,0,0,0]),Ds=new Uint8Array([27,0]),Fs=new Uint8Array,Ms=new Uint8Array,Ts=new Uint8Array,$s=new Uint8Array;Object.assign(Ue,{slots:{0:me,1:ye,2:be,3:le}});Object.assign(me,{structure:s,memory:{array:ts},slots:{0:Pe}});Object.assign(Pe,{structure:j});Object.assign(ye,{structure:l,memory:{array:ss},slots:{0:Ie}});Object.assign(Ie,{structure:h,memory:{array:rs}});Object.assign(be,{structure:l,memory:{array:as},slots:{0:Ve}});Object.assign(Ve,{structure:h,memory:{array:ns}});Object.assign(le,{structure:l,memory:{array:is},slots:{0:ke}});Object.assign(ke,{structure:h,memory:{array:os}});Object.assign(Re,{slots:{0:fe}});Object.assign(fe,{structure:H,memory:{array:cs},slots:{0:me,1:ye,2:be,3:le}});Object.assign(qe,{slots:{0:x}});Object.assign(x,{structure:y,memory:{array:us},slots:{0:ve}});Object.assign(ve,{structure:O,memory:{array:ms}});Object.assign(Ee,{slots:{0:ge,1:pe}});Object.assign(ge,{structure:g,memory:{array:ys},slots:{0:x}});Object.assign(pe,{structure:g,memory:{array:bs},slots:{0:x}});Object.assign(xe,{slots:{0:Oe}});Object.assign(Oe,{structure:g,memory:{array:ls},slots:{0:x}});Object.assign(Ce,{slots:{0:Ke,1:De,2:Me,3:$e,4:Be,5:Ge,6:He}});Object.assign(Ke,{structure:T,memory:{array:fs},slots:{0:_e}});Object.assign(_e,{structure:M,memory:{array:gs},reloc:16778482,const:!0});Object.assign(De,{structure:L,memory:{array:ps},slots:{0:Fe}});Object.assign(Fe,{structure:$,memory:{array:Os},reloc:16778497,const:!0});Object.assign(Me,{structure:y,memory:{array:Ss},slots:{0:Te}});Object.assign(Te,{structure:O,memory:{array:zs}});Object.assign($e,{structure:G,memory:{array:ds},slots:{0:Le}});Object.assign(Le,{structure:B,memory:{array:js},reloc:16778528,const:!0});Object.assign(Be,{structure:J,memory:{array:hs},slots:{0:fe}});Object.assign(Ge,{structure:N,memory:{array:ws},slots:{0:ge,1:pe}});Object.assign(He,{structure:Q,memory:{array:As},slots:{0:Oe}});Object.assign(Je,{slots:{0:Ne,1:Qe}});Object.assign(Ne,{structure:f,memory:{array:Us}});Object.assign(Qe,{structure:f,memory:{array:Ps}});Object.assign(We,{memory:{array:Rt},slots:{0:Xe}});Object.assign(Xe,{structure:A,memory:{array:Rt,offset:0,length:8},slots:{0:Z}});Object.assign(Z,{structure:W,memory:{array:Is},reloc:0,const:!0});Object.assign(Ye,{slots:{0:Ze,1:et,2:tt}});Object.assign(Ze,{structure:s,memory:{array:Vs},slots:{0:Se}});Object.assign(Se,{structure:k});Object.assign(et,{structure:s,memory:{array:ks},slots:{0:ze}});Object.assign(ze,{structure:ae});Object.assign(tt,{structure:y,memory:{array:Rs},slots:{0:st}});Object.assign(st,{structure:O,memory:{array:qs}});Object.assign(rt,{memory:{array:C},slots:{0:at,1:it}});Object.assign(at,{structure:w,memory:{array:C,offset:0,length:24},slots:{0:nt}});Object.assign(nt,{structure:A,memory:{array:C,offset:0,length:8},slots:{0:Z}});Object.assign(it,{structure:w,memory:{array:C,offset:24,length:24},slots:{0:ot}});Object.assign(ot,{structure:A,memory:{array:C,offset:24,length:8},slots:{0:Z}});Object.assign(ct,{memory:{array:qt},slots:{0:ut}});Object.assign(ut,{structure:q,memory:{array:qt,offset:0,length:8},slots:{0:de}});Object.assign(de,{structure:X,memory:{array:vs},reloc:0});Object.assign(mt,{slots:{0:yt,1:bt,2:lt}});Object.assign(yt,{structure:s,memory:{array:Es},slots:{0:Se}});Object.assign(bt,{structure:s,memory:{array:xs},slots:{0:ze}});Object.assign(lt,{structure:y,memory:{array:Cs},slots:{0:ft}});Object.assign(ft,{structure:O,memory:{array:Ks}});Object.assign(gt,{memory:{array:he},slots:{0:pt}});Object.assign(pt,{structure:Y,memory:{array:he},slots:{0:Ot}});Object.assign(Ot,{structure:q,memory:{array:he,offset:0,length:8},slots:{0:de}});Object.assign(St,{memory:{array:_s}});Object.assign(zt,{slots:{0:je}});Object.assign(je,{structure:V,memory:{array:Ds}});Object.assign(dt,{slots:{0:je}});Object.assign(jt,{slots:{0:ht,1:At,2:Pt,3:Vt}});Object.assign(ht,{structure:s,memory:{array:Fs},slots:{0:wt}});Object.assign(wt,{structure:re});Object.assign(At,{structure:s,memory:{array:Ms},slots:{0:Ut}});Object.assign(Ut,{structure:R});Object.assign(Pt,{structure:s,memory:{array:Ts},slots:{0:It}});Object.assign(It,{structure:v});Object.assign(Vt,{structure:s,memory:{array:$s},slots:{0:kt}});Object.assign(kt,{structure:E});const Ls={argStruct:ie,thunkId:2,name:"createOutput"},Bs={argStruct:ce,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...t,name:"type",align:1,instance:{members:[{...e,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(p,{...t,name:"u8",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(M,{...t,type:1,name:"[3:0]u8",length:3,byteSize:4,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(T,{...t,type:13,name:"*const [3:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign($,{...t,type:1,name:"[13:0]u8",length:13,byteSize:14,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(L,{...t,type:13,name:"*const [13:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[]}});Object.assign(y,{...t,name:"comptime_int",align:1,instance:{members:[{...e,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:y}],methods:[]}});Object.assign(O,{...t,name:"i8",byteSize:1,align:1,instance:{members:[{...e,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(B,{...t,type:1,name:"[28:0]u8",length:28,byteSize:29,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(G,{...t,type:13,name:"*const [28:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:B}],methods:[]}});Object.assign(l,{...t,name:"comptime_float",align:1,instance:{members:[{...e,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:l}],methods:[]}});Object.assign(j,{...t,name:"f32",byteSize:4,align:4,instance:{members:[{...e,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:j}],methods:[]}});Object.assign(h,{...t,name:"f64",byteSize:8,align:8,instance:{members:[{...e,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:h}],methods:[]}});Object.assign(H,{...t,type:2,name:"Struct2890073165",align:1,instance:{members:[{...e,type:9,slot:0,name:"type",structure:s},{...e,type:9,slot:1,name:"minValue",structure:l},{...e,type:9,slot:2,name:"maxValue",structure:l},{...e,type:9,slot:3,name:"defaultValue",structure:l}],methods:[],template:Ue}});Object.assign(J,{...t,type:2,name:"Struct1446025373",align:1,instance:{members:[{...e,type:9,slot:0,name:"intensity",structure:H}],methods:[],template:Re}});Object.assign(g,{...t,type:2,name:"Struct3832472641",align:1,instance:{members:[{...e,type:9,slot:0,name:"channels",structure:y}],methods:[],template:qe}});Object.assign(N,{...t,type:2,name:"Struct432787472",align:1,instance:{members:[{...e,type:9,slot:0,name:"frontImage",structure:g},{...e,type:9,slot:1,name:"backImage",structure:g}],methods:[],template:Ee}});Object.assign(Q,{...t,type:2,name:"Struct172100005",align:1,instance:{members:[{...e,type:9,slot:0,name:"dst",structure:g}],methods:[],template:xe}});Object.assign(re,{...t,type:2,name:"crossfade.kernel",align:1,static:{members:[{...e,type:9,slot:0,name:"namespace",structure:T},{...e,type:9,slot:1,name:"vendor",structure:L},{...e,type:9,slot:2,name:"version",structure:y},{...e,type:9,slot:3,name:"description",structure:G},{...e,type:9,slot:4,name:"parameters",structure:J},{...e,type:9,slot:5,name:"inputImages",structure:N},{...e,type:9,slot:6,name:"outputImages",structure:Q}],methods:[],template:Ce}});Object.assign(k,{...t,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(W,{...t,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(A,{...t,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:64,byteSize:8,slot:0,structure:W}],methods:[]}});Object.assign(u,{...t,name:"u32",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:u}],methods:[]}});Object.assign(f,{...t,type:11,name:"crossfade.ColorSpace",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"srgb",structure:f},{...e,type:9,slot:1,name:"display-p3",structure:f}],methods:[],template:Je}});Object.assign(I,{...t,name:"usize",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(ae,{...t,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...e,type:4,bitSize:32,byteSize:4,structure:j}],methods:[]}});Object.assign(w,{...t,type:2,name:"crossfade.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:A},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...e,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:f},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:I}],methods:[],template:We},static:{members:[{...e,type:9,slot:0,name:"Pixel",structure:s},{...e,type:9,slot:1,name:"FPixel",structure:s},{...e,type:9,slot:2,name:"channels",structure:y}],methods:[],template:Ye}});Object.assign(R,{...t,type:2,name:"crossfade.KernelInput(u8,crossfade.kernel)",byteSize:48,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"frontImage",structure:w},{...e,type:7,bitOffset:192,bitSize:192,byteSize:24,slot:1,name:"backImage",structure:w}],methods:[],template:rt}});Object.assign(X,{...t,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(q,{...t,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:64,byteSize:8,slot:0,structure:X}],methods:[]}});Object.assign(Y,{...t,type:2,name:"crossfade.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:q},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...e,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:f},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:I}],methods:[],template:ct},static:{members:[{...e,type:9,slot:0,name:"Pixel",structure:s},{...e,type:9,slot:1,name:"FPixel",structure:s},{...e,type:9,slot:2,name:"channels",structure:y}],methods:[],template:mt}});Object.assign(v,{...t,type:2,name:"crossfade.KernelOutput(u8,crossfade.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:Y}],methods:[],template:gt}});Object.assign(E,{...t,type:2,name:"crossfade.KernelParameters(crossfade.kernel)",byteSize:4,align:4,instance:{members:[{...e,type:4,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"intensity",structure:j}],methods:[],template:St}});Object.assign(V,{...t,type:10,name:"@typeInfo(@typeInfo(@TypeOf(crossfade.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"OutOfMemory",structure:V}],methods:[],template:zt}});Object.assign(ne,{...t,type:9,name:"ErrorSet3122465681!crossfade.KernelOutput(u8,crossfade.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...e,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:V}],methods:[]}});Object.assign(ie,{...t,type:5,name:"createOutput",byteSize:88,align:4,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...e,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...e,type:7,isRequired:!0,bitOffset:64,bitSize:384,byteSize:48,slot:0,name:"2",structure:R},{...e,type:7,isRequired:!0,bitOffset:448,bitSize:32,byteSize:4,slot:1,name:"3",structure:E},{...e,type:7,isRequired:!0,bitOffset:480,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ne}],methods:[]}});Object.assign(F,{...t,type:10,name:"@typeInfo(@typeInfo(@TypeOf(crossfade.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"OutOfMemory",structure:F}],methods:[],template:dt}});Object.assign(oe,{...t,type:9,name:"ErrorSet2634510467!crossfade.KernelOutput(u8,crossfade.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...e,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:F}],methods:[]}});Object.assign(ce,{...t,type:5,name:"createPartialOutput",byteSize:96,align:4,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...e,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:u},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:u},{...e,type:7,isRequired:!0,bitOffset:128,bitSize:384,byteSize:48,slot:0,name:"4",structure:R},{...e,type:7,isRequired:!0,bitOffset:512,bitSize:32,byteSize:4,slot:1,name:"5",structure:E},{...e,type:7,isRequired:!0,bitOffset:544,bitSize:224,byteSize:28,slot:2,name:"retval",structure:oe}],methods:[]}});Object.assign(ue,{...t,type:2,name:"crossfade",align:1,static:{members:[{...e,type:9,slot:0,name:"kernel",structure:s},{...e,type:9,slot:1,name:"Input",structure:s},{...e,type:9,slot:2,name:"Output",structure:s},{...e,type:9,slot:3,name:"Parameters",structure:s}],methods:[Ls,Bs],template:jt}});const Gs=[s,p,M,T,$,L,y,O,B,G,l,j,h,H,J,g,N,Q,re,k,W,A,u,f,I,ae,w,R,X,q,Y,v,E,V,ne,ie,F,oe,ce,ue],Hs=ue,Js={runtimeSafety:!1,littleEndian:!0},ee=Zt();ee.getControlObject();ee.recreateStructures(Gs,Js);const Ns=(async()=>{const i=new URL("crossfade-bc634e07.wasm",import.meta.url).href;return fetch(i)})();ee.loadModule(Ns);ee.linkVariables(!0);const{constructor:Qs}=Hs,{createPartialOutput:Ws,Input:Xs,kernel:se}=Qs;function Ys(i,o,a,r,n={},S={}){const z=[];for(const[m]of se.inputImages)z.push(m);const U=[];for(const[m]of se.outputImages)U.push(m);if(Array.isArray(n)){const m=n;n={};for(const[b,d]of z.entries())n[d]=m[b]}const c=new Xs(void 0),K=[];let P;for(const m of z){let b=n[m];if(b||(z.length===1&&["data","width","height"].every(d=>!!n[d])?b=n:K.push(m)),c[m]=b,P){if(b.colorSpace!==P)throw new Error(`Input images must all use the same color space: ${P}`)}else P=b.colorSpace}if(K.length>0)throw new Error(`Missing input image${K.length>1?"s":""}: ${K.join(", ")}`);const te=Ws(i,o,a,r,c,S),we=m=>{const b={};for(const d of U){const{data:{typedArray:_},width:Ae,height:Et}=m[d];let D;if(typeof ImageData=="function"){const xt=new Uint8ClampedArray(_.buffer,_.byteOffset,_.byteLength);D=new ImageData(xt,Ae,r,{colorSpace:P})}else D={data:_,width:Ae,height:Et};if(U.length===1)return D;b[d]=D}return b};return te[Symbol.toStringTag]==="Promise"?te.then(we):we(te)}function Zs(){const i={};for(let[o,a]of se){if(o==="parameters"){const r={};for(const[n,S]of a){const z=r[n]={};for(let[U,c]of S)typeof c=="object"?"string"in c?c=c.string:c=vt(c):typeof c=="function"&&(c=er(c.name)),z[U]=c}a=r}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());i[o]=a}return i}function vt(i){const o=[];for(let[a,r]of i)typeof r=="object"&&(r=vt(r)),o[a]=r;return o}function er(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[o,a,...r]=i.data;tr(o,r).then(([n,S])=>{postMessage([o,a,n],{transfer:S})}).catch(n=>{postMessage(["error",a,n])})};async function tr(i,o){switch(i){case"getKernelInfo":return[Zs(...o)];case"createPartialImageData":const r=await Ys(...o),n=[];if("data"in r&&"width"in r&&"height"in r)n.push(r.data.buffer);else for(const S of Object.entries(r))n.push(r.data.buffer);return[r,n];default:throw new Error(`Unknown function: ${i}`)}}
