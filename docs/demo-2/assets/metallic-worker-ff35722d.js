import{u as on,a as cn,b as un,c as mn,d as yn,e as bn,f as ln,g as gn,h as pn,i as On,j as jn,k as Sn,l as fn,m as zn,n as hn,o as wn,p as dn,q as An}from"./index-031d01ca.js";on();Sn();fn();cn();un();zn();hn();wn();dn();mn();yn();bn();ln();An();gn();pn();On();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},n={},y={},$={},L={},B={},G={},o={},O={},H={},J={},s={},r={},N={},Q={},W={},X={},Y={},S={},k={},Z={},tt={},et={},q={},st={},rt={},nt={},at={},ot={},ct={},it={},ut={},mt={},yt={},bt={},lt={},gt={},pt={},Ot={},jt={},St={},ft={},zt={},f={},ht={},wt={},qt={},v={},dt={},V={},m={},j={},I={},It={},U={},x={},At={},E={},Ut={},C={},T={},d={},vt={},xt={},A={},Et={},Ct={},Tt={},Ze={},Dt={},ts={},Kt={},es={},Mt={},ss={},rs={},Ft={},ns={},_t={},as={},$t={},os={},cs={},Lt={},is={},Bt={},us={},Gt={},ms={},ys={},Ht={},Jt={},Nt={},Qt={},Wt={},Xt={},bs={},ls={},Yt={},gs={},Zt={},ps={},te={},Os={},ee={},js={},se={},Ss={},fs={},re={},ne={},ae={},zs={},oe={},hs={},ce={},ws={},ie={},ds={},As={},ue={},me={},Us={},ye={},Vs={},be={},Ps={},le={},Rs={},ks={},ge={},qs={},pe={},Is={},vs={},Oe={},xs={},je={},Es={},Cs={},Se={},Ts={},fe={},Ds={},Ks={},ze={},Ms={},he={},we={},de={},Ae={},Fs={},_s={},Ue={},$s={},Ve={},Ls={},Pe={},Bs={},Gs={},Re={},Hs={},ke={},Js={},qe={},Ns={},Qs={},Ie={},Ws={},ve={},Xs={},xe={},Ys={},Zs={},Ee={},Ce={},Te={},De={},tr={},Ke={},Me={},Fe={},_e={},$e={},Le={},er={},D={},sr={},rr={},Be={},Ge={},nr={},He={},ar={},or={},cr={},ir={},ur={},mr={},yr={},br={},lr={},gr={},pr={},Or={},jr={},Sr={},fr={},zr={},hr={},Vt={},wr={},dr={},Je={},Ar={},Ne={},Ur={},Vr={},Pr={},Rr={},kr={},qr={},Ir={},vr={},xr={},Qe={},Er={},Cr={},Tr={},Dr={},Kr={},Mr={},Fr={},_r={},$r={},Lr={},Br={},Gr={},Hr={},Jr={},Nr={},Qr={},Wr={},Xr={},Yr={},Zr={},tn={},en={},Un=new Uint8Array,Vn=new Uint8Array([0,0,0,0,0,64,143,192]),Pn=new Uint8Array,Rn=new Uint8Array([0,0,0,0,0,64,143,192]),kn=new Uint8Array,qn=new Uint8Array([0,0,0,0,0,64,143,192]),In=new Uint8Array,vn=new Uint8Array([0,0,0,0,0,64,143,64]),xn=new Uint8Array,En=new Uint8Array([0,0,0,0,0,64,143,64]),Cn=new Uint8Array,Tn=new Uint8Array([0,0,0,0,0,64,143,64]),Dn=new Uint8Array,Kn=new Uint8Array([0,0,0,0,0,0,105,64]),Mn=new Uint8Array,Fn=new Uint8Array([0,0,0,0,0,0,78,64]),_n=new Uint8Array,$n=new Uint8Array([0,0,0,0,0,0,68,64]),Ln=new Uint8Array,Bn=new Uint8Array,Gn=new Uint8Array,Hn=new Uint8Array,Jn=new Uint8Array([248,6,0,1]),Nn=new Uint8Array([120,121,122,45,108,111,99,97,116,105,111,110,32,111,102,32,116,104,101,32,108,105,103,104,116,32,115,111,117,114,99,101,0]),Qn=new Uint8Array,Wn=new Uint8Array,Xn=new Uint8Array([2]),Yn=new Uint8Array,Zn=new Uint8Array([64]),ta=new Uint8Array,ea=new Uint8Array([40]),sa=new Uint8Array([32,7,0,1]),ra=new Uint8Array([115,104,105,110,105,110,101,115,115,0]),na=new Uint8Array,aa=new Uint8Array,oa=new Uint8Array([0,0,0,0,0,0,0,0]),ca=new Uint8Array,ia=new Uint8Array([0,0,0,0,0,0,240,63]),ua=new Uint8Array,ma=new Uint8Array([154,153,153,153,153,153,217,63]),ya=new Uint8Array([68,7,0,1]),ba=new Uint8Array([100,101,112,116,104,32,111,102,32,115,104,97,100,111,119,32,97,114,101,97,115,0]),la=new Uint8Array,ga=new Uint8Array,pa=new Uint8Array([0,0,0,0,0,0,240,63]),Oa=new Uint8Array,ja=new Uint8Array([0,0,0,0,0,0,36,64]),Sa=new Uint8Array,fa=new Uint8Array([0,0,0,0,0,0,0,64]),za=new Uint8Array([116,7,0,1]),ha=new Uint8Array([116,104,101,32,104,101,105,103,104,116,32,111,102,32,51,68,32,101,102,102,101,99,116,0]),wa=new Uint8Array,da=new Uint8Array([0,0,0,0,0,0,240,63]),Aa=new Uint8Array,Ua=new Uint8Array([0,0,0,0,0,0,240,63]),Va=new Uint8Array,Pa=new Uint8Array([0,0,0,0,0,0,112,64]),Ra=new Uint8Array,ka=new Uint8Array([0,0,0,0,0,0,105,64]),qa=new Uint8Array,Ia=new Uint8Array([0,0,0,0,0,0,112,64]),va=new Uint8Array,xa=new Uint8Array([0,0,0,0,0,0,36,64]),Ea=new Uint8Array,Ca=new Uint8Array,Ta=new Uint8Array,Da=new Uint8Array,Ka=new Uint8Array([144,7,0,1]),Ma=new Uint8Array([116,104,101,32,115,105,122,101,32,102,111,114,32,105,110,112,117,116,32,39,115,116,114,105,112,101,39,0]),Fa=new Uint8Array,_a=new Uint8Array([0,0,0,0,0,0,240,191]),$a=new Uint8Array,La=new Uint8Array([0,0,0,0,0,0,240,191]),Ba=new Uint8Array,Ga=new Uint8Array([0,0,0,0,0,0,240,191]),Ha=new Uint8Array,Ja=new Uint8Array([0,0,0,0,0,0,240,63]),Na=new Uint8Array,Qa=new Uint8Array([0,0,0,0,0,0,240,63]),Wa=new Uint8Array,Xa=new Uint8Array([0,0,0,0,0,0,240,63]),Ya=new Uint8Array,Za=new Uint8Array([0,0,0,0,0,0,0,0]),to=new Uint8Array,eo=new Uint8Array([0,0,0,0,0,0,0,0]),so=new Uint8Array,ro=new Uint8Array([0,0,0,0,0,0,240,63]),no=new Uint8Array,ao=new Uint8Array,oo=new Uint8Array,co=new Uint8Array,io=new Uint8Array,uo=new Uint8Array,mo=new Uint8Array,yo=new Uint8Array,bo=new Uint8Array,lo=new Uint8Array,go=new Uint8Array,po=new Uint8Array([4]),Oo=new Uint8Array,jo=new Uint8Array,So=new Uint8Array,fo=new Uint8Array([0,5,0,1]),zo=new Uint8Array([77,101,116,97,108,108,105,99,0]),ho=new Uint8Array([20,5,0,1]),wo=new Uint8Array([80,101,116,114,105,32,76,101,115,107,105,110,101,110,0]),Ao=new Uint8Array,Uo=new Uint8Array([1]),Vo=new Uint8Array([52,5,0,1]),Po=new Uint8Array([77,101,116,97,108,108,105,99,32,45,101,102,102,101,99,116,0]),Ro=new Uint8Array,ko=new Uint8Array,qo=new Uint8Array,Io=new Uint8Array([0]),vo=new Uint8Array([1]),sn=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),xo=new Uint8Array,Eo=new Uint8Array,Co=new Uint8Array,To=new Uint8Array,Do=new Uint8Array([4]),K=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),rn=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ko=new Uint8Array,Mo=new Uint8Array,Fo=new Uint8Array,_o=new Uint8Array,$o=new Uint8Array([4]),We=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Lo=new Uint8Array([0,0,72,67,0,0,112,66,0,0,32,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,0,0,0,0,128,67,0,0,32,65,40,0,0,0,205,204,204,62,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0]),Bo=new Uint8Array([27,0]),Go=new Uint8Array([27,0]),Ho=new Uint8Array,Jo=new Uint8Array,No=new Uint8Array,Qo=new Uint8Array;Object.assign(Ze,{slots:{0:Dt,1:Kt,2:Mt}});Object.assign(Dt,{structure:s,memory:{array:Un},const:!0,slots:{0:ts}});Object.assign(ts,{structure:r,memory:{array:Vn},const:!0});Object.assign(Kt,{structure:s,memory:{array:Pn},const:!0,slots:{0:es}});Object.assign(es,{structure:r,memory:{array:Rn},const:!0});Object.assign(Mt,{structure:s,memory:{array:kn},const:!0,slots:{0:ss}});Object.assign(ss,{structure:r,memory:{array:qn},const:!0});Object.assign(rs,{slots:{0:Ft,1:_t,2:$t}});Object.assign(Ft,{structure:s,memory:{array:In},const:!0,slots:{0:ns}});Object.assign(ns,{structure:r,memory:{array:vn},const:!0});Object.assign(_t,{structure:s,memory:{array:xn},const:!0,slots:{0:as}});Object.assign(as,{structure:r,memory:{array:En},const:!0});Object.assign($t,{structure:s,memory:{array:Cn},const:!0,slots:{0:os}});Object.assign(os,{structure:r,memory:{array:Tn},const:!0});Object.assign(cs,{slots:{0:Lt,1:Bt,2:Gt}});Object.assign(Lt,{structure:s,memory:{array:Dn},const:!0,slots:{0:is}});Object.assign(is,{structure:r,memory:{array:Kn},const:!0});Object.assign(Bt,{structure:s,memory:{array:Mn},const:!0,slots:{0:us}});Object.assign(us,{structure:r,memory:{array:Fn},const:!0});Object.assign(Gt,{structure:s,memory:{array:_n},const:!0,slots:{0:ms}});Object.assign(ms,{structure:r,memory:{array:$n},const:!0});Object.assign(ys,{slots:{0:Ht,1:Nt,2:Qt,3:Wt,4:Xt}});Object.assign(Ht,{structure:n,memory:{array:Ln},const:!0,slots:{0:Jt}});Object.assign(Jt,{structure:k});Object.assign(Nt,{structure:N,memory:{array:Bn},const:!0,slots:{0:Dt,1:Kt,2:Mt}});Object.assign(Qt,{structure:Q,memory:{array:Gn},const:!0,slots:{0:Ft,1:_t,2:$t}});Object.assign(Wt,{structure:W,memory:{array:Hn},const:!0,slots:{0:Lt,1:Bt,2:Gt}});Object.assign(Xt,{structure:Y,memory:{array:Jn},const:!0,slots:{0:bs}});Object.assign(bs,{structure:X,memory:{array:Nn},reloc:16779e3});Object.assign(ls,{slots:{0:Yt,1:Zt,2:te,3:ee,4:se}});Object.assign(Yt,{structure:n,memory:{array:Qn},const:!0,slots:{0:gs}});Object.assign(gs,{structure:q});Object.assign(Zt,{structure:o,memory:{array:Wn},const:!0,slots:{0:ps}});Object.assign(ps,{structure:O,memory:{array:Xn},const:!0});Object.assign(te,{structure:o,memory:{array:Yn},const:!0,slots:{0:Os}});Object.assign(Os,{structure:O,memory:{array:Zn},const:!0});Object.assign(ee,{structure:o,memory:{array:ta},const:!0,slots:{0:js}});Object.assign(js,{structure:O,memory:{array:ea},const:!0});Object.assign(se,{structure:et,memory:{array:sa},const:!0,slots:{0:Ss}});Object.assign(Ss,{structure:tt,memory:{array:ra},reloc:16779040});Object.assign(fs,{slots:{0:re,1:ae,2:oe,3:ce,4:ie}});Object.assign(re,{structure:n,memory:{array:na},const:!0,slots:{0:ne}});Object.assign(ne,{structure:S});Object.assign(ae,{structure:s,memory:{array:aa},const:!0,slots:{0:zs}});Object.assign(zs,{structure:r,memory:{array:oa},const:!0});Object.assign(oe,{structure:s,memory:{array:ca},const:!0,slots:{0:hs}});Object.assign(hs,{structure:r,memory:{array:ia},const:!0});Object.assign(ce,{structure:s,memory:{array:ua},const:!0,slots:{0:ws}});Object.assign(ws,{structure:r,memory:{array:ma},const:!0});Object.assign(ie,{structure:nt,memory:{array:ya},const:!0,slots:{0:ds}});Object.assign(ds,{structure:rt,memory:{array:ba},reloc:16779076});Object.assign(As,{slots:{0:ue,1:me,2:ye,3:be,4:le}});Object.assign(ue,{structure:n,memory:{array:la},const:!0,slots:{0:ne}});Object.assign(me,{structure:s,memory:{array:ga},const:!0,slots:{0:Us}});Object.assign(Us,{structure:r,memory:{array:pa},const:!0});Object.assign(ye,{structure:s,memory:{array:Oa},const:!0,slots:{0:Vs}});Object.assign(Vs,{structure:r,memory:{array:ja},const:!0});Object.assign(be,{structure:s,memory:{array:Sa},const:!0,slots:{0:Ps}});Object.assign(Ps,{structure:r,memory:{array:fa},const:!0});Object.assign(le,{structure:ct,memory:{array:za},const:!0,slots:{0:Rs}});Object.assign(Rs,{structure:ot,memory:{array:ha},reloc:16779124});Object.assign(ks,{slots:{0:ge,1:pe}});Object.assign(ge,{structure:s,memory:{array:wa},const:!0,slots:{0:qs}});Object.assign(qs,{structure:r,memory:{array:da},const:!0});Object.assign(pe,{structure:s,memory:{array:Aa},const:!0,slots:{0:Is}});Object.assign(Is,{structure:r,memory:{array:Ua},const:!0});Object.assign(vs,{slots:{0:Oe,1:je}});Object.assign(Oe,{structure:s,memory:{array:Va},const:!0,slots:{0:xs}});Object.assign(xs,{structure:r,memory:{array:Pa},const:!0});Object.assign(je,{structure:s,memory:{array:Ra},const:!0,slots:{0:Es}});Object.assign(Es,{structure:r,memory:{array:ka},const:!0});Object.assign(Cs,{slots:{0:Se,1:fe}});Object.assign(Se,{structure:s,memory:{array:qa},const:!0,slots:{0:Ts}});Object.assign(Ts,{structure:r,memory:{array:Ia},const:!0});Object.assign(fe,{structure:s,memory:{array:va},const:!0,slots:{0:Ds}});Object.assign(Ds,{structure:r,memory:{array:xa},const:!0});Object.assign(Ks,{slots:{0:ze,1:he,2:we,3:de,4:Ae}});Object.assign(ze,{structure:n,memory:{array:Ea},const:!0,slots:{0:Ms}});Object.assign(Ms,{structure:gt});Object.assign(he,{structure:ut,memory:{array:Ca},const:!0,slots:{0:ge,1:pe}});Object.assign(we,{structure:mt,memory:{array:Ta},const:!0,slots:{0:Oe,1:je}});Object.assign(de,{structure:yt,memory:{array:Da},const:!0,slots:{0:Se,1:fe}});Object.assign(Ae,{structure:lt,memory:{array:Ka},const:!0,slots:{0:Fs}});Object.assign(Fs,{structure:bt,memory:{array:Ma},reloc:16779152});Object.assign(_s,{slots:{0:Ue,1:Ve,2:Pe}});Object.assign(Ue,{structure:s,memory:{array:Fa},const:!0,slots:{0:$s}});Object.assign($s,{structure:r,memory:{array:_a},const:!0});Object.assign(Ve,{structure:s,memory:{array:$a},const:!0,slots:{0:Ls}});Object.assign(Ls,{structure:r,memory:{array:La},const:!0});Object.assign(Pe,{structure:s,memory:{array:Ba},const:!0,slots:{0:Bs}});Object.assign(Bs,{structure:r,memory:{array:Ga},const:!0});Object.assign(Gs,{slots:{0:Re,1:ke,2:qe}});Object.assign(Re,{structure:s,memory:{array:Ha},const:!0,slots:{0:Hs}});Object.assign(Hs,{structure:r,memory:{array:Ja},const:!0});Object.assign(ke,{structure:s,memory:{array:Na},const:!0,slots:{0:Js}});Object.assign(Js,{structure:r,memory:{array:Qa},const:!0});Object.assign(qe,{structure:s,memory:{array:Wa},const:!0,slots:{0:Ns}});Object.assign(Ns,{structure:r,memory:{array:Xa},const:!0});Object.assign(Qs,{slots:{0:Ie,1:ve,2:xe}});Object.assign(Ie,{structure:s,memory:{array:Ya},const:!0,slots:{0:Ws}});Object.assign(Ws,{structure:r,memory:{array:Za},const:!0});Object.assign(ve,{structure:s,memory:{array:to},const:!0,slots:{0:Xs}});Object.assign(Xs,{structure:r,memory:{array:eo},const:!0});Object.assign(xe,{structure:s,memory:{array:so},const:!0,slots:{0:Ys}});Object.assign(Ys,{structure:r,memory:{array:ro},const:!0});Object.assign(Zs,{slots:{0:Ee,1:Ce,2:Te,3:De}});Object.assign(Ee,{structure:n,memory:{array:no},const:!0,slots:{0:Jt}});Object.assign(Ce,{structure:Ot,memory:{array:ao},const:!0,slots:{0:Ue,1:Ve,2:Pe}});Object.assign(Te,{structure:jt,memory:{array:oo},const:!0,slots:{0:Re,1:ke,2:qe}});Object.assign(De,{structure:St,memory:{array:co},const:!0,slots:{0:Ie,1:ve,2:xe}});Object.assign(tr,{slots:{0:Ke,1:Me,2:Fe,3:_e,4:$e,5:Le}});Object.assign(Ke,{structure:Z,memory:{array:io},const:!0,slots:{0:Ht,1:Nt,2:Qt,3:Wt,4:Xt}});Object.assign(Me,{structure:st,memory:{array:uo},const:!0,slots:{0:Yt,1:Zt,2:te,3:ee,4:se}});Object.assign(Fe,{structure:at,memory:{array:mo},const:!0,slots:{0:re,1:ae,2:oe,3:ce,4:ie}});Object.assign(_e,{structure:it,memory:{array:yo},const:!0,slots:{0:ue,1:me,2:ye,3:be,4:le}});Object.assign($e,{structure:pt,memory:{array:bo},const:!0,slots:{0:ze,1:he,2:we,3:de,4:Ae}});Object.assign(Le,{structure:ft,memory:{array:lo},const:!0,slots:{0:Ee,1:Ce,2:Te,3:De}});Object.assign(er,{slots:{0:D}});Object.assign(D,{structure:o,memory:{array:go},const:!0,slots:{0:sr}});Object.assign(sr,{structure:O,memory:{array:po},const:!0});Object.assign(rr,{slots:{0:Be,1:Ge}});Object.assign(Be,{structure:f,memory:{array:Oo},const:!0,slots:{0:D}});Object.assign(Ge,{structure:f,memory:{array:jo},const:!0,slots:{0:D}});Object.assign(nr,{slots:{0:He}});Object.assign(He,{structure:f,memory:{array:So},const:!0,slots:{0:D}});Object.assign(ar,{slots:{0:or,1:ir,2:mr,3:br,4:gr,5:pr,6:Or}});Object.assign(or,{structure:L,memory:{array:fo},const:!0,slots:{0:cr}});Object.assign(cr,{structure:$,memory:{array:zo},reloc:16778496});Object.assign(ir,{structure:G,memory:{array:ho},const:!0,slots:{0:ur}});Object.assign(ur,{structure:B,memory:{array:wo},reloc:16778516});Object.assign(mr,{structure:o,memory:{array:Ao},const:!0,slots:{0:yr}});Object.assign(yr,{structure:O,memory:{array:Uo},const:!0});Object.assign(br,{structure:J,memory:{array:Vo},const:!0,slots:{0:lr}});Object.assign(lr,{structure:H,memory:{array:Po},reloc:16778548});Object.assign(gr,{structure:zt,memory:{array:Ro},const:!0,slots:{0:Ke,1:Me,2:Fe,3:_e,4:$e,5:Le}});Object.assign(pr,{structure:ht,memory:{array:ko},const:!0,slots:{0:Be,1:Ge}});Object.assign(Or,{structure:wt,memory:{array:qo},const:!0,slots:{0:He}});Object.assign(jr,{slots:{0:Sr,1:fr}});Object.assign(Sr,{structure:j,memory:{array:Io},const:!0});Object.assign(fr,{structure:j,memory:{array:vo},const:!0});Object.assign(zr,{memory:{array:sn},slots:{0:hr}});Object.assign(hr,{structure:V,memory:{array:sn,offset:0,length:8},slots:{0:Vt}});Object.assign(Vt,{structure:dt,memory:{array:xo},reloc:0});Object.assign(wr,{slots:{0:dr,1:Ar,2:Ur}});Object.assign(dr,{structure:n,memory:{array:Eo},const:!0,slots:{0:Je}});Object.assign(Je,{structure:v});Object.assign(Ar,{structure:n,memory:{array:Co},const:!0,slots:{0:Ne}});Object.assign(Ne,{structure:It});Object.assign(Ur,{structure:o,memory:{array:To},const:!0,slots:{0:Vr}});Object.assign(Vr,{structure:O,memory:{array:Do},const:!0});Object.assign(Pr,{memory:{array:K},slots:{0:Rr,1:qr}});Object.assign(Rr,{structure:U,memory:{array:K,offset:0,length:24},slots:{0:kr}});Object.assign(kr,{structure:V,memory:{array:K,offset:0,length:8},slots:{0:Vt}});Object.assign(qr,{structure:U,memory:{array:K,offset:24,length:24},slots:{0:Ir}});Object.assign(Ir,{structure:V,memory:{array:K,offset:24,length:8},slots:{0:Vt}});Object.assign(vr,{memory:{array:rn},slots:{0:xr}});Object.assign(xr,{structure:E,memory:{array:rn,offset:0,length:8},slots:{0:Qe}});Object.assign(Qe,{structure:At,memory:{array:Ko},reloc:0});Object.assign(Er,{slots:{0:Cr,1:Tr,2:Dr}});Object.assign(Cr,{structure:n,memory:{array:Mo},const:!0,slots:{0:Je}});Object.assign(Tr,{structure:n,memory:{array:Fo},const:!0,slots:{0:Ne}});Object.assign(Dr,{structure:o,memory:{array:_o},const:!0,slots:{0:Kr}});Object.assign(Kr,{structure:O,memory:{array:$o},const:!0});Object.assign(Mr,{memory:{array:We},slots:{0:Fr}});Object.assign(Fr,{structure:Ut,memory:{array:We},slots:{0:_r}});Object.assign(_r,{structure:E,memory:{array:We,offset:0,length:8},slots:{0:Qe}});Object.assign($r,{memory:{array:Lo}});Object.assign(Lr,{slots:{0:Br}});Object.assign(Br,{structure:d,memory:{array:Bo},const:!0});Object.assign(Gr,{slots:{0:Hr}});Object.assign(Hr,{structure:A,memory:{array:Go},const:!0});Object.assign(Jr,{slots:{0:Nr,1:Wr,2:Yr,3:tn}});Object.assign(Nr,{structure:n,memory:{array:Ho},const:!0,slots:{0:Qr}});Object.assign(Qr,{structure:qt});Object.assign(Wr,{structure:n,memory:{array:Jo},const:!0,slots:{0:Xr}});Object.assign(Xr,{structure:x});Object.assign(Yr,{structure:n,memory:{array:No},const:!0,slots:{0:Zr}});Object.assign(Zr,{structure:C});Object.assign(tn,{structure:n,memory:{array:Qo},const:!0,slots:{0:en}});Object.assign(en,{structure:T});const Wo={argStruct:xt,thunkId:2,name:"createOutput"},Xo={argStruct:Ct,thunkId:3,name:"createPartialOutput"};Object.assign(n,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:n}],methods:[]}});Object.assign(y,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:y}],methods:[]}});Object.assign($,{...e,type:1,name:"[8:0]u8",length:8,byteSize:9,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:y}],methods:[]}});Object.assign(L,{...e,type:13,name:"*const [8:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[]}});Object.assign(B,{...e,type:1,name:"[14:0]u8",length:14,byteSize:15,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:y}],methods:[]}});Object.assign(G,{...e,type:13,name:"*const [14:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:B}],methods:[]}});Object.assign(o,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:o}],methods:[]}});Object.assign(O,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(H,{...e,type:1,name:"[16:0]u8",length:16,byteSize:17,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:y}],methods:[]}});Object.assign(J,{...e,type:13,name:"*const [16:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[]}});Object.assign(s,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(r,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[]}});Object.assign(N,{...e,type:2,name:"Struct4271900269",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s},{...t,type:7,slot:2,name:"2",structure:s}],methods:[],template:Ze}});Object.assign(Q,{...e,type:2,name:"Struct3672525730",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s},{...t,type:7,slot:2,name:"2",structure:s}],methods:[],template:rs}});Object.assign(W,{...e,type:2,name:"Struct784360676",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s},{...t,type:7,slot:2,name:"2",structure:s}],methods:[],template:cs}});Object.assign(X,{...e,type:1,name:"[32:0]u8",length:32,byteSize:33,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:y}],methods:[]}});Object.assign(Y,{...e,type:13,name:"*const [32:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[]}});Object.assign(S,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(k,{...e,type:15,name:"@Vector(3, f32)",length:3,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(Z,{...e,type:2,name:"Struct1085137152",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:n},{...t,type:7,slot:1,name:"minValue",structure:N},{...t,type:7,slot:2,name:"maxValue",structure:Q},{...t,type:7,slot:3,name:"defaultValue",structure:W},{...t,type:7,slot:4,name:"description",structure:Y}],methods:[],template:ys}});Object.assign(tt,{...e,type:1,name:"[9:0]u8",length:9,byteSize:10,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:y}],methods:[]}});Object.assign(et,{...e,type:13,name:"*const [9:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:tt}],methods:[]}});Object.assign(q,{...e,name:"i32",byteSize:4,align:4,instance:{members:[{...t,type:2,bitOffset:0,bitSize:32,byteSize:4,structure:q}],methods:[]}});Object.assign(st,{...e,type:2,name:"Struct2784497331",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:n},{...t,type:7,slot:1,name:"minValue",structure:o},{...t,type:7,slot:2,name:"maxValue",structure:o},{...t,type:7,slot:3,name:"defaultValue",structure:o},{...t,type:7,slot:4,name:"description",structure:et}],methods:[],template:ls}});Object.assign(rt,{...e,type:1,name:"[21:0]u8",length:21,byteSize:22,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:y}],methods:[]}});Object.assign(nt,{...e,type:13,name:"*const [21:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:rt}],methods:[]}});Object.assign(at,{...e,type:2,name:"Struct1241326134",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:n},{...t,type:7,slot:1,name:"minValue",structure:s},{...t,type:7,slot:2,name:"maxValue",structure:s},{...t,type:7,slot:3,name:"defaultValue",structure:s},{...t,type:7,slot:4,name:"description",structure:nt}],methods:[],template:fs}});Object.assign(ot,{...e,type:1,name:"[23:0]u8",length:23,byteSize:24,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:y}],methods:[]}});Object.assign(ct,{...e,type:13,name:"*const [23:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:ot}],methods:[]}});Object.assign(it,{...e,type:2,name:"Struct3136215342",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:n},{...t,type:7,slot:1,name:"minValue",structure:s},{...t,type:7,slot:2,name:"maxValue",structure:s},{...t,type:7,slot:3,name:"defaultValue",structure:s},{...t,type:7,slot:4,name:"description",structure:ct}],methods:[],template:As}});Object.assign(ut,{...e,type:2,name:"Struct2999377579",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s}],methods:[],template:ks}});Object.assign(mt,{...e,type:2,name:"Struct432297483",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s}],methods:[],template:vs}});Object.assign(yt,{...e,type:2,name:"Struct3673340580",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s}],methods:[],template:Cs}});Object.assign(bt,{...e,type:1,name:"[27:0]u8",length:27,byteSize:28,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:y}],methods:[]}});Object.assign(lt,{...e,type:13,name:"*const [27:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:bt}],methods:[]}});Object.assign(gt,{...e,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(pt,{...e,type:2,name:"Struct2516105208",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:n},{...t,type:7,slot:1,name:"minValue",structure:ut},{...t,type:7,slot:2,name:"maxValue",structure:mt},{...t,type:7,slot:3,name:"defaultValue",structure:yt},{...t,type:7,slot:4,name:"description",structure:lt}],methods:[],template:Ks}});Object.assign(Ot,{...e,type:2,name:"Struct3651955411",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s},{...t,type:7,slot:2,name:"2",structure:s}],methods:[],template:_s}});Object.assign(jt,{...e,type:2,name:"Struct2060771296",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s},{...t,type:7,slot:2,name:"2",structure:s}],methods:[],template:Gs}});Object.assign(St,{...e,type:2,name:"Struct4047049304",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s},{...t,type:7,slot:2,name:"2",structure:s}],methods:[],template:Qs}});Object.assign(ft,{...e,type:2,name:"Struct3899051868",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:n},{...t,type:7,slot:1,name:"minValue",structure:Ot},{...t,type:7,slot:2,name:"maxValue",structure:jt},{...t,type:7,slot:3,name:"defaultValue",structure:St}],methods:[],template:Zs}});Object.assign(zt,{...e,type:2,name:"Struct3399497509",align:1,instance:{members:[{...t,type:7,slot:0,name:"lightsource",structure:Z},{...t,type:7,slot:1,name:"shininess",structure:st},{...t,type:7,slot:2,name:"shadow",structure:at},{...t,type:7,slot:3,name:"relief",structure:it},{...t,type:7,slot:4,name:"stripesize",structure:pt},{...t,type:7,slot:5,name:"viewDirection",structure:ft}],methods:[],template:tr}});Object.assign(f,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:o}],methods:[],template:er}});Object.assign(ht,{...e,type:2,name:"Struct33391186",align:1,instance:{members:[{...t,type:7,slot:0,name:"source",structure:f},{...t,type:7,slot:1,name:"stripe",structure:f}],methods:[],template:rr}});Object.assign(wt,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:f}],methods:[],template:nr}});Object.assign(qt,{...e,type:2,name:"metallic.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:L},{...t,type:7,slot:1,name:"vendor",structure:G},{...t,type:7,slot:2,name:"version",structure:o},{...t,type:7,slot:3,name:"description",structure:J},{...t,type:7,slot:4,name:"parameters",structure:zt},{...t,type:7,slot:5,name:"inputImages",structure:ht},{...t,type:7,slot:6,name:"outputImages",structure:wt}],methods:[],template:ar}});Object.assign(v,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:y}],methods:[]}});Object.assign(dt,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:v}],methods:[]}});Object.assign(V,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:dt}],methods:[]}});Object.assign(m,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[]}});Object.assign(j,{...e,type:11,name:"metallic.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:j}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:j},{...t,type:7,slot:1,name:"display-p3",structure:j}],methods:[],template:jr}});Object.assign(I,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(It,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(U,{...e,type:2,name:"metallic.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:V},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:j},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:I}],methods:[],template:zr},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:n},{...t,type:7,slot:1,name:"FPixel",structure:n},{...t,type:7,slot:2,name:"channels",structure:o}],methods:[],template:wr}});Object.assign(x,{...e,type:2,name:"metallic.KernelInput(u8,metallic.kernel)",byteSize:48,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"source",structure:U},{...t,type:5,bitOffset:192,bitSize:192,byteSize:24,slot:1,name:"stripe",structure:U}],methods:[],template:Pr}});Object.assign(At,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:v}],methods:[]}});Object.assign(E,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:At}],methods:[]}});Object.assign(Ut,{...e,type:2,name:"metallic.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:E},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:j},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:I}],methods:[],template:vr},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:n},{...t,type:7,slot:1,name:"FPixel",structure:n},{...t,type:7,slot:2,name:"channels",structure:o}],methods:[],template:Er}});Object.assign(C,{...e,type:2,name:"metallic.KernelOutput(u8,metallic.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:Ut}],methods:[],template:Mr}});Object.assign(T,{...e,type:2,name:"metallic.KernelParameters(metallic.kernel)",byteSize:64,align:16,instance:{members:[{...t,type:5,bitOffset:0,bitSize:96,byteSize:16,slot:0,name:"lightsource",structure:k},{...t,type:2,bitOffset:320,bitSize:32,byteSize:4,slot:3,name:"shininess",structure:q},{...t,type:4,bitOffset:352,bitSize:32,byteSize:4,slot:4,name:"shadow",structure:S},{...t,type:4,bitOffset:384,bitSize:32,byteSize:4,slot:5,name:"relief",structure:S},{...t,type:5,bitOffset:256,bitSize:64,byteSize:8,slot:1,name:"stripesize",structure:gt},{...t,type:5,bitOffset:128,bitSize:96,byteSize:16,slot:2,name:"viewDirection",structure:k}],methods:[],template:$r}});Object.assign(d,{...e,type:10,name:"ErrorSet959078560",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:d}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:d}],methods:[],template:Lr}});Object.assign(vt,{...e,type:9,name:"ErrorSet959078560!metallic.KernelOutput(u8,metallic.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:C},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:d}],methods:[]}});Object.assign(xt,{...e,type:5,name:"createOutput",byteSize:160,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:512,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...t,type:3,isRequired:!0,bitOffset:544,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...t,type:5,isRequired:!0,bitOffset:576,bitSize:384,byteSize:48,slot:0,name:"2",structure:x},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:512,byteSize:64,slot:1,name:"3",structure:T},{...t,type:5,isRequired:!0,bitOffset:960,bitSize:224,byteSize:28,slot:2,name:"retval",structure:vt}],methods:[]}});Object.assign(A,{...e,type:10,name:"ErrorSet392900097",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:A}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:A}],methods:[],template:Gr}});Object.assign(Et,{...e,type:9,name:"ErrorSet392900097!metallic.KernelOutput(u8,metallic.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:C},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:A}],methods:[]}});Object.assign(Ct,{...e,type:5,name:"createPartialOutput",byteSize:160,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:512,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...t,type:3,isRequired:!0,bitOffset:544,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...t,type:3,isRequired:!0,bitOffset:576,bitSize:32,byteSize:4,slot:5,name:"2",structure:m},{...t,type:3,isRequired:!0,bitOffset:608,bitSize:32,byteSize:4,slot:6,name:"3",structure:m},{...t,type:5,isRequired:!0,bitOffset:640,bitSize:384,byteSize:48,slot:0,name:"4",structure:x},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:512,byteSize:64,slot:1,name:"5",structure:T},{...t,type:5,isRequired:!0,bitOffset:1024,bitSize:224,byteSize:28,slot:2,name:"retval",structure:Et}],methods:[]}});Object.assign(Tt,{...e,type:2,name:"metallic",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:n},{...t,type:7,slot:1,name:"Input",structure:n},{...t,type:7,slot:2,name:"Output",structure:n},{...t,type:7,slot:3,name:"Parameters",structure:n}],methods:[Wo,Xo],template:Jr}});const Yo=[n,y,$,L,B,G,o,O,H,J,s,r,N,Q,W,X,Y,S,k,Z,tt,et,q,st,rt,nt,at,ot,ct,it,ut,mt,yt,bt,lt,gt,pt,Ot,jt,St,ft,zt,f,ht,wt,qt,v,dt,V,m,j,I,It,U,x,At,E,Ut,C,T,d,vt,xt,A,Et,Ct,Tt],Zo=Tt,tc={runtimeSafety:!1,littleEndian:!0},Pt=jn();Pt.getSpecialExports();Pt.recreateStructures(Yo,tc);const ec=(async()=>{const i=new URL("metallic-d6a3902e.wasm",import.meta.url).href;return fetch(i)})();Pt.loadModule(ec);Pt.linkVariables(!0);const{constructor:sc}=Zo,{createPartialOutput:rc,Input:nc,kernel:kt}=sc;function ac(i,b,u,c,a={},z={}){const h=[];for(const[g]of kt.inputImages)h.push(g);const P=[];for(const[g]of kt.outputImages)P.push(g);if(Array.isArray(a)){const g=a;a={};for(const[p,w]of h.entries())a[w]=g[p]}const l=new nc(void 0),M=[];let R;for(const g of h){let p=a[g];if(p||(h.length===1&&["data","width","height"].every(w=>!!a[w])?p=a:M.push(g)),l[g]=p,R){if(p.colorSpace!==R)throw new Error(`Input images must all use the same color space: ${R}`)}else R=p.colorSpace}if(M.length>0)throw new Error(`Missing input image${M.length>1?"s":""}: ${M.join(", ")}`);const Rt=rc(i,b,u,c,l,z),Xe=g=>{const p={};for(const w of P){const{data:{typedArray:F},width:Ye,height:nn}=g[w];let _;if(typeof ImageData=="function"){const an=new Uint8ClampedArray(F.buffer,F.byteOffset,F.byteLength);_=new ImageData(an,Ye,c,{colorSpace:R})}else _={data:F,width:Ye,height:nn};if(P.length===1)return _;p[w]=_}return p};return Rt[Symbol.toStringTag]==="Promise"?Rt.then(Xe):Xe(Rt)}function oc(){const i={};for(let[b,u]of kt){if(b==="parameters"){const c={};for(const[a,z]of u){const h=c[a]={};for(let[P,l]of z)typeof l=="object"?l=l.string??l.valueOf():typeof l=="function"&&(l=cc(l.name)),h[P]=l}u=c}else typeof u=="object"&&(u=u.string??u.valueOf());i[b]=u}return i}function cc(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[b,u,...c]=i.data;ic(b,c).then(([a,z])=>{postMessage([b,u,a],{transfer:z})}).catch(a=>{postMessage(["error",u,a])})};async function ic(i,b){switch(i){case"getKernelInfo":return[oc(...b)];case"createPartialImageData":const c=await ac(...b),a=[];if("data"in c&&"width"in c&&"height"in c)a.push(c.data.buffer);else for(const z of Object.entries(c))a.push(c.data.buffer);return[c,a];default:throw new Error(`Unknown function: ${i}`)}}
