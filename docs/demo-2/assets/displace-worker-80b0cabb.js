import{u as xe,a as Ee,b as Ke,d as De,c as Fe,e as Me,f as _e,g as Te,h as $e,i as Be,j as Le,k as Ge,l as He,m as Je,o as Ne,n as Qe,p as We,q as Xe}from"./index-076239a4.js";xe();Ee();Ke();De();Fe();Me();_e();Te();$e();Be();Le();Ge();He();Je();Ne();Qe();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},d={},Q={},W={},x={},X={},Y={},E={},i={},s={},Z={},ee={},K={},A={},te={},b={},m={},se={},D={},re={},F={},ae={},M={},ne={},_={},ie={},ue={},T={},oe={},$={},le={},B={},me={},L={},ye={},G={},z={},f={},ce={},H={},be={},J={},ze={},O={},U={},R={},y={},pe={},q={},fe={},g={},j={},de={},Se={},N={},P={},V={},Oe={},we={},Ae={},Ue={},Re={},qe={},je={};Object.assign(d,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:5});Object.assign(Q,{...t,type:1,name:"[21:0]u8",length:21,byteSize:22,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:4});Object.assign(W,{...t,type:11,name:"*const [21:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[],template:null},slot:3});Object.assign(x,{...t,type:11,name:"*const *const [21:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:2});Object.assign(X,{...t,type:1,name:"[9:0]u8",length:9,byteSize:10,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:8});Object.assign(Y,{...t,type:11,name:"*const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:7});Object.assign(E,{...t,type:11,name:"*const *const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[],template:null},slot:6});Object.assign(i,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:i}],methods:[],template:null},slot:10});Object.assign(s,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:i}],methods:[],template:null},slot:9});Object.assign(Z,{...t,type:1,name:"[8:0]u8",length:8,byteSize:9,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:13});Object.assign(ee,{...t,type:11,name:"*const [8:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:12});Object.assign(K,{...t,type:11,name:"*const *const [8:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:11});Object.assign(A,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:A}],methods:[],template:null},slot:45});Object.assign(te,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:A}],methods:[],template:null},slot:32});Object.assign(b,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:b}],methods:[],template:null},slot:61});Object.assign(m,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:b}],methods:[],template:null},slot:60});const Ye=new Uint8Array,Ze=new Uint8Array([200,249,15,0]),et=new Uint8Array([0,0,0,0,0,0,89,192]),tt=new Uint8Array([32,250,15,0]),st=new Uint8Array([0,0,0,0,0,0,89,192]);Object.assign(se,{...t,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:m},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:m}],methods:[],template:{memory:{array:Ye},slots:{0:{structure:m,memory:{array:Ze},slots:{0:{structure:b,memory:{array:et}}}},1:{structure:m,memory:{array:tt},slots:{0:{structure:b,memory:{array:st}}}}}}},slot:49});Object.assign(D,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:48});const rt=new Uint8Array,at=new Uint8Array([200,249,15,0]),nt=new Uint8Array([0,0,0,0,0,0,89,64]),it=new Uint8Array([32,250,15,0]),ut=new Uint8Array([0,0,0,0,0,0,89,64]);Object.assign(re,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:m},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:m}],methods:[],template:{memory:{array:rt},slots:{0:{structure:m,memory:{array:at},slots:{0:{structure:b,memory:{array:nt}}}},1:{structure:m,memory:{array:it},slots:{0:{structure:b,memory:{array:ut}}}}}}},slot:51});Object.assign(F,{...t,type:11,name:"Struct0013",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:50});const ot=new Uint8Array,lt=new Uint8Array([200,249,15,0]),mt=new Uint8Array([0,0,0,0,0,0,0,0]),yt=new Uint8Array([32,250,15,0]),ct=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(ae,{...t,type:2,name:"Struct0020",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:m},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:m}],methods:[],template:{memory:{array:ot},slots:{0:{structure:m,memory:{array:lt},slots:{0:{structure:b,memory:{array:mt}}}},1:{structure:m,memory:{array:yt},slots:{0:{structure:b,memory:{array:ct}}}}}}},slot:53});Object.assign(M,{...t,type:11,name:"Struct0014",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:52});const bt=new Uint8Array,pt=new Uint8Array([170,170,170,170]),ft=new Uint8Array,dt=new Uint8Array([170,170,170,170]),St=new Uint8Array,ht=new Uint8Array([170,170,170,170]),gt=new Uint8Array;Object.assign(ne,{...t,type:2,name:"Struct0009",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:te},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:D},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:F},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:M}],methods:[],template:{memory:{array:bt},slots:{0:{structure:D,memory:{array:pt},slots:{0:{structure:se,memory:{array:ft}}}},1:{structure:F,memory:{array:dt},slots:{0:{structure:re,memory:{array:St}}}},2:{structure:M,memory:{array:ht},slots:{0:{structure:ae,memory:{array:gt}}}}}}},slot:39});Object.assign(_,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:38});Object.assign(ie,{...t,type:13,name:"@Vector(2, i32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,structure:i}],methods:[],template:null},slot:33});const zt=new Uint8Array,Ot=new Uint8Array([4,250,15,0]),wt=new Uint8Array([0,0,0,0]),At=new Uint8Array([40,250,15,0]),Ut=new Uint8Array([0,0,0,0]);Object.assign(ue,{...t,type:2,name:"Struct0021",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:zt},slots:{0:{structure:s,memory:{array:Ot},slots:{0:{structure:i,memory:{array:wt}}}},1:{structure:s,memory:{array:At},slots:{0:{structure:i,memory:{array:Ut}}}}}}},slot:55});Object.assign(T,{...t,type:11,name:"Struct0015",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:54});const Rt=new Uint8Array,qt=new Uint8Array([4,250,15,0]),jt=new Uint8Array([3,0,0,0]),Pt=new Uint8Array([40,250,15,0]),Vt=new Uint8Array([3,0,0,0]);Object.assign(oe,{...t,type:2,name:"Struct0022",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Rt},slots:{0:{structure:s,memory:{array:qt},slots:{0:{structure:i,memory:{array:jt}}}},1:{structure:s,memory:{array:Pt},slots:{0:{structure:i,memory:{array:Vt}}}}}}},slot:57});Object.assign($,{...t,type:11,name:"Struct0016",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:56});const Ct=new Uint8Array,kt=new Uint8Array([4,250,15,0]),It=new Uint8Array([0,0,0,0]),vt=new Uint8Array([40,250,15,0]),xt=new Uint8Array([1,0,0,0]);Object.assign(le,{...t,type:2,name:"Struct0023",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Ct},slots:{0:{structure:s,memory:{array:kt},slots:{0:{structure:i,memory:{array:It}}}},1:{structure:s,memory:{array:vt},slots:{0:{structure:i,memory:{array:xt}}}}}}},slot:59});Object.assign(B,{...t,type:11,name:"Struct0017",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:58});const Et=new Uint8Array,Kt=new Uint8Array([170,170,170,170]),Dt=new Uint8Array,Ft=new Uint8Array([170,170,170,170]),Mt=new Uint8Array,_t=new Uint8Array([170,170,170,170]),Tt=new Uint8Array;Object.assign(me,{...t,type:2,name:"Struct0010",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:ie},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:T},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:$},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:B}],methods:[],template:{memory:{array:Et},slots:{0:{structure:T,memory:{array:Kt},slots:{0:{structure:ue,memory:{array:Dt}}}},1:{structure:$,memory:{array:Ft},slots:{0:{structure:oe,memory:{array:Mt}}}},2:{structure:B,memory:{array:_t},slots:{0:{structure:le,memory:{array:Tt}}}}}}},slot:41});Object.assign(L,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:40});const $t=new Uint8Array,Bt=new Uint8Array([170,170,170,170]),Lt=new Uint8Array,Gt=new Uint8Array([170,170,170,170]),Ht=new Uint8Array;Object.assign(ye,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"amplitude",structure:_},{...e,type:8,isRequired:!1,slot:1,name:"channels",structure:L}],methods:[],template:{memory:{array:$t},slots:{0:{structure:_,memory:{array:Bt},slots:{0:{structure:ne,memory:{array:Lt}}}},1:{structure:L,memory:{array:Gt},slots:{0:{structure:me,memory:{array:Ht}}}}}}},slot:15});Object.assign(G,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:14});const Jt=new Uint8Array,Nt=new Uint8Array([32,250,15,0]),Qt=new Uint8Array([4,0,0,0]);Object.assign(z,{...t,type:2,name:"Struct0011",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:s}],methods:[],template:{memory:{array:Jt},slots:{0:{structure:s,memory:{array:Nt},slots:{0:{structure:i,memory:{array:Qt}}}}}}},slot:43});Object.assign(f,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:z}],methods:[],template:null},slot:42});const Wt=new Uint8Array,Xt=new Uint8Array([170,170,170,170]),Yt=new Uint8Array,Zt=new Uint8Array([170,170,170,170]),es=new Uint8Array;Object.assign(ce,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:f},{...e,type:8,isRequired:!1,slot:1,name:"src1",structure:f}],methods:[],template:{memory:{array:Wt},slots:{0:{structure:f,memory:{array:Xt},slots:{0:{structure:z,memory:{array:Yt}}}},1:{structure:f,memory:{array:Zt},slots:{0:{structure:z,memory:{array:es}}}}}}},slot:17});Object.assign(H,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:16});const ts=new Uint8Array,ss=new Uint8Array([170,170,170,170]),rs=new Uint8Array;Object.assign(be,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:f}],methods:[],template:{memory:{array:ts},slots:{0:{structure:f,memory:{array:ss},slots:{0:{structure:z,memory:{array:rs}}}}}}},slot:19});Object.assign(J,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:18});const as=new Uint8Array,ns=new Uint8Array,is=new Uint8Array([116,36,16,0]),us=new Uint8Array([31,36,16,0]),os=new Uint8Array([110,101,116,46,110,105,99,111,112,116,101,114,101,46,102,105,108,116,101,114,115,0]),ls=new Uint8Array([112,36,16,0]),ms=new Uint8Array([10,36,16,0]),ys=new Uint8Array([110,105,99,111,112,116,101,114,101,0]),cs=new Uint8Array([108,36,16,0]),bs=new Uint8Array([1,0,0,0]),ps=new Uint8Array([104,36,16,0]),fs=new Uint8Array([240,35,16,0]),ds=new Uint8Array([100,105,115,112,108,97,99,101,0]),Ss=new Uint8Array([170,170,170,170]),hs=new Uint8Array,gs=new Uint8Array([170,170,170,170]),zs=new Uint8Array,Os=new Uint8Array([170,170,170,170]),ws=new Uint8Array;Object.assign(ze,{...t,type:2,name:"displace.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:as}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:x},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:E},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:s},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:K},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:G},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:H},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:J}],methods:[],template:{memory:{array:ns},slots:{0:{structure:x,memory:{array:is},slots:{0:{structure:W,memory:{array:us},slots:{0:{structure:Q,memory:{array:os}}}}}},1:{structure:E,memory:{array:ls},slots:{0:{structure:Y,memory:{array:ms},slots:{0:{structure:X,memory:{array:ys}}}}}},2:{structure:s,memory:{array:cs},slots:{0:{structure:i,memory:{array:bs}}}},3:{structure:K,memory:{array:ps},slots:{0:{structure:ee,memory:{array:fs},slots:{0:{structure:Z,memory:{array:ds}}}}}},4:{structure:G,memory:{array:Ss},slots:{0:{structure:ye,memory:{array:hs}}}},5:{structure:H,memory:{array:gs},slots:{0:{structure:ce,memory:{array:zs}}}},6:{structure:J,memory:{array:Os},slots:{0:{structure:be,memory:{array:ws}}}}}}},slot:1});Object.assign(O,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:24});Object.assign(U,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:23});Object.assign(R,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:U}],methods:[],template:null},slot:22});Object.assign(y,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:25});const As=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(pe,{...t,type:9,name:"displace.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:i},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:i}],methods:[],template:{memory:{array:As}}},slot:26});Object.assign(q,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:27});Object.assign(fe,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:A}],methods:[],template:null},slot:44});const Us=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Rs=new Uint8Array,qs=new Uint8Array([184,35,16,0]),js=new Uint8Array([4,0,0,0]);Object.assign(g,{...t,type:2,name:"displace.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:R},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:pe},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:q}],methods:[],template:{memory:{array:Us}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:fe},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:s}],methods:[],template:{memory:{array:Rs},slots:{0:{structure:s,memory:{array:qs},slots:{0:{structure:i,memory:{array:js}}}}}}},slot:21});const Ps=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Vs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Cs=new Uint8Array([0,0,0,0,0,0,0,0]),ks=new Uint8Array,Is=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),vs=new Uint8Array([0,0,0,0,0,0,0,0]),xs=new Uint8Array;Object.assign(j,{...t,type:2,name:"displace.KernelInput(u8,displace.kernel)",length:1,byteSize:48,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:g},{...e,type:6,isRequired:!1,bitOffset:192,bitSize:192,byteSize:24,slot:1,name:"src1",structure:g}],methods:[],template:{memory:{array:Ps},slots:{0:{structure:g,memory:{array:Vs},slots:{0:{structure:R,memory:{array:Cs},address:1047024,slots:{0:{structure:U,memory:{array:ks},address:0}}}}},1:{structure:g,memory:{array:Is},slots:{0:{structure:R,memory:{array:vs},address:1047048,slots:{0:{structure:U,memory:{array:xs},address:0}}}}}}}},slot:20});Object.assign(de,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:23});Object.assign(Se,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:de}],methods:[],template:null},slot:30});const Es=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ks=new Uint8Array,Ds=new Uint8Array([184,35,16,0]),Fs=new Uint8Array([4,0,0,0]);Object.assign(N,{...t,type:2,name:"displace.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Se},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:pe},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:q}],methods:[],template:{memory:{array:Es}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:fe},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:s}],methods:[],template:{memory:{array:Ks},slots:{0:{structure:s,memory:{array:Ds},slots:{0:{structure:i,memory:{array:Fs}}}}}}},slot:29});const Ms=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),_s=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ts=new Uint8Array([0,0,0,0,0,0,0,0]),$s=new Uint8Array;Object.assign(P,{...t,type:2,name:"displace.KernelOutput(u8,displace.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:N}],methods:[],template:{memory:{array:Ms},slots:{0:{structure:N,memory:{array:_s},slots:{0:{structure:Se,memory:{array:Ts},address:1046656,slots:{0:{structure:de,memory:{array:$s},address:0}}}}}}}},slot:28});const Bs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0]);Object.assign(V,{...t,type:2,name:"displace.KernelParameters(displace.kernel)",length:1,byteSize:16,align:3,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"amplitude",structure:te},{...e,type:6,isRequired:!1,bitOffset:64,bitSize:64,byteSize:8,slot:1,name:"channels",structure:ie}],methods:[],template:{memory:{array:Bs}}},slot:31});Object.assign(Oe,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(displace.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:46});Object.assign(we,{...t,type:7,name:"ErrorSet0000!displace.KernelOutput(u8,displace.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:P},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Oe}],methods:[],template:null},slot:36});Object.assign(Ae,{...t,type:3,name:"createOutput",length:1,byteSize:104,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:160,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:6,bitOffset:192,bitSize:384,byteSize:48,slot:2,name:"2",structure:j},{...e,type:6,bitOffset:0,bitSize:128,byteSize:16,slot:3,name:"3",structure:V},{...e,type:6,bitOffset:576,bitSize:224,byteSize:28,slot:4,name:"retval",structure:we}],methods:[],template:null},slot:34});Object.assign(Ue,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(displace.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:47});Object.assign(Re,{...t,type:7,name:"ErrorSet0001!displace.KernelOutput(u8,displace.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:P},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Ue}],methods:[],template:null},slot:37});Object.assign(qe,{...t,type:3,name:"createPartialOutput",length:1,byteSize:112,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:160,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:3,bitOffset:192,bitSize:32,byteSize:4,slot:2,name:"2",structure:y},{...e,type:3,bitOffset:224,bitSize:32,byteSize:4,slot:3,name:"3",structure:y},{...e,type:6,bitOffset:256,bitSize:384,byteSize:48,slot:4,name:"4",structure:j},{...e,type:6,bitOffset:0,bitSize:128,byteSize:16,slot:5,name:"5",structure:V},{...e,type:6,bitOffset:640,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Re}],methods:[],template:null},slot:35});const Ls=new Uint8Array,Gs={argStruct:Ae,thunk:1,name:"createOutput"},Hs={argStruct:qe,thunk:5,name:"createPartialOutput"};Object.assign(je,{...t,type:2,name:"displace",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Ls}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:ze},{...e,type:7,isRequired:!1,name:"Input",structure:j},{...e,type:7,isRequired:!1,name:"Output",structure:P},{...e,type:7,isRequired:!1,name:"Parameters",structure:V}],methods:[Gs,Hs],template:null},slot:0});const Js=[d,Q,W,x,X,Y,E,i,s,Z,ee,K,A,te,b,m,se,D,re,F,ae,M,ne,_,ie,ue,T,oe,$,le,B,me,L,ye,G,z,f,ce,H,be,J,ze,O,U,R,y,pe,q,fe,g,j,de,Se,N,P,V,Oe,we,Ae,Ue,Re,qe,je],Ns=We(Js),Qs=je.constructor,Ws=(async()=>{const u=new URL("displace-9148439f.wasm",import.meta.url).href;return fetch(u)})();Xe(Ws,{...Ns,writeBack:!0});const{createOutput:ar,createPartialOutput:Xs,kernel:ge,Input:Ys,Output:nr,Parameters:ir}=Qs;function Zs(u,l,a,r,n={},S={}){if(Array.isArray(n)){const p=n;n={};for(const[c,h]of Object.keys(ge.inputImages).entries())n[h]=p[c]}const C=new Ys(void 0),k=Object.keys(ge.inputImages),o=[];let w;for(const p of k){let c=n[p];if(c||(k.length===1&&["data","width","height"].every(h=>!!n[h])?c=n:o.push(p)),C[p]=c,w){if(c.colorSpace!==w)throw new Error(`Input images must all use the same color space: ${w}`)}else w=c.colorSpace}if(o.length>0)throw new Error(`Missing input image${o.length>1?"s":""}: ${o.join(", ")}`);const he=Xs(u,l,a,r,C,S),Pe=p=>{const c=Object.keys(p),h={};for(const Ve of c){const{data:{typedArray:I},width:Ce,height:Ie}=p[Ve];let v;if(typeof ImageData=="function"){const ve=new Uint8ClampedArray(I.buffer,I.byteOffset,I.byteLength);v=new ImageData(ve,Ce,r,{colorSpace:w})}else v={data:I,width:Ce,height:Ie};if(c.length===1)return v;h[Ve]=v}return h};return he[Symbol.toStringTag]==="Promise"?he.then(Pe):Pe(he)}function er(){const u={};for(let[l,a]of Object.entries(ge)){if(l==="parameters"){const r={};for(const[n,S]of Object.entries(a)){const C=r[n]={};for(let[k,o]of Object.entries(S))typeof o=="object"?"string"in o?o=o.string:o=ke(o):typeof o=="function"&&(o=tr(o.name)),C[k]=o}a=r}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());u[l]=a}return u}function ke(u){const l=[];for(let[a,r]of Object.entries(u))typeof r=="object"&&(r=ke(r)),l[a]=r;return l}function tr(u){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[u]}onmessage=u=>{const[l,a,...r]=u.data;sr(l,r).then(([n,S])=>{postMessage([l,a,n],{transfer:S})}).catch(n=>{postMessage(["error",a,n])})};async function sr(u,l){switch(u){case"getKernelInfo":return[er(...l)];case"createPartialImageData":const r=await Zs(...l),n=[];if("data"in r&&"width"in r&&"height"in r)n.push(r.data.buffer);else for(const S of Object.entries(r))n.push(r.data.buffer);return[r,n];default:throw new Error(`Unknown function: ${u}`)}}
