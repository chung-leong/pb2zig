import{u as Ge,a as He,b as Je,c as Ne,d as Qe,e as We,f as Xe,g as Ye,h as Ze,i as ts,j as es,k as ss,l as rs,m as as,n as ns,o as is,p as os,q as cs}from"./index-031d01ca.js";Ge();ss();rs();He();Je();as();ns();is();Ne();Qe();We();Xe();cs();os();Ye();Ze();ts();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},f={},T={},$={},_={},L={},r={},u={},B={},G={},d={},H={},M={},J={},N={},p={},Q={},W={},at={},R={},X={},A={},c={},g={},V={},F={},nt={},w={},k={},Y={},q={},Z={},I={},v={},j={},it={},ot={},h={},ct={},ut={},mt={},It={},yt={},bt={},lt={},vt={},gt={},xt={},pt={},Et={},Ct={},ft={},Ot={},Kt={},St={},Dt={},zt={},Mt={},Ft={},jt={},ht={},Tt={},x={},$t={},_t={},dt={},wt={},Lt={},At={},Bt={},Gt={},Ht={},Jt={},Nt={},Qt={},Wt={},Xt={},Yt={},Zt={},te={},ee={},se={},re={},ae={},ne={},ie={},tt={},oe={},ce={},Ut={},ue={},Pt={},me={},ye={},be={},le={},ge={},pe={},fe={},Oe={},Se={},Vt={},ze={},je={},he={},de={},we={},Ae={},Ue={},Pe={},Ve={},Re={},ke={},qe={},Ie={},ve={},xe={},Ee={},Ce={},Ke={},De={},Me={},Fe={},Te={},us=new Uint8Array,ms=new Uint8Array,ys=new Uint8Array([1]),bs=new Uint8Array,ls=new Uint8Array([32]),gs=new Uint8Array,ps=new Uint8Array([8]),fs=new Uint8Array,Os=new Uint8Array,Ss=new Uint8Array([1]),zs=new Uint8Array,js=new Uint8Array([0,2]),hs=new Uint8Array,ds=new Uint8Array([56]),ws=new Uint8Array,As=new Uint8Array,Us=new Uint8Array,Ps=new Uint8Array([4]),Vs=new Uint8Array,Rs=new Uint8Array,ks=new Uint8Array,qs=new Uint8Array([244,4,0,1]),Is=new Uint8Array([99,111,109,46,103,114,101,121,98,111,120,119,97,114,101,46,97,115,99,105,105,109,105,105,0]),vs=new Uint8Array([24,5,0,1]),xs=new Uint8Array([82,105,99,104,97,114,100,32,90,117,114,97,100,0]),Es=new Uint8Array,Cs=new Uint8Array([1]),Ks=new Uint8Array([55,5,0,1]),Ds=new Uint8Array([70,105,108,116,101,114,32,116,111,32,109,105,109,105,99,32,116,104,101,32,84,69,88,84,112,32,101,102,102,101,99,116,32,102,114,111,109,32,89,111,117,84,117,98,101,39,115,32,50,48,49,48,32,65,112,114,105,108,32,70,111,111,108,115,32,106,111,107,101,0]),Ms=new Uint8Array,Fs=new Uint8Array,Ts=new Uint8Array,$s=new Uint8Array([0]),_s=new Uint8Array([1]),$e=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ls=new Uint8Array,Bs=new Uint8Array,Gs=new Uint8Array,Hs=new Uint8Array,Js=new Uint8Array([4]),E=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),_e=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ns=new Uint8Array,Qs=new Uint8Array,Ws=new Uint8Array,Xs=new Uint8Array,Ys=new Uint8Array([4]),Rt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Zs=new Uint8Array([8,0,0,0,56,0,0,0]),tr=new Uint8Array([27,0]),er=new Uint8Array([27,0]),sr=new Uint8Array,rr=new Uint8Array,ar=new Uint8Array,nr=new Uint8Array;Object.assign(It,{slots:{0:yt,1:lt,2:gt,3:pt}});Object.assign(yt,{structure:s,memory:{array:us},const:!0,slots:{0:bt}});Object.assign(bt,{structure:d});Object.assign(lt,{structure:r,memory:{array:ms},const:!0,slots:{0:vt}});Object.assign(vt,{structure:u,memory:{array:ys},const:!0});Object.assign(gt,{structure:r,memory:{array:bs},const:!0,slots:{0:xt}});Object.assign(xt,{structure:u,memory:{array:ls},const:!0});Object.assign(pt,{structure:r,memory:{array:gs},const:!0,slots:{0:Et}});Object.assign(Et,{structure:u,memory:{array:ps},const:!0});Object.assign(Ct,{slots:{0:ft,1:Ot,2:St,3:zt}});Object.assign(ft,{structure:s,memory:{array:fs},const:!0,slots:{0:bt}});Object.assign(Ot,{structure:r,memory:{array:Os},const:!0,slots:{0:Kt}});Object.assign(Kt,{structure:u,memory:{array:Ss},const:!0});Object.assign(St,{structure:r,memory:{array:zs},const:!0,slots:{0:Dt}});Object.assign(Dt,{structure:M,memory:{array:js},const:!0});Object.assign(zt,{structure:r,memory:{array:hs},const:!0,slots:{0:Mt}});Object.assign(Mt,{structure:u,memory:{array:ds},const:!0});Object.assign(Ft,{slots:{0:jt,1:ht}});Object.assign(jt,{structure:H,memory:{array:ws},const:!0,slots:{0:yt,1:lt,2:gt,3:pt}});Object.assign(ht,{structure:J,memory:{array:As},const:!0,slots:{0:ft,1:Ot,2:St,3:zt}});Object.assign(Tt,{slots:{0:x}});Object.assign(x,{structure:r,memory:{array:Us},const:!0,slots:{0:$t}});Object.assign($t,{structure:u,memory:{array:Ps},const:!0});Object.assign(_t,{slots:{0:dt,1:wt}});Object.assign(dt,{structure:p,memory:{array:Vs},const:!0,slots:{0:x}});Object.assign(wt,{structure:p,memory:{array:Rs},const:!0,slots:{0:x}});Object.assign(Lt,{slots:{0:At}});Object.assign(At,{structure:p,memory:{array:ks},const:!0,slots:{0:x}});Object.assign(Bt,{slots:{0:Gt,1:Jt,2:Qt,3:Xt,4:Zt,5:te,6:ee}});Object.assign(Gt,{structure:$,memory:{array:qs},const:!0,slots:{0:Ht}});Object.assign(Ht,{structure:T,memory:{array:Is},reloc:16778484});Object.assign(Jt,{structure:L,memory:{array:vs},const:!0,slots:{0:Nt}});Object.assign(Nt,{structure:_,memory:{array:xs},reloc:16778520});Object.assign(Qt,{structure:r,memory:{array:Es},const:!0,slots:{0:Wt}});Object.assign(Wt,{structure:u,memory:{array:Cs},const:!0});Object.assign(Xt,{structure:G,memory:{array:Ks},const:!0,slots:{0:Yt}});Object.assign(Yt,{structure:B,memory:{array:Ds},reloc:16778551});Object.assign(Zt,{structure:N,memory:{array:Ms},const:!0,slots:{0:jt,1:ht}});Object.assign(te,{structure:Q,memory:{array:Fs},const:!0,slots:{0:dt,1:wt}});Object.assign(ee,{structure:W,memory:{array:Ts},const:!0,slots:{0:At}});Object.assign(se,{slots:{0:re,1:ae}});Object.assign(re,{structure:g,memory:{array:$s},const:!0});Object.assign(ae,{structure:g,memory:{array:_s},const:!0});Object.assign(ne,{memory:{array:$e},slots:{0:ie}});Object.assign(ie,{structure:A,memory:{array:$e,offset:0,length:8},slots:{0:tt}});Object.assign(tt,{structure:X,memory:{array:Ls},reloc:0});Object.assign(oe,{slots:{0:ce,1:ue,2:me}});Object.assign(ce,{structure:s,memory:{array:Bs},const:!0,slots:{0:Ut}});Object.assign(Ut,{structure:R});Object.assign(ue,{structure:s,memory:{array:Gs},const:!0,slots:{0:Pt}});Object.assign(Pt,{structure:nt});Object.assign(me,{structure:r,memory:{array:Hs},const:!0,slots:{0:ye}});Object.assign(ye,{structure:u,memory:{array:Js},const:!0});Object.assign(be,{memory:{array:E},slots:{0:le,1:pe}});Object.assign(le,{structure:w,memory:{array:E,offset:0,length:24},slots:{0:ge}});Object.assign(ge,{structure:A,memory:{array:E,offset:0,length:8},slots:{0:tt}});Object.assign(pe,{structure:w,memory:{array:E,offset:24,length:24},slots:{0:fe}});Object.assign(fe,{structure:A,memory:{array:E,offset:24,length:8},slots:{0:tt}});Object.assign(Oe,{memory:{array:_e},slots:{0:Se}});Object.assign(Se,{structure:q,memory:{array:_e,offset:0,length:8},slots:{0:Vt}});Object.assign(Vt,{structure:Y,memory:{array:Ns},reloc:0});Object.assign(ze,{slots:{0:je,1:he,2:de}});Object.assign(je,{structure:s,memory:{array:Qs},const:!0,slots:{0:Ut}});Object.assign(he,{structure:s,memory:{array:Ws},const:!0,slots:{0:Pt}});Object.assign(de,{structure:r,memory:{array:Xs},const:!0,slots:{0:we}});Object.assign(we,{structure:u,memory:{array:Ys},const:!0});Object.assign(Ae,{memory:{array:Rt},slots:{0:Ue}});Object.assign(Ue,{structure:Z,memory:{array:Rt},slots:{0:Pe}});Object.assign(Pe,{structure:q,memory:{array:Rt,offset:0,length:8},slots:{0:Vt}});Object.assign(Ve,{memory:{array:Zs}});Object.assign(Re,{slots:{0:ke}});Object.assign(ke,{structure:j,memory:{array:tr},const:!0});Object.assign(qe,{slots:{0:Ie}});Object.assign(Ie,{structure:h,memory:{array:er},const:!0});Object.assign(ve,{slots:{0:xe,1:Ce,2:De,3:Fe}});Object.assign(xe,{structure:s,memory:{array:sr},const:!0,slots:{0:Ee}});Object.assign(Ee,{structure:at});Object.assign(Ce,{structure:s,memory:{array:rr},const:!0,slots:{0:Ke}});Object.assign(Ke,{structure:k});Object.assign(De,{structure:s,memory:{array:ar},const:!0,slots:{0:Me}});Object.assign(Me,{structure:I});Object.assign(Fe,{structure:s,memory:{array:nr},const:!0,slots:{0:Te}});Object.assign(Te,{structure:v});const ir={argStruct:ot,thunkId:2,name:"createOutput"},or={argStruct:ut,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(f,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(T,{...e,type:1,name:"[24:0]u8",length:24,byteSize:25,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign($,{...e,type:13,name:"*const [24:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[]}});Object.assign(_,{...e,type:1,name:"[13:0]u8",length:13,byteSize:14,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(L,{...e,type:13,name:"*const [13:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[]}});Object.assign(r,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(u,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:u}],methods:[]}});Object.assign(B,{...e,type:1,name:"[69:0]u8",length:69,byteSize:70,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(G,{...e,type:13,name:"*const [69:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:B}],methods:[]}});Object.assign(d,{...e,name:"i32",byteSize:4,align:4,instance:{members:[{...t,type:2,bitOffset:0,bitSize:32,byteSize:4,structure:d}],methods:[]}});Object.assign(H,{...e,type:2,name:"Struct1449345558",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:r},{...t,type:7,slot:2,name:"maxValue",structure:r},{...t,type:7,slot:3,name:"defaultValue",structure:r}],methods:[],template:It}});Object.assign(M,{...e,name:"i16",byteSize:2,align:2,instance:{members:[{...t,type:2,bitOffset:0,bitSize:16,byteSize:2,structure:M}],methods:[]}});Object.assign(J,{...e,type:2,name:"Struct3551455779",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:r},{...t,type:7,slot:2,name:"maxValue",structure:r},{...t,type:7,slot:3,name:"defaultValue",structure:r}],methods:[],template:Ct}});Object.assign(N,{...e,type:2,name:"Struct3770657015",align:1,instance:{members:[{...t,type:7,slot:0,name:"size",structure:H},{...t,type:7,slot:1,name:"charCount",structure:J}],methods:[],template:Ft}});Object.assign(p,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:r}],methods:[],template:Tt}});Object.assign(Q,{...e,type:2,name:"Struct1891826899",align:1,instance:{members:[{...t,type:7,slot:0,name:"src",structure:p},{...t,type:7,slot:1,name:"text",structure:p}],methods:[],template:_t}});Object.assign(W,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:p}],methods:[],template:Lt}});Object.assign(at,{...e,type:2,name:"asciimii.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:$},{...t,type:7,slot:1,name:"vendor",structure:L},{...t,type:7,slot:2,name:"version",structure:r},{...t,type:7,slot:3,name:"description",structure:G},{...t,type:7,slot:4,name:"parameters",structure:N},{...t,type:7,slot:5,name:"inputImages",structure:Q},{...t,type:7,slot:6,name:"outputImages",structure:W}],methods:[],template:Bt}});Object.assign(R,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(X,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(A,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:X}],methods:[]}});Object.assign(c,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[]}});Object.assign(g,{...e,type:11,name:"asciimii.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:g}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:g},{...t,type:7,slot:1,name:"display-p3",structure:g}],methods:[],template:se}});Object.assign(V,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(F,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:F}],methods:[]}});Object.assign(nt,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:F}],methods:[]}});Object.assign(w,{...e,type:2,name:"asciimii.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:A},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:g},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:ne},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:r}],methods:[],template:oe}});Object.assign(k,{...e,type:2,name:"asciimii.KernelInput(u8,asciimii.kernel)",byteSize:48,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:w},{...t,type:5,bitOffset:192,bitSize:192,byteSize:24,slot:1,name:"text",structure:w}],methods:[],template:be}});Object.assign(Y,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(q,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:Y}],methods:[]}});Object.assign(Z,{...e,type:2,name:"asciimii.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:q},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:g},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:Oe},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:r}],methods:[],template:ze}});Object.assign(I,{...e,type:2,name:"asciimii.KernelOutput(u8,asciimii.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:Z}],methods:[],template:Ae}});Object.assign(v,{...e,type:2,name:"asciimii.KernelParameters(asciimii.kernel)",byteSize:8,align:4,instance:{members:[{...t,type:2,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"size",structure:d},{...t,type:2,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"charCount",structure:d}],methods:[],template:Ve}});Object.assign(j,{...e,type:10,name:"ErrorSet2017218537",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:j}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:j}],methods:[],template:Re}});Object.assign(it,{...e,type:9,name:"ErrorSet2017218537!asciimii.KernelOutput(u8,asciimii.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:I},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:j}],methods:[]}});Object.assign(ot,{...e,type:5,name:"createOutput",byteSize:92,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:c},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:c},{...t,type:5,isRequired:!0,bitOffset:64,bitSize:384,byteSize:48,slot:0,name:"2",structure:k},{...t,type:5,isRequired:!0,bitOffset:448,bitSize:64,byteSize:8,slot:1,name:"3",structure:v},{...t,type:5,isRequired:!0,bitOffset:512,bitSize:224,byteSize:28,slot:2,name:"retval",structure:it}],methods:[]}});Object.assign(h,{...e,type:10,name:"ErrorSet3250127848",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:h}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:h}],methods:[],template:qe}});Object.assign(ct,{...e,type:9,name:"ErrorSet3250127848!asciimii.KernelOutput(u8,asciimii.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:I},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:h}],methods:[]}});Object.assign(ut,{...e,type:5,name:"createPartialOutput",byteSize:100,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:c},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:c},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:c},{...t,type:5,isRequired:!0,bitOffset:128,bitSize:384,byteSize:48,slot:0,name:"4",structure:k},{...t,type:5,isRequired:!0,bitOffset:512,bitSize:64,byteSize:8,slot:1,name:"5",structure:v},{...t,type:5,isRequired:!0,bitOffset:576,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ct}],methods:[]}});Object.assign(mt,{...e,type:2,name:"asciimii",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:s},{...t,type:7,slot:1,name:"Input",structure:s},{...t,type:7,slot:2,name:"Output",structure:s},{...t,type:7,slot:3,name:"Parameters",structure:s}],methods:[ir,or],template:ve}});const cr=[s,f,T,$,_,L,r,u,B,G,d,H,M,J,N,p,Q,W,at,R,X,A,c,g,V,F,nt,w,k,Y,q,Z,I,v,j,it,ot,h,ct,ut,mt],ur=mt,mr={runtimeSafety:!1,littleEndian:!0},et=es();et.getSpecialExports();et.recreateStructures(cr,mr);const yr=(async()=>{const i=new URL("asciimii-0009bad9.wasm",import.meta.url).href;return fetch(i)})();et.loadModule(yr);et.linkVariables(!0);const{constructor:br}=ur,{createPartialOutput:lr,Input:gr,kernel:rt}=br;function pr(i,m,o,n,a={},O={}){const S=[];for(const[b]of rt.inputImages)S.push(b);const U=[];for(const[b]of rt.outputImages)U.push(b);if(Array.isArray(a)){const b=a;a={};for(const[l,z]of S.entries())a[z]=b[l]}const y=new gr(void 0),C=[];let P;for(const b of S){let l=a[b];if(l||(S.length===1&&["data","width","height"].every(z=>!!a[z])?l=a:C.push(b)),y[b]=l,P){if(l.colorSpace!==P)throw new Error(`Input images must all use the same color space: ${P}`)}else P=l.colorSpace}if(C.length>0)throw new Error(`Missing input image${C.length>1?"s":""}: ${C.join(", ")}`);const st=lr(i,m,o,n,y,O),kt=b=>{const l={};for(const z of U){const{data:{typedArray:K},width:qt,height:Le}=b[z];let D;if(typeof ImageData=="function"){const Be=new Uint8ClampedArray(K.buffer,K.byteOffset,K.byteLength);D=new ImageData(Be,qt,n,{colorSpace:P})}else D={data:K,width:qt,height:Le};if(U.length===1)return D;l[z]=D}return l};return st[Symbol.toStringTag]==="Promise"?st.then(kt):kt(st)}function fr(){const i={};for(let[m,o]of rt){if(m==="parameters"){const n={};for(const[a,O]of o){const S=n[a]={};for(let[U,y]of O)typeof y=="object"?y=y.string??y.valueOf():typeof y=="function"&&(y=Or(y.name)),S[U]=y}o=n}else typeof o=="object"&&(o=o.string??o.valueOf());i[m]=o}return i}function Or(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[m,o,...n]=i.data;Sr(m,n).then(([a,O])=>{postMessage([m,o,a],{transfer:O})}).catch(a=>{postMessage(["error",o,a])})};async function Sr(i,m){switch(i){case"getKernelInfo":return[fr(...m)];case"createPartialImageData":const n=await pr(...m),a=[];if("data"in n&&"width"in n&&"height"in n)a.push(n.data.buffer);else for(const O of Object.entries(n))a.push(n.data.buffer);return[n,a];default:throw new Error(`Unknown function: ${i}`)}}
