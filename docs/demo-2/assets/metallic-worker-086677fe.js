import{u as dt,a as ht,b as gt,d as zt,c as St,e as Vt,f as Ot,g as wt,h as _t,i as Rt,j as qt,k as At,l as Ut,n as jt,p as Pt,m as xt,o as Ct,q as It,r as kt}from"./index-cfb20c86.js";dt();ht();gt();zt();St();Vt();Ot();wt();_t();Rt();qt();At();Ut();jt();Pt();xt();Ct();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},p={},ye={},pe={},T={},fe={},be={},M={},n={},V={},de={},he={},$={},d={},h={},_={},r={},s={},ge={},B={},ze={},Se={},L={},Ve={},G={},b={},Oe={},we={},H={},_e={},J={},Re={},qe={},N={},Ae={},Q={},Ue={},je={},W={},Pe={},X={},xe={},Ce={},Y={},Ie={},Z={},ke={},ee={},ve={},De={},te={},Ee={},se={},Ke={},re={},Fe={},ae={},Te={},ie={},Me={},me={},$e={},oe={},q={},z={},Be={},ne={},Le={},ce={},Ze={},A={},j={},P={},y={},Ge={},x={},C={},He={},R={},I={},Je={},Ne={},ue={},k={},v={},et={},tt={},st={},rt={},at={},it={},mt={};Object.assign(p,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:5});Object.assign(ye,{...t,type:1,name:"[8:0]u8",length:8,byteSize:9,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:4});Object.assign(pe,{...t,type:11,name:"*const [8:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:3});Object.assign(T,{...t,type:11,name:"**const [8:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:2});Object.assign(fe,{...t,type:1,name:"[14:0]u8",length:14,byteSize:15,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:8});Object.assign(be,{...t,type:11,name:"*const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:7});Object.assign(M,{...t,type:11,name:"**const [14:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:6});Object.assign(n,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:n}],methods:[],template:null},slot:10});Object.assign(V,{...t,type:11,name:"*i32",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:n}],methods:[],template:null},slot:9});Object.assign(de,{...t,type:1,name:"[16:0]u8",length:16,byteSize:17,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:13});Object.assign(he,{...t,type:11,name:"*const [16:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:de}],methods:[],template:null},slot:12});Object.assign($,{...t,type:11,name:"**const [16:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:he}],methods:[],template:null},slot:11});Object.assign(d,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:d}],methods:[],template:null},slot:34});Object.assign(h,{...t,type:13,name:"@Vector(3, f32)",length:3,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:d}],methods:[],template:null},slot:33});Object.assign(_,{...t,type:11,name:"*const @Vector(3, f32)",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:h}],methods:[],template:null},slot:57});Object.assign(r,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[],template:null},slot:68});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:r}],methods:[],template:null},slot:67});const vt=new Uint8Array([]),Dt=new Uint8Array([88,30,16,0]),ut=new Uint8Array([0,0,0,0,0,0,105,64]),Et=new Uint8Array([104,30,16,0]),Kt=new Uint8Array([0,0,0,0,0,0,78,64]),Ft=new Uint8Array([96,30,16,0]),Tt=new Uint8Array([0,0,0,0,0,0,68,64]);Object.assign(ge,{...t,type:2,name:"struct{comptime comptime_float = 200, comptime comptime_float = 60, comptime comptime_float = 40}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:vt},slots:{0:{structure:s,memory:{array:Dt},slots:{0:{structure:r,memory:{array:ut},address:1056344}}},1:{structure:s,memory:{array:Et},slots:{0:{structure:r,memory:{array:Kt},address:1056360}}},2:{structure:s,memory:{array:Ft},slots:{0:{structure:r,memory:{array:Tt},address:1056352}}}}}},slot:59});Object.assign(B,{...t,type:11,name:"*const struct{comptime comptime_float = 200, comptime comptime_float = 60, comptime comptime_float = 40}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ge}],methods:[],template:null},slot:58});Object.assign(ze,{...t,type:1,name:"[32:0]u8",length:32,byteSize:33,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:62});Object.assign(Se,{...t,type:11,name:"*const [32:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ze}],methods:[],template:null},slot:61});Object.assign(L,{...t,type:11,name:"*const *const [32:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Se}],methods:[],template:null},slot:60});const Mt=new Uint8Array([]),$t=new Uint8Array([192,30,16,0]),Bt=new Uint8Array([0,0,122,196,0,0,122,196,0,0,122,196,0,0,0,0]),Lt=new Uint8Array([176,30,16,0]),Gt=new Uint8Array([0,0,122,68,0,0,122,68,0,0,122,68,0,0,0,0]),Ht=new Uint8Array([170,170,170,170]),i=new Uint8Array([]),Jt=new Uint8Array([168,30,16,0]),Nt=new Uint8Array([36,31,16,0]),Qt=new Uint8Array([120,121,122,45,108,111,99,97,116,105,111,110,32,111,102,32,116,104,101,32,108,105,103,104,116,32,115,111,117,114,99,101,0]);Object.assign(Ve,{...t,type:2,name:'struct{comptime type: type = @Vector(3, f32), comptime minValue: @Vector(3, f32) = .{ -1000, -1000, -1000 }, comptime maxValue: @Vector(3, f32) = .{ 1000, 1000, 1000 }, comptime defaultValue: struct{comptime comptime_float = 200, comptime comptime_float = 60, comptime comptime_float = 40} = .{200, 60, 40}, comptime description: *const [32:0]u8 = "xyz-location of the light source"}',length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:h},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:_},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:_},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:B},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:L}],methods:[],template:{memory:{array:Mt},slots:{0:{structure:_,memory:{array:$t},slots:{0:{structure:h,memory:{array:Bt},address:1056448}}},1:{structure:_,memory:{array:Lt},slots:{0:{structure:h,memory:{array:Gt},address:1056432}}},2:{structure:B,memory:{array:Ht},slots:{0:{structure:ge,memory:{array:i},address:-1431655766}}},3:{structure:L,memory:{array:Jt},slots:{0:{structure:Se,memory:{array:Nt},address:1056424,slots:{0:{structure:ze,memory:{array:Qt},address:1056548}}}}}}}},slot:41});Object.assign(G,{...t,type:11,name:'*const struct{comptime type: type = @Vector(3, f32), comptime minValue: @Vector(3, f32) = .{ -1000, -1000, -1000 }, comptime maxValue: @Vector(3, f32) = .{ 1000, 1000, 1000 }, comptime defaultValue: struct{comptime comptime_float = 200, comptime comptime_float = 60, comptime comptime_float = 40} = .{200, 60, 40}, comptime description: *const [32:0]u8 = "xyz-location of the light source"}',length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ve}],methods:[],template:null},slot:40});Object.assign(b,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:n}],methods:[],template:null},slot:63});Object.assign(Oe,{...t,type:1,name:"[9:0]u8",length:9,byteSize:10,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:66});Object.assign(we,{...t,type:11,name:"*const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Oe}],methods:[],template:null},slot:65});Object.assign(H,{...t,type:11,name:"*const *const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:we}],methods:[],template:null},slot:64});const Wt=new Uint8Array([]),Xt=new Uint8Array([164,30,16,0]),Yt=new Uint8Array([2,0,0,0]),Zt=new Uint8Array([160,30,16,0]),es=new Uint8Array([64,0,0,0]),ts=new Uint8Array([156,30,16,0]),ss=new Uint8Array([40,0,0,0]),rs=new Uint8Array([152,30,16,0]),as=new Uint8Array([26,31,16,0]),is=new Uint8Array([115,104,105,110,105,110,101,115,115,0]);Object.assign(_e,{...t,type:2,name:'struct{comptime type: type = i32, comptime minValue: comptime_int = 2, comptime maxValue: comptime_int = 64, comptime defaultValue: comptime_int = 40, comptime description: *const [9:0]u8 = "shininess"}',length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:n},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:b},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:b},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:b},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:H}],methods:[],template:{memory:{array:Wt},slots:{0:{structure:b,memory:{array:Xt},slots:{0:{structure:n,memory:{array:Yt},address:1056420}}},1:{structure:b,memory:{array:Zt},slots:{0:{structure:n,memory:{array:es},address:1056416}}},2:{structure:b,memory:{array:ts},slots:{0:{structure:n,memory:{array:ss},address:1056412}}},3:{structure:H,memory:{array:rs},slots:{0:{structure:we,memory:{array:as},address:1056408,slots:{0:{structure:Oe,memory:{array:is},address:1056538}}}}}}}},slot:43});Object.assign(J,{...t,type:11,name:'*const struct{comptime type: type = i32, comptime minValue: comptime_int = 2, comptime maxValue: comptime_int = 64, comptime defaultValue: comptime_int = 40, comptime description: *const [9:0]u8 = "shininess"}',length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:_e}],methods:[],template:null},slot:42});Object.assign(Re,{...t,type:1,name:"[21:0]u8",length:21,byteSize:22,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:71});Object.assign(qe,{...t,type:11,name:"*const [21:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Re}],methods:[],template:null},slot:70});Object.assign(N,{...t,type:11,name:"*const *const [21:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:qe}],methods:[],template:null},slot:69});const ms=new Uint8Array([]),os=new Uint8Array([56,30,16,0]),Xe=new Uint8Array([0,0,0,0,0,0,0,0]),ns=new Uint8Array([48,30,16,0]),S=new Uint8Array([0,0,0,0,0,0,240,63]),cs=new Uint8Array([144,30,16,0]),us=new Uint8Array([154,153,153,153,153,153,217,63]),ls=new Uint8Array([136,30,16,0]),ys=new Uint8Array([4,31,16,0]),ps=new Uint8Array([100,101,112,116,104,32,111,102,32,115,104,97,100,111,119,32,97,114,101,97,115,0]);Object.assign(Ae,{...t,type:2,name:'struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0.4, comptime description: *const [21:0]u8 = "depth of shadow areas"}',length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:d},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:N}],methods:[],template:{memory:{array:ms},slots:{0:{structure:s,memory:{array:os},slots:{0:{structure:r,memory:{array:Xe},address:1056312}}},1:{structure:s,memory:{array:ns},slots:{0:{structure:r,memory:{array:S},address:1056304}}},2:{structure:s,memory:{array:cs},slots:{0:{structure:r,memory:{array:us},address:1056400}}},3:{structure:N,memory:{array:ls},slots:{0:{structure:qe,memory:{array:ys},address:1056392,slots:{0:{structure:Re,memory:{array:ps},address:1056516}}}}}}}},slot:45});Object.assign(Q,{...t,type:11,name:'*const struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0.4, comptime description: *const [21:0]u8 = "depth of shadow areas"}',length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ae}],methods:[],template:null},slot:44});Object.assign(Ue,{...t,type:1,name:"[23:0]u8",length:23,byteSize:24,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:74});Object.assign(je,{...t,type:11,name:"*const [23:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ue}],methods:[],template:null},slot:73});Object.assign(W,{...t,type:11,name:"*const *const [23:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:je}],methods:[],template:null},slot:72});const fs=new Uint8Array([]),bs=new Uint8Array([48,30,16,0]),ds=new Uint8Array([72,30,16,0]),lt=new Uint8Array([0,0,0,0,0,0,36,64]),hs=new Uint8Array([128,30,16,0]),gs=new Uint8Array([0,0,0,0,0,0,0,64]),zs=new Uint8Array([120,30,16,0]),Ss=new Uint8Array([236,30,16,0]),Vs=new Uint8Array([116,104,101,32,104,101,105,103,104,116,32,111,102,32,51,68,32,101,102,102,101,99,116,0]);Object.assign(Pe,{...t,type:2,name:'struct{comptime type: type = f32, comptime minValue: comptime_float = 1, comptime maxValue: comptime_float = 10, comptime defaultValue: comptime_float = 2, comptime description: *const [23:0]u8 = "the height of 3D effect"}',length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:d},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:W}],methods:[],template:{memory:{array:fs},slots:{0:{structure:s,memory:{array:bs},slots:{0:{structure:r,memory:{array:S},address:1056304}}},1:{structure:s,memory:{array:ds},slots:{0:{structure:r,memory:{array:lt},address:1056328}}},2:{structure:s,memory:{array:hs},slots:{0:{structure:r,memory:{array:gs},address:1056384}}},3:{structure:W,memory:{array:zs},slots:{0:{structure:je,memory:{array:Ss},address:1056376,slots:{0:{structure:Ue,memory:{array:Vs},address:1056492}}}}}}}},slot:47});Object.assign(X,{...t,type:11,name:'*const struct{comptime type: type = f32, comptime minValue: comptime_float = 1, comptime maxValue: comptime_float = 10, comptime defaultValue: comptime_float = 2, comptime description: *const [23:0]u8 = "the height of 3D effect"}',length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Pe}],methods:[],template:null},slot:46});Object.assign(xe,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:d}],methods:[],template:null},slot:35});const Os=new Uint8Array([]),ws=new Uint8Array([48,30,16,0]),_s=new Uint8Array([48,30,16,0]);Object.assign(Ce,{...t,type:2,name:"struct{comptime comptime_float = 1, comptime comptime_float = 1}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Os},slots:{0:{structure:s,memory:{array:ws},slots:{0:{structure:r,memory:{array:S},address:1056304}}},1:{structure:s,memory:{array:_s},slots:{0:{structure:r,memory:{array:S},address:1056304}}}}}},slot:76});Object.assign(Y,{...t,type:11,name:"*const struct{comptime comptime_float = 1, comptime comptime_float = 1}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ce}],methods:[],template:null},slot:75});const Rs=new Uint8Array([]),qs=new Uint8Array([80,30,16,0]),yt=new Uint8Array([0,0,0,0,0,0,112,64]),As=new Uint8Array([88,30,16,0]);Object.assign(Ie,{...t,type:2,name:"struct{comptime comptime_float = 256, comptime comptime_float = 200}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Rs},slots:{0:{structure:s,memory:{array:qs},slots:{0:{structure:r,memory:{array:yt},address:1056336}}},1:{structure:s,memory:{array:As},slots:{0:{structure:r,memory:{array:ut},address:1056344}}}}}},slot:78});Object.assign(Z,{...t,type:11,name:"*const struct{comptime comptime_float = 256, comptime comptime_float = 200}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ie}],methods:[],template:null},slot:77});const Us=new Uint8Array([]),js=new Uint8Array([80,30,16,0]),Ps=new Uint8Array([72,30,16,0]);Object.assign(ke,{...t,type:2,name:"struct{comptime comptime_float = 256, comptime comptime_float = 10}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Us},slots:{0:{structure:s,memory:{array:js},slots:{0:{structure:r,memory:{array:yt},address:1056336}}},1:{structure:s,memory:{array:Ps},slots:{0:{structure:r,memory:{array:lt},address:1056328}}}}}},slot:80});Object.assign(ee,{...t,type:11,name:"*const struct{comptime comptime_float = 256, comptime comptime_float = 10}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ke}],methods:[],template:null},slot:79});Object.assign(ve,{...t,type:1,name:"[27:0]u8",length:27,byteSize:28,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:83});Object.assign(De,{...t,type:11,name:"*const [27:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ve}],methods:[],template:null},slot:82});Object.assign(te,{...t,type:11,name:"*const *const [27:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:De}],methods:[],template:null},slot:81});const xs=new Uint8Array([]),Cs=new Uint8Array([170,170,170,170]),Is=new Uint8Array([170,170,170,170]),ks=new Uint8Array([170,170,170,170]),vs=new Uint8Array([116,30,16,0]),Ds=new Uint8Array([208,30,16,0]),Es=new Uint8Array([116,104,101,32,115,105,122,101,32,102,111,114,32,105,110,112,117,116,32,39,115,116,114,105,112,101,39,0]);Object.assign(Ee,{...t,type:2,name:`struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1}, comptime maxValue: struct{comptime comptime_float = 256, comptime comptime_float = 200} = .{256, 200}, comptime defaultValue: struct{comptime comptime_float = 256, comptime comptime_float = 10} = .{256, 10}, comptime description: *const [27:0]u8 = "the size for input 'stripe'"}`,length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:xe},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:Y},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:Z},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:ee},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:te}],methods:[],template:{memory:{array:xs},slots:{0:{structure:Y,memory:{array:Cs},slots:{0:{structure:Ce,memory:{array:i},address:-1431655766}}},1:{structure:Z,memory:{array:Is},slots:{0:{structure:Ie,memory:{array:i},address:-1431655766}}},2:{structure:ee,memory:{array:ks},slots:{0:{structure:ke,memory:{array:i},address:-1431655766}}},3:{structure:te,memory:{array:vs},slots:{0:{structure:De,memory:{array:Ds},address:1056372,slots:{0:{structure:ve,memory:{array:Es},address:1056464}}}}}}}},slot:49});Object.assign(se,{...t,type:11,name:`*const struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1}, comptime maxValue: struct{comptime comptime_float = 256, comptime comptime_float = 200} = .{256, 200}, comptime defaultValue: struct{comptime comptime_float = 256, comptime comptime_float = 10} = .{256, 10}, comptime description: *const [27:0]u8 = "the size for input 'stripe'"}`,length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ee}],methods:[],template:null},slot:48});const Ks=new Uint8Array([]),Fs=new Uint8Array([64,30,16,0]),We=new Uint8Array([0,0,0,0,0,0,240,191]),Ts=new Uint8Array([64,30,16,0]),Ms=new Uint8Array([64,30,16,0]);Object.assign(Ke,{...t,type:2,name:"struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:Ks},slots:{0:{structure:s,memory:{array:Fs},slots:{0:{structure:r,memory:{array:We},address:1056320}}},1:{structure:s,memory:{array:Ts},slots:{0:{structure:r,memory:{array:We},address:1056320}}},2:{structure:s,memory:{array:Ms},slots:{0:{structure:r,memory:{array:We},address:1056320}}}}}},slot:85});Object.assign(re,{...t,type:11,name:"*const struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ke}],methods:[],template:null},slot:84});const $s=new Uint8Array([]),Bs=new Uint8Array([48,30,16,0]),Ls=new Uint8Array([48,30,16,0]),Gs=new Uint8Array([48,30,16,0]);Object.assign(Fe,{...t,type:2,name:"struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:$s},slots:{0:{structure:s,memory:{array:Bs},slots:{0:{structure:r,memory:{array:S},address:1056304}}},1:{structure:s,memory:{array:Ls},slots:{0:{structure:r,memory:{array:S},address:1056304}}},2:{structure:s,memory:{array:Gs},slots:{0:{structure:r,memory:{array:S},address:1056304}}}}}},slot:87});Object.assign(ae,{...t,type:11,name:"*const struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Fe}],methods:[],template:null},slot:86});const Hs=new Uint8Array([]),Js=new Uint8Array([56,30,16,0]),Ns=new Uint8Array([56,30,16,0]),Qs=new Uint8Array([48,30,16,0]);Object.assign(Te,{...t,type:2,name:"struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:Hs},slots:{0:{structure:s,memory:{array:Js},slots:{0:{structure:r,memory:{array:Xe},address:1056312}}},1:{structure:s,memory:{array:Ns},slots:{0:{structure:r,memory:{array:Xe},address:1056312}}},2:{structure:s,memory:{array:Qs},slots:{0:{structure:r,memory:{array:S},address:1056304}}}}}},slot:89});Object.assign(ie,{...t,type:11,name:"*const struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Te}],methods:[],template:null},slot:88});const Ws=new Uint8Array([]),Xs=new Uint8Array([170,170,170,170]),Ys=new Uint8Array([170,170,170,170]),Zs=new Uint8Array([170,170,170,170]);Object.assign(Me,{...t,type:2,name:"struct{comptime type: type = @Vector(3, f32), comptime minValue: struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1} = .{-1, -1, -1}, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1} = .{0, 0, 1}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:h},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:re},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:ae},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:ie}],methods:[],template:{memory:{array:Ws},slots:{0:{structure:re,memory:{array:Xs},slots:{0:{structure:Ke,memory:{array:i},address:-1431655766}}},1:{structure:ae,memory:{array:Ys},slots:{0:{structure:Fe,memory:{array:i},address:-1431655766}}},2:{structure:ie,memory:{array:Zs},slots:{0:{structure:Te,memory:{array:i},address:-1431655766}}}}}},slot:51});Object.assign(me,{...t,type:11,name:"*const struct{comptime type: type = @Vector(3, f32), comptime minValue: struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1} = .{-1, -1, -1}, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1} = .{0, 0, 1}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Me}],methods:[],template:null},slot:50});const er=new Uint8Array([]),tr=new Uint8Array([170,170,170,170]),sr=new Uint8Array([170,170,170,170]),rr=new Uint8Array([170,170,170,170]),ar=new Uint8Array([170,170,170,170]),ir=new Uint8Array([170,170,170,170]),mr=new Uint8Array([170,170,170,170]);Object.assign($e,{...t,type:2,name:`struct{comptime lightsource: struct{comptime type: type = @Vector(3, f32), comptime minValue: @Vector(3, f32) = .{ -1000, -1000, -1000 }, comptime maxValue: @Vector(3, f32) = .{ 1000, 1000, 1000 }, comptime defaultValue: struct{comptime comptime_float = 200, comptime comptime_float = 60, comptime comptime_float = 40} = .{200, 60, 40}, comptime description: *const [32:0]u8 = "xyz-location of the light source"} = .{.type = @Vector(3, f32), .minValue = .{ -1000, -1000, -1000 }, .maxValue = .{ 1000, 1000, 1000 }, .defaultValue = .{200, 60, 40}, .description = "xyz-location of the light source"}, comptime shininess: struct{comptime type: type = i32, comptime minValue: comptime_int = 2, comptime maxValue: comptime_int = 64, comptime defaultValue: comptime_int = 40, comptime description: *const [9:0]u8 = "shininess"} = .{.type = i32, .minValue = 2, .maxValue = 64, .defaultValue = 40, .description = "shininess"}, comptime shadow: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0.4, comptime description: *const [21:0]u8 = "depth of shadow areas"} = .{.type = f32, .minValue = 0, .maxValue = 1, .defaultValue = 0.4, .description = "depth of shadow areas"}, comptime relief: struct{comptime type: type = f32, comptime minValue: comptime_float = 1, comptime maxValue: comptime_float = 10, comptime defaultValue: comptime_float = 2, comptime description: *const [23:0]u8 = "the height of 3D effect"} = .{.type = f32, .minValue = 1, .maxValue = 10, .defaultValue = 2, .description = "the height of 3D effect"}, comptime stripesize: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1}, comptime maxValue: struct{comptime comptime_float = 256, comptime comptime_float = 200} = .{256, 200}, comptime defaultValue: struct{comptime comptime_float = 256, comptime comptime_float = 10} = .{256, 10}, comptime description: *const [27:0]u8 = "the size for input 'stripe'"} = .{.type = @Vector(2, f32), .minValue = .{1, 1}, .maxValue = .{256, 200}, .defaultValue = .{256, 10}, .description = "the size for input 'stripe'"}, comptime viewDirection: struct{comptime type: type = @Vector(3, f32), comptime minValue: struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1} = .{-1, -1, -1}, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1} = .{0, 0, 1}} = .{.type = @Vector(3, f32), .minValue = .{-1, -1, -1}, .maxValue = .{1, 1, 1}, .defaultValue = .{0, 0, 1}}}`,length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"lightsource",structure:G},{...e,type:8,isRequired:!1,slot:1,name:"shininess",structure:J},{...e,type:8,isRequired:!1,slot:2,name:"shadow",structure:Q},{...e,type:8,isRequired:!1,slot:3,name:"relief",structure:X},{...e,type:8,isRequired:!1,slot:4,name:"stripesize",structure:se},{...e,type:8,isRequired:!1,slot:5,name:"viewDirection",structure:me}],methods:[],template:{memory:{array:er},slots:{0:{structure:G,memory:{array:tr},slots:{0:{structure:Ve,memory:{array:i},address:-1431655766}}},1:{structure:J,memory:{array:sr},slots:{0:{structure:_e,memory:{array:i},address:-1431655766}}},2:{structure:Q,memory:{array:rr},slots:{0:{structure:Ae,memory:{array:i},address:-1431655766}}},3:{structure:X,memory:{array:ar},slots:{0:{structure:Pe,memory:{array:i},address:-1431655766}}},4:{structure:se,memory:{array:ir},slots:{0:{structure:Ee,memory:{array:i},address:-1431655766}}},5:{structure:me,memory:{array:mr},slots:{0:{structure:Me,memory:{array:i},address:-1431655766}}}}}},slot:15});Object.assign(oe,{...t,type:11,name:`*struct{comptime lightsource: struct{comptime type: type = @Vector(3, f32), comptime minValue: @Vector(3, f32) = .{ -1000, -1000, -1000 }, comptime maxValue: @Vector(3, f32) = .{ 1000, 1000, 1000 }, comptime defaultValue: struct{comptime comptime_float = 200, comptime comptime_float = 60, comptime comptime_float = 40} = .{200, 60, 40}, comptime description: *const [32:0]u8 = "xyz-location of the light source"} = .{.type = @Vector(3, f32), .minValue = .{ -1000, -1000, -1000 }, .maxValue = .{ 1000, 1000, 1000 }, .defaultValue = .{200, 60, 40}, .description = "xyz-location of the light source"}, comptime shininess: struct{comptime type: type = i32, comptime minValue: comptime_int = 2, comptime maxValue: comptime_int = 64, comptime defaultValue: comptime_int = 40, comptime description: *const [9:0]u8 = "shininess"} = .{.type = i32, .minValue = 2, .maxValue = 64, .defaultValue = 40, .description = "shininess"}, comptime shadow: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0.4, comptime description: *const [21:0]u8 = "depth of shadow areas"} = .{.type = f32, .minValue = 0, .maxValue = 1, .defaultValue = 0.4, .description = "depth of shadow areas"}, comptime relief: struct{comptime type: type = f32, comptime minValue: comptime_float = 1, comptime maxValue: comptime_float = 10, comptime defaultValue: comptime_float = 2, comptime description: *const [23:0]u8 = "the height of 3D effect"} = .{.type = f32, .minValue = 1, .maxValue = 10, .defaultValue = 2, .description = "the height of 3D effect"}, comptime stripesize: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1}, comptime maxValue: struct{comptime comptime_float = 256, comptime comptime_float = 200} = .{256, 200}, comptime defaultValue: struct{comptime comptime_float = 256, comptime comptime_float = 10} = .{256, 10}, comptime description: *const [27:0]u8 = "the size for input 'stripe'"} = .{.type = @Vector(2, f32), .minValue = .{1, 1}, .maxValue = .{256, 200}, .defaultValue = .{256, 10}, .description = "the size for input 'stripe'"}, comptime viewDirection: struct{comptime type: type = @Vector(3, f32), comptime minValue: struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1} = .{-1, -1, -1}, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1} = .{0, 0, 1}} = .{.type = @Vector(3, f32), .minValue = .{-1, -1, -1}, .maxValue = .{1, 1, 1}, .defaultValue = .{0, 0, 1}}}`,length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:$e}],methods:[],template:null},slot:14});const or=new Uint8Array([]),nr=new Uint8Array([112,30,16,0]),cr=new Uint8Array([4,0,0,0]);Object.assign(q,{...t,type:2,name:"struct{comptime channels: comptime_int = 4}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:b}],methods:[],template:{memory:{array:or},slots:{0:{structure:b,memory:{array:nr},slots:{0:{structure:n,memory:{array:cr},address:1056368}}}}}},slot:53});Object.assign(z,{...t,type:11,name:"*const struct{comptime channels: comptime_int = 4}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:q}],methods:[],template:null},slot:52});const ur=new Uint8Array([]),lr=new Uint8Array([170,170,170,170]),yr=new Uint8Array([170,170,170,170]);Object.assign(Be,{...t,type:2,name:"struct{comptime source: struct{comptime channels: comptime_int = 4} = .{.channels = 4}, comptime stripe: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"source",structure:z},{...e,type:8,isRequired:!1,slot:1,name:"stripe",structure:z}],methods:[],template:{memory:{array:ur},slots:{0:{structure:z,memory:{array:lr},slots:{0:{structure:q,memory:{array:i},address:-1431655766}}},1:{structure:z,memory:{array:yr},slots:{0:{structure:q,memory:{array:i},address:-1431655766}}}}}},slot:17});Object.assign(ne,{...t,type:11,name:"*struct{comptime source: struct{comptime channels: comptime_int = 4} = .{.channels = 4}, comptime stripe: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Be}],methods:[],template:null},slot:16});const pr=new Uint8Array([]),fr=new Uint8Array([170,170,170,170]);Object.assign(Le,{...t,type:2,name:"struct{comptime dst: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:z}],methods:[],template:{memory:{array:pr},slots:{0:{structure:z,memory:{array:fr},slots:{0:{structure:q,memory:{array:i},address:-1431655766}}}}}},slot:19});Object.assign(ce,{...t,type:11,name:"*struct{comptime dst: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Le}],methods:[],template:null},slot:18});const br=new Uint8Array([]),dr=new Uint8Array([]),hr=new Uint8Array([12,251,15,0]),gr=new Uint8Array([170,82,16,0]),zr=new Uint8Array([77,101,116,97,108,108,105,99,0]),Sr=new Uint8Array([76,251,15,0]),Vr=new Uint8Array([155,82,16,0]),Or=new Uint8Array([80,101,116,114,105,32,76,101,115,107,105,110,101,110,0]),wr=new Uint8Array([140,251,15,0]),_r=new Uint8Array([1,0,0,0]),Rr=new Uint8Array([228,251,15,0]),qr=new Uint8Array([138,82,16,0]),Ar=new Uint8Array([77,101,116,97,108,108,105,99,32,45,101,102,102,101,99,116,0]),Ur=new Uint8Array([170,170,170,170]),jr=new Uint8Array([170,170,170,170]),Pr=new Uint8Array([170,170,170,170]);Object.assign(Ze,{...t,type:2,name:"metallic.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:br}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:T},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:M},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:V},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:$},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:oe},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:ne},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:ce}],methods:[],template:{memory:{array:dr},slots:{0:{structure:T,memory:{array:hr},slots:{0:{structure:pe,memory:{array:gr},slots:{0:{structure:ye,memory:{array:zr},address:1069738}}}}},1:{structure:M,memory:{array:Sr},slots:{0:{structure:be,memory:{array:Vr},slots:{0:{structure:fe,memory:{array:Or},address:1069723}}}}},2:{structure:V,memory:{array:wr},slots:{0:{structure:n,memory:{array:_r}}}},3:{structure:$,memory:{array:Rr},slots:{0:{structure:he,memory:{array:qr},slots:{0:{structure:de,memory:{array:Ar},address:1069706}}}}},4:{structure:oe,memory:{array:Ur},slots:{0:{structure:$e,memory:{array:i},address:-1431655766}}},5:{structure:ne,memory:{array:jr},slots:{0:{structure:Be,memory:{array:i},address:-1431655766}}},6:{structure:ce,memory:{array:Pr},slots:{0:{structure:Le,memory:{array:i},address:-1431655766}}}}}},slot:1});Object.assign(A,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:24});Object.assign(j,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:A}],methods:[],template:null},slot:23});Object.assign(P,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:j}],methods:[],template:null},slot:22});Object.assign(y,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:25});const xr=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(Ge,{...t,type:9,name:"metallic.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:n},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:n}],methods:[],template:{memory:{array:xr}}},slot:26});Object.assign(x,{...t,name:"bool",length:1,byteSize:1,align:0,instance:{members:[{...e,type:1,isRequired:!1,bitOffset:0,bitSize:1,byteSize:1,structure:x}],methods:[],template:null},slot:27});Object.assign(C,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:C}],methods:[],template:null},slot:28});Object.assign(He,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:d}],methods:[],template:null},slot:54});const Cr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ir=new Uint8Array([]),kr=new Uint8Array([168,252,15,0]),vr=new Uint8Array([4,0,0,0]);Object.assign(R,{...t,type:2,name:"metallic.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:P},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Ge},{...e,type:1,isRequired:!1,bitOffset:168,bitSize:1,byteSize:1,slot:4,name:"premultiplied",structure:x},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:5,name:"offset",structure:C}],methods:[],template:{memory:{array:Cr}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:A},{...e,type:7,isRequired:!1,name:"FPixel",structure:He},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:V}],methods:[],template:{memory:{array:Ir},slots:{0:{structure:V,memory:{array:kr},slots:{0:{structure:n,memory:{array:vr}}}}}}},slot:21});const Dr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Er=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Kr=new Uint8Array([0,0,0,0,0,0,0,0]),le=new Uint8Array([]),Fr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Tr=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(I,{...t,type:2,name:"metallic.KernelInput(u8,metallic.kernel)",length:1,byteSize:48,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"source",structure:R},{...e,type:6,isRequired:!1,bitOffset:192,bitSize:192,byteSize:24,slot:1,name:"stripe",structure:R}],methods:[],template:{memory:{array:Dr},slots:{0:{structure:R,memory:{array:Er},slots:{0:{structure:P,memory:{array:Kr},slots:{0:{structure:j,memory:{array:le}}}}}},1:{structure:R,memory:{array:Fr},slots:{0:{structure:P,memory:{array:Tr},slots:{0:{structure:j,memory:{array:le}}}}}}}}},slot:20});Object.assign(Je,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:A}],methods:[],template:null},slot:23});Object.assign(Ne,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Je}],methods:[],template:null},slot:31});const Mr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),$r=new Uint8Array([]),Br=new Uint8Array([104,253,15,0]),Lr=new Uint8Array([4,0,0,0]);Object.assign(ue,{...t,type:2,name:"metallic.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Ne},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Ge},{...e,type:1,isRequired:!1,bitOffset:168,bitSize:1,byteSize:1,slot:4,name:"premultiplied",structure:x},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:5,name:"offset",structure:C}],methods:[],template:{memory:{array:Mr}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:A},{...e,type:7,isRequired:!1,name:"FPixel",structure:He},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:V}],methods:[],template:{memory:{array:$r},slots:{0:{structure:V,memory:{array:Br},slots:{0:{structure:n,memory:{array:Lr}}}}}}},slot:30});const Gr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Hr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Jr=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(k,{...t,type:2,name:"metallic.KernelOutput(u8,metallic.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:ue}],methods:[],template:{memory:{array:Gr},slots:{0:{structure:ue,memory:{array:Hr},slots:{0:{structure:Ne,memory:{array:Jr},slots:{0:{structure:Je,memory:{array:le}}}}}}}}},slot:29});const Nr=new Uint8Array([0,0,72,67,0,0,112,66,0,0,32,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,0,0,0,0,128,67,0,0,32,65,40,0,0,0,205,204,204,62,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0]);Object.assign(v,{...t,type:2,name:"metallic.KernelParameters(metallic.kernel)",length:1,byteSize:64,align:4,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:96,byteSize:16,slot:0,name:"lightsource",structure:h},{...e,type:2,isRequired:!1,bitOffset:320,bitSize:32,byteSize:4,slot:1,name:"shininess",structure:n},{...e,type:4,isRequired:!1,bitOffset:352,bitSize:32,byteSize:4,slot:2,name:"shadow",structure:d},{...e,type:4,isRequired:!1,bitOffset:384,bitSize:32,byteSize:4,slot:3,name:"relief",structure:d},{...e,type:6,isRequired:!1,bitOffset:256,bitSize:64,byteSize:8,slot:4,name:"stripesize",structure:xe},{...e,type:6,isRequired:!1,bitOffset:128,bitSize:96,byteSize:16,slot:5,name:"viewDirection",structure:h}],methods:[],template:{memory:{array:Nr}}},slot:32});Object.assign(et,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(metallic.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:55});Object.assign(tt,{...t,type:7,name:"@typeInfo(@typeInfo(@TypeOf(metallic.createOutput)).Fn.return_type.?).ErrorUnion.error_set!metallic.KernelOutput(u8,metallic.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:k},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:et}],methods:[],template:null},slot:38});Object.assign(st,{...t,type:3,name:"createOutput",length:1,byteSize:160,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:512,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:544,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:6,bitOffset:576,bitSize:384,byteSize:48,slot:2,name:"2",structure:I},{...e,type:6,bitOffset:0,bitSize:512,byteSize:64,slot:3,name:"3",structure:v},{...e,type:6,bitOffset:960,bitSize:224,byteSize:28,slot:4,name:"retval",structure:tt}],methods:[],template:null},slot:36});Object.assign(rt,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(metallic.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:56});Object.assign(at,{...t,type:7,name:"@typeInfo(@typeInfo(@TypeOf(metallic.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set!metallic.KernelOutput(u8,metallic.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:k},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:rt}],methods:[],template:null},slot:39});Object.assign(it,{...t,type:3,name:"createPartialOutput",length:1,byteSize:160,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:512,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:544,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:3,bitOffset:576,bitSize:32,byteSize:4,slot:2,name:"2",structure:y},{...e,type:3,bitOffset:608,bitSize:32,byteSize:4,slot:3,name:"3",structure:y},{...e,type:6,bitOffset:640,bitSize:384,byteSize:48,slot:4,name:"4",structure:I},{...e,type:6,bitOffset:0,bitSize:512,byteSize:64,slot:5,name:"5",structure:v},{...e,type:6,bitOffset:1024,bitSize:224,byteSize:28,slot:6,name:"retval",structure:at}],methods:[],template:null},slot:37});const Qr={argStruct:st,thunk:3,name:"createOutput"},Wr={argStruct:it,thunk:9,name:"createPartialOutput"};Object.assign(mt,{...t,type:2,name:"metallic",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:le}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:Ze},{...e,type:7,isRequired:!1,name:"Input",structure:I},{...e,type:7,isRequired:!1,name:"Output",structure:k},{...e,type:7,isRequired:!1,name:"Parameters",structure:v}],methods:[Qr,Wr],template:null},slot:0});const Xr=[p,ye,pe,T,fe,be,M,n,V,de,he,$,d,h,_,r,s,ge,B,ze,Se,L,Ve,G,b,Oe,we,H,_e,J,Re,qe,N,Ae,Q,Ue,je,W,Pe,X,xe,Ce,Y,Ie,Z,ke,ee,ve,De,te,Ee,se,Ke,re,Fe,ae,Te,ie,Me,me,$e,oe,q,z,Be,ne,Le,ce,Ze,A,j,P,y,Ge,x,C,He,R,I,Je,Ne,ue,k,v,et,tt,st,rt,at,it,mt],Yr=It(Xr),Zr=mt.constructor,ea=(async()=>{const c=new URL("metallic-099490b8.wasm",import.meta.url).href;return fetch(c)})();kt(ea,{...Yr,writeBack:!0});const{createOutput:na,createPartialOutput:ta,kernel:Ye,Input:sa,Output:ca,Parameters:ua}=Zr;function ra(c,l,m,a,o={},O={}){if(Array.isArray(o)){const g=o;o={};for(const[f,w]of Object.keys(Ye.inputImages).entries())o[w]=g[f]}const D=new sa(void 0),E=Object.keys(Ye.inputImages),u=[];let U;for(const g of E){let f=o[g];if(f||(E.length===1&&["data","width","height"].every(w=>!!o[w])?f=o:u.push(g)),D[g]=f,U){if(f.colorSpace!==U)throw new Error(`Input images must all use the same color space: ${U}`)}else U=f.colorSpace}if(u.length>0)throw new Error(`Missing input image${u.length>1?"s":""}: ${u.join(", ")}`);const Qe=ta(c,l,m,a,D,O),ot=g=>{const f=Object.keys(g),w={};for(const nt of f){const{data:{typedArray:K},width:ct,height:ft}=g[nt];let F;if(typeof ImageData=="function"){const bt=new Uint8ClampedArray(K.buffer,K.byteOffset,K.byteLength);F=new ImageData(bt,ct,a,{colorSpace:U})}else F={data:K,width:ct,height:ft};if(f.length===1)return F;w[nt]=F}return w};return Qe[Symbol.toStringTag]==="Promise"?Qe.then(ot):ot(Qe)}function aa(){const c={};for(let[l,m]of Object.entries(Ye)){if(l==="parameters"){const a={};for(const[o,O]of Object.entries(m)){const D=a[o]={};for(let[E,u]of Object.entries(O))typeof u=="object"?"string"in u?u=u.string:u=pt(u):typeof u=="function"&&(u=ia(u.name)),D[E]=u}m=a}else typeof m=="object"&&("string"in m?m=m.string:m=m.valueOf());c[l]=m}return c}function pt(c){const l=[];for(let[m,a]of Object.entries(c))typeof a=="object"&&(a=pt(a)),l[m]=a;return l}function ia(c){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[c]}onmessage=c=>{const[l,m,...a]=c.data;ma(l,a).then(([o,O])=>{postMessage([l,m,o],{transfer:O})}).catch(o=>{postMessage(["error",m,o])})};async function ma(c,l){switch(c){case"getKernelInfo":return[aa(...l)];case"createPartialImageData":const a=await ra(...l),o=[];if("data"in a&&"width"in a&&"height"in a)o.push(a.data.buffer);else for(const O of Object.entries(a))o.push(a.data.buffer);return[a,o];default:throw new Error(`Unknown function: ${c}`)}}
