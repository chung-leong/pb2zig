import{u as Ge,a as He,b as Je,c as Ne,d as Qe,e as We,f as Xe,g as Ye,h as Ze,i as ts,j as es,k as ss,l as rs,m as as,n as ns,o as is,p as os,q as cs,r as us,s as ms}from"./index-6ff6e058.js";Ge();es();ss();He();Je();rs();as();ns();Ne();Qe();We();Xe();is();os();ms();Ye();cs();Ze();ts();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},f={},M={},T={},$={},L={},r={},y={},B={},G={},j={},H={},D={},J={},N={},p={},Q={},W={},at={},V={},X={},d={},m={},g={},U={},_={},nt={},h={},I={},Y={},R={},Z={},k={},q={},P={},it={},ot={},F={},ct={},ut={},mt={},vt={},yt={},bt={},lt={},Et={},gt={},xt={},pt={},Ct={},Kt={},ft={},Ot={},Dt={},St={},_t={},zt={},Ft={},Mt={},jt={},ht={},Tt={},v={},$t={},Lt={},dt={},wt={},Bt={},At={},Gt={},Ht={},Jt={},Nt={},Qt={},Wt={},Xt={},Yt={},Zt={},te={},ee={},se={},re={},ae={},ne={},ie={},oe={},tt={},ce={},ue={},Ut={},me={},Pt={},ye={},be={},le={},ge={},pe={},fe={},Oe={},Se={},ze={},Vt={},je={},he={},de={},we={},Ae={},Ue={},Pe={},Ve={},Ie={},Re={},It={},ke={},qe={},ve={},Ee={},xe={},Ce={},Ke={},De={},_e={},Fe={},ys=new Uint8Array,bs=new Uint8Array,ls=new Uint8Array([1]),gs=new Uint8Array,ps=new Uint8Array([32]),fs=new Uint8Array,Os=new Uint8Array([8]),Ss=new Uint8Array,zs=new Uint8Array,js=new Uint8Array([1]),hs=new Uint8Array,ds=new Uint8Array([0,2]),ws=new Uint8Array,As=new Uint8Array([56]),Us=new Uint8Array,Ps=new Uint8Array,Vs=new Uint8Array,Is=new Uint8Array([4]),Rs=new Uint8Array,ks=new Uint8Array,qs=new Uint8Array,vs=new Uint8Array([236,4,0,1]),Es=new Uint8Array([99,111,109,46,103,114,101,121,98,111,120,119,97,114,101,46,97,115,99,105,105,109,105,105,0]),xs=new Uint8Array([16,5,0,1]),Cs=new Uint8Array([82,105,99,104,97,114,100,32,90,117,114,97,100,0]),Ks=new Uint8Array,Ds=new Uint8Array([1]),_s=new Uint8Array([47,5,0,1]),Fs=new Uint8Array([70,105,108,116,101,114,32,116,111,32,109,105,109,105,99,32,116,104,101,32,84,69,88,84,112,32,101,102,102,101,99,116,32,102,114,111,109,32,89,111,117,84,117,98,101,39,115,32,50,48,49,48,32,65,112,114,105,108,32,70,111,111,108,115,32,106,111,107,101,0]),Ms=new Uint8Array,Ts=new Uint8Array,$s=new Uint8Array,Ls=new Uint8Array([0]),Bs=new Uint8Array([1]),Me=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Gs=new Uint8Array,Hs=new Uint8Array,Js=new Uint8Array,Ns=new Uint8Array,Qs=new Uint8Array([4]),E=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Te=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ws=new Uint8Array,Xs=new Uint8Array,Ys=new Uint8Array,Zs=new Uint8Array,tr=new Uint8Array([4]),Rt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),er=new Uint8Array([8,0,0,0,56,0,0,0]),sr=new Uint8Array([27,0]),rr=new Uint8Array,ar=new Uint8Array,nr=new Uint8Array,ir=new Uint8Array;Object.assign(vt,{slots:{0:yt,1:lt,2:gt,3:pt}});Object.assign(yt,{structure:s,memory:{array:ys},slots:{0:bt}});Object.assign(bt,{structure:j});Object.assign(lt,{structure:r,memory:{array:bs},slots:{0:Et}});Object.assign(Et,{structure:y,memory:{array:ls}});Object.assign(gt,{structure:r,memory:{array:gs},slots:{0:xt}});Object.assign(xt,{structure:y,memory:{array:ps}});Object.assign(pt,{structure:r,memory:{array:fs},slots:{0:Ct}});Object.assign(Ct,{structure:y,memory:{array:Os}});Object.assign(Kt,{slots:{0:ft,1:Ot,2:St,3:zt}});Object.assign(ft,{structure:s,memory:{array:Ss},slots:{0:bt}});Object.assign(Ot,{structure:r,memory:{array:zs},slots:{0:Dt}});Object.assign(Dt,{structure:y,memory:{array:js}});Object.assign(St,{structure:r,memory:{array:hs},slots:{0:_t}});Object.assign(_t,{structure:D,memory:{array:ds}});Object.assign(zt,{structure:r,memory:{array:ws},slots:{0:Ft}});Object.assign(Ft,{structure:y,memory:{array:As}});Object.assign(Mt,{slots:{0:jt,1:ht}});Object.assign(jt,{structure:H,memory:{array:Us},slots:{0:yt,1:lt,2:gt,3:pt}});Object.assign(ht,{structure:J,memory:{array:Ps},slots:{0:ft,1:Ot,2:St,3:zt}});Object.assign(Tt,{slots:{0:v}});Object.assign(v,{structure:r,memory:{array:Vs},slots:{0:$t}});Object.assign($t,{structure:y,memory:{array:Is}});Object.assign(Lt,{slots:{0:dt,1:wt}});Object.assign(dt,{structure:p,memory:{array:Rs},slots:{0:v}});Object.assign(wt,{structure:p,memory:{array:ks},slots:{0:v}});Object.assign(Bt,{slots:{0:At}});Object.assign(At,{structure:p,memory:{array:qs},slots:{0:v}});Object.assign(Gt,{slots:{0:Ht,1:Nt,2:Wt,3:Yt,4:te,5:ee,6:se}});Object.assign(Ht,{structure:T,memory:{array:vs},slots:{0:Jt}});Object.assign(Jt,{structure:M,memory:{array:Es},reloc:16778476,const:!0});Object.assign(Nt,{structure:L,memory:{array:xs},slots:{0:Qt}});Object.assign(Qt,{structure:$,memory:{array:Cs},reloc:16778512,const:!0});Object.assign(Wt,{structure:r,memory:{array:Ks},slots:{0:Xt}});Object.assign(Xt,{structure:y,memory:{array:Ds}});Object.assign(Yt,{structure:G,memory:{array:_s},slots:{0:Zt}});Object.assign(Zt,{structure:B,memory:{array:Fs},reloc:16778543,const:!0});Object.assign(te,{structure:N,memory:{array:Ms},slots:{0:jt,1:ht}});Object.assign(ee,{structure:Q,memory:{array:Ts},slots:{0:dt,1:wt}});Object.assign(se,{structure:W,memory:{array:$s},slots:{0:At}});Object.assign(re,{slots:{0:ae,1:ne}});Object.assign(ae,{structure:g,memory:{array:Ls}});Object.assign(ne,{structure:g,memory:{array:Bs}});Object.assign(ie,{memory:{array:Me},slots:{0:oe}});Object.assign(oe,{structure:d,memory:{array:Me,offset:0,length:8},slots:{0:tt}});Object.assign(tt,{structure:X,memory:{array:Gs},reloc:0,const:!0});Object.assign(ce,{slots:{0:ue,1:me,2:ye}});Object.assign(ue,{structure:s,memory:{array:Hs},slots:{0:Ut}});Object.assign(Ut,{structure:V});Object.assign(me,{structure:s,memory:{array:Js},slots:{0:Pt}});Object.assign(Pt,{structure:nt});Object.assign(ye,{structure:r,memory:{array:Ns},slots:{0:be}});Object.assign(be,{structure:y,memory:{array:Qs}});Object.assign(le,{memory:{array:E},slots:{0:ge,1:fe}});Object.assign(ge,{structure:h,memory:{array:E,offset:0,length:24},slots:{0:pe}});Object.assign(pe,{structure:d,memory:{array:E,offset:0,length:8},slots:{0:tt}});Object.assign(fe,{structure:h,memory:{array:E,offset:24,length:24},slots:{0:Oe}});Object.assign(Oe,{structure:d,memory:{array:E,offset:24,length:8},slots:{0:tt}});Object.assign(Se,{memory:{array:Te},slots:{0:ze}});Object.assign(ze,{structure:R,memory:{array:Te,offset:0,length:8},slots:{0:Vt}});Object.assign(Vt,{structure:Y,memory:{array:Ws},reloc:0});Object.assign(je,{slots:{0:he,1:de,2:we}});Object.assign(he,{structure:s,memory:{array:Xs},slots:{0:Ut}});Object.assign(de,{structure:s,memory:{array:Ys},slots:{0:Pt}});Object.assign(we,{structure:r,memory:{array:Zs},slots:{0:Ae}});Object.assign(Ae,{structure:y,memory:{array:tr}});Object.assign(Ue,{memory:{array:Rt},slots:{0:Pe}});Object.assign(Pe,{structure:Z,memory:{array:Rt},slots:{0:Ve}});Object.assign(Ve,{structure:R,memory:{array:Rt,offset:0,length:8},slots:{0:Vt}});Object.assign(Ie,{memory:{array:er}});Object.assign(Re,{slots:{0:It}});Object.assign(It,{structure:P,memory:{array:sr}});Object.assign(ke,{slots:{0:It}});Object.assign(qe,{slots:{0:ve,1:xe,2:Ke,3:_e}});Object.assign(ve,{structure:s,memory:{array:rr},slots:{0:Ee}});Object.assign(Ee,{structure:at});Object.assign(xe,{structure:s,memory:{array:ar},slots:{0:Ce}});Object.assign(Ce,{structure:I});Object.assign(Ke,{structure:s,memory:{array:nr},slots:{0:De}});Object.assign(De,{structure:k});Object.assign(_e,{structure:s,memory:{array:ir},slots:{0:Fe}});Object.assign(Fe,{structure:q});const or={argStruct:ot,thunkId:2,name:"createOutput"},cr={argStruct:ut,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(f,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(M,{...e,type:1,name:"[24:0]u8",length:24,byteSize:25,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(T,{...e,type:13,name:"*const [24:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign($,{...e,type:1,name:"[13:0]u8",length:13,byteSize:14,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(L,{...e,type:13,name:"*const [13:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[]}});Object.assign(r,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(y,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:y}],methods:[]}});Object.assign(B,{...e,type:1,name:"[69:0]u8",length:69,byteSize:70,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(G,{...e,type:13,name:"*const [69:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:B}],methods:[]}});Object.assign(j,{...e,name:"i32",byteSize:4,align:4,instance:{members:[{...t,type:2,bitOffset:0,bitSize:32,byteSize:4,structure:j}],methods:[]}});Object.assign(H,{...e,type:2,name:"Struct1449345558",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:r},{...t,type:9,slot:2,name:"maxValue",structure:r},{...t,type:9,slot:3,name:"defaultValue",structure:r}],methods:[],template:vt}});Object.assign(D,{...e,name:"i16",byteSize:2,align:2,instance:{members:[{...t,type:2,bitOffset:0,bitSize:16,byteSize:2,structure:D}],methods:[]}});Object.assign(J,{...e,type:2,name:"Struct3551455779",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:r},{...t,type:9,slot:2,name:"maxValue",structure:r},{...t,type:9,slot:3,name:"defaultValue",structure:r}],methods:[],template:Kt}});Object.assign(N,{...e,type:2,name:"Struct3770657015",align:1,instance:{members:[{...t,type:9,slot:0,name:"size",structure:H},{...t,type:9,slot:1,name:"charCount",structure:J}],methods:[],template:Mt}});Object.assign(p,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:r}],methods:[],template:Tt}});Object.assign(Q,{...e,type:2,name:"Struct1891826899",align:1,instance:{members:[{...t,type:9,slot:0,name:"src",structure:p},{...t,type:9,slot:1,name:"text",structure:p}],methods:[],template:Lt}});Object.assign(W,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:9,slot:0,name:"dst",structure:p}],methods:[],template:Bt}});Object.assign(at,{...e,type:2,name:"asciimii.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:T},{...t,type:9,slot:1,name:"vendor",structure:L},{...t,type:9,slot:2,name:"version",structure:r},{...t,type:9,slot:3,name:"description",structure:G},{...t,type:9,slot:4,name:"parameters",structure:N},{...t,type:9,slot:5,name:"inputImages",structure:Q},{...t,type:9,slot:6,name:"outputImages",structure:W}],methods:[],template:Gt}});Object.assign(V,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(X,{...e,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(d,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:X}],methods:[]}});Object.assign(m,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[]}});Object.assign(g,{...e,type:11,name:"asciimii.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:g},{...t,type:9,slot:1,name:"display-p3",structure:g}],methods:[],template:re}});Object.assign(U,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:U}],methods:[]}});Object.assign(_,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:_}],methods:[]}});Object.assign(nt,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:_}],methods:[]}});Object.assign(h,{...e,type:2,name:"asciimii.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:d},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:g},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:ie},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:r}],methods:[],template:ce}});Object.assign(I,{...e,type:2,name:"asciimii.KernelInput(u8,asciimii.kernel)",byteSize:48,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:h},{...t,type:7,bitOffset:192,bitSize:192,byteSize:24,slot:1,name:"text",structure:h}],methods:[],template:le}});Object.assign(Y,{...e,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(R,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:Y}],methods:[]}});Object.assign(Z,{...e,type:2,name:"asciimii.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:R},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:g},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:Se},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:r}],methods:[],template:je}});Object.assign(k,{...e,type:2,name:"asciimii.KernelOutput(u8,asciimii.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:Z}],methods:[],template:Ue}});Object.assign(q,{...e,type:2,name:"asciimii.KernelParameters(asciimii.kernel)",byteSize:8,align:4,instance:{members:[{...t,type:2,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"size",structure:j},{...t,type:2,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"charCount",structure:j}],methods:[],template:Ie}});Object.assign(P,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(asciimii.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:P}],methods:[],template:Re}});Object.assign(it,{...e,type:9,name:"ErrorSet2017218537!asciimii.KernelOutput(u8,asciimii.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:k},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:P}],methods:[]}});Object.assign(ot,{...e,type:5,name:"createOutput",byteSize:92,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...t,type:7,isRequired:!0,bitOffset:64,bitSize:384,byteSize:48,slot:0,name:"2",structure:I},{...t,type:7,isRequired:!0,bitOffset:448,bitSize:64,byteSize:8,slot:1,name:"3",structure:q},{...t,type:7,isRequired:!0,bitOffset:512,bitSize:224,byteSize:28,slot:2,name:"retval",structure:it}],methods:[]}});Object.assign(F,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(asciimii.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:F}],methods:[],template:ke}});Object.assign(ct,{...e,type:9,name:"ErrorSet3250127848!asciimii.KernelOutput(u8,asciimii.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:k},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:F}],methods:[]}});Object.assign(ut,{...e,type:5,name:"createPartialOutput",byteSize:100,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:m},{...t,type:7,isRequired:!0,bitOffset:128,bitSize:384,byteSize:48,slot:0,name:"4",structure:I},{...t,type:7,isRequired:!0,bitOffset:512,bitSize:64,byteSize:8,slot:1,name:"5",structure:q},{...t,type:7,isRequired:!0,bitOffset:576,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ct}],methods:[]}});Object.assign(mt,{...e,type:2,name:"asciimii",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:s},{...t,type:9,slot:1,name:"Input",structure:s},{...t,type:9,slot:2,name:"Output",structure:s},{...t,type:9,slot:3,name:"Parameters",structure:s}],methods:[or,cr],template:qe}});const ur=[s,f,M,T,$,L,r,y,B,G,j,H,D,J,N,p,Q,W,at,V,X,d,m,g,U,_,nt,h,I,Y,R,Z,k,q,P,it,ot,F,ct,ut,mt],mr=mt,yr={runtimeSafety:!1,littleEndian:!0},et=us();et.getControlObject();et.recreateStructures(ur,yr);const br=(async()=>{const o=new URL("asciimii-5ed1ab11.wasm",import.meta.url).href;return fetch(o)})();et.loadModule(br);et.linkVariables(!0);const{constructor:lr}=mr,{createPartialOutput:gr,Input:pr,kernel:rt}=lr;function fr(o,c,n,a,i={},O={}){const S=[];for(const[b]of rt.inputImages)S.push(b);const w=[];for(const[b]of rt.outputImages)w.push(b);if(Array.isArray(i)){const b=i;i={};for(const[l,z]of S.entries())i[z]=b[l]}const u=new pr(void 0),x=[];let A;for(const b of S){let l=i[b];if(l||(S.length===1&&["data","width","height"].every(z=>!!i[z])?l=i:x.push(b)),u[b]=l,A){if(l.colorSpace!==A)throw new Error(`Input images must all use the same color space: ${A}`)}else A=l.colorSpace}if(x.length>0)throw new Error(`Missing input image${x.length>1?"s":""}: ${x.join(", ")}`);const st=gr(o,c,n,a,u,O),kt=b=>{const l={};for(const z of w){const{data:{typedArray:C},width:qt,height:Le}=b[z];let K;if(typeof ImageData=="function"){const Be=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);K=new ImageData(Be,qt,a,{colorSpace:A})}else K={data:C,width:qt,height:Le};if(w.length===1)return K;l[z]=K}return l};return st[Symbol.toStringTag]==="Promise"?st.then(kt):kt(st)}function Or(){const o={};for(let[c,n]of rt){if(c==="parameters"){const a={};for(const[i,O]of n){const S=a[i]={};for(let[w,u]of O)typeof u=="object"?"string"in u?u=u.string:u=$e(u):typeof u=="function"&&(u=Sr(u.name)),S[w]=u}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());o[c]=n}return o}function $e(o){const c=[];for(let[n,a]of o)typeof a=="object"&&(a=$e(a)),c[n]=a;return c}function Sr(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[c,n,...a]=o.data;zr(c,a).then(([i,O])=>{postMessage([c,n,i],{transfer:O})}).catch(i=>{postMessage(["error",n,i])})};async function zr(o,c){switch(o){case"getKernelInfo":return[Or(...c)];case"createPartialImageData":const a=await fr(...c),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const O of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${o}`)}}
