import{u as Ke,a as De,b as Fe,d as Me,c as _e,e as Te,f as $e,g as Be,h as Le,i as Ge,j as He,k as Je,l as Ne,m as Qe,o as We,n as Xe,p as Ye,q as Ze}from"./index-ccb3eb7b.js";Ke();De();Fe();Me();_e();Te();$e();Be();Le();Ge();He();Je();Ne();Qe();We();Xe();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},S={},X={},Y={},E={},Z={},ee={},K={},i={},s={},te={},se={},D={},q={},re={},p={},m={},ae={},F={},ne={},M={},ie={},_={},ue={},T={},oe={},le={},$={},me={},B={},ye={},L={},ce={},G={},be={},H={},O={},d={},pe={},J={},fe={},N={},we={},w={},A={},U={},c={},de={},j={},Se={},z={},P={},he={},ge={},Q={},V={},C={},Re={},qe={},Ae={},Ue={},je={},Pe={},Ve={};Object.assign(S,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:5});Object.assign(X,{...t,type:1,name:"[21:0]u8",length:21,byteSize:22,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:4});Object.assign(Y,{...t,type:11,name:"*const [21:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:3});Object.assign(E,{...t,type:11,name:"*const *const [21:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[],template:null},slot:2});Object.assign(Z,{...t,type:1,name:"[9:0]u8",length:9,byteSize:10,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:8});Object.assign(ee,{...t,type:11,name:"*const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:7});Object.assign(K,{...t,type:11,name:"*const *const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:6});Object.assign(i,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:i}],methods:[],template:null},slot:10});Object.assign(s,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:i}],methods:[],template:null},slot:9});Object.assign(te,{...t,type:1,name:"[8:0]u8",length:8,byteSize:9,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:13});Object.assign(se,{...t,type:11,name:"*const [8:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:12});Object.assign(D,{...t,type:11,name:"*const *const [8:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:11});Object.assign(q,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:45});Object.assign(re,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:32});Object.assign(p,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:p}],methods:[],template:null},slot:61});Object.assign(m,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:p}],methods:[],template:null},slot:60});const et=new Uint8Array([]),tt=new Uint8Array([88,250,15,0]),st=new Uint8Array([0,0,0,0,0,0,89,192]),rt=new Uint8Array([176,250,15,0]),at=new Uint8Array([0,0,0,0,0,0,89,192]);Object.assign(ae,{...t,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:m},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:m}],methods:[],template:{memory:{array:et},slots:{0:{structure:m,memory:{array:tt},slots:{0:{structure:p,memory:{array:st}}}},1:{structure:m,memory:{array:rt},slots:{0:{structure:p,memory:{array:at}}}}}}},slot:49});Object.assign(F,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:48});const nt=new Uint8Array([]),it=new Uint8Array([88,250,15,0]),ut=new Uint8Array([0,0,0,0,0,0,89,64]),ot=new Uint8Array([176,250,15,0]),lt=new Uint8Array([0,0,0,0,0,0,89,64]);Object.assign(ne,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:m},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:m}],methods:[],template:{memory:{array:nt},slots:{0:{structure:m,memory:{array:it},slots:{0:{structure:p,memory:{array:ut}}}},1:{structure:m,memory:{array:ot},slots:{0:{structure:p,memory:{array:lt}}}}}}},slot:51});Object.assign(M,{...t,type:11,name:"Struct0013",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:50});const mt=new Uint8Array([]),yt=new Uint8Array([88,250,15,0]),ct=new Uint8Array([0,0,0,0,0,0,0,0]),bt=new Uint8Array([176,250,15,0]),pt=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(ie,{...t,type:2,name:"Struct0020",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:m},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:m}],methods:[],template:{memory:{array:mt},slots:{0:{structure:m,memory:{array:yt},slots:{0:{structure:p,memory:{array:ct}}}},1:{structure:m,memory:{array:bt},slots:{0:{structure:p,memory:{array:pt}}}}}}},slot:53});Object.assign(_,{...t,type:11,name:"Struct0014",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:52});const ft=new Uint8Array([]),dt=new Uint8Array([170,170,170,170]),y=new Uint8Array([]),St=new Uint8Array([170,170,170,170]),ht=new Uint8Array([170,170,170,170]);Object.assign(ue,{...t,type:2,name:"Struct0009",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:re},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:F},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:M},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:_}],methods:[],template:{memory:{array:ft},slots:{0:{structure:F,memory:{array:dt},slots:{0:{structure:ae,memory:{array:y},address:-1431655766}}},1:{structure:M,memory:{array:St},slots:{0:{structure:ne,memory:{array:y},address:-1431655766}}},2:{structure:_,memory:{array:ht},slots:{0:{structure:ie,memory:{array:y},address:-1431655766}}}}}},slot:39});Object.assign(T,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:38});Object.assign(oe,{...t,type:13,name:"@Vector(2, i32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,structure:i}],methods:[],template:null},slot:33});const gt=new Uint8Array([]),zt=new Uint8Array([148,250,15,0]),Ot=new Uint8Array([0,0,0,0]),wt=new Uint8Array([184,250,15,0]),Rt=new Uint8Array([0,0,0,0]);Object.assign(le,{...t,type:2,name:"Struct0021",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:gt},slots:{0:{structure:s,memory:{array:zt},slots:{0:{structure:i,memory:{array:Ot}}}},1:{structure:s,memory:{array:wt},slots:{0:{structure:i,memory:{array:Rt}}}}}}},slot:55});Object.assign($,{...t,type:11,name:"Struct0015",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:54});const qt=new Uint8Array([]),At=new Uint8Array([148,250,15,0]),Ut=new Uint8Array([3,0,0,0]),jt=new Uint8Array([184,250,15,0]),Pt=new Uint8Array([3,0,0,0]);Object.assign(me,{...t,type:2,name:"Struct0022",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:qt},slots:{0:{structure:s,memory:{array:At},slots:{0:{structure:i,memory:{array:Ut}}}},1:{structure:s,memory:{array:jt},slots:{0:{structure:i,memory:{array:Pt}}}}}}},slot:57});Object.assign(B,{...t,type:11,name:"Struct0016",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:56});const Vt=new Uint8Array([]),Ct=new Uint8Array([148,250,15,0]),kt=new Uint8Array([0,0,0,0]),It=new Uint8Array([184,250,15,0]),vt=new Uint8Array([1,0,0,0]);Object.assign(ye,{...t,type:2,name:"Struct0023",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Vt},slots:{0:{structure:s,memory:{array:Ct},slots:{0:{structure:i,memory:{array:kt}}}},1:{structure:s,memory:{array:It},slots:{0:{structure:i,memory:{array:vt}}}}}}},slot:59});Object.assign(L,{...t,type:11,name:"Struct0017",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:58});const xt=new Uint8Array([]),Et=new Uint8Array([170,170,170,170]),Kt=new Uint8Array([170,170,170,170]),Dt=new Uint8Array([170,170,170,170]);Object.assign(ce,{...t,type:2,name:"Struct0010",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:oe},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:$},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:B},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:L}],methods:[],template:{memory:{array:xt},slots:{0:{structure:$,memory:{array:Et},slots:{0:{structure:le,memory:{array:y},address:-1431655766}}},1:{structure:B,memory:{array:Kt},slots:{0:{structure:me,memory:{array:y},address:-1431655766}}},2:{structure:L,memory:{array:Dt},slots:{0:{structure:ye,memory:{array:y},address:-1431655766}}}}}},slot:41});Object.assign(G,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:40});const Ft=new Uint8Array([]),Mt=new Uint8Array([170,170,170,170]),_t=new Uint8Array([170,170,170,170]);Object.assign(be,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"amplitude",structure:T},{...e,type:8,isRequired:!1,slot:1,name:"channels",structure:G}],methods:[],template:{memory:{array:Ft},slots:{0:{structure:T,memory:{array:Mt},slots:{0:{structure:ue,memory:{array:y},address:-1431655766}}},1:{structure:G,memory:{array:_t},slots:{0:{structure:ce,memory:{array:y},address:-1431655766}}}}}},slot:15});Object.assign(H,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:14});const Tt=new Uint8Array([]),$t=new Uint8Array([176,250,15,0]),Bt=new Uint8Array([4,0,0,0]);Object.assign(O,{...t,type:2,name:"Struct0011",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:s}],methods:[],template:{memory:{array:Tt},slots:{0:{structure:s,memory:{array:$t},slots:{0:{structure:i,memory:{array:Bt}}}}}}},slot:43});Object.assign(d,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:O}],methods:[],template:null},slot:42});const Lt=new Uint8Array([]),Gt=new Uint8Array([170,170,170,170]),Ht=new Uint8Array([170,170,170,170]);Object.assign(pe,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:d},{...e,type:8,isRequired:!1,slot:1,name:"src1",structure:d}],methods:[],template:{memory:{array:Lt},slots:{0:{structure:d,memory:{array:Gt},slots:{0:{structure:O,memory:{array:y},address:-1431655766}}},1:{structure:d,memory:{array:Ht},slots:{0:{structure:O,memory:{array:y},address:-1431655766}}}}}},slot:17});Object.assign(J,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:16});const Jt=new Uint8Array([]),Nt=new Uint8Array([170,170,170,170]);Object.assign(fe,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:d}],methods:[],template:{memory:{array:Jt},slots:{0:{structure:d,memory:{array:Nt},slots:{0:{structure:O,memory:{array:y},address:-1431655766}}}}}},slot:19});Object.assign(N,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:18});const Qt=new Uint8Array([]),Wt=new Uint8Array([]),Xt=new Uint8Array([252,250,15,0]),Yt=new Uint8Array([78,36,16,0]),Zt=new Uint8Array([110,101,116,46,110,105,99,111,112,116,101,114,101,46,102,105,108,116,101,114,115,0]),es=new Uint8Array([60,251,15,0]),ts=new Uint8Array([68,36,16,0]),ss=new Uint8Array([110,105,99,111,112,116,101,114,101,0]),rs=new Uint8Array([124,251,15,0]),as=new Uint8Array([1,0,0,0]),ns=new Uint8Array([212,251,15,0]),is=new Uint8Array([59,36,16,0]),us=new Uint8Array([100,105,115,112,108,97,99,101,0]),os=new Uint8Array([170,170,170,170]),ls=new Uint8Array([170,170,170,170]),ms=new Uint8Array([170,170,170,170]);Object.assign(we,{...t,type:2,name:"displace.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Qt}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:E},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:K},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:s},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:D},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:H},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:J},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:N}],methods:[],template:{memory:{array:Wt},slots:{0:{structure:E,memory:{array:Xt},slots:{0:{structure:Y,memory:{array:Yt},slots:{0:{structure:X,memory:{array:Zt},address:1057870}}}}},1:{structure:K,memory:{array:es},slots:{0:{structure:ee,memory:{array:ts},slots:{0:{structure:Z,memory:{array:ss},address:1057860}}}}},2:{structure:s,memory:{array:rs},slots:{0:{structure:i,memory:{array:as}}}},3:{structure:D,memory:{array:ns},slots:{0:{structure:se,memory:{array:is},slots:{0:{structure:te,memory:{array:us},address:1057851}}}}},4:{structure:H,memory:{array:os},slots:{0:{structure:be,memory:{array:y},address:-1431655766}}},5:{structure:J,memory:{array:ls},slots:{0:{structure:pe,memory:{array:y},address:-1431655766}}},6:{structure:N,memory:{array:ms},slots:{0:{structure:fe,memory:{array:y},address:-1431655766}}}}}},slot:1});Object.assign(w,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:24});Object.assign(A,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:w}],methods:[],template:null},slot:23});Object.assign(U,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:A}],methods:[],template:null},slot:22});Object.assign(c,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:25});const ys=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(de,{...t,type:9,name:"displace.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:i},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:i}],methods:[],template:{memory:{array:ys}}},slot:26});Object.assign(j,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:j}],methods:[],template:null},slot:27});Object.assign(Se,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:44});const cs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),bs=new Uint8Array([]),ps=new Uint8Array([136,252,15,0]),fs=new Uint8Array([4,0,0,0]);Object.assign(z,{...t,type:2,name:"displace.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:U},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:de},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:j}],methods:[],template:{memory:{array:cs}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:w},{...e,type:7,isRequired:!1,name:"FPixel",structure:Se},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:s}],methods:[],template:{memory:{array:bs},slots:{0:{structure:s,memory:{array:ps},slots:{0:{structure:i,memory:{array:fs}}}}}}},slot:21});const ds=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ss=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),hs=new Uint8Array([0,0,0,0,0,0,0,0]),W=new Uint8Array([]),gs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),zs=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(P,{...t,type:2,name:"displace.KernelInput(u8,displace.kernel)",length:1,byteSize:48,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:z},{...e,type:6,isRequired:!1,bitOffset:192,bitSize:192,byteSize:24,slot:1,name:"src1",structure:z}],methods:[],template:{memory:{array:ds},slots:{0:{structure:z,memory:{array:Ss},slots:{0:{structure:U,memory:{array:hs},slots:{0:{structure:A,memory:{array:W}}}}}},1:{structure:z,memory:{array:gs},slots:{0:{structure:U,memory:{array:zs},slots:{0:{structure:A,memory:{array:W}}}}}}}}},slot:20});Object.assign(he,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:w}],methods:[],template:null},slot:23});Object.assign(ge,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:he}],methods:[],template:null},slot:30});const Os=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ws=new Uint8Array([]),Rs=new Uint8Array([72,253,15,0]),qs=new Uint8Array([4,0,0,0]);Object.assign(Q,{...t,type:2,name:"displace.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:ge},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:de},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:j}],methods:[],template:{memory:{array:Os}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:w},{...e,type:7,isRequired:!1,name:"FPixel",structure:Se},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:s}],methods:[],template:{memory:{array:ws},slots:{0:{structure:s,memory:{array:Rs},slots:{0:{structure:i,memory:{array:qs}}}}}}},slot:29});const As=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Us=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),js=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(V,{...t,type:2,name:"displace.KernelOutput(u8,displace.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:Q}],methods:[],template:{memory:{array:As},slots:{0:{structure:Q,memory:{array:Us},slots:{0:{structure:ge,memory:{array:js},slots:{0:{structure:he,memory:{array:W}}}}}}}}},slot:28});const Ps=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0]);Object.assign(C,{...t,type:2,name:"displace.KernelParameters(displace.kernel)",length:1,byteSize:16,align:3,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"amplitude",structure:re},{...e,type:6,isRequired:!1,bitOffset:64,bitSize:64,byteSize:8,slot:1,name:"channels",structure:oe}],methods:[],template:{memory:{array:Ps}}},slot:31});Object.assign(Re,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(displace.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:46});Object.assign(qe,{...t,type:7,name:"ErrorSet0000!displace.KernelOutput(u8,displace.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:V},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Re}],methods:[],template:null},slot:36});Object.assign(Ae,{...t,type:3,name:"createOutput",length:1,byteSize:104,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:0,name:"0",structure:c},{...e,type:3,bitOffset:160,bitSize:32,byteSize:4,slot:1,name:"1",structure:c},{...e,type:6,bitOffset:192,bitSize:384,byteSize:48,slot:2,name:"2",structure:P},{...e,type:6,bitOffset:0,bitSize:128,byteSize:16,slot:3,name:"3",structure:C},{...e,type:6,bitOffset:576,bitSize:224,byteSize:28,slot:4,name:"retval",structure:qe}],methods:[],template:null},slot:34});Object.assign(Ue,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(displace.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:47});Object.assign(je,{...t,type:7,name:"ErrorSet0001!displace.KernelOutput(u8,displace.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:V},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Ue}],methods:[],template:null},slot:37});Object.assign(Pe,{...t,type:3,name:"createPartialOutput",length:1,byteSize:112,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:0,name:"0",structure:c},{...e,type:3,bitOffset:160,bitSize:32,byteSize:4,slot:1,name:"1",structure:c},{...e,type:3,bitOffset:192,bitSize:32,byteSize:4,slot:2,name:"2",structure:c},{...e,type:3,bitOffset:224,bitSize:32,byteSize:4,slot:3,name:"3",structure:c},{...e,type:6,bitOffset:256,bitSize:384,byteSize:48,slot:4,name:"4",structure:P},{...e,type:6,bitOffset:0,bitSize:128,byteSize:16,slot:5,name:"5",structure:C},{...e,type:6,bitOffset:640,bitSize:224,byteSize:28,slot:6,name:"retval",structure:je}],methods:[],template:null},slot:35});const Vs={argStruct:Ae,thunk:3,name:"createOutput"},Cs={argStruct:Pe,thunk:9,name:"createPartialOutput"};Object.assign(Ve,{...t,type:2,name:"displace",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:W}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:we},{...e,type:7,isRequired:!1,name:"Input",structure:P},{...e,type:7,isRequired:!1,name:"Output",structure:V},{...e,type:7,isRequired:!1,name:"Parameters",structure:C}],methods:[Vs,Cs],template:null},slot:0});const ks=[S,X,Y,E,Z,ee,K,i,s,te,se,D,q,re,p,m,ae,F,ne,M,ie,_,ue,T,oe,le,$,me,B,ye,L,ce,G,be,H,O,d,pe,J,fe,N,we,w,A,U,c,de,j,Se,z,P,he,ge,Q,V,C,Re,qe,Ae,Ue,je,Pe,Ve],Is=Ye(ks),vs=Ve.constructor,xs=(async()=>{const u=new URL("displace-8e09bab0.wasm",import.meta.url).href;return fetch(u)})();Ze(xs,{...Is,writeBack:!0});const{createOutput:$s,createPartialOutput:Es,kernel:Oe,Input:Ks,Output:Bs,Parameters:Ls}=vs;function Ds(u,l,a,r,n={},h={}){if(Array.isArray(n)){const f=n;n={};for(const[b,g]of Object.keys(Oe.inputImages).entries())n[g]=f[b]}const k=new Ks(void 0),I=Object.keys(Oe.inputImages),o=[];let R;for(const f of I){let b=n[f];if(b||(I.length===1&&["data","width","height"].every(g=>!!n[g])?b=n:o.push(f)),k[f]=b,R){if(b.colorSpace!==R)throw new Error(`Input images must all use the same color space: ${R}`)}else R=b.colorSpace}if(o.length>0)throw new Error(`Missing input image${o.length>1?"s":""}: ${o.join(", ")}`);const ze=Es(u,l,a,r,k,h),Ce=f=>{const b=Object.keys(f),g={};for(const ke of b){const{data:{typedArray:v},width:Ie,height:xe}=f[ke];let x;if(typeof ImageData=="function"){const Ee=new Uint8ClampedArray(v.buffer,v.byteOffset,v.byteLength);x=new ImageData(Ee,Ie,r,{colorSpace:R})}else x={data:v,width:Ie,height:xe};if(b.length===1)return x;g[ke]=x}return g};return ze[Symbol.toStringTag]==="Promise"?ze.then(Ce):Ce(ze)}function Fs(){const u={};for(let[l,a]of Object.entries(Oe)){if(l==="parameters"){const r={};for(const[n,h]of Object.entries(a)){const k=r[n]={};for(let[I,o]of Object.entries(h))typeof o=="object"?"string"in o?o=o.string:o=ve(o):typeof o=="function"&&(o=Ms(o.name)),k[I]=o}a=r}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());u[l]=a}return u}function ve(u){const l=[];for(let[a,r]of Object.entries(u))typeof r=="object"&&(r=ve(r)),l[a]=r;return l}function Ms(u){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[u]}onmessage=u=>{const[l,a,...r]=u.data;_s(l,r).then(([n,h])=>{postMessage([l,a,n],{transfer:h})}).catch(n=>{postMessage(["error",a,n])})};async function _s(u,l){switch(u){case"getKernelInfo":return[Fs(...l)];case"createPartialImageData":const r=await Ds(...l),n=[];if("data"in r&&"width"in r&&"height"in r)n.push(r.data.buffer);else for(const h of Object.entries(r))n.push(r.data.buffer);return[r,n];default:throw new Error(`Unknown function: ${u}`)}}
