import{u as St,a as zt,b as ht,c as jt,d as dt,e as wt,f as At,g as Ut,h as Pt,i as xt,j as Rt,k as kt,l as qt,m as It,n as Vt,o as vt,p as Et,q as Kt}from"./index-28027c9b.js";St();kt();qt();zt();ht();It();Vt();vt();jt();dt();wt();At();Kt();Et();Ut();Pt();xt();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},e={type:0,isRequired:!1},s={},j={},R={},d={},y={},f={},F={},$={},_={},p={},L={},B={},Y={},k={},G={},A={},o={},l={},x={},T={},Z={},w={},q={},H={},I={},J={},V={},v={},z={},ee={},te={},h={},se={},re={},ne={},pe={},E={},fe={},ge={},ae={},ie={},Oe={},oe={},Se={},ze={},he={},je={},de={},we={},Ae={},Ue={},Pe={},xe={},Re={},ke={},qe={},Ie={},Ve={},ve={},Ee={},N={},Ke={},Ce={},ue={},Me={},ce={},De={},Te={},Fe={},$e={},_e={},Le={},Be={},Ge={},He={},me={},Je={},Ne={},Qe={},We={},Xe={},Ye={},Ze={},et={},tt={},st={},rt={},nt={},at={},it={},ot={},ut={},ct={},mt={},yt={},bt={},lt={},Ct=new Uint8Array,Mt=new Uint8Array([4]),Dt=new Uint8Array,Tt=new Uint8Array,Ft=new Uint8Array,$t=new Uint8Array([246,4,0,1]),_t=new Uint8Array([70,108,97,109,101,0]),Lt=new Uint8Array([7,5,0,1]),Bt=new Uint8Array([65,100,111,98,101,0]),Gt=new Uint8Array,Ht=new Uint8Array([1]),Jt=new Uint8Array([30,5,0,1]),Nt=new Uint8Array([69,120,99,108,117,115,105,111,110,32,98,108,101,110,100,32,109,111,100,101,0]),Qt=new Uint8Array,Wt=new Uint8Array,Xt=new Uint8Array,Yt=new Uint8Array([0]),Zt=new Uint8Array([1]),pt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),es=new Uint8Array,ts=new Uint8Array,ss=new Uint8Array,rs=new Uint8Array,ns=new Uint8Array([4]),K=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ft=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),as=new Uint8Array,is=new Uint8Array,os=new Uint8Array,us=new Uint8Array,cs=new Uint8Array([4]),ye=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ms=new Uint8Array([27,0]),ys=new Uint8Array([27,0]),bs=new Uint8Array,ls=new Uint8Array,ps=new Uint8Array,fs=new Uint8Array;Object.assign(pe,{slots:{0:E}});Object.assign(E,{structure:y,memory:{array:Ct},const:!0,slots:{0:fe}});Object.assign(fe,{structure:f,memory:{array:Mt},const:!0});Object.assign(ge,{slots:{0:ae,1:ie}});Object.assign(ae,{structure:p,memory:{array:Dt},const:!0,slots:{0:E}});Object.assign(ie,{structure:p,memory:{array:Tt},const:!0,slots:{0:E}});Object.assign(Oe,{slots:{0:oe}});Object.assign(oe,{structure:p,memory:{array:Ft},const:!0,slots:{0:E}});Object.assign(Se,{slots:{0:ze,1:je,2:we,3:Ue,4:xe,5:Re,6:ke}});Object.assign(ze,{structure:d,memory:{array:$t},const:!0,slots:{0:he}});Object.assign(he,{structure:R,memory:{array:_t},reloc:16778486});Object.assign(je,{structure:d,memory:{array:Lt},const:!0,slots:{0:de}});Object.assign(de,{structure:R,memory:{array:Bt},reloc:16778503});Object.assign(we,{structure:y,memory:{array:Gt},const:!0,slots:{0:Ae}});Object.assign(Ae,{structure:f,memory:{array:Ht},const:!0});Object.assign(Ue,{structure:$,memory:{array:Jt},const:!0,slots:{0:Pe}});Object.assign(Pe,{structure:F,memory:{array:Nt},reloc:16778526});Object.assign(xe,{structure:_,memory:{array:Qt},const:!0});Object.assign(Re,{structure:L,memory:{array:Wt},const:!0,slots:{0:ae,1:ie}});Object.assign(ke,{structure:B,memory:{array:Xt},const:!0,slots:{0:oe}});Object.assign(qe,{slots:{0:Ie,1:Ve}});Object.assign(Ie,{structure:l,memory:{array:Yt},const:!0});Object.assign(Ve,{structure:l,memory:{array:Zt},const:!0});Object.assign(ve,{memory:{array:pt},slots:{0:Ee}});Object.assign(Ee,{structure:A,memory:{array:pt,offset:0,length:8},slots:{0:N}});Object.assign(N,{structure:G,memory:{array:es},reloc:0});Object.assign(Ke,{slots:{0:Ce,1:Me,2:De}});Object.assign(Ce,{structure:s,memory:{array:ts},const:!0,slots:{0:ue}});Object.assign(ue,{structure:k});Object.assign(Me,{structure:s,memory:{array:ss},const:!0,slots:{0:ce}});Object.assign(ce,{structure:Z});Object.assign(De,{structure:y,memory:{array:rs},const:!0,slots:{0:Te}});Object.assign(Te,{structure:f,memory:{array:ns},const:!0});Object.assign(Fe,{memory:{array:K},slots:{0:$e,1:Le}});Object.assign($e,{structure:w,memory:{array:K,offset:0,length:24},slots:{0:_e}});Object.assign(_e,{structure:A,memory:{array:K,offset:0,length:8},slots:{0:N}});Object.assign(Le,{structure:w,memory:{array:K,offset:24,length:24},slots:{0:Be}});Object.assign(Be,{structure:A,memory:{array:K,offset:24,length:8},slots:{0:N}});Object.assign(Ge,{memory:{array:ft},slots:{0:He}});Object.assign(He,{structure:I,memory:{array:ft,offset:0,length:8},slots:{0:me}});Object.assign(me,{structure:H,memory:{array:as},reloc:0});Object.assign(Je,{slots:{0:Ne,1:Qe,2:We}});Object.assign(Ne,{structure:s,memory:{array:is},const:!0,slots:{0:ue}});Object.assign(Qe,{structure:s,memory:{array:os},const:!0,slots:{0:ce}});Object.assign(We,{structure:y,memory:{array:us},const:!0,slots:{0:Xe}});Object.assign(Xe,{structure:f,memory:{array:cs},const:!0});Object.assign(Ye,{memory:{array:ye},slots:{0:Ze}});Object.assign(Ze,{structure:J,memory:{array:ye},slots:{0:et}});Object.assign(et,{structure:I,memory:{array:ye,offset:0,length:8},slots:{0:me}});Object.assign(tt,{slots:{0:st}});Object.assign(st,{structure:z,memory:{array:ms},const:!0});Object.assign(rt,{slots:{0:nt}});Object.assign(nt,{structure:h,memory:{array:ys},const:!0});Object.assign(at,{slots:{0:it,1:ut,2:mt,3:bt}});Object.assign(it,{structure:s,memory:{array:bs},const:!0,slots:{0:ot}});Object.assign(ot,{structure:Y});Object.assign(ut,{structure:s,memory:{array:ls},const:!0,slots:{0:ct}});Object.assign(ct,{structure:q});Object.assign(mt,{structure:s,memory:{array:ps},const:!0,slots:{0:yt}});Object.assign(yt,{structure:V});Object.assign(bt,{structure:s,memory:{array:fs},const:!0,slots:{0:lt}});Object.assign(lt,{structure:v});const gs={argStruct:te,thunkId:2,name:"createOutput"},Os={argStruct:re,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...t,name:"type",align:1,instance:{members:[{...e,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(j,{...t,name:"u8",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:j}],methods:[]}});Object.assign(R,{...t,type:1,name:"[5:0]u8",length:5,byteSize:6,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:j}],methods:[]}});Object.assign(d,{...t,type:13,name:"*const [5:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,slot:0,structure:R}],methods:[]}});Object.assign(y,{...t,name:"comptime_int",align:1,instance:{members:[{...e,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:y}],methods:[]}});Object.assign(f,{...t,name:"i8",byteSize:1,align:1,instance:{members:[{...e,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(F,{...t,type:1,name:"[20:0]u8",length:20,byteSize:21,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:j}],methods:[]}});Object.assign($,{...t,type:13,name:"*const [20:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(_,{...t,type:2,name:"@TypeOf(.{})",align:1,isTuple:!0});Object.assign(p,{...t,type:2,name:"Struct3832472641",align:1,instance:{members:[{...e,type:7,slot:0,name:"channels",structure:y}],methods:[],template:pe}});Object.assign(L,{...t,type:2,name:"Struct1092737995",align:1,instance:{members:[{...e,type:7,slot:0,name:"dst",structure:p},{...e,type:7,slot:1,name:"src",structure:p}],methods:[],template:ge}});Object.assign(B,{...t,type:2,name:"Struct1039671274",align:1,instance:{members:[{...e,type:7,slot:0,name:"result",structure:p}],methods:[],template:Oe}});Object.assign(Y,{...t,type:2,name:"exclusion.kernel",align:1,static:{members:[{...e,type:7,slot:0,name:"namespace",structure:d},{...e,type:7,slot:1,name:"vendor",structure:d},{...e,type:7,slot:2,name:"version",structure:y},{...e,type:7,slot:3,name:"description",structure:$},{...e,type:7,slot:4,name:"parameters",structure:_},{...e,type:7,slot:5,name:"inputImages",structure:L},{...e,type:7,slot:6,name:"outputImages",structure:B}],methods:[],template:Se}});Object.assign(k,{...t,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:j}],methods:[]}});Object.assign(G,{...t,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(A,{...t,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:64,byteSize:8,slot:0,structure:G}],methods:[]}});Object.assign(o,{...t,name:"u32",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:o}],methods:[]}});Object.assign(l,{...t,type:11,name:"exclusion.ColorSpace",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:l}],methods:[]},static:{members:[{...e,type:7,slot:0,name:"srgb",structure:l},{...e,type:7,slot:1,name:"display-p3",structure:l}],methods:[],template:qe}});Object.assign(x,{...t,name:"usize",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:x}],methods:[]}});Object.assign(T,{...t,name:"f32",byteSize:4,align:4,instance:{members:[{...e,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:T}],methods:[]}});Object.assign(Z,{...t,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...e,type:4,bitSize:32,byteSize:4,structure:T}],methods:[]}});Object.assign(w,{...t,type:2,name:"exclusion.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:A},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:o},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:o},{...e,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:l},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:x}],methods:[],template:ve},static:{members:[{...e,type:7,slot:0,name:"Pixel",structure:s},{...e,type:7,slot:1,name:"FPixel",structure:s},{...e,type:7,slot:2,name:"channels",structure:y}],methods:[],template:Ke}});Object.assign(q,{...t,type:2,name:"exclusion.KernelInput(u8,exclusion.kernel)",byteSize:48,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:w},{...e,type:5,bitOffset:192,bitSize:192,byteSize:24,slot:1,name:"src",structure:w}],methods:[],template:Fe}});Object.assign(H,{...t,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(I,{...t,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:64,byteSize:8,slot:0,structure:H}],methods:[]}});Object.assign(J,{...t,type:2,name:"exclusion.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:I},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:o},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:o},{...e,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:l},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:x}],methods:[],template:Ge},static:{members:[{...e,type:7,slot:0,name:"Pixel",structure:s},{...e,type:7,slot:1,name:"FPixel",structure:s},{...e,type:7,slot:2,name:"channels",structure:y}],methods:[],template:Je}});Object.assign(V,{...t,type:2,name:"exclusion.KernelOutput(u8,exclusion.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"result",structure:J}],methods:[],template:Ye}});Object.assign(v,{...t,type:2,name:"exclusion.KernelParameters(exclusion.kernel)",align:1});Object.assign(z,{...t,type:10,name:"ErrorSet1719452960",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:z}],methods:[]},static:{members:[{...e,type:7,slot:0,name:"OutOfMemory",structure:z}],methods:[],template:tt}});Object.assign(ee,{...t,type:9,name:"ErrorSet1719452960!exclusion.KernelOutput(u8,exclusion.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:V},{...e,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:z}],methods:[]}});Object.assign(te,{...t,type:5,name:"createOutput",byteSize:84,align:4,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:o},{...e,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:o},{...e,type:5,isRequired:!0,bitOffset:64,bitSize:384,byteSize:48,slot:0,name:"2",structure:q},{...e,type:5,isRequired:!0,bitOffset:672,bitSize:0,byteSize:0,slot:1,name:"3",structure:v},{...e,type:5,isRequired:!0,bitOffset:448,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ee}],methods:[]}});Object.assign(h,{...t,type:10,name:"ErrorSet1021808353",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:h}],methods:[]},static:{members:[{...e,type:7,slot:0,name:"OutOfMemory",structure:h}],methods:[],template:rt}});Object.assign(se,{...t,type:9,name:"ErrorSet1021808353!exclusion.KernelOutput(u8,exclusion.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:V},{...e,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:h}],methods:[]}});Object.assign(re,{...t,type:5,name:"createPartialOutput",byteSize:92,align:4,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:o},{...e,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:o},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:o},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:o},{...e,type:5,isRequired:!0,bitOffset:128,bitSize:384,byteSize:48,slot:0,name:"4",structure:q},{...e,type:5,isRequired:!0,bitOffset:736,bitSize:0,byteSize:0,slot:1,name:"5",structure:v},{...e,type:5,isRequired:!0,bitOffset:512,bitSize:224,byteSize:28,slot:2,name:"retval",structure:se}],methods:[]}});Object.assign(ne,{...t,type:2,name:"exclusion",align:1,static:{members:[{...e,type:7,slot:0,name:"kernel",structure:s},{...e,type:7,slot:1,name:"Input",structure:s},{...e,type:7,slot:2,name:"Output",structure:s},{...e,type:7,slot:3,name:"Parameters",structure:s}],methods:[gs,Os],template:at}});const Ss=[s,j,R,d,y,f,F,$,_,p,L,B,Y,k,G,A,o,l,x,T,Z,w,q,H,I,J,V,v,z,ee,te,h,se,re,ne],zs=ne,hs={runtimeSafety:!1,littleEndian:!0},Q=Rt();Q.getSpecialExports();Q.recreateStructures(Ss,hs);const js=(async()=>{const a=new URL("exclusion-6bf88515.wasm",import.meta.url).href;return fetch(a)})();Q.loadModule(js);Q.linkVariables(!0);const{constructor:ds}=zs,{createPartialOutput:ws,Input:As,kernel:X}=ds;function Us(a,u,i,n,r={},g={}){const O=[];for(const[m]of X.inputImages)O.push(m);const U=[];for(const[m]of X.outputImages)U.push(m);if(Array.isArray(r)){const m=r;r={};for(const[b,S]of O.entries())r[S]=m[b]}const c=new As(void 0),C=[];let P;for(const m of O){let b=r[m];if(b||(O.length===1&&["data","width","height"].every(S=>!!r[S])?b=r:C.push(m)),c[m]=b,P){if(b.colorSpace!==P)throw new Error(`Input images must all use the same color space: ${P}`)}else P=b.colorSpace}if(C.length>0)throw new Error(`Missing input image${C.length>1?"s":""}: ${C.join(", ")}`);const W=ws(a,u,i,n,c,g),be=m=>{const b={};for(const S of U){const{data:{typedArray:M},width:le,height:gt}=m[S];let D;if(typeof ImageData=="function"){const Ot=new Uint8ClampedArray(M.buffer,M.byteOffset,M.byteLength);D=new ImageData(Ot,le,n,{colorSpace:P})}else D={data:M,width:le,height:gt};if(U.length===1)return D;b[S]=D}return b};return W[Symbol.toStringTag]==="Promise"?W.then(be):be(W)}function Ps(){const a={};for(let[u,i]of X){if(u==="parameters"){const n={};for(const[r,g]of i){const O=n[r]={};for(let[U,c]of g)typeof c=="object"?c=c.string??c.valueOf():typeof c=="function"&&(c=xs(c.name)),O[U]=c}i=n}else typeof i=="object"&&(i=i.string??i.valueOf());a[u]=i}return a}function xs(a){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[a]}onmessage=async a=>{if(!Array.isArray(a.data))return;const[u,i,...n]=a.data;try{const[r,g]=await Rs(u,n);postMessage([u,i,r],{transfer:g})}catch(r){postMessage(["error",i,r])}};async function Rs(a,u){switch(a){case"getKernelInfo":return[Ps(...u)];case"createPartialImageData":const n=await Us(...u),r=[];if("data"in n&&"width"in n&&"height"in n)r.push(n.data.buffer);else for(const g of Object.entries(n))r.push(n.data.buffer);return[n,r];default:throw new Error(`Unknown function: ${a}`)}}postMessage("ready");
