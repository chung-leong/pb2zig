import{u as zt,a as ht,b as jt,c as wt,d as At,e as Ut,f as Pt,g as Rt,h as kt,i as qt,j as It,k as Vt,l as vt,m as Et,n as xt,o as Kt,p as Ct,q as Mt}from"./index-28027c9b.js";zt();Vt();vt();ht();jt();Et();xt();Kt();wt();At();Ut();Pt();Mt();Ct();Rt();kt();qt();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},e={type:0,isRequired:!1},s={},g={},D={},T={},F={},$={},y={},f={},_={},L={},B={},p={},G={},H={},ee={},R={},J={},w={},o={},l={},P={},M={},te={},j={},k={},N={},q={},Q={},I={},V={},z={},se={},re={},h={},ne={},ae={},ie={},fe={},v={},Oe={},Se={},oe={},ce={},de={},ue={},ze={},he={},je={},we={},Ae={},Ue={},Pe={},Re={},ke={},qe={},Ie={},Ve={},ve={},Ee={},xe={},Ke={},Ce={},W={},Me={},De={},me={},Te={},ye={},Fe={},$e={},_e={},Le={},Be={},Ge={},He={},Je={},Ne={},be={},Qe={},We={},Xe={},Ye={},Ze={},et={},tt={},st={},rt={},nt={},at={},it={},ot={},ct={},ut={},mt={},yt={},bt={},lt={},pt={},gt={},Dt=new Uint8Array,Tt=new Uint8Array([4]),Ft=new Uint8Array,$t=new Uint8Array,_t=new Uint8Array,Lt=new Uint8Array([2,5,0,1]),Bt=new Uint8Array([99,111,109,46,113,117,97,115,105,109,111,110,100,111,0]),Gt=new Uint8Array([28,5,0,1]),Ht=new Uint8Array([81,117,97,115,105,109,111,110,100,111,0]),Jt=new Uint8Array,Nt=new Uint8Array([1]),Qt=new Uint8Array([56,5,0,1]),Wt=new Uint8Array([67,111,108,111,114,32,66,108,101,110,100,109,111,100,101,0]),Xt=new Uint8Array,Yt=new Uint8Array,Zt=new Uint8Array,es=new Uint8Array([0]),ts=new Uint8Array([1]),ft=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ss=new Uint8Array,rs=new Uint8Array,ns=new Uint8Array,as=new Uint8Array,is=new Uint8Array([4]),E=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ot=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),os=new Uint8Array,cs=new Uint8Array,us=new Uint8Array,ms=new Uint8Array,ys=new Uint8Array([4]),le=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),bs=new Uint8Array([27,0]),ls=new Uint8Array([27,0]),ps=new Uint8Array,gs=new Uint8Array,fs=new Uint8Array,Os=new Uint8Array;Object.assign(fe,{slots:{0:v}});Object.assign(v,{structure:y,memory:{array:Dt},const:!0,slots:{0:Oe}});Object.assign(Oe,{structure:f,memory:{array:Tt},const:!0});Object.assign(Se,{slots:{0:oe,1:ce}});Object.assign(oe,{structure:p,memory:{array:Ft},const:!0,slots:{0:v}});Object.assign(ce,{structure:p,memory:{array:$t},const:!0,slots:{0:v}});Object.assign(de,{slots:{0:ue}});Object.assign(ue,{structure:p,memory:{array:_t},const:!0,slots:{0:v}});Object.assign(ze,{slots:{0:he,1:we,2:Ue,3:Re,4:qe,5:Ie,6:Ve}});Object.assign(he,{structure:T,memory:{array:Lt},const:!0,slots:{0:je}});Object.assign(je,{structure:D,memory:{array:Bt},reloc:16778498});Object.assign(we,{structure:$,memory:{array:Gt},const:!0,slots:{0:Ae}});Object.assign(Ae,{structure:F,memory:{array:Ht},reloc:16778524});Object.assign(Ue,{structure:y,memory:{array:Jt},const:!0,slots:{0:Pe}});Object.assign(Pe,{structure:f,memory:{array:Nt},const:!0});Object.assign(Re,{structure:L,memory:{array:Qt},const:!0,slots:{0:ke}});Object.assign(ke,{structure:_,memory:{array:Wt},reloc:16778552});Object.assign(qe,{structure:B,memory:{array:Xt},const:!0});Object.assign(Ie,{structure:G,memory:{array:Yt},const:!0,slots:{0:oe,1:ce}});Object.assign(Ve,{structure:H,memory:{array:Zt},const:!0,slots:{0:ue}});Object.assign(ve,{slots:{0:Ee,1:xe}});Object.assign(Ee,{structure:l,memory:{array:es},const:!0});Object.assign(xe,{structure:l,memory:{array:ts},const:!0});Object.assign(Ke,{memory:{array:ft},slots:{0:Ce}});Object.assign(Ce,{structure:w,memory:{array:ft,offset:0,length:8},slots:{0:W}});Object.assign(W,{structure:J,memory:{array:ss},reloc:0});Object.assign(Me,{slots:{0:De,1:Te,2:Fe}});Object.assign(De,{structure:s,memory:{array:rs},const:!0,slots:{0:me}});Object.assign(me,{structure:R});Object.assign(Te,{structure:s,memory:{array:ns},const:!0,slots:{0:ye}});Object.assign(ye,{structure:te});Object.assign(Fe,{structure:y,memory:{array:as},const:!0,slots:{0:$e}});Object.assign($e,{structure:f,memory:{array:is},const:!0});Object.assign(_e,{memory:{array:E},slots:{0:Le,1:Ge}});Object.assign(Le,{structure:j,memory:{array:E,offset:0,length:24},slots:{0:Be}});Object.assign(Be,{structure:w,memory:{array:E,offset:0,length:8},slots:{0:W}});Object.assign(Ge,{structure:j,memory:{array:E,offset:24,length:24},slots:{0:He}});Object.assign(He,{structure:w,memory:{array:E,offset:24,length:8},slots:{0:W}});Object.assign(Je,{memory:{array:Ot},slots:{0:Ne}});Object.assign(Ne,{structure:q,memory:{array:Ot,offset:0,length:8},slots:{0:be}});Object.assign(be,{structure:N,memory:{array:os},reloc:0});Object.assign(Qe,{slots:{0:We,1:Xe,2:Ye}});Object.assign(We,{structure:s,memory:{array:cs},const:!0,slots:{0:me}});Object.assign(Xe,{structure:s,memory:{array:us},const:!0,slots:{0:ye}});Object.assign(Ye,{structure:y,memory:{array:ms},const:!0,slots:{0:Ze}});Object.assign(Ze,{structure:f,memory:{array:ys},const:!0});Object.assign(et,{memory:{array:le},slots:{0:tt}});Object.assign(tt,{structure:Q,memory:{array:le},slots:{0:st}});Object.assign(st,{structure:q,memory:{array:le,offset:0,length:8},slots:{0:be}});Object.assign(rt,{slots:{0:nt}});Object.assign(nt,{structure:z,memory:{array:bs},const:!0});Object.assign(at,{slots:{0:it}});Object.assign(it,{structure:h,memory:{array:ls},const:!0});Object.assign(ot,{slots:{0:ct,1:mt,2:bt,3:pt}});Object.assign(ct,{structure:s,memory:{array:ps},const:!0,slots:{0:ut}});Object.assign(ut,{structure:ee});Object.assign(mt,{structure:s,memory:{array:gs},const:!0,slots:{0:yt}});Object.assign(yt,{structure:k});Object.assign(bt,{structure:s,memory:{array:fs},const:!0,slots:{0:lt}});Object.assign(lt,{structure:I});Object.assign(pt,{structure:s,memory:{array:Os},const:!0,slots:{0:gt}});Object.assign(gt,{structure:V});const Ss={argStruct:re,thunkId:2,name:"createOutput"},ds={argStruct:ae,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...t,name:"type",align:1,instance:{members:[{...e,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(g,{...t,name:"u8",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(D,{...t,type:1,name:"[14:0]u8",length:14,byteSize:15,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(T,{...t,type:13,name:"*const [14:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,slot:0,structure:D}],methods:[]}});Object.assign(F,{...t,type:1,name:"[10:0]u8",length:10,byteSize:11,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign($,{...t,type:13,name:"*const [10:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(y,{...t,name:"comptime_int",align:1,instance:{members:[{...e,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:y}],methods:[]}});Object.assign(f,{...t,name:"i8",byteSize:1,align:1,instance:{members:[{...e,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(_,{...t,type:1,name:"[15:0]u8",length:15,byteSize:16,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(L,{...t,type:13,name:"*const [15:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[]}});Object.assign(B,{...t,type:2,name:"@TypeOf(.{})",align:1,isTuple:!0});Object.assign(p,{...t,type:2,name:"Struct3832472641",align:1,instance:{members:[{...e,type:7,slot:0,name:"channels",structure:y}],methods:[],template:fe}});Object.assign(G,{...t,type:2,name:"Struct842024272",align:1,instance:{members:[{...e,type:7,slot:0,name:"src1",structure:p},{...e,type:7,slot:1,name:"src2",structure:p}],methods:[],template:Se}});Object.assign(H,{...t,type:2,name:"Struct172100005",align:1,instance:{members:[{...e,type:7,slot:0,name:"dst",structure:p}],methods:[],template:de}});Object.assign(ee,{...t,type:2,name:"blendmode-color.kernel",align:1,static:{members:[{...e,type:7,slot:0,name:"namespace",structure:T},{...e,type:7,slot:1,name:"vendor",structure:$},{...e,type:7,slot:2,name:"version",structure:y},{...e,type:7,slot:3,name:"description",structure:L},{...e,type:7,slot:4,name:"parameters",structure:B},{...e,type:7,slot:5,name:"inputImages",structure:G},{...e,type:7,slot:6,name:"outputImages",structure:H}],methods:[],template:ze}});Object.assign(R,{...t,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(J,{...t,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(w,{...t,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:64,byteSize:8,slot:0,structure:J}],methods:[]}});Object.assign(o,{...t,name:"u32",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:o}],methods:[]}});Object.assign(l,{...t,type:11,name:"blendmode-color.ColorSpace",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:l}],methods:[]},static:{members:[{...e,type:7,slot:0,name:"srgb",structure:l},{...e,type:7,slot:1,name:"display-p3",structure:l}],methods:[],template:ve}});Object.assign(P,{...t,name:"usize",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(M,{...t,name:"f32",byteSize:4,align:4,instance:{members:[{...e,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:M}],methods:[]}});Object.assign(te,{...t,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...e,type:4,bitSize:32,byteSize:4,structure:M}],methods:[]}});Object.assign(j,{...t,type:2,name:"blendmode-color.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:w},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:o},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:o},{...e,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:l},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:Ke},static:{members:[{...e,type:7,slot:0,name:"Pixel",structure:s},{...e,type:7,slot:1,name:"FPixel",structure:s},{...e,type:7,slot:2,name:"channels",structure:y}],methods:[],template:Me}});Object.assign(k,{...t,type:2,name:"blendmode-color.KernelInput(u8,blendmode-color.kernel)",byteSize:48,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src1",structure:j},{...e,type:5,bitOffset:192,bitSize:192,byteSize:24,slot:1,name:"src2",structure:j}],methods:[],template:_e}});Object.assign(N,{...t,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(q,{...t,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:64,byteSize:8,slot:0,structure:N}],methods:[]}});Object.assign(Q,{...t,type:2,name:"blendmode-color.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:q},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:o},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:o},{...e,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:l},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:Je},static:{members:[{...e,type:7,slot:0,name:"Pixel",structure:s},{...e,type:7,slot:1,name:"FPixel",structure:s},{...e,type:7,slot:2,name:"channels",structure:y}],methods:[],template:Qe}});Object.assign(I,{...t,type:2,name:"blendmode-color.KernelOutput(u8,blendmode-color.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:Q}],methods:[],template:et}});Object.assign(V,{...t,type:2,name:"blendmode-color.KernelParameters(blendmode-color.kernel)",align:1});Object.assign(z,{...t,type:10,name:"ErrorSet1815852879",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:z}],methods:[]},static:{members:[{...e,type:7,slot:0,name:"OutOfMemory",structure:z}],methods:[],template:rt}});Object.assign(se,{...t,type:9,name:"ErrorSet1815852879!blendmode-color.KernelOutput(u8,blendmode-color.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:I},{...e,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:z}],methods:[]}});Object.assign(re,{...t,type:5,name:"createOutput",byteSize:84,align:4,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:o},{...e,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:o},{...e,type:5,isRequired:!0,bitOffset:64,bitSize:384,byteSize:48,slot:0,name:"2",structure:k},{...e,type:5,isRequired:!0,bitOffset:672,bitSize:0,byteSize:0,slot:1,name:"3",structure:V},{...e,type:5,isRequired:!0,bitOffset:448,bitSize:224,byteSize:28,slot:2,name:"retval",structure:se}],methods:[]}});Object.assign(h,{...t,type:10,name:"ErrorSet4172880559",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:h}],methods:[]},static:{members:[{...e,type:7,slot:0,name:"OutOfMemory",structure:h}],methods:[],template:at}});Object.assign(ne,{...t,type:9,name:"ErrorSet4172880559!blendmode-color.KernelOutput(u8,blendmode-color.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:I},{...e,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:h}],methods:[]}});Object.assign(ae,{...t,type:5,name:"createPartialOutput",byteSize:92,align:4,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:o},{...e,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:o},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:o},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:o},{...e,type:5,isRequired:!0,bitOffset:128,bitSize:384,byteSize:48,slot:0,name:"4",structure:k},{...e,type:5,isRequired:!0,bitOffset:736,bitSize:0,byteSize:0,slot:1,name:"5",structure:V},{...e,type:5,isRequired:!0,bitOffset:512,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ne}],methods:[]}});Object.assign(ie,{...t,type:2,name:"blendmode-color",align:1,static:{members:[{...e,type:7,slot:0,name:"kernel",structure:s},{...e,type:7,slot:1,name:"Input",structure:s},{...e,type:7,slot:2,name:"Output",structure:s},{...e,type:7,slot:3,name:"Parameters",structure:s}],methods:[Ss,ds],template:ot}});const zs=[s,g,D,T,F,$,y,f,_,L,B,p,G,H,ee,R,J,w,o,l,P,M,te,j,k,N,q,Q,I,V,z,se,re,h,ne,ae,ie],hs=ie,js={runtimeSafety:!1,littleEndian:!0},X=It();X.getSpecialExports();X.recreateStructures(zs,js);const ws=(async()=>{const a=new URL("blendmode-color-8e8c7c7c.wasm",import.meta.url).href;return fetch(a)})();X.loadModule(ws);X.linkVariables(!0);const{constructor:As}=hs,{createPartialOutput:Us,Input:Ps,kernel:Z}=As;function Rs(a,c,i,n,r={},O={}){const S=[];for(const[m]of Z.inputImages)S.push(m);const A=[];for(const[m]of Z.outputImages)A.push(m);if(Array.isArray(r)){const m=r;r={};for(const[b,d]of S.entries())r[d]=m[b]}const u=new Ps(void 0),x=[];let U;for(const m of S){let b=r[m];if(b||(S.length===1&&["data","width","height"].every(d=>!!r[d])?b=r:x.push(m)),u[m]=b,U){if(b.colorSpace!==U)throw new Error(`Input images must all use the same color space: ${U}`)}else U=b.colorSpace}if(x.length>0)throw new Error(`Missing input image${x.length>1?"s":""}: ${x.join(", ")}`);const Y=Us(a,c,i,n,u,O),pe=m=>{const b={};for(const d of A){const{data:{typedArray:K},width:ge,height:St}=m[d];let C;if(typeof ImageData=="function"){const dt=new Uint8ClampedArray(K.buffer,K.byteOffset,K.byteLength);C=new ImageData(dt,ge,n,{colorSpace:U})}else C={data:K,width:ge,height:St};if(A.length===1)return C;b[d]=C}return b};return Y[Symbol.toStringTag]==="Promise"?Y.then(pe):pe(Y)}function ks(){const a={};for(let[c,i]of Z){if(c==="parameters"){const n={};for(const[r,O]of i){const S=n[r]={};for(let[A,u]of O)typeof u=="object"?u=u.string??u.valueOf():typeof u=="function"&&(u=qs(u.name)),S[A]=u}i=n}else typeof i=="object"&&(i=i.string??i.valueOf());a[c]=i}return a}function qs(a){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[a]}onmessage=async a=>{if(!Array.isArray(a.data))return;const[c,i,...n]=a.data;try{const[r,O]=await Is(c,n);postMessage([c,i,r],{transfer:O})}catch(r){postMessage(["error",i,r])}};async function Is(a,c){switch(a){case"getKernelInfo":return[ks(...c)];case"createPartialImageData":const n=await Rs(...c),r=[];if("data"in n&&"width"in n&&"height"in n)r.push(n.data.buffer);else for(const O of Object.entries(n))r.push(n.data.buffer);return[n,r];default:throw new Error(`Unknown function: ${a}`)}}postMessage("ready");
