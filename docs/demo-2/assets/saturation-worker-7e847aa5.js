import{u as be,a as pe,b as fe,c as Se,d as de,e as he,f as ge,g as ze,h as Oe,i as we,j as Re,k as qe,l as je,m as Ae,n as Ue,o as Pe,p as ke,q as Ie}from"./index-ccb3eb7b.js";be();pe();fe();Se();de();he();ge();ze();Oe();we();Re();qe();je();Ae();Ue();Pe();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},g={},R={},q={},S={},m={},y={},$={},B={},x={},L={},K={},z={},b={},G={},D={},H={},F={},Z={},O={},j={},A={},o={},J={},U={},M={},N={},d={},P={},Q={},W={},_={},k={},I={},ee={},te={},se={},re={},ae={},ne={},ie={};Object.assign(g,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:5});Object.assign(R,{...t,type:1,name:"[5:0]u8",length:5,byteSize:6,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:4});Object.assign(q,{...t,type:11,name:"*const [5:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:R}],methods:[],template:null},slot:3});Object.assign(S,{...t,type:11,name:"*const *const [5:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:q}],methods:[],template:null},slot:2});Object.assign(m,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[],template:null},slot:7});Object.assign(y,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:m}],methods:[],template:null},slot:6});Object.assign($,{...t,type:1,name:"[21:0]u8",length:21,byteSize:22,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:10});Object.assign(B,{...t,type:11,name:"*const [21:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[],template:null},slot:9});Object.assign(x,{...t,type:11,name:"*const *const [21:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:B}],methods:[],template:null},slot:8});const Ve=new Uint8Array([]);Object.assign(L,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Ve}}},slot:12});Object.assign(K,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[],template:null},slot:11});const ve=new Uint8Array([]),Ce=new Uint8Array([208,251,15,0]),Ee=new Uint8Array([4,0,0,0]);Object.assign(z,{...t,type:2,name:"Struct0007",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:y}],methods:[],template:{memory:{array:ve},slots:{0:{structure:y,memory:{array:Ce},slots:{0:{structure:m,memory:{array:Ee}}}}}}},slot:34});Object.assign(b,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:z}],methods:[],template:null},slot:33});const xe=new Uint8Array([]),Ke=new Uint8Array([170,170,170,170]),h=new Uint8Array([]),De=new Uint8Array([170,170,170,170]);Object.assign(G,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:b},{...e,type:8,isRequired:!1,slot:1,name:"src",structure:b}],methods:[],template:{memory:{array:xe},slots:{0:{structure:b,memory:{array:Ke},slots:{0:{structure:z,memory:{array:h},address:-1431655766}}},1:{structure:b,memory:{array:De},slots:{0:{structure:z,memory:{array:h},address:-1431655766}}}}}},slot:14});Object.assign(D,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:G}],methods:[],template:null},slot:13});const Fe=new Uint8Array([]),Me=new Uint8Array([170,170,170,170]);Object.assign(H,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"result",structure:b}],methods:[],template:{memory:{array:Fe},slots:{0:{structure:b,memory:{array:Me},slots:{0:{structure:z,memory:{array:h},address:-1431655766}}}}}},slot:16});Object.assign(F,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[],template:null},slot:15});const _e=new Uint8Array([]),Te=new Uint8Array([]),$e=new Uint8Array([220,252,15,0]),Be=new Uint8Array([35,35,16,0]),Le=new Uint8Array([70,108,97,109,101,0]),Ge=new Uint8Array([20,253,15,0]),He=new Uint8Array([29,35,16,0]),Je=new Uint8Array([65,100,111,98,101,0]),Ne=new Uint8Array([76,253,15,0]),Qe=new Uint8Array([1,0,0,0]),We=new Uint8Array([132,253,15,0]),Xe=new Uint8Array([7,35,16,0]),Ye=new Uint8Array([83,97,116,117,114,97,116,105,111,110,32,98,108,101,110,100,32,109,111,100,101,0]),Ze=new Uint8Array([170,170,170,170]),et=new Uint8Array([170,170,170,170]),tt=new Uint8Array([170,170,170,170]);Object.assign(Z,{...t,type:2,name:"saturation.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:_e}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:S},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:S},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:y},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:x},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:K},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:D},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:F}],methods:[],template:{memory:{array:Te},slots:{0:{structure:S,memory:{array:$e},slots:{0:{structure:q,memory:{array:Be},slots:{0:{structure:R,memory:{array:Le},address:1057571}}}}},1:{structure:S,memory:{array:Ge},slots:{0:{structure:q,memory:{array:He},slots:{0:{structure:R,memory:{array:Je},address:1057565}}}}},2:{structure:y,memory:{array:Ne},slots:{0:{structure:m,memory:{array:Qe}}}},3:{structure:x,memory:{array:We},slots:{0:{structure:B,memory:{array:Xe},slots:{0:{structure:$,memory:{array:Ye},address:1057543}}}}},4:{structure:K,memory:{array:Ze},slots:{0:{structure:L,memory:{array:h},address:-1431655766}}},5:{structure:D,memory:{array:et},slots:{0:{structure:G,memory:{array:h},address:-1431655766}}},6:{structure:F,memory:{array:tt},slots:{0:{structure:H,memory:{array:h},address:-1431655766}}}}}},slot:1});Object.assign(O,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:21});Object.assign(j,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:20});Object.assign(A,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:j}],methods:[],template:null},slot:19});Object.assign(o,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:o}],methods:[],template:null},slot:22});const st=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(J,{...t,type:9,name:"saturation.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:m},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:m}],methods:[],template:{memory:{array:st}}},slot:23});Object.assign(U,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:U}],methods:[],template:null},slot:24});Object.assign(M,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:M}],methods:[],template:null},slot:38});Object.assign(N,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:M}],methods:[],template:null},slot:35});const rt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),at=new Uint8Array([]),nt=new Uint8Array([184,250,15,0]),it=new Uint8Array([4,0,0,0]);Object.assign(d,{...t,type:2,name:"saturation.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:A},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:o},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:o},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:J},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:{memory:{array:rt}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:N},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:y}],methods:[],template:{memory:{array:at},slots:{0:{structure:y,memory:{array:nt},slots:{0:{structure:m,memory:{array:it}}}}}}},slot:18});const ut=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ot=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),lt=new Uint8Array([0,0,0,0,0,0,0,0]),T=new Uint8Array([]),mt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),yt=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(P,{...t,type:2,name:"saturation.KernelInput(u8,saturation.kernel)",length:1,byteSize:48,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:d},{...e,type:6,isRequired:!1,bitOffset:192,bitSize:192,byteSize:24,slot:1,name:"src",structure:d}],methods:[],template:{memory:{array:ut},slots:{0:{structure:d,memory:{array:ot},slots:{0:{structure:A,memory:{array:lt},slots:{0:{structure:j,memory:{array:T}}}}}},1:{structure:d,memory:{array:mt},slots:{0:{structure:A,memory:{array:yt},slots:{0:{structure:j,memory:{array:T}}}}}}}}},slot:17});Object.assign(Q,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:20});Object.assign(W,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Q}],methods:[],template:null},slot:27});const ct=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),bt=new Uint8Array([]),pt=new Uint8Array([120,251,15,0]),ft=new Uint8Array([4,0,0,0]);Object.assign(_,{...t,type:2,name:"saturation.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:W},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:o},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:o},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:J},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:{memory:{array:ct}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:N},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:y}],methods:[],template:{memory:{array:bt},slots:{0:{structure:y,memory:{array:pt},slots:{0:{structure:m,memory:{array:ft}}}}}}},slot:26});const St=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),dt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ht=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(k,{...t,type:2,name:"saturation.KernelOutput(u8,saturation.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"result",structure:_}],methods:[],template:{memory:{array:St},slots:{0:{structure:_,memory:{array:dt},slots:{0:{structure:W,memory:{array:ht},slots:{0:{structure:Q,memory:{array:T}}}}}}}}},slot:25});const gt=new Uint8Array([]);Object.assign(I,{...t,type:2,name:"saturation.KernelParameters(saturation.kernel)",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:gt}}},slot:28});Object.assign(ee,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(saturation.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:36});Object.assign(te,{...t,type:7,name:"ErrorSet0000!saturation.KernelOutput(u8,saturation.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:k},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:ee}],methods:[],template:null},slot:31});Object.assign(se,{...t,type:3,name:"createOutput",length:1,byteSize:84,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"0",structure:o},{...e,type:3,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"1",structure:o},{...e,type:6,bitOffset:64,bitSize:384,byteSize:48,slot:2,name:"2",structure:P},{...e,type:6,bitOffset:672,bitSize:0,byteSize:0,slot:3,name:"3",structure:I},{...e,type:6,bitOffset:448,bitSize:224,byteSize:28,slot:4,name:"retval",structure:te}],methods:[],template:null},slot:29});Object.assign(re,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(saturation.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:37});Object.assign(ae,{...t,type:7,name:"ErrorSet0001!saturation.KernelOutput(u8,saturation.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:k},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:re}],methods:[],template:null},slot:32});Object.assign(ne,{...t,type:3,name:"createPartialOutput",length:1,byteSize:92,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"0",structure:o},{...e,type:3,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"1",structure:o},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:2,name:"2",structure:o},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:3,name:"3",structure:o},{...e,type:6,bitOffset:128,bitSize:384,byteSize:48,slot:4,name:"4",structure:P},{...e,type:6,bitOffset:736,bitSize:0,byteSize:0,slot:5,name:"5",structure:I},{...e,type:6,bitOffset:512,bitSize:224,byteSize:28,slot:6,name:"retval",structure:ae}],methods:[],template:null},slot:30});const zt={argStruct:se,thunk:6,name:"createOutput"},Ot={argStruct:ne,thunk:2,name:"createPartialOutput"};Object.assign(ie,{...t,type:2,name:"saturation",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:T}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:Z},{...e,type:7,isRequired:!1,name:"Input",structure:P},{...e,type:7,isRequired:!1,name:"Output",structure:k},{...e,type:7,isRequired:!1,name:"Parameters",structure:I}],methods:[zt,Ot],template:null},slot:0});const wt=[g,R,q,S,m,y,$,B,x,L,K,z,b,G,D,H,F,Z,O,j,A,o,J,U,M,N,d,P,Q,W,_,k,I,ee,te,se,re,ae,ne,ie],Rt=ke(wt),qt=ie.constructor,jt=(async()=>{const n=new URL("saturation-7350ee27.wasm",import.meta.url).href;return fetch(n)})();Ie(jt,{...Rt,writeBack:!0});const{createOutput:Ct,createPartialOutput:At,kernel:Y,Input:Ut,Output:Et,Parameters:xt}=qt;function Pt(n,u,r,s,a={},p={}){if(Array.isArray(a)){const c=a;a={};for(const[l,f]of Object.keys(Y.inputImages).entries())a[f]=c[l]}const V=new Ut(void 0),v=Object.keys(Y.inputImages),i=[];let w;for(const c of v){let l=a[c];if(l||(v.length===1&&["data","width","height"].every(f=>!!a[f])?l=a:i.push(c)),V[c]=l,w){if(l.colorSpace!==w)throw new Error(`Input images must all use the same color space: ${w}`)}else w=l.colorSpace}if(i.length>0)throw new Error(`Missing input image${i.length>1?"s":""}: ${i.join(", ")}`);const X=At(n,u,r,s,V,p),ue=c=>{const l=Object.keys(c),f={};for(const oe of l){const{data:{typedArray:C},width:le,height:ye}=c[oe];let E;if(typeof ImageData=="function"){const ce=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);E=new ImageData(ce,le,s,{colorSpace:w})}else E={data:C,width:le,height:ye};if(l.length===1)return E;f[oe]=E}return f};return X[Symbol.toStringTag]==="Promise"?X.then(ue):ue(X)}function kt(){const n={};for(let[u,r]of Object.entries(Y)){if(u==="parameters"){const s={};for(const[a,p]of Object.entries(r)){const V=s[a]={};for(let[v,i]of Object.entries(p))typeof i=="object"?"string"in i?i=i.string:i=me(i):typeof i=="function"&&(i=It(i.name)),V[v]=i}r=s}else typeof r=="object"&&("string"in r?r=r.string:r=r.valueOf());n[u]=r}return n}function me(n){const u=[];for(let[r,s]of Object.entries(n))typeof s=="object"&&(s=me(s)),u[r]=s;return u}function It(n){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[n]}onmessage=n=>{const[u,r,...s]=n.data;Vt(u,s).then(([a,p])=>{postMessage([u,r,a],{transfer:p})}).catch(a=>{postMessage(["error",r,a])})};async function Vt(n,u){switch(n){case"getKernelInfo":return[kt(...u)];case"createPartialImageData":const s=await Pt(...u),a=[];if("data"in s&&"width"in s&&"height"in s)a.push(s.data.buffer);else for(const p of Object.entries(s))a.push(s.data.buffer);return[s,a];default:throw new Error(`Unknown function: ${n}`)}}
