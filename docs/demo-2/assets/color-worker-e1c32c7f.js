import{u as Se,a as ze,b as he,c as je,d as de,e as we,f as Ae,g as Ue,h as Pe,i as Re,j as ke,k as qe,l as Ie,m as Ve,n as ve,o as Ee,p as xe,q as Ke}from"./index-28027c9b.js";Se();qe();Ie();ze();he();Ve();ve();Ee();je();de();we();Ae();Ke();xe();Ue();Pe();Re();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},j={},k={},d={},y={},f={},F={},$={},_={},p={},L={},B={},Y={},q={},G={},A={},o={},l={},R={},T={},Z={},w={},I={},H={},V={},J={},v={},E={},z={},tt={},et={},h={},st={},rt={},nt={},pt={},x={},ft={},gt={},at={},it={},Ot={},ot={},St={},zt={},ht={},jt={},dt={},wt={},At={},Ut={},Pt={},Rt={},kt={},qt={},It={},Vt={},vt={},Et={},xt={},N={},Kt={},Ct={},ct={},Mt={},ut={},Dt={},Tt={},Ft={},$t={},_t={},Lt={},Bt={},Gt={},Ht={},mt={},Jt={},Nt={},Qt={},Wt={},Xt={},Yt={},Zt={},te={},ee={},se={},re={},ne={},ae={},ie={},oe={},ce={},ue={},me={},ye={},be={},le={},Ce=new Uint8Array,Me=new Uint8Array([4]),De=new Uint8Array,Te=new Uint8Array,Fe=new Uint8Array,$e=new Uint8Array([238,4,0,1]),_e=new Uint8Array([70,108,97,109,101,0]),Le=new Uint8Array([255,4,0,1]),Be=new Uint8Array([65,100,111,98,101,0]),Ge=new Uint8Array,He=new Uint8Array([1]),Je=new Uint8Array([22,5,0,1]),Ne=new Uint8Array([67,111,108,111,114,32,98,108,101,110,100,32,109,111,100,101,0]),Qe=new Uint8Array,We=new Uint8Array,Xe=new Uint8Array,Ye=new Uint8Array([0]),Ze=new Uint8Array([1]),pe=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ts=new Uint8Array,es=new Uint8Array,ss=new Uint8Array,rs=new Uint8Array,ns=new Uint8Array([4]),K=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),fe=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),as=new Uint8Array,is=new Uint8Array,os=new Uint8Array,cs=new Uint8Array,us=new Uint8Array([4]),yt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ms=new Uint8Array([27,0]),ys=new Uint8Array([27,0]),bs=new Uint8Array,ls=new Uint8Array,ps=new Uint8Array,fs=new Uint8Array;Object.assign(pt,{slots:{0:x}});Object.assign(x,{structure:y,memory:{array:Ce},const:!0,slots:{0:ft}});Object.assign(ft,{structure:f,memory:{array:Me},const:!0});Object.assign(gt,{slots:{0:at,1:it}});Object.assign(at,{structure:p,memory:{array:De},const:!0,slots:{0:x}});Object.assign(it,{structure:p,memory:{array:Te},const:!0,slots:{0:x}});Object.assign(Ot,{slots:{0:ot}});Object.assign(ot,{structure:p,memory:{array:Fe},const:!0,slots:{0:x}});Object.assign(St,{slots:{0:zt,1:jt,2:wt,3:Ut,4:Rt,5:kt,6:qt}});Object.assign(zt,{structure:d,memory:{array:$e},const:!0,slots:{0:ht}});Object.assign(ht,{structure:k,memory:{array:_e},reloc:16778478});Object.assign(jt,{structure:d,memory:{array:Le},const:!0,slots:{0:dt}});Object.assign(dt,{structure:k,memory:{array:Be},reloc:16778495});Object.assign(wt,{structure:y,memory:{array:Ge},const:!0,slots:{0:At}});Object.assign(At,{structure:f,memory:{array:He},const:!0});Object.assign(Ut,{structure:$,memory:{array:Je},const:!0,slots:{0:Pt}});Object.assign(Pt,{structure:F,memory:{array:Ne},reloc:16778518});Object.assign(Rt,{structure:_,memory:{array:Qe},const:!0});Object.assign(kt,{structure:L,memory:{array:We},const:!0,slots:{0:at,1:it}});Object.assign(qt,{structure:B,memory:{array:Xe},const:!0,slots:{0:ot}});Object.assign(It,{slots:{0:Vt,1:vt}});Object.assign(Vt,{structure:l,memory:{array:Ye},const:!0});Object.assign(vt,{structure:l,memory:{array:Ze},const:!0});Object.assign(Et,{memory:{array:pe},slots:{0:xt}});Object.assign(xt,{structure:A,memory:{array:pe,offset:0,length:8},slots:{0:N}});Object.assign(N,{structure:G,memory:{array:ts},reloc:0});Object.assign(Kt,{slots:{0:Ct,1:Mt,2:Dt}});Object.assign(Ct,{structure:s,memory:{array:es},const:!0,slots:{0:ct}});Object.assign(ct,{structure:q});Object.assign(Mt,{structure:s,memory:{array:ss},const:!0,slots:{0:ut}});Object.assign(ut,{structure:Z});Object.assign(Dt,{structure:y,memory:{array:rs},const:!0,slots:{0:Tt}});Object.assign(Tt,{structure:f,memory:{array:ns},const:!0});Object.assign(Ft,{memory:{array:K},slots:{0:$t,1:Lt}});Object.assign($t,{structure:w,memory:{array:K,offset:0,length:24},slots:{0:_t}});Object.assign(_t,{structure:A,memory:{array:K,offset:0,length:8},slots:{0:N}});Object.assign(Lt,{structure:w,memory:{array:K,offset:24,length:24},slots:{0:Bt}});Object.assign(Bt,{structure:A,memory:{array:K,offset:24,length:8},slots:{0:N}});Object.assign(Gt,{memory:{array:fe},slots:{0:Ht}});Object.assign(Ht,{structure:V,memory:{array:fe,offset:0,length:8},slots:{0:mt}});Object.assign(mt,{structure:H,memory:{array:as},reloc:0});Object.assign(Jt,{slots:{0:Nt,1:Qt,2:Wt}});Object.assign(Nt,{structure:s,memory:{array:is},const:!0,slots:{0:ct}});Object.assign(Qt,{structure:s,memory:{array:os},const:!0,slots:{0:ut}});Object.assign(Wt,{structure:y,memory:{array:cs},const:!0,slots:{0:Xt}});Object.assign(Xt,{structure:f,memory:{array:us},const:!0});Object.assign(Yt,{memory:{array:yt},slots:{0:Zt}});Object.assign(Zt,{structure:J,memory:{array:yt},slots:{0:te}});Object.assign(te,{structure:V,memory:{array:yt,offset:0,length:8},slots:{0:mt}});Object.assign(ee,{slots:{0:se}});Object.assign(se,{structure:z,memory:{array:ms},const:!0});Object.assign(re,{slots:{0:ne}});Object.assign(ne,{structure:h,memory:{array:ys},const:!0});Object.assign(ae,{slots:{0:ie,1:ce,2:me,3:be}});Object.assign(ie,{structure:s,memory:{array:bs},const:!0,slots:{0:oe}});Object.assign(oe,{structure:Y});Object.assign(ce,{structure:s,memory:{array:ls},const:!0,slots:{0:ue}});Object.assign(ue,{structure:I});Object.assign(me,{structure:s,memory:{array:ps},const:!0,slots:{0:ye}});Object.assign(ye,{structure:v});Object.assign(be,{structure:s,memory:{array:fs},const:!0,slots:{0:le}});Object.assign(le,{structure:E});const gs={argStruct:et,thunkId:2,name:"createOutput"},Os={argStruct:rt,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(j,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:j}],methods:[]}});Object.assign(k,{...e,type:1,name:"[5:0]u8",length:5,byteSize:6,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:j}],methods:[]}});Object.assign(d,{...e,type:13,name:"*const [5:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:k}],methods:[]}});Object.assign(y,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:y}],methods:[]}});Object.assign(f,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(F,{...e,type:1,name:"[16:0]u8",length:16,byteSize:17,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:j}],methods:[]}});Object.assign($,{...e,type:13,name:"*const [16:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(_,{...e,type:2,name:"@TypeOf(.{})",align:1,isTuple:!0});Object.assign(p,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:y}],methods:[],template:pt}});Object.assign(L,{...e,type:2,name:"Struct1092737995",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:p},{...t,type:7,slot:1,name:"src",structure:p}],methods:[],template:gt}});Object.assign(B,{...e,type:2,name:"Struct1039671274",align:1,instance:{members:[{...t,type:7,slot:0,name:"result",structure:p}],methods:[],template:Ot}});Object.assign(Y,{...e,type:2,name:"color.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:d},{...t,type:7,slot:1,name:"vendor",structure:d},{...t,type:7,slot:2,name:"version",structure:y},{...t,type:7,slot:3,name:"description",structure:$},{...t,type:7,slot:4,name:"parameters",structure:_},{...t,type:7,slot:5,name:"inputImages",structure:L},{...t,type:7,slot:6,name:"outputImages",structure:B}],methods:[],template:St}});Object.assign(q,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:j}],methods:[]}});Object.assign(G,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:q}],methods:[]}});Object.assign(A,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:G}],methods:[]}});Object.assign(o,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:o}],methods:[]}});Object.assign(l,{...e,type:11,name:"color.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:l}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:l},{...t,type:7,slot:1,name:"display-p3",structure:l}],methods:[],template:It}});Object.assign(R,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(T,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:T}],methods:[]}});Object.assign(Z,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:T}],methods:[]}});Object.assign(w,{...e,type:2,name:"color.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:A},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:o},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:o},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:l},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:Et},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:y}],methods:[],template:Kt}});Object.assign(I,{...e,type:2,name:"color.KernelInput(u8,color.kernel)",byteSize:48,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:w},{...t,type:5,bitOffset:192,bitSize:192,byteSize:24,slot:1,name:"src",structure:w}],methods:[],template:Ft}});Object.assign(H,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:q}],methods:[]}});Object.assign(V,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:H}],methods:[]}});Object.assign(J,{...e,type:2,name:"color.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:V},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:o},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:o},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:l},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:Gt},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:y}],methods:[],template:Jt}});Object.assign(v,{...e,type:2,name:"color.KernelOutput(u8,color.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"result",structure:J}],methods:[],template:Yt}});Object.assign(E,{...e,type:2,name:"color.KernelParameters(color.kernel)",align:1});Object.assign(z,{...e,type:10,name:"ErrorSet3651351202",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:z}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:z}],methods:[],template:ee}});Object.assign(tt,{...e,type:9,name:"ErrorSet3651351202!color.KernelOutput(u8,color.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:z}],methods:[]}});Object.assign(et,{...e,type:5,name:"createOutput",byteSize:84,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:o},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:o},{...t,type:5,isRequired:!0,bitOffset:64,bitSize:384,byteSize:48,slot:0,name:"2",structure:I},{...t,type:5,isRequired:!0,bitOffset:672,bitSize:0,byteSize:0,slot:1,name:"3",structure:E},{...t,type:5,isRequired:!0,bitOffset:448,bitSize:224,byteSize:28,slot:2,name:"retval",structure:tt}],methods:[]}});Object.assign(h,{...e,type:10,name:"ErrorSet3873360432",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:h}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:h}],methods:[],template:re}});Object.assign(st,{...e,type:9,name:"ErrorSet3873360432!color.KernelOutput(u8,color.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:h}],methods:[]}});Object.assign(rt,{...e,type:5,name:"createPartialOutput",byteSize:92,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:o},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:o},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:o},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:o},{...t,type:5,isRequired:!0,bitOffset:128,bitSize:384,byteSize:48,slot:0,name:"4",structure:I},{...t,type:5,isRequired:!0,bitOffset:736,bitSize:0,byteSize:0,slot:1,name:"5",structure:E},{...t,type:5,isRequired:!0,bitOffset:512,bitSize:224,byteSize:28,slot:2,name:"retval",structure:st}],methods:[]}});Object.assign(nt,{...e,type:2,name:"color",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:s},{...t,type:7,slot:1,name:"Input",structure:s},{...t,type:7,slot:2,name:"Output",structure:s},{...t,type:7,slot:3,name:"Parameters",structure:s}],methods:[gs,Os],template:ae}});const Ss=[s,j,k,d,y,f,F,$,_,p,L,B,Y,q,G,A,o,l,R,T,Z,w,I,H,V,J,v,E,z,tt,et,h,st,rt,nt],zs=nt,hs={runtimeSafety:!1,littleEndian:!0},Q=ke();Q.getSpecialExports();Q.recreateStructures(Ss,hs);const js=(async()=>{const a=new URL("color-e008b12f.wasm",import.meta.url).href;return fetch(a)})();Q.loadModule(js);Q.linkVariables(!0);const{constructor:ds}=zs,{createPartialOutput:ws,Input:As,kernel:X}=ds;function Us(a,c,i,n,r={},g={}){const O=[];for(const[m]of X.inputImages)O.push(m);const U=[];for(const[m]of X.outputImages)U.push(m);if(Array.isArray(r)){const m=r;r={};for(const[b,S]of O.entries())r[S]=m[b]}const u=new As(void 0),C=[];let P;for(const m of O){let b=r[m];if(b||(O.length===1&&["data","width","height"].every(S=>!!r[S])?b=r:C.push(m)),u[m]=b,P){if(b.colorSpace!==P)throw new Error(`Input images must all use the same color space: ${P}`)}else P=b.colorSpace}if(C.length>0)throw new Error(`Missing input image${C.length>1?"s":""}: ${C.join(", ")}`);const W=ws(a,c,i,n,u,g),bt=m=>{const b={};for(const S of U){const{data:{typedArray:M},width:lt,height:ge}=m[S];let D;if(typeof ImageData=="function"){const Oe=new Uint8ClampedArray(M.buffer,M.byteOffset,M.byteLength);D=new ImageData(Oe,lt,n,{colorSpace:P})}else D={data:M,width:lt,height:ge};if(U.length===1)return D;b[S]=D}return b};return W[Symbol.toStringTag]==="Promise"?W.then(bt):bt(W)}function Ps(){const a={};for(let[c,i]of X){if(c==="parameters"){const n={};for(const[r,g]of i){const O=n[r]={};for(let[U,u]of g)typeof u=="object"?u=u.string??u.valueOf():typeof u=="function"&&(u=Rs(u.name)),O[U]=u}i=n}else typeof i=="object"&&(i=i.string??i.valueOf());a[c]=i}return a}function Rs(a){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[a]}onmessage=async a=>{if(!Array.isArray(a.data))return;const[c,i,...n]=a.data;try{const[r,g]=await ks(c,n);postMessage([c,i,r],{transfer:g})}catch(r){postMessage(["error",i,r])}};async function ks(a,c){switch(a){case"getKernelInfo":return[Ps(...c)];case"createPartialImageData":const n=await Us(...c),r=[];if("data"in n&&"width"in n&&"height"in n)r.push(n.data.buffer);else for(const g of Object.entries(n))r.push(n.data.buffer);return[n,r];default:throw new Error(`Unknown function: ${a}`)}}postMessage("ready");
