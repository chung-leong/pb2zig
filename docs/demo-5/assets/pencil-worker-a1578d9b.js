import{u as Ze,a as ts,b as es,c as ss,d as rs,e as ns,f as as,g as is,h as os,i as cs,j as us,k as ms,l as ys,m as bs,n as ls,o as ps,p as gs,q as fs,r as Os,s as Ss}from"./index-ec6998a3.js";Ze();us();ms();ts();es();ys();bs();ls();ps();ss();rs();ns();as();gs();Ss();is();fs();os();cs();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},O={},D={},F={},M={},T={},l={},S={},$={},L={},r={},g={},y={},d={},B={},G={},H={},w={},J={},N={},ct={},I={},Q={},R={},m={},f={},P={},ut={},W={},k={},X={},q={},Y={},v={},E={},V={},mt={},yt={},_={},bt={},lt={},pt={},Dt={},Z={},tt={},et={},Ft={},st={},Mt={},rt={},Tt={},$t={},gt={},ft={},Lt={},Ot={},Bt={},St={},Gt={},Ht={},zt={},jt={},Jt={},ht={},Nt={},dt={},Qt={},Wt={},wt={},At={},Ut={},Pt={},Xt={},nt={},Yt={},Zt={},Vt={},te={},It={},ee={},se={},re={},ne={},ae={},ie={},oe={},ce={},ue={},me={},ye={},be={},le={},pe={},ge={},fe={},Oe={},Rt={},Se={},ze={},kt={},je={},qt={},he={},de={},we={},Ae={},Ue={},Pe={},Ve={},vt={},Ie={},Re={},ke={},qe={},ve={},Ee={},xe={},Ce={},Ke={},_e={},Et={},De={},Fe={},Me={},Te={},$e={},Le={},Be={},Ge={},He={},Je={},zs=new Uint8Array,js=new Uint8Array,hs=new Uint8Array([0,0,0,0,0,0,0,0]),ds=new Uint8Array,ws=new Uint8Array([0,0,0,0,0,0,89,64]),As=new Uint8Array,Us=new Uint8Array([0,0,0,0,0,64,88,64]),Ps=new Uint8Array,Vs=new Uint8Array,Is=new Uint8Array([0,0,0,0,0,0,0,0]),Rs=new Uint8Array,ks=new Uint8Array([0,0,0,0,0,0,89,64]),qs=new Uint8Array,vs=new Uint8Array([0,0,0,0,0,0,46,64]),Es=new Uint8Array,xs=new Uint8Array,Cs=new Uint8Array([0,0,0,0,0,0,0,0]),Ks=new Uint8Array,_s=new Uint8Array([0,0,0,0,0,0,36,64]),Ds=new Uint8Array,Fs=new Uint8Array([102,102,102,102,102,102,35,64]),Ms=new Uint8Array,Ts=new Uint8Array,$s=new Uint8Array,Ls=new Uint8Array,Bs=new Uint8Array,Gs=new Uint8Array([4]),Hs=new Uint8Array,Js=new Uint8Array,Ns=new Uint8Array([236,4,0,1]),Qs=new Uint8Array([97,114,46,115,104,97,100,101,114,46,112,101,110,99,105,108,0]),Ws=new Uint8Array([8,5,0,1]),Xs=new Uint8Array([65,108,97,110,32,82,111,115,115,0]),Ys=new Uint8Array,Zs=new Uint8Array([1]),tr=new Uint8Array([35,5,0,1]),er=new Uint8Array([80,101,110,99,105,108,0]),sr=new Uint8Array,rr=new Uint8Array,nr=new Uint8Array,ar=new Uint8Array([0]),ir=new Uint8Array([1]),Ne=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),or=new Uint8Array,cr=new Uint8Array,ur=new Uint8Array,mr=new Uint8Array,yr=new Uint8Array([4]),xt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Qe=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),br=new Uint8Array,lr=new Uint8Array,pr=new Uint8Array,gr=new Uint8Array,fr=new Uint8Array([4]),Ct=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Or=new Uint8Array([0,0,194,66,0,0,112,65,0,0,194,66,51,51,27,65]),Sr=new Uint8Array([27,0]),zr=new Uint8Array,jr=new Uint8Array,hr=new Uint8Array,dr=new Uint8Array;Object.assign(Dt,{slots:{0:Z,1:et,2:st,3:rt}});Object.assign(Z,{structure:s,memory:{array:zs},slots:{0:tt}});Object.assign(tt,{structure:g});Object.assign(et,{structure:r,memory:{array:js},slots:{0:Ft}});Object.assign(Ft,{structure:y,memory:{array:hs}});Object.assign(st,{structure:r,memory:{array:ds},slots:{0:Mt}});Object.assign(Mt,{structure:y,memory:{array:ws}});Object.assign(rt,{structure:r,memory:{array:As},slots:{0:Tt}});Object.assign(Tt,{structure:y,memory:{array:Us}});Object.assign($t,{slots:{0:gt,1:ft,2:Ot,3:St}});Object.assign(gt,{structure:s,memory:{array:Ps},slots:{0:tt}});Object.assign(ft,{structure:r,memory:{array:Vs},slots:{0:Lt}});Object.assign(Lt,{structure:y,memory:{array:Is}});Object.assign(Ot,{structure:r,memory:{array:Rs},slots:{0:Bt}});Object.assign(Bt,{structure:y,memory:{array:ks}});Object.assign(St,{structure:r,memory:{array:qs},slots:{0:Gt}});Object.assign(Gt,{structure:y,memory:{array:vs}});Object.assign(Ht,{slots:{0:zt,1:jt,2:ht,3:dt}});Object.assign(zt,{structure:s,memory:{array:Es},slots:{0:tt}});Object.assign(jt,{structure:r,memory:{array:xs},slots:{0:Jt}});Object.assign(Jt,{structure:y,memory:{array:Cs}});Object.assign(ht,{structure:r,memory:{array:Ks},slots:{0:Nt}});Object.assign(Nt,{structure:y,memory:{array:_s}});Object.assign(dt,{structure:r,memory:{array:Ds},slots:{0:Qt}});Object.assign(Qt,{structure:y,memory:{array:Fs}});Object.assign(Wt,{slots:{0:wt,1:At,2:Ut,3:Pt}});Object.assign(wt,{structure:d,memory:{array:Ms},slots:{0:Z,1:et,2:st,3:rt}});Object.assign(At,{structure:B,memory:{array:Ts},slots:{0:gt,1:ft,2:Ot,3:St}});Object.assign(Ut,{structure:d,memory:{array:$s},slots:{0:Z,1:et,2:st,3:rt}});Object.assign(Pt,{structure:G,memory:{array:Ls},slots:{0:zt,1:jt,2:ht,3:dt}});Object.assign(Xt,{slots:{0:nt}});Object.assign(nt,{structure:l,memory:{array:Bs},slots:{0:Yt}});Object.assign(Yt,{structure:S,memory:{array:Gs}});Object.assign(Zt,{slots:{0:Vt}});Object.assign(Vt,{structure:w,memory:{array:Hs},slots:{0:nt}});Object.assign(te,{slots:{0:It}});Object.assign(It,{structure:w,memory:{array:Js},slots:{0:nt}});Object.assign(ee,{slots:{0:se,1:ne,2:ie,3:ce,4:me,5:ye,6:be}});Object.assign(se,{structure:F,memory:{array:Ns},slots:{0:re}});Object.assign(re,{structure:D,memory:{array:Qs},reloc:16778476,const:!0});Object.assign(ne,{structure:T,memory:{array:Ws},slots:{0:ae}});Object.assign(ae,{structure:M,memory:{array:Xs},reloc:16778504,const:!0});Object.assign(ie,{structure:l,memory:{array:Ys},slots:{0:oe}});Object.assign(oe,{structure:S,memory:{array:Zs}});Object.assign(ce,{structure:L,memory:{array:tr},slots:{0:ue}});Object.assign(ue,{structure:$,memory:{array:er},reloc:16778531,const:!0});Object.assign(me,{structure:H,memory:{array:sr},slots:{0:wt,1:At,2:Ut,3:Pt}});Object.assign(ye,{structure:J,memory:{array:rr},slots:{0:Vt}});Object.assign(be,{structure:N,memory:{array:nr},slots:{0:It}});Object.assign(le,{slots:{0:pe,1:ge}});Object.assign(pe,{structure:f,memory:{array:ar}});Object.assign(ge,{structure:f,memory:{array:ir}});Object.assign(fe,{memory:{array:Ne},slots:{0:Oe}});Object.assign(Oe,{structure:R,memory:{array:Ne,offset:0,length:8},slots:{0:Rt}});Object.assign(Rt,{structure:Q,memory:{array:or},reloc:0,const:!0});Object.assign(Se,{slots:{0:ze,1:je,2:he}});Object.assign(ze,{structure:s,memory:{array:cr},slots:{0:kt}});Object.assign(kt,{structure:I});Object.assign(je,{structure:s,memory:{array:ur},slots:{0:qt}});Object.assign(qt,{structure:ut});Object.assign(he,{structure:l,memory:{array:mr},slots:{0:de}});Object.assign(de,{structure:S,memory:{array:yr}});Object.assign(we,{memory:{array:xt},slots:{0:Ae}});Object.assign(Ae,{structure:W,memory:{array:xt},slots:{0:Ue}});Object.assign(Ue,{structure:R,memory:{array:xt,offset:0,length:8},slots:{0:Rt}});Object.assign(Pe,{memory:{array:Qe},slots:{0:Ve}});Object.assign(Ve,{structure:q,memory:{array:Qe,offset:0,length:8},slots:{0:vt}});Object.assign(vt,{structure:X,memory:{array:br},reloc:0});Object.assign(Ie,{slots:{0:Re,1:ke,2:qe}});Object.assign(Re,{structure:s,memory:{array:lr},slots:{0:kt}});Object.assign(ke,{structure:s,memory:{array:pr},slots:{0:qt}});Object.assign(qe,{structure:l,memory:{array:gr},slots:{0:ve}});Object.assign(ve,{structure:S,memory:{array:fr}});Object.assign(Ee,{memory:{array:Ct},slots:{0:xe}});Object.assign(xe,{structure:Y,memory:{array:Ct},slots:{0:Ce}});Object.assign(Ce,{structure:q,memory:{array:Ct,offset:0,length:8},slots:{0:vt}});Object.assign(Ke,{memory:{array:Or}});Object.assign(_e,{slots:{0:Et}});Object.assign(Et,{structure:V,memory:{array:Sr}});Object.assign(De,{slots:{0:Et}});Object.assign(Fe,{slots:{0:Me,1:$e,2:Be,3:He}});Object.assign(Me,{structure:s,memory:{array:zr},slots:{0:Te}});Object.assign(Te,{structure:ct});Object.assign($e,{structure:s,memory:{array:jr},slots:{0:Le}});Object.assign(Le,{structure:k});Object.assign(Be,{structure:s,memory:{array:hr},slots:{0:Ge}});Object.assign(Ge,{structure:v});Object.assign(He,{structure:s,memory:{array:dr},slots:{0:Je}});Object.assign(Je,{structure:E});const wr={argStruct:yt,thunkId:2,name:"createOutput"},Ar={argStruct:lt,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(O,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(D,{...e,type:1,name:"[16:0]u8",length:16,byteSize:17,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(F,{...e,type:13,name:"*const [16:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:D}],methods:[]}});Object.assign(M,{...e,type:1,name:"[9:0]u8",length:9,byteSize:10,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(T,{...e,type:13,name:"*const [9:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(l,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:l}],methods:[]}});Object.assign(S,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign($,{...e,type:1,name:"[6:0]u8",length:6,byteSize:7,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(L,{...e,type:13,name:"*const [6:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[]}});Object.assign(r,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(g,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:g}],methods:[]}});Object.assign(y,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:y}],methods:[]}});Object.assign(d,{...e,type:2,name:"Struct4273185158",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:r},{...t,type:9,slot:2,name:"maxValue",structure:r},{...t,type:9,slot:3,name:"defaultValue",structure:r}],methods:[],template:Dt}});Object.assign(B,{...e,type:2,name:"Struct3782286797",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:r},{...t,type:9,slot:2,name:"maxValue",structure:r},{...t,type:9,slot:3,name:"defaultValue",structure:r}],methods:[],template:$t}});Object.assign(G,{...e,type:2,name:"Struct148207664",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:r},{...t,type:9,slot:2,name:"maxValue",structure:r},{...t,type:9,slot:3,name:"defaultValue",structure:r}],methods:[],template:Ht}});Object.assign(H,{...e,type:2,name:"Struct534432254",align:1,instance:{members:[{...t,type:9,slot:0,name:"n0",structure:d},{...t,type:9,slot:1,name:"n1",structure:B},{...t,type:9,slot:2,name:"n2",structure:d},{...t,type:9,slot:3,name:"n3",structure:G}],methods:[],template:Wt}});Object.assign(w,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:l}],methods:[],template:Xt}});Object.assign(J,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:9,slot:0,name:"src",structure:w}],methods:[],template:Zt}});Object.assign(N,{...e,type:2,name:"Struct1039671274",align:1,instance:{members:[{...t,type:9,slot:0,name:"result",structure:w}],methods:[],template:te}});Object.assign(ct,{...e,type:2,name:"pencil.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:F},{...t,type:9,slot:1,name:"vendor",structure:T},{...t,type:9,slot:2,name:"version",structure:l},{...t,type:9,slot:3,name:"description",structure:L},{...t,type:9,slot:4,name:"parameters",structure:H},{...t,type:9,slot:5,name:"inputImages",structure:J},{...t,type:9,slot:6,name:"outputImages",structure:N}],methods:[],template:ee}});Object.assign(I,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(Q,{...e,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(R,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:Q}],methods:[]}});Object.assign(m,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[]}});Object.assign(f,{...e,type:11,name:"pencil.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:f},{...t,type:9,slot:1,name:"display-p3",structure:f}],methods:[],template:le}});Object.assign(P,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(ut,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:g}],methods:[]}});Object.assign(W,{...e,type:2,name:"pencil.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:R},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:f},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:fe},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:l}],methods:[],template:Se}});Object.assign(k,{...e,type:2,name:"pencil.KernelInput(u8,pencil.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:W}],methods:[],template:we}});Object.assign(X,{...e,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(q,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:X}],methods:[]}});Object.assign(Y,{...e,type:2,name:"pencil.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:q},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:f},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:Pe},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:l}],methods:[],template:Ie}});Object.assign(v,{...e,type:2,name:"pencil.KernelOutput(u8,pencil.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"result",structure:Y}],methods:[],template:Ee}});Object.assign(E,{...e,type:2,name:"pencil.KernelParameters(pencil.kernel)",byteSize:16,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"n0",structure:g},{...t,type:4,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"n1",structure:g},{...t,type:4,bitOffset:64,bitSize:32,byteSize:4,slot:2,name:"n2",structure:g},{...t,type:4,bitOffset:96,bitSize:32,byteSize:4,slot:3,name:"n3",structure:g}],methods:[],template:Ke}});Object.assign(V,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(pencil.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:V}],methods:[],template:_e}});Object.assign(mt,{...e,type:9,name:"ErrorSet2562181964!pencil.KernelOutput(u8,pencil.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:V}],methods:[]}});Object.assign(yt,{...e,type:5,name:"createOutput",byteSize:76,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...t,type:7,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:k},{...t,type:7,isRequired:!0,bitOffset:256,bitSize:128,byteSize:16,slot:1,name:"3",structure:E},{...t,type:7,isRequired:!0,bitOffset:384,bitSize:224,byteSize:28,slot:2,name:"retval",structure:mt}],methods:[]}});Object.assign(_,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(pencil.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:_}],methods:[],template:De}});Object.assign(bt,{...e,type:9,name:"ErrorSet421721046!pencil.KernelOutput(u8,pencil.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:_}],methods:[]}});Object.assign(lt,{...e,type:5,name:"createPartialOutput",byteSize:84,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:m},{...t,type:7,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:k},{...t,type:7,isRequired:!0,bitOffset:320,bitSize:128,byteSize:16,slot:1,name:"5",structure:E},{...t,type:7,isRequired:!0,bitOffset:448,bitSize:224,byteSize:28,slot:2,name:"retval",structure:bt}],methods:[]}});Object.assign(pt,{...e,type:2,name:"pencil",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:s},{...t,type:9,slot:1,name:"Input",structure:s},{...t,type:9,slot:2,name:"Output",structure:s},{...t,type:9,slot:3,name:"Parameters",structure:s}],methods:[wr,Ar],template:Fe}});const Ur=[s,O,D,F,M,T,l,S,$,L,r,g,y,d,B,G,H,w,J,N,ct,I,Q,R,m,f,P,ut,W,k,X,q,Y,v,E,V,mt,yt,_,bt,lt,pt],Pr=pt,Vr={runtimeSafety:!1,littleEndian:!0},at=Os();at.getControlObject();at.recreateStructures(Ur,Vr);const Ir=(async()=>{const o=new URL("pencil-b9685b1b.wasm",import.meta.url).href;return fetch(o)})();at.loadModule(Ir);at.linkVariables(!0);const{constructor:Rr}=Pr,{createPartialOutput:kr,Input:qr,kernel:ot}=Rr;function vr(o,c,a,n,i={},z={}){const j=[];for(const[b]of ot.inputImages)j.push(b);const A=[];for(const[b]of ot.outputImages)A.push(b);if(Array.isArray(i)){const b=i;i={};for(const[p,h]of j.entries())i[h]=b[p]}const u=new qr(void 0),x=[];let U;for(const b of j){let p=i[b];if(p||(j.length===1&&["data","width","height"].every(h=>!!i[h])?p=i:x.push(b)),u[b]=p,U){if(p.colorSpace!==U)throw new Error(`Input images must all use the same color space: ${U}`)}else U=p.colorSpace}if(x.length>0)throw new Error(`Missing input image${x.length>1?"s":""}: ${x.join(", ")}`);const it=kr(o,c,a,n,u,z),Kt=b=>{const p={};for(const h of A){const{data:{typedArray:C},width:_t,height:Xe}=b[h];let K;if(typeof ImageData=="function"){const Ye=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);K=new ImageData(Ye,_t,n,{colorSpace:U})}else K={data:C,width:_t,height:Xe};if(A.length===1)return K;p[h]=K}return p};return it[Symbol.toStringTag]==="Promise"?it.then(Kt):Kt(it)}function Er(){const o={};for(let[c,a]of ot){if(c==="parameters"){const n={};for(const[i,z]of a){const j=n[i]={};for(let[A,u]of z)typeof u=="object"?"string"in u?u=u.string:u=We(u):typeof u=="function"&&(u=xr(u.name)),j[A]=u}a=n}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());o[c]=a}return o}function We(o){const c=[];for(let[a,n]of o)typeof n=="object"&&(n=We(n)),c[a]=n;return c}function xr(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[c,a,...n]=o.data;Cr(c,n).then(([i,z])=>{postMessage([c,a,i],{transfer:z})}).catch(i=>{postMessage(["error",a,i])})};async function Cr(o,c){switch(o){case"getKernelInfo":return[Er(...c)];case"createPartialImageData":const n=await vr(...c),i=[];if("data"in n&&"width"in n&&"height"in n)i.push(n.data.buffer);else for(const z of Object.entries(n))i.push(n.data.buffer);return[n,i];default:throw new Error(`Unknown function: ${o}`)}}
