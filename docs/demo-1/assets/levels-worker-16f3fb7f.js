import{u as Xt,a as Yt,b as Zt,c as es,d as ts,e as ss,f as rs,g as ns,h as as,i as is,j as os,k as cs,l as us,m as ms,n as ys,p as bs,o as ls,q as gs,r as ps,s as fs}from"./index-58d89d46.js";Xt();os();cs();Yt();Zt();us();ms();ys();bs();es();ts();ss();rs();ls();fs();ns();gs();as();is();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},e={type:0,isRequired:!1},s={},S={},L={},B={},G={},H={},b={},z={},J={},N={},o={},p={},Q={},W={},X={},R={},O={},g={},Y={},w={},Z={},ee={},ue={},E={},te={},x={},m={},f={},k={},me={},se={},C={},re={},K={},ne={},_={},D={},q={},ye={},be={},$={},le={},ge={},pe={},_e={},fe={},De={},Oe={},Fe={},Me={},Se={},Te={},ze={},$e={},Le={},je={},Be={},he={},Ge={},He={},A={},Je={},U={},v={},P={},Ne={},de={},we={},Ae={},Ue={},Qe={},ae={},We={},Xe={},ve={},Ye={},Pe={},Ze={},et={},tt={},st={},rt={},nt={},at={},it={},ot={},ct={},ut={},mt={},yt={},bt={},lt={},gt={},pt={},Ie={},ft={},Ot={},Ve={},St={},Re={},zt={},jt={},ht={},dt={},wt={},At={},Ut={},ke={},vt={},Pt={},It={},Vt={},Rt={},kt={},qt={},Et={},xt={},Ct={},qe={},Kt={},_t={},Dt={},Ft={},Mt={},Tt={},$t={},Lt={},Bt={},Gt={},Os=new Uint8Array,Ss=new Uint8Array([0,0,0,0,0,0,0,0]),zs=new Uint8Array,js=new Uint8Array([0,0,0,0,0,0,0,0]),hs=new Uint8Array,ds=new Uint8Array([0,0,0,0,0,0,240,63]),ws=new Uint8Array,As=new Uint8Array([0,0,0,0,0,0,240,63]),Us=new Uint8Array,vs=new Uint8Array([0,0,0,0,0,0,0,0]),Ps=new Uint8Array,Is=new Uint8Array([0,0,0,0,0,0,240,63]),Vs=new Uint8Array,Rs=new Uint8Array,ks=new Uint8Array,qs=new Uint8Array,Es=new Uint8Array,xs=new Uint8Array,Cs=new Uint8Array,Ks=new Uint8Array,_s=new Uint8Array,Ds=new Uint8Array([4]),Fs=new Uint8Array,Ms=new Uint8Array,Ts=new Uint8Array([236,4,0,1]),$s=new Uint8Array([99,111,109,46,97,110,116,116,105,107,117,112,105,108,97,0]),Ls=new Uint8Array([7,5,0,1]),Bs=new Uint8Array([65,110,116,116,105,32,75,117,112,105,108,97,0]),Gs=new Uint8Array,Hs=new Uint8Array([1]),Js=new Uint8Array([37,5,0,1]),Ns=new Uint8Array([76,101,118,101,108,115,32,102,105,108,116,101,114,0]),Qs=new Uint8Array,Ws=new Uint8Array,Xs=new Uint8Array,Ys=new Uint8Array([0]),Zs=new Uint8Array([1]),Ht=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),er=new Uint8Array,tr=new Uint8Array,sr=new Uint8Array,rr=new Uint8Array,nr=new Uint8Array([4]),Ee=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Jt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ar=new Uint8Array,ir=new Uint8Array,or=new Uint8Array,cr=new Uint8Array,ur=new Uint8Array([4]),xe=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),mr=new Uint8Array([0,0,0,0,0,0,128,63,0,0,0,0,0,0,128,63,0,0,0,0,0,0,128,63,0,0,0,0,0,0,128,63]),yr=new Uint8Array([27,0]),br=new Uint8Array,lr=new Uint8Array,gr=new Uint8Array,pr=new Uint8Array;Object.assign(_e,{slots:{0:fe,1:Oe}});Object.assign(fe,{structure:o,memory:{array:Os},slots:{0:De}});Object.assign(De,{structure:p,memory:{array:Ss}});Object.assign(Oe,{structure:o,memory:{array:zs},slots:{0:Fe}});Object.assign(Fe,{structure:p,memory:{array:js}});Object.assign(Me,{slots:{0:Se,1:ze}});Object.assign(Se,{structure:o,memory:{array:hs},slots:{0:Te}});Object.assign(Te,{structure:p,memory:{array:ds}});Object.assign(ze,{structure:o,memory:{array:ws},slots:{0:$e}});Object.assign($e,{structure:p,memory:{array:As}});Object.assign(Le,{slots:{0:je,1:he}});Object.assign(je,{structure:o,memory:{array:Us},slots:{0:Be}});Object.assign(Be,{structure:p,memory:{array:vs}});Object.assign(he,{structure:o,memory:{array:Ps},slots:{0:Ge}});Object.assign(Ge,{structure:p,memory:{array:Is}});Object.assign(He,{slots:{0:A,1:U,2:v,3:P}});Object.assign(A,{structure:s,memory:{array:Vs},slots:{0:Je}});Object.assign(Je,{structure:O});Object.assign(U,{structure:Q,memory:{array:Rs},slots:{0:fe,1:Oe}});Object.assign(v,{structure:W,memory:{array:ks},slots:{0:Se,1:ze}});Object.assign(P,{structure:X,memory:{array:qs},slots:{0:je,1:he}});Object.assign(Ne,{slots:{0:de,1:we,2:Ae,3:Ue}});Object.assign(de,{structure:g,memory:{array:Es},slots:{0:A,1:U,2:v,3:P}});Object.assign(we,{structure:g,memory:{array:xs},slots:{0:A,1:U,2:v,3:P}});Object.assign(Ae,{structure:g,memory:{array:Cs},slots:{0:A,1:U,2:v,3:P}});Object.assign(Ue,{structure:g,memory:{array:Ks},slots:{0:A,1:U,2:v,3:P}});Object.assign(Qe,{slots:{0:ae}});Object.assign(ae,{structure:b,memory:{array:_s},slots:{0:We}});Object.assign(We,{structure:z,memory:{array:Ds}});Object.assign(Xe,{slots:{0:ve}});Object.assign(ve,{structure:w,memory:{array:Fs},slots:{0:ae}});Object.assign(Ye,{slots:{0:Pe}});Object.assign(Pe,{structure:w,memory:{array:Ms},slots:{0:ae}});Object.assign(Ze,{slots:{0:et,1:st,2:nt,3:it,4:ct,5:ut,6:mt}});Object.assign(et,{structure:B,memory:{array:Ts},slots:{0:tt}});Object.assign(tt,{structure:L,memory:{array:$s},reloc:16778476,const:!0});Object.assign(st,{structure:H,memory:{array:Ls},slots:{0:rt}});Object.assign(rt,{structure:G,memory:{array:Bs},reloc:16778503,const:!0});Object.assign(nt,{structure:b,memory:{array:Gs},slots:{0:at}});Object.assign(at,{structure:z,memory:{array:Hs}});Object.assign(it,{structure:N,memory:{array:Js},slots:{0:ot}});Object.assign(ot,{structure:J,memory:{array:Ns},reloc:16778533,const:!0});Object.assign(ct,{structure:Y,memory:{array:Qs},slots:{0:de,1:we,2:Ae,3:Ue}});Object.assign(ut,{structure:Z,memory:{array:Ws},slots:{0:ve}});Object.assign(mt,{structure:ee,memory:{array:Xs},slots:{0:Pe}});Object.assign(yt,{slots:{0:bt,1:lt}});Object.assign(bt,{structure:f,memory:{array:Ys}});Object.assign(lt,{structure:f,memory:{array:Zs}});Object.assign(gt,{memory:{array:Ht},slots:{0:pt}});Object.assign(pt,{structure:x,memory:{array:Ht,offset:0,length:8},slots:{0:Ie}});Object.assign(Ie,{structure:te,memory:{array:er},reloc:0,const:!0});Object.assign(ft,{slots:{0:Ot,1:St,2:zt}});Object.assign(Ot,{structure:s,memory:{array:tr},slots:{0:Ve}});Object.assign(Ve,{structure:E});Object.assign(St,{structure:s,memory:{array:sr},slots:{0:Re}});Object.assign(Re,{structure:me});Object.assign(zt,{structure:b,memory:{array:rr},slots:{0:jt}});Object.assign(jt,{structure:z,memory:{array:nr}});Object.assign(ht,{memory:{array:Ee},slots:{0:dt}});Object.assign(dt,{structure:se,memory:{array:Ee},slots:{0:wt}});Object.assign(wt,{structure:x,memory:{array:Ee,offset:0,length:8},slots:{0:Ie}});Object.assign(At,{memory:{array:Jt},slots:{0:Ut}});Object.assign(Ut,{structure:K,memory:{array:Jt,offset:0,length:8},slots:{0:ke}});Object.assign(ke,{structure:re,memory:{array:ar},reloc:0});Object.assign(vt,{slots:{0:Pt,1:It,2:Vt}});Object.assign(Pt,{structure:s,memory:{array:ir},slots:{0:Ve}});Object.assign(It,{structure:s,memory:{array:or},slots:{0:Re}});Object.assign(Vt,{structure:b,memory:{array:cr},slots:{0:Rt}});Object.assign(Rt,{structure:z,memory:{array:ur}});Object.assign(kt,{memory:{array:xe},slots:{0:qt}});Object.assign(qt,{structure:ne,memory:{array:xe},slots:{0:Et}});Object.assign(Et,{structure:K,memory:{array:xe,offset:0,length:8},slots:{0:ke}});Object.assign(xt,{memory:{array:mr}});Object.assign(Ct,{slots:{0:qe}});Object.assign(qe,{structure:q,memory:{array:yr}});Object.assign(Kt,{slots:{0:qe}});Object.assign(_t,{slots:{0:Dt,1:Mt,2:$t,3:Bt}});Object.assign(Dt,{structure:s,memory:{array:br},slots:{0:Ft}});Object.assign(Ft,{structure:ue});Object.assign(Mt,{structure:s,memory:{array:lr},slots:{0:Tt}});Object.assign(Tt,{structure:C});Object.assign($t,{structure:s,memory:{array:gr},slots:{0:Lt}});Object.assign(Lt,{structure:_});Object.assign(Bt,{structure:s,memory:{array:pr},slots:{0:Gt}});Object.assign(Gt,{structure:D});const fr={argStruct:be,thunkId:2,name:"createOutput"},Or={argStruct:ge,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...t,name:"type",align:1,instance:{members:[{...e,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(S,{...t,name:"u8",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(L,{...t,type:1,name:"[15:0]u8",length:15,byteSize:16,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(B,{...t,type:13,name:"*const [15:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[]}});Object.assign(G,{...t,type:1,name:"[12:0]u8",length:12,byteSize:13,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(H,{...t,type:13,name:"*const [12:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:G}],methods:[]}});Object.assign(b,{...t,name:"comptime_int",align:1,instance:{members:[{...e,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:b}],methods:[]}});Object.assign(z,{...t,name:"i8",byteSize:1,align:1,instance:{members:[{...e,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:z}],methods:[]}});Object.assign(J,{...t,type:1,name:"[13:0]u8",length:13,byteSize:14,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(N,{...t,type:13,name:"*const [13:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:J}],methods:[]}});Object.assign(o,{...t,name:"comptime_float",align:1,instance:{members:[{...e,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:o}],methods:[]}});Object.assign(p,{...t,name:"f64",byteSize:8,align:8,instance:{members:[{...e,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:p}],methods:[]}});Object.assign(Q,{...t,type:2,name:"Struct738220547",align:1,instance:{members:[{...e,type:9,slot:0,name:"0",structure:o},{...e,type:9,slot:1,name:"1",structure:o}],methods:[],template:_e}});Object.assign(W,{...t,type:2,name:"Struct2999377579",align:1,instance:{members:[{...e,type:9,slot:0,name:"0",structure:o},{...e,type:9,slot:1,name:"1",structure:o}],methods:[],template:Me}});Object.assign(X,{...t,type:2,name:"Struct3223285779",align:1,instance:{members:[{...e,type:9,slot:0,name:"0",structure:o},{...e,type:9,slot:1,name:"1",structure:o}],methods:[],template:Le}});Object.assign(R,{...t,name:"f32",byteSize:4,align:4,instance:{members:[{...e,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(O,{...t,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...e,type:4,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(g,{...t,type:2,name:"Struct3941568437",align:1,instance:{members:[{...e,type:9,slot:0,name:"type",structure:s},{...e,type:9,slot:1,name:"minValue",structure:Q},{...e,type:9,slot:2,name:"maxValue",structure:W},{...e,type:9,slot:3,name:"defaultValue",structure:X}],methods:[],template:He}});Object.assign(Y,{...t,type:2,name:"Struct937580659",align:1,instance:{members:[{...e,type:9,slot:0,name:"red",structure:g},{...e,type:9,slot:1,name:"green",structure:g},{...e,type:9,slot:2,name:"blue",structure:g},{...e,type:9,slot:3,name:"luminance",structure:g}],methods:[],template:Ne}});Object.assign(w,{...t,type:2,name:"Struct3832472641",align:1,instance:{members:[{...e,type:9,slot:0,name:"channels",structure:b}],methods:[],template:Qe}});Object.assign(Z,{...t,type:2,name:"Struct2242867897",align:1,instance:{members:[{...e,type:9,slot:0,name:"src",structure:w}],methods:[],template:Xe}});Object.assign(ee,{...t,type:2,name:"Struct172100005",align:1,instance:{members:[{...e,type:9,slot:0,name:"dst",structure:w}],methods:[],template:Ye}});Object.assign(ue,{...t,type:2,name:"levels.kernel",align:1,static:{members:[{...e,type:9,slot:0,name:"namespace",structure:B},{...e,type:9,slot:1,name:"vendor",structure:H},{...e,type:9,slot:2,name:"version",structure:b},{...e,type:9,slot:3,name:"description",structure:N},{...e,type:9,slot:4,name:"parameters",structure:Y},{...e,type:9,slot:5,name:"inputImages",structure:Z},{...e,type:9,slot:6,name:"outputImages",structure:ee}],methods:[],template:Ze}});Object.assign(E,{...t,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(te,{...t,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,structure:E}],methods:[]}});Object.assign(x,{...t,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:64,byteSize:8,slot:0,structure:te}],methods:[]}});Object.assign(m,{...t,name:"u32",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[]}});Object.assign(f,{...t,type:11,name:"levels.ColorSpace",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"srgb",structure:f},{...e,type:9,slot:1,name:"display-p3",structure:f}],methods:[],template:yt}});Object.assign(k,{...t,name:"usize",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(me,{...t,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...e,type:4,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(se,{...t,type:2,name:"levels.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:x},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:f},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:k}],methods:[],template:gt},static:{members:[{...e,type:9,slot:0,name:"Pixel",structure:s},{...e,type:9,slot:1,name:"FPixel",structure:s},{...e,type:9,slot:2,name:"channels",structure:b}],methods:[],template:ft}});Object.assign(C,{...t,type:2,name:"levels.KernelInput(u8,levels.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:se}],methods:[],template:ht}});Object.assign(re,{...t,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,structure:E}],methods:[]}});Object.assign(K,{...t,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:64,byteSize:8,slot:0,structure:re}],methods:[]}});Object.assign(ne,{...t,type:2,name:"levels.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:K},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:f},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:k}],methods:[],template:At},static:{members:[{...e,type:9,slot:0,name:"Pixel",structure:s},{...e,type:9,slot:1,name:"FPixel",structure:s},{...e,type:9,slot:2,name:"channels",structure:b}],methods:[],template:vt}});Object.assign(_,{...t,type:2,name:"levels.KernelOutput(u8,levels.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:ne}],methods:[],template:kt}});Object.assign(D,{...t,type:2,name:"levels.KernelParameters(levels.kernel)",byteSize:32,align:8,instance:{members:[{...e,type:7,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"red",structure:O},{...e,type:7,bitOffset:64,bitSize:64,byteSize:8,slot:1,name:"green",structure:O},{...e,type:7,bitOffset:128,bitSize:64,byteSize:8,slot:2,name:"blue",structure:O},{...e,type:7,bitOffset:192,bitSize:64,byteSize:8,slot:3,name:"luminance",structure:O}],methods:[],template:xt}});Object.assign(q,{...t,type:10,name:"@typeInfo(@typeInfo(@TypeOf(levels.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"OutOfMemory",structure:q}],methods:[],template:Ct}});Object.assign(ye,{...t,type:9,name:"ErrorSet2846629824!levels.KernelOutput(u8,levels.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:_},{...e,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:q}],methods:[]}});Object.assign(be,{...t,type:5,name:"createOutput",byteSize:96,align:8,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...e,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...e,type:7,isRequired:!0,bitOffset:320,bitSize:192,byteSize:24,slot:0,name:"2",structure:C},{...e,type:7,isRequired:!0,bitOffset:0,bitSize:256,byteSize:32,slot:1,name:"3",structure:D},{...e,type:7,isRequired:!0,bitOffset:512,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ye}],methods:[]}});Object.assign($,{...t,type:10,name:"@typeInfo(@typeInfo(@TypeOf(levels.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"OutOfMemory",structure:$}],methods:[],template:Kt}});Object.assign(le,{...t,type:9,name:"ErrorSet1287887211!levels.KernelOutput(u8,levels.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:_},{...e,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:$}],methods:[]}});Object.assign(ge,{...t,type:5,name:"createPartialOutput",byteSize:104,align:8,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...e,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...e,type:3,isRequired:!0,bitOffset:320,bitSize:32,byteSize:4,slot:5,name:"2",structure:m},{...e,type:3,isRequired:!0,bitOffset:352,bitSize:32,byteSize:4,slot:6,name:"3",structure:m},{...e,type:7,isRequired:!0,bitOffset:384,bitSize:192,byteSize:24,slot:0,name:"4",structure:C},{...e,type:7,isRequired:!0,bitOffset:0,bitSize:256,byteSize:32,slot:1,name:"5",structure:D},{...e,type:7,isRequired:!0,bitOffset:576,bitSize:224,byteSize:28,slot:2,name:"retval",structure:le}],methods:[]}});Object.assign(pe,{...t,type:2,name:"levels",align:1,static:{members:[{...e,type:9,slot:0,name:"kernel",structure:s},{...e,type:9,slot:1,name:"Input",structure:s},{...e,type:9,slot:2,name:"Output",structure:s},{...e,type:9,slot:3,name:"Parameters",structure:s}],methods:[fr,Or],template:_t}});const Sr=[s,S,L,B,G,H,b,z,J,N,o,p,Q,W,X,R,O,g,Y,w,Z,ee,ue,E,te,x,m,f,k,me,se,C,re,K,ne,_,D,q,ye,be,$,le,ge,pe],zr=pe,jr={runtimeSafety:!1,littleEndian:!0},ie=ps();ie.getControlObject();ie.recreateStructures(Sr,jr);const hr=(async()=>{const i=new URL("levels-29f819f0.wasm",import.meta.url).href;return fetch(i)})();ie.loadModule(hr);ie.linkVariables(!0);const{constructor:dr}=zr,{createPartialOutput:wr,Input:Ar,kernel:ce}=dr;function Ur(i,c,n,r,a={},j={}){const h=[];for(const[y]of ce.inputImages)h.push(y);const I=[];for(const[y]of ce.outputImages)I.push(y);if(Array.isArray(a)){const y=a;a={};for(const[l,d]of h.entries())a[d]=y[l]}const u=new Ar(void 0),F=[];let V;for(const y of h){let l=a[y];if(l||(h.length===1&&["data","width","height"].every(d=>!!a[d])?l=a:F.push(y)),u[y]=l,V){if(l.colorSpace!==V)throw new Error(`Input images must all use the same color space: ${V}`)}else V=l.colorSpace}if(F.length>0)throw new Error(`Missing input image${F.length>1?"s":""}: ${F.join(", ")}`);const oe=wr(i,c,n,r,u,j),Ce=y=>{const l={};for(const d of I){const{data:{typedArray:M},width:Ke,height:Qt}=y[d];let T;if(typeof ImageData=="function"){const Wt=new Uint8ClampedArray(M.buffer,M.byteOffset,M.byteLength);T=new ImageData(Wt,Ke,r,{colorSpace:V})}else T={data:M,width:Ke,height:Qt};if(I.length===1)return T;l[d]=T}return l};return oe[Symbol.toStringTag]==="Promise"?oe.then(Ce):Ce(oe)}function vr(){const i={};for(let[c,n]of ce){if(c==="parameters"){const r={};for(const[a,j]of n){const h=r[a]={};for(let[I,u]of j)typeof u=="object"?"string"in u?u=u.string:u=Nt(u):typeof u=="function"&&(u=Pr(u.name)),h[I]=u}n=r}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());i[c]=n}return i}function Nt(i){const c=[];for(let[n,r]of i)typeof r=="object"&&(r=Nt(r)),c[n]=r;return c}function Pr(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[c,n,...r]=i.data;Ir(c,r).then(([a,j])=>{postMessage([c,n,a],{transfer:j})}).catch(a=>{postMessage(["error",n,a])})};async function Ir(i,c){switch(i){case"getKernelInfo":return[vr(...c)];case"createPartialImageData":const r=await Ur(...c),a=[];if("data"in r&&"width"in r&&"height"in r)a.push(r.data.buffer);else for(const j of Object.entries(r))a.push(r.data.buffer);return[r,a];default:throw new Error(`Unknown function: ${i}`)}}
