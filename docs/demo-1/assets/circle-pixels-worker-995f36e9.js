import{u as ke,a as Ie,b as ve,c as Ee,d as Ke,e as De,f as Fe,g as Me,h as _e,i as Te,j as $e,k as Be,l as Le,m as Ge,o as He,n as Je,p as Ne,q as Qe}from"./index-d64bc850.js";ke();Ie();ve();Ee();Ke();De();Fe();Me();_e();Te();$e();Be();Le();Ge();He();Je();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},b={},G={},H={},C={},J={},N={},k={},p={},f={},Q={},W={},I={},y={},m={},r={},X={},Y={},v={},Z={},E={},ee={},te={},K={},se={},D={},re={},ae={},F={},ne={},M={},ie={},_={},R={},g={},ue={},T={},oe={},$={},Se={},z={},le={},me={},l={},ce={},w={},ye={},B={},q={},be={},pe={},L={},A={},U={},he={},ge={},ze={},Oe={},we={},Re={},qe={};Object.assign(b,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:5});Object.assign(G,{...t,type:1,name:"[19:0]u8",length:19,byteSize:20,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:4});Object.assign(H,{...t,type:11,name:"*const [19:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:G}],methods:[],template:null},slot:3});Object.assign(C,{...t,type:11,name:"*const *const [19:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[],template:null},slot:2});Object.assign(J,{...t,type:1,name:"[17:0]u8",length:17,byteSize:18,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:8});Object.assign(N,{...t,type:11,name:"*const [17:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:J}],methods:[],template:null},slot:7});Object.assign(k,{...t,type:11,name:"*const *const [17:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:N}],methods:[],template:null},slot:6});Object.assign(p,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[],template:null},slot:10});Object.assign(f,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:p}],methods:[],template:null},slot:9});Object.assign(Q,{...t,type:1,name:"[12:0]u8",length:12,byteSize:13,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:13});Object.assign(W,{...t,type:11,name:"*const [12:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[],template:null},slot:12});Object.assign(I,{...t,type:11,name:"*const *const [12:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:11});Object.assign(y,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:32});Object.assign(m,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:m}],methods:[],template:null},slot:49});Object.assign(r,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:m}],methods:[],template:null},slot:48});Object.assign(X,{...t,type:1,name:"[8:0]u8",length:8,byteSize:9,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:52});Object.assign(Y,{...t,type:11,name:"*const [8:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:51});Object.assign(v,{...t,type:11,name:"*const *const [8:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[],template:null},slot:50});const We=new Uint8Array,Xe=new Uint8Array([16,251,15,0]),Ye=new Uint8Array([0,0,0,0,0,0,240,63]),Ze=new Uint8Array([56,251,15,0]),et=new Uint8Array([0,0,0,0,0,192,114,64]),tt=new Uint8Array([96,251,15,0]),st=new Uint8Array([0,0,0,0,0,0,89,64]),rt=new Uint8Array([136,251,15,0]),at=new Uint8Array([104,5,16,0]),nt=new Uint8Array([100,105,115,116,97,110,99,101,0]);Object.assign(Z,{...t,type:2,name:"Struct0010",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:v}],methods:[],template:{memory:{array:We},slots:{0:{structure:r,memory:{array:Xe},slots:{0:{structure:m,memory:{array:Ye}}}},1:{structure:r,memory:{array:Ze},slots:{0:{structure:m,memory:{array:et}}}},2:{structure:r,memory:{array:tt},slots:{0:{structure:m,memory:{array:st}}}},3:{structure:v,memory:{array:rt},slots:{0:{structure:Y,memory:{array:at},slots:{0:{structure:X,memory:{array:nt}}}}}}}}},slot:38});Object.assign(E,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:37});Object.assign(ee,{...t,type:1,name:"[4:0]u8",length:4,byteSize:5,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:55});Object.assign(te,{...t,type:11,name:"*const [4:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:54});Object.assign(K,{...t,type:11,name:"*const *const [4:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:53});const it=new Uint8Array,ut=new Uint8Array([16,251,15,0]),ot=new Uint8Array([0,0,0,0,0,0,0,0]),lt=new Uint8Array([56,251,15,0]),mt=new Uint8Array([0,0,0,0,0,0,0,64]),ct=new Uint8Array([96,251,15,0]),yt=new Uint8Array([0,0,0,0,0,0,240,63]),bt=new Uint8Array([136,251,15,0]),pt=new Uint8Array([99,5,16,0]),ft=new Uint8Array([115,105,122,101,0]);Object.assign(se,{...t,type:2,name:"Struct0011",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:K}],methods:[],template:{memory:{array:it},slots:{0:{structure:r,memory:{array:ut},slots:{0:{structure:m,memory:{array:ot}}}},1:{structure:r,memory:{array:lt},slots:{0:{structure:m,memory:{array:mt}}}},2:{structure:r,memory:{array:ct},slots:{0:{structure:m,memory:{array:yt}}}},3:{structure:K,memory:{array:bt},slots:{0:{structure:te,memory:{array:pt},slots:{0:{structure:ee,memory:{array:ft}}}}}}}}},slot:40});Object.assign(D,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:39});Object.assign(re,{...t,type:1,name:"[9:0]u8",length:9,byteSize:10,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:58});Object.assign(ae,{...t,type:11,name:"*const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:57});Object.assign(F,{...t,type:11,name:"*const *const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:56});const dt=new Uint8Array,St=new Uint8Array([16,251,15,0]),ht=new Uint8Array([0,0,0,0,0,0,0,0]),gt=new Uint8Array([56,251,15,0]),zt=new Uint8Array([0,0,0,0,0,192,114,64]),Ot=new Uint8Array([96,251,15,0]),wt=new Uint8Array([0,0,0,0,0,0,0,64]),Rt=new Uint8Array([136,251,15,0]),qt=new Uint8Array([89,5,16,0]),At=new Uint8Array([101,100,103,101,65,108,112,104,97,0]);Object.assign(ne,{...t,type:2,name:"Struct0012",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:F}],methods:[],template:{memory:{array:dt},slots:{0:{structure:r,memory:{array:St},slots:{0:{structure:m,memory:{array:ht}}}},1:{structure:r,memory:{array:gt},slots:{0:{structure:m,memory:{array:zt}}}},2:{structure:r,memory:{array:Ot},slots:{0:{structure:m,memory:{array:wt}}}},3:{structure:F,memory:{array:Rt},slots:{0:{structure:ae,memory:{array:qt},slots:{0:{structure:re,memory:{array:At}}}}}}}}},slot:42});Object.assign(M,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:41});const Ut=new Uint8Array,jt=new Uint8Array([170,170,170,170]),Pt=new Uint8Array,xt=new Uint8Array([170,170,170,170]),Vt=new Uint8Array,Ct=new Uint8Array([170,170,170,170]),kt=new Uint8Array;Object.assign(ie,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dist",structure:E},{...e,type:8,isRequired:!1,slot:1,name:"size",structure:D},{...e,type:8,isRequired:!1,slot:2,name:"edgeAlpha",structure:M}],methods:[],template:{memory:{array:Ut},slots:{0:{structure:E,memory:{array:jt},slots:{0:{structure:Z,memory:{array:Pt}}}},1:{structure:D,memory:{array:xt},slots:{0:{structure:se,memory:{array:Vt}}}},2:{structure:M,memory:{array:Ct},slots:{0:{structure:ne,memory:{array:kt}}}}}}},slot:15});Object.assign(_,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:14});const It=new Uint8Array,vt=new Uint8Array([48,252,15,0]),Et=new Uint8Array([4,0,0,0]);Object.assign(R,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:It},slots:{0:{structure:f,memory:{array:vt},slots:{0:{structure:p,memory:{array:Et}}}}}}},slot:44});Object.assign(g,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:R}],methods:[],template:null},slot:43});const Kt=new Uint8Array,Dt=new Uint8Array([170,170,170,170]),Ft=new Uint8Array;Object.assign(ue,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:g}],methods:[],template:{memory:{array:Kt},slots:{0:{structure:g,memory:{array:Dt},slots:{0:{structure:R,memory:{array:Ft}}}}}}},slot:17});Object.assign(T,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:16});const Mt=new Uint8Array,_t=new Uint8Array([170,170,170,170]),Tt=new Uint8Array;Object.assign(oe,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:g}],methods:[],template:{memory:{array:Mt},slots:{0:{structure:g,memory:{array:_t},slots:{0:{structure:R,memory:{array:Tt}}}}}}},slot:19});Object.assign($,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:18});const $t=new Uint8Array,Bt=new Uint8Array,Lt=new Uint8Array([68,9,16,0]),Gt=new Uint8Array([234,8,16,0]),Ht=new Uint8Array([98,101,46,110,101,117,114,111,112,114,111,100,117,99,116,105,111,110,115,0]),Jt=new Uint8Array([64,9,16,0]),Nt=new Uint8Array([205,8,16,0]),Qt=new Uint8Array([78,101,117,114,111,32,80,114,111,100,117,99,116,105,111,110,115,0]),Wt=new Uint8Array([60,9,16,0]),Xt=new Uint8Array([1,0,0,0]),Yt=new Uint8Array([56,9,16,0]),Zt=new Uint8Array([175,8,16,0]),es=new Uint8Array([99,105,114,99,108,101,80,105,120,101,108,115,0]),ts=new Uint8Array([170,170,170,170]),ss=new Uint8Array,rs=new Uint8Array([170,170,170,170]),as=new Uint8Array,ns=new Uint8Array([170,170,170,170]),is=new Uint8Array;Object.assign(Se,{...t,type:2,name:"circle-pixels.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:$t}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:C},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:k},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:f},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:I},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:_},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:T},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:$}],methods:[],template:{memory:{array:Bt},slots:{0:{structure:C,memory:{array:Lt},slots:{0:{structure:H,memory:{array:Gt},slots:{0:{structure:G,memory:{array:Ht}}}}}},1:{structure:k,memory:{array:Jt},slots:{0:{structure:N,memory:{array:Nt},slots:{0:{structure:J,memory:{array:Qt}}}}}},2:{structure:f,memory:{array:Wt},slots:{0:{structure:p,memory:{array:Xt}}}},3:{structure:I,memory:{array:Yt},slots:{0:{structure:W,memory:{array:Zt},slots:{0:{structure:Q,memory:{array:es}}}}}},4:{structure:_,memory:{array:ts},slots:{0:{structure:ie,memory:{array:ss}}}},5:{structure:T,memory:{array:rs},slots:{0:{structure:ue,memory:{array:as}}}},6:{structure:$,memory:{array:ns},slots:{0:{structure:oe,memory:{array:is}}}}}}},slot:1});Object.assign(z,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:24});Object.assign(le,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:z}],methods:[],template:null},slot:23});Object.assign(me,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:le}],methods:[],template:null},slot:22});Object.assign(l,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:l}],methods:[],template:null},slot:25});const us=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(ce,{...t,type:9,name:"circle-pixels.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:p},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:p}],methods:[],template:{memory:{array:us}}},slot:26});Object.assign(w,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:w}],methods:[],template:null},slot:27});Object.assign(ye,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:45});const os=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ls=new Uint8Array,ms=new Uint8Array([132,8,16,0]),cs=new Uint8Array([4,0,0,0]);Object.assign(B,{...t,type:2,name:"circle-pixels.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:me},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ce},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:w}],methods:[],template:{memory:{array:os}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:z},{...e,type:7,isRequired:!1,name:"FPixel",structure:ye},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:ls},slots:{0:{structure:f,memory:{array:ms},slots:{0:{structure:p,memory:{array:cs}}}}}}},slot:21});const ys=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),bs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Pe=new Uint8Array([0,0,0,0,0,0,0,0]),ps=new Uint8Array;Object.assign(q,{...t,type:2,name:"circle-pixels.KernelInput(u8,circle-pixels.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:B}],methods:[],template:{memory:{array:ys},slots:{0:{structure:B,memory:{array:bs},slots:{0:{structure:me,memory:{array:Pe},address:1047200,slots:{0:{structure:le,memory:{array:ps},address:0}}}}}}}},slot:20});Object.assign(be,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:z}],methods:[],template:null},slot:23});Object.assign(pe,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:be}],methods:[],template:null},slot:30});const fs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ds=new Uint8Array,Ss=new Uint8Array([132,8,16,0]),hs=new Uint8Array([4,0,0,0]);Object.assign(L,{...t,type:2,name:"circle-pixels.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:pe},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ce},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:w}],methods:[],template:{memory:{array:fs}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:z},{...e,type:7,isRequired:!1,name:"FPixel",structure:ye},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:ds},slots:{0:{structure:f,memory:{array:Ss},slots:{0:{structure:p,memory:{array:hs}}}}}}},slot:29});const gs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),zs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Os=new Uint8Array;Object.assign(A,{...t,type:2,name:"circle-pixels.KernelOutput(u8,circle-pixels.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:L}],methods:[],template:{memory:{array:gs},slots:{0:{structure:L,memory:{array:zs},slots:{0:{structure:pe,memory:{array:Pe},address:1047200,slots:{0:{structure:be,memory:{array:Os},address:0}}}}}}}},slot:28});const ws=new Uint8Array([0,0,200,66,0,0,128,63,0,0,0,64]);Object.assign(U,{...t,type:2,name:"circle-pixels.KernelParameters(circle-pixels.kernel)",length:1,byteSize:12,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"dist",structure:y},{...e,type:4,isRequired:!1,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"size",structure:y},{...e,type:4,isRequired:!1,bitOffset:64,bitSize:32,byteSize:4,slot:2,name:"edgeAlpha",structure:y}],methods:[],template:{memory:{array:ws}}},slot:31});Object.assign(he,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(circle-pixels.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:46});Object.assign(ge,{...t,type:7,name:"ErrorSet0000!circle-pixels.KernelOutput(u8,circle-pixels.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:A},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:he}],methods:[],template:null},slot:35});Object.assign(ze,{...t,type:3,name:"createOutput",length:1,byteSize:72,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"0",structure:l},{...e,type:3,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"1",structure:l},{...e,type:6,bitOffset:64,bitSize:192,byteSize:24,slot:2,name:"2",structure:q},{...e,type:6,bitOffset:256,bitSize:96,byteSize:12,slot:3,name:"3",structure:U},{...e,type:6,bitOffset:352,bitSize:224,byteSize:28,slot:4,name:"retval",structure:ge}],methods:[],template:null},slot:33});Object.assign(Oe,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(circle-pixels.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:47});Object.assign(we,{...t,type:7,name:"ErrorSet0001!circle-pixels.KernelOutput(u8,circle-pixels.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:A},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Oe}],methods:[],template:null},slot:36});Object.assign(Re,{...t,type:3,name:"createPartialOutput",length:1,byteSize:80,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"0",structure:l},{...e,type:3,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"1",structure:l},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:2,name:"2",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:3,name:"3",structure:l},{...e,type:6,bitOffset:128,bitSize:192,byteSize:24,slot:4,name:"4",structure:q},{...e,type:6,bitOffset:320,bitSize:96,byteSize:12,slot:5,name:"5",structure:U},{...e,type:6,bitOffset:416,bitSize:224,byteSize:28,slot:6,name:"retval",structure:we}],methods:[],template:null},slot:34});const Rs=new Uint8Array,qs={argStruct:ze,thunk:6,name:"createOutput"},As={argStruct:Re,thunk:1,name:"createPartialOutput"};Object.assign(qe,{...t,type:2,name:"circle-pixels",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Rs}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:Se},{...e,type:7,isRequired:!1,name:"Input",structure:q},{...e,type:7,isRequired:!1,name:"Output",structure:A},{...e,type:7,isRequired:!1,name:"Parameters",structure:U}],methods:[qs,As],template:null},slot:0});const Us=[b,G,H,C,J,N,k,p,f,Q,W,I,y,m,r,X,Y,v,Z,E,ee,te,K,se,D,re,ae,F,ne,M,ie,_,R,g,ue,T,oe,$,Se,z,le,me,l,ce,w,ye,B,q,be,pe,L,A,U,he,ge,ze,Oe,we,Re,qe],js=Ne(Us),Ps=qe.constructor,xs=(async()=>{const i=new URL("circle-pixels-434239d5.wasm",import.meta.url).href;return fetch(i)})();Qe(xs,{...js,writeBack:!0});const{createOutput:Ds,createPartialOutput:Vs,kernel:de,Input:Cs,Output:Fs,Parameters:Ms}=Ps;function ks(i,o,a,s,n={},S={}){if(Array.isArray(n)){const d=n;n={};for(const[c,h]of Object.keys(de.inputImages).entries())n[h]=d[c]}const j=new Cs(void 0),P=Object.keys(de.inputImages),u=[];let O;for(const d of P){let c=n[d];if(c||(P.length===1&&["data","width","height"].every(h=>!!n[h])?c=n:u.push(d)),j[d]=c,O){if(c.colorSpace!==O)throw new Error(`Input images must all use the same color space: ${O}`)}else O=c.colorSpace}if(u.length>0)throw new Error(`Missing input image${u.length>1?"s":""}: ${u.join(", ")}`);const fe=Vs(i,o,a,s,j,S),Ae=d=>{const c=Object.keys(d),h={};for(const Ue of c){const{data:{typedArray:x},width:je,height:Ve}=d[Ue];let V;if(typeof ImageData=="function"){const Ce=new Uint8ClampedArray(x.buffer,x.byteOffset,x.byteLength);V=new ImageData(Ce,je,s,{colorSpace:O})}else V={data:x,width:je,height:Ve};if(c.length===1)return V;h[Ue]=V}return h};return fe[Symbol.toStringTag]==="Promise"?fe.then(Ae):Ae(fe)}function Is(){const i={};for(let[o,a]of Object.entries(de)){if(o==="parameters"){const s={};for(const[n,S]of Object.entries(a)){const j=s[n]={};for(let[P,u]of Object.entries(S))typeof u=="object"?"string"in u?u=u.string:u=xe(u):typeof u=="function"&&(u=vs(u.name)),j[P]=u}a=s}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());i[o]=a}return i}function xe(i){const o=[];for(let[a,s]of Object.entries(i))typeof s=="object"&&(s=xe(s)),o[a]=s;return o}function vs(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[o,a,...s]=i.data;Es(o,s).then(([n,S])=>{postMessage([o,a,n],{transfer:S})}).catch(n=>{postMessage(["error",a,n])})};async function Es(i,o){switch(i){case"getKernelInfo":return[Is(...o)];case"createPartialImageData":const s=await ks(...o),n=[];if("data"in s&&"width"in s&&"height"in s)n.push(s.data.buffer);else for(const S of Object.entries(s))n.push(s.data.buffer);return[s,n];default:throw new Error(`Unknown function: ${i}`)}}
