import{u as rt,a as at,b as nt,c as it,d as ut,e as ot,f as lt,g as mt,h as yt,i as ct,j as bt,k as pt,l as ft,m as dt,o as St,n as ht,p as gt,q as zt}from"./index-422d9c98.js";rt();at();nt();it();ut();ot();lt();mt();yt();ct();bt();pt();ft();dt();St();ht();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},b={},ue={},oe={},M={},le={},me={},T={},f={},d={},a={},r={},s={},ye={},ce={},_={},be={},$={},pe={},fe={},B={},de={},H={},Se={},he={},L={},ge={},W={},A={},U={},g={},ze={},X={},C={},v={},O={},Re={},Y={},we={},G={},Oe={},w={},h={},qe={},Ae={},J={},Ue={},Q={},je={},Z={},Pe={},Ve={},ee={},Ce={},te={},ve={},se={},I={},q={},Ie={},re={},ke={},ae={},_e={},j={},xe={},Ee={},c={},Ke={},V={},Ne={},ne={},k={},De={},Fe={},ie={},x={},E={},$e={},Be={},He={},Le={},We={},Xe={},Ye={};Object.assign(b,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:5});Object.assign(ue,{...t,type:1,name:"[14:0]u8",length:14,byteSize:15,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:4});Object.assign(oe,{...t,type:11,name:"*const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:3});Object.assign(M,{...t,type:11,name:"*const *const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:2});Object.assign(le,{...t,type:1,name:"[9:0]u8",length:9,byteSize:10,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:8});Object.assign(me,{...t,type:11,name:"*const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:7});Object.assign(T,{...t,type:11,name:"*const *const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:6});Object.assign(f,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:f}],methods:[],template:null},slot:10});Object.assign(d,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:f}],methods:[],template:null},slot:9});Object.assign(a,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:a}],methods:[],template:null},slot:29});Object.assign(r,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[],template:null},slot:59});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:r}],methods:[],template:null},slot:58});Object.assign(ye,{...t,type:1,name:"[15:0]u8",length:15,byteSize:16,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:62});Object.assign(ce,{...t,type:11,name:"*const [15:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:61});Object.assign(_,{...t,type:11,name:"*const *const [15:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:60});const Rt=new Uint8Array([]),wt=new Uint8Array([112,251,15,0]),Ot=new Uint8Array([0,0,0,0,0,0,0,0]),qt=new Uint8Array([152,251,15,0]),At=new Uint8Array([0,0,0,0,0,64,143,64]),Ut=new Uint8Array([192,251,15,0]),jt=new Uint8Array([0,0,0,0,0,0,89,64]),Pt=new Uint8Array([232,251,15,0]),Vt=new Uint8Array([0,35,16,0]),Ct=new Uint8Array([84,111,112,32,82,111,108,108,32,82,97,100,105,117,115,0]);Object.assign(be,{...t,type:2,name:"Struct0016",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:a},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"displayName",structure:_}],methods:[],template:{memory:{array:Rt},slots:{0:{structure:s,memory:{array:wt},slots:{0:{structure:r,memory:{array:Ot}}}},1:{structure:s,memory:{array:qt},slots:{0:{structure:r,memory:{array:At}}}},2:{structure:s,memory:{array:Ut},slots:{0:{structure:r,memory:{array:jt}}}},3:{structure:_,memory:{array:Pt},slots:{0:{structure:ce,memory:{array:Vt},slots:{0:{structure:ye,memory:{array:Ct},address:1057536}}}}}}}},slot:36});Object.assign($,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:35});Object.assign(pe,{...t,type:1,name:"[18:0]u8",length:18,byteSize:19,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:65});Object.assign(fe,{...t,type:11,name:"*const [18:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:64});Object.assign(B,{...t,type:11,name:"*const *const [18:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:63});const vt=new Uint8Array([]),It=new Uint8Array([112,251,15,0]),kt=new Uint8Array([0,0,0,0,0,0,0,0]),xt=new Uint8Array([152,251,15,0]),Et=new Uint8Array([0,0,0,0,0,64,143,64]),Kt=new Uint8Array([192,251,15,0]),Nt=new Uint8Array([0,0,0,0,0,0,89,64]),Dt=new Uint8Array([232,251,15,0]),Ft=new Uint8Array([237,34,16,0]),Mt=new Uint8Array([66,111,116,116,111,109,32,82,111,108,108,32,82,97,100,105,117,115,0]);Object.assign(de,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:a},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"displayName",structure:B}],methods:[],template:{memory:{array:vt},slots:{0:{structure:s,memory:{array:It},slots:{0:{structure:r,memory:{array:kt}}}},1:{structure:s,memory:{array:xt},slots:{0:{structure:r,memory:{array:Et}}}},2:{structure:s,memory:{array:Kt},slots:{0:{structure:r,memory:{array:Nt}}}},3:{structure:B,memory:{array:Dt},slots:{0:{structure:fe,memory:{array:Ft},slots:{0:{structure:pe,memory:{array:Mt},address:1057517}}}}}}}},slot:38});Object.assign(H,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:de}],methods:[],template:null},slot:37});Object.assign(Se,{...t,type:1,name:"[11:0]u8",length:11,byteSize:12,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:68});Object.assign(he,{...t,type:11,name:"*const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Se}],methods:[],template:null},slot:67});Object.assign(L,{...t,type:11,name:"*const *const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:he}],methods:[],template:null},slot:66});const Tt=new Uint8Array([]),_t=new Uint8Array([112,251,15,0]),$t=new Uint8Array([0,0,0,0,0,0,0,0]),Bt=new Uint8Array([152,251,15,0]),Ht=new Uint8Array([0,0,0,0,0,64,143,64]),Lt=new Uint8Array([192,251,15,0]),Wt=new Uint8Array([0,0,0,0,0,64,127,64]),Xt=new Uint8Array([232,251,15,0]),Yt=new Uint8Array([225,34,16,0]),Gt=new Uint8Array([82,111,108,108,32,72,101,105,103,104,116,0]);Object.assign(ge,{...t,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:a},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"displayName",structure:L}],methods:[],template:{memory:{array:Tt},slots:{0:{structure:s,memory:{array:_t},slots:{0:{structure:r,memory:{array:$t}}}},1:{structure:s,memory:{array:Bt},slots:{0:{structure:r,memory:{array:Ht}}}},2:{structure:s,memory:{array:Lt},slots:{0:{structure:r,memory:{array:Wt}}}},3:{structure:L,memory:{array:Xt},slots:{0:{structure:he,memory:{array:Yt},slots:{0:{structure:Se,memory:{array:Gt},address:1057505}}}}}}}},slot:40});Object.assign(W,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ge}],methods:[],template:null},slot:39});Object.assign(A,{...t,type:1,name:"[13:0]u8",length:13,byteSize:14,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:71});Object.assign(U,{...t,type:11,name:"*const [13:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:A}],methods:[],template:null},slot:70});Object.assign(g,{...t,type:11,name:"*const *const [13:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:U}],methods:[],template:null},slot:69});const Jt=new Uint8Array([]),Qt=new Uint8Array([240,251,15,0]),Zt=new Uint8Array([0,0,0,0,0,0,0,0]),es=new Uint8Array([120,252,15,0]),ts=new Uint8Array([0,0,0,0,0,64,143,64]),ss=new Uint8Array([128,250,15,0]),rs=new Uint8Array([0,0,0,0,0,0,0,0]),as=new Uint8Array([24,251,15,0]),ns=new Uint8Array([211,34,16,0]),is=new Uint8Array([82,111,108,108,32,79,102,102,115,101,116,32,89,0]);Object.assign(ze,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:a},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"displayName",structure:g}],methods:[],template:{memory:{array:Jt},slots:{0:{structure:s,memory:{array:Qt},slots:{0:{structure:r,memory:{array:Zt}}}},1:{structure:s,memory:{array:es},slots:{0:{structure:r,memory:{array:ts}}}},2:{structure:s,memory:{array:ss},slots:{0:{structure:r,memory:{array:rs}}}},3:{structure:g,memory:{array:as},slots:{0:{structure:U,memory:{array:ns},slots:{0:{structure:A,memory:{array:is},address:1057491}}}}}}}},slot:42});Object.assign(X,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ze}],methods:[],template:null},slot:41});Object.assign(C,{...t,type:1,name:"[10:0]u8",length:10,byteSize:11,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:74});Object.assign(v,{...t,type:11,name:"*const [10:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:C}],methods:[],template:null},slot:73});Object.assign(O,{...t,type:11,name:"*const *const [10:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:v}],methods:[],template:null},slot:72});const us=new Uint8Array([]),os=new Uint8Array([240,251,15,0]),ls=new Uint8Array([0,0,0,0,0,0,0,0]),ms=new Uint8Array([120,252,15,0]),ys=new Uint8Array([0,0,0,0,0,64,143,64]),cs=new Uint8Array([128,250,15,0]),bs=new Uint8Array([0,0,0,0,0,64,127,64]),ps=new Uint8Array([24,251,15,0]),fs=new Uint8Array([200,34,16,0]),ds=new Uint8Array([82,111,108,108,32,87,105,100,116,104,0]);Object.assign(Re,{...t,type:2,name:"Struct0020",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:a},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"displayName",structure:O}],methods:[],template:{memory:{array:us},slots:{0:{structure:s,memory:{array:os},slots:{0:{structure:r,memory:{array:ls}}}},1:{structure:s,memory:{array:ms},slots:{0:{structure:r,memory:{array:ys}}}},2:{structure:s,memory:{array:cs},slots:{0:{structure:r,memory:{array:bs}}}},3:{structure:O,memory:{array:ps},slots:{0:{structure:v,memory:{array:fs},slots:{0:{structure:C,memory:{array:ds},address:1057480}}}}}}}},slot:44});Object.assign(Y,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Re}],methods:[],template:null},slot:43});const Ss=new Uint8Array([]),hs=new Uint8Array([240,251,15,0]),gs=new Uint8Array([0,0,0,0,0,0,0,0]),zs=new Uint8Array([120,252,15,0]),Rs=new Uint8Array([0,0,0,0,0,64,143,64]),ws=new Uint8Array([128,250,15,0]),Os=new Uint8Array([0,0,0,0,0,0,0,0]),qs=new Uint8Array([24,251,15,0]),As=new Uint8Array([186,34,16,0]),Us=new Uint8Array([82,111,108,108,32,79,102,102,115,101,116,32,88,0]);Object.assign(we,{...t,type:2,name:"Struct0021",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:a},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"displayName",structure:g}],methods:[],template:{memory:{array:Ss},slots:{0:{structure:s,memory:{array:hs},slots:{0:{structure:r,memory:{array:gs}}}},1:{structure:s,memory:{array:zs},slots:{0:{structure:r,memory:{array:Rs}}}},2:{structure:s,memory:{array:ws},slots:{0:{structure:r,memory:{array:Os}}}},3:{structure:g,memory:{array:qs},slots:{0:{structure:U,memory:{array:As},slots:{0:{structure:A,memory:{array:Us},address:1057466}}}}}}}},slot:46});Object.assign(G,{...t,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:we}],methods:[],template:null},slot:45});Object.assign(Oe,{...t,type:13,name:"@Vector(3, f32)",length:3,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:a}],methods:[],template:null},slot:30});const js=new Uint8Array([]),Ps=new Uint8Array([184,247,15,0]),Vs=new Uint8Array([0,0,0,0,0,0,0,0]),Cs=new Uint8Array([224,247,15,0]),vs=new Uint8Array([0,0,0,0,0,0,0,0]),Is=new Uint8Array([8,248,15,0]),ks=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(w,{...t,type:2,name:"Struct0027",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:js},slots:{0:{structure:s,memory:{array:Ps},slots:{0:{structure:r,memory:{array:Vs}}}},1:{structure:s,memory:{array:Cs},slots:{0:{structure:r,memory:{array:vs}}}},2:{structure:s,memory:{array:Is},slots:{0:{structure:r,memory:{array:ks}}}}}}},slot:76});Object.assign(h,{...t,type:11,name:"Struct0026",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:w}],methods:[],template:null},slot:75});Object.assign(qe,{...t,type:1,name:"[8:0]u8",length:8,byteSize:9,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:79});Object.assign(Ae,{...t,type:11,name:"*const [8:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:qe}],methods:[],template:null},slot:78});Object.assign(J,{...t,type:11,name:"*const *const [8:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ae}],methods:[],template:null},slot:77});const xs=new Uint8Array([]),Es=new Uint8Array([170,170,170,170]),o=new Uint8Array([]),Ks=new Uint8Array([170,170,170,170]),Ns=new Uint8Array([170,170,170,170]),Ds=new Uint8Array([164,251,15,0]),Fs=new Uint8Array([177,34,16,0]),Ms=new Uint8Array([99,111,108,111,114,82,71,66,0]),Ts=new Uint8Array([204,251,15,0]),_s=new Uint8Array([166,34,16,0]),$s=new Uint8Array([70,111,103,32,67,111,108,111,117,114,0]);Object.assign(Ue,{...t,type:2,name:"Struct0022",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:Oe},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:h},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:h},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:h},{...e,type:8,isRequired:!1,slot:3,name:"parameterType",structure:J},{...e,type:8,isRequired:!1,slot:4,name:"displayName",structure:O}],methods:[],template:{memory:{array:xs},slots:{0:{structure:h,memory:{array:Es},slots:{0:{structure:w,memory:{array:o},address:-1431655766}}},1:{structure:h,memory:{array:Ks},slots:{0:{structure:w,memory:{array:o},address:-1431655766}}},2:{structure:h,memory:{array:Ns},slots:{0:{structure:w,memory:{array:o},address:-1431655766}}},3:{structure:J,memory:{array:Ds},slots:{0:{structure:Ae,memory:{array:Fs},slots:{0:{structure:qe,memory:{array:Ms},address:1057457}}}}},4:{structure:O,memory:{array:Ts},slots:{0:{structure:v,memory:{array:_s},slots:{0:{structure:C,memory:{array:$s},address:1057446}}}}}}}},slot:48});Object.assign(Q,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ue}],methods:[],template:null},slot:47});const Bs=new Uint8Array([]),Hs=new Uint8Array([240,251,15,0]),Ls=new Uint8Array([0,0,0,0,0,0,0,0]),Ws=new Uint8Array([120,252,15,0]),Xs=new Uint8Array([0,0,0,0,0,0,36,64]),Ys=new Uint8Array([128,250,15,0]),Gs=new Uint8Array([0,0,0,0,0,0,240,63]),Js=new Uint8Array([24,251,15,0]),Qs=new Uint8Array([152,34,16,0]),Zs=new Uint8Array([70,111,103,32,73,110,102,108,117,101,110,99,101,0]);Object.assign(je,{...t,type:2,name:"Struct0023",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:a},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"displayName",structure:g}],methods:[],template:{memory:{array:Bs},slots:{0:{structure:s,memory:{array:Hs},slots:{0:{structure:r,memory:{array:Ls}}}},1:{structure:s,memory:{array:Ws},slots:{0:{structure:r,memory:{array:Xs}}}},2:{structure:s,memory:{array:Ys},slots:{0:{structure:r,memory:{array:Gs}}}},3:{structure:g,memory:{array:Js},slots:{0:{structure:U,memory:{array:Qs},slots:{0:{structure:A,memory:{array:Zs},address:1057432}}}}}}}},slot:50});Object.assign(Z,{...t,type:11,name:"Struct0013",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:je}],methods:[],template:null},slot:49});Object.assign(Pe,{...t,type:1,name:"[4:0]u8",length:4,byteSize:5,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:82});Object.assign(Ve,{...t,type:11,name:"*const [4:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Pe}],methods:[],template:null},slot:81});Object.assign(ee,{...t,type:11,name:"*const *const [4:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ve}],methods:[],template:null},slot:80});const er=new Uint8Array([]),tr=new Uint8Array([112,251,15,0]),sr=new Uint8Array([0,0,0,0,0,0,0,0]),rr=new Uint8Array([152,251,15,0]),ar=new Uint8Array([0,0,0,0,0,0,36,64]),nr=new Uint8Array([192,251,15,0]),ir=new Uint8Array([0,0,0,0,0,0,240,63]),ur=new Uint8Array([232,251,15,0]),or=new Uint8Array([147,34,16,0]),lr=new Uint8Array([70,97,100,101,0]);Object.assign(Ce,{...t,type:2,name:"Struct0024",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:a},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"displayName",structure:ee}],methods:[],template:{memory:{array:er},slots:{0:{structure:s,memory:{array:tr},slots:{0:{structure:r,memory:{array:sr}}}},1:{structure:s,memory:{array:rr},slots:{0:{structure:r,memory:{array:ar}}}},2:{structure:s,memory:{array:nr},slots:{0:{structure:r,memory:{array:ir}}}},3:{structure:ee,memory:{array:ur},slots:{0:{structure:Ve,memory:{array:or},slots:{0:{structure:Pe,memory:{array:lr},address:1057427}}}}}}}},slot:52});Object.assign(te,{...t,type:11,name:"Struct0014",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ce}],methods:[],template:null},slot:51});const mr=new Uint8Array([]),yr=new Uint8Array([170,170,170,170]),cr=new Uint8Array([170,170,170,170]),br=new Uint8Array([170,170,170,170]),pr=new Uint8Array([170,170,170,170]),fr=new Uint8Array([170,170,170,170]),dr=new Uint8Array([170,170,170,170]),Sr=new Uint8Array([170,170,170,170]),hr=new Uint8Array([170,170,170,170]),gr=new Uint8Array([170,170,170,170]);Object.assign(ve,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"topRollRadius",structure:$},{...e,type:8,isRequired:!1,slot:1,name:"bottomRollRadius",structure:H},{...e,type:8,isRequired:!1,slot:2,name:"rollHeight",structure:W},{...e,type:8,isRequired:!1,slot:3,name:"rollOffsetY",structure:X},{...e,type:8,isRequired:!1,slot:4,name:"rollWidth",structure:Y},{...e,type:8,isRequired:!1,slot:5,name:"rollOffsetX",structure:G},{...e,type:8,isRequired:!1,slot:6,name:"fogColour",structure:Q},{...e,type:8,isRequired:!1,slot:7,name:"fogInfluence",structure:Z},{...e,type:8,isRequired:!1,slot:8,name:"fade",structure:te}],methods:[],template:{memory:{array:mr},slots:{0:{structure:$,memory:{array:yr},slots:{0:{structure:be,memory:{array:o},address:-1431655766}}},1:{structure:H,memory:{array:cr},slots:{0:{structure:de,memory:{array:o},address:-1431655766}}},2:{structure:W,memory:{array:br},slots:{0:{structure:ge,memory:{array:o},address:-1431655766}}},3:{structure:X,memory:{array:pr},slots:{0:{structure:ze,memory:{array:o},address:-1431655766}}},4:{structure:Y,memory:{array:fr},slots:{0:{structure:Re,memory:{array:o},address:-1431655766}}},5:{structure:G,memory:{array:dr},slots:{0:{structure:we,memory:{array:o},address:-1431655766}}},6:{structure:Q,memory:{array:Sr},slots:{0:{structure:Ue,memory:{array:o},address:-1431655766}}},7:{structure:Z,memory:{array:hr},slots:{0:{structure:je,memory:{array:o},address:-1431655766}}},8:{structure:te,memory:{array:gr},slots:{0:{structure:Ce,memory:{array:o},address:-1431655766}}}}}},slot:12});Object.assign(se,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ve}],methods:[],template:null},slot:11});const zr=new Uint8Array([]),Rr=new Uint8Array([112,252,15,0]),wr=new Uint8Array([4,0,0,0]);Object.assign(I,{...t,type:2,name:"Struct0025",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:d}],methods:[],template:{memory:{array:zr},slots:{0:{structure:d,memory:{array:Rr},slots:{0:{structure:f,memory:{array:wr}}}}}}},slot:54});Object.assign(q,{...t,type:11,name:"Struct0015",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:I}],methods:[],template:null},slot:53});const Or=new Uint8Array([]),qr=new Uint8Array([170,170,170,170]);Object.assign(Ie,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:q}],methods:[],template:{memory:{array:Or},slots:{0:{structure:q,memory:{array:qr},slots:{0:{structure:I,memory:{array:o},address:-1431655766}}}}}},slot:14});Object.assign(re,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ie}],methods:[],template:null},slot:13});const Ar=new Uint8Array([]),Ur=new Uint8Array([170,170,170,170]);Object.assign(ke,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:q}],methods:[],template:{memory:{array:Ar},slots:{0:{structure:q,memory:{array:Ur},slots:{0:{structure:I,memory:{array:o},address:-1431655766}}}}}},slot:16});Object.assign(ae,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ke}],methods:[],template:null},slot:15});const jr=new Uint8Array([]),Pr=new Uint8Array([]),Vr=new Uint8Array([92,253,15,0]),Cr=new Uint8Array([245,38,16,0]),vr=new Uint8Array([119,119,119,46,116,98,121,114,110,101,46,111,114,103,0]),Ir=new Uint8Array([124,253,15,0]),kr=new Uint8Array([235,38,16,0]),xr=new Uint8Array([84,111,109,32,66,121,114,110,101,0]),Er=new Uint8Array([156,253,15,0]),Kr=new Uint8Array([1,0,0,0]),Nr=new Uint8Array([170,170,170,170]),Dr=new Uint8Array([170,170,170,170]),Fr=new Uint8Array([170,170,170,170]);Object.assign(_e,{...t,type:2,name:"vertical-scroll.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:jr}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:M},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:T},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:d},{...e,type:6,isRequired:!1,slot:3,name:"parameters",structure:se},{...e,type:6,isRequired:!1,slot:4,name:"inputImages",structure:re},{...e,type:6,isRequired:!1,slot:5,name:"outputImages",structure:ae}],methods:[],template:{memory:{array:Pr},slots:{0:{structure:M,memory:{array:Vr},slots:{0:{structure:oe,memory:{array:Cr},slots:{0:{structure:ue,memory:{array:vr},address:1058549}}}}},1:{structure:T,memory:{array:Ir},slots:{0:{structure:me,memory:{array:kr},slots:{0:{structure:le,memory:{array:xr},address:1058539}}}}},2:{structure:d,memory:{array:Er},slots:{0:{structure:f,memory:{array:Kr}}}},3:{structure:se,memory:{array:Nr},slots:{0:{structure:ve,memory:{array:o},address:-1431655766}}},4:{structure:re,memory:{array:Dr},slots:{0:{structure:Ie,memory:{array:o},address:-1431655766}}},5:{structure:ae,memory:{array:Fr},slots:{0:{structure:ke,memory:{array:o},address:-1431655766}}}}}},slot:1});Object.assign(j,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:21});Object.assign(xe,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:j}],methods:[],template:null},slot:20});Object.assign(Ee,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:xe}],methods:[],template:null},slot:19});Object.assign(c,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:22});const Mr=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(Ke,{...t,type:9,name:"vertical-scroll.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:f},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:f}],methods:[],template:{memory:{array:Mr}}},slot:23});Object.assign(V,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:V}],methods:[],template:null},slot:24});Object.assign(Ne,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:a}],methods:[],template:null},slot:55});const Tr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),_r=new Uint8Array([]),$r=new Uint8Array([24,252,15,0]),Br=new Uint8Array([4,0,0,0]);Object.assign(ne,{...t,type:2,name:"vertical-scroll.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Ee},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Ke},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:{memory:{array:Tr}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:j},{...e,type:7,isRequired:!1,name:"FPixel",structure:Ne},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:d}],methods:[],template:{memory:{array:_r},slots:{0:{structure:d,memory:{array:$r},slots:{0:{structure:f,memory:{array:Br}}}}}}},slot:18});const Hr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Lr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Wr=new Uint8Array([0,0,0,0,0,0,0,0]),Ge=new Uint8Array([]);Object.assign(k,{...t,type:2,name:"vertical-scroll.KernelInput(u8,vertical-scroll.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:ne}],methods:[],template:{memory:{array:Hr},slots:{0:{structure:ne,memory:{array:Lr},slots:{0:{structure:Ee,memory:{array:Wr},slots:{0:{structure:xe,memory:{array:Ge}}}}}}}}},slot:17});Object.assign(De,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:j}],methods:[],template:null},slot:20});Object.assign(Fe,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:De}],methods:[],template:null},slot:27});const Xr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Yr=new Uint8Array([]),Gr=new Uint8Array([24,252,15,0]),Jr=new Uint8Array([4,0,0,0]);Object.assign(ie,{...t,type:2,name:"vertical-scroll.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Fe},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Ke},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:{memory:{array:Xr}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:j},{...e,type:7,isRequired:!1,name:"FPixel",structure:Ne},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:d}],methods:[],template:{memory:{array:Yr},slots:{0:{structure:d,memory:{array:Gr},slots:{0:{structure:f,memory:{array:Jr}}}}}}},slot:26});const Qr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Zr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ea=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(x,{...t,type:2,name:"vertical-scroll.KernelOutput(u8,vertical-scroll.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:ie}],methods:[],template:{memory:{array:Qr},slots:{0:{structure:ie,memory:{array:Zr},slots:{0:{structure:Fe,memory:{array:ea},slots:{0:{structure:De,memory:{array:Ge}}}}}}}}},slot:25});const ta=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,66,0,0,200,66,0,0,250,67,0,0,0,0,0,0,250,67,0,0,0,0,0,0,128,63,0,0,128,63]);Object.assign(E,{...t,type:2,name:"vertical-scroll.KernelParameters(vertical-scroll.kernel)",length:1,byteSize:48,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:0,name:"topRollRadius",structure:a},{...e,type:4,isRequired:!1,bitOffset:160,bitSize:32,byteSize:4,slot:1,name:"bottomRollRadius",structure:a},{...e,type:4,isRequired:!1,bitOffset:192,bitSize:32,byteSize:4,slot:2,name:"rollHeight",structure:a},{...e,type:4,isRequired:!1,bitOffset:224,bitSize:32,byteSize:4,slot:3,name:"rollOffsetY",structure:a},{...e,type:4,isRequired:!1,bitOffset:256,bitSize:32,byteSize:4,slot:4,name:"rollWidth",structure:a},{...e,type:4,isRequired:!1,bitOffset:288,bitSize:32,byteSize:4,slot:5,name:"rollOffsetX",structure:a},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:96,byteSize:16,slot:6,name:"fogColour",structure:Oe},{...e,type:4,isRequired:!1,bitOffset:320,bitSize:32,byteSize:4,slot:7,name:"fogInfluence",structure:a},{...e,type:4,isRequired:!1,bitOffset:352,bitSize:32,byteSize:4,slot:8,name:"fade",structure:a}],methods:[],template:{memory:{array:ta}}},slot:28});Object.assign($e,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(vertical-scroll.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:56});Object.assign(Be,{...t,type:7,name:"ErrorSet0000!vertical-scroll.KernelOutput(u8,vertical-scroll.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:x},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:$e}],methods:[],template:null},slot:33});Object.assign(He,{...t,type:3,name:"createOutput",length:1,byteSize:112,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:0,name:"0",structure:c},{...e,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:1,name:"1",structure:c},{...e,type:6,bitOffset:448,bitSize:192,byteSize:24,slot:2,name:"2",structure:k},{...e,type:6,bitOffset:0,bitSize:384,byteSize:48,slot:3,name:"3",structure:E},{...e,type:6,bitOffset:640,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Be}],methods:[],template:null},slot:31});Object.assign(Le,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(vertical-scroll.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:57});Object.assign(We,{...t,type:7,name:"ErrorSet0001!vertical-scroll.KernelOutput(u8,vertical-scroll.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:x},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Le}],methods:[],template:null},slot:34});Object.assign(Xe,{...t,type:3,name:"createPartialOutput",length:1,byteSize:128,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:0,name:"0",structure:c},{...e,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:1,name:"1",structure:c},{...e,type:3,bitOffset:448,bitSize:32,byteSize:4,slot:2,name:"2",structure:c},{...e,type:3,bitOffset:480,bitSize:32,byteSize:4,slot:3,name:"3",structure:c},{...e,type:6,bitOffset:512,bitSize:192,byteSize:24,slot:4,name:"4",structure:k},{...e,type:6,bitOffset:0,bitSize:384,byteSize:48,slot:5,name:"5",structure:E},{...e,type:6,bitOffset:704,bitSize:224,byteSize:28,slot:6,name:"retval",structure:We}],methods:[],template:null},slot:32});const sa={argStruct:He,thunk:4,name:"createOutput"},ra={argStruct:Xe,thunk:3,name:"createPartialOutput"};Object.assign(Ye,{...t,type:2,name:"vertical-scroll",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Ge}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:_e},{...e,type:7,isRequired:!1,name:"Input",structure:k},{...e,type:7,isRequired:!1,name:"Output",structure:x},{...e,type:7,isRequired:!1,name:"Parameters",structure:E}],methods:[sa,ra],template:null},slot:0});const aa=[b,ue,oe,M,le,me,T,f,d,a,r,s,ye,ce,_,be,$,pe,fe,B,de,H,Se,he,L,ge,W,A,U,g,ze,X,C,v,O,Re,Y,we,G,Oe,w,h,qe,Ae,J,Ue,Q,je,Z,Pe,Ve,ee,Ce,te,ve,se,I,q,Ie,re,ke,ae,_e,j,xe,Ee,c,Ke,V,Ne,ne,k,De,Fe,ie,x,E,$e,Be,He,Le,We,Xe,Ye],na=gt(aa),ia=Ye.constructor,ua=(async()=>{const l=new URL("vertical-scroll-f50732a3.wasm",import.meta.url).href;return fetch(l)})();zt(ua,{...na,writeBack:!0});const{createOutput:fa,createPartialOutput:oa,kernel:Te,Input:la,Output:da,Parameters:Sa}=ia;function ma(l,y,i,n,u={},z={}){if(Array.isArray(u)){const S=u;u={};for(const[p,R]of Object.keys(Te.inputImages).entries())u[R]=S[p]}const K=new la(void 0),N=Object.keys(Te.inputImages),m=[];let P;for(const S of N){let p=u[S];if(p||(N.length===1&&["data","width","height"].every(R=>!!u[R])?p=u:m.push(S)),K[S]=p,P){if(p.colorSpace!==P)throw new Error(`Input images must all use the same color space: ${P}`)}else P=p.colorSpace}if(m.length>0)throw new Error(`Missing input image${m.length>1?"s":""}: ${m.join(", ")}`);const Me=oa(l,y,i,n,K,z),Je=S=>{const p=Object.keys(S),R={};for(const Qe of p){const{data:{typedArray:D},width:Ze,height:tt}=S[Qe];let F;if(typeof ImageData=="function"){const st=new Uint8ClampedArray(D.buffer,D.byteOffset,D.byteLength);F=new ImageData(st,Ze,n,{colorSpace:P})}else F={data:D,width:Ze,height:tt};if(p.length===1)return F;R[Qe]=F}return R};return Me[Symbol.toStringTag]==="Promise"?Me.then(Je):Je(Me)}function ya(){const l={};for(let[y,i]of Object.entries(Te)){if(y==="parameters"){const n={};for(const[u,z]of Object.entries(i)){const K=n[u]={};for(let[N,m]of Object.entries(z))typeof m=="object"?"string"in m?m=m.string:m=et(m):typeof m=="function"&&(m=ca(m.name)),K[N]=m}i=n}else typeof i=="object"&&("string"in i?i=i.string:i=i.valueOf());l[y]=i}return l}function et(l){const y=[];for(let[i,n]of Object.entries(l))typeof n=="object"&&(n=et(n)),y[i]=n;return y}function ca(l){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[l]}onmessage=l=>{const[y,i,...n]=l.data;ba(y,n).then(([u,z])=>{postMessage([y,i,u],{transfer:z})}).catch(u=>{postMessage(["error",i,u])})};async function ba(l,y){switch(l){case"getKernelInfo":return[ya(...y)];case"createPartialImageData":const n=await ma(...y),u=[];if("data"in n&&"width"in n&&"height"in n)u.push(n.data.buffer);else for(const z of Object.entries(n))u.push(n.data.buffer);return[n,u];default:throw new Error(`Unknown function: ${l}`)}}
