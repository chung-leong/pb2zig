import{u as ge,a as de,b as ze,c as Oe,d as we,e as Re,f as qe,g as Ae,h as Ue,i as je,j as Pe,k as Ve,l as ke,m as Ie,o as Ce,n as ve,p as xe,q as Ee}from"./index-d64bc850.js";ge();de();ze();Oe();we();Re();qe();Ae();Ue();je();Pe();Ve();ke();Ie();Ce();ve();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},g={},R={},q={},S={},u={},n={},$={},B={},x={},d={},p={},b={},L={},E={},G={},K={},H={},D={},U={},z={},J={},F={},N={},M={},re={},O={},Q={},W={},m={},X={},A={},Y={},_={},j={},Z={},ee={},T={},P={},V={},ae={},ne={},ie={},oe={},ue={},le={},me={};Object.assign(g,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:5});Object.assign(R,{...t,type:1,name:"[14:0]u8",length:14,byteSize:15,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:4});Object.assign(q,{...t,type:11,name:"*const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:R}],methods:[],template:null},slot:3});Object.assign(S,{...t,type:11,name:"*const *const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:q}],methods:[],template:null},slot:2});Object.assign(u,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:u}],methods:[],template:null},slot:7});Object.assign(n,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:u}],methods:[],template:null},slot:6});Object.assign($,{...t,type:1,name:"[85:0]u8",length:85,byteSize:86,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:10});Object.assign(B,{...t,type:11,name:"*const [85:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[],template:null},slot:9});Object.assign(x,{...t,type:11,name:"*const *const [85:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:B}],methods:[],template:null},slot:8});Object.assign(d,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:d}],methods:[],template:null},slot:29});Object.assign(p,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:p}],methods:[],template:null},slot:44});Object.assign(b,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:p}],methods:[],template:null},slot:43});const Ke=new Uint8Array,De=new Uint8Array([24,253,15,0]),Fe=new Uint8Array([0,0,0,0,0,0,0,0]),Me=new Uint8Array([72,253,15,0]),_e=new Uint8Array([0,0,0,0,0,224,111,64]),Te=new Uint8Array([120,253,15,0]),$e=new Uint8Array([0,0,0,0,0,0,96,64]);Object.assign(L,{...t,type:2,name:"Struct0009",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:d},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:b},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:b},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:b}],methods:[],template:{memory:{array:Ke},slots:{0:{structure:b,memory:{array:De},slots:{0:{structure:p,memory:{array:Fe}}}},1:{structure:b,memory:{array:Me},slots:{0:{structure:p,memory:{array:_e}}}},2:{structure:b,memory:{array:Te},slots:{0:{structure:p,memory:{array:$e}}}}}}},slot:35});Object.assign(E,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[],template:null},slot:34});const Be=new Uint8Array,Le=new Uint8Array([60,253,15,0]),Ge=new Uint8Array([0,0,0,0]),He=new Uint8Array([96,253,15,0]),Je=new Uint8Array([1,0,0,0]),Ne=new Uint8Array([80,252,15,0]),Qe=new Uint8Array([0,0,0,0]);Object.assign(G,{...t,type:2,name:"Struct0010",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:n},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:n},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:n}],methods:[],template:{memory:{array:Be},slots:{0:{structure:n,memory:{array:Le},slots:{0:{structure:u,memory:{array:Ge}}}},1:{structure:n,memory:{array:He},slots:{0:{structure:u,memory:{array:Je}}}},2:{structure:n,memory:{array:Ne},slots:{0:{structure:u,memory:{array:Qe}}}}}}},slot:37});Object.assign(K,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:G}],methods:[],template:null},slot:36});const We=new Uint8Array,Xe=new Uint8Array([170,170,170,170]),Ye=new Uint8Array,Ze=new Uint8Array([170,170,170,170]),et=new Uint8Array;Object.assign(H,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"threshhold",structure:E},{...e,type:8,isRequired:!1,slot:1,name:"invert",structure:K}],methods:[],template:{memory:{array:We},slots:{0:{structure:E,memory:{array:Xe},slots:{0:{structure:L,memory:{array:Ye}}}},1:{structure:K,memory:{array:Ze},slots:{0:{structure:G,memory:{array:et}}}}}}},slot:12});Object.assign(D,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[],template:null},slot:11});const tt=new Uint8Array,st=new Uint8Array([80,249,15,0]),rt=new Uint8Array([4,0,0,0]);Object.assign(U,{...t,type:2,name:"Struct0011",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:n}],methods:[],template:{memory:{array:tt},slots:{0:{structure:n,memory:{array:st},slots:{0:{structure:u,memory:{array:rt}}}}}}},slot:39});Object.assign(z,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:U}],methods:[],template:null},slot:38});const at=new Uint8Array,nt=new Uint8Array([170,170,170,170]),it=new Uint8Array;Object.assign(J,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:z}],methods:[],template:{memory:{array:at},slots:{0:{structure:z,memory:{array:nt},slots:{0:{structure:U,memory:{array:it}}}}}}},slot:14});Object.assign(F,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:J}],methods:[],template:null},slot:13});const ot=new Uint8Array,ut=new Uint8Array([170,170,170,170]),lt=new Uint8Array;Object.assign(N,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:z}],methods:[],template:{memory:{array:ot},slots:{0:{structure:z,memory:{array:ut},slots:{0:{structure:U,memory:{array:lt}}}}}}},slot:16});Object.assign(M,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:N}],methods:[],template:null},slot:15});const mt=new Uint8Array,ct=new Uint8Array,yt=new Uint8Array([60,36,16,0]),bt=new Uint8Array([233,35,16,0]),pt=new Uint8Array([99,111,109,46,109,105,109,115,119,114,105,103,104,116,0]),ft=new Uint8Array([56,36,16,0]),ht=new Uint8Array([207,35,16,0]),St=new Uint8Array([77,105,109,115,87,114,105,103,104,116,46,99,111,109,0]),gt=new Uint8Array([52,36,16,0]),dt=new Uint8Array([1,0,0,0]),zt=new Uint8Array([48,36,16,0]),Ot=new Uint8Array([104,35,16,0]),wt=new Uint8Array([101,120,116,114,101,109,101,32,99,111,110,116,114,97,115,116,32,102,105,108,116,101,114,32,116,104,97,116,32,99,111,110,118,101,114,116,115,32,116,111,32,101,105,116,104,101,114,32,49,32,111,114,32,48,32,98,97,115,101,100,32,111,110,32,98,114,105,103,104,116,110,101,115,115,32,111,102,32,115,111,117,114,99,101,46,0]),Rt=new Uint8Array([170,170,170,170]),qt=new Uint8Array,At=new Uint8Array([170,170,170,170]),Ut=new Uint8Array,jt=new Uint8Array([170,170,170,170]),Pt=new Uint8Array;Object.assign(re,{...t,type:2,name:"high-contrast.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:mt}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:S},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:S},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:n},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:x},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:D},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:F},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:M}],methods:[],template:{memory:{array:ct},slots:{0:{structure:S,memory:{array:yt},slots:{0:{structure:q,memory:{array:bt},slots:{0:{structure:R,memory:{array:pt}}}}}},1:{structure:S,memory:{array:ft},slots:{0:{structure:q,memory:{array:ht},slots:{0:{structure:R,memory:{array:St}}}}}},2:{structure:n,memory:{array:gt},slots:{0:{structure:u,memory:{array:dt}}}},3:{structure:x,memory:{array:zt},slots:{0:{structure:B,memory:{array:Ot},slots:{0:{structure:$,memory:{array:wt}}}}}},4:{structure:D,memory:{array:Rt},slots:{0:{structure:H,memory:{array:qt}}}},5:{structure:F,memory:{array:At},slots:{0:{structure:J,memory:{array:Ut}}}},6:{structure:M,memory:{array:jt},slots:{0:{structure:N,memory:{array:Pt}}}}}}},slot:1});Object.assign(O,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:21});Object.assign(Q,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:20});Object.assign(W,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Q}],methods:[],template:null},slot:19});Object.assign(m,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[],template:null},slot:22});const Vt=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(X,{...t,type:9,name:"high-contrast.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:u},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:u}],methods:[],template:{memory:{array:Vt}}},slot:23});Object.assign(A,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:A}],methods:[],template:null},slot:24});Object.assign(Y,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:d}],methods:[],template:null},slot:40});const kt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),It=new Uint8Array,Ct=new Uint8Array([48,35,16,0]),vt=new Uint8Array([4,0,0,0]);Object.assign(_,{...t,type:2,name:"high-contrast.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:W},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:X},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:A}],methods:[],template:{memory:{array:kt}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:Y},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:n}],methods:[],template:{memory:{array:It},slots:{0:{structure:n,memory:{array:Ct},slots:{0:{structure:u,memory:{array:vt}}}}}}},slot:18});const xt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Et=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),pe=new Uint8Array([0,0,0,0,0,0,0,0]),Kt=new Uint8Array;Object.assign(j,{...t,type:2,name:"high-contrast.KernelInput(u8,high-contrast.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:_}],methods:[],template:{memory:{array:xt},slots:{0:{structure:_,memory:{array:Et},slots:{0:{structure:W,memory:{array:pe},address:1047568,slots:{0:{structure:Q,memory:{array:Kt},address:0}}}}}}}},slot:17});Object.assign(Z,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:20});Object.assign(ee,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Z}],methods:[],template:null},slot:27});const Dt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ft=new Uint8Array,Mt=new Uint8Array([48,35,16,0]),_t=new Uint8Array([4,0,0,0]);Object.assign(T,{...t,type:2,name:"high-contrast.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:ee},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:X},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:A}],methods:[],template:{memory:{array:Dt}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:Y},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:n}],methods:[],template:{memory:{array:Ft},slots:{0:{structure:n,memory:{array:Mt},slots:{0:{structure:u,memory:{array:_t}}}}}}},slot:26});const Tt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),$t=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Bt=new Uint8Array;Object.assign(P,{...t,type:2,name:"high-contrast.KernelOutput(u8,high-contrast.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:T}],methods:[],template:{memory:{array:Tt},slots:{0:{structure:T,memory:{array:$t},slots:{0:{structure:ee,memory:{array:pe},address:1047568,slots:{0:{structure:Z,memory:{array:Bt},address:0}}}}}}}},slot:25});const Lt=new Uint8Array([0,0,0,67,0,0,0,0]);Object.assign(V,{...t,type:2,name:"high-contrast.KernelParameters(high-contrast.kernel)",length:1,byteSize:8,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"threshhold",structure:d},{...e,type:2,isRequired:!1,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"invert",structure:u}],methods:[],template:{memory:{array:Lt}}},slot:28});Object.assign(ae,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(high-contrast.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:41});Object.assign(ne,{...t,type:7,name:"ErrorSet0000!high-contrast.KernelOutput(u8,high-contrast.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:P},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:ae}],methods:[],template:null},slot:32});Object.assign(ie,{...t,type:3,name:"createOutput",length:1,byteSize:68,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"0",structure:m},{...e,type:3,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"1",structure:m},{...e,type:6,bitOffset:64,bitSize:192,byteSize:24,slot:2,name:"2",structure:j},{...e,type:6,bitOffset:256,bitSize:64,byteSize:8,slot:3,name:"3",structure:V},{...e,type:6,bitOffset:320,bitSize:224,byteSize:28,slot:4,name:"retval",structure:ne}],methods:[],template:null},slot:30});Object.assign(oe,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(high-contrast.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:42});Object.assign(ue,{...t,type:7,name:"ErrorSet0001!high-contrast.KernelOutput(u8,high-contrast.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:P},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:oe}],methods:[],template:null},slot:33});Object.assign(le,{...t,type:3,name:"createPartialOutput",length:1,byteSize:76,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"0",structure:m},{...e,type:3,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"1",structure:m},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:2,name:"2",structure:m},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:3,name:"3",structure:m},{...e,type:6,bitOffset:128,bitSize:192,byteSize:24,slot:4,name:"4",structure:j},{...e,type:6,bitOffset:320,bitSize:64,byteSize:8,slot:5,name:"5",structure:V},{...e,type:6,bitOffset:384,bitSize:224,byteSize:28,slot:6,name:"retval",structure:ue}],methods:[],template:null},slot:31});const Gt=new Uint8Array,Ht={argStruct:ie,thunk:8,name:"createOutput"},Jt={argStruct:le,thunk:2,name:"createPartialOutput"};Object.assign(me,{...t,type:2,name:"high-contrast",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Gt}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:re},{...e,type:7,isRequired:!1,name:"Input",structure:j},{...e,type:7,isRequired:!1,name:"Output",structure:P},{...e,type:7,isRequired:!1,name:"Parameters",structure:V}],methods:[Ht,Jt],template:null},slot:0});const Nt=[g,R,q,S,u,n,$,B,x,d,p,b,L,E,G,K,H,D,U,z,J,F,N,M,re,O,Q,W,m,X,A,Y,_,j,Z,ee,T,P,V,ae,ne,ie,oe,ue,le,me],Qt=xe(Nt),Wt=me.constructor,Xt=(async()=>{const i=new URL("high-contrast-0eece292.wasm",import.meta.url).href;return fetch(i)})();Ee(Xt,{...Qt,writeBack:!0});const{createOutput:ns,createPartialOutput:Yt,kernel:se,Input:Zt,Output:is,Parameters:os}=Wt;function es(i,l,r,s,a={},f={}){if(Array.isArray(a)){const y=a;a={};for(const[c,h]of Object.keys(se.inputImages).entries())a[h]=y[c]}const k=new Zt(void 0),I=Object.keys(se.inputImages),o=[];let w;for(const y of I){let c=a[y];if(c||(I.length===1&&["data","width","height"].every(h=>!!a[h])?c=a:o.push(y)),k[y]=c,w){if(c.colorSpace!==w)throw new Error(`Input images must all use the same color space: ${w}`)}else w=c.colorSpace}if(o.length>0)throw new Error(`Missing input image${o.length>1?"s":""}: ${o.join(", ")}`);const te=Yt(i,l,r,s,k,f),ce=y=>{const c=Object.keys(y),h={};for(const ye of c){const{data:{typedArray:C},width:be,height:he}=y[ye];let v;if(typeof ImageData=="function"){const Se=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);v=new ImageData(Se,be,s,{colorSpace:w})}else v={data:C,width:be,height:he};if(c.length===1)return v;h[ye]=v}return h};return te[Symbol.toStringTag]==="Promise"?te.then(ce):ce(te)}function ts(){const i={};for(let[l,r]of Object.entries(se)){if(l==="parameters"){const s={};for(const[a,f]of Object.entries(r)){const k=s[a]={};for(let[I,o]of Object.entries(f))typeof o=="object"?"string"in o?o=o.string:o=fe(o):typeof o=="function"&&(o=ss(o.name)),k[I]=o}r=s}else typeof r=="object"&&("string"in r?r=r.string:r=r.valueOf());i[l]=r}return i}function fe(i){const l=[];for(let[r,s]of Object.entries(i))typeof s=="object"&&(s=fe(s)),l[r]=s;return l}function ss(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[l,r,...s]=i.data;rs(l,s).then(([a,f])=>{postMessage([l,r,a],{transfer:f})}).catch(a=>{postMessage(["error",r,a])})};async function rs(i,l){switch(i){case"getKernelInfo":return[ts(...l)];case"createPartialImageData":const s=await es(...l),a=[];if("data"in s&&"width"in s&&"height"in s)a.push(s.data.buffer);else for(const f of Object.entries(s))a.push(s.data.buffer);return[s,a];default:throw new Error(`Unknown function: ${i}`)}}
