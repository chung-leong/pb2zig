import{u as rs,a as ns,b as as,c as is,d as os,e as cs,f as us,g as ms,h as ys,i as bs,j as ls,k as gs,l as ps,m as Os,n as fs,o as Ss,p as js,q as zs}from"./index-270629a1.js";rs();gs();ps();ns();as();Os();fs();Ss();js();is();os();cs();us();zs();ms();ys();bs();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},O={},M={},T={},F={},_={},l={},f={},$={},L={},r={},S={},u={},B={},A={},G={},H={},J={},N={},U={},Q={},W={},ct={},k={},X={},q={},c={},p={},R={},ut={},Y={},I={},Z={},v={},tt={},E={},x={},d={},mt={},yt={},w={},bt={},lt={},gt={},Mt={},pt={},Tt={},Ot={},Ft={},ft={},_t={},St={},$t={},Lt={},et={},Bt={},st={},Gt={},rt={},Ht={},Jt={},jt={},Nt={},zt={},Qt={},ht={},Wt={},Xt={},dt={},Yt={},wt={},At={},Ut={},Zt={},Pt={},Vt={},te={},nt={},ee={},se={},Rt={},re={},kt={},ne={},ae={},ie={},oe={},ce={},ue={},me={},ye={},be={},le={},ge={},pe={},Oe={},fe={},Se={},je={},ze={},qt={},he={},de={},It={},we={},vt={},Ae={},Ue={},Pe={},Ve={},Re={},ke={},qe={},Et={},Ie={},ve={},Ee={},xe={},Ke={},Ce={},De={},Me={},Te={},Fe={},_e={},$e={},Le={},Be={},Ge={},He={},Je={},Ne={},Qe={},We={},Xe={},Ye={},hs=new Uint8Array,ds=new Uint8Array,ws=new Uint8Array([0,0,0,0,0,0,240,191]),As=new Uint8Array,Us=new Uint8Array([0,0,0,0,0,0,240,63]),Ps=new Uint8Array,Vs=new Uint8Array([0,0,0,0,0,0,0,0]),Rs=new Uint8Array,ks=new Uint8Array([0,0,0,0,0,0,0,0]),qs=new Uint8Array,Is=new Uint8Array([0,0,0,0,0,0,0,0]),vs=new Uint8Array,Es=new Uint8Array([0,0,0,0,0,0,0,0]),xs=new Uint8Array,Ks=new Uint8Array([0,0,0,0,0,0,240,63]),Cs=new Uint8Array,Ds=new Uint8Array([0,0,0,0,0,0,240,63]),Ms=new Uint8Array,Ts=new Uint8Array([0,0,0,0,0,0,240,63]),Fs=new Uint8Array,_s=new Uint8Array,$s=new Uint8Array,Ls=new Uint8Array,Bs=new Uint8Array,Gs=new Uint8Array,Hs=new Uint8Array,Js=new Uint8Array([4]),Ns=new Uint8Array,Qs=new Uint8Array,Ws=new Uint8Array([240,4,0,1]),Xs=new Uint8Array([65,108,108,101,110,32,67,104,111,117,0]),Ys=new Uint8Array([104,40,0,1]),Zs=new Uint8Array([0]),tr=new Uint8Array,er=new Uint8Array([1]),sr=new Uint8Array([23,5,0,1]),rr=new Uint8Array([116,105,110,116,32,101,102,102,101,99,116,0]),nr=new Uint8Array,ar=new Uint8Array,ir=new Uint8Array,or=new Uint8Array([0]),cr=new Uint8Array([1]),Ze=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ur=new Uint8Array,mr=new Uint8Array,yr=new Uint8Array,br=new Uint8Array,lr=new Uint8Array([4]),xt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ts=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),gr=new Uint8Array,pr=new Uint8Array,Or=new Uint8Array,fr=new Uint8Array,Sr=new Uint8Array([4]),Kt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),jr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),zr=new Uint8Array([27,0]),hr=new Uint8Array([27,0]),dr=new Uint8Array,wr=new Uint8Array,Ar=new Uint8Array,Ur=new Uint8Array;Object.assign(Mt,{slots:{0:pt,1:Ot,2:ft,3:St}});Object.assign(pt,{structure:s,memory:{array:hs},const:!0,slots:{0:Tt}});Object.assign(Tt,{structure:S});Object.assign(Ot,{structure:r,memory:{array:ds},const:!0,slots:{0:Ft}});Object.assign(Ft,{structure:u,memory:{array:ws},const:!0});Object.assign(ft,{structure:r,memory:{array:As},const:!0,slots:{0:_t}});Object.assign(_t,{structure:u,memory:{array:Us},const:!0});Object.assign(St,{structure:r,memory:{array:Ps},const:!0,slots:{0:$t}});Object.assign($t,{structure:u,memory:{array:Vs},const:!0});Object.assign(Lt,{slots:{0:et,1:st,2:rt}});Object.assign(et,{structure:r,memory:{array:Rs},const:!0,slots:{0:Bt}});Object.assign(Bt,{structure:u,memory:{array:ks},const:!0});Object.assign(st,{structure:r,memory:{array:qs},const:!0,slots:{0:Gt}});Object.assign(Gt,{structure:u,memory:{array:Is},const:!0});Object.assign(rt,{structure:r,memory:{array:vs},const:!0,slots:{0:Ht}});Object.assign(Ht,{structure:u,memory:{array:Es},const:!0});Object.assign(Jt,{slots:{0:jt,1:zt,2:ht}});Object.assign(jt,{structure:r,memory:{array:xs},const:!0,slots:{0:Nt}});Object.assign(Nt,{structure:u,memory:{array:Ks},const:!0});Object.assign(zt,{structure:r,memory:{array:Cs},const:!0,slots:{0:Qt}});Object.assign(Qt,{structure:u,memory:{array:Ds},const:!0});Object.assign(ht,{structure:r,memory:{array:Ms},const:!0,slots:{0:Wt}});Object.assign(Wt,{structure:u,memory:{array:Ts},const:!0});Object.assign(Xt,{slots:{0:dt,1:wt,2:At,3:Ut}});Object.assign(dt,{structure:s,memory:{array:Fs},const:!0,slots:{0:Yt}});Object.assign(Yt,{structure:H});Object.assign(wt,{structure:A,memory:{array:_s},const:!0,slots:{0:et,1:st,2:rt}});Object.assign(At,{structure:G,memory:{array:$s},const:!0,slots:{0:jt,1:zt,2:ht}});Object.assign(Ut,{structure:A,memory:{array:Ls},const:!0,slots:{0:et,1:st,2:rt}});Object.assign(Zt,{slots:{0:Pt,1:Vt}});Object.assign(Pt,{structure:B,memory:{array:Bs},const:!0,slots:{0:pt,1:Ot,2:ft,3:St}});Object.assign(Vt,{structure:J,memory:{array:Gs},const:!0,slots:{0:dt,1:wt,2:At,3:Ut}});Object.assign(te,{slots:{0:nt}});Object.assign(nt,{structure:l,memory:{array:Hs},const:!0,slots:{0:ee}});Object.assign(ee,{structure:f,memory:{array:Js},const:!0});Object.assign(se,{slots:{0:Rt}});Object.assign(Rt,{structure:U,memory:{array:Ns},const:!0,slots:{0:nt}});Object.assign(re,{slots:{0:kt}});Object.assign(kt,{structure:U,memory:{array:Qs},const:!0,slots:{0:nt}});Object.assign(ne,{slots:{0:ae,1:oe,2:ue,3:ye,4:le,5:ge,6:pe}});Object.assign(ae,{structure:T,memory:{array:Ws},const:!0,slots:{0:ie}});Object.assign(ie,{structure:M,memory:{array:Xs},reloc:16778480});Object.assign(oe,{structure:_,memory:{array:Ys},const:!0,slots:{0:ce}});Object.assign(ce,{structure:F,memory:{array:Zs},reloc:16787560});Object.assign(ue,{structure:l,memory:{array:tr},const:!0,slots:{0:me}});Object.assign(me,{structure:f,memory:{array:er},const:!0});Object.assign(ye,{structure:L,memory:{array:sr},const:!0,slots:{0:be}});Object.assign(be,{structure:$,memory:{array:rr},reloc:16778519});Object.assign(le,{structure:N,memory:{array:nr},const:!0,slots:{0:Pt,1:Vt}});Object.assign(ge,{structure:Q,memory:{array:ar},const:!0,slots:{0:Rt}});Object.assign(pe,{structure:W,memory:{array:ir},const:!0,slots:{0:kt}});Object.assign(Oe,{slots:{0:fe,1:Se}});Object.assign(fe,{structure:p,memory:{array:or},const:!0});Object.assign(Se,{structure:p,memory:{array:cr},const:!0});Object.assign(je,{memory:{array:Ze},slots:{0:ze}});Object.assign(ze,{structure:q,memory:{array:Ze,offset:0,length:8},slots:{0:qt}});Object.assign(qt,{structure:X,memory:{array:ur},reloc:0});Object.assign(he,{slots:{0:de,1:we,2:Ae}});Object.assign(de,{structure:s,memory:{array:mr},const:!0,slots:{0:It}});Object.assign(It,{structure:k});Object.assign(we,{structure:s,memory:{array:yr},const:!0,slots:{0:vt}});Object.assign(vt,{structure:ut});Object.assign(Ae,{structure:l,memory:{array:br},const:!0,slots:{0:Ue}});Object.assign(Ue,{structure:f,memory:{array:lr},const:!0});Object.assign(Pe,{memory:{array:xt},slots:{0:Ve}});Object.assign(Ve,{structure:Y,memory:{array:xt},slots:{0:Re}});Object.assign(Re,{structure:q,memory:{array:xt,offset:0,length:8},slots:{0:qt}});Object.assign(ke,{memory:{array:ts},slots:{0:qe}});Object.assign(qe,{structure:v,memory:{array:ts,offset:0,length:8},slots:{0:Et}});Object.assign(Et,{structure:Z,memory:{array:gr},reloc:0});Object.assign(Ie,{slots:{0:ve,1:Ee,2:xe}});Object.assign(ve,{structure:s,memory:{array:pr},const:!0,slots:{0:It}});Object.assign(Ee,{structure:s,memory:{array:Or},const:!0,slots:{0:vt}});Object.assign(xe,{structure:l,memory:{array:fr},const:!0,slots:{0:Ke}});Object.assign(Ke,{structure:f,memory:{array:Sr},const:!0});Object.assign(Ce,{memory:{array:Kt},slots:{0:De}});Object.assign(De,{structure:tt,memory:{array:Kt},slots:{0:Me}});Object.assign(Me,{structure:v,memory:{array:Kt,offset:0,length:8},slots:{0:Et}});Object.assign(Te,{memory:{array:jr}});Object.assign(Fe,{slots:{0:_e}});Object.assign(_e,{structure:d,memory:{array:zr},const:!0});Object.assign($e,{slots:{0:Le}});Object.assign(Le,{structure:w,memory:{array:hr},const:!0});Object.assign(Be,{slots:{0:Ge,1:Je,2:Qe,3:Xe}});Object.assign(Ge,{structure:s,memory:{array:dr},const:!0,slots:{0:He}});Object.assign(He,{structure:ct});Object.assign(Je,{structure:s,memory:{array:wr},const:!0,slots:{0:Ne}});Object.assign(Ne,{structure:I});Object.assign(Qe,{structure:s,memory:{array:Ar},const:!0,slots:{0:We}});Object.assign(We,{structure:E});Object.assign(Xe,{structure:s,memory:{array:Ur},const:!0,slots:{0:Ye}});Object.assign(Ye,{structure:x});const Pr={argStruct:yt,thunkId:2,name:"createOutput"},Vr={argStruct:lt,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(O,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(M,{...e,type:1,name:"[10:0]u8",length:10,byteSize:11,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(T,{...e,type:13,name:"*const [10:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(F,{...e,type:1,name:"[0:0]u8",length:0,byteSize:1,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(_,{...e,type:13,name:"*const [0:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(l,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:l}],methods:[]}});Object.assign(f,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign($,{...e,type:1,name:"[11:0]u8",length:11,byteSize:12,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(L,{...e,type:13,name:"*const [11:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[]}});Object.assign(r,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(S,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(u,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:u}],methods:[]}});Object.assign(B,{...e,type:2,name:"Struct3347425011",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:r},{...t,type:7,slot:2,name:"maxValue",structure:r},{...t,type:7,slot:3,name:"defaultValue",structure:r}],methods:[],template:Mt}});Object.assign(A,{...e,type:2,name:"Struct4174069246",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:r},{...t,type:7,slot:1,name:"1",structure:r},{...t,type:7,slot:2,name:"2",structure:r}],methods:[],template:Lt}});Object.assign(G,{...e,type:2,name:"Struct2060771296",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:r},{...t,type:7,slot:1,name:"1",structure:r},{...t,type:7,slot:2,name:"2",structure:r}],methods:[],template:Jt}});Object.assign(H,{...e,type:15,name:"@Vector(3, f32)",length:3,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(J,{...e,type:2,name:"Struct2565267806",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:A},{...t,type:7,slot:2,name:"maxValue",structure:G},{...t,type:7,slot:3,name:"defaultValue",structure:A}],methods:[],template:Xt}});Object.assign(N,{...e,type:2,name:"Struct1269012212",align:1,instance:{members:[{...t,type:7,slot:0,name:"amount",structure:B},{...t,type:7,slot:1,name:"color",structure:J}],methods:[],template:Zt}});Object.assign(U,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:l}],methods:[],template:te}});Object.assign(Q,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:7,slot:0,name:"src",structure:U}],methods:[],template:se}});Object.assign(W,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:U}],methods:[],template:re}});Object.assign(ct,{...e,type:2,name:"tint.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:T},{...t,type:7,slot:1,name:"vendor",structure:_},{...t,type:7,slot:2,name:"version",structure:l},{...t,type:7,slot:3,name:"description",structure:L},{...t,type:7,slot:4,name:"parameters",structure:N},{...t,type:7,slot:5,name:"inputImages",structure:Q},{...t,type:7,slot:6,name:"outputImages",structure:W}],methods:[],template:ne}});Object.assign(k,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(X,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(q,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:X}],methods:[]}});Object.assign(c,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[]}});Object.assign(p,{...e,type:11,name:"tint.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:p}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:p},{...t,type:7,slot:1,name:"display-p3",structure:p}],methods:[],template:Oe}});Object.assign(R,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(ut,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(Y,{...e,type:2,name:"tint.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:q},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:je},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:l}],methods:[],template:he}});Object.assign(I,{...e,type:2,name:"tint.KernelInput(u8,tint.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:Y}],methods:[],template:Pe}});Object.assign(Z,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(v,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:Z}],methods:[]}});Object.assign(tt,{...e,type:2,name:"tint.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:v},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:ke},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:l}],methods:[],template:Ie}});Object.assign(E,{...e,type:2,name:"tint.KernelOutput(u8,tint.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:tt}],methods:[],template:Ce}});Object.assign(x,{...e,type:2,name:"tint.KernelParameters(tint.kernel)",byteSize:32,align:16,instance:{members:[{...t,type:4,bitOffset:128,bitSize:32,byteSize:4,slot:1,name:"amount",structure:S},{...t,type:5,bitOffset:0,bitSize:96,byteSize:16,slot:0,name:"color",structure:H}],methods:[],template:Te}});Object.assign(d,{...e,type:10,name:"ErrorSet4244189820",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:d}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:d}],methods:[],template:Fe}});Object.assign(mt,{...e,type:9,name:"ErrorSet4244189820!tint.KernelOutput(u8,tint.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:E},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:d}],methods:[]}});Object.assign(yt,{...e,type:5,name:"createOutput",byteSize:96,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:3,name:"0",structure:c},{...t,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:4,name:"1",structure:c},{...t,type:5,isRequired:!0,bitOffset:320,bitSize:192,byteSize:24,slot:0,name:"2",structure:I},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:256,byteSize:32,slot:1,name:"3",structure:x},{...t,type:5,isRequired:!0,bitOffset:512,bitSize:224,byteSize:28,slot:2,name:"retval",structure:mt}],methods:[]}});Object.assign(w,{...e,type:10,name:"ErrorSet1427609485",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:w}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:w}],methods:[],template:$e}});Object.assign(bt,{...e,type:9,name:"ErrorSet1427609485!tint.KernelOutput(u8,tint.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:E},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:w}],methods:[]}});Object.assign(lt,{...e,type:5,name:"createPartialOutput",byteSize:112,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:3,name:"0",structure:c},{...t,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:4,name:"1",structure:c},{...t,type:3,isRequired:!0,bitOffset:320,bitSize:32,byteSize:4,slot:5,name:"2",structure:c},{...t,type:3,isRequired:!0,bitOffset:352,bitSize:32,byteSize:4,slot:6,name:"3",structure:c},{...t,type:5,isRequired:!0,bitOffset:384,bitSize:192,byteSize:24,slot:0,name:"4",structure:I},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:256,byteSize:32,slot:1,name:"5",structure:x},{...t,type:5,isRequired:!0,bitOffset:576,bitSize:224,byteSize:28,slot:2,name:"retval",structure:bt}],methods:[]}});Object.assign(gt,{...e,type:2,name:"tint",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:s},{...t,type:7,slot:1,name:"Input",structure:s},{...t,type:7,slot:2,name:"Output",structure:s},{...t,type:7,slot:3,name:"Parameters",structure:s}],methods:[Pr,Vr],template:Be}});const Rr=[s,O,M,T,F,_,l,f,$,L,r,S,u,B,A,G,H,J,N,U,Q,W,ct,k,X,q,c,p,R,ut,Y,I,Z,v,tt,E,x,d,mt,yt,w,bt,lt,gt],kr=gt,qr={runtimeSafety:!1,littleEndian:!0},at=ls();at.getSpecialExports();at.recreateStructures(Rr,qr);const Ir=(async()=>{const i=new URL("tint-1a6697f5.wasm",import.meta.url).href;return fetch(i)})();at.loadModule(Ir);at.linkVariables(!0);const{constructor:vr}=kr,{createPartialOutput:Er,Input:xr,kernel:ot}=vr;function Kr(i,m,o,a,n={},j={}){const z=[];for(const[b]of ot.inputImages)z.push(b);const P=[];for(const[b]of ot.outputImages)P.push(b);if(Array.isArray(n)){const b=n;n={};for(const[g,h]of z.entries())n[h]=b[g]}const y=new xr(void 0),K=[];let V;for(const b of z){let g=n[b];if(g||(z.length===1&&["data","width","height"].every(h=>!!n[h])?g=n:K.push(b)),y[b]=g,V){if(g.colorSpace!==V)throw new Error(`Input images must all use the same color space: ${V}`)}else V=g.colorSpace}if(K.length>0)throw new Error(`Missing input image${K.length>1?"s":""}: ${K.join(", ")}`);const it=Er(i,m,o,a,y,j),Ct=b=>{const g={};for(const h of P){const{data:{typedArray:C},width:Dt,height:es}=b[h];let D;if(typeof ImageData=="function"){const ss=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);D=new ImageData(ss,Dt,a,{colorSpace:V})}else D={data:C,width:Dt,height:es};if(P.length===1)return D;g[h]=D}return g};return it[Symbol.toStringTag]==="Promise"?it.then(Ct):Ct(it)}function Cr(){const i={};for(let[m,o]of ot){if(m==="parameters"){const a={};for(const[n,j]of o){const z=a[n]={};for(let[P,y]of j)typeof y=="object"?y=y.string??y.valueOf():typeof y=="function"&&(y=Dr(y.name)),z[P]=y}o=a}else typeof o=="object"&&(o=o.string??o.valueOf());i[m]=o}return i}function Dr(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[m,o,...a]=i.data;Mr(m,a).then(([n,j])=>{postMessage([m,o,n],{transfer:j})}).catch(n=>{postMessage(["error",o,n])})};async function Mr(i,m){switch(i){case"getKernelInfo":return[Cr(...m)];case"createPartialImageData":const a=await Kr(...m),n=[];if("data"in a&&"width"in a&&"height"in a)n.push(a.data.buffer);else for(const j of Object.entries(a))n.push(a.data.buffer);return[a,n];default:throw new Error(`Unknown function: ${i}`)}}
