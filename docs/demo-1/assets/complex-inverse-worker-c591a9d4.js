import{u as ya,a as la,b as ba,c as ga,d as pa,e as Oa,f as ja,g as fa,h as Sa,i as wa,j as Aa,k as Ua,l as za,m as da,n as ha,o as Va,p as xa,q as va}from"./index-67c7daa1.js";ya();Ua();za();la();ba();da();ha();Va();xa();ga();pa();Oa();ja();va();fa();Sa();wa();const s={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},n={},A={},J={},N={},Q={},W={},b={},U={},X={},Y={},e={},r={},f={},S={},Z={},j={},p={},tt={},et={},st={},rt={},nt={},at={},ot={},ct={},ut={},it={},mt={},yt={},lt={},P={},bt={},gt={},pt={},Ot={},jt={},ft={},St={},wt={},At={},v={},Ut={},zt={},dt={},ht={},T={},Vt={},xt={},Bt={},I={},vt={},E={},i={},O={},q={},Pt={},K={},Tt={},C={},Rt={},M={},D={},V={},Gt={},Ht={},x={},Jt={},Nt={},Qt={},Ks={},F={},Cs={},_={},Ms={},Ds={},$={},Fs={},L={},_s={},$s={},Wt={},Ls={},Xt={},Bs={},Gs={},Yt={},w={},Zt={},te={},ee={},Hs={},se={},Js={},re={},Ns={},Qs={},ne={},ae={},oe={},ce={},Ws={},ue={},Xs={},ie={},Ys={},Zs={},me={},ye={},le={},be={},tr={},ge={},er={},pe={},sr={},rr={},Oe={},nr={},je={},ar={},or={},fe={},cr={},Se={},ur={},ir={},we={},Ae={},Ue={},ze={},mr={},de={},yr={},he={},lr={},br={},Ve={},gr={},xe={},pr={},Or={},ve={},jr={},Pe={},fr={},Sr={},Te={},Re={},ke={},qe={},wr={},kt={},Ar={},qt={},Ur={},zr={},Ie={},dr={},Ee={},hr={},Vr={},Ke={},xr={},Ce={},vr={},Pr={},Me={},De={},Fe={},_e={},Tr={},$e={},Rr={},Le={},kr={},qr={},Be={},Ir={},Ge={},Er={},Kr={},He={},Je={},Ne={},Qe={},Cr={},We={},It={},Xe={},Mr={},Ye={},Dr={},Ze={},Fr={},_r={},ts={},es={},$r={},ss={},Lr={},rs={},Br={},Gr={},ns={},as={},Hr={},os={},Jr={},cs={},Nr={},Qr={},Et={},Wr={},Kt={},Xr={},Ct={},Yr={},Mt={},Zr={},tn={},us={},en={},is={},sn={},ms={},rn={},ys={},nn={},an={},ls={},Dt={},bs={},gs={},ps={},on={},Os={},js={},fs={},Ss={},ws={},As={},Us={},zs={},ds={},hs={},Vs={},cn={},Ft={},un={},mn={},xs={},yn={},vs={},ln={},bn={},gn={},pn={},On={},jn={},fn={},Sn={},wn={},An={},Un={},zn={},dn={},hn={},Vn={},xn={},vn={},Ps={},Pn={},Tn={},Ts={},Rn={},kn={},qn={},In={},En={},Kn={},Cn={},Mn={},Rs={},Dn={},Fn={},_n={},$n={},Ln={},Bn={},Gn={},Hn={},Jn={},Nn={},Qn={},Wn={},Xn={},Yn={},Zn={},ta={},ea={},sa={},ra={},na={},aa={},oa={},Pa=new Uint8Array,Ta=new Uint8Array([0,0,0,0,0,0,20,192]),Ra=new Uint8Array,ka=new Uint8Array([0,0,0,0,0,0,20,192]),qa=new Uint8Array,Ia=new Uint8Array([0,0,0,0,0,0,20,64]),Ea=new Uint8Array,Ka=new Uint8Array([0,0,0,0,0,0,20,64]),Ca=new Uint8Array,Ma=new Uint8Array([51,51,51,51,51,51,211,191]),Da=new Uint8Array,Fa=new Uint8Array([154,153,153,153,153,153,241,191]),_a=new Uint8Array,$a=new Uint8Array,La=new Uint8Array,Ba=new Uint8Array,Ga=new Uint8Array,Ha=new Uint8Array([205,204,204,204,204,204,0,64]),Ja=new Uint8Array,Na=new Uint8Array([154,153,153,153,153,153,185,63]),Qa=new Uint8Array,Wa=new Uint8Array,Xa=new Uint8Array,Ya=new Uint8Array,Za=new Uint8Array,to=new Uint8Array([51,51,51,51,51,51,227,63]),eo=new Uint8Array,so=new Uint8Array([0,0,0,0,0,0,0,0]),ro=new Uint8Array,no=new Uint8Array,ao=new Uint8Array,oo=new Uint8Array,co=new Uint8Array,uo=new Uint8Array([0,0,0,0,0,0,0,192]),io=new Uint8Array,mo=new Uint8Array([0,0,0,0,0,0,0,192]),yo=new Uint8Array,lo=new Uint8Array([0,0,0,0,0,0,0,64]),bo=new Uint8Array,go=new Uint8Array([0,0,0,0,0,0,0,64]),po=new Uint8Array,Oo=new Uint8Array([154,153,153,153,153,153,201,63]),jo=new Uint8Array,fo=new Uint8Array([236,81,184,30,133,235,241,191]),So=new Uint8Array,wo=new Uint8Array,Ao=new Uint8Array,Uo=new Uint8Array,zo=new Uint8Array,ho=new Uint8Array([154,153,153,153,153,153,185,63]),Vo=new Uint8Array,xo=new Uint8Array([154,153,153,153,153,153,185,63]),vo=new Uint8Array,Po=new Uint8Array([0,0,0,0,0,0,52,64]),To=new Uint8Array,Ro=new Uint8Array([0,0,0,0,0,0,52,64]),ko=new Uint8Array,qo=new Uint8Array([0,0,0,0,0,0,8,64]),Io=new Uint8Array,Eo=new Uint8Array([145,43,80,230,122,182,251,63]),Ko=new Uint8Array,Co=new Uint8Array,Mo=new Uint8Array,Do=new Uint8Array,Fo=new Uint8Array,_o=new Uint8Array([0,0,0,0,0,0,240,63]),$o=new Uint8Array,Lo=new Uint8Array([0,0,0,0,0,0,240,63]),Bo=new Uint8Array,Go=new Uint8Array([0,0,0,0,0,64,127,64]),Ho=new Uint8Array,Jo=new Uint8Array([0,0,0,0,0,0,121,64]),No=new Uint8Array,Qo=new Uint8Array([0,0,0,0,0,64,111,64]),Wo=new Uint8Array,Xo=new Uint8Array([0,0,0,0,0,128,103,64]),Yo=new Uint8Array,Zo=new Uint8Array,tc=new Uint8Array,ec=new Uint8Array,sc=new Uint8Array,rc=new Uint8Array([0,0,0,0,0,64,143,64]),nc=new Uint8Array,ac=new Uint8Array([0,0,0,0,0,64,143,64]),oc=new Uint8Array,cc=new Uint8Array([0,0,0,0,0,128,107,64]),uc=new Uint8Array,ic=new Uint8Array([0,0,0,0,0,192,119,64]),mc=new Uint8Array,yc=new Uint8Array,lc=new Uint8Array,bc=new Uint8Array,gc=new Uint8Array,pc=new Uint8Array,Oc=new Uint8Array([0,0,0,0,0,0,24,192]),jc=new Uint8Array,fc=new Uint8Array([0,0,0,0,0,0,36,64]),Sc=new Uint8Array,wc=new Uint8Array([0,0,0,0,0,0,0,0]),Ac=new Uint8Array,Uc=new Uint8Array,zc=new Uint8Array([0,0,0,0,0,0,240,63]),dc=new Uint8Array,hc=new Uint8Array([0,0,0,0,0,64,143,64]),Vc=new Uint8Array,xc=new Uint8Array([0,0,0,0,0,0,105,64]),vc=new Uint8Array,Pc=new Uint8Array,Tc=new Uint8Array([123,20,174,71,225,122,132,63]),Rc=new Uint8Array,kc=new Uint8Array([0,0,0,0,0,0,224,63]),qc=new Uint8Array,Ic=new Uint8Array([154,153,153,153,153,153,201,63]),Ec=new Uint8Array,Kc=new Uint8Array([0,0,0,0,0,0,0,0]),Cc=new Uint8Array,Mc=new Uint8Array([0,0,0,0,0,0,0,0]),Dc=new Uint8Array,Fc=new Uint8Array([0,0,0,0,0,0,0,0]),_c=new Uint8Array,$c=new Uint8Array([0,0,0,0,0,0,0,0]),Lc=new Uint8Array,Bc=new Uint8Array([0,0,0,0,0,0,240,63]),Gc=new Uint8Array,Hc=new Uint8Array([0,0,0,0,0,0,240,63]),Jc=new Uint8Array,Nc=new Uint8Array([0,0,0,0,0,0,240,63]),Qc=new Uint8Array,Wc=new Uint8Array([0,0,0,0,0,0,240,63]),Xc=new Uint8Array,Yc=new Uint8Array,Zc=new Uint8Array,tu=new Uint8Array,eu=new Uint8Array,su=new Uint8Array,ru=new Uint8Array,nu=new Uint8Array,au=new Uint8Array,ou=new Uint8Array,cu=new Uint8Array,uu=new Uint8Array,iu=new Uint8Array,mu=new Uint8Array,yu=new Uint8Array,lu=new Uint8Array,bu=new Uint8Array([4]),gu=new Uint8Array,pu=new Uint8Array,Ou=new Uint8Array([6,5,0,1]),ju=new Uint8Array([99,111,109,112,108,101,120,32,114,97,116,105,111,110,97,108,32,51,0]),fu=new Uint8Array([36,5,0,1]),Su=new Uint8Array([112,105,120,101,108,101,114,111,0]),wu=new Uint8Array,Au=new Uint8Array([1]),Uu=new Uint8Array([62,5,0,1]),zu=new Uint8Array([99,111,109,112,108,101,120,32,109,97,112,112,105,110,103,32,122,32,61,32,100,47,91,40,122,45,97,41,40,122,45,98,41,40,122,45,99,41,93,0]),du=new Uint8Array,hu=new Uint8Array,Vu=new Uint8Array,xu=new Uint8Array([0]),vu=new Uint8Array([1]),ca=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Pu=new Uint8Array,Tu=new Uint8Array,Ru=new Uint8Array,ku=new Uint8Array,qu=new Uint8Array([4]),ks=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ua=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Iu=new Uint8Array,Eu=new Uint8Array,Ku=new Uint8Array,Cu=new Uint8Array,Mu=new Uint8Array([4]),qs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Du=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,154,153,153,190,205,204,140,191,102,102,6,64,205,204,204,61,154,153,25,63,0,0,0,0,205,204,76,62,41,92,143,191,0,0,64,64,215,179,221,63,0,0,122,67,0,0,60,67,0,0,92,67,0,0,190,67,0,0,0,0,0,0,72,67,205,204,76,62,0,0,0,0,0,0,0,0,0,0,0,0]),Fu=new Uint8Array([27,0]),_u=new Uint8Array([27,0]),$u=new Uint8Array,Lu=new Uint8Array,Bu=new Uint8Array,Gu=new Uint8Array;Object.assign(Ks,{slots:{0:F,1:_}});Object.assign(F,{structure:e,memory:{array:Pa},const:!0,slots:{0:Cs}});Object.assign(Cs,{structure:r,memory:{array:Ta},const:!0});Object.assign(_,{structure:e,memory:{array:Ra},const:!0,slots:{0:Ms}});Object.assign(Ms,{structure:r,memory:{array:ka},const:!0});Object.assign(Ds,{slots:{0:$,1:L}});Object.assign($,{structure:e,memory:{array:qa},const:!0,slots:{0:Fs}});Object.assign(Fs,{structure:r,memory:{array:Ia},const:!0});Object.assign(L,{structure:e,memory:{array:Ea},const:!0,slots:{0:_s}});Object.assign(_s,{structure:r,memory:{array:Ka},const:!0});Object.assign($s,{slots:{0:Wt,1:Xt}});Object.assign(Wt,{structure:e,memory:{array:Ca},const:!0,slots:{0:Ls}});Object.assign(Ls,{structure:r,memory:{array:Ma},const:!0});Object.assign(Xt,{structure:e,memory:{array:Da},const:!0,slots:{0:Bs}});Object.assign(Bs,{structure:r,memory:{array:Fa},const:!0});Object.assign(Gs,{slots:{0:Yt,1:Zt,2:te,3:ee}});Object.assign(Yt,{structure:n,memory:{array:_a},const:!0,slots:{0:w}});Object.assign(w,{structure:p});Object.assign(Zt,{structure:f,memory:{array:$a},const:!0,slots:{0:F,1:_}});Object.assign(te,{structure:S,memory:{array:La},const:!0,slots:{0:$,1:L}});Object.assign(ee,{structure:Z,memory:{array:Ba},const:!0,slots:{0:Wt,1:Xt}});Object.assign(Hs,{slots:{0:se,1:re}});Object.assign(se,{structure:e,memory:{array:Ga},const:!0,slots:{0:Js}});Object.assign(Js,{structure:r,memory:{array:Ha},const:!0});Object.assign(re,{structure:e,memory:{array:Ja},const:!0,slots:{0:Ns}});Object.assign(Ns,{structure:r,memory:{array:Na},const:!0});Object.assign(Qs,{slots:{0:ne,1:ae,2:oe,3:ce}});Object.assign(ne,{structure:n,memory:{array:Qa},const:!0,slots:{0:w}});Object.assign(ae,{structure:f,memory:{array:Wa},const:!0,slots:{0:F,1:_}});Object.assign(oe,{structure:S,memory:{array:Xa},const:!0,slots:{0:$,1:L}});Object.assign(ce,{structure:et,memory:{array:Ya},const:!0,slots:{0:se,1:re}});Object.assign(Ws,{slots:{0:ue,1:ie}});Object.assign(ue,{structure:e,memory:{array:Za},const:!0,slots:{0:Xs}});Object.assign(Xs,{structure:r,memory:{array:to},const:!0});Object.assign(ie,{structure:e,memory:{array:eo},const:!0,slots:{0:Ys}});Object.assign(Ys,{structure:r,memory:{array:so},const:!0});Object.assign(Zs,{slots:{0:me,1:ye,2:le,3:be}});Object.assign(me,{structure:n,memory:{array:ro},const:!0,slots:{0:w}});Object.assign(ye,{structure:f,memory:{array:no},const:!0,slots:{0:F,1:_}});Object.assign(le,{structure:S,memory:{array:ao},const:!0,slots:{0:$,1:L}});Object.assign(be,{structure:rt,memory:{array:oo},const:!0,slots:{0:ue,1:ie}});Object.assign(tr,{slots:{0:ge,1:pe}});Object.assign(ge,{structure:e,memory:{array:co},const:!0,slots:{0:er}});Object.assign(er,{structure:r,memory:{array:uo},const:!0});Object.assign(pe,{structure:e,memory:{array:io},const:!0,slots:{0:sr}});Object.assign(sr,{structure:r,memory:{array:mo},const:!0});Object.assign(rr,{slots:{0:Oe,1:je}});Object.assign(Oe,{structure:e,memory:{array:yo},const:!0,slots:{0:nr}});Object.assign(nr,{structure:r,memory:{array:lo},const:!0});Object.assign(je,{structure:e,memory:{array:bo},const:!0,slots:{0:ar}});Object.assign(ar,{structure:r,memory:{array:go},const:!0});Object.assign(or,{slots:{0:fe,1:Se}});Object.assign(fe,{structure:e,memory:{array:po},const:!0,slots:{0:cr}});Object.assign(cr,{structure:r,memory:{array:Oo},const:!0});Object.assign(Se,{structure:e,memory:{array:jo},const:!0,slots:{0:ur}});Object.assign(ur,{structure:r,memory:{array:fo},const:!0});Object.assign(ir,{slots:{0:we,1:Ae,2:Ue,3:ze}});Object.assign(we,{structure:n,memory:{array:So},const:!0,slots:{0:w}});Object.assign(Ae,{structure:at,memory:{array:wo},const:!0,slots:{0:ge,1:pe}});Object.assign(Ue,{structure:ot,memory:{array:Ao},const:!0,slots:{0:Oe,1:je}});Object.assign(ze,{structure:ct,memory:{array:Uo},const:!0,slots:{0:fe,1:Se}});Object.assign(mr,{slots:{0:de,1:he}});Object.assign(de,{structure:e,memory:{array:zo},const:!0,slots:{0:yr}});Object.assign(yr,{structure:r,memory:{array:ho},const:!0});Object.assign(he,{structure:e,memory:{array:Vo},const:!0,slots:{0:lr}});Object.assign(lr,{structure:r,memory:{array:xo},const:!0});Object.assign(br,{slots:{0:Ve,1:xe}});Object.assign(Ve,{structure:e,memory:{array:vo},const:!0,slots:{0:gr}});Object.assign(gr,{structure:r,memory:{array:Po},const:!0});Object.assign(xe,{structure:e,memory:{array:To},const:!0,slots:{0:pr}});Object.assign(pr,{structure:r,memory:{array:Ro},const:!0});Object.assign(Or,{slots:{0:ve,1:Pe}});Object.assign(ve,{structure:e,memory:{array:ko},const:!0,slots:{0:jr}});Object.assign(jr,{structure:r,memory:{array:qo},const:!0});Object.assign(Pe,{structure:e,memory:{array:Io},const:!0,slots:{0:fr}});Object.assign(fr,{structure:r,memory:{array:Eo},const:!0});Object.assign(Sr,{slots:{0:Te,1:Re,2:ke,3:qe}});Object.assign(Te,{structure:n,memory:{array:Ko},const:!0,slots:{0:w}});Object.assign(Re,{structure:it,memory:{array:Co},const:!0,slots:{0:de,1:he}});Object.assign(ke,{structure:mt,memory:{array:Mo},const:!0,slots:{0:Ve,1:xe}});Object.assign(qe,{structure:yt,memory:{array:Do},const:!0,slots:{0:ve,1:Pe}});Object.assign(wr,{slots:{0:kt,1:qt}});Object.assign(kt,{structure:e,memory:{array:Fo},const:!0,slots:{0:Ar}});Object.assign(Ar,{structure:r,memory:{array:_o},const:!0});Object.assign(qt,{structure:e,memory:{array:$o},const:!0,slots:{0:Ur}});Object.assign(Ur,{structure:r,memory:{array:Lo},const:!0});Object.assign(zr,{slots:{0:Ie,1:Ee}});Object.assign(Ie,{structure:e,memory:{array:Bo},const:!0,slots:{0:dr}});Object.assign(dr,{structure:r,memory:{array:Go},const:!0});Object.assign(Ee,{structure:e,memory:{array:Ho},const:!0,slots:{0:hr}});Object.assign(hr,{structure:r,memory:{array:Jo},const:!0});Object.assign(Vr,{slots:{0:Ke,1:Ce}});Object.assign(Ke,{structure:e,memory:{array:No},const:!0,slots:{0:xr}});Object.assign(xr,{structure:r,memory:{array:Qo},const:!0});Object.assign(Ce,{structure:e,memory:{array:Wo},const:!0,slots:{0:vr}});Object.assign(vr,{structure:r,memory:{array:Xo},const:!0});Object.assign(Pr,{slots:{0:Me,1:De,2:Fe,3:_e}});Object.assign(Me,{structure:n,memory:{array:Yo},const:!0,slots:{0:w}});Object.assign(De,{structure:P,memory:{array:Zo},const:!0,slots:{0:kt,1:qt}});Object.assign(Fe,{structure:bt,memory:{array:tc},const:!0,slots:{0:Ie,1:Ee}});Object.assign(_e,{structure:gt,memory:{array:ec},const:!0,slots:{0:Ke,1:Ce}});Object.assign(Tr,{slots:{0:$e,1:Le}});Object.assign($e,{structure:e,memory:{array:sc},const:!0,slots:{0:Rr}});Object.assign(Rr,{structure:r,memory:{array:rc},const:!0});Object.assign(Le,{structure:e,memory:{array:nc},const:!0,slots:{0:kr}});Object.assign(kr,{structure:r,memory:{array:ac},const:!0});Object.assign(qr,{slots:{0:Be,1:Ge}});Object.assign(Be,{structure:e,memory:{array:oc},const:!0,slots:{0:Ir}});Object.assign(Ir,{structure:r,memory:{array:cc},const:!0});Object.assign(Ge,{structure:e,memory:{array:uc},const:!0,slots:{0:Er}});Object.assign(Er,{structure:r,memory:{array:ic},const:!0});Object.assign(Kr,{slots:{0:He,1:Je,2:Ne,3:Qe}});Object.assign(He,{structure:n,memory:{array:mc},const:!0,slots:{0:w}});Object.assign(Je,{structure:P,memory:{array:yc},const:!0,slots:{0:kt,1:qt}});Object.assign(Ne,{structure:Ot,memory:{array:lc},const:!0,slots:{0:$e,1:Le}});Object.assign(Qe,{structure:jt,memory:{array:bc},const:!0,slots:{0:Be,1:Ge}});Object.assign(Cr,{slots:{0:We,1:Xe,2:Ye,3:Ze}});Object.assign(We,{structure:n,memory:{array:gc},const:!0,slots:{0:It}});Object.assign(It,{structure:j});Object.assign(Xe,{structure:e,memory:{array:pc},const:!0,slots:{0:Mr}});Object.assign(Mr,{structure:r,memory:{array:Oc},const:!0});Object.assign(Ye,{structure:e,memory:{array:jc},const:!0,slots:{0:Dr}});Object.assign(Dr,{structure:r,memory:{array:fc},const:!0});Object.assign(Ze,{structure:e,memory:{array:Sc},const:!0,slots:{0:Fr}});Object.assign(Fr,{structure:r,memory:{array:wc},const:!0});Object.assign(_r,{slots:{0:ts,1:es,2:ss,3:rs}});Object.assign(ts,{structure:n,memory:{array:Ac},const:!0,slots:{0:It}});Object.assign(es,{structure:e,memory:{array:Uc},const:!0,slots:{0:$r}});Object.assign($r,{structure:r,memory:{array:zc},const:!0});Object.assign(ss,{structure:e,memory:{array:dc},const:!0,slots:{0:Lr}});Object.assign(Lr,{structure:r,memory:{array:hc},const:!0});Object.assign(rs,{structure:e,memory:{array:Vc},const:!0,slots:{0:Br}});Object.assign(Br,{structure:r,memory:{array:xc},const:!0});Object.assign(Gr,{slots:{0:ns,1:as,2:os,3:cs}});Object.assign(ns,{structure:n,memory:{array:vc},const:!0,slots:{0:It}});Object.assign(as,{structure:e,memory:{array:Pc},const:!0,slots:{0:Hr}});Object.assign(Hr,{structure:r,memory:{array:Tc},const:!0});Object.assign(os,{structure:e,memory:{array:Rc},const:!0,slots:{0:Jr}});Object.assign(Jr,{structure:r,memory:{array:kc},const:!0});Object.assign(cs,{structure:e,memory:{array:qc},const:!0,slots:{0:Nr}});Object.assign(Nr,{structure:r,memory:{array:Ic},const:!0});Object.assign(Qr,{slots:{0:Et,1:Kt,2:Ct,3:Mt}});Object.assign(Et,{structure:e,memory:{array:Ec},const:!0,slots:{0:Wr}});Object.assign(Wr,{structure:r,memory:{array:Kc},const:!0});Object.assign(Kt,{structure:e,memory:{array:Cc},const:!0,slots:{0:Xr}});Object.assign(Xr,{structure:r,memory:{array:Mc},const:!0});Object.assign(Ct,{structure:e,memory:{array:Dc},const:!0,slots:{0:Yr}});Object.assign(Yr,{structure:r,memory:{array:Fc},const:!0});Object.assign(Mt,{structure:e,memory:{array:_c},const:!0,slots:{0:Zr}});Object.assign(Zr,{structure:r,memory:{array:$c},const:!0});Object.assign(tn,{slots:{0:us,1:is,2:ms,3:ys}});Object.assign(us,{structure:e,memory:{array:Lc},const:!0,slots:{0:en}});Object.assign(en,{structure:r,memory:{array:Bc},const:!0});Object.assign(is,{structure:e,memory:{array:Gc},const:!0,slots:{0:sn}});Object.assign(sn,{structure:r,memory:{array:Hc},const:!0});Object.assign(ms,{structure:e,memory:{array:Jc},const:!0,slots:{0:rn}});Object.assign(rn,{structure:r,memory:{array:Nc},const:!0});Object.assign(ys,{structure:e,memory:{array:Qc},const:!0,slots:{0:nn}});Object.assign(nn,{structure:r,memory:{array:Wc},const:!0});Object.assign(an,{slots:{0:ls,1:bs,2:gs,3:ps}});Object.assign(ls,{structure:n,memory:{array:Xc},const:!0,slots:{0:Dt}});Object.assign(Dt,{structure:zt});Object.assign(bs,{structure:v,memory:{array:Yc},const:!0,slots:{0:Et,1:Kt,2:Ct,3:Mt}});Object.assign(gs,{structure:Ut,memory:{array:Zc},const:!0,slots:{0:us,1:is,2:ms,3:ys}});Object.assign(ps,{structure:v,memory:{array:tu},const:!0,slots:{0:Et,1:Kt,2:Ct,3:Mt}});Object.assign(on,{slots:{0:Os,1:js,2:fs,3:Ss,4:ws,5:As,6:Us,7:zs,8:ds,9:hs,10:Vs}});Object.assign(Os,{structure:tt,memory:{array:eu},const:!0,slots:{0:Yt,1:Zt,2:te,3:ee}});Object.assign(js,{structure:st,memory:{array:su},const:!0,slots:{0:ne,1:ae,2:oe,3:ce}});Object.assign(fs,{structure:nt,memory:{array:ru},const:!0,slots:{0:me,1:ye,2:le,3:be}});Object.assign(Ss,{structure:ut,memory:{array:nu},const:!0,slots:{0:we,1:Ae,2:Ue,3:ze}});Object.assign(ws,{structure:lt,memory:{array:au},const:!0,slots:{0:Te,1:Re,2:ke,3:qe}});Object.assign(As,{structure:pt,memory:{array:ou},const:!0,slots:{0:Me,1:De,2:Fe,3:_e}});Object.assign(Us,{structure:ft,memory:{array:cu},const:!0,slots:{0:He,1:Je,2:Ne,3:Qe}});Object.assign(zs,{structure:St,memory:{array:uu},const:!0,slots:{0:We,1:Xe,2:Ye,3:Ze}});Object.assign(ds,{structure:wt,memory:{array:iu},const:!0,slots:{0:ts,1:es,2:ss,3:rs}});Object.assign(hs,{structure:At,memory:{array:mu},const:!0,slots:{0:ns,1:as,2:os,3:cs}});Object.assign(Vs,{structure:dt,memory:{array:yu},const:!0,slots:{0:ls,1:bs,2:gs,3:ps}});Object.assign(cn,{slots:{0:Ft}});Object.assign(Ft,{structure:b,memory:{array:lu},const:!0,slots:{0:un}});Object.assign(un,{structure:U,memory:{array:bu},const:!0});Object.assign(mn,{slots:{0:xs}});Object.assign(xs,{structure:T,memory:{array:gu},const:!0,slots:{0:Ft}});Object.assign(yn,{slots:{0:vs}});Object.assign(vs,{structure:T,memory:{array:pu},const:!0,slots:{0:Ft}});Object.assign(ln,{slots:{0:bn,1:pn,2:jn,3:Sn,4:An,5:Un,6:zn}});Object.assign(bn,{structure:N,memory:{array:Ou},const:!0,slots:{0:gn}});Object.assign(gn,{structure:J,memory:{array:ju},reloc:16778502});Object.assign(pn,{structure:W,memory:{array:fu},const:!0,slots:{0:On}});Object.assign(On,{structure:Q,memory:{array:Su},reloc:16778532});Object.assign(jn,{structure:b,memory:{array:wu},const:!0,slots:{0:fn}});Object.assign(fn,{structure:U,memory:{array:Au},const:!0});Object.assign(Sn,{structure:Y,memory:{array:Uu},const:!0,slots:{0:wn}});Object.assign(wn,{structure:X,memory:{array:zu},reloc:16778558});Object.assign(An,{structure:ht,memory:{array:du},const:!0,slots:{0:Os,1:js,2:fs,3:Ss,4:ws,5:As,6:Us,7:zs,8:ds,9:hs,10:Vs}});Object.assign(Un,{structure:Vt,memory:{array:hu},const:!0,slots:{0:xs}});Object.assign(zn,{structure:xt,memory:{array:Vu},const:!0,slots:{0:vs}});Object.assign(dn,{slots:{0:hn,1:Vn}});Object.assign(hn,{structure:O,memory:{array:xu},const:!0});Object.assign(Vn,{structure:O,memory:{array:vu},const:!0});Object.assign(xn,{memory:{array:ca},slots:{0:vn}});Object.assign(vn,{structure:E,memory:{array:ca,offset:0,length:8},slots:{0:Ps}});Object.assign(Ps,{structure:vt,memory:{array:Pu},reloc:0});Object.assign(Pn,{slots:{0:Tn,1:Rn,2:kn}});Object.assign(Tn,{structure:n,memory:{array:Tu},const:!0,slots:{0:Ts}});Object.assign(Ts,{structure:I});Object.assign(Rn,{structure:n,memory:{array:Ru},const:!0,slots:{0:Dt}});Object.assign(kn,{structure:b,memory:{array:ku},const:!0,slots:{0:qn}});Object.assign(qn,{structure:U,memory:{array:qu},const:!0});Object.assign(In,{memory:{array:ks},slots:{0:En}});Object.assign(En,{structure:Pt,memory:{array:ks},slots:{0:Kn}});Object.assign(Kn,{structure:E,memory:{array:ks,offset:0,length:8},slots:{0:Ps}});Object.assign(Cn,{memory:{array:ua},slots:{0:Mn}});Object.assign(Mn,{structure:C,memory:{array:ua,offset:0,length:8},slots:{0:Rs}});Object.assign(Rs,{structure:Tt,memory:{array:Iu},reloc:0});Object.assign(Dn,{slots:{0:Fn,1:_n,2:$n}});Object.assign(Fn,{structure:n,memory:{array:Eu},const:!0,slots:{0:Ts}});Object.assign(_n,{structure:n,memory:{array:Ku},const:!0,slots:{0:Dt}});Object.assign($n,{structure:b,memory:{array:Cu},const:!0,slots:{0:Ln}});Object.assign(Ln,{structure:U,memory:{array:Mu},const:!0});Object.assign(Bn,{memory:{array:qs},slots:{0:Gn}});Object.assign(Gn,{structure:Rt,memory:{array:qs},slots:{0:Hn}});Object.assign(Hn,{structure:C,memory:{array:qs,offset:0,length:8},slots:{0:Rs}});Object.assign(Jn,{memory:{array:Du}});Object.assign(Nn,{slots:{0:Qn}});Object.assign(Qn,{structure:V,memory:{array:Fu},const:!0});Object.assign(Wn,{slots:{0:Xn}});Object.assign(Xn,{structure:x,memory:{array:_u},const:!0});Object.assign(Yn,{slots:{0:Zn,1:ea,2:ra,3:aa}});Object.assign(Zn,{structure:n,memory:{array:$u},const:!0,slots:{0:ta}});Object.assign(ta,{structure:Bt});Object.assign(ea,{structure:n,memory:{array:Lu},const:!0,slots:{0:sa}});Object.assign(sa,{structure:K});Object.assign(ra,{structure:n,memory:{array:Bu},const:!0,slots:{0:na}});Object.assign(na,{structure:M});Object.assign(aa,{structure:n,memory:{array:Gu},const:!0,slots:{0:oa}});Object.assign(oa,{structure:D});const Hu={argStruct:Ht,thunkId:2,name:"createOutput"},Ju={argStruct:Nt,thunkId:3,name:"createPartialOutput"};Object.assign(n,{...s,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:n}],methods:[]}});Object.assign(A,{...s,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:A}],methods:[]}});Object.assign(J,{...s,type:1,name:"[18:0]u8",length:18,byteSize:19,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:A}],methods:[]}});Object.assign(N,{...s,type:13,name:"*const [18:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:J}],methods:[]}});Object.assign(Q,{...s,type:1,name:"[8:0]u8",length:8,byteSize:9,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:A}],methods:[]}});Object.assign(W,{...s,type:13,name:"*const [8:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[]}});Object.assign(b,{...s,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:b}],methods:[]}});Object.assign(U,{...s,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:U}],methods:[]}});Object.assign(X,{...s,type:1,name:"[39:0]u8",length:39,byteSize:40,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:A}],methods:[]}});Object.assign(Y,{...s,type:13,name:"*const [39:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[]}});Object.assign(e,{...s,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:e}],methods:[]}});Object.assign(r,{...s,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[]}});Object.assign(f,{...s,type:2,name:"Struct384995278",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:Ks}});Object.assign(S,{...s,type:2,name:"Struct1345527633",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:Ds}});Object.assign(Z,{...s,type:2,name:"Struct481389646",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:$s}});Object.assign(j,{...s,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:j}],methods:[]}});Object.assign(p,{...s,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:j}],methods:[]}});Object.assign(tt,{...s,type:2,name:"Struct96079225",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:n},{...t,type:7,slot:1,name:"minValue",structure:f},{...t,type:7,slot:2,name:"maxValue",structure:S},{...t,type:7,slot:3,name:"defaultValue",structure:Z}],methods:[],template:Gs}});Object.assign(et,{...s,type:2,name:"Struct3027921972",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:Hs}});Object.assign(st,{...s,type:2,name:"Struct3259989589",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:n},{...t,type:7,slot:1,name:"minValue",structure:f},{...t,type:7,slot:2,name:"maxValue",structure:S},{...t,type:7,slot:3,name:"defaultValue",structure:et}],methods:[],template:Qs}});Object.assign(rt,{...s,type:2,name:"Struct3358387956",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:Ws}});Object.assign(nt,{...s,type:2,name:"Struct814878541",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:n},{...t,type:7,slot:1,name:"minValue",structure:f},{...t,type:7,slot:2,name:"maxValue",structure:S},{...t,type:7,slot:3,name:"defaultValue",structure:rt}],methods:[],template:Zs}});Object.assign(at,{...s,type:2,name:"Struct733121760",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:tr}});Object.assign(ot,{...s,type:2,name:"Struct2520068400",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:rr}});Object.assign(ct,{...s,type:2,name:"Struct225905865",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:or}});Object.assign(ut,{...s,type:2,name:"Struct3360197528",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:n},{...t,type:7,slot:1,name:"minValue",structure:at},{...t,type:7,slot:2,name:"maxValue",structure:ot},{...t,type:7,slot:3,name:"defaultValue",structure:ct}],methods:[],template:ir}});Object.assign(it,{...s,type:2,name:"Struct3785042217",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:mr}});Object.assign(mt,{...s,type:2,name:"Struct1331017668",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:br}});Object.assign(yt,{...s,type:2,name:"Struct4112446434",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:Or}});Object.assign(lt,{...s,type:2,name:"Struct3947224949",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:n},{...t,type:7,slot:1,name:"minValue",structure:it},{...t,type:7,slot:2,name:"maxValue",structure:mt},{...t,type:7,slot:3,name:"defaultValue",structure:yt}],methods:[],template:Sr}});Object.assign(P,{...s,type:2,name:"Struct2999377579",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:wr}});Object.assign(bt,{...s,type:2,name:"Struct988573585",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:zr}});Object.assign(gt,{...s,type:2,name:"Struct1905498902",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:Vr}});Object.assign(pt,{...s,type:2,name:"Struct509129596",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:n},{...t,type:7,slot:1,name:"minValue",structure:P},{...t,type:7,slot:2,name:"maxValue",structure:bt},{...t,type:7,slot:3,name:"defaultValue",structure:gt}],methods:[],template:Pr}});Object.assign(Ot,{...s,type:2,name:"Struct830517164",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:Tr}});Object.assign(jt,{...s,type:2,name:"Struct1646942058",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:qr}});Object.assign(ft,{...s,type:2,name:"Struct2922664076",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:n},{...t,type:7,slot:1,name:"minValue",structure:P},{...t,type:7,slot:2,name:"maxValue",structure:Ot},{...t,type:7,slot:3,name:"defaultValue",structure:jt}],methods:[],template:Kr}});Object.assign(St,{...s,type:2,name:"Struct2189206887",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:n},{...t,type:7,slot:1,name:"minValue",structure:e},{...t,type:7,slot:2,name:"maxValue",structure:e},{...t,type:7,slot:3,name:"defaultValue",structure:e}],methods:[],template:Cr}});Object.assign(wt,{...s,type:2,name:"Struct2258040884",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:n},{...t,type:7,slot:1,name:"minValue",structure:e},{...t,type:7,slot:2,name:"maxValue",structure:e},{...t,type:7,slot:3,name:"defaultValue",structure:e}],methods:[],template:_r}});Object.assign(At,{...s,type:2,name:"Struct2542188729",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:n},{...t,type:7,slot:1,name:"minValue",structure:e},{...t,type:7,slot:2,name:"maxValue",structure:e},{...t,type:7,slot:3,name:"defaultValue",structure:e}],methods:[],template:Gr}});Object.assign(v,{...s,type:2,name:"Struct142040656",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e},{...t,type:7,slot:3,name:"3",structure:e}],methods:[],template:Qr}});Object.assign(Ut,{...s,type:2,name:"Struct2121898850",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e},{...t,type:7,slot:3,name:"3",structure:e}],methods:[],template:tn}});Object.assign(zt,{...s,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:j}],methods:[]}});Object.assign(dt,{...s,type:2,name:"Struct3892869511",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:n},{...t,type:7,slot:1,name:"minValue",structure:v},{...t,type:7,slot:2,name:"maxValue",structure:Ut},{...t,type:7,slot:3,name:"defaultValue",structure:v}],methods:[],template:an}});Object.assign(ht,{...s,type:2,name:"Struct333342783",align:1,instance:{members:[{...t,type:7,slot:0,name:"a",structure:tt},{...t,type:7,slot:1,name:"b",structure:st},{...t,type:7,slot:2,name:"c",structure:nt},{...t,type:7,slot:3,name:"d",structure:ut},{...t,type:7,slot:4,name:"distort",structure:lt},{...t,type:7,slot:5,name:"imagesize",structure:pt},{...t,type:7,slot:6,name:"center",structure:ft},{...t,type:7,slot:7,name:"focus",structure:St},{...t,type:7,slot:8,name:"scale",structure:wt},{...t,type:7,slot:9,name:"fill",structure:At},{...t,type:7,slot:10,name:"bgcolor",structure:dt}],methods:[],template:on}});Object.assign(T,{...s,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:b}],methods:[],template:cn}});Object.assign(Vt,{...s,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:7,slot:0,name:"src",structure:T}],methods:[],template:mn}});Object.assign(xt,{...s,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:T}],methods:[],template:yn}});Object.assign(Bt,{...s,type:2,name:"complex-inverse.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:N},{...t,type:7,slot:1,name:"vendor",structure:W},{...t,type:7,slot:2,name:"version",structure:b},{...t,type:7,slot:3,name:"description",structure:Y},{...t,type:7,slot:4,name:"parameters",structure:ht},{...t,type:7,slot:5,name:"inputImages",structure:Vt},{...t,type:7,slot:6,name:"outputImages",structure:xt}],methods:[],template:ln}});Object.assign(I,{...s,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:A}],methods:[]}});Object.assign(vt,{...s,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(E,{...s,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:vt}],methods:[]}});Object.assign(i,{...s,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:i}],methods:[]}});Object.assign(O,{...s,type:11,name:"complex-inverse.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:O}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:O},{...t,type:7,slot:1,name:"display-p3",structure:O}],methods:[],template:dn}});Object.assign(q,{...s,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:q}],methods:[]}});Object.assign(Pt,{...s,type:2,name:"complex-inverse.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:E},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:i},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:i},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:q}],methods:[],template:xn},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:n},{...t,type:7,slot:1,name:"FPixel",structure:n},{...t,type:7,slot:2,name:"channels",structure:b}],methods:[],template:Pn}});Object.assign(K,{...s,type:2,name:"complex-inverse.KernelInput(u8,complex-inverse.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:Pt}],methods:[],template:In}});Object.assign(Tt,{...s,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(C,{...s,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:Tt}],methods:[]}});Object.assign(Rt,{...s,type:2,name:"complex-inverse.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:C},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:i},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:i},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:q}],methods:[],template:Cn},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:n},{...t,type:7,slot:1,name:"FPixel",structure:n},{...t,type:7,slot:2,name:"channels",structure:b}],methods:[],template:Dn}});Object.assign(M,{...s,type:2,name:"complex-inverse.KernelOutput(u8,complex-inverse.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:Rt}],methods:[],template:Bn}});Object.assign(D,{...s,type:2,name:"complex-inverse.KernelParameters(complex-inverse.kernel)",byteSize:96,align:16,instance:{members:[{...t,type:5,bitOffset:128,bitSize:64,byteSize:8,slot:0,name:"a",structure:p},{...t,type:5,bitOffset:192,bitSize:64,byteSize:8,slot:1,name:"b",structure:p},{...t,type:5,bitOffset:256,bitSize:64,byteSize:8,slot:2,name:"c",structure:p},{...t,type:5,bitOffset:320,bitSize:64,byteSize:8,slot:3,name:"d",structure:p},{...t,type:5,bitOffset:384,bitSize:64,byteSize:8,slot:4,name:"distort",structure:p},{...t,type:5,bitOffset:448,bitSize:64,byteSize:8,slot:5,name:"imagesize",structure:p},{...t,type:5,bitOffset:512,bitSize:64,byteSize:8,slot:6,name:"center",structure:p},{...t,type:4,bitOffset:576,bitSize:32,byteSize:4,slot:8,name:"focus",structure:j},{...t,type:4,bitOffset:608,bitSize:32,byteSize:4,slot:9,name:"scale",structure:j},{...t,type:4,bitOffset:640,bitSize:32,byteSize:4,slot:10,name:"fill",structure:j},{...t,type:5,bitOffset:0,bitSize:128,byteSize:16,slot:7,name:"bgcolor",structure:zt}],methods:[],template:Jn}});Object.assign(V,{...s,type:10,name:"ErrorSet2252132718",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:V}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:V}],methods:[],template:Nn}});Object.assign(Gt,{...s,type:9,name:"ErrorSet2252132718!complex-inverse.KernelOutput(u8,complex-inverse.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:M},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:V}],methods:[]}});Object.assign(Ht,{...s,type:5,name:"createOutput",byteSize:160,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:768,bitSize:32,byteSize:4,slot:3,name:"0",structure:i},{...t,type:3,isRequired:!0,bitOffset:800,bitSize:32,byteSize:4,slot:4,name:"1",structure:i},{...t,type:5,isRequired:!0,bitOffset:832,bitSize:192,byteSize:24,slot:0,name:"2",structure:K},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:768,byteSize:96,slot:1,name:"3",structure:D},{...t,type:5,isRequired:!0,bitOffset:1024,bitSize:224,byteSize:28,slot:2,name:"retval",structure:Gt}],methods:[]}});Object.assign(x,{...s,type:10,name:"ErrorSet1146022906",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:x}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:x}],methods:[],template:Wn}});Object.assign(Jt,{...s,type:9,name:"ErrorSet1146022906!complex-inverse.KernelOutput(u8,complex-inverse.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:M},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:x}],methods:[]}});Object.assign(Nt,{...s,type:5,name:"createPartialOutput",byteSize:176,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:768,bitSize:32,byteSize:4,slot:3,name:"0",structure:i},{...t,type:3,isRequired:!0,bitOffset:800,bitSize:32,byteSize:4,slot:4,name:"1",structure:i},{...t,type:3,isRequired:!0,bitOffset:832,bitSize:32,byteSize:4,slot:5,name:"2",structure:i},{...t,type:3,isRequired:!0,bitOffset:864,bitSize:32,byteSize:4,slot:6,name:"3",structure:i},{...t,type:5,isRequired:!0,bitOffset:896,bitSize:192,byteSize:24,slot:0,name:"4",structure:K},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:768,byteSize:96,slot:1,name:"5",structure:D},{...t,type:5,isRequired:!0,bitOffset:1088,bitSize:224,byteSize:28,slot:2,name:"retval",structure:Jt}],methods:[]}});Object.assign(Qt,{...s,type:2,name:"complex-inverse",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:n},{...t,type:7,slot:1,name:"Input",structure:n},{...t,type:7,slot:2,name:"Output",structure:n},{...t,type:7,slot:3,name:"Parameters",structure:n}],methods:[Hu,Ju],template:Yn}});const Nu=[n,A,J,N,Q,W,b,U,X,Y,e,r,f,S,Z,j,p,tt,et,st,rt,nt,at,ot,ct,ut,it,mt,yt,lt,P,bt,gt,pt,Ot,jt,ft,St,wt,At,v,Ut,zt,dt,ht,T,Vt,xt,Bt,I,vt,E,i,O,q,Pt,K,Tt,C,Rt,M,D,V,Gt,Ht,x,Jt,Nt,Qt],Qu=Qt,Wu={runtimeSafety:!1,littleEndian:!0},_t=Aa();_t.getSpecialExports();_t.recreateStructures(Nu,Wu);const Xu=(async()=>{const c=new URL("complex-inverse-365d508c.wasm",import.meta.url).href;return fetch(c)})();_t.loadModule(Xu);_t.linkVariables(!0);const{constructor:Yu}=Qu,{createPartialOutput:Zu,Input:ti,kernel:Lt}=Yu;function ei(c,m,u,o,a={},z={}){const d=[];for(const[l]of Lt.inputImages)d.push(l);const R=[];for(const[l]of Lt.outputImages)R.push(l);if(Array.isArray(a)){const l=a;a={};for(const[g,h]of d.entries())a[h]=l[g]}const y=new ti(void 0),B=[];let k;for(const l of d){let g=a[l];if(g||(d.length===1&&["data","width","height"].every(h=>!!a[h])?g=a:B.push(l)),y[l]=g,k){if(g.colorSpace!==k)throw new Error(`Input images must all use the same color space: ${k}`)}else k=g.colorSpace}if(B.length>0)throw new Error(`Missing input image${B.length>1?"s":""}: ${B.join(", ")}`);const $t=Zu(c,m,u,o,y,z),Is=l=>{const g={};for(const h of R){const{data:{typedArray:G},width:Es,height:ia}=l[h];let H;if(typeof ImageData=="function"){const ma=new Uint8ClampedArray(G.buffer,G.byteOffset,G.byteLength);H=new ImageData(ma,Es,o,{colorSpace:k})}else H={data:G,width:Es,height:ia};if(R.length===1)return H;g[h]=H}return g};return $t[Symbol.toStringTag]==="Promise"?$t.then(Is):Is($t)}function si(){const c={};for(let[m,u]of Lt){if(m==="parameters"){const o={};for(const[a,z]of u){const d=o[a]={};for(let[R,y]of z)typeof y=="object"?y=y.string??y.valueOf():typeof y=="function"&&(y=ri(y.name)),d[R]=y}u=o}else typeof u=="object"&&(u=u.string??u.valueOf());c[m]=u}return c}function ri(c){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[c]}onmessage=async c=>{if(!Array.isArray(c.data))return;const[m,u,...o]=c.data;try{const[a,z]=await ni(m,o);postMessage([m,u,a],{transfer:z})}catch(a){postMessage(["error",u,a])}};async function ni(c,m){switch(c){case"getKernelInfo":return[si(...m)];case"createPartialImageData":const o=await ei(...m),a=[];if("data"in o&&"width"in o&&"height"in o)a.push(o.data.buffer);else for(const z of Object.entries(o))a.push(o.data.buffer);return[o,a];default:throw new Error(`Unknown function: ${c}`)}}postMessage("ready");
