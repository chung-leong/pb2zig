import{u as Ke,a as De,b as Fe,c as Me,d as _e,e as Te,f as $e,g as Be,h as He,i as Le,j as Ge,k as Je,l as Ne,m as Qe,o as We,n as Xe,p as Ye,q as Ze}from"./index-d64bc850.js";Ke();De();Fe();Me();_e();Te();$e();Be();He();Le();Ge();Je();Ne();Qe();We();Xe();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},d={},N={},Q={},k={},W={},X={},I={},l={},u={},Y={},Z={},v={},c={},r={},s={},ee={},x={},te={},se={},E={},re={},K={},ae={},D={},ne={},F={},ie={},M={},ue={},_={},oe={},T={},me={},$={},le={},B={},A={},h={},ye={},H={},ce={},L={},we={},z={},be={},pe={},b={},fe={},O={},de={},G={},U={},Se={},ge={},J={},R={},q={},Oe={},Ae={},Ue={},Re={},qe={},je={},Pe={};Object.assign(d,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:5});Object.assign(N,{...t,type:1,name:"[9:0]u8",length:9,byteSize:10,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:4});Object.assign(Q,{...t,type:11,name:"*const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:N}],methods:[],template:null},slot:3});Object.assign(k,{...t,type:11,name:"*const *const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[],template:null},slot:2});Object.assign(W,{...t,type:1,name:"[17:0]u8",length:17,byteSize:18,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:8});Object.assign(X,{...t,type:11,name:"*const [17:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:7});Object.assign(I,{...t,type:11,name:"*const *const [17:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:6});Object.assign(l,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:l}],methods:[],template:null},slot:10});Object.assign(u,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:l}],methods:[],template:null},slot:9});Object.assign(Y,{...t,type:1,name:"[107:0]u8",length:107,byteSize:108,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:13});Object.assign(Z,{...t,type:11,name:"*const [107:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[],template:null},slot:12});Object.assign(v,{...t,type:11,name:"*const *const [107:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:11});Object.assign(c,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:32});Object.assign(r,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[],template:null},slot:56});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:r}],methods:[],template:null},slot:55});const et=new Uint8Array,tt=new Uint8Array([64,252,15,0]),st=new Uint8Array([0,0,0,0,0,0,0,0]),rt=new Uint8Array([88,252,15,0]),at=new Uint8Array([0,0,0,0,0,0,224,63]),nt=new Uint8Array([32,251,15,0]),it=new Uint8Array([0,0,0,0,0,0,208,63]);Object.assign(ee,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:c},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:et},slots:{0:{structure:s,memory:{array:tt},slots:{0:{structure:r,memory:{array:st}}}},1:{structure:s,memory:{array:rt},slots:{0:{structure:r,memory:{array:at}}}},2:{structure:s,memory:{array:nt},slots:{0:{structure:r,memory:{array:it}}}}}}},slot:39});Object.assign(x,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:38});Object.assign(te,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:33});const ut=new Uint8Array,ot=new Uint8Array([16,252,15,0]),mt=new Uint8Array([0,0,0,0,0,0,0,0]),lt=new Uint8Array([72,252,15,0]),yt=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(se,{...t,type:2,name:"Struct0023",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:ut},slots:{0:{structure:s,memory:{array:ot},slots:{0:{structure:r,memory:{array:mt}}}},1:{structure:s,memory:{array:lt},slots:{0:{structure:r,memory:{array:yt}}}}}}},slot:58});Object.assign(E,{...t,type:11,name:"Struct0020",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:57});const ct=new Uint8Array,bt=new Uint8Array([16,252,15,0]),pt=new Uint8Array([0,0,0,0,0,32,140,64]),ft=new Uint8Array([72,252,15,0]),dt=new Uint8Array([0,0,0,0,0,32,140,64]);Object.assign(re,{...t,type:2,name:"Struct0024",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:ct},slots:{0:{structure:s,memory:{array:bt},slots:{0:{structure:r,memory:{array:pt}}}},1:{structure:s,memory:{array:ft},slots:{0:{structure:r,memory:{array:dt}}}}}}},slot:60});Object.assign(K,{...t,type:11,name:"Struct0021",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:59});const St=new Uint8Array,gt=new Uint8Array([16,252,15,0]),ht=new Uint8Array([0,0,0,0,0,0,105,64]),zt=new Uint8Array([72,252,15,0]),wt=new Uint8Array([0,0,0,0,0,0,105,64]);Object.assign(ae,{...t,type:2,name:"Struct0025",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:St},slots:{0:{structure:s,memory:{array:gt},slots:{0:{structure:r,memory:{array:ht}}}},1:{structure:s,memory:{array:zt},slots:{0:{structure:r,memory:{array:wt}}}}}}},slot:62});Object.assign(D,{...t,type:11,name:"Struct0022",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:61});const Ot=new Uint8Array,At=new Uint8Array([170,170,170,170]),Ut=new Uint8Array,Rt=new Uint8Array([170,170,170,170]),qt=new Uint8Array,jt=new Uint8Array([170,170,170,170]),Pt=new Uint8Array;Object.assign(ne,{...t,type:2,name:"Struct0014",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:te},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:E},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:K},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:D}],methods:[],template:{memory:{array:Ot},slots:{0:{structure:E,memory:{array:At},slots:{0:{structure:se,memory:{array:Ut}}}},1:{structure:K,memory:{array:Rt},slots:{0:{structure:re,memory:{array:qt}}}},2:{structure:D,memory:{array:jt},slots:{0:{structure:ae,memory:{array:Pt}}}}}}},slot:41});Object.assign(F,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:40});const Vt=new Uint8Array,Ct=new Uint8Array([64,252,15,0]),kt=new Uint8Array([0,0,0,0,0,0,0,0]),It=new Uint8Array([88,252,15,0]),vt=new Uint8Array([0,0,0,0,0,64,127,64]),xt=new Uint8Array([32,251,15,0]),Et=new Uint8Array([0,0,0,0,0,0,89,64]);Object.assign(ie,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:c},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:Vt},slots:{0:{structure:s,memory:{array:Ct},slots:{0:{structure:r,memory:{array:kt}}}},1:{structure:s,memory:{array:It},slots:{0:{structure:r,memory:{array:vt}}}},2:{structure:s,memory:{array:xt},slots:{0:{structure:r,memory:{array:Et}}}}}}},slot:43});Object.assign(M,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:42});const Kt=new Uint8Array,Dt=new Uint8Array([144,250,15,0]),Ft=new Uint8Array([0,0,0,0]),Mt=new Uint8Array([248,250,15,0]),_t=new Uint8Array([1,0,0,0]),Tt=new Uint8Array([104,251,15,0]),$t=new Uint8Array([0,0,0,0]);Object.assign(ue,{...t,type:2,name:"Struct0016",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:l},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:u},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:u},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:u}],methods:[],template:{memory:{array:Kt},slots:{0:{structure:u,memory:{array:Dt},slots:{0:{structure:l,memory:{array:Ft}}}},1:{structure:u,memory:{array:Mt},slots:{0:{structure:l,memory:{array:_t}}}},2:{structure:u,memory:{array:Tt},slots:{0:{structure:l,memory:{array:$t}}}}}}},slot:45});Object.assign(_,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:44});const Bt=new Uint8Array,Ht=new Uint8Array([64,252,15,0]),Lt=new Uint8Array([0,0,0,0,0,0,0,0]),Gt=new Uint8Array([88,252,15,0]),Jt=new Uint8Array([0,0,0,0,0,0,240,63]),Nt=new Uint8Array([32,251,15,0]),Qt=new Uint8Array([51,51,51,51,51,51,227,63]);Object.assign(oe,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:c},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:Bt},slots:{0:{structure:s,memory:{array:Ht},slots:{0:{structure:r,memory:{array:Lt}}}},1:{structure:s,memory:{array:Gt},slots:{0:{structure:r,memory:{array:Jt}}}},2:{structure:s,memory:{array:Nt},slots:{0:{structure:r,memory:{array:Qt}}}}}}},slot:47});Object.assign(T,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:46});const Wt=new Uint8Array,Xt=new Uint8Array([64,252,15,0]),Yt=new Uint8Array([0,0,0,0,0,0,0,0]),Zt=new Uint8Array([88,252,15,0]),es=new Uint8Array([0,0,0,0,0,0,240,63]),ts=new Uint8Array([32,251,15,0]),ss=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(me,{...t,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:c},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:Wt},slots:{0:{structure:s,memory:{array:Xt},slots:{0:{structure:r,memory:{array:Yt}}}},1:{structure:s,memory:{array:Zt},slots:{0:{structure:r,memory:{array:es}}}},2:{structure:s,memory:{array:ts},slots:{0:{structure:r,memory:{array:ss}}}}}}},slot:49});Object.assign($,{...t,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:48});const rs=new Uint8Array,as=new Uint8Array([170,170,170,170]),ns=new Uint8Array,is=new Uint8Array([170,170,170,170]),us=new Uint8Array,os=new Uint8Array([170,170,170,170]),ms=new Uint8Array,ls=new Uint8Array([170,170,170,170]),ys=new Uint8Array,cs=new Uint8Array([170,170,170,170]),bs=new Uint8Array,ps=new Uint8Array([170,170,170,170]),fs=new Uint8Array;Object.assign(le,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"amount",structure:x},{...e,type:8,isRequired:!1,slot:1,name:"center",structure:F},{...e,type:8,isRequired:!1,slot:2,name:"focalSize",structure:M},{...e,type:8,isRequired:!1,slot:3,name:"invert",structure:_},{...e,type:8,isRequired:!1,slot:4,name:"vignette",structure:T},{...e,type:8,isRequired:!1,slot:5,name:"edgeHardness",structure:$}],methods:[],template:{memory:{array:rs},slots:{0:{structure:x,memory:{array:as},slots:{0:{structure:ee,memory:{array:ns}}}},1:{structure:F,memory:{array:is},slots:{0:{structure:ne,memory:{array:us}}}},2:{structure:M,memory:{array:os},slots:{0:{structure:ie,memory:{array:ms}}}},3:{structure:_,memory:{array:ls},slots:{0:{structure:ue,memory:{array:ys}}}},4:{structure:T,memory:{array:cs},slots:{0:{structure:oe,memory:{array:bs}}}},5:{structure:$,memory:{array:ps},slots:{0:{structure:me,memory:{array:fs}}}}}}},slot:15});Object.assign(B,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:14});const ds=new Uint8Array,Ss=new Uint8Array([64,252,15,0]),gs=new Uint8Array([4,0,0,0]);Object.assign(A,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:u}],methods:[],template:{memory:{array:ds},slots:{0:{structure:u,memory:{array:Ss},slots:{0:{structure:l,memory:{array:gs}}}}}}},slot:51});Object.assign(h,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:A}],methods:[],template:null},slot:50});const hs=new Uint8Array,zs=new Uint8Array([170,170,170,170]),ws=new Uint8Array;Object.assign(ye,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:h}],methods:[],template:{memory:{array:hs},slots:{0:{structure:h,memory:{array:zs},slots:{0:{structure:A,memory:{array:ws}}}}}}},slot:17});Object.assign(H,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:16});const Os=new Uint8Array,As=new Uint8Array([170,170,170,170]),Us=new Uint8Array;Object.assign(ce,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:h}],methods:[],template:{memory:{array:Os},slots:{0:{structure:h,memory:{array:As},slots:{0:{structure:A,memory:{array:Us}}}}}}},slot:19});Object.assign(L,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:18});const Rs=new Uint8Array,qs=new Uint8Array,js=new Uint8Array([216,9,16,0]),Ps=new Uint8Array([134,9,16,0]),Vs=new Uint8Array([99,111,109,46,97,98,114,105,108,0]),Cs=new Uint8Array([212,9,16,0]),ks=new Uint8Array([105,9,16,0]),Is=new Uint8Array([68,97,110,105,101,108,32,65,108,108,101,103,114,101,116,116,105,0]),vs=new Uint8Array([208,9,16,0]),xs=new Uint8Array([1,0,0,0]),Es=new Uint8Array([204,9,16,0]),Ks=new Uint8Array([236,8,16,0]),Ds=new Uint8Array([65,106,117,115,116,97,98,108,101,32,122,111,111,109,32,98,108,117,114,44,32,121,111,117,32,99,97,110,32,99,111,110,116,114,111,108,32,102,111,99,97,108,32,115,105,122,101,44,32,101,100,103,101,32,104,97,114,100,110,101,115,115,32,97,110,100,32,108,105,103,104,116,46,32,66,97,115,101,100,32,111,110,32,90,111,111,109,66,108,117,114,32,98,121,32,82,121,97,110,32,80,104,101,108,97,110,46,0]),Fs=new Uint8Array([170,170,170,170]),Ms=new Uint8Array,_s=new Uint8Array([170,170,170,170]),Ts=new Uint8Array,$s=new Uint8Array([170,170,170,170]),Bs=new Uint8Array;Object.assign(we,{...t,type:2,name:"zoom-blur-focus.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Rs}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:k},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:I},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:u},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:v},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:B},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:H},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:L}],methods:[],template:{memory:{array:qs},slots:{0:{structure:k,memory:{array:js},slots:{0:{structure:Q,memory:{array:Ps},slots:{0:{structure:N,memory:{array:Vs}}}}}},1:{structure:I,memory:{array:Cs},slots:{0:{structure:X,memory:{array:ks},slots:{0:{structure:W,memory:{array:Is}}}}}},2:{structure:u,memory:{array:vs},slots:{0:{structure:l,memory:{array:xs}}}},3:{structure:v,memory:{array:Es},slots:{0:{structure:Z,memory:{array:Ks},slots:{0:{structure:Y,memory:{array:Ds}}}}}},4:{structure:B,memory:{array:Fs},slots:{0:{structure:le,memory:{array:Ms}}}},5:{structure:H,memory:{array:_s},slots:{0:{structure:ye,memory:{array:Ts}}}},6:{structure:L,memory:{array:$s},slots:{0:{structure:ce,memory:{array:Bs}}}}}}},slot:1});Object.assign(z,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:24});Object.assign(be,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:z}],methods:[],template:null},slot:23});Object.assign(pe,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:be}],methods:[],template:null},slot:22});Object.assign(b,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:25});const Hs=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(fe,{...t,type:9,name:"zoom-blur-focus.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:l},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:l}],methods:[],template:{memory:{array:Hs}}},slot:26});Object.assign(O,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:27});Object.assign(de,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:52});const Ls=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Gs=new Uint8Array,Js=new Uint8Array([180,8,16,0]),Ns=new Uint8Array([4,0,0,0]);Object.assign(G,{...t,type:2,name:"zoom-blur-focus.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:pe},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:b},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:b},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:fe},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:O}],methods:[],template:{memory:{array:Ls}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:z},{...e,type:7,isRequired:!1,name:"FPixel",structure:de},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:u}],methods:[],template:{memory:{array:Gs},slots:{0:{structure:u,memory:{array:Js},slots:{0:{structure:l,memory:{array:Ns}}}}}}},slot:21});const Qs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ws=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ie=new Uint8Array([0,0,0,0,0,0,0,0]),Xs=new Uint8Array;Object.assign(U,{...t,type:2,name:"zoom-blur-focus.KernelInput(u8,zoom-blur-focus.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:G}],methods:[],template:{memory:{array:Qs},slots:{0:{structure:G,memory:{array:Ws},slots:{0:{structure:pe,memory:{array:Ie},address:1047200,slots:{0:{structure:be,memory:{array:Xs},address:0}}}}}}}},slot:20});Object.assign(Se,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:z}],methods:[],template:null},slot:23});Object.assign(ge,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Se}],methods:[],template:null},slot:30});const Ys=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Zs=new Uint8Array,er=new Uint8Array([180,8,16,0]),tr=new Uint8Array([4,0,0,0]);Object.assign(J,{...t,type:2,name:"zoom-blur-focus.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:ge},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:b},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:b},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:fe},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:O}],methods:[],template:{memory:{array:Ys}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:z},{...e,type:7,isRequired:!1,name:"FPixel",structure:de},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:u}],methods:[],template:{memory:{array:Zs},slots:{0:{structure:u,memory:{array:er},slots:{0:{structure:l,memory:{array:tr}}}}}}},slot:29});const sr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),rr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ar=new Uint8Array;Object.assign(R,{...t,type:2,name:"zoom-blur-focus.KernelOutput(u8,zoom-blur-focus.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:J}],methods:[],template:{memory:{array:sr},slots:{0:{structure:J,memory:{array:rr},slots:{0:{structure:ge,memory:{array:Ie},address:1047200,slots:{0:{structure:Se,memory:{array:ar},address:0}}}}}}}},slot:28});const nr=new Uint8Array([0,0,72,67,0,0,72,67,0,0,128,62,0,0,200,66,0,0,0,0,154,153,25,63,0,0,0,0,0,0,0,0]);Object.assign(q,{...t,type:2,name:"zoom-blur-focus.KernelParameters(zoom-blur-focus.kernel)",length:1,byteSize:32,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:64,bitSize:32,byteSize:4,slot:0,name:"amount",structure:c},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,slot:1,name:"center",structure:te},{...e,type:4,isRequired:!1,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"focalSize",structure:c},{...e,type:2,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"invert",structure:l},{...e,type:4,isRequired:!1,bitOffset:160,bitSize:32,byteSize:4,slot:4,name:"vignette",structure:c},{...e,type:4,isRequired:!1,bitOffset:192,bitSize:32,byteSize:4,slot:5,name:"edgeHardness",structure:c}],methods:[],template:{memory:{array:nr}}},slot:31});Object.assign(Oe,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(zoom-blur-focus.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:53});Object.assign(Ae,{...t,type:7,name:"ErrorSet0000!zoom-blur-focus.KernelOutput(u8,zoom-blur-focus.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:R},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Oe}],methods:[],template:null},slot:36});Object.assign(Ue,{...t,type:3,name:"createOutput",length:1,byteSize:96,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:b},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:b},{...e,type:6,bitOffset:320,bitSize:192,byteSize:24,slot:2,name:"2",structure:U},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:3,name:"3",structure:q},{...e,type:6,bitOffset:512,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Ae}],methods:[],template:null},slot:34});Object.assign(Re,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(zoom-blur-focus.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:54});Object.assign(qe,{...t,type:7,name:"ErrorSet0001!zoom-blur-focus.KernelOutput(u8,zoom-blur-focus.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:R},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Re}],methods:[],template:null},slot:37});Object.assign(je,{...t,type:3,name:"createPartialOutput",length:1,byteSize:104,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:b},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:b},{...e,type:3,bitOffset:320,bitSize:32,byteSize:4,slot:2,name:"2",structure:b},{...e,type:3,bitOffset:352,bitSize:32,byteSize:4,slot:3,name:"3",structure:b},{...e,type:6,bitOffset:384,bitSize:192,byteSize:24,slot:4,name:"4",structure:U},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:5,name:"5",structure:q},{...e,type:6,bitOffset:576,bitSize:224,byteSize:28,slot:6,name:"retval",structure:qe}],methods:[],template:null},slot:35});const ir=new Uint8Array,ur={argStruct:Ue,thunk:5,name:"createOutput"},or={argStruct:je,thunk:1,name:"createPartialOutput"};Object.assign(Pe,{...t,type:2,name:"zoom-blur-focus",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:ir}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:we},{...e,type:7,isRequired:!1,name:"Input",structure:U},{...e,type:7,isRequired:!1,name:"Output",structure:R},{...e,type:7,isRequired:!1,name:"Parameters",structure:q}],methods:[ur,or],template:null},slot:0});const mr=[d,N,Q,k,W,X,I,l,u,Y,Z,v,c,r,s,ee,x,te,se,E,re,K,ae,D,ne,F,ie,M,ue,_,oe,T,me,$,le,B,A,h,ye,H,ce,L,we,z,be,pe,b,fe,O,de,G,U,Se,ge,J,R,q,Oe,Ae,Ue,Re,qe,je,Pe],lr=Ye(mr),yr=Pe.constructor,cr=(async()=>{const o=new URL("zoom-blur-focus-f5675d72.wasm",import.meta.url).href;return fetch(o)})();Ze(cr,{...lr,writeBack:!0});const{createOutput:zr,createPartialOutput:br,kernel:ze,Input:pr,Output:wr,Parameters:Or}=yr;function fr(o,y,n,a,i={},S={}){if(Array.isArray(i)){const f=i;i={};for(const[p,g]of Object.keys(ze.inputImages).entries())i[g]=f[p]}const j=new pr(void 0),P=Object.keys(ze.inputImages),m=[];let w;for(const f of P){let p=i[f];if(p||(P.length===1&&["data","width","height"].every(g=>!!i[g])?p=i:m.push(f)),j[f]=p,w){if(p.colorSpace!==w)throw new Error(`Input images must all use the same color space: ${w}`)}else w=p.colorSpace}if(m.length>0)throw new Error(`Missing input image${m.length>1?"s":""}: ${m.join(", ")}`);const he=br(o,y,n,a,j,S),Ve=f=>{const p=Object.keys(f),g={};for(const Ce of p){const{data:{typedArray:V},width:ke,height:xe}=f[Ce];let C;if(typeof ImageData=="function"){const Ee=new Uint8ClampedArray(V.buffer,V.byteOffset,V.byteLength);C=new ImageData(Ee,ke,a,{colorSpace:w})}else C={data:V,width:ke,height:xe};if(p.length===1)return C;g[Ce]=C}return g};return he[Symbol.toStringTag]==="Promise"?he.then(Ve):Ve(he)}function dr(){const o={};for(let[y,n]of Object.entries(ze)){if(y==="parameters"){const a={};for(const[i,S]of Object.entries(n)){const j=a[i]={};for(let[P,m]of Object.entries(S))typeof m=="object"?"string"in m?m=m.string:m=ve(m):typeof m=="function"&&(m=Sr(m.name)),j[P]=m}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());o[y]=n}return o}function ve(o){const y=[];for(let[n,a]of Object.entries(o))typeof a=="object"&&(a=ve(a)),y[n]=a;return y}function Sr(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[y,n,...a]=o.data;gr(y,a).then(([i,S])=>{postMessage([y,n,i],{transfer:S})}).catch(i=>{postMessage(["error",n,i])})};async function gr(o,y){switch(o){case"getKernelInfo":return[dr(...y)];case"createPartialImageData":const a=await fr(...y),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const S of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${o}`)}}
