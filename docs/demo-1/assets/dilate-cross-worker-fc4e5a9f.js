import{u as he,a as ge,b as Oe,c as Pe,d as we,e as Re,f as ke,g as Ve,h as qe,i as Ie,j as ve,k as Ee,l as Ae,m as xe,n as Ke,o as je,p as Ce}from"./index-401163b4.js";he();Ee();Ae();ge();Oe();xe();Ke();Pe();we();Re();ke();Ce();je();Ve();qe();Ie();const s={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},e={type:0,isRequired:!1},o={},b={},U={},M={},D={},T={},p={},$={},F={},_={},P={},L={},B={},Z={},V={},G={},q={},c={},S={},k={},C={},tt={},H={},I={},J={},v={},N={},E={},A={},g={},et={},st={},O={},rt={},ot={},at={},St={},Q={},zt={},dt={},nt={},ht={},it={},gt={},Ot={},Pt={},wt={},Rt={},kt={},Vt={},qt={},It={},vt={},Et={},At={},xt={},Kt={},jt={},Ct={},Ut={},ut={},Mt={},Dt={},ct={},Tt={},mt={},$t={},Ft={},_t={},Lt={},Bt={},Gt={},Ht={},yt={},Jt={},Nt={},Qt={},Wt={},Xt={},Yt={},Zt={},te={},ee={},se={},re={},oe={},ae={},ne={},ie={},ue={},ce={},me={},ye={},le={},be={},r=n=>new Uint8Array(n),Ue=r(),Me=r([4]),De=r(),Te=r(),$e=r([136,0,0,1]),pe=r([99,111,109,46,103,97,115,117,98,97,115,117,0]),Fe=r([140,0,0,1]),_e=r(),Le=r([1]),Be=r([108,6,0,1]),Ge=r([102,108,97,115,104,32,99,111,109,112,97,116,105,98,108,101,32,100,105,108,97,116,101,32,102,105,108,116,101,114,32,39,99,114,111,115,115,39,0]),He=r(),Je=r(),Ne=r(),Qe=r(1),We=r([1]),fe=r(24),Xe=r(),Ye=r(),Ze=r(),ts=r(),es=r([4]),lt=r(24),Se=r(24),ss=r(),rs=r(),os=r(),as=r(),ns=r([4]),bt=r(24),is=r([2,0]),us=r([2,0]),cs=r(),ms=r(),ys=r(),ls=r(),t=Object.assign;t(St,{slots:{0:Q}});t(Q,{structure:p,memory:{array:Ue},const:!0,slots:{0:zt}});t(zt,{structure:b,memory:{array:Me},const:!0});t(dt,{slots:{0:nt}});t(nt,{structure:P,memory:{array:De},const:!0,slots:{0:Q}});t(ht,{slots:{0:it}});t(it,{structure:P,memory:{array:Te},const:!0,slots:{0:Q}});t(gt,{slots:{0:Ot,1:wt,2:kt,3:qt,4:vt,5:Et,6:At}});t(Ot,{structure:M,memory:{array:$e},const:!0,slots:{0:Pt}});t(Pt,{structure:U,memory:{array:pe},reloc:16777352});t(wt,{structure:T,memory:{array:Fe},const:!0,slots:{0:Rt}});t(Rt,{structure:D,memory:{array:pe,offset:4,length:9},reloc:16777356});t(kt,{structure:p,memory:{array:_e},const:!0,slots:{0:Vt}});t(Vt,{structure:b,memory:{array:Le},const:!0});t(qt,{structure:F,memory:{array:Be},const:!0,slots:{0:It}});t(It,{structure:$,memory:{array:Ge},reloc:16778860});t(vt,{structure:_,memory:{array:He},const:!0});t(Et,{structure:L,memory:{array:Je},const:!0,slots:{0:nt}});t(At,{structure:B,memory:{array:Ne},const:!0,slots:{0:it}});t(xt,{slots:{0:Kt,1:jt}});t(Kt,{structure:S,memory:{array:Qe},const:!0});t(jt,{structure:S,memory:{array:We},const:!0});t(Ct,{memory:{array:fe},slots:{0:Ut}});t(Ut,{structure:q,memory:{array:fe,offset:0,length:8},slots:{0:ut}});t(ut,{structure:G,memory:{array:Xe},reloc:0});t(Mt,{slots:{0:Dt,1:Tt,2:$t}});t(Dt,{structure:o,memory:{array:Ye},const:!0,slots:{0:ct}});t(ct,{structure:V});t(Tt,{structure:o,memory:{array:Ze},const:!0,slots:{0:mt}});t(mt,{structure:tt});t($t,{structure:p,memory:{array:ts},const:!0,slots:{0:Ft}});t(Ft,{structure:b,memory:{array:es},const:!0});t(_t,{memory:{array:lt},slots:{0:Lt}});t(Lt,{structure:H,memory:{array:lt},slots:{0:Bt}});t(Bt,{structure:q,memory:{array:lt,offset:0,length:8},slots:{0:ut}});t(Gt,{memory:{array:Se},slots:{0:Ht}});t(Ht,{structure:v,memory:{array:Se,offset:0,length:8},slots:{0:yt}});t(yt,{structure:J,memory:{array:ss},reloc:0});t(Jt,{slots:{0:Nt,1:Qt,2:Wt}});t(Nt,{structure:o,memory:{array:rs},const:!0,slots:{0:ct}});t(Qt,{structure:o,memory:{array:os},const:!0,slots:{0:mt}});t(Wt,{structure:p,memory:{array:as},const:!0,slots:{0:Xt}});t(Xt,{structure:b,memory:{array:ns},const:!0});t(Yt,{memory:{array:bt},slots:{0:Zt}});t(Zt,{structure:N,memory:{array:bt},slots:{0:te}});t(te,{structure:v,memory:{array:bt,offset:0,length:8},slots:{0:yt}});t(ee,{slots:{0:se}});t(se,{structure:g,memory:{array:is},const:!0});t(re,{slots:{0:oe}});t(oe,{structure:O,memory:{array:us},const:!0});t(ae,{slots:{0:ne,1:ue,2:me,3:le}});t(ne,{structure:o,memory:{array:cs},const:!0,slots:{0:ie}});t(ie,{structure:Z});t(ue,{structure:o,memory:{array:ms},const:!0,slots:{0:ce}});t(ce,{structure:I});t(me,{structure:o,memory:{array:ys},const:!0,slots:{0:ye}});t(ye,{structure:E});t(le,{structure:o,memory:{array:ls},const:!0,slots:{0:be}});t(be,{structure:A});const bs={argStruct:st,thunkId:2,name:"createOutput"},ps={argStruct:ot,thunkId:3,name:"createPartialOutput"};t(o,{...s,name:"type",align:1,instance:{members:[{...e,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:o}],methods:[]}});t(b,{...s,name:"u8",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:b}],methods:[]}});t(U,{...s,type:1,name:"[12:0]u8",length:12,byteSize:13,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:b}],methods:[]}});t(M,{...s,type:13,name:"*const [12:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,slot:0,structure:U}],methods:[]}});t(D,{...s,type:1,name:"[8:0]u8",length:8,byteSize:9,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:b}],methods:[]}});t(T,{...s,type:13,name:"*const [8:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,slot:0,structure:D}],methods:[]}});t(p,{...s,name:"comptime_int",align:1,instance:{members:[{...e,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:p}],methods:[]}});t($,{...s,type:1,name:"[38:0]u8",length:38,byteSize:39,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:b}],methods:[]}});t(F,{...s,type:13,name:"*const [38:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[]}});t(_,{...s,type:2,name:"@TypeOf(.{})",align:1,isTuple:!0});t(P,{...s,type:2,name:"Struct0022",align:1,instance:{members:[{...e,type:7,slot:0,name:"channels",structure:p}],methods:[],template:St}});t(L,{...s,type:2,name:"Struct0021",align:1,instance:{members:[{...e,type:7,slot:0,name:"i",structure:P}],methods:[],template:dt}});t(B,{...s,type:2,name:"Struct0024",align:1,instance:{members:[{...e,type:7,slot:0,name:"o",structure:P}],methods:[],template:ht}});t(Z,{...s,type:2,name:"dilate-cross.kernel",align:1,static:{members:[{...e,type:7,slot:0,name:"namespace",structure:M},{...e,type:7,slot:1,name:"vendor",structure:T},{...e,type:7,slot:2,name:"version",structure:p},{...e,type:7,slot:3,name:"description",structure:F},{...e,type:7,slot:4,name:"parameters",structure:_},{...e,type:7,slot:5,name:"inputImages",structure:L},{...e,type:7,slot:6,name:"outputImages",structure:B}],methods:[],template:gt}});t(V,{...s,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:b}],methods:[]}});t(G,{...s,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,structure:V}],methods:[]}});t(q,{...s,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:64,byteSize:8,slot:0,structure:G}],methods:[]}});t(c,{...s,name:"u32",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[]}});t(S,{...s,type:11,name:"dilate-cross.ColorSpace",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:S}],methods:[]},static:{members:[{...e,type:7,slot:0,name:"srgb",structure:S},{...e,type:7,slot:1,name:"display-p3",structure:S}],methods:[],template:xt}});t(k,{...s,name:"usize",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:k}],methods:[]}});t(C,{...s,name:"f32",byteSize:4,align:4,instance:{members:[{...e,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:C}],methods:[]}});t(tt,{...s,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...e,type:4,bitSize:32,byteSize:4,structure:C}],methods:[]}});t(H,{...s,type:2,name:"dilate-cross.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:q},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...e,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:S},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:k}],methods:[],template:Ct},static:{members:[{...e,type:7,slot:0,name:"Pixel",structure:o},{...e,type:7,slot:1,name:"FPixel",structure:o},{...e,type:7,slot:2,name:"channels",structure:p}],methods:[],template:Mt}});t(I,{...s,type:2,name:"dilate-cross.KernelInput(u8,dilate-cross.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"i",structure:H}],methods:[],template:_t}});t(J,{...s,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,structure:V}],methods:[]}});t(v,{...s,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:64,byteSize:8,slot:0,structure:J}],methods:[]}});t(N,{...s,type:2,name:"dilate-cross.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:v},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...e,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:S},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:k}],methods:[],template:Gt},static:{members:[{...e,type:7,slot:0,name:"Pixel",structure:o},{...e,type:7,slot:1,name:"FPixel",structure:o},{...e,type:7,slot:2,name:"channels",structure:p}],methods:[],template:Jt}});t(E,{...s,type:2,name:"dilate-cross.KernelOutput(u8,dilate-cross.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"o",structure:N}],methods:[],template:Yt}});t(A,{...s,type:2,name:"dilate-cross.KernelParameters(dilate-cross.kernel)",align:1});t(g,{...s,type:10,name:"ErrorSet0040",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:g}],methods:[]},static:{members:[{...e,type:7,slot:0,name:"OutOfMemory",structure:g}],methods:[],template:ee}});t(et,{...s,type:9,name:"ErrorSet0040!dilate-cross.KernelOutput(u8,dilate-cross.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:E},{...e,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:g}],methods:[]}});t(st,{...s,type:5,name:"Arg0046",byteSize:60,align:4,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"0",structure:c},{...e,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"1",structure:c},{...e,type:5,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:2,name:"2",structure:I},{...e,type:5,isRequired:!0,bitOffset:480,bitSize:0,byteSize:0,slot:3,name:"3",structure:A},{...e,type:5,isRequired:!0,bitOffset:256,bitSize:224,byteSize:28,slot:4,name:"retval",structure:et}],methods:[]}});t(O,{...s,type:10,name:"ErrorSet0043",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:O}],methods:[]},static:{members:[{...e,type:7,slot:0,name:"OutOfMemory",structure:O}],methods:[],template:re}});t(rt,{...s,type:9,name:"ErrorSet0043!dilate-cross.KernelOutput(u8,dilate-cross.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:E},{...e,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:O}],methods:[]}});t(ot,{...s,type:5,name:"Arg0047",byteSize:68,align:4,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"0",structure:c},{...e,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"1",structure:c},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:2,name:"2",structure:c},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:3,name:"3",structure:c},{...e,type:5,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:4,name:"4",structure:I},{...e,type:5,isRequired:!0,bitOffset:544,bitSize:0,byteSize:0,slot:5,name:"5",structure:A},{...e,type:5,isRequired:!0,bitOffset:320,bitSize:224,byteSize:28,slot:6,name:"retval",structure:rt}],methods:[]}});t(at,{...s,type:2,name:"dilate-cross",align:1,static:{members:[{...e,type:7,slot:0,name:"kernel",structure:o},{...e,type:7,slot:1,name:"Input",structure:o},{...e,type:7,slot:2,name:"Output",structure:o},{...e,type:7,slot:3,name:"Parameters",structure:o}],methods:[bs,ps],template:ae}});const fs=[o,b,U,M,D,T,p,$,F,_,P,L,B,Z,V,G,q,c,S,k,C,tt,H,I,J,v,N,E,A,g,et,st,O,rt,ot,at],Ss=at,zs={runtimeSafety:!1,littleEndian:!0},W=ve();W.getSpecialExports();W.recreateStructures(fs,zs);const ds=(async()=>{const n=new URL("dilate-cross-3cbf63a8.wasm",import.meta.url).href;return fetch(n)})();W.loadModule(ds);W.linkVariables(!0);const{constructor:hs}=Ss,{createPartialOutput:gs,Input:Os,kernel:Y}=hs;function Ps(n,m,u,i,a={},z={}){const d=[];for(const[l]of Y.inputImages)d.push(l);const w=[];for(const[l]of Y.outputImages)w.push(l);if(Array.isArray(a)){const l=a;a={};for(const[f,h]of d.entries())a[h]=l[f]}const y=new Os(void 0),x=[];let R;for(const l of d){let f=a[l];if(f||(d.length===1&&["data","width","height"].every(h=>!!a[h])?f=a:x.push(l)),y[l]=f,R){if(f.colorSpace!==R)throw new Error(`Input images must all use the same color space: ${R}`)}else R=f.colorSpace}if(x.length>0)throw new Error(`Missing input image${x.length>1?"s":""}: ${x.join(", ")}`);const X=gs(n,m,u,i,y,z),pt=l=>{const f={};for(const h of w){const{data:{typedArray:K},width:ft,height:ze}=l[h];let j;if(typeof ImageData=="function"){const de=new Uint8ClampedArray(K.buffer,K.byteOffset,K.byteLength);j=new ImageData(de,ft,i,{colorSpace:R})}else j={data:K,width:ft,height:ze};if(w.length===1)return j;f[h]=j}return f};return X[Symbol.toStringTag]==="Promise"?X.then(pt):pt(X)}function ws(){const n={};for(let[m,u]of Y){if(m==="parameters"){const i={};for(const[a,z]of u){const d=i[a]={};for(let[w,y]of z)typeof y=="object"?y=y.string??y.valueOf():typeof y=="function"&&(y=Rs(y.name)),d[w]=y}u=i}else typeof u=="object"&&(u=u.string??u.valueOf());n[m]=u}return n}function Rs(n){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[n]}onmessage=async n=>{if(!Array.isArray(n.data))return;const[m,u,...i]=n.data;try{const[a,z]=await ks(m,i);postMessage([m,u,a],{transfer:z})}catch(a){postMessage(["error",u,a])}};async function ks(n,m){switch(n){case"getKernelInfo":return[ws(...m)];case"createPartialImageData":const i=await Ps(...m),a=[];if("data"in i&&"width"in i&&"height"in i)a.push(i.data.buffer);else for(const z of Object.entries(i))a.push(i.data.buffer);return[i,a];default:throw new Error(`Unknown function: ${n}`)}}postMessage("ready");
