import{u as $s,a as Ls,b as Bs,c as Gs,d as Hs,e as Js,f as Ns,g as Qs,h as Ws,i as Xs,j as Ys,k as Zs,l as tr,m as er,n as sr,p as rr,o as ar,q as nr,r as or,s as ir}from"./index-58d89d46.js";$s();Ys();Zs();Ls();Bs();tr();er();sr();rr();Gs();Hs();Js();Ns();ar();ir();Qs();nr();Ws();Xs();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},r={},d={},F={},h={},M={},T={},p={},f={},s={},l={},a={},$={},L={},B={},G={},H={},J={},N={},Q={},W={},X={},Y={},w={},Z={},tt={},ut={},I={},et={},R={},y={},O={},x={},mt={},st={},k={},rt={},q={},at={},v={},E={},P={},yt={},bt={},D={},lt={},pt={},gt={},me={},Ot={},A={},ft={},ye={},jt={},be={},St={},le={},pe={},zt={},dt={},ge={},ht={},Oe={},wt={},fe={},je={},At={},Ut={},Se={},Vt={},ze={},xt={},de={},he={},Pt={},It={},we={},Rt={},Ae={},kt={},Ue={},Ve={},qt={},vt={},xe={},Et={},Pe={},Kt={},Ie={},Re={},Ct={},ke={},_t={},qe={},ve={},Dt={},Ee={},Ft={},Ke={},Ce={},Mt={},_e={},Tt={},De={},Fe={},$t={},Me={},Lt={},Bt={},Gt={},Te={},Ht={},Jt={},Nt={},Qt={},Wt={},Xt={},$e={},nt={},Le={},Be={},Yt={},Ge={},Zt={},He={},Je={},te={},Ne={},Qe={},We={},Xe={},Ye={},Ze={},ts={},es={},ss={},rs={},as={},ns={},os={},ee={},is={},cs={},se={},us={},re={},ms={},ys={},bs={},ls={},ps={},gs={},Os={},ae={},fs={},js={},Ss={},zs={},ds={},hs={},ws={},As={},Us={},Vs={},ne={},xs={},Ps={},Is={},Rs={},ks={},qs={},vs={},Es={},Ks={},Cs={},cr=new Uint8Array,ur=new Uint8Array,mr=new Uint8Array([0,0,0,0,0,0,240,63]),yr=new Uint8Array,br=new Uint8Array([0,0,0,0,0,0,89,64]),lr=new Uint8Array,pr=new Uint8Array([0,0,0,0,0,0,42,64]),gr=new Uint8Array,Or=new Uint8Array,fr=new Uint8Array([0,0,0,0,0,0,240,63]),jr=new Uint8Array,Sr=new Uint8Array([0,0,0,0,0,0,89,64]),zr=new Uint8Array,dr=new Uint8Array([0,0,0,0,0,0,49,64]),hr=new Uint8Array,wr=new Uint8Array,Ar=new Uint8Array([0,0,0,0,0,0,240,63]),Ur=new Uint8Array,Vr=new Uint8Array([0,0,0,0,0,0,89,64]),xr=new Uint8Array,Pr=new Uint8Array([0,0,0,0,0,0,51,64]),Ir=new Uint8Array,Rr=new Uint8Array,kr=new Uint8Array([0,0,0,0,0,0,240,63]),qr=new Uint8Array,vr=new Uint8Array([0,0,0,0,0,0,89,64]),Er=new Uint8Array,Kr=new Uint8Array([0,0,0,0,0,0,53,64]),Cr=new Uint8Array,_r=new Uint8Array,Dr=new Uint8Array([0,0,0,0,0,0,240,63]),Fr=new Uint8Array,Mr=new Uint8Array([0,0,0,0,0,0,89,64]),Tr=new Uint8Array,$r=new Uint8Array([0,0,0,0,0,0,55,64]),Lr=new Uint8Array,Br=new Uint8Array([0,0,0,0,0,0,89,192]),Gr=new Uint8Array,Hr=new Uint8Array([0,0,0,0,0,0,89,192]),Jr=new Uint8Array,Nr=new Uint8Array([0,0,0,0,0,64,143,64]),Qr=new Uint8Array,Wr=new Uint8Array([0,0,0,0,0,64,143,64]),Xr=new Uint8Array,Yr=new Uint8Array([0,0,0,0,0,48,107,64]),Zr=new Uint8Array,ta=new Uint8Array([205,204,204,204,204,108,136,64]),ea=new Uint8Array,sa=new Uint8Array,ra=new Uint8Array,aa=new Uint8Array,na=new Uint8Array,oa=new Uint8Array,ia=new Uint8Array,ca=new Uint8Array,ua=new Uint8Array,ma=new Uint8Array,ya=new Uint8Array,ba=new Uint8Array([4]),la=new Uint8Array,pa=new Uint8Array,ga=new Uint8Array([250,4,0,1]),Oa=new Uint8Array([114,97,110,100,111,109,32,115,105,122,101,32,112,105,120,101,108,97,116,105,111,110,0]),fa=new Uint8Array([28,5,0,1]),ja=new Uint8Array([112,105,120,101,108,101,114,111,0]),Sa=new Uint8Array,za=new Uint8Array([1]),da=new Uint8Array([250,4,0,1]),ha=new Uint8Array,wa=new Uint8Array,Aa=new Uint8Array,Ua=new Uint8Array([0]),Va=new Uint8Array([1]),_s=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),xa=new Uint8Array,Pa=new Uint8Array,Ia=new Uint8Array,Ra=new Uint8Array,ka=new Uint8Array([4]),oe=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ds=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),qa=new Uint8Array,va=new Uint8Array,Ea=new Uint8Array,Ka=new Uint8Array,Ca=new Uint8Array([4]),ie=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),_a=new Uint8Array([0,128,89,67,102,102,67,68,0,0,80,65,0,0,136,65,0,0,152,65,0,0,168,65,0,0,184,65,0,0,0,0]),Da=new Uint8Array([27,0]),Fa=new Uint8Array,Ma=new Uint8Array,Ta=new Uint8Array,$a=new Uint8Array;Object.assign(me,{slots:{0:Ot,1:ft,2:jt,3:St}});Object.assign(Ot,{structure:r,memory:{array:cr},slots:{0:A}});Object.assign(A,{structure:l});Object.assign(ft,{structure:s,memory:{array:ur},slots:{0:ye}});Object.assign(ye,{structure:a,memory:{array:mr}});Object.assign(jt,{structure:s,memory:{array:yr},slots:{0:be}});Object.assign(be,{structure:a,memory:{array:br}});Object.assign(St,{structure:s,memory:{array:lr},slots:{0:le}});Object.assign(le,{structure:a,memory:{array:pr}});Object.assign(pe,{slots:{0:zt,1:dt,2:ht,3:wt}});Object.assign(zt,{structure:r,memory:{array:gr},slots:{0:A}});Object.assign(dt,{structure:s,memory:{array:Or},slots:{0:ge}});Object.assign(ge,{structure:a,memory:{array:fr}});Object.assign(ht,{structure:s,memory:{array:jr},slots:{0:Oe}});Object.assign(Oe,{structure:a,memory:{array:Sr}});Object.assign(wt,{structure:s,memory:{array:zr},slots:{0:fe}});Object.assign(fe,{structure:a,memory:{array:dr}});Object.assign(je,{slots:{0:At,1:Ut,2:Vt,3:xt}});Object.assign(At,{structure:r,memory:{array:hr},slots:{0:A}});Object.assign(Ut,{structure:s,memory:{array:wr},slots:{0:Se}});Object.assign(Se,{structure:a,memory:{array:Ar}});Object.assign(Vt,{structure:s,memory:{array:Ur},slots:{0:ze}});Object.assign(ze,{structure:a,memory:{array:Vr}});Object.assign(xt,{structure:s,memory:{array:xr},slots:{0:de}});Object.assign(de,{structure:a,memory:{array:Pr}});Object.assign(he,{slots:{0:Pt,1:It,2:Rt,3:kt}});Object.assign(Pt,{structure:r,memory:{array:Ir},slots:{0:A}});Object.assign(It,{structure:s,memory:{array:Rr},slots:{0:we}});Object.assign(we,{structure:a,memory:{array:kr}});Object.assign(Rt,{structure:s,memory:{array:qr},slots:{0:Ae}});Object.assign(Ae,{structure:a,memory:{array:vr}});Object.assign(kt,{structure:s,memory:{array:Er},slots:{0:Ue}});Object.assign(Ue,{structure:a,memory:{array:Kr}});Object.assign(Ve,{slots:{0:qt,1:vt,2:Et,3:Kt}});Object.assign(qt,{structure:r,memory:{array:Cr},slots:{0:A}});Object.assign(vt,{structure:s,memory:{array:_r},slots:{0:xe}});Object.assign(xe,{structure:a,memory:{array:Dr}});Object.assign(Et,{structure:s,memory:{array:Fr},slots:{0:Pe}});Object.assign(Pe,{structure:a,memory:{array:Mr}});Object.assign(Kt,{structure:s,memory:{array:Tr},slots:{0:Ie}});Object.assign(Ie,{structure:a,memory:{array:$r}});Object.assign(Re,{slots:{0:Ct,1:_t}});Object.assign(Ct,{structure:s,memory:{array:Lr},slots:{0:ke}});Object.assign(ke,{structure:a,memory:{array:Br}});Object.assign(_t,{structure:s,memory:{array:Gr},slots:{0:qe}});Object.assign(qe,{structure:a,memory:{array:Hr}});Object.assign(ve,{slots:{0:Dt,1:Ft}});Object.assign(Dt,{structure:s,memory:{array:Jr},slots:{0:Ee}});Object.assign(Ee,{structure:a,memory:{array:Nr}});Object.assign(Ft,{structure:s,memory:{array:Qr},slots:{0:Ke}});Object.assign(Ke,{structure:a,memory:{array:Wr}});Object.assign(Ce,{slots:{0:Mt,1:Tt}});Object.assign(Mt,{structure:s,memory:{array:Xr},slots:{0:_e}});Object.assign(_e,{structure:a,memory:{array:Yr}});Object.assign(Tt,{structure:s,memory:{array:Zr},slots:{0:De}});Object.assign(De,{structure:a,memory:{array:ta}});Object.assign(Fe,{slots:{0:$t,1:Lt,2:Bt,3:Gt}});Object.assign($t,{structure:r,memory:{array:ea},slots:{0:Me}});Object.assign(Me,{structure:W});Object.assign(Lt,{structure:J,memory:{array:sa},slots:{0:Ct,1:_t}});Object.assign(Bt,{structure:N,memory:{array:ra},slots:{0:Dt,1:Ft}});Object.assign(Gt,{structure:Q,memory:{array:aa},slots:{0:Mt,1:Tt}});Object.assign(Te,{slots:{0:Ht,1:Jt,2:Nt,3:Qt,4:Wt,5:Xt}});Object.assign(Ht,{structure:$,memory:{array:na},slots:{0:Ot,1:ft,2:jt,3:St}});Object.assign(Jt,{structure:L,memory:{array:oa},slots:{0:zt,1:dt,2:ht,3:wt}});Object.assign(Nt,{structure:B,memory:{array:ia},slots:{0:At,1:Ut,2:Vt,3:xt}});Object.assign(Qt,{structure:G,memory:{array:ca},slots:{0:Pt,1:It,2:Rt,3:kt}});Object.assign(Wt,{structure:H,memory:{array:ua},slots:{0:qt,1:vt,2:Et,3:Kt}});Object.assign(Xt,{structure:X,memory:{array:ma},slots:{0:$t,1:Lt,2:Bt,3:Gt}});Object.assign($e,{slots:{0:nt}});Object.assign(nt,{structure:p,memory:{array:ya},slots:{0:Le}});Object.assign(Le,{structure:f,memory:{array:ba}});Object.assign(Be,{slots:{0:Yt}});Object.assign(Yt,{structure:w,memory:{array:la},slots:{0:nt}});Object.assign(Ge,{slots:{0:Zt}});Object.assign(Zt,{structure:w,memory:{array:pa},slots:{0:nt}});Object.assign(He,{slots:{0:Je,1:Ne,2:We,3:Ye,4:Ze,5:ts,6:es}});Object.assign(Je,{structure:h,memory:{array:ga},slots:{0:te}});Object.assign(te,{structure:F,memory:{array:Oa},reloc:16778490,const:!0});Object.assign(Ne,{structure:T,memory:{array:fa},slots:{0:Qe}});Object.assign(Qe,{structure:M,memory:{array:ja},reloc:16778524,const:!0});Object.assign(We,{structure:p,memory:{array:Sa},slots:{0:Xe}});Object.assign(Xe,{structure:f,memory:{array:za}});Object.assign(Ye,{structure:h,memory:{array:da},slots:{0:te}});Object.assign(Ze,{structure:Y,memory:{array:ha},slots:{0:Ht,1:Jt,2:Nt,3:Qt,4:Wt,5:Xt}});Object.assign(ts,{structure:Z,memory:{array:wa},slots:{0:Yt}});Object.assign(es,{structure:tt,memory:{array:Aa},slots:{0:Zt}});Object.assign(ss,{slots:{0:rs,1:as}});Object.assign(rs,{structure:O,memory:{array:Ua}});Object.assign(as,{structure:O,memory:{array:Va}});Object.assign(ns,{memory:{array:_s},slots:{0:os}});Object.assign(os,{structure:R,memory:{array:_s,offset:0,length:8},slots:{0:ee}});Object.assign(ee,{structure:et,memory:{array:xa},reloc:0,const:!0});Object.assign(is,{slots:{0:cs,1:us,2:ms}});Object.assign(cs,{structure:r,memory:{array:Pa},slots:{0:se}});Object.assign(se,{structure:I});Object.assign(us,{structure:r,memory:{array:Ia},slots:{0:re}});Object.assign(re,{structure:mt});Object.assign(ms,{structure:p,memory:{array:Ra},slots:{0:ys}});Object.assign(ys,{structure:f,memory:{array:ka}});Object.assign(bs,{memory:{array:oe},slots:{0:ls}});Object.assign(ls,{structure:st,memory:{array:oe},slots:{0:ps}});Object.assign(ps,{structure:R,memory:{array:oe,offset:0,length:8},slots:{0:ee}});Object.assign(gs,{memory:{array:Ds},slots:{0:Os}});Object.assign(Os,{structure:q,memory:{array:Ds,offset:0,length:8},slots:{0:ae}});Object.assign(ae,{structure:rt,memory:{array:qa},reloc:0});Object.assign(fs,{slots:{0:js,1:Ss,2:zs}});Object.assign(js,{structure:r,memory:{array:va},slots:{0:se}});Object.assign(Ss,{structure:r,memory:{array:Ea},slots:{0:re}});Object.assign(zs,{structure:p,memory:{array:Ka},slots:{0:ds}});Object.assign(ds,{structure:f,memory:{array:Ca}});Object.assign(hs,{memory:{array:ie},slots:{0:ws}});Object.assign(ws,{structure:at,memory:{array:ie},slots:{0:As}});Object.assign(As,{structure:q,memory:{array:ie,offset:0,length:8},slots:{0:ae}});Object.assign(Us,{memory:{array:_a}});Object.assign(Vs,{slots:{0:ne}});Object.assign(ne,{structure:P,memory:{array:Da}});Object.assign(xs,{slots:{0:ne}});Object.assign(Ps,{slots:{0:Is,1:ks,2:vs,3:Ks}});Object.assign(Is,{structure:r,memory:{array:Fa},slots:{0:Rs}});Object.assign(Rs,{structure:ut});Object.assign(ks,{structure:r,memory:{array:Ma},slots:{0:qs}});Object.assign(qs,{structure:k});Object.assign(vs,{structure:r,memory:{array:Ta},slots:{0:Es}});Object.assign(Es,{structure:v});Object.assign(Ks,{structure:r,memory:{array:$a},slots:{0:Cs}});Object.assign(Cs,{structure:E});const La={argStruct:bt,thunkId:2,name:"createOutput"},Ba={argStruct:pt,thunkId:3,name:"createPartialOutput"};Object.assign(r,{...e,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(d,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:d}],methods:[]}});Object.assign(F,{...e,type:1,name:"[22:0]u8",length:22,byteSize:23,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:d}],methods:[]}});Object.assign(h,{...e,type:13,name:"*const [22:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(M,{...e,type:1,name:"[8:0]u8",length:8,byteSize:9,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:d}],methods:[]}});Object.assign(T,{...e,type:13,name:"*const [8:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(p,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:p}],methods:[]}});Object.assign(f,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(s,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(l,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:l}],methods:[]}});Object.assign(a,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:a}],methods:[]}});Object.assign($,{...e,type:2,name:"Struct2780422015",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:s},{...t,type:9,slot:2,name:"maxValue",structure:s},{...t,type:9,slot:3,name:"defaultValue",structure:s}],methods:[],template:me}});Object.assign(L,{...e,type:2,name:"Struct2348132645",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:s},{...t,type:9,slot:2,name:"maxValue",structure:s},{...t,type:9,slot:3,name:"defaultValue",structure:s}],methods:[],template:pe}});Object.assign(B,{...e,type:2,name:"Struct2549803269",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:s},{...t,type:9,slot:2,name:"maxValue",structure:s},{...t,type:9,slot:3,name:"defaultValue",structure:s}],methods:[],template:je}});Object.assign(G,{...e,type:2,name:"Struct3210716366",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:s},{...t,type:9,slot:2,name:"maxValue",structure:s},{...t,type:9,slot:3,name:"defaultValue",structure:s}],methods:[],template:he}});Object.assign(H,{...e,type:2,name:"Struct1826530908",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:s},{...t,type:9,slot:2,name:"maxValue",structure:s},{...t,type:9,slot:3,name:"defaultValue",structure:s}],methods:[],template:Ve}});Object.assign(J,{...e,type:2,name:"Struct909833941",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:s},{...t,type:9,slot:1,name:"1",structure:s}],methods:[],template:Re}});Object.assign(N,{...e,type:2,name:"Struct830517164",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:s},{...t,type:9,slot:1,name:"1",structure:s}],methods:[],template:ve}});Object.assign(Q,{...e,type:2,name:"Struct195828006",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:s},{...t,type:9,slot:1,name:"1",structure:s}],methods:[],template:Ce}});Object.assign(W,{...e,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:l}],methods:[]}});Object.assign(X,{...e,type:2,name:"Struct1517967210",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:J},{...t,type:9,slot:2,name:"maxValue",structure:N},{...t,type:9,slot:3,name:"defaultValue",structure:Q}],methods:[],template:Fe}});Object.assign(Y,{...e,type:2,name:"Struct513595021",align:1,instance:{members:[{...t,type:9,slot:0,name:"n0",structure:$},{...t,type:9,slot:1,name:"n1",structure:L},{...t,type:9,slot:2,name:"n2",structure:B},{...t,type:9,slot:3,name:"n3",structure:G},{...t,type:9,slot:4,name:"n4",structure:H},{...t,type:9,slot:5,name:"randomPoint",structure:X}],methods:[],template:Te}});Object.assign(w,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:p}],methods:[],template:$e}});Object.assign(Z,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:9,slot:0,name:"src",structure:w}],methods:[],template:Be}});Object.assign(tt,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:9,slot:0,name:"dst",structure:w}],methods:[],template:Ge}});Object.assign(ut,{...e,type:2,name:"random-pixelation.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:h},{...t,type:9,slot:1,name:"vendor",structure:T},{...t,type:9,slot:2,name:"version",structure:p},{...t,type:9,slot:3,name:"description",structure:h},{...t,type:9,slot:4,name:"parameters",structure:Y},{...t,type:9,slot:5,name:"inputImages",structure:Z},{...t,type:9,slot:6,name:"outputImages",structure:tt}],methods:[],template:He}});Object.assign(I,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:d}],methods:[]}});Object.assign(et,{...e,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(R,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:et}],methods:[]}});Object.assign(y,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[]}});Object.assign(O,{...e,type:11,name:"random-pixelation.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:O},{...t,type:9,slot:1,name:"display-p3",structure:O}],methods:[],template:ss}});Object.assign(x,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:x}],methods:[]}});Object.assign(mt,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:l}],methods:[]}});Object.assign(st,{...e,type:2,name:"random-pixelation.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:R},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:x}],methods:[],template:ns},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:r},{...t,type:9,slot:1,name:"FPixel",structure:r},{...t,type:9,slot:2,name:"channels",structure:p}],methods:[],template:is}});Object.assign(k,{...e,type:2,name:"random-pixelation.KernelInput(u8,random-pixelation.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:st}],methods:[],template:bs}});Object.assign(rt,{...e,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(q,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:rt}],methods:[]}});Object.assign(at,{...e,type:2,name:"random-pixelation.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:q},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:x}],methods:[],template:gs},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:r},{...t,type:9,slot:1,name:"FPixel",structure:r},{...t,type:9,slot:2,name:"channels",structure:p}],methods:[],template:fs}});Object.assign(v,{...e,type:2,name:"random-pixelation.KernelOutput(u8,random-pixelation.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:at}],methods:[],template:hs}});Object.assign(E,{...e,type:2,name:"random-pixelation.KernelParameters(random-pixelation.kernel)",byteSize:32,align:8,instance:{members:[{...t,type:4,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"n0",structure:l},{...t,type:4,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"n1",structure:l},{...t,type:4,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"n2",structure:l},{...t,type:4,bitOffset:160,bitSize:32,byteSize:4,slot:4,name:"n3",structure:l},{...t,type:4,bitOffset:192,bitSize:32,byteSize:4,slot:5,name:"n4",structure:l},{...t,type:7,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"randomPoint",structure:W}],methods:[],template:Us}});Object.assign(P,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(random-pixelation.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:P}],methods:[],template:Vs}});Object.assign(yt,{...e,type:9,name:"ErrorSet2178770297!random-pixelation.KernelOutput(u8,random-pixelation.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:P}],methods:[]}});Object.assign(bt,{...e,type:5,name:"createOutput",byteSize:96,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:3,name:"0",structure:y},{...t,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:4,name:"1",structure:y},{...t,type:7,isRequired:!0,bitOffset:320,bitSize:192,byteSize:24,slot:0,name:"2",structure:k},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:256,byteSize:32,slot:1,name:"3",structure:E},{...t,type:7,isRequired:!0,bitOffset:512,bitSize:224,byteSize:28,slot:2,name:"retval",structure:yt}],methods:[]}});Object.assign(D,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(random-pixelation.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:D}],methods:[],template:xs}});Object.assign(lt,{...e,type:9,name:"ErrorSet2010036116!random-pixelation.KernelOutput(u8,random-pixelation.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:D}],methods:[]}});Object.assign(pt,{...e,type:5,name:"createPartialOutput",byteSize:104,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:3,name:"0",structure:y},{...t,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:4,name:"1",structure:y},{...t,type:3,isRequired:!0,bitOffset:320,bitSize:32,byteSize:4,slot:5,name:"2",structure:y},{...t,type:3,isRequired:!0,bitOffset:352,bitSize:32,byteSize:4,slot:6,name:"3",structure:y},{...t,type:7,isRequired:!0,bitOffset:384,bitSize:192,byteSize:24,slot:0,name:"4",structure:k},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:256,byteSize:32,slot:1,name:"5",structure:E},{...t,type:7,isRequired:!0,bitOffset:576,bitSize:224,byteSize:28,slot:2,name:"retval",structure:lt}],methods:[]}});Object.assign(gt,{...e,type:2,name:"random-pixelation",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:r},{...t,type:9,slot:1,name:"Input",structure:r},{...t,type:9,slot:2,name:"Output",structure:r},{...t,type:9,slot:3,name:"Parameters",structure:r}],methods:[La,Ba],template:Ps}});const Ga=[r,d,F,h,M,T,p,f,s,l,a,$,L,B,G,H,J,N,Q,W,X,Y,w,Z,tt,ut,I,et,R,y,O,x,mt,st,k,rt,q,at,v,E,P,yt,bt,D,lt,pt,gt],Ha=gt,Ja={runtimeSafety:!1,littleEndian:!0},ot=or();ot.getControlObject();ot.recreateStructures(Ga,Ja);const Na=(async()=>{const c=new URL("random-pixelation-0b7d7d9e.wasm",import.meta.url).href;return fetch(c)})();ot.loadModule(Na);ot.linkVariables(!0);const{constructor:Qa}=Ha,{createPartialOutput:Wa,Input:Xa,kernel:ct}=Qa;function Ya(c,u,o,n,i={},j={}){const S=[];for(const[b]of ct.inputImages)S.push(b);const U=[];for(const[b]of ct.outputImages)U.push(b);if(Array.isArray(i)){const b=i;i={};for(const[g,z]of S.entries())i[z]=b[g]}const m=new Xa(void 0),K=[];let V;for(const b of S){let g=i[b];if(g||(S.length===1&&["data","width","height"].every(z=>!!i[z])?g=i:K.push(b)),m[b]=g,V){if(g.colorSpace!==V)throw new Error(`Input images must all use the same color space: ${V}`)}else V=g.colorSpace}if(K.length>0)throw new Error(`Missing input image${K.length>1?"s":""}: ${K.join(", ")}`);const it=Wa(c,u,o,n,m,j),ce=b=>{const g={};for(const z of U){const{data:{typedArray:C},width:ue,height:Ms}=b[z];let _;if(typeof ImageData=="function"){const Ts=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);_=new ImageData(Ts,ue,n,{colorSpace:V})}else _={data:C,width:ue,height:Ms};if(U.length===1)return _;g[z]=_}return g};return it[Symbol.toStringTag]==="Promise"?it.then(ce):ce(it)}function Za(){const c={};for(let[u,o]of ct){if(u==="parameters"){const n={};for(const[i,j]of o){const S=n[i]={};for(let[U,m]of j)typeof m=="object"?"string"in m?m=m.string:m=Fs(m):typeof m=="function"&&(m=tn(m.name)),S[U]=m}o=n}else typeof o=="object"&&("string"in o?o=o.string:o=o.valueOf());c[u]=o}return c}function Fs(c){const u=[];for(let[o,n]of c)typeof n=="object"&&(n=Fs(n)),u[o]=n;return u}function tn(c){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[c]}onmessage=c=>{const[u,o,...n]=c.data;en(u,n).then(([i,j])=>{postMessage([u,o,i],{transfer:j})}).catch(i=>{postMessage(["error",o,i])})};async function en(c,u){switch(c){case"getKernelInfo":return[Za(...u)];case"createPartialImageData":const n=await Ya(...u),i=[];if("data"in n&&"width"in n&&"height"in n)i.push(n.data.buffer);else for(const j of Object.entries(n))i.push(n.data.buffer);return[n,i];default:throw new Error(`Unknown function: ${c}`)}}
