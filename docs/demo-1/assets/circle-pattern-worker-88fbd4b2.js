import{u as Me,a as _e,b as Te,c as $e,d as Be,e as Le,f as Ge,g as He,h as Je,i as Ne,j as Qe,k as We,l as Xe,m as Ye,o as Ze,n as et,p as tt,q as rt}from"./index-d64bc850.js";Me();_e();Te();$e();Be();Le();Ge();He();Je();Ne();Qe();We();Xe();Ye();Ze();et();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},g={},O={},R={},h={},Z={},ee={},E={},b={},p={},l={},s={},r={},te={},K={},re={},D={},z={},se={},F={},ae={},M={},ne={},_={},ie={},T={},ue={},$={},oe={},B={},me={},L={},le={},G={},ye={},H={},ce={},J={},be={},N={},j={},w={},pe={},Q={},fe={},W={},Oe={},A={},de={},Se={},y={},he={},q={},ge={},X={},P={},ze={},we={},Y={},V={},C={},Re={},qe={},je={},Pe={},Ve={},Ce={},ke={};Object.assign(g,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:5});Object.assign(O,{...t,type:1,name:"[13:0]u8",length:13,byteSize:14,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:4});Object.assign(R,{...t,type:11,name:"*const [13:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:O}],methods:[],template:null},slot:3});Object.assign(h,{...t,type:11,name:"*const *const [13:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:R}],methods:[],template:null},slot:2});Object.assign(Z,{...t,type:1,name:"[14:0]u8",length:14,byteSize:15,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:8});Object.assign(ee,{...t,type:11,name:"*const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:7});Object.assign(E,{...t,type:11,name:"*const *const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:6});Object.assign(b,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:10});Object.assign(p,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:b}],methods:[],template:null},slot:9});Object.assign(l,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:l}],methods:[],template:null},slot:29});Object.assign(s,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:s}],methods:[],template:null},slot:53});Object.assign(r,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:s}],methods:[],template:null},slot:52});const st=new Uint8Array,at=new Uint8Array([16,252,15,0]),nt=new Uint8Array([0,0,0,0,0,0,0,0]),it=new Uint8Array([40,252,15,0]),ut=new Uint8Array([31,133,235,81,184,30,213,63]),ot=new Uint8Array([240,250,15,0]),mt=new Uint8Array([113,61,10,215,163,112,205,63]);Object.assign(te,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:l},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:st},slots:{0:{structure:r,memory:{array:at},slots:{0:{structure:s,memory:{array:nt}}}},1:{structure:r,memory:{array:it},slots:{0:{structure:s,memory:{array:ut}}}},2:{structure:r,memory:{array:ot},slots:{0:{structure:s,memory:{array:mt}}}}}}},slot:36});Object.assign(K,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:35});const lt=new Uint8Array,yt=new Uint8Array([16,252,15,0]),ct=new Uint8Array([0,0,0,0,0,0,240,63]),bt=new Uint8Array([40,252,15,0]),pt=new Uint8Array([0,0,0,0,0,0,52,64]),ft=new Uint8Array([240,250,15,0]),dt=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(re,{...t,type:2,name:"Struct0014",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:l},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:lt},slots:{0:{structure:r,memory:{array:yt},slots:{0:{structure:s,memory:{array:ct}}}},1:{structure:r,memory:{array:bt},slots:{0:{structure:s,memory:{array:pt}}}},2:{structure:r,memory:{array:ft},slots:{0:{structure:s,memory:{array:dt}}}}}}},slot:38});Object.assign(D,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:37});Object.assign(z,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:l}],methods:[],template:null},slot:30});const St=new Uint8Array,ht=new Uint8Array([224,251,15,0]),gt=new Uint8Array([154,153,153,153,153,153,185,63]),zt=new Uint8Array([24,252,15,0]),wt=new Uint8Array([154,153,153,153,153,153,185,63]);Object.assign(se,{...t,type:2,name:"Struct0026",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:St},slots:{0:{structure:r,memory:{array:ht},slots:{0:{structure:s,memory:{array:gt}}}},1:{structure:r,memory:{array:zt},slots:{0:{structure:s,memory:{array:wt}}}}}}},slot:55});Object.assign(F,{...t,type:11,name:"Struct0020",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:54});const At=new Uint8Array,Ut=new Uint8Array([224,251,15,0]),Ot=new Uint8Array([0,0,0,0,0,0,32,64]),Rt=new Uint8Array([24,252,15,0]),qt=new Uint8Array([0,0,0,0,0,0,32,64]);Object.assign(ae,{...t,type:2,name:"Struct0027",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:At},slots:{0:{structure:r,memory:{array:Ut},slots:{0:{structure:s,memory:{array:Ot}}}},1:{structure:r,memory:{array:Rt},slots:{0:{structure:s,memory:{array:qt}}}}}}},slot:57});Object.assign(M,{...t,type:11,name:"Struct0021",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:56});const jt=new Uint8Array,Pt=new Uint8Array([224,251,15,0]),Vt=new Uint8Array([0,0,0,0,0,0,8,64]),Ct=new Uint8Array([24,252,15,0]),kt=new Uint8Array([145,43,80,230,122,182,251,63]);Object.assign(ne,{...t,type:2,name:"Struct0028",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:jt},slots:{0:{structure:r,memory:{array:Pt},slots:{0:{structure:s,memory:{array:Vt}}}},1:{structure:r,memory:{array:Ct},slots:{0:{structure:s,memory:{array:kt}}}}}}},slot:59});Object.assign(_,{...t,type:11,name:"Struct0022",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:58});const It=new Uint8Array,xt=new Uint8Array([170,170,170,170]),vt=new Uint8Array,Et=new Uint8Array([170,170,170,170]),Kt=new Uint8Array,Dt=new Uint8Array([170,170,170,170]),Ft=new Uint8Array;Object.assign(ie,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:z},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:F},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:M},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:_}],methods:[],template:{memory:{array:It},slots:{0:{structure:F,memory:{array:xt},slots:{0:{structure:se,memory:{array:vt}}}},1:{structure:M,memory:{array:Et},slots:{0:{structure:ae,memory:{array:Kt}}}},2:{structure:_,memory:{array:Dt},slots:{0:{structure:ne,memory:{array:Ft}}}}}}},slot:40});Object.assign(T,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:39});const Mt=new Uint8Array,_t=new Uint8Array([224,251,15,0]),Tt=new Uint8Array([0,0,0,0,0,0,52,192]),$t=new Uint8Array([24,252,15,0]),Bt=new Uint8Array([0,0,0,0,0,0,52,192]);Object.assign(ue,{...t,type:2,name:"Struct0029",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Mt},slots:{0:{structure:r,memory:{array:_t},slots:{0:{structure:s,memory:{array:Tt}}}},1:{structure:r,memory:{array:$t},slots:{0:{structure:s,memory:{array:Bt}}}}}}},slot:61});Object.assign($,{...t,type:11,name:"Struct0023",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:60});const Lt=new Uint8Array,Gt=new Uint8Array([224,251,15,0]),Ht=new Uint8Array([0,0,0,0,0,0,121,64]),Jt=new Uint8Array([24,252,15,0]),Nt=new Uint8Array([0,0,0,0,0,0,121,64]);Object.assign(oe,{...t,type:2,name:"Struct0030",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Lt},slots:{0:{structure:r,memory:{array:Gt},slots:{0:{structure:s,memory:{array:Ht}}}},1:{structure:r,memory:{array:Jt},slots:{0:{structure:s,memory:{array:Nt}}}}}}},slot:63});Object.assign(B,{...t,type:11,name:"Struct0024",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:62});const Qt=new Uint8Array,Wt=new Uint8Array([224,251,15,0]),Xt=new Uint8Array([0,0,0,0,0,0,94,64]),Yt=new Uint8Array([24,252,15,0]),Zt=new Uint8Array([0,0,0,0,0,64,96,64]);Object.assign(me,{...t,type:2,name:"Struct0031",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Qt},slots:{0:{structure:r,memory:{array:Wt},slots:{0:{structure:s,memory:{array:Xt}}}},1:{structure:r,memory:{array:Yt},slots:{0:{structure:s,memory:{array:Zt}}}}}}},slot:65});Object.assign(L,{...t,type:11,name:"Struct0025",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:64});const er=new Uint8Array,tr=new Uint8Array([170,170,170,170]),rr=new Uint8Array,sr=new Uint8Array([170,170,170,170]),ar=new Uint8Array,nr=new Uint8Array([170,170,170,170]),ir=new Uint8Array;Object.assign(le,{...t,type:2,name:"Struct0016",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:z},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:$},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:B},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:L}],methods:[],template:{memory:{array:er},slots:{0:{structure:$,memory:{array:tr},slots:{0:{structure:ue,memory:{array:rr}}}},1:{structure:B,memory:{array:sr},slots:{0:{structure:oe,memory:{array:ar}}}},2:{structure:L,memory:{array:nr},slots:{0:{structure:me,memory:{array:ir}}}}}}},slot:42});Object.assign(G,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:41});const ur=new Uint8Array,or=new Uint8Array([16,252,15,0]),mr=new Uint8Array([252,169,241,210,77,98,80,63]),lr=new Uint8Array([40,252,15,0]),yr=new Uint8Array([154,153,153,153,153,153,185,63]),cr=new Uint8Array([240,250,15,0]),br=new Uint8Array([123,20,174,71,225,122,116,63]);Object.assign(ye,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:l},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:ur},slots:{0:{structure:r,memory:{array:or},slots:{0:{structure:s,memory:{array:mr}}}},1:{structure:r,memory:{array:lr},slots:{0:{structure:s,memory:{array:yr}}}},2:{structure:r,memory:{array:cr},slots:{0:{structure:s,memory:{array:br}}}}}}},slot:44});Object.assign(H,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:43});const pr=new Uint8Array,fr=new Uint8Array([16,252,15,0]),dr=new Uint8Array([252,169,241,210,77,98,80,63]),Sr=new Uint8Array([40,252,15,0]),hr=new Uint8Array([0,0,0,0,0,0,240,63]),gr=new Uint8Array([240,250,15,0]),zr=new Uint8Array([154,153,153,153,153,153,169,63]);Object.assign(ce,{...t,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:l},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:pr},slots:{0:{structure:r,memory:{array:fr},slots:{0:{structure:s,memory:{array:dr}}}},1:{structure:r,memory:{array:Sr},slots:{0:{structure:s,memory:{array:hr}}}},2:{structure:r,memory:{array:gr},slots:{0:{structure:s,memory:{array:zr}}}}}}},slot:46});Object.assign(J,{...t,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:45});const wr=new Uint8Array,Ar=new Uint8Array([170,170,170,170]),Ur=new Uint8Array,Or=new Uint8Array([170,170,170,170]),Rr=new Uint8Array,qr=new Uint8Array([170,170,170,170]),jr=new Uint8Array,Pr=new Uint8Array([170,170,170,170]),Vr=new Uint8Array,Cr=new Uint8Array([170,170,170,170]),kr=new Uint8Array,Ir=new Uint8Array([170,170,170,170]),xr=new Uint8Array;Object.assign(be,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"fill",structure:K},{...e,type:8,isRequired:!1,slot:1,name:"scale",structure:D},{...e,type:8,isRequired:!1,slot:2,name:"distort",structure:T},{...e,type:8,isRequired:!1,slot:3,name:"center",structure:G},{...e,type:8,isRequired:!1,slot:4,name:"minSolid",structure:H},{...e,type:8,isRequired:!1,slot:5,name:"maxSolid",structure:J}],methods:[],template:{memory:{array:wr},slots:{0:{structure:K,memory:{array:Ar},slots:{0:{structure:te,memory:{array:Ur}}}},1:{structure:D,memory:{array:Or},slots:{0:{structure:re,memory:{array:Rr}}}},2:{structure:T,memory:{array:qr},slots:{0:{structure:ie,memory:{array:jr}}}},3:{structure:G,memory:{array:Pr},slots:{0:{structure:le,memory:{array:Vr}}}},4:{structure:H,memory:{array:Cr},slots:{0:{structure:ye,memory:{array:kr}}}},5:{structure:J,memory:{array:Ir},slots:{0:{structure:ce,memory:{array:xr}}}}}}},slot:12});Object.assign(N,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:11});const vr=new Uint8Array,Er=new Uint8Array([0,252,15,0]),Kr=new Uint8Array([4,0,0,0]);Object.assign(j,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:vr},slots:{0:{structure:p,memory:{array:Er},slots:{0:{structure:b,memory:{array:Kr}}}}}}},slot:48});Object.assign(w,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:j}],methods:[],template:null},slot:47});const Dr=new Uint8Array,Fr=new Uint8Array([170,170,170,170]),Mr=new Uint8Array;Object.assign(pe,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:w}],methods:[],template:{memory:{array:Dr},slots:{0:{structure:w,memory:{array:Fr},slots:{0:{structure:j,memory:{array:Mr}}}}}}},slot:14});Object.assign(Q,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:13});const _r=new Uint8Array,Tr=new Uint8Array([170,170,170,170]),$r=new Uint8Array;Object.assign(fe,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:w}],methods:[],template:{memory:{array:_r},slots:{0:{structure:w,memory:{array:Tr},slots:{0:{structure:j,memory:{array:$r}}}}}}},slot:16});Object.assign(W,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:15});const Br=new Uint8Array,Lr=new Uint8Array,Gr=new Uint8Array([8,37,16,0]),Hr=new Uint8Array([191,36,16,0]),Jr=new Uint8Array([67,105,114,99,108,101,80,97,116,116,101,114,110,0]),Nr=new Uint8Array([16,37,16,0]),Qr=new Uint8Array([165,36,16,0]),Wr=new Uint8Array([80,101,116,114,105,32,76,101,115,107,105,110,101,110,0]),Xr=new Uint8Array([12,37,16,0]),Yr=new Uint8Array([1,0,0,0]),Zr=new Uint8Array([8,37,16,0]),es=new Uint8Array([191,36,16,0]),ts=new Uint8Array([67,105,114,99,108,101,80,97,116,116,101,114,110,0]),rs=new Uint8Array([170,170,170,170]),ss=new Uint8Array,as=new Uint8Array([170,170,170,170]),ns=new Uint8Array,is=new Uint8Array([170,170,170,170]),us=new Uint8Array;Object.assign(Oe,{...t,type:2,name:"circle-pattern.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Br}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:h},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:E},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:p},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:h},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:N},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:Q},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:W}],methods:[],template:{memory:{array:Lr},slots:{0:{structure:h,memory:{array:Gr},slots:{0:{structure:R,memory:{array:Hr},slots:{0:{structure:O,memory:{array:Jr}}}}}},1:{structure:E,memory:{array:Nr},slots:{0:{structure:ee,memory:{array:Qr},slots:{0:{structure:Z,memory:{array:Wr}}}}}},2:{structure:p,memory:{array:Xr},slots:{0:{structure:b,memory:{array:Yr}}}},3:{structure:h,memory:{array:Zr},slots:{0:{structure:R,memory:{array:es},slots:{0:{structure:O,memory:{array:ts}}}}}},4:{structure:N,memory:{array:rs},slots:{0:{structure:be,memory:{array:ss}}}},5:{structure:Q,memory:{array:as},slots:{0:{structure:pe,memory:{array:ns}}}},6:{structure:W,memory:{array:is},slots:{0:{structure:fe,memory:{array:us}}}}}}},slot:1});Object.assign(A,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:21});Object.assign(de,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:A}],methods:[],template:null},slot:20});Object.assign(Se,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:de}],methods:[],template:null},slot:19});Object.assign(y,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:22});const os=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(he,{...t,type:9,name:"circle-pattern.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:b},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:b}],methods:[],template:{memory:{array:os}}},slot:23});Object.assign(q,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:24});Object.assign(ge,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:l}],methods:[],template:null},slot:49});const ms=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ls=new Uint8Array,ys=new Uint8Array([92,36,16,0]),cs=new Uint8Array([4,0,0,0]);Object.assign(X,{...t,type:2,name:"circle-pattern.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Se},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:he},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:q}],methods:[],template:{memory:{array:ms}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:A},{...e,type:7,isRequired:!1,name:"FPixel",structure:ge},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:ls},slots:{0:{structure:p,memory:{array:ys},slots:{0:{structure:b,memory:{array:cs}}}}}}},slot:18});const bs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ps=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ee=new Uint8Array([0,0,0,0,0,0,0,0]),fs=new Uint8Array;Object.assign(P,{...t,type:2,name:"circle-pattern.KernelInput(u8,circle-pattern.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:X}],methods:[],template:{memory:{array:bs},slots:{0:{structure:X,memory:{array:ps},slots:{0:{structure:Se,memory:{array:Ee},address:1047152,slots:{0:{structure:de,memory:{array:fs},address:0}}}}}}}},slot:17});Object.assign(ze,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:A}],methods:[],template:null},slot:20});Object.assign(we,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:ze}],methods:[],template:null},slot:27});const ds=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ss=new Uint8Array,hs=new Uint8Array([92,36,16,0]),gs=new Uint8Array([4,0,0,0]);Object.assign(Y,{...t,type:2,name:"circle-pattern.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:we},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:he},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:q}],methods:[],template:{memory:{array:ds}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:A},{...e,type:7,isRequired:!1,name:"FPixel",structure:ge},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:Ss},slots:{0:{structure:p,memory:{array:hs},slots:{0:{structure:b,memory:{array:gs}}}}}}},slot:26});const zs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ws=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),As=new Uint8Array;Object.assign(V,{...t,type:2,name:"circle-pattern.KernelOutput(u8,circle-pattern.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:Y}],methods:[],template:{memory:{array:zs},slots:{0:{structure:Y,memory:{array:ws},slots:{0:{structure:we,memory:{array:Ee},address:1047152,slots:{0:{structure:ze,memory:{array:As},address:0}}}}}}}},slot:25});const Us=new Uint8Array([0,0,64,64,215,179,221,63,0,0,240,66,0,0,2,67,31,133,107,62,0,0,128,63,10,215,163,59,205,204,76,61]);Object.assign(C,{...t,type:2,name:"circle-pattern.KernelParameters(circle-pattern.kernel)",length:1,byteSize:32,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:0,name:"fill",structure:l},{...e,type:4,isRequired:!1,bitOffset:160,bitSize:32,byteSize:4,slot:1,name:"scale",structure:l},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,slot:2,name:"distort",structure:z},{...e,type:6,isRequired:!1,bitOffset:64,bitSize:64,byteSize:8,slot:3,name:"center",structure:z},{...e,type:4,isRequired:!1,bitOffset:192,bitSize:32,byteSize:4,slot:4,name:"minSolid",structure:l},{...e,type:4,isRequired:!1,bitOffset:224,bitSize:32,byteSize:4,slot:5,name:"maxSolid",structure:l}],methods:[],template:{memory:{array:Us}}},slot:28});Object.assign(Re,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(circle-pattern.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:50});Object.assign(qe,{...t,type:7,name:"ErrorSet0000!circle-pattern.KernelOutput(u8,circle-pattern.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:V},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Re}],methods:[],template:null},slot:33});Object.assign(je,{...t,type:3,name:"createOutput",length:1,byteSize:96,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:6,bitOffset:320,bitSize:192,byteSize:24,slot:2,name:"2",structure:P},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:3,name:"3",structure:C},{...e,type:6,bitOffset:512,bitSize:224,byteSize:28,slot:4,name:"retval",structure:qe}],methods:[],template:null},slot:31});Object.assign(Pe,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(circle-pattern.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:51});Object.assign(Ve,{...t,type:7,name:"ErrorSet0001!circle-pattern.KernelOutput(u8,circle-pattern.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:V},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Pe}],methods:[],template:null},slot:34});Object.assign(Ce,{...t,type:3,name:"createPartialOutput",length:1,byteSize:104,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:3,bitOffset:320,bitSize:32,byteSize:4,slot:2,name:"2",structure:y},{...e,type:3,bitOffset:352,bitSize:32,byteSize:4,slot:3,name:"3",structure:y},{...e,type:6,bitOffset:384,bitSize:192,byteSize:24,slot:4,name:"4",structure:P},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:5,name:"5",structure:C},{...e,type:6,bitOffset:576,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Ve}],methods:[],template:null},slot:32});const Os=new Uint8Array,Rs={argStruct:je,thunk:4,name:"createOutput"},qs={argStruct:Ce,thunk:6,name:"createPartialOutput"};Object.assign(ke,{...t,type:2,name:"circle-pattern",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Os}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:Oe},{...e,type:7,isRequired:!1,name:"Input",structure:P},{...e,type:7,isRequired:!1,name:"Output",structure:V},{...e,type:7,isRequired:!1,name:"Parameters",structure:C}],methods:[Rs,qs],template:null},slot:0});const js=[g,O,R,h,Z,ee,E,b,p,l,s,r,te,K,re,D,z,se,F,ae,M,ne,_,ie,T,ue,$,oe,B,me,L,le,G,ye,H,ce,J,be,N,j,w,pe,Q,fe,W,Oe,A,de,Se,y,he,q,ge,X,P,ze,we,Y,V,C,Re,qe,je,Pe,Ve,Ce,ke],Ps=tt(js),Vs=ke.constructor,Cs=(async()=>{const u=new URL("circle-pattern-97a302c3.wasm",import.meta.url).href;return fetch(u)})();rt(Cs,{...Ps,writeBack:!0});const{createOutput:Fs,createPartialOutput:ks,kernel:Ue,Input:Is,Output:Ms,Parameters:_s}=Vs;function xs(u,m,n,a,i={},d={}){if(Array.isArray(i)){const f=i;i={};for(const[c,S]of Object.keys(Ue.inputImages).entries())i[S]=f[c]}const k=new Is(void 0),I=Object.keys(Ue.inputImages),o=[];let U;for(const f of I){let c=i[f];if(c||(I.length===1&&["data","width","height"].every(S=>!!i[S])?c=i:o.push(f)),k[f]=c,U){if(c.colorSpace!==U)throw new Error(`Input images must all use the same color space: ${U}`)}else U=c.colorSpace}if(o.length>0)throw new Error(`Missing input image${o.length>1?"s":""}: ${o.join(", ")}`);const Ae=ks(u,m,n,a,k,d),Ie=f=>{const c=Object.keys(f),S={};for(const xe of c){const{data:{typedArray:x},width:ve,height:De}=f[xe];let v;if(typeof ImageData=="function"){const Fe=new Uint8ClampedArray(x.buffer,x.byteOffset,x.byteLength);v=new ImageData(Fe,ve,a,{colorSpace:U})}else v={data:x,width:ve,height:De};if(c.length===1)return v;S[xe]=v}return S};return Ae[Symbol.toStringTag]==="Promise"?Ae.then(Ie):Ie(Ae)}function vs(){const u={};for(let[m,n]of Object.entries(Ue)){if(m==="parameters"){const a={};for(const[i,d]of Object.entries(n)){const k=a[i]={};for(let[I,o]of Object.entries(d))typeof o=="object"?"string"in o?o=o.string:o=Ke(o):typeof o=="function"&&(o=Es(o.name)),k[I]=o}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());u[m]=n}return u}function Ke(u){const m=[];for(let[n,a]of Object.entries(u))typeof a=="object"&&(a=Ke(a)),m[n]=a;return m}function Es(u){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[u]}onmessage=u=>{const[m,n,...a]=u.data;Ks(m,a).then(([i,d])=>{postMessage([m,n,i],{transfer:d})}).catch(i=>{postMessage(["error",n,i])})};async function Ks(u,m){switch(u){case"getKernelInfo":return[vs(...m)];case"createPartialImageData":const a=await xs(...m),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const d of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${u}`)}}
