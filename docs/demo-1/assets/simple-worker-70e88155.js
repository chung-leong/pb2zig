import{u as Is,a as Vs,b as Rs,c as ks,d as qs,e as vs,f as Es,g as xs,h as Ks,i as Cs,j as _s,k as Ds,l as Fs,m as Ms,n as Ts,p as $s,o as Ls,q as Bs,r as Gs,s as Hs}from"./index-25a52593.js";Is();_s();Ds();Vs();Rs();Fs();Ms();Ts();$s();ks();qs();vs();Es();Ls();Hs();xs();Bs();Ks();Cs();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},r={},d={},G={},H={},J={},N={},l={},j={},s={},n={},g={},Q={},O={},W={},X={},Y={},Z={},tt={},L={},et={},st={},rt={},at={},w={},nt={},it={},gt={},V={},ot={},R={},y={},f={},P={},ct={},k={},ut={},q={},mt={},v={},E={},I={},Ot={},ft={},B={},jt={},St={},zt={},ee={},x={},se={},K={},re={},C={},ae={},ne={},ht={},dt={},wt={},ie={},_={},oe={},D={},ce={},F={},ue={},me={},At={},Ut={},Pt={},ye={},It={},be={},Vt={},le={},Rt={},pe={},ge={},kt={},Oe={},qt={},fe={},vt={},je={},Se={},Et={},ze={},xt={},he={},Kt={},de={},we={},Ct={},_t={},Dt={},Ae={},Ft={},Ue={},Mt={},Tt={},$t={},Pe={},Lt={},Ie={},yt={},Ve={},Re={},Bt={},ke={},Gt={},qe={},ve={},Ee={},xe={},Ke={},Ce={},_e={},De={},Fe={},Me={},Te={},$e={},Le={},Be={},Ge={},Ht={},He={},Je={},Jt={},Ne={},Nt={},Qe={},We={},Xe={},Ye={},Ze={},ts={},es={},Qt={},ss={},rs={},as={},ns={},is={},os={},cs={},us={},ms={},ys={},Wt={},bs={},ls={},ps={},gs={},Os={},fs={},js={},Ss={},zs={},hs={},Js=new Uint8Array,Ns=new Uint8Array([0,0,0,0,0,0,240,191]),Qs=new Uint8Array,Ws=new Uint8Array([0,0,0,0,0,0,240,191]),Xs=new Uint8Array,Ys=new Uint8Array([0,0,0,0,0,0,240,191]),Zs=new Uint8Array,tr=new Uint8Array,er=new Uint8Array,sr=new Uint8Array,rr=new Uint8Array([0,0,0,0,0,0,240,63]),ar=new Uint8Array,nr=new Uint8Array([0,0,0,0,0,0,240,63]),ir=new Uint8Array,or=new Uint8Array([0,0,0,0,0,0,240,63]),cr=new Uint8Array,ur=new Uint8Array,mr=new Uint8Array,yr=new Uint8Array,br=new Uint8Array([0,0,0,0,0,0,224,63]),lr=new Uint8Array,pr=new Uint8Array([0,0,0,0,0,0,0,0]),gr=new Uint8Array,Or=new Uint8Array([0,0,0,0,0,0,0,0]),fr=new Uint8Array,jr=new Uint8Array([51,51,51,51,51,51,211,63]),Sr=new Uint8Array,zr=new Uint8Array([0,0,0,0,0,0,240,63]),hr=new Uint8Array,dr=new Uint8Array([102,102,102,102,102,102,230,63]),wr=new Uint8Array,Ar=new Uint8Array([154,153,153,153,153,153,185,63]),Ur=new Uint8Array,Pr=new Uint8Array([51,51,51,51,51,51,211,63]),Ir=new Uint8Array,Vr=new Uint8Array([154,153,153,153,153,153,233,63]),Rr=new Uint8Array,kr=new Uint8Array,qr=new Uint8Array,vr=new Uint8Array,Er=new Uint8Array,xr=new Uint8Array,Kr=new Uint8Array,Cr=new Uint8Array,_r=new Uint8Array,Dr=new Uint8Array([3]),Fr=new Uint8Array,Mr=new Uint8Array,Tr=new Uint8Array([20,5,0,1]),$r=new Uint8Array([89,111,117,114,32,78,97,109,101,115,112,97,99,101,0]),Lr=new Uint8Array([46,5,0,1]),Br=new Uint8Array([89,111,117,114,32,86,101,110,100,111,114,0]),Gr=new Uint8Array,Hr=new Uint8Array([1]),Jr=new Uint8Array,Nr=new Uint8Array,Qr=new Uint8Array,Wr=new Uint8Array([0]),Xr=new Uint8Array([1]),ds=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Yr=new Uint8Array,Zr=new Uint8Array,ta=new Uint8Array,ea=new Uint8Array,sa=new Uint8Array([3]),Xt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ws=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ra=new Uint8Array,aa=new Uint8Array,na=new Uint8Array,ia=new Uint8Array,oa=new Uint8Array([3]),Yt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ca=new Uint8Array([0,0,0,63,0,0,0,0,0,0,0,0,0,0,0,0,154,153,153,62,0,0,128,63,51,51,51,63,0,0,0,0,205,204,204,61,154,153,153,62,205,204,76,63,0,0,0,0]),ua=new Uint8Array([27,0]),ma=new Uint8Array,ya=new Uint8Array,ba=new Uint8Array,la=new Uint8Array;Object.assign(ee,{slots:{0:x,1:K,2:C}});Object.assign(x,{structure:s,memory:{array:Js},slots:{0:se}});Object.assign(se,{structure:n,memory:{array:Ns}});Object.assign(K,{structure:s,memory:{array:Qs},slots:{0:re}});Object.assign(re,{structure:n,memory:{array:Ws}});Object.assign(C,{structure:s,memory:{array:Xs},slots:{0:ae}});Object.assign(ae,{structure:n,memory:{array:Ys}});Object.assign(ne,{slots:{0:ht,1:dt,2:wt}});Object.assign(ht,{structure:g,memory:{array:Zs},slots:{0:x,1:K,2:C}});Object.assign(dt,{structure:g,memory:{array:tr},slots:{0:x,1:K,2:C}});Object.assign(wt,{structure:g,memory:{array:er},slots:{0:x,1:K,2:C}});Object.assign(ie,{slots:{0:_,1:D,2:F}});Object.assign(_,{structure:s,memory:{array:sr},slots:{0:oe}});Object.assign(oe,{structure:n,memory:{array:rr}});Object.assign(D,{structure:s,memory:{array:ar},slots:{0:ce}});Object.assign(ce,{structure:n,memory:{array:nr}});Object.assign(F,{structure:s,memory:{array:ir},slots:{0:ue}});Object.assign(ue,{structure:n,memory:{array:or}});Object.assign(me,{slots:{0:At,1:Ut,2:Pt}});Object.assign(At,{structure:O,memory:{array:cr},slots:{0:_,1:D,2:F}});Object.assign(Ut,{structure:O,memory:{array:ur},slots:{0:_,1:D,2:F}});Object.assign(Pt,{structure:O,memory:{array:mr},slots:{0:_,1:D,2:F}});Object.assign(ye,{slots:{0:It,1:Vt,2:Rt}});Object.assign(It,{structure:s,memory:{array:yr},slots:{0:be}});Object.assign(be,{structure:n,memory:{array:br}});Object.assign(Vt,{structure:s,memory:{array:lr},slots:{0:le}});Object.assign(le,{structure:n,memory:{array:pr}});Object.assign(Rt,{structure:s,memory:{array:gr},slots:{0:pe}});Object.assign(pe,{structure:n,memory:{array:Or}});Object.assign(ge,{slots:{0:kt,1:qt,2:vt}});Object.assign(kt,{structure:s,memory:{array:fr},slots:{0:Oe}});Object.assign(Oe,{structure:n,memory:{array:jr}});Object.assign(qt,{structure:s,memory:{array:Sr},slots:{0:fe}});Object.assign(fe,{structure:n,memory:{array:zr}});Object.assign(vt,{structure:s,memory:{array:hr},slots:{0:je}});Object.assign(je,{structure:n,memory:{array:dr}});Object.assign(Se,{slots:{0:Et,1:xt,2:Kt}});Object.assign(Et,{structure:s,memory:{array:wr},slots:{0:ze}});Object.assign(ze,{structure:n,memory:{array:Ar}});Object.assign(xt,{structure:s,memory:{array:Ur},slots:{0:he}});Object.assign(he,{structure:n,memory:{array:Pr}});Object.assign(Kt,{structure:s,memory:{array:Ir},slots:{0:de}});Object.assign(de,{structure:n,memory:{array:Vr}});Object.assign(we,{slots:{0:Ct,1:_t,2:Dt}});Object.assign(Ct,{structure:X,memory:{array:Rr},slots:{0:It,1:Vt,2:Rt}});Object.assign(_t,{structure:Y,memory:{array:kr},slots:{0:kt,1:qt,2:vt}});Object.assign(Dt,{structure:Z,memory:{array:qr},slots:{0:Et,1:xt,2:Kt}});Object.assign(Ae,{slots:{0:Ft,1:Mt,2:Tt,3:$t}});Object.assign(Ft,{structure:r,memory:{array:vr},slots:{0:Ue}});Object.assign(Ue,{structure:st});Object.assign(Mt,{structure:Q,memory:{array:Er},slots:{0:ht,1:dt,2:wt}});Object.assign(Tt,{structure:W,memory:{array:xr},slots:{0:At,1:Ut,2:Pt}});Object.assign($t,{structure:tt,memory:{array:Kr},slots:{0:Ct,1:_t,2:Dt}});Object.assign(Pe,{slots:{0:Lt}});Object.assign(Lt,{structure:rt,memory:{array:Cr},slots:{0:Ft,1:Mt,2:Tt,3:$t}});Object.assign(Ie,{slots:{0:yt}});Object.assign(yt,{structure:l,memory:{array:_r},slots:{0:Ve}});Object.assign(Ve,{structure:j,memory:{array:Dr}});Object.assign(Re,{slots:{0:Bt}});Object.assign(Bt,{structure:w,memory:{array:Fr},slots:{0:yt}});Object.assign(ke,{slots:{0:Gt}});Object.assign(Gt,{structure:w,memory:{array:Mr},slots:{0:yt}});Object.assign(qe,{slots:{0:ve,1:xe,2:Ce,3:De,4:Fe,5:Me}});Object.assign(ve,{structure:H,memory:{array:Tr},slots:{0:Ee}});Object.assign(Ee,{structure:G,memory:{array:$r},reloc:16778516,const:!0});Object.assign(xe,{structure:N,memory:{array:Lr},slots:{0:Ke}});Object.assign(Ke,{structure:J,memory:{array:Br},reloc:16778542,const:!0});Object.assign(Ce,{structure:l,memory:{array:Gr},slots:{0:_e}});Object.assign(_e,{structure:j,memory:{array:Hr}});Object.assign(De,{structure:at,memory:{array:Jr},slots:{0:Lt}});Object.assign(Fe,{structure:nt,memory:{array:Nr},slots:{0:Bt}});Object.assign(Me,{structure:it,memory:{array:Qr},slots:{0:Gt}});Object.assign(Te,{slots:{0:$e,1:Le}});Object.assign($e,{structure:f,memory:{array:Wr}});Object.assign(Le,{structure:f,memory:{array:Xr}});Object.assign(Be,{memory:{array:ds},slots:{0:Ge}});Object.assign(Ge,{structure:R,memory:{array:ds,offset:0,length:8},slots:{0:Ht}});Object.assign(Ht,{structure:ot,memory:{array:Yr},reloc:0,const:!0});Object.assign(He,{slots:{0:Je,1:Ne,2:Qe}});Object.assign(Je,{structure:r,memory:{array:Zr},slots:{0:Jt}});Object.assign(Jt,{structure:V});Object.assign(Ne,{structure:r,memory:{array:ta},slots:{0:Nt}});Object.assign(Nt,{structure:et});Object.assign(Qe,{structure:l,memory:{array:ea},slots:{0:We}});Object.assign(We,{structure:j,memory:{array:sa}});Object.assign(Xe,{memory:{array:Xt},slots:{0:Ye}});Object.assign(Ye,{structure:ct,memory:{array:Xt},slots:{0:Ze}});Object.assign(Ze,{structure:R,memory:{array:Xt,offset:0,length:8},slots:{0:Ht}});Object.assign(ts,{memory:{array:ws},slots:{0:es}});Object.assign(es,{structure:q,memory:{array:ws,offset:0,length:8},slots:{0:Qt}});Object.assign(Qt,{structure:ut,memory:{array:ra},reloc:0});Object.assign(ss,{slots:{0:rs,1:as,2:ns}});Object.assign(rs,{structure:r,memory:{array:aa},slots:{0:Jt}});Object.assign(as,{structure:r,memory:{array:na},slots:{0:Nt}});Object.assign(ns,{structure:l,memory:{array:ia},slots:{0:is}});Object.assign(is,{structure:j,memory:{array:oa}});Object.assign(os,{memory:{array:Yt},slots:{0:cs}});Object.assign(cs,{structure:mt,memory:{array:Yt},slots:{0:us}});Object.assign(us,{structure:q,memory:{array:Yt,offset:0,length:8},slots:{0:Qt}});Object.assign(ms,{memory:{array:ca}});Object.assign(ys,{slots:{0:Wt}});Object.assign(Wt,{structure:I,memory:{array:ua}});Object.assign(bs,{slots:{0:Wt}});Object.assign(ls,{slots:{0:ps,1:Os,2:js,3:zs}});Object.assign(ps,{structure:r,memory:{array:ma},slots:{0:gs}});Object.assign(gs,{structure:gt});Object.assign(Os,{structure:r,memory:{array:ya},slots:{0:fs}});Object.assign(fs,{structure:k});Object.assign(js,{structure:r,memory:{array:ba},slots:{0:Ss}});Object.assign(Ss,{structure:v});Object.assign(zs,{structure:r,memory:{array:la},slots:{0:hs}});Object.assign(hs,{structure:E});const pa={argStruct:ft,thunkId:2,name:"createOutput"},ga={argStruct:St,thunkId:3,name:"createPartialOutput"};Object.assign(r,{...e,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(d,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:d}],methods:[]}});Object.assign(G,{...e,type:1,name:"[14:0]u8",length:14,byteSize:15,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:d}],methods:[]}});Object.assign(H,{...e,type:13,name:"*const [14:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:G}],methods:[]}});Object.assign(J,{...e,type:1,name:"[11:0]u8",length:11,byteSize:12,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:d}],methods:[]}});Object.assign(N,{...e,type:13,name:"*const [11:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:J}],methods:[]}});Object.assign(l,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:l}],methods:[]}});Object.assign(j,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:j}],methods:[]}});Object.assign(s,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(n,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:n}],methods:[]}});Object.assign(g,{...e,type:2,name:"Struct3651955411",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:s},{...t,type:9,slot:1,name:"1",structure:s},{...t,type:9,slot:2,name:"2",structure:s}],methods:[],template:ee}});Object.assign(Q,{...e,type:2,name:"Struct1390697979",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:g},{...t,type:9,slot:1,name:"1",structure:g},{...t,type:9,slot:2,name:"2",structure:g}],methods:[],template:ne}});Object.assign(O,{...e,type:2,name:"Struct2060771296",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:s},{...t,type:9,slot:1,name:"1",structure:s},{...t,type:9,slot:2,name:"2",structure:s}],methods:[],template:ie}});Object.assign(W,{...e,type:2,name:"Struct644281370",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:O},{...t,type:9,slot:1,name:"1",structure:O},{...t,type:9,slot:2,name:"2",structure:O}],methods:[],template:me}});Object.assign(X,{...e,type:2,name:"Struct3800968537",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:s},{...t,type:9,slot:1,name:"1",structure:s},{...t,type:9,slot:2,name:"2",structure:s}],methods:[],template:ye}});Object.assign(Y,{...e,type:2,name:"Struct2724820031",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:s},{...t,type:9,slot:1,name:"1",structure:s},{...t,type:9,slot:2,name:"2",structure:s}],methods:[],template:ge}});Object.assign(Z,{...e,type:2,name:"Struct1350969599",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:s},{...t,type:9,slot:1,name:"1",structure:s},{...t,type:9,slot:2,name:"2",structure:s}],methods:[],template:Se}});Object.assign(tt,{...e,type:2,name:"Struct2019922924",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:X},{...t,type:9,slot:1,name:"1",structure:Y},{...t,type:9,slot:2,name:"2",structure:Z}],methods:[],template:we}});Object.assign(L,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:L}],methods:[]}});Object.assign(et,{...e,type:15,name:"@Vector(3, f32)",length:3,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:L}],methods:[]}});Object.assign(st,{...e,type:1,name:"[3]@Vector(3, f32)",length:3,byteSize:48,align:16,instance:{members:[{...t,type:7,bitSize:96,byteSize:16,structure:et}],methods:[]}});Object.assign(rt,{...e,type:2,name:"Struct3448744814",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:Q},{...t,type:9,slot:2,name:"maxValue",structure:W},{...t,type:9,slot:3,name:"defaultValue",structure:tt}],methods:[],template:Ae}});Object.assign(at,{...e,type:2,name:"Struct3437036445",align:1,instance:{members:[{...t,type:9,slot:0,name:"transform",structure:rt}],methods:[],template:Pe}});Object.assign(w,{...e,type:2,name:"Struct3196272719",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:l}],methods:[],template:Ie}});Object.assign(nt,{...e,type:2,name:"Struct3897456493",align:1,instance:{members:[{...t,type:9,slot:0,name:"src",structure:w}],methods:[],template:Re}});Object.assign(it,{...e,type:2,name:"Struct4047475671",align:1,instance:{members:[{...t,type:9,slot:0,name:"dst",structure:w}],methods:[],template:ke}});Object.assign(gt,{...e,type:2,name:"simple.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:H},{...t,type:9,slot:1,name:"vendor",structure:N},{...t,type:9,slot:2,name:"version",structure:l},{...t,type:9,slot:3,name:"parameters",structure:at},{...t,type:9,slot:4,name:"inputImages",structure:nt},{...t,type:9,slot:5,name:"outputImages",structure:it}],methods:[],template:qe}});Object.assign(V,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:d}],methods:[]}});Object.assign(ot,{...e,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(R,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:ot}],methods:[]}});Object.assign(y,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[]}});Object.assign(f,{...e,type:11,name:"simple.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:f},{...t,type:9,slot:1,name:"display-p3",structure:f}],methods:[],template:Te}});Object.assign(P,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(ct,{...e,type:2,name:"simple.Image(u8,3,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:R},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:f},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:Be},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:r},{...t,type:9,slot:1,name:"FPixel",structure:r},{...t,type:9,slot:2,name:"channels",structure:l}],methods:[],template:He}});Object.assign(k,{...e,type:2,name:"simple.KernelInput(u8,simple.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:ct}],methods:[],template:Xe}});Object.assign(ut,{...e,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(q,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:ut}],methods:[]}});Object.assign(mt,{...e,type:2,name:"simple.Image(u8,3,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:q},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:f},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:ts},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:r},{...t,type:9,slot:1,name:"FPixel",structure:r},{...t,type:9,slot:2,name:"channels",structure:l}],methods:[],template:ss}});Object.assign(v,{...e,type:2,name:"simple.KernelOutput(u8,simple.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:mt}],methods:[],template:os}});Object.assign(E,{...e,type:2,name:"simple.KernelParameters(simple.kernel)",byteSize:48,align:16,instance:{members:[{...t,type:7,bitOffset:0,bitSize:352,byteSize:48,slot:0,name:"transform",structure:st}],methods:[],template:ms}});Object.assign(I,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(simple.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:I}],methods:[],template:ys}});Object.assign(Ot,{...e,type:9,name:"ErrorSet2014799019!simple.KernelOutput(u8,simple.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:I}],methods:[]}});Object.assign(ft,{...e,type:5,name:"createOutput",byteSize:112,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:384,bitSize:32,byteSize:4,slot:3,name:"0",structure:y},{...t,type:3,isRequired:!0,bitOffset:416,bitSize:32,byteSize:4,slot:4,name:"1",structure:y},{...t,type:7,isRequired:!0,bitOffset:448,bitSize:192,byteSize:24,slot:0,name:"2",structure:k},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:384,byteSize:48,slot:1,name:"3",structure:E},{...t,type:7,isRequired:!0,bitOffset:640,bitSize:224,byteSize:28,slot:2,name:"retval",structure:Ot}],methods:[]}});Object.assign(B,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(simple.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:B}],methods:[],template:bs}});Object.assign(jt,{...e,type:9,name:"ErrorSet3697547636!simple.KernelOutput(u8,simple.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:B}],methods:[]}});Object.assign(St,{...e,type:5,name:"createPartialOutput",byteSize:128,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:384,bitSize:32,byteSize:4,slot:3,name:"0",structure:y},{...t,type:3,isRequired:!0,bitOffset:416,bitSize:32,byteSize:4,slot:4,name:"1",structure:y},{...t,type:3,isRequired:!0,bitOffset:448,bitSize:32,byteSize:4,slot:5,name:"2",structure:y},{...t,type:3,isRequired:!0,bitOffset:480,bitSize:32,byteSize:4,slot:6,name:"3",structure:y},{...t,type:7,isRequired:!0,bitOffset:512,bitSize:192,byteSize:24,slot:0,name:"4",structure:k},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:384,byteSize:48,slot:1,name:"5",structure:E},{...t,type:7,isRequired:!0,bitOffset:704,bitSize:224,byteSize:28,slot:2,name:"retval",structure:jt}],methods:[]}});Object.assign(zt,{...e,type:2,name:"simple",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:r},{...t,type:9,slot:1,name:"Input",structure:r},{...t,type:9,slot:2,name:"Output",structure:r},{...t,type:9,slot:3,name:"Parameters",structure:r}],methods:[pa,ga],template:ls}});const Oa=[r,d,G,H,J,N,l,j,s,n,g,Q,O,W,X,Y,Z,tt,L,et,st,rt,at,w,nt,it,gt,V,ot,R,y,f,P,ct,k,ut,q,mt,v,E,I,Ot,ft,B,jt,St,zt],fa=zt,ja={runtimeSafety:!1,littleEndian:!0},bt=Gs();bt.getControlObject();bt.recreateStructures(Oa,ja);const Sa=(async()=>{const c=new URL("simple-5684192d.wasm",import.meta.url).href;return fetch(c)})();bt.loadModule(Sa);bt.linkVariables(!0);const{constructor:za}=fa,{createPartialOutput:ha,Input:da,kernel:pt}=za;function wa(c,u,i,a,o={},S={}){const z=[];for(const[b]of pt.inputImages)z.push(b);const A=[];for(const[b]of pt.outputImages)A.push(b);if(Array.isArray(o)){const b=o;o={};for(const[p,h]of z.entries())o[h]=b[p]}const m=new da(void 0),M=[];let U;for(const b of z){let p=o[b];if(p||(z.length===1&&["data","width","height"].every(h=>!!o[h])?p=o:M.push(b)),m[b]=p,U){if(p.colorSpace!==U)throw new Error(`Input images must all use the same color space: ${U}`)}else U=p.colorSpace}if(M.length>0)throw new Error(`Missing input image${M.length>1?"s":""}: ${M.join(", ")}`);const lt=ha(c,u,i,a,m,S),Zt=b=>{const p={};for(const h of A){const{data:{typedArray:T},width:te,height:Us}=b[h];let $;if(typeof ImageData=="function"){const Ps=new Uint8ClampedArray(T.buffer,T.byteOffset,T.byteLength);$=new ImageData(Ps,te,a,{colorSpace:U})}else $={data:T,width:te,height:Us};if(A.length===1)return $;p[h]=$}return p};return lt[Symbol.toStringTag]==="Promise"?lt.then(Zt):Zt(lt)}function Aa(){const c={};for(let[u,i]of pt){if(u==="parameters"){const a={};for(const[o,S]of i){const z=a[o]={};for(let[A,m]of S)typeof m=="object"?"string"in m?m=m.string:m=As(m):typeof m=="function"&&(m=Ua(m.name)),z[A]=m}i=a}else typeof i=="object"&&("string"in i?i=i.string:i=i.valueOf());c[u]=i}return c}function As(c){const u=[];for(let[i,a]of c)typeof a=="object"&&(a=As(a)),u[i]=a;return u}function Ua(c){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[c]}onmessage=c=>{const[u,i,...a]=c.data;Pa(u,a).then(([o,S])=>{postMessage([u,i,o],{transfer:S})}).catch(o=>{postMessage(["error",i,o])})};async function Pa(c,u){switch(c){case"getKernelInfo":return[Aa(...u)];case"createPartialImageData":const a=await wa(...u),o=[];if("data"in a&&"width"in a&&"height"in a)o.push(a.data.buffer);else for(const S of Object.entries(a))o.push(a.data.buffer);return[a,o];default:throw new Error(`Unknown function: ${c}`)}}
