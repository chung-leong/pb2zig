import{u as Tt,a as Mt,b as $t,d as Bt,c as Lt,e as Gt,f as Ht,g as Jt,h as Nt,i as Qt,j as Wt,k as Xt,l as Yt,m as Zt,n as te,o as ee,p as me,q as se,r as re}from"./index-9f315e7a.js";Tt();Mt();$t();Bt();Lt();Gt();Ht();Jt();Nt();Qt();Wt();Xt();Yt();Zt();te();ee();me();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},t={type:0,isRequired:!0},O={},tt={},et={},F={},mt={},st={},D={},p={},h={},T={},j={},rt={},r={},m={},S={},b={},ot={},M={},z={},d={},it={},$={},at={},B={},ct={},L={},nt={},G={},lt={},H={},ut={},J={},pt={},N={},Q={},P={},w={},yt={},W={},ft={},X={},wt={},R={},bt={},dt={},u={},ht={},A={},U={},Y={},V={},_t={},gt={},Z={},I={},k={},Rt={},qt={},At={},Ut={},jt={},Pt={},Vt={};Object.assign(O,{...e,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...t,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:O}],methods:[],template:null},slot:5});Object.assign(tt,{...e,type:1,name:"[14:0]u8",length:14,byteSize:15,align:0,instance:{members:[{...t,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:O}],methods:[],template:null},slot:4});Object.assign(et,{...e,type:11,name:"*const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:tt}],methods:[],template:null},slot:3});Object.assign(F,{...e,type:11,name:"**const [14:0]u8",length:1,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:et}],methods:[],template:null},slot:2});Object.assign(mt,{...e,type:1,name:"[11:0]u8",length:11,byteSize:12,align:0,instance:{members:[{...t,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:O}],methods:[],template:null},slot:8});Object.assign(st,{...e,type:11,name:"*const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:mt}],methods:[],template:null},slot:7});Object.assign(D,{...e,type:11,name:"**const [11:0]u8",length:1,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:st}],methods:[],template:null},slot:6});Object.assign(p,{...e,name:"i32",length:1,instance:{members:[{...t,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[],template:null},slot:10});Object.assign(h,{...e,type:11,name:"*i32",length:1,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:p}],methods:[],template:null},slot:9});Object.assign(T,{...e,name:"f32",length:1,instance:{members:[{...t,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:T}],methods:[],template:null},slot:42});Object.assign(j,{...e,type:13,name:"@Vector(3, f32)",length:3,byteSize:16,align:4,instance:{members:[{...t,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:T}],methods:[],template:null},slot:31});Object.assign(rt,{...e,type:1,name:"[3]@Vector(3, f32)",length:3,byteSize:48,align:4,instance:{members:[{...t,type:6,isRequired:!1,bitSize:96,byteSize:16,structure:j}],methods:[],template:null},slot:30});Object.assign(r,{...e,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...t,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[],template:null},slot:61});Object.assign(m,{...e,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:r}],methods:[],template:null},slot:60});const oe=new Uint8Array([]),ie=new Uint8Array([104,30,16,0]),zt=new Uint8Array([0,0,0,0,0,0,240,191]),ae=new Uint8Array([104,30,16,0]),ce=new Uint8Array([104,30,16,0]);Object.assign(S,{...e,type:2,name:"struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"0",structure:m},{...t,type:8,isRequired:!1,slot:1,name:"1",structure:m},{...t,type:8,isRequired:!1,slot:2,name:"2",structure:m}],methods:[],template:{memory:{array:oe},slots:{0:{structure:m,memory:{array:ie},slots:{0:{structure:r,memory:{array:zt},address:1056360}}},1:{structure:m,memory:{array:ae},slots:{0:{structure:r,memory:{array:zt},address:1056360}}},2:{structure:m,memory:{array:ce},slots:{0:{structure:r,memory:{array:zt},address:1056360}}}}}},slot:51});Object.assign(b,{...e,type:11,name:"*const struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:S}],methods:[],template:null},slot:50});const ne=new Uint8Array([]),le=new Uint8Array([170,170,170,170]),o=new Uint8Array([]),ue=new Uint8Array([170,170,170,170]),pe=new Uint8Array([170,170,170,170]);Object.assign(ot,{...e,type:2,name:"struct{comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1} = .{-1, -1, -1}, comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1} = .{-1, -1, -1}, comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1} = .{-1, -1, -1}}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"0",structure:b},{...t,type:8,isRequired:!1,slot:1,name:"1",structure:b},{...t,type:8,isRequired:!1,slot:2,name:"2",structure:b}],methods:[],template:{memory:{array:ne},slots:{0:{structure:b,memory:{array:le},slots:{0:{structure:S,memory:{array:o},address:-1431655766}}},1:{structure:b,memory:{array:ue},slots:{0:{structure:S,memory:{array:o},address:-1431655766}}},2:{structure:b,memory:{array:pe},slots:{0:{structure:S,memory:{array:o},address:-1431655766}}}}}},slot:44});Object.assign(M,{...e,type:11,name:"*const struct{comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1} = .{-1, -1, -1}, comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1} = .{-1, -1, -1}, comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1} = .{-1, -1, -1}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ot}],methods:[],template:null},slot:43});const ye=new Uint8Array([]),fe=new Uint8Array([80,30,16,0]),K=new Uint8Array([0,0,0,0,0,0,240,63]),be=new Uint8Array([80,30,16,0]),de=new Uint8Array([80,30,16,0]);Object.assign(z,{...e,type:2,name:"struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"0",structure:m},{...t,type:8,isRequired:!1,slot:1,name:"1",structure:m},{...t,type:8,isRequired:!1,slot:2,name:"2",structure:m}],methods:[],template:{memory:{array:ye},slots:{0:{structure:m,memory:{array:fe},slots:{0:{structure:r,memory:{array:K},address:1056336}}},1:{structure:m,memory:{array:be},slots:{0:{structure:r,memory:{array:K},address:1056336}}},2:{structure:m,memory:{array:de},slots:{0:{structure:r,memory:{array:K},address:1056336}}}}}},slot:53});Object.assign(d,{...e,type:11,name:"*const struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:z}],methods:[],template:null},slot:52});const he=new Uint8Array([]),_e=new Uint8Array([170,170,170,170]),ge=new Uint8Array([170,170,170,170]),Se=new Uint8Array([170,170,170,170]);Object.assign(it,{...e,type:2,name:"struct{comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}, comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}, comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"0",structure:d},{...t,type:8,isRequired:!1,slot:1,name:"1",structure:d},{...t,type:8,isRequired:!1,slot:2,name:"2",structure:d}],methods:[],template:{memory:{array:he},slots:{0:{structure:d,memory:{array:_e},slots:{0:{structure:z,memory:{array:o},address:-1431655766}}},1:{structure:d,memory:{array:ge},slots:{0:{structure:z,memory:{array:o},address:-1431655766}}},2:{structure:d,memory:{array:Se},slots:{0:{structure:z,memory:{array:o},address:-1431655766}}}}}},slot:46});Object.assign($,{...e,type:11,name:"*const struct{comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}, comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}, comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:it}],methods:[],template:null},slot:45});const ze=new Uint8Array([]),Oe=new Uint8Array([96,30,16,0]),we=new Uint8Array([0,0,0,0,0,0,224,63]),Re=new Uint8Array([88,30,16,0]),vt=new Uint8Array([0,0,0,0,0,0,0,0]),qe=new Uint8Array([88,30,16,0]);Object.assign(at,{...e,type:2,name:"struct{comptime comptime_float = 0.5, comptime comptime_float = 0, comptime comptime_float = 0}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"0",structure:m},{...t,type:8,isRequired:!1,slot:1,name:"1",structure:m},{...t,type:8,isRequired:!1,slot:2,name:"2",structure:m}],methods:[],template:{memory:{array:ze},slots:{0:{structure:m,memory:{array:Oe},slots:{0:{structure:r,memory:{array:we},address:1056352}}},1:{structure:m,memory:{array:Re},slots:{0:{structure:r,memory:{array:vt},address:1056344}}},2:{structure:m,memory:{array:qe},slots:{0:{structure:r,memory:{array:vt},address:1056344}}}}}},slot:55});Object.assign(B,{...e,type:11,name:"*const struct{comptime comptime_float = 0.5, comptime comptime_float = 0, comptime comptime_float = 0}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:at}],methods:[],template:null},slot:54});const Ae=new Uint8Array([]),Ue=new Uint8Array([56,30,16,0]),Et=new Uint8Array([51,51,51,51,51,51,211,63]),je=new Uint8Array([80,30,16,0]),Pe=new Uint8Array([72,30,16,0]),Ve=new Uint8Array([102,102,102,102,102,102,230,63]);Object.assign(ct,{...e,type:2,name:"struct{comptime comptime_float = 0.3, comptime comptime_float = 1, comptime comptime_float = 0.7}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"0",structure:m},{...t,type:8,isRequired:!1,slot:1,name:"1",structure:m},{...t,type:8,isRequired:!1,slot:2,name:"2",structure:m}],methods:[],template:{memory:{array:Ae},slots:{0:{structure:m,memory:{array:Ue},slots:{0:{structure:r,memory:{array:Et},address:1056312}}},1:{structure:m,memory:{array:je},slots:{0:{structure:r,memory:{array:K},address:1056336}}},2:{structure:m,memory:{array:Pe},slots:{0:{structure:r,memory:{array:Ve},address:1056328}}}}}},slot:57});Object.assign(L,{...e,type:11,name:"*const struct{comptime comptime_float = 0.3, comptime comptime_float = 1, comptime comptime_float = 0.7}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ct}],methods:[],template:null},slot:56});const Ie=new Uint8Array([]),ke=new Uint8Array([64,30,16,0]),Ce=new Uint8Array([154,153,153,153,153,153,185,63]),xe=new Uint8Array([56,30,16,0]),ve=new Uint8Array([48,30,16,0]),Ee=new Uint8Array([154,153,153,153,153,153,233,63]);Object.assign(nt,{...e,type:2,name:"struct{comptime comptime_float = 0.1, comptime comptime_float = 0.3, comptime comptime_float = 0.8}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"0",structure:m},{...t,type:8,isRequired:!1,slot:1,name:"1",structure:m},{...t,type:8,isRequired:!1,slot:2,name:"2",structure:m}],methods:[],template:{memory:{array:Ie},slots:{0:{structure:m,memory:{array:ke},slots:{0:{structure:r,memory:{array:Ce},address:1056320}}},1:{structure:m,memory:{array:xe},slots:{0:{structure:r,memory:{array:Et},address:1056312}}},2:{structure:m,memory:{array:ve},slots:{0:{structure:r,memory:{array:Ee},address:1056304}}}}}},slot:59});Object.assign(G,{...e,type:11,name:"*const struct{comptime comptime_float = 0.1, comptime comptime_float = 0.3, comptime comptime_float = 0.8}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:nt}],methods:[],template:null},slot:58});const Ke=new Uint8Array([]),Fe=new Uint8Array([170,170,170,170]),De=new Uint8Array([170,170,170,170]),Te=new Uint8Array([170,170,170,170]);Object.assign(lt,{...e,type:2,name:"struct{comptime struct{comptime comptime_float = 0.5, comptime comptime_float = 0, comptime comptime_float = 0} = .{0.5, 0, 0}, comptime struct{comptime comptime_float = 0.3, comptime comptime_float = 1, comptime comptime_float = 0.7} = .{0.3, 1, 0.7}, comptime struct{comptime comptime_float = 0.1, comptime comptime_float = 0.3, comptime comptime_float = 0.8} = .{0.1, 0.3, 0.8}}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"0",structure:B},{...t,type:8,isRequired:!1,slot:1,name:"1",structure:L},{...t,type:8,isRequired:!1,slot:2,name:"2",structure:G}],methods:[],template:{memory:{array:Ke},slots:{0:{structure:B,memory:{array:Fe},slots:{0:{structure:at,memory:{array:o},address:-1431655766}}},1:{structure:L,memory:{array:De},slots:{0:{structure:ct,memory:{array:o},address:-1431655766}}},2:{structure:G,memory:{array:Te},slots:{0:{structure:nt,memory:{array:o},address:-1431655766}}}}}},slot:48});Object.assign(H,{...e,type:11,name:"*const struct{comptime struct{comptime comptime_float = 0.5, comptime comptime_float = 0, comptime comptime_float = 0} = .{0.5, 0, 0}, comptime struct{comptime comptime_float = 0.3, comptime comptime_float = 1, comptime comptime_float = 0.7} = .{0.3, 1, 0.7}, comptime struct{comptime comptime_float = 0.1, comptime comptime_float = 0.3, comptime comptime_float = 0.8} = .{0.1, 0.3, 0.8}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:lt}],methods:[],template:null},slot:47});const Me=new Uint8Array([]),$e=new Uint8Array([170,170,170,170]),Be=new Uint8Array([170,170,170,170]),Le=new Uint8Array([170,170,170,170]);Object.assign(ut,{...e,type:2,name:"struct{comptime type: type = [3]@Vector(3, f32), comptime minValue: struct{comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1} = .{-1, -1, -1}, comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1} = .{-1, -1, -1}, comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1} = .{-1, -1, -1}} = .{.{-1, -1, -1}, .{-1, -1, -1}, .{-1, -1, -1}}, comptime maxValue: struct{comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}, comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}, comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}} = .{.{1, 1, 1}, .{1, 1, 1}, .{1, 1, 1}}, comptime defaultValue: struct{comptime struct{comptime comptime_float = 0.5, comptime comptime_float = 0, comptime comptime_float = 0} = .{0.5, 0, 0}, comptime struct{comptime comptime_float = 0.3, comptime comptime_float = 1, comptime comptime_float = 0.7} = .{0.3, 1, 0.7}, comptime struct{comptime comptime_float = 0.1, comptime comptime_float = 0.3, comptime comptime_float = 0.8} = .{0.1, 0.3, 0.8}} = .{.{0.5, 0, 0}, .{0.3, 1, 0.7}, .{0.1, 0.3, 0.8}}}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:7,isRequired:!1,name:"type",structure:rt},{...t,type:8,isRequired:!1,slot:0,name:"minValue",structure:M},{...t,type:8,isRequired:!1,slot:1,name:"maxValue",structure:$},{...t,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:H}],methods:[],template:{memory:{array:Me},slots:{0:{structure:M,memory:{array:$e},slots:{0:{structure:ot,memory:{array:o},address:-1431655766}}},1:{structure:$,memory:{array:Be},slots:{0:{structure:it,memory:{array:o},address:-1431655766}}},2:{structure:H,memory:{array:Le},slots:{0:{structure:lt,memory:{array:o},address:-1431655766}}}}}},slot:37});Object.assign(J,{...e,type:11,name:"*const struct{comptime type: type = [3]@Vector(3, f32), comptime minValue: struct{comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1} = .{-1, -1, -1}, comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1} = .{-1, -1, -1}, comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1} = .{-1, -1, -1}} = .{.{-1, -1, -1}, .{-1, -1, -1}, .{-1, -1, -1}}, comptime maxValue: struct{comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}, comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}, comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}} = .{.{1, 1, 1}, .{1, 1, 1}, .{1, 1, 1}}, comptime defaultValue: struct{comptime struct{comptime comptime_float = 0.5, comptime comptime_float = 0, comptime comptime_float = 0} = .{0.5, 0, 0}, comptime struct{comptime comptime_float = 0.3, comptime comptime_float = 1, comptime comptime_float = 0.7} = .{0.3, 1, 0.7}, comptime struct{comptime comptime_float = 0.1, comptime comptime_float = 0.3, comptime comptime_float = 0.8} = .{0.1, 0.3, 0.8}} = .{.{0.5, 0, 0}, .{0.3, 1, 0.7}, .{0.1, 0.3, 0.8}}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ut}],methods:[],template:null},slot:36});const Ge=new Uint8Array([]),He=new Uint8Array([170,170,170,170]);Object.assign(pt,{...e,type:2,name:"struct{comptime transform: struct{comptime type: type = [3]@Vector(3, f32), comptime minValue: struct{comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1} = .{-1, -1, -1}, comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1} = .{-1, -1, -1}, comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1} = .{-1, -1, -1}} = .{.{-1, -1, -1}, .{-1, -1, -1}, .{-1, -1, -1}}, comptime maxValue: struct{comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}, comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}, comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}} = .{.{1, 1, 1}, .{1, 1, 1}, .{1, 1, 1}}, comptime defaultValue: struct{comptime struct{comptime comptime_float = 0.5, comptime comptime_float = 0, comptime comptime_float = 0} = .{0.5, 0, 0}, comptime struct{comptime comptime_float = 0.3, comptime comptime_float = 1, comptime comptime_float = 0.7} = .{0.3, 1, 0.7}, comptime struct{comptime comptime_float = 0.1, comptime comptime_float = 0.3, comptime comptime_float = 0.8} = .{0.1, 0.3, 0.8}} = .{.{0.5, 0, 0}, .{0.3, 1, 0.7}, .{0.1, 0.3, 0.8}}} = .{.type = [3]@Vector(3, f32), .minValue = .{.{-1, -1, -1}, .{-1, -1, -1}, .{-1, -1, -1}}, .maxValue = .{.{1, 1, 1}, .{1, 1, 1}, .{1, 1, 1}}, .defaultValue = .{.{0.5, 0, 0}, .{0.3, 1, 0.7}, .{0.1, 0.3, 0.8}}}}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"transform",structure:J}],methods:[],template:{memory:{array:Ge},slots:{0:{structure:J,memory:{array:He},slots:{0:{structure:ut,memory:{array:o},address:-1431655766}}}}}},slot:12});Object.assign(N,{...e,type:11,name:"*struct{comptime transform: struct{comptime type: type = [3]@Vector(3, f32), comptime minValue: struct{comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1} = .{-1, -1, -1}, comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1} = .{-1, -1, -1}, comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1} = .{-1, -1, -1}} = .{.{-1, -1, -1}, .{-1, -1, -1}, .{-1, -1, -1}}, comptime maxValue: struct{comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}, comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}, comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}} = .{.{1, 1, 1}, .{1, 1, 1}, .{1, 1, 1}}, comptime defaultValue: struct{comptime struct{comptime comptime_float = 0.5, comptime comptime_float = 0, comptime comptime_float = 0} = .{0.5, 0, 0}, comptime struct{comptime comptime_float = 0.3, comptime comptime_float = 1, comptime comptime_float = 0.7} = .{0.3, 1, 0.7}, comptime struct{comptime comptime_float = 0.1, comptime comptime_float = 0.3, comptime comptime_float = 0.8} = .{0.1, 0.3, 0.8}} = .{.{0.5, 0, 0}, .{0.3, 1, 0.7}, .{0.1, 0.3, 0.8}}} = .{.type = [3]@Vector(3, f32), .minValue = .{.{-1, -1, -1}, .{-1, -1, -1}, .{-1, -1, -1}}, .maxValue = .{.{1, 1, 1}, .{1, 1, 1}, .{1, 1, 1}}, .defaultValue = .{.{0.5, 0, 0}, .{0.3, 1, 0.7}, .{0.1, 0.3, 0.8}}}}",length:1,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pt}],methods:[],template:null},slot:11});Object.assign(Q,{...e,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:p}],methods:[],template:null},slot:49});const Je=new Uint8Array([]),Ne=new Uint8Array([112,30,16,0]),Qe=new Uint8Array([3,0,0,0]);Object.assign(P,{...e,type:2,name:"struct{comptime channels: comptime_int = 3}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"channels",structure:Q}],methods:[],template:{memory:{array:Je},slots:{0:{structure:Q,memory:{array:Ne},slots:{0:{structure:p,memory:{array:Qe},address:1056368}}}}}},slot:39});Object.assign(w,{...e,type:11,name:"*const struct{comptime channels: comptime_int = 3}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:P}],methods:[],template:null},slot:38});const We=new Uint8Array([]),Xe=new Uint8Array([170,170,170,170]);Object.assign(yt,{...e,type:2,name:"struct{comptime src: struct{comptime channels: comptime_int = 3} = .{.channels = 3}}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"src",structure:w}],methods:[],template:{memory:{array:We},slots:{0:{structure:w,memory:{array:Xe},slots:{0:{structure:P,memory:{array:o},address:-1431655766}}}}}},slot:14});Object.assign(W,{...e,type:11,name:"*struct{comptime src: struct{comptime channels: comptime_int = 3} = .{.channels = 3}}",length:1,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:yt}],methods:[],template:null},slot:13});const Ye=new Uint8Array([]),Ze=new Uint8Array([170,170,170,170]);Object.assign(ft,{...e,type:2,name:"struct{comptime dst: struct{comptime channels: comptime_int = 3} = .{.channels = 3}}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"dst",structure:w}],methods:[],template:{memory:{array:Ye},slots:{0:{structure:w,memory:{array:Ze},slots:{0:{structure:P,memory:{array:o},address:-1431655766}}}}}},slot:16});Object.assign(X,{...e,type:11,name:"*struct{comptime dst: struct{comptime channels: comptime_int = 3} = .{.channels = 3}}",length:1,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ft}],methods:[],template:null},slot:15});const tm=new Uint8Array([]),em=new Uint8Array([]),mm=new Uint8Array([84,253,15,0]),sm=new Uint8Array([194,73,16,0]),rm=new Uint8Array([89,111,117,114,32,78,97,109,101,115,112,97,99,101,0]),om=new Uint8Array([116,253,15,0]),im=new Uint8Array([182,73,16,0]),am=new Uint8Array([89,111,117,114,32,86,101,110,100,111,114,0]),cm=new Uint8Array([148,253,15,0]),nm=new Uint8Array([1,0,0,0]),lm=new Uint8Array([170,170,170,170]),um=new Uint8Array([170,170,170,170]),pm=new Uint8Array([170,170,170,170]);Object.assign(wt,{...e,type:2,name:"simple.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:tm}}},static:{members:[{...t,type:6,isRequired:!1,slot:0,name:"namespace",structure:F},{...t,type:6,isRequired:!1,slot:1,name:"vendor",structure:D},{...t,type:6,isRequired:!1,slot:2,name:"version",structure:h},{...t,type:6,isRequired:!1,slot:3,name:"parameters",structure:N},{...t,type:6,isRequired:!1,slot:4,name:"inputImages",structure:W},{...t,type:6,isRequired:!1,slot:5,name:"outputImages",structure:X}],methods:[],template:{memory:{array:em},slots:{0:{structure:F,memory:{array:mm},slots:{0:{structure:et,memory:{array:sm},slots:{0:{structure:tt,memory:{array:rm},address:1067458}}}}},1:{structure:D,memory:{array:om},slots:{0:{structure:st,memory:{array:im},slots:{0:{structure:mt,memory:{array:am},address:1067446}}}}},2:{structure:h,memory:{array:cm},slots:{0:{structure:p,memory:{array:nm}}}},3:{structure:N,memory:{array:lm},slots:{0:{structure:pt,memory:{array:o},address:-1431655766}}},4:{structure:W,memory:{array:um},slots:{0:{structure:yt,memory:{array:o},address:-1431655766}}},5:{structure:X,memory:{array:pm},slots:{0:{structure:ft,memory:{array:o},address:-1431655766}}}}}},slot:1});Object.assign(R,{...e,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...t,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:O}],methods:[],template:null},slot:21});Object.assign(bt,{...e,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:R}],methods:[],template:null},slot:20});Object.assign(dt,{...e,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:bt}],methods:[],template:null},slot:19});Object.assign(u,{...e,name:"u32",length:1,instance:{members:[{...t,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:u}],methods:[],template:null},slot:22});const ym=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(ht,{...e,type:9,name:"simple.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...t,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:p},{...t,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:p}],methods:[],template:{memory:{array:ym}}},slot:23});Object.assign(A,{...e,name:"bool",length:1,byteSize:1,align:0,instance:{members:[{...t,type:1,isRequired:!1,bitOffset:0,bitSize:1,byteSize:1,structure:A}],methods:[],template:null},slot:24});Object.assign(U,{...e,name:"usize",length:1,instance:{members:[{...t,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:U}],methods:[],template:null},slot:25});const fm=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),bm=new Uint8Array([]),dm=new Uint8Array([40,252,15,0]),hm=new Uint8Array([3,0,0,0]);Object.assign(Y,{...e,type:2,name:"simple.Image(u8,3,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...t,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:dt},{...t,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...t,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...t,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ht},{...t,type:1,isRequired:!1,bitOffset:168,bitSize:1,byteSize:1,slot:4,name:"premultiplied",structure:A},{...t,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:5,name:"offset",structure:U}],methods:[],template:{memory:{array:fm}}},static:{members:[{...t,type:7,isRequired:!1,name:"Pixel",structure:R},{...t,type:7,isRequired:!1,name:"FPixel",structure:j},{...t,type:6,isRequired:!1,slot:0,name:"channels",structure:h}],methods:[],template:{memory:{array:bm},slots:{0:{structure:h,memory:{array:dm},slots:{0:{structure:p,memory:{array:hm}}}}}}},slot:18});const _m=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),gm=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Sm=new Uint8Array([0,0,0,0,0,0,0,0]),It=new Uint8Array([]);Object.assign(V,{...e,type:2,name:"simple.KernelInput(u8,simple.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:Y}],methods:[],template:{memory:{array:_m},slots:{0:{structure:Y,memory:{array:gm},slots:{0:{structure:dt,memory:{array:Sm},slots:{0:{structure:bt,memory:{array:It}}}}}}}}},slot:17});Object.assign(_t,{...e,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:R}],methods:[],template:null},slot:20});Object.assign(gt,{...e,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:_t}],methods:[],template:null},slot:28});const zm=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Om=new Uint8Array([]),wm=new Uint8Array([40,252,15,0]),Rm=new Uint8Array([3,0,0,0]);Object.assign(Z,{...e,type:2,name:"simple.Image(u8,3,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...t,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:gt},{...t,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...t,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...t,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ht},{...t,type:1,isRequired:!1,bitOffset:168,bitSize:1,byteSize:1,slot:4,name:"premultiplied",structure:A},{...t,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:5,name:"offset",structure:U}],methods:[],template:{memory:{array:zm}}},static:{members:[{...t,type:7,isRequired:!1,name:"Pixel",structure:R},{...t,type:7,isRequired:!1,name:"FPixel",structure:j},{...t,type:6,isRequired:!1,slot:0,name:"channels",structure:h}],methods:[],template:{memory:{array:Om},slots:{0:{structure:h,memory:{array:wm},slots:{0:{structure:p,memory:{array:Rm}}}}}}},slot:27});const qm=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Am=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Um=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(I,{...e,type:2,name:"simple.KernelOutput(u8,simple.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:Z}],methods:[],template:{memory:{array:qm},slots:{0:{structure:Z,memory:{array:Am},slots:{0:{structure:gt,memory:{array:Um},slots:{0:{structure:_t,memory:{array:It}}}}}}}}},slot:26});const jm=new Uint8Array([0,0,0,63,0,0,0,0,0,0,0,0,0,0,0,0,154,153,153,62,0,0,128,63,51,51,51,63,0,0,0,0,205,204,204,61,154,153,153,62,205,204,76,63,0,0,0,0]);Object.assign(k,{...e,type:2,name:"simple.KernelParameters(simple.kernel)",length:1,byteSize:48,align:4,instance:{members:[{...t,type:6,isRequired:!1,bitOffset:0,bitSize:352,byteSize:48,slot:0,name:"transform",structure:rt}],methods:[],template:{memory:{array:jm}}},slot:29});Object.assign(Rt,{...e,type:8,name:"@typeInfo(@typeInfo(@TypeOf(simple.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...t,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:40});Object.assign(qt,{...e,type:7,name:"@typeInfo(@typeInfo(@TypeOf(simple.createOutput)).Fn.return_type.?).ErrorUnion.error_set!simple.KernelOutput(u8,simple.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:I},{...t,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Rt}],methods:[],template:null},slot:34});Object.assign(At,{...e,type:3,name:"createOutput",length:1,byteSize:112,align:4,hasPointer:!0,instance:{members:[{...t,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:0,name:"0",structure:u},{...t,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:1,name:"1",structure:u},{...t,type:6,bitOffset:448,bitSize:192,byteSize:24,slot:2,name:"2",structure:V},{...t,type:6,bitOffset:0,bitSize:384,byteSize:48,slot:3,name:"3",structure:k},{...t,type:6,bitOffset:640,bitSize:224,byteSize:28,slot:4,name:"retval",structure:qt}],methods:[],template:null},slot:32});Object.assign(Ut,{...e,type:8,name:"@typeInfo(@typeInfo(@TypeOf(simple.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...t,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:41});Object.assign(jt,{...e,type:7,name:"@typeInfo(@typeInfo(@TypeOf(simple.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set!simple.KernelOutput(u8,simple.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:I},{...t,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Ut}],methods:[],template:null},slot:35});Object.assign(Pt,{...e,type:3,name:"createPartialOutput",length:1,byteSize:128,align:4,hasPointer:!0,instance:{members:[{...t,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:0,name:"0",structure:u},{...t,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:1,name:"1",structure:u},{...t,type:3,bitOffset:448,bitSize:32,byteSize:4,slot:2,name:"2",structure:u},{...t,type:3,bitOffset:480,bitSize:32,byteSize:4,slot:3,name:"3",structure:u},{...t,type:6,bitOffset:512,bitSize:192,byteSize:24,slot:4,name:"4",structure:V},{...t,type:6,bitOffset:0,bitSize:384,byteSize:48,slot:5,name:"5",structure:k},{...t,type:6,bitOffset:704,bitSize:224,byteSize:28,slot:6,name:"retval",structure:jt}],methods:[],template:null},slot:33});const Pm={argStruct:At,thunk:2,name:"createOutput"},Vm={argStruct:Pt,thunk:1,name:"createPartialOutput"};Object.assign(Vt,{...e,type:2,name:"simple",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:It}}},static:{members:[{...t,type:7,isRequired:!1,name:"kernel",structure:wt},{...t,type:7,isRequired:!1,name:"Input",structure:V},{...t,type:7,isRequired:!1,name:"Output",structure:I},{...t,type:7,isRequired:!1,name:"Parameters",structure:k}],methods:[Pm,Vm],template:null},slot:0});const Im=[O,tt,et,F,mt,st,D,p,h,T,j,rt,r,m,S,b,ot,M,z,d,it,$,at,B,ct,L,nt,G,lt,H,ut,J,pt,N,Q,P,w,yt,W,ft,X,wt,R,bt,dt,u,ht,A,U,Y,V,_t,gt,Z,I,k,Rt,qt,At,Ut,jt,Pt,Vt],km=se(Im),Cm=Vt.constructor,xm=(async()=>{const c=new URL("simple-9db7c85a.wasm",import.meta.url).href;return fetch(c)})();re(xm,{...km,writeBack:!0});const{createOutput:$m,createPartialOutput:vm,kernel:Ot,Input:Em,Output:Bm,Parameters:Lm}=Cm;function Km(c,l,i,s,a={},_={}){if(Array.isArray(a)){const f=a;a={};for(const[y,g]of Object.keys(Ot.inputImages).entries())a[g]=f[y]}const C=new Em(void 0),x=Object.keys(Ot.inputImages),n=[];let q;for(const f of x){let y=a[f];if(y||(x.length===1&&["data","width","height"].every(g=>!!a[g])?y=a:n.push(f)),C[f]=y,q){if(y.colorSpace!==q)throw new Error(`Input images must all use the same color space: ${q}`)}else q=y.colorSpace}if(n.length>0)throw new Error(`Missing input image${n.length>1?"s":""}: ${n.join(", ")}`);const St=vm(c,l,i,s,C,_),kt=f=>{const y=Object.keys(f),g={};for(const Ct of y){const{data:{typedArray:v},width:xt,height:Ft}=f[Ct];let E;if(typeof ImageData=="function"){const Dt=new Uint8ClampedArray(v.buffer,v.byteOffset,v.byteLength);E=new ImageData(Dt,xt,s,{colorSpace:q})}else E={data:v,width:xt,height:Ft};if(y.length===1)return E;g[Ct]=E}return g};return St[Symbol.toStringTag]==="Promise"?St.then(kt):kt(St)}function Fm(){const c={};for(let[l,i]of Object.entries(Ot)){if(l==="parameters"){const s={};for(const[a,_]of Object.entries(i)){const C=s[a]={};for(let[x,n]of Object.entries(_))typeof n=="object"?"string"in n?n=n.string:n=Kt(n):typeof n=="function"&&(n=Dm(n.name)),C[x]=n}i=s}else typeof i=="object"&&("string"in i?i=i.string:i=i.valueOf());c[l]=i}return c}function Kt(c){const l=[];for(let[i,s]of Object.entries(c))typeof s=="object"&&(s=Kt(s)),l[i]=s;return l}function Dm(c){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[c]}onmessage=c=>{const[l,i,...s]=c.data;Tm(l,s).then(([a,_])=>{postMessage([l,i,a],{transfer:_})}).catch(a=>{postMessage(["error",i,a])})};async function Tm(c,l){switch(c){case"getKernelInfo":return[Fm(...l)];case"createPartialImageData":const s=await Km(...l),a=[];if("data"in s&&"width"in s&&"height"in s)a.push(s.data.buffer);else for(const _ of Object.entries(s))a.push(s.data.buffer);return[s,a];default:throw new Error(`Unknown function: ${c}`)}}
