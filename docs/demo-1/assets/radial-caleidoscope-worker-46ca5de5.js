import{u as ls,a as ps,b as gs,c as Os,d as fs,e as Ss,f as js,g as ds,h as zs,i as hs,j as ws,k as As,l as Us,m as Ps,n as Vs,p as Is,o as Rs,q as ks,r as qs,s as vs}from"./index-58d89d46.js";ls();ws();As();ps();gs();Us();Ps();Vs();Is();Os();fs();Ss();js();Rs();vs();ds();ks();zs();hs();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},f={},_={},D={},F={},M={},p={},S={},T={},$={},r={},b={},y={},L={},B={},G={},H={},J={},N={},Q={},W={},h={},X={},Y={},ot={},V={},Z={},I={},m={},O={},U={},ct={},tt={},R={},et={},k={},st={},q={},v={},P={},ut={},mt={},K={},yt={},bt={},lt={},Jt={},pt={},gt={},Ot={},Nt={},ft={},St={},Qt={},Wt={},jt={},dt={},Xt={},zt={},ht={},Yt={},Zt={},wt={},te={},At={},ee={},se={},Ut={},re={},Pt={},ae={},ne={},Vt={},ie={},It={},oe={},ce={},Rt={},ue={},kt={},qt={},vt={},me={},Et={},xt={},Ct={},ye={},rt={},be={},le={},Kt={},pe={},_t={},ge={},Oe={},fe={},Se={},je={},de={},ze={},he={},we={},Ae={},Ue={},Pe={},Ve={},Ie={},Re={},ke={},qe={},Dt={},ve={},Ee={},Ft={},xe={},Mt={},Ce={},Ke={},_e={},De={},Fe={},Me={},Te={},Tt={},$e={},Le={},Be={},Ge={},He={},Je={},Ne={},Qe={},We={},Xe={},$t={},Ye={},Ze={},ts={},es={},ss={},rs={},as={},ns={},is={},os={},Es=new Uint8Array,xs=new Uint8Array,Cs=new Uint8Array([45,67,28,235,226,54,26,63]),Ks=new Uint8Array([216,15,73,64]),_s=new Uint8Array,Ds=new Uint8Array([83,180,195,118,47,27,228,63]),Fs=new Uint8Array,Ms=new Uint8Array,Ts=new Uint8Array([0,0,0,0,0,0,0,0]),$s=new Uint8Array([219,15,201,64]),Ls=new Uint8Array,Bs=new Uint8Array([45,67,28,235,226,54,26,63]),Gs=new Uint8Array,Hs=new Uint8Array([123,20,174,71,225,122,132,63]),Js=new Uint8Array,Ns=new Uint8Array([123,20,174,71,225,122,132,63]),Qs=new Uint8Array,Ws=new Uint8Array([92,143,194,245,40,0,127,64]),Xs=new Uint8Array,Ys=new Uint8Array([92,143,194,245,40,0,127,64]),Zs=new Uint8Array,tr=new Uint8Array([184,30,133,235,81,192,98,64]),er=new Uint8Array,sr=new Uint8Array([184,30,133,235,81,192,98,64]),rr=new Uint8Array,ar=new Uint8Array,nr=new Uint8Array,ir=new Uint8Array,or=new Uint8Array,cr=new Uint8Array,ur=new Uint8Array,mr=new Uint8Array,yr=new Uint8Array([4]),br=new Uint8Array,lr=new Uint8Array,pr=new Uint8Array([94,16,0,1]),gr=new Uint8Array([82,97,100,105,97,108,67,97,108,101,105,100,111,115,99,111,112,101,0]),Or=new Uint8Array([124,16,0,1]),fr=new Uint8Array([80,101,116,114,105,32,76,101,115,107,105,110,101,110,0]),Sr=new Uint8Array,jr=new Uint8Array([1]),dr=new Uint8Array([156,16,0,1]),zr=new Uint8Array([67,97,108,101,105,100,111,115,99,111,112,101,32,45,101,102,102,101,99,116,32,102,111,114,32,114,97,100,105,97,108,32,114,101,102,108,101,99,116,105,111,110,0]),hr=new Uint8Array,wr=new Uint8Array,Ar=new Uint8Array,Ur=new Uint8Array([0]),Pr=new Uint8Array([1]),cs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Vr=new Uint8Array,Ir=new Uint8Array,Rr=new Uint8Array,kr=new Uint8Array,qr=new Uint8Array([4]),Lt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),us=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),vr=new Uint8Array,Er=new Uint8Array,xr=new Uint8Array,Cr=new Uint8Array,Kr=new Uint8Array([4]),Bt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),_r=new Uint8Array([143,2,22,67,143,2,22,67,124,217,32,63,23,183,209,56]),Dr=new Uint8Array([27,0]),Fr=new Uint8Array,Mr=new Uint8Array,Tr=new Uint8Array,$r=new Uint8Array;Object.assign(Jt,{slots:{0:pt,1:Ot,2:ft,3:St}});Object.assign(pt,{structure:s,memory:{array:Es},slots:{0:gt}});Object.assign(gt,{structure:b});Object.assign(Ot,{structure:r,memory:{array:xs},slots:{0:Nt}});Object.assign(Nt,{structure:y,memory:{array:Cs}});Object.assign(ft,{structure:b,memory:{array:Ks}});Object.assign(St,{structure:r,memory:{array:_s},slots:{0:Qt}});Object.assign(Qt,{structure:y,memory:{array:Ds}});Object.assign(Wt,{slots:{0:jt,1:dt,2:zt,3:ht}});Object.assign(jt,{structure:s,memory:{array:Fs},slots:{0:gt}});Object.assign(dt,{structure:r,memory:{array:Ms},slots:{0:Xt}});Object.assign(Xt,{structure:y,memory:{array:Ts}});Object.assign(zt,{structure:b,memory:{array:$s}});Object.assign(ht,{structure:r,memory:{array:Ls},slots:{0:Yt}});Object.assign(Yt,{structure:y,memory:{array:Bs}});Object.assign(Zt,{slots:{0:wt,1:At}});Object.assign(wt,{structure:r,memory:{array:Gs},slots:{0:te}});Object.assign(te,{structure:y,memory:{array:Hs}});Object.assign(At,{structure:r,memory:{array:Js},slots:{0:ee}});Object.assign(ee,{structure:y,memory:{array:Ns}});Object.assign(se,{slots:{0:Ut,1:Pt}});Object.assign(Ut,{structure:r,memory:{array:Qs},slots:{0:re}});Object.assign(re,{structure:y,memory:{array:Ws}});Object.assign(Pt,{structure:r,memory:{array:Xs},slots:{0:ae}});Object.assign(ae,{structure:y,memory:{array:Ys}});Object.assign(ne,{slots:{0:Vt,1:It}});Object.assign(Vt,{structure:r,memory:{array:Zs},slots:{0:ie}});Object.assign(ie,{structure:y,memory:{array:tr}});Object.assign(It,{structure:r,memory:{array:er},slots:{0:oe}});Object.assign(oe,{structure:y,memory:{array:sr}});Object.assign(ce,{slots:{0:Rt,1:kt,2:qt,3:vt}});Object.assign(Rt,{structure:s,memory:{array:rr},slots:{0:ue}});Object.assign(ue,{structure:N});Object.assign(kt,{structure:G,memory:{array:ar},slots:{0:wt,1:At}});Object.assign(qt,{structure:H,memory:{array:nr},slots:{0:Ut,1:Pt}});Object.assign(vt,{structure:J,memory:{array:ir},slots:{0:Vt,1:It}});Object.assign(me,{slots:{0:Et,1:xt,2:Ct}});Object.assign(Et,{structure:L,memory:{array:or},slots:{0:pt,1:Ot,2:ft,3:St}});Object.assign(xt,{structure:B,memory:{array:cr},slots:{0:jt,1:dt,2:zt,3:ht}});Object.assign(Ct,{structure:Q,memory:{array:ur},slots:{0:Rt,1:kt,2:qt,3:vt}});Object.assign(ye,{slots:{0:rt}});Object.assign(rt,{structure:p,memory:{array:mr},slots:{0:be}});Object.assign(be,{structure:S,memory:{array:yr}});Object.assign(le,{slots:{0:Kt}});Object.assign(Kt,{structure:h,memory:{array:br},slots:{0:rt}});Object.assign(pe,{slots:{0:_t}});Object.assign(_t,{structure:h,memory:{array:lr},slots:{0:rt}});Object.assign(ge,{slots:{0:Oe,1:Se,2:de,3:he,4:Ae,5:Ue,6:Pe}});Object.assign(Oe,{structure:D,memory:{array:pr},slots:{0:fe}});Object.assign(fe,{structure:_,memory:{array:gr},reloc:16781406,const:!0});Object.assign(Se,{structure:M,memory:{array:Or},slots:{0:je}});Object.assign(je,{structure:F,memory:{array:fr},reloc:16781436,const:!0});Object.assign(de,{structure:p,memory:{array:Sr},slots:{0:ze}});Object.assign(ze,{structure:S,memory:{array:jr}});Object.assign(he,{structure:$,memory:{array:dr},slots:{0:we}});Object.assign(we,{structure:T,memory:{array:zr},reloc:16781468,const:!0});Object.assign(Ae,{structure:W,memory:{array:hr},slots:{0:Et,1:xt,2:Ct}});Object.assign(Ue,{structure:X,memory:{array:wr},slots:{0:Kt}});Object.assign(Pe,{structure:Y,memory:{array:Ar},slots:{0:_t}});Object.assign(Ve,{slots:{0:Ie,1:Re}});Object.assign(Ie,{structure:O,memory:{array:Ur}});Object.assign(Re,{structure:O,memory:{array:Pr}});Object.assign(ke,{memory:{array:cs},slots:{0:qe}});Object.assign(qe,{structure:I,memory:{array:cs,offset:0,length:8},slots:{0:Dt}});Object.assign(Dt,{structure:Z,memory:{array:Vr},reloc:0,const:!0});Object.assign(ve,{slots:{0:Ee,1:xe,2:Ce}});Object.assign(Ee,{structure:s,memory:{array:Ir},slots:{0:Ft}});Object.assign(Ft,{structure:V});Object.assign(xe,{structure:s,memory:{array:Rr},slots:{0:Mt}});Object.assign(Mt,{structure:ct});Object.assign(Ce,{structure:p,memory:{array:kr},slots:{0:Ke}});Object.assign(Ke,{structure:S,memory:{array:qr}});Object.assign(_e,{memory:{array:Lt},slots:{0:De}});Object.assign(De,{structure:tt,memory:{array:Lt},slots:{0:Fe}});Object.assign(Fe,{structure:I,memory:{array:Lt,offset:0,length:8},slots:{0:Dt}});Object.assign(Me,{memory:{array:us},slots:{0:Te}});Object.assign(Te,{structure:k,memory:{array:us,offset:0,length:8},slots:{0:Tt}});Object.assign(Tt,{structure:et,memory:{array:vr},reloc:0});Object.assign($e,{slots:{0:Le,1:Be,2:Ge}});Object.assign(Le,{structure:s,memory:{array:Er},slots:{0:Ft}});Object.assign(Be,{structure:s,memory:{array:xr},slots:{0:Mt}});Object.assign(Ge,{structure:p,memory:{array:Cr},slots:{0:He}});Object.assign(He,{structure:S,memory:{array:Kr}});Object.assign(Je,{memory:{array:Bt},slots:{0:Ne}});Object.assign(Ne,{structure:st,memory:{array:Bt},slots:{0:Qe}});Object.assign(Qe,{structure:k,memory:{array:Bt,offset:0,length:8},slots:{0:Tt}});Object.assign(We,{memory:{array:_r}});Object.assign(Xe,{slots:{0:$t}});Object.assign($t,{structure:P,memory:{array:Dr}});Object.assign(Ye,{slots:{0:$t}});Object.assign(Ze,{slots:{0:ts,1:ss,2:as,3:is}});Object.assign(ts,{structure:s,memory:{array:Fr},slots:{0:es}});Object.assign(es,{structure:ot});Object.assign(ss,{structure:s,memory:{array:Mr},slots:{0:rs}});Object.assign(rs,{structure:R});Object.assign(as,{structure:s,memory:{array:Tr},slots:{0:ns}});Object.assign(ns,{structure:q});Object.assign(is,{structure:s,memory:{array:$r},slots:{0:os}});Object.assign(os,{structure:v});const Lr={argStruct:mt,thunkId:2,name:"createOutput"},Br={argStruct:bt,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(f,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(_,{...e,type:1,name:"[18:0]u8",length:18,byteSize:19,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(D,{...e,type:13,name:"*const [18:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[]}});Object.assign(F,{...e,type:1,name:"[14:0]u8",length:14,byteSize:15,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(M,{...e,type:13,name:"*const [14:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(p,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:p}],methods:[]}});Object.assign(S,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(T,{...e,type:1,name:"[42:0]u8",length:42,byteSize:43,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign($,{...e,type:13,name:"*const [42:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[]}});Object.assign(r,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(b,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[]}});Object.assign(y,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:y}],methods:[]}});Object.assign(L,{...e,type:2,name:"Struct3463683009",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:r},{...t,type:9,slot:2,name:"maxValue",structure:b},{...t,type:9,slot:3,name:"defaultValue",structure:r}],methods:[],template:Jt}});Object.assign(B,{...e,type:2,name:"Struct577217546",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:r},{...t,type:9,slot:2,name:"maxValue",structure:b},{...t,type:9,slot:3,name:"defaultValue",structure:r}],methods:[],template:Wt}});Object.assign(G,{...e,type:2,name:"Struct3476006596",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:r},{...t,type:9,slot:1,name:"1",structure:r}],methods:[],template:Zt}});Object.assign(H,{...e,type:2,name:"Struct145109186",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:r},{...t,type:9,slot:1,name:"1",structure:r}],methods:[],template:se}});Object.assign(J,{...e,type:2,name:"Struct4089937064",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:r},{...t,type:9,slot:1,name:"1",structure:r}],methods:[],template:ne}});Object.assign(N,{...e,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:b}],methods:[]}});Object.assign(Q,{...e,type:2,name:"Struct4044811020",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:G},{...t,type:9,slot:2,name:"maxValue",structure:H},{...t,type:9,slot:3,name:"defaultValue",structure:J}],methods:[],template:ce}});Object.assign(W,{...e,type:2,name:"Struct829271195",align:1,instance:{members:[{...t,type:9,slot:0,name:"angle",structure:L},{...t,type:9,slot:1,name:"direction",structure:B},{...t,type:9,slot:2,name:"basepoint",structure:Q}],methods:[],template:me}});Object.assign(h,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:p}],methods:[],template:ye}});Object.assign(X,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:9,slot:0,name:"src",structure:h}],methods:[],template:le}});Object.assign(Y,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:9,slot:0,name:"dst",structure:h}],methods:[],template:pe}});Object.assign(ot,{...e,type:2,name:"radial-caleidoscope.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:D},{...t,type:9,slot:1,name:"vendor",structure:M},{...t,type:9,slot:2,name:"version",structure:p},{...t,type:9,slot:3,name:"description",structure:$},{...t,type:9,slot:4,name:"parameters",structure:W},{...t,type:9,slot:5,name:"inputImages",structure:X},{...t,type:9,slot:6,name:"outputImages",structure:Y}],methods:[],template:ge}});Object.assign(V,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(Z,{...e,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(I,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:Z}],methods:[]}});Object.assign(m,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[]}});Object.assign(O,{...e,type:11,name:"radial-caleidoscope.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:O},{...t,type:9,slot:1,name:"display-p3",structure:O}],methods:[],template:Ve}});Object.assign(U,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:U}],methods:[]}});Object.assign(ct,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:b}],methods:[]}});Object.assign(tt,{...e,type:2,name:"radial-caleidoscope.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:I},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:ke},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:p}],methods:[],template:ve}});Object.assign(R,{...e,type:2,name:"radial-caleidoscope.KernelInput(u8,radial-caleidoscope.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:tt}],methods:[],template:_e}});Object.assign(et,{...e,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(k,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:et}],methods:[]}});Object.assign(st,{...e,type:2,name:"radial-caleidoscope.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:k},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:Me},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:p}],methods:[],template:$e}});Object.assign(q,{...e,type:2,name:"radial-caleidoscope.KernelOutput(u8,radial-caleidoscope.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:st}],methods:[],template:Je}});Object.assign(v,{...e,type:2,name:"radial-caleidoscope.KernelParameters(radial-caleidoscope.kernel)",byteSize:16,align:8,instance:{members:[{...t,type:4,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"angle",structure:b},{...t,type:4,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"direction",structure:b},{...t,type:7,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"basepoint",structure:N}],methods:[],template:We}});Object.assign(P,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(radial-caleidoscope.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:P}],methods:[],template:Xe}});Object.assign(ut,{...e,type:9,name:"ErrorSet1683846215!radial-caleidoscope.KernelOutput(u8,radial-caleidoscope.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:q},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:P}],methods:[]}});Object.assign(mt,{...e,type:5,name:"createOutput",byteSize:80,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...t,type:3,isRequired:!0,bitOffset:160,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...t,type:7,isRequired:!0,bitOffset:192,bitSize:192,byteSize:24,slot:0,name:"2",structure:R},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:128,byteSize:16,slot:1,name:"3",structure:v},{...t,type:7,isRequired:!0,bitOffset:384,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ut}],methods:[]}});Object.assign(K,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(radial-caleidoscope.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:K}],methods:[],template:Ye}});Object.assign(yt,{...e,type:9,name:"ErrorSet539585717!radial-caleidoscope.KernelOutput(u8,radial-caleidoscope.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:q},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:K}],methods:[]}});Object.assign(bt,{...e,type:5,name:"createPartialOutput",byteSize:88,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...t,type:3,isRequired:!0,bitOffset:160,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...t,type:3,isRequired:!0,bitOffset:192,bitSize:32,byteSize:4,slot:5,name:"2",structure:m},{...t,type:3,isRequired:!0,bitOffset:224,bitSize:32,byteSize:4,slot:6,name:"3",structure:m},{...t,type:7,isRequired:!0,bitOffset:256,bitSize:192,byteSize:24,slot:0,name:"4",structure:R},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:128,byteSize:16,slot:1,name:"5",structure:v},{...t,type:7,isRequired:!0,bitOffset:448,bitSize:224,byteSize:28,slot:2,name:"retval",structure:yt}],methods:[]}});Object.assign(lt,{...e,type:2,name:"radial-caleidoscope",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:s},{...t,type:9,slot:1,name:"Input",structure:s},{...t,type:9,slot:2,name:"Output",structure:s},{...t,type:9,slot:3,name:"Parameters",structure:s}],methods:[Lr,Br],template:Ze}});const Gr=[s,f,_,D,F,M,p,S,T,$,r,b,y,L,B,G,H,J,N,Q,W,h,X,Y,ot,V,Z,I,m,O,U,ct,tt,R,et,k,st,q,v,P,ut,mt,K,yt,bt,lt],Hr=lt,Jr={runtimeSafety:!1,littleEndian:!0},at=qs();at.getControlObject();at.recreateStructures(Gr,Jr);const Nr=(async()=>{const o=new URL("radial-caleidoscope-15345fc9.wasm",import.meta.url).href;return fetch(o)})();at.loadModule(Nr);at.linkVariables(!0);const{constructor:Qr}=Hr,{createPartialOutput:Wr,Input:Xr,kernel:it}=Qr;function Yr(o,c,n,a,i={},j={}){const d=[];for(const[l]of it.inputImages)d.push(l);const w=[];for(const[l]of it.outputImages)w.push(l);if(Array.isArray(i)){const l=i;i={};for(const[g,z]of d.entries())i[z]=l[g]}const u=new Xr(void 0),E=[];let A;for(const l of d){let g=i[l];if(g||(d.length===1&&["data","width","height"].every(z=>!!i[z])?g=i:E.push(l)),u[l]=g,A){if(g.colorSpace!==A)throw new Error(`Input images must all use the same color space: ${A}`)}else A=g.colorSpace}if(E.length>0)throw new Error(`Missing input image${E.length>1?"s":""}: ${E.join(", ")}`);const nt=Wr(o,c,n,a,u,j),Gt=l=>{const g={};for(const z of w){const{data:{typedArray:x},width:Ht,height:ys}=l[z];let C;if(typeof ImageData=="function"){const bs=new Uint8ClampedArray(x.buffer,x.byteOffset,x.byteLength);C=new ImageData(bs,Ht,a,{colorSpace:A})}else C={data:x,width:Ht,height:ys};if(w.length===1)return C;g[z]=C}return g};return nt[Symbol.toStringTag]==="Promise"?nt.then(Gt):Gt(nt)}function Zr(){const o={};for(let[c,n]of it){if(c==="parameters"){const a={};for(const[i,j]of n){const d=a[i]={};for(let[w,u]of j)typeof u=="object"?"string"in u?u=u.string:u=ms(u):typeof u=="function"&&(u=ta(u.name)),d[w]=u}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());o[c]=n}return o}function ms(o){const c=[];for(let[n,a]of o)typeof a=="object"&&(a=ms(a)),c[n]=a;return c}function ta(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[c,n,...a]=o.data;ea(c,a).then(([i,j])=>{postMessage([c,n,i],{transfer:j})}).catch(i=>{postMessage(["error",n,i])})};async function ea(o,c){switch(o){case"getKernelInfo":return[Zr(...c)];case"createPartialImageData":const a=await Yr(...c),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const j of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${o}`)}}
