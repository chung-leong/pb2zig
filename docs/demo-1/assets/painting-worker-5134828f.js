import{u as qe,a as Ae,b as Ue,c as je,d as Pe,e as Ve,f as ke,g as Ie,h as Ce,i as ve,j as xe,k as Ee,l as Ke,m as De,o as Fe,n as Me,p as _e,q as Te}from"./index-422d9c98.js";qe();Ae();Ue();je();Pe();Ve();ke();Ie();Ce();ve();xe();Ee();Ke();De();Fe();Me();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},S={},B={},L={},C={},G={},H={},v={},b={},p={},J={},N={},x={},c={},m={},r={},Q={},E={},W={},K={},X={},D={},Y={},F={},q={},z={},Z={},M={},ee={},_={},le={},O={},te={},se={},l={},re={},R={},ae={},T={},A={},ne={},ie={},$={},U={},j={},me={},ye={},ce={},be={},pe={},fe={},de={};Object.assign(S,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:5});Object.assign(B,{...t,type:1,name:"[18:0]u8",length:18,byteSize:19,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:4});Object.assign(L,{...t,type:11,name:"*const [18:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:B}],methods:[],template:null},slot:3});Object.assign(C,{...t,type:11,name:"*const *const [18:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[],template:null},slot:2});Object.assign(G,{...t,type:1,name:"[9:0]u8",length:9,byteSize:10,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:8});Object.assign(H,{...t,type:11,name:"*const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:G}],methods:[],template:null},slot:7});Object.assign(v,{...t,type:11,name:"*const *const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[],template:null},slot:6});Object.assign(b,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:10});Object.assign(p,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:b}],methods:[],template:null},slot:9});Object.assign(J,{...t,type:1,name:"[8:0]u8",length:8,byteSize:9,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:13});Object.assign(N,{...t,type:11,name:"*const [8:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:J}],methods:[],template:null},slot:12});Object.assign(x,{...t,type:11,name:"*const *const [8:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:N}],methods:[],template:null},slot:11});Object.assign(c,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:32});Object.assign(m,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:m}],methods:[],template:null},slot:49});Object.assign(r,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:m}],methods:[],template:null},slot:48});const $e=new Uint8Array([]),Be=new Uint8Array([24,253,15,0]),Le=new Uint8Array([0,0,0,0,0,0,0,0]),Ge=new Uint8Array([64,253,15,0]),He=new Uint8Array([0,0,0,0,0,0,240,63]),Je=new Uint8Array([104,253,15,0]),Ne=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(Q,{...t,type:2,name:"Struct0010",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:c},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:$e},slots:{0:{structure:r,memory:{array:Be},slots:{0:{structure:m,memory:{array:Le}}}},1:{structure:r,memory:{array:Ge},slots:{0:{structure:m,memory:{array:He}}}},2:{structure:r,memory:{array:Je},slots:{0:{structure:m,memory:{array:Ne}}}}}}},slot:38});Object.assign(E,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[],template:null},slot:37});const Qe=new Uint8Array([]),We=new Uint8Array([24,253,15,0]),Xe=new Uint8Array([0,0,0,0,0,0,0,0]),Ye=new Uint8Array([64,253,15,0]),Ze=new Uint8Array([0,0,0,0,0,0,248,63]),et=new Uint8Array([104,253,15,0]),tt=new Uint8Array([51,51,51,51,51,51,227,63]);Object.assign(W,{...t,type:2,name:"Struct0011",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:c},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:Qe},slots:{0:{structure:r,memory:{array:We},slots:{0:{structure:m,memory:{array:Xe}}}},1:{structure:r,memory:{array:Ye},slots:{0:{structure:m,memory:{array:Ze}}}},2:{structure:r,memory:{array:et},slots:{0:{structure:m,memory:{array:tt}}}}}}},slot:40});Object.assign(K,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:39});const st=new Uint8Array([]),rt=new Uint8Array([24,253,15,0]),at=new Uint8Array([0,0,0,0,0,0,224,191]),nt=new Uint8Array([64,253,15,0]),it=new Uint8Array([0,0,0,0,0,0,224,63]),ut=new Uint8Array([104,253,15,0]),ot=new Uint8Array([41,92,143,194,245,40,188,63]);Object.assign(X,{...t,type:2,name:"Struct0012",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:c},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:st},slots:{0:{structure:r,memory:{array:rt},slots:{0:{structure:m,memory:{array:at}}}},1:{structure:r,memory:{array:nt},slots:{0:{structure:m,memory:{array:it}}}},2:{structure:r,memory:{array:ut},slots:{0:{structure:m,memory:{array:ot}}}}}}},slot:42});Object.assign(D,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:41});const lt=new Uint8Array([]),mt=new Uint8Array([170,170,170,170]),d=new Uint8Array([]),yt=new Uint8Array([170,170,170,170]),ct=new Uint8Array([170,170,170,170]);Object.assign(Y,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"n0",structure:E},{...e,type:8,isRequired:!1,slot:1,name:"n1",structure:K},{...e,type:8,isRequired:!1,slot:2,name:"n2",structure:D}],methods:[],template:{memory:{array:lt},slots:{0:{structure:E,memory:{array:mt},slots:{0:{structure:Q,memory:{array:d},address:-1431655766}}},1:{structure:K,memory:{array:yt},slots:{0:{structure:W,memory:{array:d},address:-1431655766}}},2:{structure:D,memory:{array:ct},slots:{0:{structure:X,memory:{array:d},address:-1431655766}}}}}},slot:15});Object.assign(F,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[],template:null},slot:14});const bt=new Uint8Array([]),pt=new Uint8Array([64,249,15,0]),ft=new Uint8Array([4,0,0,0]);Object.assign(q,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:bt},slots:{0:{structure:p,memory:{array:pt},slots:{0:{structure:b,memory:{array:ft}}}}}}},slot:44});Object.assign(z,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:q}],methods:[],template:null},slot:43});const dt=new Uint8Array([]),St=new Uint8Array([170,170,170,170]);Object.assign(Z,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:z}],methods:[],template:{memory:{array:dt},slots:{0:{structure:z,memory:{array:St},slots:{0:{structure:q,memory:{array:d},address:-1431655766}}}}}},slot:17});Object.assign(M,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:16});const gt=new Uint8Array([]),ht=new Uint8Array([170,170,170,170]);Object.assign(ee,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:z}],methods:[],template:{memory:{array:gt},slots:{0:{structure:z,memory:{array:ht},slots:{0:{structure:q,memory:{array:d},address:-1431655766}}}}}},slot:19});Object.assign(_,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:18});const zt=new Uint8Array([]),Ot=new Uint8Array([]),wt=new Uint8Array([116,249,15,0]),Rt=new Uint8Array([254,7,16,0]),qt=new Uint8Array([97,114,46,115,104,97,100,101,114,46,112,97,105,110,116,105,110,103,0]),At=new Uint8Array([180,249,15,0]),Ut=new Uint8Array([244,7,16,0]),jt=new Uint8Array([65,108,97,110,32,82,111,115,115,0]),Pt=new Uint8Array([244,249,15,0]),Vt=new Uint8Array([1,0,0,0]),kt=new Uint8Array([76,250,15,0]),It=new Uint8Array([235,7,16,0]),Ct=new Uint8Array([80,97,105,110,116,105,110,103,0]),vt=new Uint8Array([170,170,170,170]),xt=new Uint8Array([170,170,170,170]),Et=new Uint8Array([170,170,170,170]);Object.assign(le,{...t,type:2,name:"painting.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:zt}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:C},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:v},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:p},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:x},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:F},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:M},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:_}],methods:[],template:{memory:{array:Ot},slots:{0:{structure:C,memory:{array:wt},slots:{0:{structure:L,memory:{array:Rt},slots:{0:{structure:B,memory:{array:qt},address:1050622}}}}},1:{structure:v,memory:{array:At},slots:{0:{structure:H,memory:{array:Ut},slots:{0:{structure:G,memory:{array:jt},address:1050612}}}}},2:{structure:p,memory:{array:Pt},slots:{0:{structure:b,memory:{array:Vt}}}},3:{structure:x,memory:{array:kt},slots:{0:{structure:N,memory:{array:It},slots:{0:{structure:J,memory:{array:Ct},address:1050603}}}}},4:{structure:F,memory:{array:vt},slots:{0:{structure:Y,memory:{array:d},address:-1431655766}}},5:{structure:M,memory:{array:xt},slots:{0:{structure:Z,memory:{array:d},address:-1431655766}}},6:{structure:_,memory:{array:Et},slots:{0:{structure:ee,memory:{array:d},address:-1431655766}}}}}},slot:1});Object.assign(O,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:24});Object.assign(te,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:23});Object.assign(se,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:te}],methods:[],template:null},slot:22});Object.assign(l,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:l}],methods:[],template:null},slot:25});const Kt=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(re,{...t,type:9,name:"painting.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:b},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:b}],methods:[],template:{memory:{array:Kt}}},slot:26});Object.assign(R,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:R}],methods:[],template:null},slot:27});Object.assign(ae,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:45});const Dt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ft=new Uint8Array([]),Mt=new Uint8Array([72,253,15,0]),_t=new Uint8Array([4,0,0,0]);Object.assign(T,{...t,type:2,name:"painting.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:se},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:re},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:{memory:{array:Dt}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:ae},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:Ft},slots:{0:{structure:p,memory:{array:Mt},slots:{0:{structure:b,memory:{array:_t}}}}}}},slot:21});const Tt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),$t=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Bt=new Uint8Array([0,0,0,0,0,0,0,0]),Se=new Uint8Array([]);Object.assign(A,{...t,type:2,name:"painting.KernelInput(u8,painting.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:T}],methods:[],template:{memory:{array:Tt},slots:{0:{structure:T,memory:{array:$t},slots:{0:{structure:se,memory:{array:Bt},slots:{0:{structure:te,memory:{array:Se}}}}}}}}},slot:20});Object.assign(ne,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:23});Object.assign(ie,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:ne}],methods:[],template:null},slot:30});const Lt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Gt=new Uint8Array([]),Ht=new Uint8Array([72,253,15,0]),Jt=new Uint8Array([4,0,0,0]);Object.assign($,{...t,type:2,name:"painting.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:ie},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:re},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:{memory:{array:Lt}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:ae},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:Gt},slots:{0:{structure:p,memory:{array:Ht},slots:{0:{structure:b,memory:{array:Jt}}}}}}},slot:29});const Nt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Qt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Wt=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(U,{...t,type:2,name:"painting.KernelOutput(u8,painting.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:$}],methods:[],template:{memory:{array:Nt},slots:{0:{structure:$,memory:{array:Qt},slots:{0:{structure:ie,memory:{array:Wt},slots:{0:{structure:ne,memory:{array:Se}}}}}}}}},slot:28});const Xt=new Uint8Array([0,0,0,0,154,153,25,63,174,71,225,61]);Object.assign(j,{...t,type:2,name:"painting.KernelParameters(painting.kernel)",length:1,byteSize:12,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"n0",structure:c},{...e,type:4,isRequired:!1,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"n1",structure:c},{...e,type:4,isRequired:!1,bitOffset:64,bitSize:32,byteSize:4,slot:2,name:"n2",structure:c}],methods:[],template:{memory:{array:Xt}}},slot:31});Object.assign(me,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(painting.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:46});Object.assign(ye,{...t,type:7,name:"ErrorSet0000!painting.KernelOutput(u8,painting.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:U},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:me}],methods:[],template:null},slot:35});Object.assign(ce,{...t,type:3,name:"createOutput",length:1,byteSize:72,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"0",structure:l},{...e,type:3,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"1",structure:l},{...e,type:6,bitOffset:64,bitSize:192,byteSize:24,slot:2,name:"2",structure:A},{...e,type:6,bitOffset:256,bitSize:96,byteSize:12,slot:3,name:"3",structure:j},{...e,type:6,bitOffset:352,bitSize:224,byteSize:28,slot:4,name:"retval",structure:ye}],methods:[],template:null},slot:33});Object.assign(be,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(painting.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:47});Object.assign(pe,{...t,type:7,name:"ErrorSet0001!painting.KernelOutput(u8,painting.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:U},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:be}],methods:[],template:null},slot:36});Object.assign(fe,{...t,type:3,name:"createPartialOutput",length:1,byteSize:80,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"0",structure:l},{...e,type:3,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"1",structure:l},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:2,name:"2",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:3,name:"3",structure:l},{...e,type:6,bitOffset:128,bitSize:192,byteSize:24,slot:4,name:"4",structure:A},{...e,type:6,bitOffset:320,bitSize:96,byteSize:12,slot:5,name:"5",structure:j},{...e,type:6,bitOffset:416,bitSize:224,byteSize:28,slot:6,name:"retval",structure:pe}],methods:[],template:null},slot:34});const Yt={argStruct:ce,thunk:7,name:"createOutput"},Zt={argStruct:fe,thunk:2,name:"createPartialOutput"};Object.assign(de,{...t,type:2,name:"painting",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Se}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:le},{...e,type:7,isRequired:!1,name:"Input",structure:A},{...e,type:7,isRequired:!1,name:"Output",structure:U},{...e,type:7,isRequired:!1,name:"Parameters",structure:j}],methods:[Yt,Zt],template:null},slot:0});const es=[S,B,L,C,G,H,v,b,p,J,N,x,c,m,r,Q,E,W,K,X,D,Y,F,q,z,Z,M,ee,_,le,O,te,se,l,re,R,ae,T,A,ne,ie,$,U,j,me,ye,ce,be,pe,fe,de],ts=_e(es),ss=de.constructor,rs=(async()=>{const i=new URL("painting-30b13945.wasm",import.meta.url).href;return fetch(i)})();Te(rs,{...ts,writeBack:!0});const{createOutput:ys,createPartialOutput:as,kernel:oe,Input:ns,Output:cs,Parameters:bs}=ss;function is(i,o,a,s,n={},g={}){if(Array.isArray(n)){const f=n;n={};for(const[y,h]of Object.keys(oe.inputImages).entries())n[h]=f[y]}const P=new ns(void 0),V=Object.keys(oe.inputImages),u=[];let w;for(const f of V){let y=n[f];if(y||(V.length===1&&["data","width","height"].every(h=>!!n[h])?y=n:u.push(f)),P[f]=y,w){if(y.colorSpace!==w)throw new Error(`Input images must all use the same color space: ${w}`)}else w=y.colorSpace}if(u.length>0)throw new Error(`Missing input image${u.length>1?"s":""}: ${u.join(", ")}`);const ue=as(i,o,a,s,P,g),ge=f=>{const y=Object.keys(f),h={};for(const he of y){const{data:{typedArray:k},width:ze,height:we}=f[he];let I;if(typeof ImageData=="function"){const Re=new Uint8ClampedArray(k.buffer,k.byteOffset,k.byteLength);I=new ImageData(Re,ze,s,{colorSpace:w})}else I={data:k,width:ze,height:we};if(y.length===1)return I;h[he]=I}return h};return ue[Symbol.toStringTag]==="Promise"?ue.then(ge):ge(ue)}function us(){const i={};for(let[o,a]of Object.entries(oe)){if(o==="parameters"){const s={};for(const[n,g]of Object.entries(a)){const P=s[n]={};for(let[V,u]of Object.entries(g))typeof u=="object"?"string"in u?u=u.string:u=Oe(u):typeof u=="function"&&(u=os(u.name)),P[V]=u}a=s}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());i[o]=a}return i}function Oe(i){const o=[];for(let[a,s]of Object.entries(i))typeof s=="object"&&(s=Oe(s)),o[a]=s;return o}function os(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[o,a,...s]=i.data;ls(o,s).then(([n,g])=>{postMessage([o,a,n],{transfer:g})}).catch(n=>{postMessage(["error",a,n])})};async function ls(i,o){switch(i){case"getKernelInfo":return[us(...o)];case"createPartialImageData":const s=await is(...o),n=[];if("data"in s&&"width"in s&&"height"in s)n.push(s.data.buffer);else for(const g of Object.entries(s))n.push(s.data.buffer);return[s,n];default:throw new Error(`Unknown function: ${i}`)}}
