import{u as Os,a as fs,b as Ss,c as js,d as hs,e as zs,f as ds,g as ws,h as As,i as Us,j as Vs,k as Ps,l as Is,m as qs,n as Rs,o as ks,p as xs,q as vs}from"./index-270629a1.js";Os();Ps();Is();fs();Ss();qs();Rs();ks();xs();js();hs();zs();ds();vs();ws();As();Us();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},r={},w={},R={},A={},T={},_={},l={},f={},s={},p={},a={},$={},L={},B={},G={},H={},J={},U={},N={},Q={},at={},k={},W={},x={},u={},O={},q={},nt={},X={},v={},Y={},E={},Z={},K={},C={},z={},ot={},it={},d={},ct={},ut={},mt={},Ht={},yt={},V={},bt={},Jt={},lt={},Nt={},gt={},Qt={},Wt={},pt={},Ot={},Xt={},ft={},Yt={},St={},Zt={},te={},jt={},ht={},ee={},zt={},se={},dt={},re={},ae={},wt={},At={},ne={},Ut={},oe={},Vt={},ie={},ce={},Pt={},It={},ue={},qt={},me={},Rt={},ye={},be={},kt={},xt={},vt={},Et={},Kt={},le={},tt={},ge={},pe={},Ct={},Oe={},Dt={},fe={},Se={},je={},he={},ze={},de={},we={},Ae={},Ue={},Ve={},Pe={},Ie={},qe={},Re={},ke={},xe={},ve={},Mt={},Ee={},Ke={},Ft={},Ce={},Tt={},De={},Me={},Fe={},Te={},_e={},$e={},Le={},_t={},Be={},Ge={},He={},Je={},Ne={},Qe={},We={},Xe={},Ye={},Ze={},ts={},es={},ss={},rs={},as={},ns={},os={},is={},cs={},us={},ms={},ys={},Es=new Uint8Array,Ks=new Uint8Array,Cs=new Uint8Array([0,0,0,0,0,64,143,192]),Ds=new Uint8Array,Ms=new Uint8Array([0,0,0,0,0,64,143,64]),Fs=new Uint8Array,Ts=new Uint8Array([0,0,0,0,0,0,105,64]),_s=new Uint8Array,$s=new Uint8Array,Ls=new Uint8Array([0,0,0,0,0,64,143,192]),Bs=new Uint8Array,Gs=new Uint8Array([0,0,0,0,0,64,143,64]),Hs=new Uint8Array,Js=new Uint8Array([0,0,0,0,0,0,89,64]),Ns=new Uint8Array,Qs=new Uint8Array,Ws=new Uint8Array([123,20,174,71,225,122,132,63]),Xs=new Uint8Array,Ys=new Uint8Array([0,0,0,0,0,0,36,64]),Zs=new Uint8Array,tr=new Uint8Array([0,0,0,0,0,0,240,63]),er=new Uint8Array,sr=new Uint8Array,rr=new Uint8Array([123,20,174,71,225,122,132,63]),ar=new Uint8Array,nr=new Uint8Array([0,0,0,0,0,0,89,64]),or=new Uint8Array,ir=new Uint8Array([0,0,0,0,0,0,240,63]),cr=new Uint8Array,ur=new Uint8Array,mr=new Uint8Array([0,0,0,0,0,0,0,0]),yr=new Uint8Array,br=new Uint8Array([31,133,235,81,184,30,25,64]),lr=new Uint8Array,gr=new Uint8Array([0,0,0,0,0,0,0,0]),pr=new Uint8Array,Or=new Uint8Array,fr=new Uint8Array,Sr=new Uint8Array,jr=new Uint8Array,hr=new Uint8Array,zr=new Uint8Array([4]),dr=new Uint8Array,wr=new Uint8Array,Ar=new Uint8Array([14,16,0,1]),Ur=new Uint8Array([99,111,109,46,101,118,101,114,101,116,116,45,99,104,117,114,99,104,46,106,117,115,116,105,110,0]),Vr=new Uint8Array([51,16,0,1]),Pr=new Uint8Array([74,117,115,116,105,110,32,69,118,101,114,101,116,116,45,67,104,117,114,99,104,0]),Ir=new Uint8Array,qr=new Uint8Array([1]),Rr=new Uint8Array([90,16,0,1]),kr=new Uint8Array([99,104,105,104,117,108,121,32,116,104,101,109,101,100,32,116,114,97,110,115,105,116,105,111,110,0]),xr=new Uint8Array,vr=new Uint8Array,Er=new Uint8Array,Kr=new Uint8Array([0]),Cr=new Uint8Array([1]),bs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Dr=new Uint8Array,Mr=new Uint8Array,Fr=new Uint8Array,Tr=new Uint8Array,_r=new Uint8Array([4]),$t=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ls=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),$r=new Uint8Array,Lr=new Uint8Array,Br=new Uint8Array,Gr=new Uint8Array,Hr=new Uint8Array([4]),Lt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Jr=new Uint8Array([0,0,72,67,0,0,200,66,0,0,128,63,0,0,128,63,0,0,0,0]),Nr=new Uint8Array([27,0]),Qr=new Uint8Array([27,0]),Wr=new Uint8Array,Xr=new Uint8Array,Yr=new Uint8Array,Zr=new Uint8Array;Object.assign(Ht,{slots:{0:yt,1:bt,2:lt,3:gt}});Object.assign(yt,{structure:r,memory:{array:Es},const:!0,slots:{0:V}});Object.assign(V,{structure:p});Object.assign(bt,{structure:s,memory:{array:Ks},const:!0,slots:{0:Jt}});Object.assign(Jt,{structure:a,memory:{array:Cs},const:!0});Object.assign(lt,{structure:s,memory:{array:Ds},const:!0,slots:{0:Nt}});Object.assign(Nt,{structure:a,memory:{array:Ms},const:!0});Object.assign(gt,{structure:s,memory:{array:Fs},const:!0,slots:{0:Qt}});Object.assign(Qt,{structure:a,memory:{array:Ts},const:!0});Object.assign(Wt,{slots:{0:pt,1:Ot,2:ft,3:St}});Object.assign(pt,{structure:r,memory:{array:_s},const:!0,slots:{0:V}});Object.assign(Ot,{structure:s,memory:{array:$s},const:!0,slots:{0:Xt}});Object.assign(Xt,{structure:a,memory:{array:Ls},const:!0});Object.assign(ft,{structure:s,memory:{array:Bs},const:!0,slots:{0:Yt}});Object.assign(Yt,{structure:a,memory:{array:Gs},const:!0});Object.assign(St,{structure:s,memory:{array:Hs},const:!0,slots:{0:Zt}});Object.assign(Zt,{structure:a,memory:{array:Js},const:!0});Object.assign(te,{slots:{0:jt,1:ht,2:zt,3:dt}});Object.assign(jt,{structure:r,memory:{array:Ns},const:!0,slots:{0:V}});Object.assign(ht,{structure:s,memory:{array:Qs},const:!0,slots:{0:ee}});Object.assign(ee,{structure:a,memory:{array:Ws},const:!0});Object.assign(zt,{structure:s,memory:{array:Xs},const:!0,slots:{0:se}});Object.assign(se,{structure:a,memory:{array:Ys},const:!0});Object.assign(dt,{structure:s,memory:{array:Zs},const:!0,slots:{0:re}});Object.assign(re,{structure:a,memory:{array:tr},const:!0});Object.assign(ae,{slots:{0:wt,1:At,2:Ut,3:Vt}});Object.assign(wt,{structure:r,memory:{array:er},const:!0,slots:{0:V}});Object.assign(At,{structure:s,memory:{array:sr},const:!0,slots:{0:ne}});Object.assign(ne,{structure:a,memory:{array:rr},const:!0});Object.assign(Ut,{structure:s,memory:{array:ar},const:!0,slots:{0:oe}});Object.assign(oe,{structure:a,memory:{array:nr},const:!0});Object.assign(Vt,{structure:s,memory:{array:or},const:!0,slots:{0:ie}});Object.assign(ie,{structure:a,memory:{array:ir},const:!0});Object.assign(ce,{slots:{0:Pt,1:It,2:qt,3:Rt}});Object.assign(Pt,{structure:r,memory:{array:cr},const:!0,slots:{0:V}});Object.assign(It,{structure:s,memory:{array:ur},const:!0,slots:{0:ue}});Object.assign(ue,{structure:a,memory:{array:mr},const:!0});Object.assign(qt,{structure:s,memory:{array:yr},const:!0,slots:{0:me}});Object.assign(me,{structure:a,memory:{array:br},const:!0});Object.assign(Rt,{structure:s,memory:{array:lr},const:!0,slots:{0:ye}});Object.assign(ye,{structure:a,memory:{array:gr},const:!0});Object.assign(be,{slots:{0:kt,1:xt,2:vt,3:Et,4:Kt}});Object.assign(kt,{structure:$,memory:{array:pr},const:!0,slots:{0:yt,1:bt,2:lt,3:gt}});Object.assign(xt,{structure:L,memory:{array:Or},const:!0,slots:{0:pt,1:Ot,2:ft,3:St}});Object.assign(vt,{structure:B,memory:{array:fr},const:!0,slots:{0:jt,1:ht,2:zt,3:dt}});Object.assign(Et,{structure:G,memory:{array:Sr},const:!0,slots:{0:wt,1:At,2:Ut,3:Vt}});Object.assign(Kt,{structure:H,memory:{array:jr},const:!0,slots:{0:Pt,1:It,2:qt,3:Rt}});Object.assign(le,{slots:{0:tt}});Object.assign(tt,{structure:l,memory:{array:hr},const:!0,slots:{0:ge}});Object.assign(ge,{structure:f,memory:{array:zr},const:!0});Object.assign(pe,{slots:{0:Ct}});Object.assign(Ct,{structure:U,memory:{array:dr},const:!0,slots:{0:tt}});Object.assign(Oe,{slots:{0:Dt}});Object.assign(Dt,{structure:U,memory:{array:wr},const:!0,slots:{0:tt}});Object.assign(fe,{slots:{0:Se,1:he,2:de,3:Ae,4:Ve,5:Pe,6:Ie}});Object.assign(Se,{structure:A,memory:{array:Ar},const:!0,slots:{0:je}});Object.assign(je,{structure:R,memory:{array:Ur},reloc:16781326});Object.assign(he,{structure:_,memory:{array:Vr},const:!0,slots:{0:ze}});Object.assign(ze,{structure:T,memory:{array:Pr},reloc:16781363});Object.assign(de,{structure:l,memory:{array:Ir},const:!0,slots:{0:we}});Object.assign(we,{structure:f,memory:{array:qr},const:!0});Object.assign(Ae,{structure:A,memory:{array:Rr},const:!0,slots:{0:Ue}});Object.assign(Ue,{structure:R,memory:{array:kr},reloc:16781402});Object.assign(Ve,{structure:J,memory:{array:xr},const:!0,slots:{0:kt,1:xt,2:vt,3:Et,4:Kt}});Object.assign(Pe,{structure:N,memory:{array:vr},const:!0,slots:{0:Ct}});Object.assign(Ie,{structure:Q,memory:{array:Er},const:!0,slots:{0:Dt}});Object.assign(qe,{slots:{0:Re,1:ke}});Object.assign(Re,{structure:O,memory:{array:Kr},const:!0});Object.assign(ke,{structure:O,memory:{array:Cr},const:!0});Object.assign(xe,{memory:{array:bs},slots:{0:ve}});Object.assign(ve,{structure:x,memory:{array:bs,offset:0,length:8},slots:{0:Mt}});Object.assign(Mt,{structure:W,memory:{array:Dr},reloc:0});Object.assign(Ee,{slots:{0:Ke,1:Ce,2:De}});Object.assign(Ke,{structure:r,memory:{array:Mr},const:!0,slots:{0:Ft}});Object.assign(Ft,{structure:k});Object.assign(Ce,{structure:r,memory:{array:Fr},const:!0,slots:{0:Tt}});Object.assign(Tt,{structure:nt});Object.assign(De,{structure:l,memory:{array:Tr},const:!0,slots:{0:Me}});Object.assign(Me,{structure:f,memory:{array:_r},const:!0});Object.assign(Fe,{memory:{array:$t},slots:{0:Te}});Object.assign(Te,{structure:X,memory:{array:$t},slots:{0:_e}});Object.assign(_e,{structure:x,memory:{array:$t,offset:0,length:8},slots:{0:Mt}});Object.assign($e,{memory:{array:ls},slots:{0:Le}});Object.assign(Le,{structure:E,memory:{array:ls,offset:0,length:8},slots:{0:_t}});Object.assign(_t,{structure:Y,memory:{array:$r},reloc:0});Object.assign(Be,{slots:{0:Ge,1:He,2:Je}});Object.assign(Ge,{structure:r,memory:{array:Lr},const:!0,slots:{0:Ft}});Object.assign(He,{structure:r,memory:{array:Br},const:!0,slots:{0:Tt}});Object.assign(Je,{structure:l,memory:{array:Gr},const:!0,slots:{0:Ne}});Object.assign(Ne,{structure:f,memory:{array:Hr},const:!0});Object.assign(Qe,{memory:{array:Lt},slots:{0:We}});Object.assign(We,{structure:Z,memory:{array:Lt},slots:{0:Xe}});Object.assign(Xe,{structure:E,memory:{array:Lt,offset:0,length:8},slots:{0:_t}});Object.assign(Ye,{memory:{array:Jr}});Object.assign(Ze,{slots:{0:ts}});Object.assign(ts,{structure:z,memory:{array:Nr},const:!0});Object.assign(es,{slots:{0:ss}});Object.assign(ss,{structure:d,memory:{array:Qr},const:!0});Object.assign(rs,{slots:{0:as,1:os,2:cs,3:ms}});Object.assign(as,{structure:r,memory:{array:Wr},const:!0,slots:{0:ns}});Object.assign(ns,{structure:at});Object.assign(os,{structure:r,memory:{array:Xr},const:!0,slots:{0:is}});Object.assign(is,{structure:v});Object.assign(cs,{structure:r,memory:{array:Yr},const:!0,slots:{0:us}});Object.assign(us,{structure:K});Object.assign(ms,{structure:r,memory:{array:Zr},const:!0,slots:{0:ys}});Object.assign(ys,{structure:C});const ta={argStruct:it,thunkId:2,name:"createOutput"},ea={argStruct:ut,thunkId:3,name:"createPartialOutput"};Object.assign(r,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(w,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:w}],methods:[]}});Object.assign(R,{...e,type:1,name:"[25:0]u8",length:25,byteSize:26,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:w}],methods:[]}});Object.assign(A,{...e,type:13,name:"*const [25:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:R}],methods:[]}});Object.assign(T,{...e,type:1,name:"[21:0]u8",length:21,byteSize:22,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:w}],methods:[]}});Object.assign(_,{...e,type:13,name:"*const [21:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[]}});Object.assign(l,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:l}],methods:[]}});Object.assign(f,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(s,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(p,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[]}});Object.assign(a,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:a}],methods:[]}});Object.assign($,{...e,type:2,name:"Struct3155081868",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:s},{...t,type:7,slot:2,name:"maxValue",structure:s},{...t,type:7,slot:3,name:"defaultValue",structure:s}],methods:[],template:Ht}});Object.assign(L,{...e,type:2,name:"Struct1412983404",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:s},{...t,type:7,slot:2,name:"maxValue",structure:s},{...t,type:7,slot:3,name:"defaultValue",structure:s}],methods:[],template:Wt}});Object.assign(B,{...e,type:2,name:"Struct3336507509",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:s},{...t,type:7,slot:2,name:"maxValue",structure:s},{...t,type:7,slot:3,name:"defaultValue",structure:s}],methods:[],template:te}});Object.assign(G,{...e,type:2,name:"Struct157438120",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:s},{...t,type:7,slot:2,name:"maxValue",structure:s},{...t,type:7,slot:3,name:"defaultValue",structure:s}],methods:[],template:ae}});Object.assign(H,{...e,type:2,name:"Struct416569239",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:s},{...t,type:7,slot:2,name:"maxValue",structure:s},{...t,type:7,slot:3,name:"defaultValue",structure:s}],methods:[],template:ce}});Object.assign(J,{...e,type:2,name:"Struct2842505572",align:1,instance:{members:[{...t,type:7,slot:0,name:"line",structure:$},{...t,type:7,slot:1,name:"height",structure:L},{...t,type:7,slot:2,name:"stemScale",structure:B},{...t,type:7,slot:3,name:"squiggleScale",structure:G},{...t,type:7,slot:4,name:"animationIndex",structure:H}],methods:[],template:be}});Object.assign(U,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:l}],methods:[],template:le}});Object.assign(N,{...e,type:2,name:"Struct3045313233",align:1,instance:{members:[{...t,type:7,slot:0,name:"inputImage",structure:U}],methods:[],template:pe}});Object.assign(Q,{...e,type:2,name:"Struct2973892749",align:1,instance:{members:[{...t,type:7,slot:0,name:"outputPixel",structure:U}],methods:[],template:Oe}});Object.assign(at,{...e,type:2,name:"chihuly.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:A},{...t,type:7,slot:1,name:"vendor",structure:_},{...t,type:7,slot:2,name:"version",structure:l},{...t,type:7,slot:3,name:"description",structure:A},{...t,type:7,slot:4,name:"parameters",structure:J},{...t,type:7,slot:5,name:"inputImages",structure:N},{...t,type:7,slot:6,name:"outputImages",structure:Q}],methods:[],template:fe}});Object.assign(k,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:w}],methods:[]}});Object.assign(W,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(x,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:W}],methods:[]}});Object.assign(u,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:u}],methods:[]}});Object.assign(O,{...e,type:11,name:"chihuly.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:O}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:O},{...t,type:7,slot:1,name:"display-p3",structure:O}],methods:[],template:qe}});Object.assign(q,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:q}],methods:[]}});Object.assign(nt,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:p}],methods:[]}});Object.assign(X,{...e,type:2,name:"chihuly.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:x},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:q}],methods:[],template:xe},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:r},{...t,type:7,slot:1,name:"FPixel",structure:r},{...t,type:7,slot:2,name:"channels",structure:l}],methods:[],template:Ee}});Object.assign(v,{...e,type:2,name:"chihuly.KernelInput(u8,chihuly.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"inputImage",structure:X}],methods:[],template:Fe}});Object.assign(Y,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(E,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:Y}],methods:[]}});Object.assign(Z,{...e,type:2,name:"chihuly.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:E},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:q}],methods:[],template:$e},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:r},{...t,type:7,slot:1,name:"FPixel",structure:r},{...t,type:7,slot:2,name:"channels",structure:l}],methods:[],template:Be}});Object.assign(K,{...e,type:2,name:"chihuly.KernelOutput(u8,chihuly.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"outputPixel",structure:Z}],methods:[],template:Qe}});Object.assign(C,{...e,type:2,name:"chihuly.KernelParameters(chihuly.kernel)",byteSize:20,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"line",structure:p},{...t,type:4,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"height",structure:p},{...t,type:4,bitOffset:64,bitSize:32,byteSize:4,slot:2,name:"stemScale",structure:p},{...t,type:4,bitOffset:96,bitSize:32,byteSize:4,slot:3,name:"squiggleScale",structure:p},{...t,type:4,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"animationIndex",structure:p}],methods:[],template:Ye}});Object.assign(z,{...e,type:10,name:"ErrorSet439145803",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:z}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:z}],methods:[],template:Ze}});Object.assign(ot,{...e,type:9,name:"ErrorSet439145803!chihuly.KernelOutput(u8,chihuly.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:K},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:z}],methods:[]}});Object.assign(it,{...e,type:5,name:"createOutput",byteSize:80,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...t,type:5,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:v},{...t,type:5,isRequired:!0,bitOffset:256,bitSize:160,byteSize:20,slot:1,name:"3",structure:C},{...t,type:5,isRequired:!0,bitOffset:416,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ot}],methods:[]}});Object.assign(d,{...e,type:10,name:"ErrorSet1591072673",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:d}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:d}],methods:[],template:es}});Object.assign(ct,{...e,type:9,name:"ErrorSet1591072673!chihuly.KernelOutput(u8,chihuly.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:K},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:d}],methods:[]}});Object.assign(ut,{...e,type:5,name:"createPartialOutput",byteSize:88,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:u},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:u},{...t,type:5,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:v},{...t,type:5,isRequired:!0,bitOffset:320,bitSize:160,byteSize:20,slot:1,name:"5",structure:C},{...t,type:5,isRequired:!0,bitOffset:480,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ct}],methods:[]}});Object.assign(mt,{...e,type:2,name:"chihuly",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:r},{...t,type:7,slot:1,name:"Input",structure:r},{...t,type:7,slot:2,name:"Output",structure:r},{...t,type:7,slot:3,name:"Parameters",structure:r}],methods:[ta,ea],template:rs}});const sa=[r,w,R,A,T,_,l,f,s,p,a,$,L,B,G,H,J,U,N,Q,at,k,W,x,u,O,q,nt,X,v,Y,E,Z,K,C,z,ot,it,d,ct,ut,mt],ra=mt,aa={runtimeSafety:!1,littleEndian:!0},et=Vs();et.getSpecialExports();et.recreateStructures(sa,aa);const na=(async()=>{const i=new URL("chihuly-1b47b550.wasm",import.meta.url).href;return fetch(i)})();et.loadModule(na);et.linkVariables(!0);const{constructor:oa}=ra,{createPartialOutput:ia,Input:ca,kernel:rt}=oa;function ua(i,m,c,o,n={},S={}){const j=[];for(const[b]of rt.inputImages)j.push(b);const P=[];for(const[b]of rt.outputImages)P.push(b);if(Array.isArray(n)){const b=n;n={};for(const[g,h]of j.entries())n[h]=b[g]}const y=new ca(void 0),D=[];let I;for(const b of j){let g=n[b];if(g||(j.length===1&&["data","width","height"].every(h=>!!n[h])?g=n:D.push(b)),y[b]=g,I){if(g.colorSpace!==I)throw new Error(`Input images must all use the same color space: ${I}`)}else I=g.colorSpace}if(D.length>0)throw new Error(`Missing input image${D.length>1?"s":""}: ${D.join(", ")}`);const st=ia(i,m,c,o,y,S),Bt=b=>{const g={};for(const h of P){const{data:{typedArray:M},width:Gt,height:gs}=b[h];let F;if(typeof ImageData=="function"){const ps=new Uint8ClampedArray(M.buffer,M.byteOffset,M.byteLength);F=new ImageData(ps,Gt,o,{colorSpace:I})}else F={data:M,width:Gt,height:gs};if(P.length===1)return F;g[h]=F}return g};return st[Symbol.toStringTag]==="Promise"?st.then(Bt):Bt(st)}function ma(){const i={};for(let[m,c]of rt){if(m==="parameters"){const o={};for(const[n,S]of c){const j=o[n]={};for(let[P,y]of S)typeof y=="object"?y=y.string??y.valueOf():typeof y=="function"&&(y=ya(y.name)),j[P]=y}c=o}else typeof c=="object"&&(c=c.string??c.valueOf());i[m]=c}return i}function ya(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[m,c,...o]=i.data;ba(m,o).then(([n,S])=>{postMessage([m,c,n],{transfer:S})}).catch(n=>{postMessage(["error",c,n])})};async function ba(i,m){switch(i){case"getKernelInfo":return[ma(...m)];case"createPartialImageData":const o=await ua(...m),n=[];if("data"in o&&"width"in o&&"height"in o)n.push(o.data.buffer);else for(const S of Object.entries(o))n.push(o.data.buffer);return[o,n];default:throw new Error(`Unknown function: ${i}`)}}
