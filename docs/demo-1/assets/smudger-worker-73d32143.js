import{u as Ke,a as Me,b as De,c as Fe,d as Te,e as _e,f as $e,g as Le,h as Be,i as Ge,j as He,k as Je,l as Ne,m as Qe,n as We,o as Xe,p as Ye,q as Ze}from"./index-67c7daa1.js";Ke();Je();Ne();Me();De();Qe();We();Xe();Ye();Fe();Te();_e();$e();Ze();Le();Be();Ge();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},p={},M={},D={},F={},T={},y={},f={},_={},$={},g={},L={},B={},h={},w={},G={},H={},A={},J={},N={},rt={},R={},Q={},k={},o={},l={},V={},nt={},W={},q={},X={},I={},Y={},v={},E={},d={},at={},it={},j={},ot={},ut={},ct={},Pt={},mt={},Vt={},yt={},Rt={},bt={},kt={},lt={},qt={},gt={},It={},vt={},pt={},Et={},Z={},xt={},Ct={},ft={},Kt={},Ot={},Mt={},Dt={},Ft={},Tt={},_t={},$t={},Lt={},Bt={},Gt={},Ht={},Jt={},Nt={},Qt={},Wt={},Xt={},Yt={},Zt={},St={},te={},ee={},zt={},se={},dt={},re={},ne={},ae={},ie={},oe={},ue={},ce={},jt={},me={},ye={},be={},le={},ge={},pe={},fe={},Oe={},Se={},ze={},de={},je={},he={},we={},Ae={},Ue={},Pe={},Ve={},Re={},ke={},qe={},Ie={},ts=new Uint8Array,es=new Uint8Array,ss=new Uint8Array([0,0,0,0,0,0,0,0]),rs=new Uint8Array,ns=new Uint8Array([0,0,0,0,0,0,20,64]),as=new Uint8Array,is=new Uint8Array([0,0,0,0,0,0,224,63]),os=new Uint8Array([220,17,0,1]),us=new Uint8Array([97,109,111,117,110,116,0]),cs=new Uint8Array,ms=new Uint8Array,ys=new Uint8Array([4]),bs=new Uint8Array,ls=new Uint8Array,gs=new Uint8Array([14,16,0,1]),ps=new Uint8Array([115,109,117,100,103,101,114,0]),fs=new Uint8Array([33,16,0,1]),Os=new Uint8Array([70,114,97,110,107,32,82,101,105,116,98,101,114,103,101,114,0]),Ss=new Uint8Array,zs=new Uint8Array([1]),ds=new Uint8Array([67,16,0,1]),js=new Uint8Array([103,101,110,101,114,97,116,101,115,32,97,32,115,109,117,100,103,101,100,32,112,97,116,116,101,114,110,0]),hs=new Uint8Array,ws=new Uint8Array,As=new Uint8Array,Us=new Uint8Array([0]),Ps=new Uint8Array([1]),ve=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Vs=new Uint8Array,Rs=new Uint8Array,ks=new Uint8Array,qs=new Uint8Array,Is=new Uint8Array([4]),ht=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ee=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),vs=new Uint8Array,Es=new Uint8Array,xs=new Uint8Array,Cs=new Uint8Array,Ks=new Uint8Array([4]),wt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ms=new Uint8Array([0,0,0,63]),Ds=new Uint8Array([27,0]),Fs=new Uint8Array([27,0]),Ts=new Uint8Array,_s=new Uint8Array,$s=new Uint8Array,Ls=new Uint8Array;Object.assign(Pt,{slots:{0:mt,1:yt,2:bt,3:lt,4:gt}});Object.assign(mt,{structure:s,memory:{array:ts},const:!0,slots:{0:Vt}});Object.assign(Vt,{structure:h});Object.assign(yt,{structure:g,memory:{array:es},const:!0,slots:{0:Rt}});Object.assign(Rt,{structure:w,memory:{array:ss},const:!0});Object.assign(bt,{structure:g,memory:{array:rs},const:!0,slots:{0:kt}});Object.assign(kt,{structure:w,memory:{array:ns},const:!0});Object.assign(lt,{structure:g,memory:{array:as},const:!0,slots:{0:qt}});Object.assign(qt,{structure:w,memory:{array:is},const:!0});Object.assign(gt,{structure:B,memory:{array:os},const:!0,slots:{0:It}});Object.assign(It,{structure:L,memory:{array:us},reloc:16781788});Object.assign(vt,{slots:{0:pt}});Object.assign(pt,{structure:G,memory:{array:cs},const:!0,slots:{0:mt,1:yt,2:bt,3:lt,4:gt}});Object.assign(Et,{slots:{0:Z}});Object.assign(Z,{structure:y,memory:{array:ms},const:!0,slots:{0:xt}});Object.assign(xt,{structure:f,memory:{array:ys},const:!0});Object.assign(Ct,{slots:{0:ft}});Object.assign(ft,{structure:A,memory:{array:bs},const:!0,slots:{0:Z}});Object.assign(Kt,{slots:{0:Ot}});Object.assign(Ot,{structure:A,memory:{array:ls},const:!0,slots:{0:Z}});Object.assign(Mt,{slots:{0:Dt,1:Tt,2:$t,3:Bt,4:Ht,5:Jt,6:Nt}});Object.assign(Dt,{structure:D,memory:{array:gs},const:!0,slots:{0:Ft}});Object.assign(Ft,{structure:M,memory:{array:ps},reloc:16781326});Object.assign(Tt,{structure:T,memory:{array:fs},const:!0,slots:{0:_t}});Object.assign(_t,{structure:F,memory:{array:Os},reloc:16781345});Object.assign($t,{structure:y,memory:{array:Ss},const:!0,slots:{0:Lt}});Object.assign(Lt,{structure:f,memory:{array:zs},const:!0});Object.assign(Bt,{structure:$,memory:{array:ds},const:!0,slots:{0:Gt}});Object.assign(Gt,{structure:_,memory:{array:js},reloc:16781379});Object.assign(Ht,{structure:H,memory:{array:hs},const:!0,slots:{0:pt}});Object.assign(Jt,{structure:J,memory:{array:ws},const:!0,slots:{0:ft}});Object.assign(Nt,{structure:N,memory:{array:As},const:!0,slots:{0:Ot}});Object.assign(Qt,{slots:{0:Wt,1:Xt}});Object.assign(Wt,{structure:l,memory:{array:Us},const:!0});Object.assign(Xt,{structure:l,memory:{array:Ps},const:!0});Object.assign(Yt,{memory:{array:ve},slots:{0:Zt}});Object.assign(Zt,{structure:k,memory:{array:ve,offset:0,length:8},slots:{0:St}});Object.assign(St,{structure:Q,memory:{array:Vs},reloc:0});Object.assign(te,{slots:{0:ee,1:se,2:re}});Object.assign(ee,{structure:s,memory:{array:Rs},const:!0,slots:{0:zt}});Object.assign(zt,{structure:R});Object.assign(se,{structure:s,memory:{array:ks},const:!0,slots:{0:dt}});Object.assign(dt,{structure:nt});Object.assign(re,{structure:y,memory:{array:qs},const:!0,slots:{0:ne}});Object.assign(ne,{structure:f,memory:{array:Is},const:!0});Object.assign(ae,{memory:{array:ht},slots:{0:ie}});Object.assign(ie,{structure:W,memory:{array:ht},slots:{0:oe}});Object.assign(oe,{structure:k,memory:{array:ht,offset:0,length:8},slots:{0:St}});Object.assign(ue,{memory:{array:Ee},slots:{0:ce}});Object.assign(ce,{structure:I,memory:{array:Ee,offset:0,length:8},slots:{0:jt}});Object.assign(jt,{structure:X,memory:{array:vs},reloc:0});Object.assign(me,{slots:{0:ye,1:be,2:le}});Object.assign(ye,{structure:s,memory:{array:Es},const:!0,slots:{0:zt}});Object.assign(be,{structure:s,memory:{array:xs},const:!0,slots:{0:dt}});Object.assign(le,{structure:y,memory:{array:Cs},const:!0,slots:{0:ge}});Object.assign(ge,{structure:f,memory:{array:Ks},const:!0});Object.assign(pe,{memory:{array:wt},slots:{0:fe}});Object.assign(fe,{structure:Y,memory:{array:wt},slots:{0:Oe}});Object.assign(Oe,{structure:I,memory:{array:wt,offset:0,length:8},slots:{0:jt}});Object.assign(Se,{memory:{array:Ms}});Object.assign(ze,{slots:{0:de}});Object.assign(de,{structure:d,memory:{array:Ds},const:!0});Object.assign(je,{slots:{0:he}});Object.assign(he,{structure:j,memory:{array:Fs},const:!0});Object.assign(we,{slots:{0:Ae,1:Pe,2:Re,3:qe}});Object.assign(Ae,{structure:s,memory:{array:Ts},const:!0,slots:{0:Ue}});Object.assign(Ue,{structure:rt});Object.assign(Pe,{structure:s,memory:{array:_s},const:!0,slots:{0:Ve}});Object.assign(Ve,{structure:q});Object.assign(Re,{structure:s,memory:{array:$s},const:!0,slots:{0:ke}});Object.assign(ke,{structure:v});Object.assign(qe,{structure:s,memory:{array:Ls},const:!0,slots:{0:Ie}});Object.assign(Ie,{structure:E});const Bs={argStruct:it,thunkId:2,name:"createOutput"},Gs={argStruct:ut,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(p,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(M,{...e,type:1,name:"[7:0]u8",length:7,byteSize:8,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(D,{...e,type:13,name:"*const [7:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(F,{...e,type:1,name:"[16:0]u8",length:16,byteSize:17,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(T,{...e,type:13,name:"*const [16:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(y,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:y}],methods:[]}});Object.assign(f,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(_,{...e,type:1,name:"[27:0]u8",length:27,byteSize:28,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign($,{...e,type:13,name:"*const [27:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[]}});Object.assign(g,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:g}],methods:[]}});Object.assign(L,{...e,type:1,name:"[6:0]u8",length:6,byteSize:7,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(B,{...e,type:13,name:"*const [6:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[]}});Object.assign(h,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:h}],methods:[]}});Object.assign(w,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:w}],methods:[]}});Object.assign(G,{...e,type:2,name:"Struct405863462",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:g},{...t,type:7,slot:2,name:"maxValue",structure:g},{...t,type:7,slot:3,name:"defaultValue",structure:g},{...t,type:7,slot:4,name:"description",structure:B}],methods:[],template:Pt}});Object.assign(H,{...e,type:2,name:"Struct395708839",align:1,instance:{members:[{...t,type:7,slot:0,name:"amount",structure:G}],methods:[],template:vt}});Object.assign(A,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:y}],methods:[],template:Et}});Object.assign(J,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:7,slot:0,name:"src",structure:A}],methods:[],template:Ct}});Object.assign(N,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:A}],methods:[],template:Kt}});Object.assign(rt,{...e,type:2,name:"smudger.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:D},{...t,type:7,slot:1,name:"vendor",structure:T},{...t,type:7,slot:2,name:"version",structure:y},{...t,type:7,slot:3,name:"description",structure:$},{...t,type:7,slot:4,name:"parameters",structure:H},{...t,type:7,slot:5,name:"inputImages",structure:J},{...t,type:7,slot:6,name:"outputImages",structure:N}],methods:[],template:Mt}});Object.assign(R,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(Q,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(k,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:Q}],methods:[]}});Object.assign(o,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:o}],methods:[]}});Object.assign(l,{...e,type:11,name:"smudger.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:l}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:l},{...t,type:7,slot:1,name:"display-p3",structure:l}],methods:[],template:Qt}});Object.assign(V,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(nt,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:h}],methods:[]}});Object.assign(W,{...e,type:2,name:"smudger.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:k},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:o},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:o},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:l},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:Yt},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:y}],methods:[],template:te}});Object.assign(q,{...e,type:2,name:"smudger.KernelInput(u8,smudger.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:W}],methods:[],template:ae}});Object.assign(X,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(I,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:X}],methods:[]}});Object.assign(Y,{...e,type:2,name:"smudger.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:I},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:o},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:o},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:l},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:ue},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:y}],methods:[],template:me}});Object.assign(v,{...e,type:2,name:"smudger.KernelOutput(u8,smudger.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:Y}],methods:[],template:pe}});Object.assign(E,{...e,type:2,name:"smudger.KernelParameters(smudger.kernel)",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"amount",structure:h}],methods:[],template:Se}});Object.assign(d,{...e,type:10,name:"ErrorSet1591848711",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:d}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:d}],methods:[],template:ze}});Object.assign(at,{...e,type:9,name:"ErrorSet1591848711!smudger.KernelOutput(u8,smudger.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:d}],methods:[]}});Object.assign(it,{...e,type:5,name:"createOutput",byteSize:64,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:o},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:o},{...t,type:5,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:q},{...t,type:5,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:1,name:"3",structure:E},{...t,type:5,isRequired:!0,bitOffset:288,bitSize:224,byteSize:28,slot:2,name:"retval",structure:at}],methods:[]}});Object.assign(j,{...e,type:10,name:"ErrorSet4228762458",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:j}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:j}],methods:[],template:je}});Object.assign(ot,{...e,type:9,name:"ErrorSet4228762458!smudger.KernelOutput(u8,smudger.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:j}],methods:[]}});Object.assign(ut,{...e,type:5,name:"createPartialOutput",byteSize:72,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:o},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:o},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:o},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:o},{...t,type:5,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:q},{...t,type:5,isRequired:!0,bitOffset:320,bitSize:32,byteSize:4,slot:1,name:"5",structure:E},{...t,type:5,isRequired:!0,bitOffset:352,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ot}],methods:[]}});Object.assign(ct,{...e,type:2,name:"smudger",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:s},{...t,type:7,slot:1,name:"Input",structure:s},{...t,type:7,slot:2,name:"Output",structure:s},{...t,type:7,slot:3,name:"Parameters",structure:s}],methods:[Bs,Gs],template:we}});const Hs=[s,p,M,D,F,T,y,f,_,$,g,L,B,h,w,G,H,A,J,N,rt,R,Q,k,o,l,V,nt,W,q,X,I,Y,v,E,d,at,it,j,ot,ut,ct],Js=ct,Ns={runtimeSafety:!1,littleEndian:!0},tt=He();tt.getSpecialExports();tt.recreateStructures(Hs,Ns);const Qs=(async()=>{const a=new URL("smudger-8a2c1c47.wasm",import.meta.url).href;return fetch(a)})();tt.loadModule(Qs);tt.linkVariables(!0);const{constructor:Ws}=Js,{createPartialOutput:Xs,Input:Ys,kernel:st}=Ws;function Zs(a,u,i,n,r={},O={}){const S=[];for(const[m]of st.inputImages)S.push(m);const U=[];for(const[m]of st.outputImages)U.push(m);if(Array.isArray(r)){const m=r;r={};for(const[b,z]of S.entries())r[z]=m[b]}const c=new Ys(void 0),x=[];let P;for(const m of S){let b=r[m];if(b||(S.length===1&&["data","width","height"].every(z=>!!r[z])?b=r:x.push(m)),c[m]=b,P){if(b.colorSpace!==P)throw new Error(`Input images must all use the same color space: ${P}`)}else P=b.colorSpace}if(x.length>0)throw new Error(`Missing input image${x.length>1?"s":""}: ${x.join(", ")}`);const et=Xs(a,u,i,n,c,O),At=m=>{const b={};for(const z of U){const{data:{typedArray:C},width:Ut,height:xe}=m[z];let K;if(typeof ImageData=="function"){const Ce=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);K=new ImageData(Ce,Ut,n,{colorSpace:P})}else K={data:C,width:Ut,height:xe};if(U.length===1)return K;b[z]=K}return b};return et[Symbol.toStringTag]==="Promise"?et.then(At):At(et)}function tr(){const a={};for(let[u,i]of st){if(u==="parameters"){const n={};for(const[r,O]of i){const S=n[r]={};for(let[U,c]of O)typeof c=="object"?c=c.string??c.valueOf():typeof c=="function"&&(c=er(c.name)),S[U]=c}i=n}else typeof i=="object"&&(i=i.string??i.valueOf());a[u]=i}return a}function er(a){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[a]}onmessage=async a=>{if(!Array.isArray(a.data))return;const[u,i,...n]=a.data;try{const[r,O]=await sr(u,n);postMessage([u,i,r],{transfer:O})}catch(r){postMessage(["error",i,r])}};async function sr(a,u){switch(a){case"getKernelInfo":return[tr(...u)];case"createPartialImageData":const n=await Zs(...u),r=[];if("data"in n&&"width"in n&&"height"in n)r.push(n.data.buffer);else for(const O of Object.entries(n))r.push(n.data.buffer);return[n,r];default:throw new Error(`Unknown function: ${a}`)}}postMessage("ready");
