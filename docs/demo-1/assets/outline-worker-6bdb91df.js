import{u as Be,a as Le,b as Ge,d as He,c as Je,e as Ne,f as Qe,g as We,h as Xe,i as Ye,j as Ze,k as et,l as tt,m as st,o as rt,n as at,p as nt,q as it}from"./index-422d9c98.js";Be();Le();Ge();He();Je();Ne();Qe();We();Xe();Ye();Ze();et();tt();st();rt();at();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},f={},se={},re={},_={},ae={},ne={},T={},b={},p={},ie={},ue={},$={},j={},oe={},r={},s={},le={},B={},me={},L={},ye={},G={},ce={},be={},H={},pe={},J={},h={},C={},O={},w={},S={},fe={},N={},V={},k={},R={},de={},Q={},Se={},W={},he={},X={},I={},q={},ge={},Y={},ze={},Z={},Pe={},A={},Oe={},we={},y={},Re={},P={},ee={},v={},qe={},Ae={},te={},x={},E={},Ce={},Ve={},ke={},Ie={},ve={},xe={},Ee={};Object.assign(f,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[],template:null},slot:5});Object.assign(se,{...t,type:1,name:"[7:0]u8",length:7,byteSize:8,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:f}],methods:[],template:null},slot:4});Object.assign(re,{...t,type:11,name:"*const [7:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:3});Object.assign(_,{...t,type:11,name:"*const *const [7:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:2});Object.assign(ae,{...t,type:1,name:"[12:0]u8",length:12,byteSize:13,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:f}],methods:[],template:null},slot:8});Object.assign(ne,{...t,type:11,name:"*const [12:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:7});Object.assign(T,{...t,type:11,name:"*const *const [12:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:6});Object.assign(b,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:10});Object.assign(p,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:b}],methods:[],template:null},slot:9});Object.assign(ie,{...t,type:1,name:"[0:0]u8",length:0,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:f}],methods:[],template:null},slot:13});Object.assign(ue,{...t,type:11,name:"*const [0:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:12});Object.assign($,{...t,type:11,name:"*const *const [0:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:11});Object.assign(j,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:j}],methods:[],template:null},slot:46});Object.assign(oe,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:j}],methods:[],template:null},slot:32});Object.assign(r,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[],template:null},slot:68});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:r}],methods:[],template:null},slot:67});const ut=new Uint8Array([]),ot=new Uint8Array([0,250,15,0]),lt=new Uint8Array([0,0,0,0,0,0,0,0]),mt=new Uint8Array([88,250,15,0]),yt=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(le,{...t,type:2,name:"Struct0020",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:ut},slots:{0:{structure:s,memory:{array:ot},slots:{0:{structure:r,memory:{array:lt}}}},1:{structure:s,memory:{array:mt},slots:{0:{structure:r,memory:{array:yt}}}}}}},slot:50});Object.assign(B,{...t,type:11,name:"Struct0014",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:49});const ct=new Uint8Array([]),bt=new Uint8Array([0,250,15,0]),pt=new Uint8Array([0,0,0,0,0,0,240,63]),ft=new Uint8Array([88,250,15,0]),dt=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(me,{...t,type:2,name:"Struct0021",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:ct},slots:{0:{structure:s,memory:{array:bt},slots:{0:{structure:r,memory:{array:pt}}}},1:{structure:s,memory:{array:ft},slots:{0:{structure:r,memory:{array:dt}}}}}}},slot:52});Object.assign(L,{...t,type:11,name:"Struct0015",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:51});const St=new Uint8Array([]),ht=new Uint8Array([0,250,15,0]),gt=new Uint8Array([154,153,153,153,153,153,185,63]),zt=new Uint8Array([88,250,15,0]),Ot=new Uint8Array([123,20,174,71,225,122,132,63]);Object.assign(ye,{...t,type:2,name:"Struct0022",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:St},slots:{0:{structure:s,memory:{array:ht},slots:{0:{structure:r,memory:{array:gt}}}},1:{structure:s,memory:{array:zt},slots:{0:{structure:r,memory:{array:Ot}}}}}}},slot:54});Object.assign(G,{...t,type:11,name:"Struct0016",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:53});Object.assign(ce,{...t,type:1,name:"[33:0]u8",length:33,byteSize:34,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:f}],methods:[],template:null},slot:57});Object.assign(be,{...t,type:11,name:"*const [33:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:56});Object.assign(H,{...t,type:11,name:"*const *const [33:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:55});const wt=new Uint8Array([]),Rt=new Uint8Array([170,170,170,170]),u=new Uint8Array([]),qt=new Uint8Array([170,170,170,170]),At=new Uint8Array([170,170,170,170]),Ut=new Uint8Array([88,248,15,0]),jt=new Uint8Array([125,33,16,0]),Pt=new Uint8Array([49,58,109,97,120,32,100,105,102,102,101,114,101,110,99,101,32,50,58,109,105,110,32,100,105,102,102,101,114,101,110,99,101,0]);Object.assign(pe,{...t,type:2,name:"Struct0010",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:oe},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:B},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:L},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:G},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:H}],methods:[],template:{memory:{array:wt},slots:{0:{structure:B,memory:{array:Rt},slots:{0:{structure:le,memory:{array:u},address:-1431655766}}},1:{structure:L,memory:{array:qt},slots:{0:{structure:me,memory:{array:u},address:-1431655766}}},2:{structure:G,memory:{array:At},slots:{0:{structure:ye,memory:{array:u},address:-1431655766}}},3:{structure:H,memory:{array:Ut},slots:{0:{structure:be,memory:{array:jt},slots:{0:{structure:ce,memory:{array:Pt},address:1057149}}}}}}}},slot:39});Object.assign(J,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:38});Object.assign(h,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:j}],methods:[],template:null},slot:33});const Ct=new Uint8Array([]),Vt=new Uint8Array([224,245,15,0]),kt=new Uint8Array([0,0,0,0,0,0,0,0]),It=new Uint8Array([8,246,15,0]),vt=new Uint8Array([0,0,0,0,0,0,0,0]),xt=new Uint8Array([48,246,15,0]),Et=new Uint8Array([0,0,0,0,0,0,0,0]),Kt=new Uint8Array([88,246,15,0]),Dt=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(C,{...t,type:2,name:"Struct0023",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:s}],methods:[],template:{memory:{array:Ct},slots:{0:{structure:s,memory:{array:Vt},slots:{0:{structure:r,memory:{array:kt}}}},1:{structure:s,memory:{array:It},slots:{0:{structure:r,memory:{array:vt}}}},2:{structure:s,memory:{array:xt},slots:{0:{structure:r,memory:{array:Et}}}},3:{structure:s,memory:{array:Kt},slots:{0:{structure:r,memory:{array:Dt}}}}}}},slot:59});Object.assign(O,{...t,type:11,name:"Struct0017",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:C}],methods:[],template:null},slot:58});const Ft=new Uint8Array([]),Mt=new Uint8Array([224,245,15,0]),_t=new Uint8Array([0,0,0,0,0,0,240,63]),Tt=new Uint8Array([8,246,15,0]),$t=new Uint8Array([0,0,0,0,0,0,240,63]),Bt=new Uint8Array([48,246,15,0]),Lt=new Uint8Array([0,0,0,0,0,0,240,63]),Gt=new Uint8Array([88,246,15,0]),Ht=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(w,{...t,type:2,name:"Struct0024",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:s}],methods:[],template:{memory:{array:Ft},slots:{0:{structure:s,memory:{array:Mt},slots:{0:{structure:r,memory:{array:_t}}}},1:{structure:s,memory:{array:Tt},slots:{0:{structure:r,memory:{array:$t}}}},2:{structure:s,memory:{array:Bt},slots:{0:{structure:r,memory:{array:Lt}}}},3:{structure:s,memory:{array:Gt},slots:{0:{structure:r,memory:{array:Ht}}}}}}},slot:61});Object.assign(S,{...t,type:11,name:"Struct0018",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:w}],methods:[],template:null},slot:60});const Jt=new Uint8Array([]),Nt=new Uint8Array([16,249,15,0]),Qt=new Uint8Array([0,0,0,0,0,0,0,0]),Wt=new Uint8Array([88,249,15,0]),Xt=new Uint8Array([0,0,0,0,0,0,0,0]),Yt=new Uint8Array([176,249,15,0]),Zt=new Uint8Array([0,0,0,0,0,0,0,0]),es=new Uint8Array([40,250,15,0]),ts=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(fe,{...t,type:2,name:"Struct0025",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:s}],methods:[],template:{memory:{array:Jt},slots:{0:{structure:s,memory:{array:Nt},slots:{0:{structure:r,memory:{array:Qt}}}},1:{structure:s,memory:{array:Wt},slots:{0:{structure:r,memory:{array:Xt}}}},2:{structure:s,memory:{array:Yt},slots:{0:{structure:r,memory:{array:Zt}}}},3:{structure:s,memory:{array:es},slots:{0:{structure:r,memory:{array:ts}}}}}}},slot:63});Object.assign(N,{...t,type:11,name:"Struct0019",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:62});Object.assign(V,{...t,type:1,name:"[16:0]u8",length:16,byteSize:17,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:f}],methods:[],template:null},slot:66});Object.assign(k,{...t,type:11,name:"*const [16:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:V}],methods:[],template:null},slot:65});Object.assign(R,{...t,type:11,name:"*const *const [16:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:k}],methods:[],template:null},slot:64});const ss=new Uint8Array([]),rs=new Uint8Array([170,170,170,170]),as=new Uint8Array([170,170,170,170]),ns=new Uint8Array([170,170,170,170]),is=new Uint8Array([128,248,15,0]),us=new Uint8Array([108,33,16,0]),os=new Uint8Array([102,111,114,101,103,114,111,117,110,100,32,99,111,108,111,114,0]);Object.assign(de,{...t,type:2,name:"Struct0011",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:h},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:O},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:S},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:N},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:R}],methods:[],template:{memory:{array:ss},slots:{0:{structure:O,memory:{array:rs},slots:{0:{structure:C,memory:{array:u},address:-1431655766}}},1:{structure:S,memory:{array:as},slots:{0:{structure:w,memory:{array:u},address:-1431655766}}},2:{structure:N,memory:{array:ns},slots:{0:{structure:fe,memory:{array:u},address:-1431655766}}},3:{structure:R,memory:{array:is},slots:{0:{structure:k,memory:{array:us},slots:{0:{structure:V,memory:{array:os},address:1057132}}}}}}}},slot:41});Object.assign(Q,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:de}],methods:[],template:null},slot:40});const ls=new Uint8Array([]),ms=new Uint8Array([170,170,170,170]),ys=new Uint8Array([170,170,170,170]),cs=new Uint8Array([170,170,170,170]),bs=new Uint8Array([16,249,15,0]),ps=new Uint8Array([91,33,16,0]),fs=new Uint8Array([98,97,99,107,103,114,111,117,110,100,32,99,111,108,111,114,0]);Object.assign(Se,{...t,type:2,name:"Struct0012",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:h},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:O},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:S},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:S},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:R}],methods:[],template:{memory:{array:ls},slots:{0:{structure:O,memory:{array:ms},slots:{0:{structure:C,memory:{array:u},address:-1431655766}}},1:{structure:S,memory:{array:ys},slots:{0:{structure:w,memory:{array:u},address:-1431655766}}},2:{structure:S,memory:{array:cs},slots:{0:{structure:w,memory:{array:u},address:-1431655766}}},3:{structure:R,memory:{array:bs},slots:{0:{structure:k,memory:{array:ps},slots:{0:{structure:V,memory:{array:fs},address:1057115}}}}}}}},slot:43});Object.assign(W,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Se}],methods:[],template:null},slot:42});const ds=new Uint8Array([]),Ss=new Uint8Array([170,170,170,170]),hs=new Uint8Array([170,170,170,170]),gs=new Uint8Array([170,170,170,170]);Object.assign(he,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"difference",structure:J},{...e,type:8,isRequired:!1,slot:1,name:"color",structure:Q},{...e,type:8,isRequired:!1,slot:2,name:"bgcolor",structure:W}],methods:[],template:{memory:{array:ds},slots:{0:{structure:J,memory:{array:Ss},slots:{0:{structure:pe,memory:{array:u},address:-1431655766}}},1:{structure:Q,memory:{array:hs},slots:{0:{structure:de,memory:{array:u},address:-1431655766}}},2:{structure:W,memory:{array:gs},slots:{0:{structure:Se,memory:{array:u},address:-1431655766}}}}}},slot:15});Object.assign(X,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:he}],methods:[],template:null},slot:14});const zs=new Uint8Array([]),Os=new Uint8Array([48,250,15,0]),ws=new Uint8Array([4,0,0,0]);Object.assign(I,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:zs},slots:{0:{structure:p,memory:{array:Os},slots:{0:{structure:b,memory:{array:ws}}}}}}},slot:45});Object.assign(q,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:I}],methods:[],template:null},slot:44});const Rs=new Uint8Array([]),qs=new Uint8Array([170,170,170,170]);Object.assign(ge,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:q}],methods:[],template:{memory:{array:Rs},slots:{0:{structure:q,memory:{array:qs},slots:{0:{structure:I,memory:{array:u},address:-1431655766}}}}}},slot:17});Object.assign(Y,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ge}],methods:[],template:null},slot:16});const As=new Uint8Array([]),Us=new Uint8Array([170,170,170,170]);Object.assign(ze,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:q}],methods:[],template:{memory:{array:As},slots:{0:{structure:q,memory:{array:Us},slots:{0:{structure:I,memory:{array:u},address:-1431655766}}}}}},slot:19});Object.assign(Z,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ze}],methods:[],template:null},slot:18});const js=new Uint8Array([]),Ps=new Uint8Array([]),Cs=new Uint8Array([28,251,15,0]),Vs=new Uint8Array([245,36,16,0]),ks=new Uint8Array([111,117,116,108,105,110,101,0]),Is=new Uint8Array([92,251,15,0]),vs=new Uint8Array([232,36,16,0]),xs=new Uint8Array([83,104,111,103,111,32,75,105,109,117,114,97,0]),Es=new Uint8Array([156,251,15,0]),Ks=new Uint8Array([1,0,0,0]),Ds=new Uint8Array([244,251,15,0]),Fs=new Uint8Array([231,36,16,0]),Ms=new Uint8Array([0]),_s=new Uint8Array([170,170,170,170]),Ts=new Uint8Array([170,170,170,170]),$s=new Uint8Array([170,170,170,170]);Object.assign(Pe,{...t,type:2,name:"outline.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:js}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:_},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:T},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:p},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:$},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:X},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:Y},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:Z}],methods:[],template:{memory:{array:Ps},slots:{0:{structure:_,memory:{array:Cs},slots:{0:{structure:re,memory:{array:Vs},slots:{0:{structure:se,memory:{array:ks},address:1058037}}}}},1:{structure:T,memory:{array:Is},slots:{0:{structure:ne,memory:{array:vs},slots:{0:{structure:ae,memory:{array:xs},address:1058024}}}}},2:{structure:p,memory:{array:Es},slots:{0:{structure:b,memory:{array:Ks}}}},3:{structure:$,memory:{array:Ds},slots:{0:{structure:ue,memory:{array:Fs},slots:{0:{structure:ie,memory:{array:Ms},address:1058023}}}}},4:{structure:X,memory:{array:_s},slots:{0:{structure:he,memory:{array:u},address:-1431655766}}},5:{structure:Y,memory:{array:Ts},slots:{0:{structure:ge,memory:{array:u},address:-1431655766}}},6:{structure:Z,memory:{array:$s},slots:{0:{structure:ze,memory:{array:u},address:-1431655766}}}}}},slot:1});Object.assign(A,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:f}],methods:[],template:null},slot:24});Object.assign(Oe,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:A}],methods:[],template:null},slot:23});Object.assign(we,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Oe}],methods:[],template:null},slot:22});Object.assign(y,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:25});const Bs=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(Re,{...t,type:9,name:"outline.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:b},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:b}],methods:[],template:{memory:{array:Bs}}},slot:26});Object.assign(P,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:P}],methods:[],template:null},slot:27});const Ls=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Gs=new Uint8Array([]),Hs=new Uint8Array([216,249,15,0]),Js=new Uint8Array([4,0,0,0]);Object.assign(ee,{...t,type:2,name:"outline.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:we},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Re},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:{memory:{array:Ls}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:A},{...e,type:7,isRequired:!1,name:"FPixel",structure:h},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:Gs},slots:{0:{structure:p,memory:{array:Hs},slots:{0:{structure:b,memory:{array:Js}}}}}}},slot:21});const Ns=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Qs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ws=new Uint8Array([0,0,0,0,0,0,0,0]),Ke=new Uint8Array([]);Object.assign(v,{...t,type:2,name:"outline.KernelInput(u8,outline.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:ee}],methods:[],template:{memory:{array:Ns},slots:{0:{structure:ee,memory:{array:Qs},slots:{0:{structure:we,memory:{array:Ws},slots:{0:{structure:Oe,memory:{array:Ke}}}}}}}}},slot:20});Object.assign(qe,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:A}],methods:[],template:null},slot:23});Object.assign(Ae,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:qe}],methods:[],template:null},slot:30});const Xs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ys=new Uint8Array([]),Zs=new Uint8Array([216,249,15,0]),er=new Uint8Array([4,0,0,0]);Object.assign(te,{...t,type:2,name:"outline.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Ae},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Re},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:{memory:{array:Xs}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:A},{...e,type:7,isRequired:!1,name:"FPixel",structure:h},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:Ys},slots:{0:{structure:p,memory:{array:Zs},slots:{0:{structure:b,memory:{array:er}}}}}}},slot:29});const tr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),sr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),rr=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(x,{...t,type:2,name:"outline.KernelOutput(u8,outline.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:te}],methods:[],template:{memory:{array:tr},slots:{0:{structure:te,memory:{array:sr},slots:{0:{structure:Ae,memory:{array:rr},slots:{0:{structure:qe,memory:{array:Ke}}}}}}}}},slot:28});const ar=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,205,204,204,61,10,215,35,60,0,0,0,0,0,0,0,0]);Object.assign(E,{...t,type:2,name:"outline.KernelParameters(outline.kernel)",length:1,byteSize:48,align:4,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:256,bitSize:64,byteSize:8,slot:0,name:"difference",structure:oe},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:128,byteSize:16,slot:1,name:"color",structure:h},{...e,type:6,isRequired:!1,bitOffset:128,bitSize:128,byteSize:16,slot:2,name:"bgcolor",structure:h}],methods:[],template:{memory:{array:ar}}},slot:31});Object.assign(Ce,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(outline.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:47});Object.assign(Ve,{...t,type:7,name:"ErrorSet0000!outline.KernelOutput(u8,outline.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:x},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Ce}],methods:[],template:null},slot:36});Object.assign(ke,{...t,type:3,name:"createOutput",length:1,byteSize:112,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:6,bitOffset:448,bitSize:192,byteSize:24,slot:2,name:"2",structure:v},{...e,type:6,bitOffset:0,bitSize:384,byteSize:48,slot:3,name:"3",structure:E},{...e,type:6,bitOffset:640,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Ve}],methods:[],template:null},slot:34});Object.assign(Ie,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(outline.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:48});Object.assign(ve,{...t,type:7,name:"ErrorSet0001!outline.KernelOutput(u8,outline.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:x},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Ie}],methods:[],template:null},slot:37});Object.assign(xe,{...t,type:3,name:"createPartialOutput",length:1,byteSize:128,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:3,bitOffset:448,bitSize:32,byteSize:4,slot:2,name:"2",structure:y},{...e,type:3,bitOffset:480,bitSize:32,byteSize:4,slot:3,name:"3",structure:y},{...e,type:6,bitOffset:512,bitSize:192,byteSize:24,slot:4,name:"4",structure:v},{...e,type:6,bitOffset:0,bitSize:384,byteSize:48,slot:5,name:"5",structure:E},{...e,type:6,bitOffset:704,bitSize:224,byteSize:28,slot:6,name:"retval",structure:ve}],methods:[],template:null},slot:35});const nr={argStruct:ke,thunk:1,name:"createOutput"},ir={argStruct:xe,thunk:6,name:"createPartialOutput"};Object.assign(Ee,{...t,type:2,name:"outline",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Ke}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:Pe},{...e,type:7,isRequired:!1,name:"Input",structure:v},{...e,type:7,isRequired:!1,name:"Output",structure:x},{...e,type:7,isRequired:!1,name:"Parameters",structure:E}],methods:[nr,ir],template:null},slot:0});const ur=[f,se,re,_,ae,ne,T,b,p,ie,ue,$,j,oe,r,s,le,B,me,L,ye,G,ce,be,H,pe,J,h,C,O,w,S,fe,N,V,k,R,de,Q,Se,W,he,X,I,q,ge,Y,ze,Z,Pe,A,Oe,we,y,Re,P,ee,v,qe,Ae,te,x,E,Ce,Ve,ke,Ie,ve,xe,Ee],or=nt(ur),lr=Ee.constructor,mr=(async()=>{const o=new URL("outline-e284b4f4.wasm",import.meta.url).href;return fetch(o)})();it(mr,{...or,writeBack:!0});const{createOutput:hr,createPartialOutput:yr,kernel:je,Input:cr,Output:gr,Parameters:zr}=lr;function br(o,m,n,a,i={},g={}){if(Array.isArray(i)){const d=i;i={};for(const[c,z]of Object.keys(je.inputImages).entries())i[z]=d[c]}const K=new cr(void 0),D=Object.keys(je.inputImages),l=[];let U;for(const d of D){let c=i[d];if(c||(D.length===1&&["data","width","height"].every(z=>!!i[z])?c=i:l.push(d)),K[d]=c,U){if(c.colorSpace!==U)throw new Error(`Input images must all use the same color space: ${U}`)}else U=c.colorSpace}if(l.length>0)throw new Error(`Missing input image${l.length>1?"s":""}: ${l.join(", ")}`);const Ue=yr(o,m,n,a,K,g),De=d=>{const c=Object.keys(d),z={};for(const Fe of c){const{data:{typedArray:F},width:Me,height:Te}=d[Fe];let M;if(typeof ImageData=="function"){const $e=new Uint8ClampedArray(F.buffer,F.byteOffset,F.byteLength);M=new ImageData($e,Me,a,{colorSpace:U})}else M={data:F,width:Me,height:Te};if(c.length===1)return M;z[Fe]=M}return z};return Ue[Symbol.toStringTag]==="Promise"?Ue.then(De):De(Ue)}function pr(){const o={};for(let[m,n]of Object.entries(je)){if(m==="parameters"){const a={};for(const[i,g]of Object.entries(n)){const K=a[i]={};for(let[D,l]of Object.entries(g))typeof l=="object"?"string"in l?l=l.string:l=_e(l):typeof l=="function"&&(l=fr(l.name)),K[D]=l}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());o[m]=n}return o}function _e(o){const m=[];for(let[n,a]of Object.entries(o))typeof a=="object"&&(a=_e(a)),m[n]=a;return m}function fr(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[m,n,...a]=o.data;dr(m,a).then(([i,g])=>{postMessage([m,n,i],{transfer:g})}).catch(i=>{postMessage(["error",n,i])})};async function dr(o,m){switch(o){case"getKernelInfo":return[pr(...m)];case"createPartialImageData":const a=await br(...m),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const g of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${o}`)}}
