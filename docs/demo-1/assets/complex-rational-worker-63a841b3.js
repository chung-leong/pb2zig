import{u as ut,a as ot,b as mt,d as lt,c as yt,e as ct,f as bt,g as pt,h as dt,i as ft,j as St,k as ht,l as gt,m as zt,o as wt,n as Ot,p as At,q as Ut}from"./index-422d9c98.js";ut();ot();mt();lt();yt();ct();bt();pt();dt();ft();St();ht();gt();zt();wt();Ot();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},h={},le={},ye={},D={},ce={},be={},F={},p={},d={},pe={},de={},M={},q={},y={},r={},s={},fe={},_={},Se={},T={},he={},$={},ge={},B={},ze={},L={},we={},G={},Oe={},H={},Ae={},J={},Ue={},N={},A={},S={},Re={},Q={},qe={},W={},je={},X={},Pe={},Y={},Ve={},Z={},Ce={},ee={},P={},w={},xe={},te={},ke={},se={},Ie={},re={},ve={},ae={},Ee={},ne={},V={},O={},Ke={},ie={},De={},ue={},He={},U={},Fe={},Me={},c={},_e={},j={},Te={},oe={},C={},$e={},Be={},me={},x={},k={},Je={},Ne={},Qe={},We={},Xe={},Ye={},Ze={};Object.assign(h,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:h}],methods:[],template:null},slot:5});Object.assign(le,{...t,type:1,name:"[16:0]u8",length:16,byteSize:17,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:h}],methods:[],template:null},slot:4});Object.assign(ye,{...t,type:11,name:"*const [16:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:3});Object.assign(D,{...t,type:11,name:"*const *const [16:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:2});Object.assign(ce,{...t,type:1,name:"[8:0]u8",length:8,byteSize:9,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:h}],methods:[],template:null},slot:8});Object.assign(be,{...t,type:11,name:"*const [8:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:7});Object.assign(F,{...t,type:11,name:"*const *const [8:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:6});Object.assign(p,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[],template:null},slot:10});Object.assign(d,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:p}],methods:[],template:null},slot:9});Object.assign(pe,{...t,type:1,name:"[37:0]u8",length:37,byteSize:38,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:h}],methods:[],template:null},slot:13});Object.assign(de,{...t,type:11,name:"*const [37:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:12});Object.assign(M,{...t,type:11,name:"*const *const [37:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:de}],methods:[],template:null},slot:11});Object.assign(q,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:52});Object.assign(y,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:32});Object.assign(r,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[],template:null},slot:86});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:r}],methods:[],template:null},slot:85});const Rt=new Uint8Array([]),qt=new Uint8Array([16,250,15,0]),jt=new Uint8Array([0,0,0,0,0,0,36,192]),Pt=new Uint8Array([56,250,15,0]),Vt=new Uint8Array([0,0,0,0,0,0,36,192]);Object.assign(fe,{...t,type:2,name:"Struct0035",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Rt},slots:{0:{structure:s,memory:{array:qt},slots:{0:{structure:r,memory:{array:jt}}}},1:{structure:s,memory:{array:Pt},slots:{0:{structure:r,memory:{array:Vt}}}}}}},slot:56});Object.assign(_,{...t,type:11,name:"Struct0020",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:55});const Ct=new Uint8Array([]),xt=new Uint8Array([16,250,15,0]),kt=new Uint8Array([0,0,0,0,0,0,36,64]),It=new Uint8Array([56,250,15,0]),vt=new Uint8Array([0,0,0,0,0,0,36,64]);Object.assign(Se,{...t,type:2,name:"Struct0036",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Ct},slots:{0:{structure:s,memory:{array:xt},slots:{0:{structure:r,memory:{array:kt}}}},1:{structure:s,memory:{array:It},slots:{0:{structure:r,memory:{array:vt}}}}}}},slot:58});Object.assign(T,{...t,type:11,name:"Struct0021",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Se}],methods:[],template:null},slot:57});const Et=new Uint8Array([]),Kt=new Uint8Array([16,250,15,0]),Dt=new Uint8Array([0,0,0,0,0,0,240,63]),Ft=new Uint8Array([56,250,15,0]),Mt=new Uint8Array([215,163,112,61,10,215,227,63]);Object.assign(he,{...t,type:2,name:"Struct0037",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Et},slots:{0:{structure:s,memory:{array:Kt},slots:{0:{structure:r,memory:{array:Dt}}}},1:{structure:s,memory:{array:Ft},slots:{0:{structure:r,memory:{array:Mt}}}}}}},slot:60});Object.assign($,{...t,type:11,name:"Struct0022",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:he}],methods:[],template:null},slot:59});const _t=new Uint8Array([]),Tt=new Uint8Array([170,170,170,170]),a=new Uint8Array([]),$t=new Uint8Array([170,170,170,170]),Bt=new Uint8Array([170,170,170,170]);Object.assign(ge,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:_},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:T},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:$}],methods:[],template:{memory:{array:_t},slots:{0:{structure:_,memory:{array:Tt},slots:{0:{structure:fe,memory:{array:a},address:-1431655766}}},1:{structure:T,memory:{array:$t},slots:{0:{structure:Se,memory:{array:a},address:-1431655766}}},2:{structure:$,memory:{array:Bt},slots:{0:{structure:he,memory:{array:a},address:-1431655766}}}}}},slot:38});Object.assign(B,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ge}],methods:[],template:null},slot:37});const Lt=new Uint8Array([]),Gt=new Uint8Array([16,250,15,0]),Ht=new Uint8Array([0,0,0,0,0,64,127,192]),Jt=new Uint8Array([56,250,15,0]),Nt=new Uint8Array([0,0,0,0,0,64,127,192]);Object.assign(ze,{...t,type:2,name:"Struct0038",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Lt},slots:{0:{structure:s,memory:{array:Gt},slots:{0:{structure:r,memory:{array:Ht}}}},1:{structure:s,memory:{array:Jt},slots:{0:{structure:r,memory:{array:Nt}}}}}}},slot:62});Object.assign(L,{...t,type:11,name:"Struct0023",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ze}],methods:[],template:null},slot:61});const Qt=new Uint8Array([]),Wt=new Uint8Array([16,250,15,0]),Xt=new Uint8Array([0,0,0,0,0,64,127,64]),Yt=new Uint8Array([56,250,15,0]),Zt=new Uint8Array([0,0,0,0,0,64,127,64]);Object.assign(we,{...t,type:2,name:"Struct0039",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Qt},slots:{0:{structure:s,memory:{array:Wt},slots:{0:{structure:r,memory:{array:Xt}}}},1:{structure:s,memory:{array:Yt},slots:{0:{structure:r,memory:{array:Zt}}}}}}},slot:64});Object.assign(G,{...t,type:11,name:"Struct0024",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:we}],methods:[],template:null},slot:63});const es=new Uint8Array([]),ts=new Uint8Array([16,250,15,0]),ss=new Uint8Array([0,0,0,0,0,128,85,192]),rs=new Uint8Array([56,250,15,0]),as=new Uint8Array([0,0,0,0,0,0,54,64]);Object.assign(Oe,{...t,type:2,name:"Struct0040",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:es},slots:{0:{structure:s,memory:{array:ts},slots:{0:{structure:r,memory:{array:ss}}}},1:{structure:s,memory:{array:rs},slots:{0:{structure:r,memory:{array:as}}}}}}},slot:66});Object.assign(H,{...t,type:11,name:"Struct0025",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Oe}],methods:[],template:null},slot:65});const ns=new Uint8Array([]),is=new Uint8Array([170,170,170,170]),us=new Uint8Array([170,170,170,170]),os=new Uint8Array([170,170,170,170]);Object.assign(Ae,{...t,type:2,name:"Struct0014",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:L},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:G},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:H}],methods:[],template:{memory:{array:ns},slots:{0:{structure:L,memory:{array:is},slots:{0:{structure:ze,memory:{array:a},address:-1431655766}}},1:{structure:G,memory:{array:us},slots:{0:{structure:we,memory:{array:a},address:-1431655766}}},2:{structure:H,memory:{array:os},slots:{0:{structure:Oe,memory:{array:a},address:-1431655766}}}}}},slot:40});Object.assign(J,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ae}],methods:[],template:null},slot:39});const ms=new Uint8Array([]),ls=new Uint8Array([16,250,15,0]),ys=new Uint8Array([0,0,0,0,0,0,240,191]),cs=new Uint8Array([56,250,15,0]),bs=new Uint8Array([0,0,0,0,0,0,240,191]);Object.assign(Ue,{...t,type:2,name:"Struct0041",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:ms},slots:{0:{structure:s,memory:{array:ls},slots:{0:{structure:r,memory:{array:ys}}}},1:{structure:s,memory:{array:cs},slots:{0:{structure:r,memory:{array:bs}}}}}}},slot:68});Object.assign(N,{...t,type:11,name:"Struct0026",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ue}],methods:[],template:null},slot:67});const ps=new Uint8Array([]),ds=new Uint8Array([112,246,15,0]),fs=new Uint8Array([0,0,0,0,0,0,240,63]),Ss=new Uint8Array([152,246,15,0]),hs=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(A,{...t,type:2,name:"Struct0042",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:ps},slots:{0:{structure:s,memory:{array:ds},slots:{0:{structure:r,memory:{array:fs}}}},1:{structure:s,memory:{array:Ss},slots:{0:{structure:r,memory:{array:hs}}}}}}},slot:70});Object.assign(S,{...t,type:11,name:"Struct0027",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:A}],methods:[],template:null},slot:69});const gs=new Uint8Array([]),zs=new Uint8Array([16,250,15,0]),ws=new Uint8Array([123,20,174,71,225,122,148,191]),Os=new Uint8Array([56,250,15,0]),As=new Uint8Array([123,20,174,71,225,122,148,191]);Object.assign(Re,{...t,type:2,name:"Struct0043",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:gs},slots:{0:{structure:s,memory:{array:zs},slots:{0:{structure:r,memory:{array:ws}}}},1:{structure:s,memory:{array:Os},slots:{0:{structure:r,memory:{array:As}}}}}}},slot:72});Object.assign(Q,{...t,type:11,name:"Struct0028",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Re}],methods:[],template:null},slot:71});const Us=new Uint8Array([]),Rs=new Uint8Array([170,170,170,170]),qs=new Uint8Array([170,170,170,170]),js=new Uint8Array([170,170,170,170]);Object.assign(qe,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:N},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:S},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:Q}],methods:[],template:{memory:{array:Us},slots:{0:{structure:N,memory:{array:Rs},slots:{0:{structure:Ue,memory:{array:a},address:-1431655766}}},1:{structure:S,memory:{array:qs},slots:{0:{structure:A,memory:{array:a},address:-1431655766}}},2:{structure:Q,memory:{array:js},slots:{0:{structure:Re,memory:{array:a},address:-1431655766}}}}}},slot:42});Object.assign(W,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:qe}],methods:[],template:null},slot:41});const Ps=new Uint8Array([]),Vs=new Uint8Array([16,250,15,0]),Cs=new Uint8Array([0,0,0,0,0,0,89,192]),xs=new Uint8Array([56,250,15,0]),ks=new Uint8Array([0,0,0,0,0,0,89,192]);Object.assign(je,{...t,type:2,name:"Struct0044",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Ps},slots:{0:{structure:s,memory:{array:Vs},slots:{0:{structure:r,memory:{array:Cs}}}},1:{structure:s,memory:{array:xs},slots:{0:{structure:r,memory:{array:ks}}}}}}},slot:74});Object.assign(X,{...t,type:11,name:"Struct0029",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:je}],methods:[],template:null},slot:73});const Is=new Uint8Array([]),vs=new Uint8Array([16,250,15,0]),Es=new Uint8Array([0,0,0,0,0,0,89,64]),Ks=new Uint8Array([56,250,15,0]),Ds=new Uint8Array([0,0,0,0,0,0,89,64]);Object.assign(Pe,{...t,type:2,name:"Struct0045",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Is},slots:{0:{structure:s,memory:{array:vs},slots:{0:{structure:r,memory:{array:Es}}}},1:{structure:s,memory:{array:Ks},slots:{0:{structure:r,memory:{array:Ds}}}}}}},slot:76});Object.assign(Y,{...t,type:11,name:"Struct0030",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Pe}],methods:[],template:null},slot:75});const Fs=new Uint8Array([]),Ms=new Uint8Array([16,250,15,0]),_s=new Uint8Array([0,0,0,0,0,0,0,192]),Ts=new Uint8Array([56,250,15,0]),$s=new Uint8Array([0,0,0,0,0,0,36,64]);Object.assign(Ve,{...t,type:2,name:"Struct0046",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Fs},slots:{0:{structure:s,memory:{array:Ms},slots:{0:{structure:r,memory:{array:_s}}}},1:{structure:s,memory:{array:Ts},slots:{0:{structure:r,memory:{array:$s}}}}}}},slot:78});Object.assign(Z,{...t,type:11,name:"Struct0031",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ve}],methods:[],template:null},slot:77});const Bs=new Uint8Array([]),Ls=new Uint8Array([170,170,170,170]),Gs=new Uint8Array([170,170,170,170]),Hs=new Uint8Array([170,170,170,170]);Object.assign(Ce,{...t,type:2,name:"Struct0016",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:X},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:Y},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:Z}],methods:[],template:{memory:{array:Bs},slots:{0:{structure:X,memory:{array:Ls},slots:{0:{structure:je,memory:{array:a},address:-1431655766}}},1:{structure:Y,memory:{array:Gs},slots:{0:{structure:Pe,memory:{array:a},address:-1431655766}}},2:{structure:Z,memory:{array:Hs},slots:{0:{structure:Ve,memory:{array:a},address:-1431655766}}}}}},slot:44});Object.assign(ee,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ce}],methods:[],template:null},slot:43});const Js=new Uint8Array([]),Ns=new Uint8Array([112,246,15,0]),Qs=new Uint8Array([0,0,0,0,0,64,143,64]),Ws=new Uint8Array([152,246,15,0]),Xs=new Uint8Array([0,0,0,0,0,64,143,64]);Object.assign(P,{...t,type:2,name:"Struct0047",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Js},slots:{0:{structure:s,memory:{array:Ns},slots:{0:{structure:r,memory:{array:Qs}}}},1:{structure:s,memory:{array:Ws},slots:{0:{structure:r,memory:{array:Xs}}}}}}},slot:80});Object.assign(w,{...t,type:11,name:"Struct0032",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:P}],methods:[],template:null},slot:79});const Ys=new Uint8Array([]),Zs=new Uint8Array([16,250,15,0]),er=new Uint8Array([0,0,0,0,0,0,119,64]),tr=new Uint8Array([56,250,15,0]),sr=new Uint8Array([0,0,0,0,0,208,113,64]);Object.assign(xe,{...t,type:2,name:"Struct0048",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Ys},slots:{0:{structure:s,memory:{array:Zs},slots:{0:{structure:r,memory:{array:er}}}},1:{structure:s,memory:{array:tr},slots:{0:{structure:r,memory:{array:sr}}}}}}},slot:82});Object.assign(te,{...t,type:11,name:"Struct0033",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:xe}],methods:[],template:null},slot:81});const rr=new Uint8Array([]),ar=new Uint8Array([170,170,170,170]),nr=new Uint8Array([170,170,170,170]),ir=new Uint8Array([170,170,170,170]);Object.assign(ke,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:S},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:w},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:te}],methods:[],template:{memory:{array:rr},slots:{0:{structure:S,memory:{array:ar},slots:{0:{structure:A,memory:{array:a},address:-1431655766}}},1:{structure:w,memory:{array:nr},slots:{0:{structure:P,memory:{array:a},address:-1431655766}}},2:{structure:te,memory:{array:ir},slots:{0:{structure:xe,memory:{array:a},address:-1431655766}}}}}},slot:46});Object.assign(se,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ke}],methods:[],template:null},slot:45});const ur=new Uint8Array([]),or=new Uint8Array([16,250,15,0]),mr=new Uint8Array([0,0,0,0,0,0,101,64]),lr=new Uint8Array([56,250,15,0]),yr=new Uint8Array([0,0,0,0,0,32,103,64]);Object.assign(Ie,{...t,type:2,name:"Struct0049",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:ur},slots:{0:{structure:s,memory:{array:or},slots:{0:{structure:r,memory:{array:mr}}}},1:{structure:s,memory:{array:lr},slots:{0:{structure:r,memory:{array:yr}}}}}}},slot:84});Object.assign(re,{...t,type:11,name:"Struct0034",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ie}],methods:[],template:null},slot:83});const cr=new Uint8Array([]),br=new Uint8Array([170,170,170,170]),pr=new Uint8Array([170,170,170,170]),dr=new Uint8Array([170,170,170,170]);Object.assign(ve,{...t,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:S},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:w},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:re}],methods:[],template:{memory:{array:cr},slots:{0:{structure:S,memory:{array:br},slots:{0:{structure:A,memory:{array:a},address:-1431655766}}},1:{structure:w,memory:{array:pr},slots:{0:{structure:P,memory:{array:a},address:-1431655766}}},2:{structure:re,memory:{array:dr},slots:{0:{structure:Ie,memory:{array:a},address:-1431655766}}}}}},slot:48});Object.assign(ae,{...t,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ve}],methods:[],template:null},slot:47});const fr=new Uint8Array([]),Sr=new Uint8Array([170,170,170,170]),hr=new Uint8Array([170,170,170,170]),gr=new Uint8Array([170,170,170,170]),zr=new Uint8Array([170,170,170,170]),wr=new Uint8Array([170,170,170,170]),Or=new Uint8Array([170,170,170,170]);Object.assign(Ee,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"a",structure:B},{...e,type:8,isRequired:!1,slot:1,name:"b",structure:J},{...e,type:8,isRequired:!1,slot:2,name:"c",structure:W},{...e,type:8,isRequired:!1,slot:3,name:"d",structure:ee},{...e,type:8,isRequired:!1,slot:4,name:"size",structure:se},{...e,type:8,isRequired:!1,slot:5,name:"center",structure:ae}],methods:[],template:{memory:{array:fr},slots:{0:{structure:B,memory:{array:Sr},slots:{0:{structure:ge,memory:{array:a},address:-1431655766}}},1:{structure:J,memory:{array:hr},slots:{0:{structure:Ae,memory:{array:a},address:-1431655766}}},2:{structure:W,memory:{array:gr},slots:{0:{structure:qe,memory:{array:a},address:-1431655766}}},3:{structure:ee,memory:{array:zr},slots:{0:{structure:Ce,memory:{array:a},address:-1431655766}}},4:{structure:se,memory:{array:wr},slots:{0:{structure:ke,memory:{array:a},address:-1431655766}}},5:{structure:ae,memory:{array:Or},slots:{0:{structure:ve,memory:{array:a},address:-1431655766}}}}}},slot:15});Object.assign(ne,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ee}],methods:[],template:null},slot:14});const Ar=new Uint8Array([]),Ur=new Uint8Array([48,250,15,0]),Rr=new Uint8Array([4,0,0,0]);Object.assign(V,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:d}],methods:[],template:{memory:{array:Ar},slots:{0:{structure:d,memory:{array:Ur},slots:{0:{structure:p,memory:{array:Rr}}}}}}},slot:50});Object.assign(O,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:V}],methods:[],template:null},slot:49});const qr=new Uint8Array([]),jr=new Uint8Array([170,170,170,170]);Object.assign(Ke,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:O}],methods:[],template:{memory:{array:qr},slots:{0:{structure:O,memory:{array:jr},slots:{0:{structure:V,memory:{array:a},address:-1431655766}}}}}},slot:17});Object.assign(ie,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ke}],methods:[],template:null},slot:16});const Pr=new Uint8Array([]),Vr=new Uint8Array([170,170,170,170]);Object.assign(De,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:O}],methods:[],template:{memory:{array:Pr},slots:{0:{structure:O,memory:{array:Vr},slots:{0:{structure:V,memory:{array:a},address:-1431655766}}}}}},slot:19});Object.assign(ue,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:De}],methods:[],template:null},slot:18});const Cr=new Uint8Array([]),xr=new Uint8Array([]),kr=new Uint8Array([28,251,15,0]),Ir=new Uint8Array([38,38,16,0]),vr=new Uint8Array([99,111,109,112,108,101,120,32,114,97,116,105,111,110,97,108,0]),Er=new Uint8Array([92,251,15,0]),Kr=new Uint8Array([29,38,16,0]),Dr=new Uint8Array([112,105,120,101,108,101,114,111,0]),Fr=new Uint8Array([156,251,15,0]),Mr=new Uint8Array([1,0,0,0]),_r=new Uint8Array([244,251,15,0]),Tr=new Uint8Array([247,37,16,0]),$r=new Uint8Array([99,111,109,112,108,101,120,32,109,97,112,112,105,110,103,32,102,40,122,41,61,32,40,97,122,50,43,98,41,47,40,99,122,50,43,100,41,0]),Br=new Uint8Array([170,170,170,170]),Lr=new Uint8Array([170,170,170,170]),Gr=new Uint8Array([170,170,170,170]);Object.assign(He,{...t,type:2,name:"complex-rational.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Cr}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:D},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:F},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:d},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:M},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:ne},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:ie},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:ue}],methods:[],template:{memory:{array:xr},slots:{0:{structure:D,memory:{array:kr},slots:{0:{structure:ye,memory:{array:Ir},slots:{0:{structure:le,memory:{array:vr},address:1058342}}}}},1:{structure:F,memory:{array:Er},slots:{0:{structure:be,memory:{array:Kr},slots:{0:{structure:ce,memory:{array:Dr},address:1058333}}}}},2:{structure:d,memory:{array:Fr},slots:{0:{structure:p,memory:{array:Mr}}}},3:{structure:M,memory:{array:_r},slots:{0:{structure:de,memory:{array:Tr},slots:{0:{structure:pe,memory:{array:$r},address:1058295}}}}},4:{structure:ne,memory:{array:Br},slots:{0:{structure:Ee,memory:{array:a},address:-1431655766}}},5:{structure:ie,memory:{array:Lr},slots:{0:{structure:Ke,memory:{array:a},address:-1431655766}}},6:{structure:ue,memory:{array:Gr},slots:{0:{structure:De,memory:{array:a},address:-1431655766}}}}}},slot:1});Object.assign(U,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:h}],methods:[],template:null},slot:24});Object.assign(Fe,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:U}],methods:[],template:null},slot:23});Object.assign(Me,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Fe}],methods:[],template:null},slot:22});Object.assign(c,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:25});const Hr=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(_e,{...t,type:9,name:"complex-rational.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:p},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:p}],methods:[],template:{memory:{array:Hr}}},slot:26});Object.assign(j,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:j}],methods:[],template:null},slot:27});Object.assign(Te,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:51});const Jr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Nr=new Uint8Array([]),Qr=new Uint8Array([216,249,15,0]),Wr=new Uint8Array([4,0,0,0]);Object.assign(oe,{...t,type:2,name:"complex-rational.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Me},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:_e},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:j}],methods:[],template:{memory:{array:Jr}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:U},{...e,type:7,isRequired:!1,name:"FPixel",structure:Te},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:d}],methods:[],template:{memory:{array:Nr},slots:{0:{structure:d,memory:{array:Qr},slots:{0:{structure:p,memory:{array:Wr}}}}}}},slot:21});const Xr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Yr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Zr=new Uint8Array([0,0,0,0,0,0,0,0]),et=new Uint8Array([]);Object.assign(C,{...t,type:2,name:"complex-rational.KernelInput(u8,complex-rational.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:oe}],methods:[],template:{memory:{array:Xr},slots:{0:{structure:oe,memory:{array:Yr},slots:{0:{structure:Me,memory:{array:Zr},slots:{0:{structure:Fe,memory:{array:et}}}}}}}}},slot:20});Object.assign($e,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:U}],methods:[],template:null},slot:23});Object.assign(Be,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:$e}],methods:[],template:null},slot:30});const ea=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ta=new Uint8Array([]),sa=new Uint8Array([216,249,15,0]),ra=new Uint8Array([4,0,0,0]);Object.assign(me,{...t,type:2,name:"complex-rational.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Be},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:_e},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:j}],methods:[],template:{memory:{array:ea}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:U},{...e,type:7,isRequired:!1,name:"FPixel",structure:Te},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:d}],methods:[],template:{memory:{array:ta},slots:{0:{structure:d,memory:{array:sa},slots:{0:{structure:p,memory:{array:ra}}}}}}},slot:29});const aa=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),na=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ia=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(x,{...t,type:2,name:"complex-rational.KernelOutput(u8,complex-rational.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:me}],methods:[],template:{memory:{array:aa},slots:{0:{structure:me,memory:{array:na},slots:{0:{structure:Be,memory:{array:ia},slots:{0:{structure:$e,memory:{array:et}}}}}}}}},slot:28});const ua=new Uint8Array([0,0,128,63,82,184,30,63,0,0,172,194,0,0,176,65,10,215,163,188,10,215,163,188,0,0,0,192,0,0,32,65,0,0,184,67,0,128,142,67,0,0,40,67,0,0,57,67]);Object.assign(k,{...t,type:2,name:"complex-rational.KernelParameters(complex-rational.kernel)",length:1,byteSize:48,align:3,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"a",structure:y},{...e,type:6,isRequired:!1,bitOffset:64,bitSize:64,byteSize:8,slot:1,name:"b",structure:y},{...e,type:6,isRequired:!1,bitOffset:128,bitSize:64,byteSize:8,slot:2,name:"c",structure:y},{...e,type:6,isRequired:!1,bitOffset:192,bitSize:64,byteSize:8,slot:3,name:"d",structure:y},{...e,type:6,isRequired:!1,bitOffset:256,bitSize:64,byteSize:8,slot:4,name:"size",structure:y},{...e,type:6,isRequired:!1,bitOffset:320,bitSize:64,byteSize:8,slot:5,name:"center",structure:y}],methods:[],template:{memory:{array:ua}}},slot:31});Object.assign(Je,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(complex-rational.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:53});Object.assign(Ne,{...t,type:7,name:"ErrorSet0000!complex-rational.KernelOutput(u8,complex-rational.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:x},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Je}],methods:[],template:null},slot:35});Object.assign(Qe,{...t,type:3,name:"createOutput",length:1,byteSize:112,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:0,name:"0",structure:c},{...e,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:1,name:"1",structure:c},{...e,type:6,bitOffset:448,bitSize:192,byteSize:24,slot:2,name:"2",structure:C},{...e,type:6,bitOffset:0,bitSize:384,byteSize:48,slot:3,name:"3",structure:k},{...e,type:6,bitOffset:640,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Ne}],methods:[],template:null},slot:33});Object.assign(We,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(complex-rational.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:54});Object.assign(Xe,{...t,type:7,name:"ErrorSet0001!complex-rational.KernelOutput(u8,complex-rational.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:x},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:We}],methods:[],template:null},slot:36});Object.assign(Ye,{...t,type:3,name:"createPartialOutput",length:1,byteSize:120,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:0,name:"0",structure:c},{...e,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:1,name:"1",structure:c},{...e,type:3,bitOffset:448,bitSize:32,byteSize:4,slot:2,name:"2",structure:c},{...e,type:3,bitOffset:480,bitSize:32,byteSize:4,slot:3,name:"3",structure:c},{...e,type:6,bitOffset:512,bitSize:192,byteSize:24,slot:4,name:"4",structure:C},{...e,type:6,bitOffset:0,bitSize:384,byteSize:48,slot:5,name:"5",structure:k},{...e,type:6,bitOffset:704,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Xe}],methods:[],template:null},slot:34});const oa={argStruct:Qe,thunk:1,name:"createOutput"},ma={argStruct:Ye,thunk:6,name:"createPartialOutput"};Object.assign(Ze,{...t,type:2,name:"complex-rational",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:et}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:He},{...e,type:7,isRequired:!1,name:"Input",structure:C},{...e,type:7,isRequired:!1,name:"Output",structure:x},{...e,type:7,isRequired:!1,name:"Parameters",structure:k}],methods:[oa,ma],template:null},slot:0});const la=[h,le,ye,D,ce,be,F,p,d,pe,de,M,q,y,r,s,fe,_,Se,T,he,$,ge,B,ze,L,we,G,Oe,H,Ae,J,Ue,N,A,S,Re,Q,qe,W,je,X,Pe,Y,Ve,Z,Ce,ee,P,w,xe,te,ke,se,Ie,re,ve,ae,Ee,ne,V,O,Ke,ie,De,ue,He,U,Fe,Me,c,_e,j,Te,oe,C,$e,Be,me,x,k,Je,Ne,Qe,We,Xe,Ye,Ze],ya=At(la),ca=Ze.constructor,ba=(async()=>{const o=new URL("complex-rational-c9146590.wasm",import.meta.url).href;return fetch(o)})();Ut(ba,{...ya,writeBack:!0});const{createOutput:wa,createPartialOutput:pa,kernel:Ge,Input:da,Output:Oa,Parameters:Aa}=ca;function fa(o,l,i,n,u={},g={}){if(Array.isArray(u)){const f=u;u={};for(const[b,z]of Object.keys(Ge.inputImages).entries())u[z]=f[b]}const I=new da(void 0),v=Object.keys(Ge.inputImages),m=[];let R;for(const f of v){let b=u[f];if(b||(v.length===1&&["data","width","height"].every(z=>!!u[z])?b=u:m.push(f)),I[f]=b,R){if(b.colorSpace!==R)throw new Error(`Input images must all use the same color space: ${R}`)}else R=b.colorSpace}if(m.length>0)throw new Error(`Missing input image${m.length>1?"s":""}: ${m.join(", ")}`);const Le=pa(o,l,i,n,I,g),tt=f=>{const b=Object.keys(f),z={};for(const st of b){const{data:{typedArray:E},width:rt,height:nt}=f[st];let K;if(typeof ImageData=="function"){const it=new Uint8ClampedArray(E.buffer,E.byteOffset,E.byteLength);K=new ImageData(it,rt,n,{colorSpace:R})}else K={data:E,width:rt,height:nt};if(b.length===1)return K;z[st]=K}return z};return Le[Symbol.toStringTag]==="Promise"?Le.then(tt):tt(Le)}function Sa(){const o={};for(let[l,i]of Object.entries(Ge)){if(l==="parameters"){const n={};for(const[u,g]of Object.entries(i)){const I=n[u]={};for(let[v,m]of Object.entries(g))typeof m=="object"?"string"in m?m=m.string:m=at(m):typeof m=="function"&&(m=ha(m.name)),I[v]=m}i=n}else typeof i=="object"&&("string"in i?i=i.string:i=i.valueOf());o[l]=i}return o}function at(o){const l=[];for(let[i,n]of Object.entries(o))typeof n=="object"&&(n=at(n)),l[i]=n;return l}function ha(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[l,i,...n]=o.data;ga(l,n).then(([u,g])=>{postMessage([l,i,u],{transfer:g})}).catch(u=>{postMessage(["error",i,u])})};async function ga(o,l){switch(o){case"getKernelInfo":return[Sa(...l)];case"createPartialImageData":const n=await fa(...l),u=[];if("data"in n&&"width"in n&&"height"in n)u.push(n.data.buffer);else for(const g of Object.entries(n))u.push(n.data.buffer);return[n,u];default:throw new Error(`Unknown function: ${o}`)}}
