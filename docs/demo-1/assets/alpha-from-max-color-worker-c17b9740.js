import{u as Ut,a as Pt,b as xt,c as It,d as Rt,e as kt,f as qt,g as Vt,h as vt,i as Et,j as Ct,k as Kt,l as Dt,m as _t,n as Ft,o as Mt,p as Tt,q as $t,r as Lt,s as Bt}from"./index-25a52593.js";Ut();Ct();Kt();Pt();xt();Dt();_t();Ft();It();Rt();kt();qt();Mt();Tt();Bt();Vt();$t();vt();Et();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},e={type:0,isRequired:!1},r={},l={},C={},K={},D={},_={},y={},f={},F={},M={},T={},$={},L={},B={},N={},z={},G={},H={},se={},A={},J={},U={},u={},p={},d={},v={},re={},Q={},P={},W={},x={},X={},I={},R={},w={},ae={},ne={},E={},ie={},oe={},ce={},he={},Y={},je={},de={},ue={},we={},me={},Ae={},Ue={},Pe={},xe={},Ie={},Re={},ke={},qe={},Ve={},ve={},Ee={},Ce={},Ke={},De={},_e={},Fe={},Me={},Te={},$e={},Le={},Be={},ye={},Ne={},Ge={},be={},He={},le={},Je={},Qe={},We={},Xe={},Ye={},Ze={},et={},pe={},tt={},st={},rt={},at={},nt={},it={},ot={},ct={},ut={},fe={},mt={},yt={},bt={},lt={},pt={},ft={},gt={},St={},Ot={},zt={},Nt=new Uint8Array,Gt=new Uint8Array([4]),Ht=new Uint8Array,Jt=new Uint8Array,Qt=new Uint8Array([12,5,0,1]),Wt=new Uint8Array([65,102,116,101,114,69,102,102,101,99,116,115,0]),Xt=new Uint8Array([36,5,0,1]),Yt=new Uint8Array([65,100,111,98,101,32,83,121,115,116,101,109,115,32,73,110,99,111,114,112,111,114,97,116,101,100,0]),Zt=new Uint8Array,es=new Uint8Array([2]),ts=new Uint8Array([80,5,0,1]),ss=new Uint8Array([69,115,116,105,109,97,116,101,32,97,108,112,104,97,32,98,97,115,101,100,32,111,110,32,99,111,108,111,114,32,99,104,97,110,110,101,108,115,46,0]),rs=new Uint8Array([133,5,0,1]),as=new Uint8Array([65,108,112,104,97,32,70,114,111,109,32,77,97,120,32,67,111,108,111,114,0]),ns=new Uint8Array([167,5,0,1]),is=new Uint8Array([85,116,105,108,105,116,121,0]),os=new Uint8Array,cs=new Uint8Array,us=new Uint8Array,ms=new Uint8Array([0]),ys=new Uint8Array([1]),ht=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),bs=new Uint8Array,ls=new Uint8Array,ps=new Uint8Array,fs=new Uint8Array,gs=new Uint8Array([4]),ge=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),jt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ss=new Uint8Array,Os=new Uint8Array,zs=new Uint8Array,hs=new Uint8Array,js=new Uint8Array([4]),Se=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ds=new Uint8Array([27,0]),ws=new Uint8Array,As=new Uint8Array,Us=new Uint8Array,Ps=new Uint8Array;Object.assign(he,{slots:{0:Y}});Object.assign(Y,{structure:y,memory:{array:Nt},slots:{0:je}});Object.assign(je,{structure:f,memory:{array:Gt}});Object.assign(de,{slots:{0:ue}});Object.assign(ue,{structure:z,memory:{array:Ht},slots:{0:Y}});Object.assign(we,{slots:{0:me}});Object.assign(me,{structure:z,memory:{array:Jt},slots:{0:Y}});Object.assign(Ae,{slots:{0:Ue,1:xe,2:Re,3:qe,4:ve,5:Ce,6:De,7:_e,8:Fe}});Object.assign(Ue,{structure:K,memory:{array:Qt},slots:{0:Pe}});Object.assign(Pe,{structure:C,memory:{array:Wt},reloc:16778508,const:!0});Object.assign(xe,{structure:_,memory:{array:Xt},slots:{0:Ie}});Object.assign(Ie,{structure:D,memory:{array:Yt},reloc:16778532,const:!0});Object.assign(Re,{structure:y,memory:{array:Zt},slots:{0:ke}});Object.assign(ke,{structure:f,memory:{array:es}});Object.assign(qe,{structure:M,memory:{array:ts},slots:{0:Ve}});Object.assign(Ve,{structure:F,memory:{array:ss},reloc:16778576,const:!0});Object.assign(ve,{structure:$,memory:{array:rs},slots:{0:Ee}});Object.assign(Ee,{structure:T,memory:{array:as},reloc:16778629,const:!0});Object.assign(Ce,{structure:B,memory:{array:ns},slots:{0:Ke}});Object.assign(Ke,{structure:L,memory:{array:is},reloc:16778663,const:!0});Object.assign(De,{structure:N,memory:{array:os}});Object.assign(_e,{structure:G,memory:{array:cs},slots:{0:ue}});Object.assign(Fe,{structure:H,memory:{array:us},slots:{0:me}});Object.assign(Me,{slots:{0:Te,1:$e}});Object.assign(Te,{structure:p,memory:{array:ms}});Object.assign($e,{structure:p,memory:{array:ys}});Object.assign(Le,{memory:{array:ht},slots:{0:Be}});Object.assign(Be,{structure:U,memory:{array:ht,offset:0,length:8},slots:{0:ye}});Object.assign(ye,{structure:J,memory:{array:bs},reloc:0,const:!0});Object.assign(Ne,{slots:{0:Ge,1:He,2:Je}});Object.assign(Ge,{structure:r,memory:{array:ls},slots:{0:be}});Object.assign(be,{structure:A});Object.assign(He,{structure:r,memory:{array:ps},slots:{0:le}});Object.assign(le,{structure:re});Object.assign(Je,{structure:y,memory:{array:fs},slots:{0:Qe}});Object.assign(Qe,{structure:f,memory:{array:gs}});Object.assign(We,{memory:{array:ge},slots:{0:Xe}});Object.assign(Xe,{structure:Q,memory:{array:ge},slots:{0:Ye}});Object.assign(Ye,{structure:U,memory:{array:ge,offset:0,length:8},slots:{0:ye}});Object.assign(Ze,{memory:{array:jt},slots:{0:et}});Object.assign(et,{structure:x,memory:{array:jt,offset:0,length:8},slots:{0:pe}});Object.assign(pe,{structure:W,memory:{array:Ss},reloc:0});Object.assign(tt,{slots:{0:st,1:rt,2:at}});Object.assign(st,{structure:r,memory:{array:Os},slots:{0:be}});Object.assign(rt,{structure:r,memory:{array:zs},slots:{0:le}});Object.assign(at,{structure:y,memory:{array:hs},slots:{0:nt}});Object.assign(nt,{structure:f,memory:{array:js}});Object.assign(it,{memory:{array:Se},slots:{0:ot}});Object.assign(ot,{structure:X,memory:{array:Se},slots:{0:ct}});Object.assign(ct,{structure:x,memory:{array:Se,offset:0,length:8},slots:{0:pe}});Object.assign(ut,{slots:{0:fe}});Object.assign(fe,{structure:w,memory:{array:ds}});Object.assign(mt,{slots:{0:fe}});Object.assign(yt,{slots:{0:bt,1:pt,2:gt,3:Ot}});Object.assign(bt,{structure:r,memory:{array:ws},slots:{0:lt}});Object.assign(lt,{structure:se});Object.assign(pt,{structure:r,memory:{array:As},slots:{0:ft}});Object.assign(ft,{structure:P});Object.assign(gt,{structure:r,memory:{array:Us},slots:{0:St}});Object.assign(St,{structure:I});Object.assign(Ot,{structure:r,memory:{array:Ps},slots:{0:zt}});Object.assign(zt,{structure:R});const xs={argStruct:ne,thunkId:2,name:"createOutput"},Is={argStruct:oe,thunkId:3,name:"createPartialOutput"};Object.assign(r,{...t,name:"type",align:1,instance:{members:[{...e,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(l,{...t,name:"u8",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:l}],methods:[]}});Object.assign(C,{...t,type:1,name:"[12:0]u8",length:12,byteSize:13,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:l}],methods:[]}});Object.assign(K,{...t,type:13,name:"*const [12:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:C}],methods:[]}});Object.assign(D,{...t,type:1,name:"[26:0]u8",length:26,byteSize:27,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:l}],methods:[]}});Object.assign(_,{...t,type:13,name:"*const [26:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:D}],methods:[]}});Object.assign(y,{...t,name:"comptime_int",align:1,instance:{members:[{...e,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:y}],methods:[]}});Object.assign(f,{...t,name:"i8",byteSize:1,align:1,instance:{members:[{...e,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(F,{...t,type:1,name:"[39:0]u8",length:39,byteSize:40,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:l}],methods:[]}});Object.assign(M,{...t,type:13,name:"*const [39:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(T,{...t,type:1,name:"[20:0]u8",length:20,byteSize:21,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:l}],methods:[]}});Object.assign($,{...t,type:13,name:"*const [20:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[]}});Object.assign(L,{...t,type:1,name:"[7:0]u8",length:7,byteSize:8,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:l}],methods:[]}});Object.assign(B,{...t,type:13,name:"*const [7:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[]}});Object.assign(N,{...t,type:2,name:"Struct2871943947",align:1});Object.assign(z,{...t,type:2,name:"Struct3832472641",align:1,instance:{members:[{...e,type:9,slot:0,name:"channels",structure:y}],methods:[],template:he}});Object.assign(G,{...t,type:2,name:"Struct2242867897",align:1,instance:{members:[{...e,type:9,slot:0,name:"src",structure:z}],methods:[],template:de}});Object.assign(H,{...t,type:2,name:"Struct172100005",align:1,instance:{members:[{...e,type:9,slot:0,name:"dst",structure:z}],methods:[],template:we}});Object.assign(se,{...t,type:2,name:"alpha-from-max-color.kernel",align:1,static:{members:[{...e,type:9,slot:0,name:"namespace",structure:K},{...e,type:9,slot:1,name:"vendor",structure:_},{...e,type:9,slot:2,name:"version",structure:y},{...e,type:9,slot:3,name:"description",structure:M},{...e,type:9,slot:4,name:"displayName",structure:$},{...e,type:9,slot:5,name:"category",structure:B},{...e,type:9,slot:6,name:"parameters",structure:N},{...e,type:9,slot:7,name:"inputImages",structure:G},{...e,type:9,slot:8,name:"outputImages",structure:H}],methods:[],template:Ae}});Object.assign(A,{...t,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:l}],methods:[]}});Object.assign(J,{...t,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,structure:A}],methods:[]}});Object.assign(U,{...t,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:64,byteSize:8,slot:0,structure:J}],methods:[]}});Object.assign(u,{...t,name:"u32",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:u}],methods:[]}});Object.assign(p,{...t,type:11,name:"alpha-from-max-color.ColorSpace",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"srgb",structure:p},{...e,type:9,slot:1,name:"display-p3",structure:p}],methods:[],template:Me}});Object.assign(d,{...t,name:"usize",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:d}],methods:[]}});Object.assign(v,{...t,name:"f32",byteSize:4,align:4,instance:{members:[{...e,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:v}],methods:[]}});Object.assign(re,{...t,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...e,type:4,bitSize:32,byteSize:4,structure:v}],methods:[]}});Object.assign(Q,{...t,type:2,name:"alpha-from-max-color.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:U},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...e,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:d}],methods:[],template:Le},static:{members:[{...e,type:9,slot:0,name:"Pixel",structure:r},{...e,type:9,slot:1,name:"FPixel",structure:r},{...e,type:9,slot:2,name:"channels",structure:y}],methods:[],template:Ne}});Object.assign(P,{...t,type:2,name:"alpha-from-max-color.KernelInput(u8,alpha-from-max-color.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:Q}],methods:[],template:We}});Object.assign(W,{...t,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,structure:A}],methods:[]}});Object.assign(x,{...t,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:64,byteSize:8,slot:0,structure:W}],methods:[]}});Object.assign(X,{...t,type:2,name:"alpha-from-max-color.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:x},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...e,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:d}],methods:[],template:Ze},static:{members:[{...e,type:9,slot:0,name:"Pixel",structure:r},{...e,type:9,slot:1,name:"FPixel",structure:r},{...e,type:9,slot:2,name:"channels",structure:y}],methods:[],template:tt}});Object.assign(I,{...t,type:2,name:"alpha-from-max-color.KernelOutput(u8,alpha-from-max-color.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:X}],methods:[],template:it}});Object.assign(R,{...t,type:2,name:"alpha-from-max-color.KernelParameters(alpha-from-max-color.kernel)",align:1});Object.assign(w,{...t,type:10,name:"@typeInfo(@typeInfo(@TypeOf(alpha-from-max-color.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"OutOfMemory",structure:w}],methods:[],template:ut}});Object.assign(ae,{...t,type:9,name:"ErrorSet172833841!alpha-from-max-color.KernelOutput(u8,alpha-from-max-color.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:I},{...e,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:w}],methods:[]}});Object.assign(ne,{...t,type:5,name:"createOutput",byteSize:60,align:4,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...e,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...e,type:7,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:P},{...e,type:7,isRequired:!0,bitOffset:480,bitSize:0,byteSize:0,slot:1,name:"3",structure:R},{...e,type:7,isRequired:!0,bitOffset:256,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ae}],methods:[]}});Object.assign(E,{...t,type:10,name:"@typeInfo(@typeInfo(@TypeOf(alpha-from-max-color.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"OutOfMemory",structure:E}],methods:[],template:mt}});Object.assign(ie,{...t,type:9,name:"ErrorSet2287156712!alpha-from-max-color.KernelOutput(u8,alpha-from-max-color.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:I},{...e,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:E}],methods:[]}});Object.assign(oe,{...t,type:5,name:"createPartialOutput",byteSize:68,align:4,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...e,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:u},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:u},{...e,type:7,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:P},{...e,type:7,isRequired:!0,bitOffset:544,bitSize:0,byteSize:0,slot:1,name:"5",structure:R},{...e,type:7,isRequired:!0,bitOffset:320,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ie}],methods:[]}});Object.assign(ce,{...t,type:2,name:"alpha-from-max-color",align:1,static:{members:[{...e,type:9,slot:0,name:"kernel",structure:r},{...e,type:9,slot:1,name:"Input",structure:r},{...e,type:9,slot:2,name:"Output",structure:r},{...e,type:9,slot:3,name:"Parameters",structure:r}],methods:[xs,Is],template:yt}});const Rs=[r,l,C,K,D,_,y,f,F,M,T,$,L,B,N,z,G,H,se,A,J,U,u,p,d,v,re,Q,P,W,x,X,I,R,w,ae,ne,E,ie,oe,ce],ks=ce,qs={runtimeSafety:!1,littleEndian:!0},Z=Lt();Z.getControlObject();Z.recreateStructures(Rs,qs);const Vs=(async()=>{const i=new URL("alpha-from-max-color-4cc43de8.wasm",import.meta.url).href;return fetch(i)})();Z.loadModule(Vs);Z.linkVariables(!0);const{constructor:vs}=ks,{createPartialOutput:Es,Input:Cs,kernel:te}=vs;function Ks(i,o,a,s,n={},g={}){const S=[];for(const[m]of te.inputImages)S.push(m);const h=[];for(const[m]of te.outputImages)h.push(m);if(Array.isArray(n)){const m=n;n={};for(const[b,O]of S.entries())n[O]=m[b]}const c=new Cs(void 0),k=[];let j;for(const m of S){let b=n[m];if(b||(S.length===1&&["data","width","height"].every(O=>!!n[O])?b=n:k.push(m)),c[m]=b,j){if(b.colorSpace!==j)throw new Error(`Input images must all use the same color space: ${j}`)}else j=b.colorSpace}if(k.length>0)throw new Error(`Missing input image${k.length>1?"s":""}: ${k.join(", ")}`);const ee=Es(i,o,a,s,c,g),Oe=m=>{const b={};for(const O of h){const{data:{typedArray:q},width:ze,height:wt}=m[O];let V;if(typeof ImageData=="function"){const At=new Uint8ClampedArray(q.buffer,q.byteOffset,q.byteLength);V=new ImageData(At,ze,s,{colorSpace:j})}else V={data:q,width:ze,height:wt};if(h.length===1)return V;b[O]=V}return b};return ee[Symbol.toStringTag]==="Promise"?ee.then(Oe):Oe(ee)}function Ds(){const i={};for(let[o,a]of te){if(o==="parameters"){const s={};for(const[n,g]of a){const S=s[n]={};for(let[h,c]of g)typeof c=="object"?"string"in c?c=c.string:c=dt(c):typeof c=="function"&&(c=_s(c.name)),S[h]=c}a=s}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());i[o]=a}return i}function dt(i){const o=[];for(let[a,s]of i)typeof s=="object"&&(s=dt(s)),o[a]=s;return o}function _s(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[o,a,...s]=i.data;Fs(o,s).then(([n,g])=>{postMessage([o,a,n],{transfer:g})}).catch(n=>{postMessage(["error",a,n])})};async function Fs(i,o){switch(i){case"getKernelInfo":return[Ds(...o)];case"createPartialImageData":const s=await Ks(...o),n=[];if("data"in s&&"width"in s&&"height"in s)n.push(s.data.buffer);else for(const g of Object.entries(s))n.push(s.data.buffer);return[s,n];default:throw new Error(`Unknown function: ${i}`)}}
