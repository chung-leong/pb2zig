import{u as Re,a as qe,b as Ie,c as Ve,d as xe,e as ke,f as ve,g as Ee,h as Ae,i as Ce,j as je,k as Ue,l as Me,m as De,n as Te,o as $e,p as Fe,q as Ke}from"./index-aed2612b.js";Re();Me();De();qe();Ie();Te();$e();Ve();xe();ke();ve();Ee();Ke();Fe();Ae();Ce();je();const r={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,isIterator:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},e={type:0,isRequired:!1},o={},c={},D={},T={},$={},F={},p={},K={},L={},_={},B={},N={},G={},H={},P={},J={},Q={},rt={},W={},I={},V={},m={},S={},q={},M={},ot={},X={},x={},k={},Y={},v={},E={},g={},at={},nt={},O={},it={},ut={},mt={},ht={},Z={},dt={},gt={},ct={},Ot={},yt={},Pt={},wt={},Rt={},qt={},It={},Vt={},xt={},kt={},vt={},Et={},At={},Ct={},jt={},Ut={},Mt={},Dt={},Tt={},$t={},Ft={},Kt={},Lt={},A={},_t={},Bt={},lt={},Nt={},bt={},Gt={},Ht={},Jt={},Qt={},Wt={},Xt={},Yt={},Zt={},te={},ee={},se={},re={},oe={},ae={},ne={},ie={},ue={},me={},ce={},ye={},le={},be={},pe={},fe={},Se={},ze={},he={},de={},s=n=>new Uint8Array(n),Le=s(),_e=s([4]),Be=s(),Ne=s(),Ge=s([122,1,0,1]),He=s([65,102,116,101,114,69,102,102,101,99,116,115,0]),Je=s([123,4,0,1]),Qe=s([65,100,111,98,101,32,83,121,115,116,101,109,115,32,73,110,99,111,114,112,111,114,97,116,101,100,0]),We=s(),Xe=s([2]),Ye=s([184,5,0,1]),Ze=s([69,115,116,105,109,97,116,101,32,97,108,112,104,97,32,98,97,115,101,100,32,111,110,32,99,111,108,111,114,32,99,104,97,110,110,101,108,115,46,0]),ts=s([229,1,0,1]),es=s([65,108,112,104,97,32,70,114,111,109,32,77,97,120,32,67,111,108,111,114,0]),ss=s([40,0,0,1]),rs=s([85,116,105,108,105,116,121,0]),os=s(),as=s(),ns=s(),is=s(1),us=s([1]),ge=s(24),ms=s(),cs=s(),ys=s(),ls=s(),bs=s([4]),pt=s(24),Oe=s(24),ps=s(),fs=s(),Ss=s(),zs=s([4]),ft=s(24),hs=s([8,0]),ds=s([8,0]),gs=s(),Os=s(),Ps=s(),ws=s(),t=Object.assign;t(ht,{slots:{0:Z}});t(Z,{structure:p,memory:{array:Le},const:!0,slots:{0:dt}});t(dt,{structure:c,memory:{array:_e},const:!0});t(gt,{slots:{0:ct}});t(ct,{structure:P,memory:{array:Be},const:!0,slots:{0:Z}});t(Ot,{slots:{0:yt}});t(yt,{structure:P,memory:{array:Ne},const:!0,slots:{0:Z}});t(Pt,{slots:{0:wt,1:qt,2:Vt,3:kt,4:Et,5:Ct,6:Ut,7:Mt,8:Dt}});t(wt,{structure:T,memory:{array:Ge},const:!0,slots:{0:Rt}});t(Rt,{structure:D,memory:{array:He},reloc:16777594});t(qt,{structure:F,memory:{array:Je},const:!0,slots:{0:It}});t(It,{structure:$,memory:{array:Qe},reloc:16778363});t(Vt,{structure:p,memory:{array:We},const:!0,slots:{0:xt}});t(xt,{structure:c,memory:{array:Xe},const:!0});t(kt,{structure:L,memory:{array:Ye},const:!0,slots:{0:vt}});t(vt,{structure:K,memory:{array:Ze},reloc:16778680});t(Et,{structure:B,memory:{array:ts},const:!0,slots:{0:At}});t(At,{structure:_,memory:{array:es},reloc:16777701});t(Ct,{structure:G,memory:{array:ss},const:!0,slots:{0:jt}});t(jt,{structure:N,memory:{array:rs},reloc:16777256});t(Ut,{structure:H,memory:{array:os},const:!0});t(Mt,{structure:J,memory:{array:as},const:!0,slots:{0:ct}});t(Dt,{structure:Q,memory:{array:ns},const:!0,slots:{0:yt}});t(Tt,{slots:{0:$t,1:Ft}});t($t,{structure:S,memory:{array:is},const:!0});t(Ft,{structure:S,memory:{array:us},const:!0});t(Kt,{memory:{array:ge},slots:{0:Lt}});t(Lt,{structure:V,memory:{array:ge,offset:0,length:8},slots:{0:A}});t(A,{structure:I,memory:{array:ms},reloc:0});t(_t,{slots:{0:Bt,1:Nt,2:Gt}});t(Bt,{structure:o,memory:{array:cs},const:!0,slots:{0:lt}});t(lt,{structure:W});t(Nt,{structure:o,memory:{array:ys},const:!0,slots:{0:bt}});t(bt,{structure:ot});t(Gt,{structure:p,memory:{array:ls},const:!0,slots:{0:Ht}});t(Ht,{structure:c,memory:{array:bs},const:!0});t(Jt,{memory:{array:pt},slots:{0:Qt}});t(Qt,{structure:X,memory:{array:pt},slots:{0:Wt}});t(Wt,{structure:V,memory:{array:pt,offset:0,length:8},slots:{0:A}});t(Xt,{memory:{array:Oe},slots:{0:Yt}});t(Yt,{structure:k,memory:{array:Oe,offset:0,length:8},slots:{0:A}});t(Zt,{slots:{0:te,1:ee,2:se}});t(te,{structure:o,memory:{array:ps},const:!0,slots:{0:lt}});t(ee,{structure:o,memory:{array:fs},const:!0,slots:{0:bt}});t(se,{structure:p,memory:{array:Ss},const:!0,slots:{0:re}});t(re,{structure:c,memory:{array:zs},const:!0});t(oe,{memory:{array:ft},slots:{0:ae}});t(ae,{structure:Y,memory:{array:ft},slots:{0:ne}});t(ne,{structure:k,memory:{array:ft,offset:0,length:8},slots:{0:A}});t(ie,{slots:{0:ue}});t(ue,{structure:g,memory:{array:hs},const:!0});t(me,{slots:{0:ce}});t(ce,{structure:O,memory:{array:ds},const:!0});t(ye,{slots:{0:le,1:pe,2:Se,3:he}});t(le,{structure:o,memory:{array:gs},const:!0,slots:{0:be}});t(be,{structure:rt});t(pe,{structure:o,memory:{array:Os},const:!0,slots:{0:fe}});t(fe,{structure:x});t(Se,{structure:o,memory:{array:Ps},const:!0,slots:{0:ze}});t(ze,{structure:v});t(he,{structure:o,memory:{array:ws},const:!0,slots:{0:de}});t(de,{structure:E});const Rs={argStruct:nt,thunkId:2,name:"createOutput"},qs={argStruct:ut,thunkId:3,name:"createPartialOutput"};t(o,{...r,name:"type",align:1,instance:{members:[{...e,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:o}],methods:[]}});t(c,{...r,name:"u8",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:c}],methods:[]}});t(D,{...r,type:1,name:"[12:0]u8",length:12,byteSize:13,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:c}],methods:[]}});t(T,{...r,type:14,name:"*const [12:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,slot:0,structure:D}],methods:[]}});t($,{...r,type:1,name:"[26:0]u8",length:26,byteSize:27,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:c}],methods:[]}});t(F,{...r,type:14,name:"*const [26:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[]}});t(p,{...r,name:"comptime_int",align:1,instance:{members:[{...e,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:p}],methods:[]}});t(K,{...r,type:1,name:"[39:0]u8",length:39,byteSize:40,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:c}],methods:[]}});t(L,{...r,type:14,name:"*const [39:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,slot:0,structure:K}],methods:[]}});t(_,{...r,type:1,name:"[20:0]u8",length:20,byteSize:21,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:c}],methods:[]}});t(B,{...r,type:14,name:"*const [20:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[]}});t(N,{...r,type:1,name:"[7:0]u8",length:7,byteSize:8,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:c}],methods:[]}});t(G,{...r,type:14,name:"*const [7:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,slot:0,structure:N}],methods:[]}});t(H,{...r,type:2,name:"@TypeOf(.{})",align:1,isTuple:!0});t(P,{...r,type:2,name:"Struct0028",align:1,instance:{members:[{...e,type:7,slot:0,name:"channels",structure:p}],methods:[],template:ht}});t(J,{...r,type:2,name:"Struct0027",align:1,instance:{members:[{...e,type:7,slot:0,name:"src",structure:P}],methods:[],template:gt}});t(Q,{...r,type:2,name:"Struct0030",align:1,instance:{members:[{...e,type:7,slot:0,name:"dst",structure:P}],methods:[],template:Ot}});t(rt,{...r,type:2,name:"alpha-from-max-color.kernel",align:1,static:{members:[{...e,type:7,slot:0,name:"namespace",structure:T},{...e,type:7,slot:1,name:"vendor",structure:F},{...e,type:7,slot:2,name:"version",structure:p},{...e,type:7,slot:3,name:"description",structure:L},{...e,type:7,slot:4,name:"displayName",structure:B},{...e,type:7,slot:5,name:"category",structure:G},{...e,type:7,slot:6,name:"parameters",structure:H},{...e,type:7,slot:7,name:"inputImages",structure:J},{...e,type:7,slot:8,name:"outputImages",structure:Q}],methods:[],template:Pt}});t(W,{...r,type:19,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:c}],methods:[]}});t(I,{...r,type:18,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,structure:W}],methods:[]}});t(V,{...r,type:15,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:64,byteSize:8,slot:0,structure:I}],methods:[]}});t(m,{...r,name:"u32",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[]}});t(S,{...r,type:12,name:"alpha-from-max-color.ColorSpace",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:S}],methods:[]},static:{members:[{...e,type:7,slot:0,name:"srgb",structure:S},{...e,type:7,slot:1,name:"display-p3",structure:S}],methods:[],template:Tt}});t(q,{...r,name:"usize",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:q}],methods:[]}});t(M,{...r,name:"f32",byteSize:4,align:4,instance:{members:[{...e,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:M}],methods:[]}});t(ot,{...r,type:19,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...e,type:4,bitSize:32,byteSize:4,structure:M}],methods:[]}});t(X,{...r,type:2,name:"alpha-from-max-color.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:V},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:S},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:q}],methods:[],template:Kt},static:{members:[{...e,type:7,slot:0,name:"Pixel",structure:o},{...e,type:7,slot:1,name:"FPixel",structure:o},{...e,type:7,slot:2,name:"channels",structure:p}],methods:[],template:_t}});t(x,{...r,type:2,name:"Struct0031",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:X}],methods:[],template:Jt}});t(k,{...r,type:15,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:64,byteSize:8,slot:0,structure:I}],methods:[]}});t(Y,{...r,type:2,name:"alpha-from-max-color.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:k},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:S},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:q}],methods:[],template:Xt},static:{members:[{...e,type:7,slot:0,name:"Pixel",structure:o},{...e,type:7,slot:1,name:"FPixel",structure:o},{...e,type:7,slot:2,name:"channels",structure:p}],methods:[],template:Zt}});t(v,{...r,type:2,name:"Struct0040",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:Y}],methods:[],template:oe}});t(E,{...r,type:2,name:"Struct0043",align:1});t(g,{...r,type:11,name:"ErrorSet0045",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:g}],methods:[]},static:{members:[{...e,type:7,slot:0,name:"OutOfMemory",structure:g}],methods:[],template:ie}});t(at,{...r,type:10,name:"ErrorSet0045!Struct0040",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...e,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:g}],methods:[]}});t(nt,{...r,type:5,name:"Arg0049",byteSize:60,align:4,hasPointer:!0,instance:{members:[{...e,type:5,isRequired:!0,bitOffset:0,bitSize:224,byteSize:28,slot:0,name:"retval",structure:at},{...e,type:3,isRequired:!0,bitOffset:224,bitSize:32,byteSize:4,slot:1,name:"0",structure:m},{...e,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:2,name:"1",structure:m},{...e,type:5,isRequired:!0,bitOffset:288,bitSize:192,byteSize:24,slot:3,name:"2",structure:x},{...e,type:5,isRequired:!0,bitOffset:480,bitSize:0,byteSize:0,slot:4,name:"3",structure:E}],methods:[]}});t(O,{...r,type:11,name:"ErrorSet0048",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:O}],methods:[]},static:{members:[{...e,type:7,slot:0,name:"OutOfMemory",structure:O}],methods:[],template:me}});t(it,{...r,type:10,name:"ErrorSet0048!Struct0040",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...e,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:O}],methods:[]}});t(ut,{...r,type:5,name:"Arg0050",byteSize:68,align:4,hasPointer:!0,instance:{members:[{...e,type:5,isRequired:!0,bitOffset:0,bitSize:224,byteSize:28,slot:0,name:"retval",structure:it},{...e,type:3,isRequired:!0,bitOffset:224,bitSize:32,byteSize:4,slot:1,name:"0",structure:m},{...e,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:2,name:"1",structure:m},{...e,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:3,name:"2",structure:m},{...e,type:3,isRequired:!0,bitOffset:320,bitSize:32,byteSize:4,slot:4,name:"3",structure:m},{...e,type:5,isRequired:!0,bitOffset:352,bitSize:192,byteSize:24,slot:5,name:"4",structure:x},{...e,type:5,isRequired:!0,bitOffset:544,bitSize:0,byteSize:0,slot:6,name:"5",structure:E}],methods:[]}});t(mt,{...r,type:2,name:"alpha-from-max-color",align:1,static:{members:[{...e,type:7,slot:0,name:"kernel",structure:o},{...e,type:7,slot:1,name:"Input",structure:o},{...e,type:7,slot:2,name:"Output",structure:o},{...e,type:7,slot:3,name:"Parameters",structure:o}],methods:[Rs,qs],template:ye}});const Is=[o,c,D,T,$,F,p,K,L,_,B,N,G,H,P,J,Q,rt,W,I,V,m,S,q,M,ot,X,x,k,Y,v,E,g,at,nt,O,it,ut,mt],Vs=mt,xs={runtimeSafety:!1,littleEndian:!0},tt=Ue();tt.recreateStructures(Is,xs);const ks=(async()=>{const n=new URL("alpha-from-max-color-80dbce48.wasm",import.meta.url).href;return fetch(n)})();tt.loadModule(ks);tt.linkVariables(!0);const{constructor:vs}=Vs;tt.getSpecialExports();const{createPartialOutput:Es,Input:As,kernel:st}=vs;function Cs(n,y,u,i,a={},z={}){const h=[];for(const[b]of st.inputImages)h.push(b);const w=[];for(const[b]of st.outputImages)w.push(b);if(Array.isArray(a)){const b=a;a={};for(const[f,d]of h.entries())a[d]=b[f]}const l=new As(void 0),C=[];let R;for(const b of h){let f=a[b];if(f||(h.length===1&&["data","width","height"].every(d=>!!a[d])?f=a:C.push(b)),l[b]=f,R){if(f.colorSpace!==R)throw new Error(`Input images must all use the same color space: ${R}`)}else R=f.colorSpace}if(C.length>0)throw new Error(`Missing input image${C.length>1?"s":""}: ${C.join(", ")}`);const et=Es(n,y,u,i,l,z),St=b=>{const f={};for(const d of w){const{data:{typedArray:j},width:zt,height:Pe}=b[d];let U;if(typeof ImageData=="function"){const we=new Uint8ClampedArray(j.buffer,j.byteOffset,j.byteLength);U=new ImageData(we,zt,i,{colorSpace:R})}else U={data:j,width:zt,height:Pe};if(w.length===1)return U;f[d]=U}return f};return et[Symbol.toStringTag]==="Promise"?et.then(St):St(et)}function js(){const n={};for(let[y,u]of st){if(y==="parameters"){const i={};for(const[a,z]of u){const h=i[a]={};for(let[w,l]of z)typeof l=="object"?l=l.string??l.valueOf():typeof l=="function"&&(l=Us(l.name)),h[w]=l}u=i}else typeof u=="object"&&(u=u.string??u.valueOf());n[y]=u}return n}function Us(n){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[n]}onmessage=async n=>{if(!Array.isArray(n.data))return;const[y,u,...i]=n.data;try{const[a,z]=await Ms(y,i);postMessage([y,u,a],{transfer:z})}catch(a){postMessage(["error",u,a])}};async function Ms(n,y){switch(n){case"getKernelInfo":return[js(...y)];case"createPartialImageData":const i=await Cs(...y),a=[];if("data"in i&&"width"in i&&"height"in i)a.push(i.data.buffer);else for(const z of Object.entries(i))a.push(i.data.buffer);return[i,a];default:throw new Error(`Unknown function: ${n}`)}}postMessage("ready");
