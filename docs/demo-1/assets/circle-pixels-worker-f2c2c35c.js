import{u as ms,a as ys,b as bs,c as ls,d as ps,e as gs,f as Os,g as fs,h as Ss,i as zs,j as js,k as hs,l as ds,m as ws,n as As,p as Us,o as Ps,q as xs,r as Vs,s as Is}from"./index-58d89d46.js";ms();js();hs();ys();bs();ds();ws();As();Us();ls();ps();gs();Os();Ps();Is();fs();xs();Ss();zs();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},e={type:0,isRequired:!1},s={},g={},_={},D={},F={},M={},l={},S={},T={},$={},r={},L={},B={},O={},y={},G={},H={},J={},N={},Q={},W={},X={},Y={},d={},Z={},ee={},me={},x={},te={},V={},m={},f={},U={},ye={},se={},I={},re={},R={},ae={},k={},q={},P={},be={},le={},K={},pe={},ge={},Oe={},He={},fe={},ne={},Se={},Je={},ze={},Ne={},je={},Qe={},he={},We={},Xe={},de={},we={},Ye={},Ae={},Ze={},Ue={},et={},Pe={},tt={},st={},xe={},Ve={},rt={},Ie={},at={},Re={},nt={},ke={},it={},ot={},qe={},ve={},Ee={},ct={},ie={},ut={},mt={},Ce={},yt={},Ke={},bt={},lt={},pt={},gt={},Ot={},ft={},St={},zt={},jt={},ht={},dt={},wt={},At={},Ut={},Pt={},xt={},Vt={},_e={},It={},Rt={},De={},kt={},Fe={},qt={},vt={},Et={},Ct={},Kt={},_t={},Dt={},Me={},Ft={},Mt={},Tt={},$t={},Lt={},Bt={},Gt={},Ht={},Jt={},Nt={},Te={},Qt={},Wt={},Xt={},Yt={},Zt={},es={},ts={},ss={},rs={},as={},Rs=new Uint8Array,ks=new Uint8Array,qs=new Uint8Array([0,0,0,0,0,0,240,63]),vs=new Uint8Array,Es=new Uint8Array([0,0,0,0,0,192,114,64]),Cs=new Uint8Array,Ks=new Uint8Array([0,0,0,0,0,0,89,64]),_s=new Uint8Array([236,6,0,1]),Ds=new Uint8Array([100,105,115,116,97,110,99,101,0]),Fs=new Uint8Array,Ms=new Uint8Array,Ts=new Uint8Array([0,0,0,0,0,0,0,0]),$s=new Uint8Array,Ls=new Uint8Array([0,0,0,0,0,0,0,64]),Bs=new Uint8Array,Gs=new Uint8Array([0,0,0,0,0,0,240,63]),Hs=new Uint8Array([4,7,0,1]),Js=new Uint8Array([115,105,122,101,0]),Ns=new Uint8Array,Qs=new Uint8Array,Ws=new Uint8Array([0,0,0,0,0,0,0,0]),Xs=new Uint8Array,Ys=new Uint8Array([0,0,0,0,0,192,114,64]),Zs=new Uint8Array,er=new Uint8Array([0,0,0,0,0,0,0,64]),tr=new Uint8Array([16,7,0,1]),sr=new Uint8Array([101,100,103,101,65,108,112,104,97,0]),rr=new Uint8Array,ar=new Uint8Array,nr=new Uint8Array,ir=new Uint8Array,or=new Uint8Array([4]),cr=new Uint8Array,ur=new Uint8Array,mr=new Uint8Array([250,4,0,1]),yr=new Uint8Array([98,101,46,110,101,117,114,111,112,114,111,100,117,99,116,105,111,110,115,0]),br=new Uint8Array([25,5,0,1]),lr=new Uint8Array([78,101,117,114,111,32,80,114,111,100,117,99,116,105,111,110,115,0]),pr=new Uint8Array,gr=new Uint8Array([1]),Or=new Uint8Array([60,5,0,1]),fr=new Uint8Array([99,105,114,99,108,101,80,105,120,101,108,115,0]),Sr=new Uint8Array,zr=new Uint8Array,jr=new Uint8Array,hr=new Uint8Array([0]),dr=new Uint8Array([1]),ns=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),wr=new Uint8Array,Ar=new Uint8Array,Ur=new Uint8Array,Pr=new Uint8Array,xr=new Uint8Array([4]),$e=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),is=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Vr=new Uint8Array,Ir=new Uint8Array,Rr=new Uint8Array,kr=new Uint8Array,qr=new Uint8Array([4]),Le=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),vr=new Uint8Array([0,0,200,66,0,0,128,63,0,0,0,64]),Er=new Uint8Array([27,0]),Cr=new Uint8Array,Kr=new Uint8Array,_r=new Uint8Array,Dr=new Uint8Array;Object.assign(He,{slots:{0:fe,1:Se,2:ze,3:je,4:he}});Object.assign(fe,{structure:s,memory:{array:Rs},slots:{0:ne}});Object.assign(ne,{structure:O});Object.assign(Se,{structure:r,memory:{array:ks},slots:{0:Je}});Object.assign(Je,{structure:y,memory:{array:qs}});Object.assign(ze,{structure:r,memory:{array:vs},slots:{0:Ne}});Object.assign(Ne,{structure:y,memory:{array:Es}});Object.assign(je,{structure:r,memory:{array:Cs},slots:{0:Qe}});Object.assign(Qe,{structure:y,memory:{array:Ks}});Object.assign(he,{structure:B,memory:{array:_s},slots:{0:We}});Object.assign(We,{structure:L,memory:{array:Ds},reloc:16778988,const:!0});Object.assign(Xe,{slots:{0:de,1:we,2:Ae,3:Ue,4:Pe}});Object.assign(de,{structure:s,memory:{array:Fs},slots:{0:ne}});Object.assign(we,{structure:r,memory:{array:Ms},slots:{0:Ye}});Object.assign(Ye,{structure:y,memory:{array:Ts}});Object.assign(Ae,{structure:r,memory:{array:$s},slots:{0:Ze}});Object.assign(Ze,{structure:y,memory:{array:Ls}});Object.assign(Ue,{structure:r,memory:{array:Bs},slots:{0:et}});Object.assign(et,{structure:y,memory:{array:Gs}});Object.assign(Pe,{structure:J,memory:{array:Hs},slots:{0:tt}});Object.assign(tt,{structure:H,memory:{array:Js},reloc:16779012,const:!0});Object.assign(st,{slots:{0:xe,1:Ve,2:Ie,3:Re,4:ke}});Object.assign(xe,{structure:s,memory:{array:Ns},slots:{0:ne}});Object.assign(Ve,{structure:r,memory:{array:Qs},slots:{0:rt}});Object.assign(rt,{structure:y,memory:{array:Ws}});Object.assign(Ie,{structure:r,memory:{array:Xs},slots:{0:at}});Object.assign(at,{structure:y,memory:{array:Ys}});Object.assign(Re,{structure:r,memory:{array:Zs},slots:{0:nt}});Object.assign(nt,{structure:y,memory:{array:er}});Object.assign(ke,{structure:W,memory:{array:tr},slots:{0:it}});Object.assign(it,{structure:Q,memory:{array:sr},reloc:16779024,const:!0});Object.assign(ot,{slots:{0:qe,1:ve,2:Ee}});Object.assign(qe,{structure:G,memory:{array:rr},slots:{0:fe,1:Se,2:ze,3:je,4:he}});Object.assign(ve,{structure:N,memory:{array:ar},slots:{0:de,1:we,2:Ae,3:Ue,4:Pe}});Object.assign(Ee,{structure:X,memory:{array:nr},slots:{0:xe,1:Ve,2:Ie,3:Re,4:ke}});Object.assign(ct,{slots:{0:ie}});Object.assign(ie,{structure:l,memory:{array:ir},slots:{0:ut}});Object.assign(ut,{structure:S,memory:{array:or}});Object.assign(mt,{slots:{0:Ce}});Object.assign(Ce,{structure:d,memory:{array:cr},slots:{0:ie}});Object.assign(yt,{slots:{0:Ke}});Object.assign(Ke,{structure:d,memory:{array:ur},slots:{0:ie}});Object.assign(bt,{slots:{0:lt,1:gt,2:ft,3:zt,4:ht,5:dt,6:wt}});Object.assign(lt,{structure:D,memory:{array:mr},slots:{0:pt}});Object.assign(pt,{structure:_,memory:{array:yr},reloc:16778490,const:!0});Object.assign(gt,{structure:M,memory:{array:br},slots:{0:Ot}});Object.assign(Ot,{structure:F,memory:{array:lr},reloc:16778521,const:!0});Object.assign(ft,{structure:l,memory:{array:pr},slots:{0:St}});Object.assign(St,{structure:S,memory:{array:gr}});Object.assign(zt,{structure:$,memory:{array:Or},slots:{0:jt}});Object.assign(jt,{structure:T,memory:{array:fr},reloc:16778556,const:!0});Object.assign(ht,{structure:Y,memory:{array:Sr},slots:{0:qe,1:ve,2:Ee}});Object.assign(dt,{structure:Z,memory:{array:zr},slots:{0:Ce}});Object.assign(wt,{structure:ee,memory:{array:jr},slots:{0:Ke}});Object.assign(At,{slots:{0:Ut,1:Pt}});Object.assign(Ut,{structure:f,memory:{array:hr}});Object.assign(Pt,{structure:f,memory:{array:dr}});Object.assign(xt,{memory:{array:ns},slots:{0:Vt}});Object.assign(Vt,{structure:V,memory:{array:ns,offset:0,length:8},slots:{0:_e}});Object.assign(_e,{structure:te,memory:{array:wr},reloc:0,const:!0});Object.assign(It,{slots:{0:Rt,1:kt,2:qt}});Object.assign(Rt,{structure:s,memory:{array:Ar},slots:{0:De}});Object.assign(De,{structure:x});Object.assign(kt,{structure:s,memory:{array:Ur},slots:{0:Fe}});Object.assign(Fe,{structure:ye});Object.assign(qt,{structure:l,memory:{array:Pr},slots:{0:vt}});Object.assign(vt,{structure:S,memory:{array:xr}});Object.assign(Et,{memory:{array:$e},slots:{0:Ct}});Object.assign(Ct,{structure:se,memory:{array:$e},slots:{0:Kt}});Object.assign(Kt,{structure:V,memory:{array:$e,offset:0,length:8},slots:{0:_e}});Object.assign(_t,{memory:{array:is},slots:{0:Dt}});Object.assign(Dt,{structure:R,memory:{array:is,offset:0,length:8},slots:{0:Me}});Object.assign(Me,{structure:re,memory:{array:Vr},reloc:0});Object.assign(Ft,{slots:{0:Mt,1:Tt,2:$t}});Object.assign(Mt,{structure:s,memory:{array:Ir},slots:{0:De}});Object.assign(Tt,{structure:s,memory:{array:Rr},slots:{0:Fe}});Object.assign($t,{structure:l,memory:{array:kr},slots:{0:Lt}});Object.assign(Lt,{structure:S,memory:{array:qr}});Object.assign(Bt,{memory:{array:Le},slots:{0:Gt}});Object.assign(Gt,{structure:ae,memory:{array:Le},slots:{0:Ht}});Object.assign(Ht,{structure:R,memory:{array:Le,offset:0,length:8},slots:{0:Me}});Object.assign(Jt,{memory:{array:vr}});Object.assign(Nt,{slots:{0:Te}});Object.assign(Te,{structure:P,memory:{array:Er}});Object.assign(Qt,{slots:{0:Te}});Object.assign(Wt,{slots:{0:Xt,1:Zt,2:ts,3:rs}});Object.assign(Xt,{structure:s,memory:{array:Cr},slots:{0:Yt}});Object.assign(Yt,{structure:me});Object.assign(Zt,{structure:s,memory:{array:Kr},slots:{0:es}});Object.assign(es,{structure:I});Object.assign(ts,{structure:s,memory:{array:_r},slots:{0:ss}});Object.assign(ss,{structure:k});Object.assign(rs,{structure:s,memory:{array:Dr},slots:{0:as}});Object.assign(as,{structure:q});const Fr={argStruct:le,thunkId:2,name:"createOutput"},Mr={argStruct:ge,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...t,name:"type",align:1,instance:{members:[{...e,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(g,{...t,name:"u8",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(_,{...t,type:1,name:"[19:0]u8",length:19,byteSize:20,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(D,{...t,type:13,name:"*const [19:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[]}});Object.assign(F,{...t,type:1,name:"[17:0]u8",length:17,byteSize:18,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(M,{...t,type:13,name:"*const [17:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(l,{...t,name:"comptime_int",align:1,instance:{members:[{...e,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:l}],methods:[]}});Object.assign(S,{...t,name:"i8",byteSize:1,align:1,instance:{members:[{...e,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(T,{...t,type:1,name:"[12:0]u8",length:12,byteSize:13,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign($,{...t,type:13,name:"*const [12:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[]}});Object.assign(r,{...t,name:"comptime_float",align:1,instance:{members:[{...e,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(L,{...t,type:1,name:"[8:0]u8",length:8,byteSize:9,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(B,{...t,type:13,name:"*const [8:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[]}});Object.assign(O,{...t,name:"f32",byteSize:4,align:4,instance:{members:[{...e,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:O}],methods:[]}});Object.assign(y,{...t,name:"f64",byteSize:8,align:8,instance:{members:[{...e,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:y}],methods:[]}});Object.assign(G,{...t,type:2,name:"Struct2866347245",align:1,instance:{members:[{...e,type:9,slot:0,name:"type",structure:s},{...e,type:9,slot:1,name:"minValue",structure:r},{...e,type:9,slot:2,name:"maxValue",structure:r},{...e,type:9,slot:3,name:"defaultValue",structure:r},{...e,type:9,slot:4,name:"description",structure:B}],methods:[],template:He}});Object.assign(H,{...t,type:1,name:"[4:0]u8",length:4,byteSize:5,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(J,{...t,type:13,name:"*const [4:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[]}});Object.assign(N,{...t,type:2,name:"Struct1978584772",align:1,instance:{members:[{...e,type:9,slot:0,name:"type",structure:s},{...e,type:9,slot:1,name:"minValue",structure:r},{...e,type:9,slot:2,name:"maxValue",structure:r},{...e,type:9,slot:3,name:"defaultValue",structure:r},{...e,type:9,slot:4,name:"description",structure:J}],methods:[],template:Xe}});Object.assign(Q,{...t,type:1,name:"[9:0]u8",length:9,byteSize:10,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(W,{...t,type:13,name:"*const [9:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[]}});Object.assign(X,{...t,type:2,name:"Struct1203006598",align:1,instance:{members:[{...e,type:9,slot:0,name:"type",structure:s},{...e,type:9,slot:1,name:"minValue",structure:r},{...e,type:9,slot:2,name:"maxValue",structure:r},{...e,type:9,slot:3,name:"defaultValue",structure:r},{...e,type:9,slot:4,name:"description",structure:W}],methods:[],template:st}});Object.assign(Y,{...t,type:2,name:"Struct2398695803",align:1,instance:{members:[{...e,type:9,slot:0,name:"dist",structure:G},{...e,type:9,slot:1,name:"size",structure:N},{...e,type:9,slot:2,name:"edgeAlpha",structure:X}],methods:[],template:ot}});Object.assign(d,{...t,type:2,name:"Struct3832472641",align:1,instance:{members:[{...e,type:9,slot:0,name:"channels",structure:l}],methods:[],template:ct}});Object.assign(Z,{...t,type:2,name:"Struct2242867897",align:1,instance:{members:[{...e,type:9,slot:0,name:"src",structure:d}],methods:[],template:mt}});Object.assign(ee,{...t,type:2,name:"Struct172100005",align:1,instance:{members:[{...e,type:9,slot:0,name:"dst",structure:d}],methods:[],template:yt}});Object.assign(me,{...t,type:2,name:"circle-pixels.kernel",align:1,static:{members:[{...e,type:9,slot:0,name:"namespace",structure:D},{...e,type:9,slot:1,name:"vendor",structure:M},{...e,type:9,slot:2,name:"version",structure:l},{...e,type:9,slot:3,name:"description",structure:$},{...e,type:9,slot:4,name:"parameters",structure:Y},{...e,type:9,slot:5,name:"inputImages",structure:Z},{...e,type:9,slot:6,name:"outputImages",structure:ee}],methods:[],template:bt}});Object.assign(x,{...t,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(te,{...t,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,structure:x}],methods:[]}});Object.assign(V,{...t,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:64,byteSize:8,slot:0,structure:te}],methods:[]}});Object.assign(m,{...t,name:"u32",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[]}});Object.assign(f,{...t,type:11,name:"circle-pixels.ColorSpace",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"srgb",structure:f},{...e,type:9,slot:1,name:"display-p3",structure:f}],methods:[],template:At}});Object.assign(U,{...t,name:"usize",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:U}],methods:[]}});Object.assign(ye,{...t,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...e,type:4,bitSize:32,byteSize:4,structure:O}],methods:[]}});Object.assign(se,{...t,type:2,name:"circle-pixels.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:V},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:f},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:xt},static:{members:[{...e,type:9,slot:0,name:"Pixel",structure:s},{...e,type:9,slot:1,name:"FPixel",structure:s},{...e,type:9,slot:2,name:"channels",structure:l}],methods:[],template:It}});Object.assign(I,{...t,type:2,name:"circle-pixels.KernelInput(u8,circle-pixels.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:se}],methods:[],template:Et}});Object.assign(re,{...t,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,structure:x}],methods:[]}});Object.assign(R,{...t,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:64,byteSize:8,slot:0,structure:re}],methods:[]}});Object.assign(ae,{...t,type:2,name:"circle-pixels.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:R},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:f},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:_t},static:{members:[{...e,type:9,slot:0,name:"Pixel",structure:s},{...e,type:9,slot:1,name:"FPixel",structure:s},{...e,type:9,slot:2,name:"channels",structure:l}],methods:[],template:Ft}});Object.assign(k,{...t,type:2,name:"circle-pixels.KernelOutput(u8,circle-pixels.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:ae}],methods:[],template:Bt}});Object.assign(q,{...t,type:2,name:"circle-pixels.KernelParameters(circle-pixels.kernel)",byteSize:12,align:4,instance:{members:[{...e,type:4,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"dist",structure:O},{...e,type:4,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"size",structure:O},{...e,type:4,bitOffset:64,bitSize:32,byteSize:4,slot:2,name:"edgeAlpha",structure:O}],methods:[],template:Jt}});Object.assign(P,{...t,type:10,name:"@typeInfo(@typeInfo(@TypeOf(circle-pixels.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"OutOfMemory",structure:P}],methods:[],template:Nt}});Object.assign(be,{...t,type:9,name:"ErrorSet709993732!circle-pixels.KernelOutput(u8,circle-pixels.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:k},{...e,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:P}],methods:[]}});Object.assign(le,{...t,type:5,name:"createOutput",byteSize:72,align:4,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...e,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...e,type:7,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:I},{...e,type:7,isRequired:!0,bitOffset:256,bitSize:96,byteSize:12,slot:1,name:"3",structure:q},{...e,type:7,isRequired:!0,bitOffset:352,bitSize:224,byteSize:28,slot:2,name:"retval",structure:be}],methods:[]}});Object.assign(K,{...t,type:10,name:"@typeInfo(@typeInfo(@TypeOf(circle-pixels.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"OutOfMemory",structure:K}],methods:[],template:Qt}});Object.assign(pe,{...t,type:9,name:"ErrorSet3562998636!circle-pixels.KernelOutput(u8,circle-pixels.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:k},{...e,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:K}],methods:[]}});Object.assign(ge,{...t,type:5,name:"createPartialOutput",byteSize:80,align:4,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...e,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:m},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:m},{...e,type:7,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:I},{...e,type:7,isRequired:!0,bitOffset:320,bitSize:96,byteSize:12,slot:1,name:"5",structure:q},{...e,type:7,isRequired:!0,bitOffset:416,bitSize:224,byteSize:28,slot:2,name:"retval",structure:pe}],methods:[]}});Object.assign(Oe,{...t,type:2,name:"circle-pixels",align:1,static:{members:[{...e,type:9,slot:0,name:"kernel",structure:s},{...e,type:9,slot:1,name:"Input",structure:s},{...e,type:9,slot:2,name:"Output",structure:s},{...e,type:9,slot:3,name:"Parameters",structure:s}],methods:[Fr,Mr],template:Wt}});const Tr=[s,g,_,D,F,M,l,S,T,$,r,L,B,O,y,G,H,J,N,Q,W,X,Y,d,Z,ee,me,x,te,V,m,f,U,ye,se,I,re,R,ae,k,q,P,be,le,K,pe,ge,Oe],$r=Oe,Lr={runtimeSafety:!1,littleEndian:!0},oe=Vs();oe.getControlObject();oe.recreateStructures(Tr,Lr);const Br=(async()=>{const o=new URL("circle-pixels-b3678607.wasm",import.meta.url).href;return fetch(o)})();oe.loadModule(Br);oe.linkVariables(!0);const{constructor:Gr}=$r,{createPartialOutput:Hr,Input:Jr,kernel:ue}=Gr;function Nr(o,c,n,a,i={},z={}){const j=[];for(const[b]of ue.inputImages)j.push(b);const w=[];for(const[b]of ue.outputImages)w.push(b);if(Array.isArray(i)){const b=i;i={};for(const[p,h]of j.entries())i[h]=b[p]}const u=new Jr(void 0),v=[];let A;for(const b of j){let p=i[b];if(p||(j.length===1&&["data","width","height"].every(h=>!!i[h])?p=i:v.push(b)),u[b]=p,A){if(p.colorSpace!==A)throw new Error(`Input images must all use the same color space: ${A}`)}else A=p.colorSpace}if(v.length>0)throw new Error(`Missing input image${v.length>1?"s":""}: ${v.join(", ")}`);const ce=Hr(o,c,n,a,u,z),Be=b=>{const p={};for(const h of w){const{data:{typedArray:E},width:Ge,height:cs}=b[h];let C;if(typeof ImageData=="function"){const us=new Uint8ClampedArray(E.buffer,E.byteOffset,E.byteLength);C=new ImageData(us,Ge,a,{colorSpace:A})}else C={data:E,width:Ge,height:cs};if(w.length===1)return C;p[h]=C}return p};return ce[Symbol.toStringTag]==="Promise"?ce.then(Be):Be(ce)}function Qr(){const o={};for(let[c,n]of ue){if(c==="parameters"){const a={};for(const[i,z]of n){const j=a[i]={};for(let[w,u]of z)typeof u=="object"?"string"in u?u=u.string:u=os(u):typeof u=="function"&&(u=Wr(u.name)),j[w]=u}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());o[c]=n}return o}function os(o){const c=[];for(let[n,a]of o)typeof a=="object"&&(a=os(a)),c[n]=a;return c}function Wr(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[c,n,...a]=o.data;Xr(c,a).then(([i,z])=>{postMessage([c,n,i],{transfer:z})}).catch(i=>{postMessage(["error",n,i])})};async function Xr(o,c){switch(o){case"getKernelInfo":return[Qr(...c)];case"createPartialImageData":const a=await Nr(...c),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const z of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${o}`)}}
