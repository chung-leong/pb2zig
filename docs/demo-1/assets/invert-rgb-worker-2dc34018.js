import{u as Se,a as Oe,b as ze,c as he,d as je,e as de,f as we,g as Ae,h as Ue,i as ve,j as Pe,k as Re,l as ke,m as qe,n as Ie,o as Ve,p as Ee,q as xe}from"./index-33238b17.js";Se();Re();ke();Oe();ze();qe();Ie();Ve();he();je();de();we();xe();Ee();Ae();Ue();ve();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},g={},K={},C={},M={},D={},y={},p={},T={},F={},$={},j={},_={},L={},Y={},U={},B={},v={},o={},l={},A={},x={},Z={},G={},P={},H={},R={},J={},k={},q={},z={},tt={},et={},h={},st={},rt={},nt={},pt={},N={},ft={},St={},at={},Ot={},it={},zt={},ht={},jt={},dt={},wt={},At={},Ut={},vt={},Pt={},Rt={},kt={},qt={},It={},Vt={},Et={},xt={},Kt={},ot={},Ct={},Mt={},ct={},Dt={},ut={},Tt={},Ft={},$t={},_t={},Lt={},Bt={},Gt={},mt={},Ht={},Jt={},Nt={},Qt={},Wt={},Xt={},Yt={},Zt={},te={},ee={},se={},re={},ne={},ae={},ie={},oe={},ce={},ue={},me={},ye={},be={},Ke=new Uint8Array,Ce=new Uint8Array([4]),Me=new Uint8Array,De=new Uint8Array,Te=new Uint8Array([248,4,0,1]),Fe=new Uint8Array([65,73,70,0]),$e=new Uint8Array([7,5,0,1]),_e=new Uint8Array([65,100,111,98,101,32,83,121,115,116,101,109,115,44,32,73,110,99,46,0]),Le=new Uint8Array,Be=new Uint8Array([2]),Ge=new Uint8Array([44,5,0,1]),He=new Uint8Array([73,110,118,101,114,116,32,116,104,101,32,82,101,100,44,32,71,114,101,101,110,32,97,110,100,32,66,108,117,101,32,99,104,97,110,110,101,108,115,32,111,102,32,97,110,32,105,109,97,103,101,0]),Je=new Uint8Array,Ne=new Uint8Array,Qe=new Uint8Array,We=new Uint8Array([0]),Xe=new Uint8Array([1]),le=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ye=new Uint8Array,Ze=new Uint8Array,ts=new Uint8Array,es=new Uint8Array,ss=new Uint8Array([4]),yt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ge=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),rs=new Uint8Array,ns=new Uint8Array,as=new Uint8Array,is=new Uint8Array,os=new Uint8Array([4]),bt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),cs=new Uint8Array([27,0]),us=new Uint8Array([27,0]),ms=new Uint8Array,ys=new Uint8Array,bs=new Uint8Array,ls=new Uint8Array;Object.assign(pt,{slots:{0:N}});Object.assign(N,{structure:y,memory:{array:Ke},const:!0,slots:{0:ft}});Object.assign(ft,{structure:p,memory:{array:Ce},const:!0});Object.assign(St,{slots:{0:at}});Object.assign(at,{structure:j,memory:{array:Me},const:!0,slots:{0:N}});Object.assign(Ot,{slots:{0:it}});Object.assign(it,{structure:j,memory:{array:De},const:!0,slots:{0:N}});Object.assign(zt,{slots:{0:ht,1:dt,2:At,3:vt,4:Rt,5:kt,6:qt}});Object.assign(ht,{structure:C,memory:{array:Te},const:!0,slots:{0:jt}});Object.assign(jt,{structure:K,memory:{array:Fe},reloc:16778488});Object.assign(dt,{structure:D,memory:{array:$e},const:!0,slots:{0:wt}});Object.assign(wt,{structure:M,memory:{array:_e},reloc:16778503});Object.assign(At,{structure:y,memory:{array:Le},const:!0,slots:{0:Ut}});Object.assign(Ut,{structure:p,memory:{array:Be},const:!0});Object.assign(vt,{structure:F,memory:{array:Ge},const:!0,slots:{0:Pt}});Object.assign(Pt,{structure:T,memory:{array:He},reloc:16778540});Object.assign(Rt,{structure:$,memory:{array:Je},const:!0});Object.assign(kt,{structure:_,memory:{array:Ne},const:!0,slots:{0:at}});Object.assign(qt,{structure:L,memory:{array:Qe},const:!0,slots:{0:it}});Object.assign(It,{slots:{0:Vt,1:Et}});Object.assign(Vt,{structure:l,memory:{array:We},const:!0});Object.assign(Et,{structure:l,memory:{array:Xe},const:!0});Object.assign(xt,{memory:{array:le},slots:{0:Kt}});Object.assign(Kt,{structure:v,memory:{array:le,offset:0,length:8},slots:{0:ot}});Object.assign(ot,{structure:B,memory:{array:Ye},reloc:0});Object.assign(Ct,{slots:{0:Mt,1:Dt,2:Tt}});Object.assign(Mt,{structure:s,memory:{array:Ze},const:!0,slots:{0:ct}});Object.assign(ct,{structure:U});Object.assign(Dt,{structure:s,memory:{array:ts},const:!0,slots:{0:ut}});Object.assign(ut,{structure:Z});Object.assign(Tt,{structure:y,memory:{array:es},const:!0,slots:{0:Ft}});Object.assign(Ft,{structure:p,memory:{array:ss},const:!0});Object.assign($t,{memory:{array:yt},slots:{0:_t}});Object.assign(_t,{structure:G,memory:{array:yt},slots:{0:Lt}});Object.assign(Lt,{structure:v,memory:{array:yt,offset:0,length:8},slots:{0:ot}});Object.assign(Bt,{memory:{array:ge},slots:{0:Gt}});Object.assign(Gt,{structure:R,memory:{array:ge,offset:0,length:8},slots:{0:mt}});Object.assign(mt,{structure:H,memory:{array:rs},reloc:0});Object.assign(Ht,{slots:{0:Jt,1:Nt,2:Qt}});Object.assign(Jt,{structure:s,memory:{array:ns},const:!0,slots:{0:ct}});Object.assign(Nt,{structure:s,memory:{array:as},const:!0,slots:{0:ut}});Object.assign(Qt,{structure:y,memory:{array:is},const:!0,slots:{0:Wt}});Object.assign(Wt,{structure:p,memory:{array:os},const:!0});Object.assign(Xt,{memory:{array:bt},slots:{0:Yt}});Object.assign(Yt,{structure:J,memory:{array:bt},slots:{0:Zt}});Object.assign(Zt,{structure:R,memory:{array:bt,offset:0,length:8},slots:{0:mt}});Object.assign(te,{slots:{0:ee}});Object.assign(ee,{structure:z,memory:{array:cs},const:!0});Object.assign(se,{slots:{0:re}});Object.assign(re,{structure:h,memory:{array:us},const:!0});Object.assign(ne,{slots:{0:ae,1:oe,2:ue,3:ye}});Object.assign(ae,{structure:s,memory:{array:ms},const:!0,slots:{0:ie}});Object.assign(ie,{structure:Y});Object.assign(oe,{structure:s,memory:{array:ys},const:!0,slots:{0:ce}});Object.assign(ce,{structure:P});Object.assign(ue,{structure:s,memory:{array:bs},const:!0,slots:{0:me}});Object.assign(me,{structure:k});Object.assign(ye,{structure:s,memory:{array:ls},const:!0,slots:{0:be}});Object.assign(be,{structure:q});const gs={argStruct:et,thunkId:2,name:"createOutput"},ps={argStruct:rt,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(g,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(K,{...e,type:1,name:"[3:0]u8",length:3,byteSize:4,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(C,{...e,type:13,name:"*const [3:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:K}],methods:[]}});Object.assign(M,{...e,type:1,name:"[19:0]u8",length:19,byteSize:20,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(D,{...e,type:13,name:"*const [19:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(y,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:y}],methods:[]}});Object.assign(p,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(T,{...e,type:1,name:"[51:0]u8",length:51,byteSize:52,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(F,{...e,type:13,name:"*const [51:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[]}});Object.assign($,{...e,type:2,name:"@TypeOf(.{})",align:1,isTuple:!0});Object.assign(j,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:y}],methods:[],template:pt}});Object.assign(_,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:7,slot:0,name:"src",structure:j}],methods:[],template:St}});Object.assign(L,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:j}],methods:[],template:Ot}});Object.assign(Y,{...e,type:2,name:"invert-rgb.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:C},{...t,type:7,slot:1,name:"vendor",structure:D},{...t,type:7,slot:2,name:"version",structure:y},{...t,type:7,slot:3,name:"description",structure:F},{...t,type:7,slot:4,name:"parameters",structure:$},{...t,type:7,slot:5,name:"inputImages",structure:_},{...t,type:7,slot:6,name:"outputImages",structure:L}],methods:[],template:zt}});Object.assign(U,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(B,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:U}],methods:[]}});Object.assign(v,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:B}],methods:[]}});Object.assign(o,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:o}],methods:[]}});Object.assign(l,{...e,type:11,name:"invert-rgb.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:l}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:l},{...t,type:7,slot:1,name:"display-p3",structure:l}],methods:[],template:It}});Object.assign(A,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:A}],methods:[]}});Object.assign(x,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:x}],methods:[]}});Object.assign(Z,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:x}],methods:[]}});Object.assign(G,{...e,type:2,name:"invert-rgb.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:v},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:o},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:o},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:l},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:A}],methods:[],template:xt},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:y}],methods:[],template:Ct}});Object.assign(P,{...e,type:2,name:"invert-rgb.KernelInput(u8,invert-rgb.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:G}],methods:[],template:$t}});Object.assign(H,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:U}],methods:[]}});Object.assign(R,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:H}],methods:[]}});Object.assign(J,{...e,type:2,name:"invert-rgb.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:R},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:o},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:o},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:l},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:A}],methods:[],template:Bt},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:y}],methods:[],template:Ht}});Object.assign(k,{...e,type:2,name:"invert-rgb.KernelOutput(u8,invert-rgb.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:J}],methods:[],template:Xt}});Object.assign(q,{...e,type:2,name:"invert-rgb.KernelParameters(invert-rgb.kernel)",align:1});Object.assign(z,{...e,type:10,name:"ErrorSet289601217",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:z}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:z}],methods:[],template:te}});Object.assign(tt,{...e,type:9,name:"ErrorSet289601217!invert-rgb.KernelOutput(u8,invert-rgb.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:k},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:z}],methods:[]}});Object.assign(et,{...e,type:5,name:"createOutput",byteSize:60,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:o},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:o},{...t,type:5,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:P},{...t,type:5,isRequired:!0,bitOffset:480,bitSize:0,byteSize:0,slot:1,name:"3",structure:q},{...t,type:5,isRequired:!0,bitOffset:256,bitSize:224,byteSize:28,slot:2,name:"retval",structure:tt}],methods:[]}});Object.assign(h,{...e,type:10,name:"ErrorSet2189472023",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:h}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:h}],methods:[],template:se}});Object.assign(st,{...e,type:9,name:"ErrorSet2189472023!invert-rgb.KernelOutput(u8,invert-rgb.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:k},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:h}],methods:[]}});Object.assign(rt,{...e,type:5,name:"createPartialOutput",byteSize:68,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:o},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:o},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:o},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:o},{...t,type:5,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:P},{...t,type:5,isRequired:!0,bitOffset:544,bitSize:0,byteSize:0,slot:1,name:"5",structure:q},{...t,type:5,isRequired:!0,bitOffset:320,bitSize:224,byteSize:28,slot:2,name:"retval",structure:st}],methods:[]}});Object.assign(nt,{...e,type:2,name:"invert-rgb",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:s},{...t,type:7,slot:1,name:"Input",structure:s},{...t,type:7,slot:2,name:"Output",structure:s},{...t,type:7,slot:3,name:"Parameters",structure:s}],methods:[gs,ps],template:ne}});const fs=[s,g,K,C,M,D,y,p,T,F,$,j,_,L,Y,U,B,v,o,l,A,x,Z,G,P,H,R,J,k,q,z,tt,et,h,st,rt,nt],Ss=nt,Os={runtimeSafety:!1,littleEndian:!0},Q=Pe();Q.getSpecialExports();Q.recreateStructures(fs,Os);const zs=(async()=>{const a=new URL("invert-rgb-3c77e500.wasm",import.meta.url).href;return fetch(a)})();Q.loadModule(zs);Q.linkVariables(!0);const{constructor:hs}=Ss,{createPartialOutput:js,Input:ds,kernel:X}=hs;function ws(a,c,i,n,r={},f={}){const S=[];for(const[m]of X.inputImages)S.push(m);const d=[];for(const[m]of X.outputImages)d.push(m);if(Array.isArray(r)){const m=r;r={};for(const[b,O]of S.entries())r[O]=m[b]}const u=new ds(void 0),I=[];let w;for(const m of S){let b=r[m];if(b||(S.length===1&&["data","width","height"].every(O=>!!r[O])?b=r:I.push(m)),u[m]=b,w){if(b.colorSpace!==w)throw new Error(`Input images must all use the same color space: ${w}`)}else w=b.colorSpace}if(I.length>0)throw new Error(`Missing input image${I.length>1?"s":""}: ${I.join(", ")}`);const W=js(a,c,i,n,u,f),lt=m=>{const b={};for(const O of d){const{data:{typedArray:V},width:gt,height:pe}=m[O];let E;if(typeof ImageData=="function"){const fe=new Uint8ClampedArray(V.buffer,V.byteOffset,V.byteLength);E=new ImageData(fe,gt,n,{colorSpace:w})}else E={data:V,width:gt,height:pe};if(d.length===1)return E;b[O]=E}return b};return W[Symbol.toStringTag]==="Promise"?W.then(lt):lt(W)}function As(){const a={};for(let[c,i]of X){if(c==="parameters"){const n={};for(const[r,f]of i){const S=n[r]={};for(let[d,u]of f)typeof u=="object"?u=u.string??u.valueOf():typeof u=="function"&&(u=Us(u.name)),S[d]=u}i=n}else typeof i=="object"&&(i=i.string??i.valueOf());a[c]=i}return a}function Us(a){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[a]}onmessage=async a=>{if(!Array.isArray(a.data))return;const[c,i,...n]=a.data;try{const[r,f]=await vs(c,n);postMessage([c,i,r],{transfer:f})}catch(r){postMessage(["error",i,r])}};async function vs(a,c){switch(a){case"getKernelInfo":return[As(...c)];case"createPartialImageData":const n=await ws(...c),r=[];if("data"in n&&"width"in n&&"height"in n)r.push(n.data.buffer);else for(const f of Object.entries(n))r.push(n.data.buffer);return[n,r];default:throw new Error(`Unknown function: ${a}`)}}postMessage("ready");
