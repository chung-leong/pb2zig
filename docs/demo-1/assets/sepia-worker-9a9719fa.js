import{u as ve,a as Ee,b as xe,c as Ke,d as Ce,e as De,f as Me,g as Fe,h as Te,i as _e,j as $e,k as Le,l as Be,m as Ge,n as He,o as Je,p as Ne,q as Qe}from"./index-270629a1.js";ve();Le();Be();Ee();xe();Ge();He();Je();Ne();Ke();Ce();De();Me();Qe();Fe();Te();_e();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},g={},D={},M={},F={},T={},y={},f={},_={},$={},p={},d={},w={},L={},B={},A={},G={},H={},et={},R={},J={},k={},o={},l={},V={},st={},N={},q={},Q={},I={},W={},v={},E={},j={},rt={},nt={},h={},at={},it={},ot={},wt={},ct={},At={},ut={},Ut={},mt={},Pt={},yt={},Vt={},Rt={},bt={},kt={},X={},qt={},It={},lt={},vt={},pt={},Et={},xt={},Kt={},Ct={},Dt={},Mt={},Ft={},Tt={},_t={},$t={},Lt={},Bt={},Gt={},Ht={},Jt={},Nt={},Qt={},gt={},Wt={},Xt={},ft={},Yt={},Ot={},Zt={},te={},ee={},se={},re={},ne={},ae={},St={},ie={},oe={},ce={},ue={},me={},ye={},be={},le={},pe={},ge={},fe={},Oe={},Se={},ze={},je={},he={},de={},we={},Ae={},Ue={},Pe={},Ve={},We=new Uint8Array,Xe=new Uint8Array,Ye=new Uint8Array([0,0,0,0,0,0,0,0]),Ze=new Uint8Array,ts=new Uint8Array([0,0,0,0,0,0,240,63]),es=new Uint8Array,ss=new Uint8Array([0,0,0,0,0,0,0,0]),rs=new Uint8Array,ns=new Uint8Array,as=new Uint8Array([4]),is=new Uint8Array,os=new Uint8Array,cs=new Uint8Array([122,5,0,1]),us=new Uint8Array([65,73,70,0]),ms=new Uint8Array([137,5,0,1]),ys=new Uint8Array([65,100,111,98,101,32,83,121,115,116,101,109,115,0]),bs=new Uint8Array,ls=new Uint8Array([2]),ps=new Uint8Array([168,5,0,1]),gs=new Uint8Array([97,32,118,97,114,105,97,98,108,101,32,115,101,112,105,97,32,102,105,108,116,101,114,0]),fs=new Uint8Array,Os=new Uint8Array,Ss=new Uint8Array,zs=new Uint8Array([0]),js=new Uint8Array([1]),Re=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),hs=new Uint8Array,ds=new Uint8Array,ws=new Uint8Array,As=new Uint8Array,Us=new Uint8Array([4]),zt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ke=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ps=new Uint8Array,Vs=new Uint8Array,Rs=new Uint8Array,ks=new Uint8Array,qs=new Uint8Array([4]),jt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Is=new Uint8Array([0,0,0,0]),vs=new Uint8Array([27,0]),Es=new Uint8Array([27,0]),xs=new Uint8Array,Ks=new Uint8Array,Cs=new Uint8Array,Ds=new Uint8Array;Object.assign(wt,{slots:{0:ct,1:ut,2:mt,3:yt}});Object.assign(ct,{structure:s,memory:{array:We},const:!0,slots:{0:At}});Object.assign(At,{structure:d});Object.assign(ut,{structure:p,memory:{array:Xe},const:!0,slots:{0:Ut}});Object.assign(Ut,{structure:w,memory:{array:Ye},const:!0});Object.assign(mt,{structure:p,memory:{array:Ze},const:!0,slots:{0:Pt}});Object.assign(Pt,{structure:w,memory:{array:ts},const:!0});Object.assign(yt,{structure:p,memory:{array:es},const:!0,slots:{0:Vt}});Object.assign(Vt,{structure:w,memory:{array:ss},const:!0});Object.assign(Rt,{slots:{0:bt}});Object.assign(bt,{structure:L,memory:{array:rs},const:!0,slots:{0:ct,1:ut,2:mt,3:yt}});Object.assign(kt,{slots:{0:X}});Object.assign(X,{structure:y,memory:{array:ns},const:!0,slots:{0:qt}});Object.assign(qt,{structure:f,memory:{array:as},const:!0});Object.assign(It,{slots:{0:lt}});Object.assign(lt,{structure:A,memory:{array:is},const:!0,slots:{0:X}});Object.assign(vt,{slots:{0:pt}});Object.assign(pt,{structure:A,memory:{array:os},const:!0,slots:{0:X}});Object.assign(Et,{slots:{0:xt,1:Ct,2:Mt,3:Tt,4:$t,5:Lt,6:Bt}});Object.assign(xt,{structure:M,memory:{array:cs},const:!0,slots:{0:Kt}});Object.assign(Kt,{structure:D,memory:{array:us},reloc:16778618});Object.assign(Ct,{structure:T,memory:{array:ms},const:!0,slots:{0:Dt}});Object.assign(Dt,{structure:F,memory:{array:ys},reloc:16778633});Object.assign(Mt,{structure:y,memory:{array:bs},const:!0,slots:{0:Ft}});Object.assign(Ft,{structure:f,memory:{array:ls},const:!0});Object.assign(Tt,{structure:$,memory:{array:ps},const:!0,slots:{0:_t}});Object.assign(_t,{structure:_,memory:{array:gs},reloc:16778664});Object.assign($t,{structure:B,memory:{array:fs},const:!0,slots:{0:bt}});Object.assign(Lt,{structure:G,memory:{array:Os},const:!0,slots:{0:lt}});Object.assign(Bt,{structure:H,memory:{array:Ss},const:!0,slots:{0:pt}});Object.assign(Gt,{slots:{0:Ht,1:Jt}});Object.assign(Ht,{structure:l,memory:{array:zs},const:!0});Object.assign(Jt,{structure:l,memory:{array:js},const:!0});Object.assign(Nt,{memory:{array:Re},slots:{0:Qt}});Object.assign(Qt,{structure:k,memory:{array:Re,offset:0,length:8},slots:{0:gt}});Object.assign(gt,{structure:J,memory:{array:hs},reloc:0});Object.assign(Wt,{slots:{0:Xt,1:Yt,2:Zt}});Object.assign(Xt,{structure:s,memory:{array:ds},const:!0,slots:{0:ft}});Object.assign(ft,{structure:R});Object.assign(Yt,{structure:s,memory:{array:ws},const:!0,slots:{0:Ot}});Object.assign(Ot,{structure:st});Object.assign(Zt,{structure:y,memory:{array:As},const:!0,slots:{0:te}});Object.assign(te,{structure:f,memory:{array:Us},const:!0});Object.assign(ee,{memory:{array:zt},slots:{0:se}});Object.assign(se,{structure:N,memory:{array:zt},slots:{0:re}});Object.assign(re,{structure:k,memory:{array:zt,offset:0,length:8},slots:{0:gt}});Object.assign(ne,{memory:{array:ke},slots:{0:ae}});Object.assign(ae,{structure:I,memory:{array:ke,offset:0,length:8},slots:{0:St}});Object.assign(St,{structure:Q,memory:{array:Ps},reloc:0});Object.assign(ie,{slots:{0:oe,1:ce,2:ue}});Object.assign(oe,{structure:s,memory:{array:Vs},const:!0,slots:{0:ft}});Object.assign(ce,{structure:s,memory:{array:Rs},const:!0,slots:{0:Ot}});Object.assign(ue,{structure:y,memory:{array:ks},const:!0,slots:{0:me}});Object.assign(me,{structure:f,memory:{array:qs},const:!0});Object.assign(ye,{memory:{array:jt},slots:{0:be}});Object.assign(be,{structure:W,memory:{array:jt},slots:{0:le}});Object.assign(le,{structure:I,memory:{array:jt,offset:0,length:8},slots:{0:St}});Object.assign(pe,{memory:{array:Is}});Object.assign(ge,{slots:{0:fe}});Object.assign(fe,{structure:j,memory:{array:vs},const:!0});Object.assign(Oe,{slots:{0:Se}});Object.assign(Se,{structure:h,memory:{array:Es},const:!0});Object.assign(ze,{slots:{0:je,1:de,2:Ae,3:Pe}});Object.assign(je,{structure:s,memory:{array:xs},const:!0,slots:{0:he}});Object.assign(he,{structure:et});Object.assign(de,{structure:s,memory:{array:Ks},const:!0,slots:{0:we}});Object.assign(we,{structure:q});Object.assign(Ae,{structure:s,memory:{array:Cs},const:!0,slots:{0:Ue}});Object.assign(Ue,{structure:v});Object.assign(Pe,{structure:s,memory:{array:Ds},const:!0,slots:{0:Ve}});Object.assign(Ve,{structure:E});const Ms={argStruct:nt,thunkId:2,name:"createOutput"},Fs={argStruct:it,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(g,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(D,{...e,type:1,name:"[3:0]u8",length:3,byteSize:4,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(M,{...e,type:13,name:"*const [3:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:D}],methods:[]}});Object.assign(F,{...e,type:1,name:"[13:0]u8",length:13,byteSize:14,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(T,{...e,type:13,name:"*const [13:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(y,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:y}],methods:[]}});Object.assign(f,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(_,{...e,type:1,name:"[23:0]u8",length:23,byteSize:24,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign($,{...e,type:13,name:"*const [23:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[]}});Object.assign(p,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:p}],methods:[]}});Object.assign(d,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:d}],methods:[]}});Object.assign(w,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:w}],methods:[]}});Object.assign(L,{...e,type:2,name:"Struct2890073165",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:p},{...t,type:7,slot:2,name:"maxValue",structure:p},{...t,type:7,slot:3,name:"defaultValue",structure:p}],methods:[],template:wt}});Object.assign(B,{...e,type:2,name:"Struct1446025373",align:1,instance:{members:[{...t,type:7,slot:0,name:"intensity",structure:L}],methods:[],template:Rt}});Object.assign(A,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:y}],methods:[],template:kt}});Object.assign(G,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:7,slot:0,name:"src",structure:A}],methods:[],template:It}});Object.assign(H,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:A}],methods:[],template:vt}});Object.assign(et,{...e,type:2,name:"sepia.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:M},{...t,type:7,slot:1,name:"vendor",structure:T},{...t,type:7,slot:2,name:"version",structure:y},{...t,type:7,slot:3,name:"description",structure:$},{...t,type:7,slot:4,name:"parameters",structure:B},{...t,type:7,slot:5,name:"inputImages",structure:G},{...t,type:7,slot:6,name:"outputImages",structure:H}],methods:[],template:Et}});Object.assign(R,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(J,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(k,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:J}],methods:[]}});Object.assign(o,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:o}],methods:[]}});Object.assign(l,{...e,type:11,name:"sepia.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:l}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:l},{...t,type:7,slot:1,name:"display-p3",structure:l}],methods:[],template:Gt}});Object.assign(V,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(st,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:d}],methods:[]}});Object.assign(N,{...e,type:2,name:"sepia.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:k},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:o},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:o},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:l},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:Nt},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:y}],methods:[],template:Wt}});Object.assign(q,{...e,type:2,name:"sepia.KernelInput(u8,sepia.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:N}],methods:[],template:ee}});Object.assign(Q,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(I,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:Q}],methods:[]}});Object.assign(W,{...e,type:2,name:"sepia.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:I},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:o},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:o},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:l},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:ne},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:y}],methods:[],template:ie}});Object.assign(v,{...e,type:2,name:"sepia.KernelOutput(u8,sepia.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:W}],methods:[],template:ye}});Object.assign(E,{...e,type:2,name:"sepia.KernelParameters(sepia.kernel)",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"intensity",structure:d}],methods:[],template:pe}});Object.assign(j,{...e,type:10,name:"ErrorSet3691325303",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:j}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:j}],methods:[],template:ge}});Object.assign(rt,{...e,type:9,name:"ErrorSet3691325303!sepia.KernelOutput(u8,sepia.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:j}],methods:[]}});Object.assign(nt,{...e,type:5,name:"createOutput",byteSize:64,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:o},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:o},{...t,type:5,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:q},{...t,type:5,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:1,name:"3",structure:E},{...t,type:5,isRequired:!0,bitOffset:288,bitSize:224,byteSize:28,slot:2,name:"retval",structure:rt}],methods:[]}});Object.assign(h,{...e,type:10,name:"ErrorSet4203942675",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:h}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:h}],methods:[],template:Oe}});Object.assign(at,{...e,type:9,name:"ErrorSet4203942675!sepia.KernelOutput(u8,sepia.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:h}],methods:[]}});Object.assign(it,{...e,type:5,name:"createPartialOutput",byteSize:72,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:o},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:o},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:o},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:o},{...t,type:5,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:q},{...t,type:5,isRequired:!0,bitOffset:320,bitSize:32,byteSize:4,slot:1,name:"5",structure:E},{...t,type:5,isRequired:!0,bitOffset:352,bitSize:224,byteSize:28,slot:2,name:"retval",structure:at}],methods:[]}});Object.assign(ot,{...e,type:2,name:"sepia",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:s},{...t,type:7,slot:1,name:"Input",structure:s},{...t,type:7,slot:2,name:"Output",structure:s},{...t,type:7,slot:3,name:"Parameters",structure:s}],methods:[Ms,Fs],template:ze}});const Ts=[s,g,D,M,F,T,y,f,_,$,p,d,w,L,B,A,G,H,et,R,J,k,o,l,V,st,N,q,Q,I,W,v,E,j,rt,nt,h,at,it,ot],_s=ot,$s={runtimeSafety:!1,littleEndian:!0},Y=$e();Y.getSpecialExports();Y.recreateStructures(Ts,$s);const Ls=(async()=>{const a=new URL("sepia-5a74a470.wasm",import.meta.url).href;return fetch(a)})();Y.loadModule(Ls);Y.linkVariables(!0);const{constructor:Bs}=_s,{createPartialOutput:Gs,Input:Hs,kernel:tt}=Bs;function Js(a,c,i,n,r={},O={}){const S=[];for(const[m]of tt.inputImages)S.push(m);const U=[];for(const[m]of tt.outputImages)U.push(m);if(Array.isArray(r)){const m=r;r={};for(const[b,z]of S.entries())r[z]=m[b]}const u=new Hs(void 0),x=[];let P;for(const m of S){let b=r[m];if(b||(S.length===1&&["data","width","height"].every(z=>!!r[z])?b=r:x.push(m)),u[m]=b,P){if(b.colorSpace!==P)throw new Error(`Input images must all use the same color space: ${P}`)}else P=b.colorSpace}if(x.length>0)throw new Error(`Missing input image${x.length>1?"s":""}: ${x.join(", ")}`);const Z=Gs(a,c,i,n,u,O),ht=m=>{const b={};for(const z of U){const{data:{typedArray:K},width:dt,height:qe}=m[z];let C;if(typeof ImageData=="function"){const Ie=new Uint8ClampedArray(K.buffer,K.byteOffset,K.byteLength);C=new ImageData(Ie,dt,n,{colorSpace:P})}else C={data:K,width:dt,height:qe};if(U.length===1)return C;b[z]=C}return b};return Z[Symbol.toStringTag]==="Promise"?Z.then(ht):ht(Z)}function Ns(){const a={};for(let[c,i]of tt){if(c==="parameters"){const n={};for(const[r,O]of i){const S=n[r]={};for(let[U,u]of O)typeof u=="object"?u=u.string??u.valueOf():typeof u=="function"&&(u=Qs(u.name)),S[U]=u}i=n}else typeof i=="object"&&(i=i.string??i.valueOf());a[c]=i}return a}function Qs(a){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[a]}onmessage=a=>{const[c,i,...n]=a.data;Ws(c,n).then(([r,O])=>{postMessage([c,i,r],{transfer:O})}).catch(r=>{postMessage(["error",i,r])})};async function Ws(a,c){switch(a){case"getKernelInfo":return[Ns(...c)];case"createPartialImageData":const n=await Js(...c),r=[];if("data"in n&&"width"in n&&"height"in n)r.push(n.data.buffer);else for(const O of Object.entries(n))r.push(n.data.buffer);return[n,r];default:throw new Error(`Unknown function: ${a}`)}}
