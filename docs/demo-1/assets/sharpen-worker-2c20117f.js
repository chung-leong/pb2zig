import{u as Mt,a as Tt,b as $t,c as Lt,d as Bt,e as Gt,f as Ht,g as Jt,h as Nt,i as Qt,j as Wt,k as Xt,l as Yt,m as Zt,n as es,p as ts,o as ss,q as rs,r as as,s as ns}from"./index-58d89d46.js";Mt();Wt();Xt();Tt();$t();Yt();Zt();es();ts();Lt();Bt();Gt();Ht();ss();ns();Jt();rs();Nt();Qt();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},e={type:0,isRequired:!1},s={},j={},I={},d={},b={},f={},F={},M={},o={},O={},p={},T={},$={},L={},w={},B={},G={},ee={},R={},H={},k={},m={},g={},P={},te={},J={},q={},N={},v={},Q={},E={},x={},V={},se={},re={},D={},ae={},ne={},ie={},Re={},oe={},ce={},ue={},ke={},me={},qe={},ye={},ve={},Ee={},be={},le={},xe={},pe={},Ke={},ge={},Ce={},_e={},fe={},Oe={},De={},W={},Fe={},Me={},Se={},Te={},ze={},$e={},Le={},Be={},Ge={},He={},Je={},Ne={},Qe={},We={},Xe={},Ye={},Ze={},et={},tt={},st={},rt={},at={},he={},nt={},it={},je={},ot={},de={},ct={},ut={},mt={},yt={},bt={},lt={},pt={},we={},gt={},ft={},Ot={},St={},zt={},ht={},jt={},dt={},wt={},At={},Ae={},Ut={},Pt={},Vt={},It={},Rt={},kt={},qt={},vt={},Et={},xt={},is=new Uint8Array,os=new Uint8Array,cs=new Uint8Array([0,0,0,0,0,0,0,0]),us=new Uint8Array,ms=new Uint8Array([0,0,0,0,0,0,52,64]),ys=new Uint8Array,bs=new Uint8Array([0,0,0,0,0,0,240,63]),ls=new Uint8Array,ps=new Uint8Array,gs=new Uint8Array([0,0,0,0,0,0,0,0]),fs=new Uint8Array,Os=new Uint8Array([0,0,0,0,0,0,240,63]),Ss=new Uint8Array,zs=new Uint8Array([154,153,153,153,153,153,185,63]),hs=new Uint8Array,js=new Uint8Array,ds=new Uint8Array,ws=new Uint8Array([4]),As=new Uint8Array,Us=new Uint8Array,Ps=new Uint8Array([238,4,0,1]),Vs=new Uint8Array([99,111,109,46,114,112,104,101,108,97,110,0]),Is=new Uint8Array([5,5,0,1]),Rs=new Uint8Array([82,121,97,110,32,80,104,101,108,97,110,0]),ks=new Uint8Array,qs=new Uint8Array([1]),vs=new Uint8Array([34,5,0,1]),Es=new Uint8Array([65,112,112,108,105,101,115,32,97,32,115,104,97,114,112,101,110,32,101,102,102,101,99,116,32,116,111,32,97,110,32,105,109,97,103,101,46,0]),xs=new Uint8Array,Ks=new Uint8Array,Cs=new Uint8Array,_s=new Uint8Array([0]),Ds=new Uint8Array([1]),Kt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Fs=new Uint8Array,Ms=new Uint8Array,Ts=new Uint8Array,$s=new Uint8Array,Ls=new Uint8Array([4]),Ue=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ct=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Bs=new Uint8Array,Gs=new Uint8Array,Hs=new Uint8Array,Js=new Uint8Array,Ns=new Uint8Array([4]),Pe=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Qs=new Uint8Array([0,0,128,63,205,204,204,61]),Ws=new Uint8Array([27,0]),Xs=new Uint8Array,Ys=new Uint8Array,Zs=new Uint8Array,er=new Uint8Array;Object.assign(Re,{slots:{0:oe,1:ue,2:me,3:ye}});Object.assign(oe,{structure:s,memory:{array:is},slots:{0:ce}});Object.assign(ce,{structure:O});Object.assign(ue,{structure:o,memory:{array:os},slots:{0:ke}});Object.assign(ke,{structure:p,memory:{array:cs}});Object.assign(me,{structure:o,memory:{array:us},slots:{0:qe}});Object.assign(qe,{structure:p,memory:{array:ms}});Object.assign(ye,{structure:o,memory:{array:ys},slots:{0:ve}});Object.assign(ve,{structure:p,memory:{array:bs}});Object.assign(Ee,{slots:{0:be,1:le,2:pe,3:ge}});Object.assign(be,{structure:s,memory:{array:ls},slots:{0:ce}});Object.assign(le,{structure:o,memory:{array:ps},slots:{0:xe}});Object.assign(xe,{structure:p,memory:{array:gs}});Object.assign(pe,{structure:o,memory:{array:fs},slots:{0:Ke}});Object.assign(Ke,{structure:p,memory:{array:Os}});Object.assign(ge,{structure:o,memory:{array:Ss},slots:{0:Ce}});Object.assign(Ce,{structure:p,memory:{array:zs}});Object.assign(_e,{slots:{0:fe,1:Oe}});Object.assign(fe,{structure:T,memory:{array:hs},slots:{0:oe,1:ue,2:me,3:ye}});Object.assign(Oe,{structure:$,memory:{array:js},slots:{0:be,1:le,2:pe,3:ge}});Object.assign(De,{slots:{0:W}});Object.assign(W,{structure:b,memory:{array:ds},slots:{0:Fe}});Object.assign(Fe,{structure:f,memory:{array:ws}});Object.assign(Me,{slots:{0:Se}});Object.assign(Se,{structure:w,memory:{array:As},slots:{0:W}});Object.assign(Te,{slots:{0:ze}});Object.assign(ze,{structure:w,memory:{array:Us},slots:{0:W}});Object.assign($e,{slots:{0:Le,1:Ge,2:Je,3:Qe,4:Xe,5:Ye,6:Ze}});Object.assign(Le,{structure:d,memory:{array:Ps},slots:{0:Be}});Object.assign(Be,{structure:I,memory:{array:Vs},reloc:16778478,const:!0});Object.assign(Ge,{structure:d,memory:{array:Is},slots:{0:He}});Object.assign(He,{structure:I,memory:{array:Rs},reloc:16778501,const:!0});Object.assign(Je,{structure:b,memory:{array:ks},slots:{0:Ne}});Object.assign(Ne,{structure:f,memory:{array:qs}});Object.assign(Qe,{structure:M,memory:{array:vs},slots:{0:We}});Object.assign(We,{structure:F,memory:{array:Es},reloc:16778530,const:!0});Object.assign(Xe,{structure:L,memory:{array:xs},slots:{0:fe,1:Oe}});Object.assign(Ye,{structure:B,memory:{array:Ks},slots:{0:Se}});Object.assign(Ze,{structure:G,memory:{array:Cs},slots:{0:ze}});Object.assign(et,{slots:{0:tt,1:st}});Object.assign(tt,{structure:g,memory:{array:_s}});Object.assign(st,{structure:g,memory:{array:Ds}});Object.assign(rt,{memory:{array:Kt},slots:{0:at}});Object.assign(at,{structure:k,memory:{array:Kt,offset:0,length:8},slots:{0:he}});Object.assign(he,{structure:H,memory:{array:Fs},reloc:0,const:!0});Object.assign(nt,{slots:{0:it,1:ot,2:ct}});Object.assign(it,{structure:s,memory:{array:Ms},slots:{0:je}});Object.assign(je,{structure:R});Object.assign(ot,{structure:s,memory:{array:Ts},slots:{0:de}});Object.assign(de,{structure:te});Object.assign(ct,{structure:b,memory:{array:$s},slots:{0:ut}});Object.assign(ut,{structure:f,memory:{array:Ls}});Object.assign(mt,{memory:{array:Ue},slots:{0:yt}});Object.assign(yt,{structure:J,memory:{array:Ue},slots:{0:bt}});Object.assign(bt,{structure:k,memory:{array:Ue,offset:0,length:8},slots:{0:he}});Object.assign(lt,{memory:{array:Ct},slots:{0:pt}});Object.assign(pt,{structure:v,memory:{array:Ct,offset:0,length:8},slots:{0:we}});Object.assign(we,{structure:N,memory:{array:Bs},reloc:0});Object.assign(gt,{slots:{0:ft,1:Ot,2:St}});Object.assign(ft,{structure:s,memory:{array:Gs},slots:{0:je}});Object.assign(Ot,{structure:s,memory:{array:Hs},slots:{0:de}});Object.assign(St,{structure:b,memory:{array:Js},slots:{0:zt}});Object.assign(zt,{structure:f,memory:{array:Ns}});Object.assign(ht,{memory:{array:Pe},slots:{0:jt}});Object.assign(jt,{structure:Q,memory:{array:Pe},slots:{0:dt}});Object.assign(dt,{structure:v,memory:{array:Pe,offset:0,length:8},slots:{0:we}});Object.assign(wt,{memory:{array:Qs}});Object.assign(At,{slots:{0:Ae}});Object.assign(Ae,{structure:V,memory:{array:Ws}});Object.assign(Ut,{slots:{0:Ae}});Object.assign(Pt,{slots:{0:Vt,1:Rt,2:qt,3:Et}});Object.assign(Vt,{structure:s,memory:{array:Xs},slots:{0:It}});Object.assign(It,{structure:ee});Object.assign(Rt,{structure:s,memory:{array:Ys},slots:{0:kt}});Object.assign(kt,{structure:q});Object.assign(qt,{structure:s,memory:{array:Zs},slots:{0:vt}});Object.assign(vt,{structure:E});Object.assign(Et,{structure:s,memory:{array:er},slots:{0:xt}});Object.assign(xt,{structure:x});const tr={argStruct:re,thunkId:2,name:"createOutput"},sr={argStruct:ne,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...t,name:"type",align:1,instance:{members:[{...e,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(j,{...t,name:"u8",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:j}],methods:[]}});Object.assign(I,{...t,type:1,name:"[11:0]u8",length:11,byteSize:12,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:j}],methods:[]}});Object.assign(d,{...t,type:13,name:"*const [11:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:I}],methods:[]}});Object.assign(b,{...t,name:"comptime_int",align:1,instance:{members:[{...e,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:b}],methods:[]}});Object.assign(f,{...t,name:"i8",byteSize:1,align:1,instance:{members:[{...e,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(F,{...t,type:1,name:"[37:0]u8",length:37,byteSize:38,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:j}],methods:[]}});Object.assign(M,{...t,type:13,name:"*const [37:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(o,{...t,name:"comptime_float",align:1,instance:{members:[{...e,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:o}],methods:[]}});Object.assign(O,{...t,name:"f32",byteSize:4,align:4,instance:{members:[{...e,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:O}],methods:[]}});Object.assign(p,{...t,name:"f64",byteSize:8,align:8,instance:{members:[{...e,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:p}],methods:[]}});Object.assign(T,{...t,type:2,name:"Struct1335891619",align:1,instance:{members:[{...e,type:9,slot:0,name:"type",structure:s},{...e,type:9,slot:1,name:"minValue",structure:o},{...e,type:9,slot:2,name:"maxValue",structure:o},{...e,type:9,slot:3,name:"defaultValue",structure:o}],methods:[],template:Re}});Object.assign($,{...t,type:2,name:"Struct721877853",align:1,instance:{members:[{...e,type:9,slot:0,name:"type",structure:s},{...e,type:9,slot:1,name:"minValue",structure:o},{...e,type:9,slot:2,name:"maxValue",structure:o},{...e,type:9,slot:3,name:"defaultValue",structure:o}],methods:[],template:Ee}});Object.assign(L,{...t,type:2,name:"Struct454583292",align:1,instance:{members:[{...e,type:9,slot:0,name:"amount",structure:T},{...e,type:9,slot:1,name:"radius",structure:$}],methods:[],template:_e}});Object.assign(w,{...t,type:2,name:"Struct3832472641",align:1,instance:{members:[{...e,type:9,slot:0,name:"channels",structure:b}],methods:[],template:De}});Object.assign(B,{...t,type:2,name:"Struct2242867897",align:1,instance:{members:[{...e,type:9,slot:0,name:"src",structure:w}],methods:[],template:Me}});Object.assign(G,{...t,type:2,name:"Struct172100005",align:1,instance:{members:[{...e,type:9,slot:0,name:"dst",structure:w}],methods:[],template:Te}});Object.assign(ee,{...t,type:2,name:"sharpen.kernel",align:1,static:{members:[{...e,type:9,slot:0,name:"namespace",structure:d},{...e,type:9,slot:1,name:"vendor",structure:d},{...e,type:9,slot:2,name:"version",structure:b},{...e,type:9,slot:3,name:"description",structure:M},{...e,type:9,slot:4,name:"parameters",structure:L},{...e,type:9,slot:5,name:"inputImages",structure:B},{...e,type:9,slot:6,name:"outputImages",structure:G}],methods:[],template:$e}});Object.assign(R,{...t,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:j}],methods:[]}});Object.assign(H,{...t,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(k,{...t,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:64,byteSize:8,slot:0,structure:H}],methods:[]}});Object.assign(m,{...t,name:"u32",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[]}});Object.assign(g,{...t,type:11,name:"sharpen.ColorSpace",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"srgb",structure:g},{...e,type:9,slot:1,name:"display-p3",structure:g}],methods:[],template:et}});Object.assign(P,{...t,name:"usize",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(te,{...t,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...e,type:4,bitSize:32,byteSize:4,structure:O}],methods:[]}});Object.assign(J,{...t,type:2,name:"sharpen.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:k},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:g},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:rt},static:{members:[{...e,type:9,slot:0,name:"Pixel",structure:s},{...e,type:9,slot:1,name:"FPixel",structure:s},{...e,type:9,slot:2,name:"channels",structure:b}],methods:[],template:nt}});Object.assign(q,{...t,type:2,name:"sharpen.KernelInput(u8,sharpen.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:J}],methods:[],template:mt}});Object.assign(N,{...t,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(v,{...t,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:64,byteSize:8,slot:0,structure:N}],methods:[]}});Object.assign(Q,{...t,type:2,name:"sharpen.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:v},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:g},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:lt},static:{members:[{...e,type:9,slot:0,name:"Pixel",structure:s},{...e,type:9,slot:1,name:"FPixel",structure:s},{...e,type:9,slot:2,name:"channels",structure:b}],methods:[],template:gt}});Object.assign(E,{...t,type:2,name:"sharpen.KernelOutput(u8,sharpen.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:Q}],methods:[],template:ht}});Object.assign(x,{...t,type:2,name:"sharpen.KernelParameters(sharpen.kernel)",byteSize:8,align:4,instance:{members:[{...e,type:4,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"amount",structure:O},{...e,type:4,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"radius",structure:O}],methods:[],template:wt}});Object.assign(V,{...t,type:10,name:"@typeInfo(@typeInfo(@TypeOf(sharpen.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"OutOfMemory",structure:V}],methods:[],template:At}});Object.assign(se,{...t,type:9,name:"ErrorSet3394225048!sharpen.KernelOutput(u8,sharpen.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:E},{...e,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:V}],methods:[]}});Object.assign(re,{...t,type:5,name:"createOutput",byteSize:68,align:4,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...e,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...e,type:7,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:q},{...e,type:7,isRequired:!0,bitOffset:256,bitSize:64,byteSize:8,slot:1,name:"3",structure:x},{...e,type:7,isRequired:!0,bitOffset:320,bitSize:224,byteSize:28,slot:2,name:"retval",structure:se}],methods:[]}});Object.assign(D,{...t,type:10,name:"@typeInfo(@typeInfo(@TypeOf(sharpen.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"OutOfMemory",structure:D}],methods:[],template:Ut}});Object.assign(ae,{...t,type:9,name:"ErrorSet923534995!sharpen.KernelOutput(u8,sharpen.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:E},{...e,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:D}],methods:[]}});Object.assign(ne,{...t,type:5,name:"createPartialOutput",byteSize:76,align:4,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...e,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:m},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:m},{...e,type:7,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:q},{...e,type:7,isRequired:!0,bitOffset:320,bitSize:64,byteSize:8,slot:1,name:"5",structure:x},{...e,type:7,isRequired:!0,bitOffset:384,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ae}],methods:[]}});Object.assign(ie,{...t,type:2,name:"sharpen",align:1,static:{members:[{...e,type:9,slot:0,name:"kernel",structure:s},{...e,type:9,slot:1,name:"Input",structure:s},{...e,type:9,slot:2,name:"Output",structure:s},{...e,type:9,slot:3,name:"Parameters",structure:s}],methods:[tr,sr],template:Pt}});const rr=[s,j,I,d,b,f,F,M,o,O,p,T,$,L,w,B,G,ee,R,H,k,m,g,P,te,J,q,N,v,Q,E,x,V,se,re,D,ae,ne,ie],ar=ie,nr={runtimeSafety:!1,littleEndian:!0},X=as();X.getControlObject();X.recreateStructures(rr,nr);const ir=(async()=>{const i=new URL("sharpen-a73b3112.wasm",import.meta.url).href;return fetch(i)})();X.loadModule(ir);X.linkVariables(!0);const{constructor:or}=ar,{createPartialOutput:cr,Input:ur,kernel:Z}=or;function mr(i,c,a,r,n={},S={}){const z=[];for(const[y]of Z.inputImages)z.push(y);const A=[];for(const[y]of Z.outputImages)A.push(y);if(Array.isArray(n)){const y=n;n={};for(const[l,h]of z.entries())n[h]=y[l]}const u=new ur(void 0),K=[];let U;for(const y of z){let l=n[y];if(l||(z.length===1&&["data","width","height"].every(h=>!!n[h])?l=n:K.push(y)),u[y]=l,U){if(l.colorSpace!==U)throw new Error(`Input images must all use the same color space: ${U}`)}else U=l.colorSpace}if(K.length>0)throw new Error(`Missing input image${K.length>1?"s":""}: ${K.join(", ")}`);const Y=cr(i,c,a,r,u,S),Ve=y=>{const l={};for(const h of A){const{data:{typedArray:C},width:Ie,height:Dt}=y[h];let _;if(typeof ImageData=="function"){const Ft=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);_=new ImageData(Ft,Ie,r,{colorSpace:U})}else _={data:C,width:Ie,height:Dt};if(A.length===1)return _;l[h]=_}return l};return Y[Symbol.toStringTag]==="Promise"?Y.then(Ve):Ve(Y)}function yr(){const i={};for(let[c,a]of Z){if(c==="parameters"){const r={};for(const[n,S]of a){const z=r[n]={};for(let[A,u]of S)typeof u=="object"?"string"in u?u=u.string:u=_t(u):typeof u=="function"&&(u=br(u.name)),z[A]=u}a=r}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());i[c]=a}return i}function _t(i){const c=[];for(let[a,r]of i)typeof r=="object"&&(r=_t(r)),c[a]=r;return c}function br(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[c,a,...r]=i.data;lr(c,r).then(([n,S])=>{postMessage([c,a,n],{transfer:S})}).catch(n=>{postMessage(["error",a,n])})};async function lr(i,c){switch(i){case"getKernelInfo":return[yr(...c)];case"createPartialImageData":const r=await mr(...c),n=[];if("data"in r&&"width"in r&&"height"in r)n.push(r.data.buffer);else for(const S of Object.entries(r))n.push(r.data.buffer);return[r,n];default:throw new Error(`Unknown function: ${i}`)}}
