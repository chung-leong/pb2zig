import{u as Os,a as fs,b as Ss,c as js,d as hs,e as zs,f as ds,g as ws,h as As,i as Us,j as Vs,k as Ps,l as Is,m as qs,n as Rs,p as ks,o as xs,q as vs,r as Es,s as Ks}from"./index-25a52593.js";Os();Vs();Ps();fs();Ss();Is();qs();Rs();ks();js();hs();zs();ds();xs();Ks();ws();vs();As();Us();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},r={},z={},q={},d={},M={},T={},l={},f={},s={},p={},n={},$={},L={},B={},G={},H={},J={},w={},N={},Q={},at={},R={},W={},k={},y={},O={},P={},nt={},X={},x={},Y={},v={},Z={},E={},K={},I={},it={},ot={},F={},ct={},ut={},mt={},Jt={},yt={},A={},bt={},Nt={},lt={},Qt={},gt={},Wt={},Xt={},pt={},Ot={},Yt={},ft={},Zt={},St={},te={},ee={},jt={},ht={},se={},zt={},re={},dt={},ae={},ne={},wt={},At={},ie={},Ut={},oe={},Vt={},ce={},ue={},Pt={},It={},me={},qt={},ye={},Rt={},be={},le={},kt={},xt={},vt={},Et={},Kt={},ge={},tt={},pe={},Oe={},Ct={},fe={},_t={},Se={},je={},he={},ze={},de={},we={},Ae={},Ue={},Ve={},Pe={},Ie={},qe={},Re={},ke={},xe={},ve={},Ee={},Dt={},Ke={},Ce={},Ft={},_e={},Mt={},De={},Fe={},Me={},Te={},$e={},Le={},Be={},Tt={},Ge={},He={},Je={},Ne={},Qe={},We={},Xe={},Ye={},Ze={},ts={},$t={},es={},ss={},rs={},as={},ns={},is={},os={},cs={},us={},ms={},Cs=new Uint8Array,_s=new Uint8Array,Ds=new Uint8Array([0,0,0,0,0,64,143,192]),Fs=new Uint8Array,Ms=new Uint8Array([0,0,0,0,0,64,143,64]),Ts=new Uint8Array,$s=new Uint8Array([0,0,0,0,0,0,105,64]),Ls=new Uint8Array,Bs=new Uint8Array,Gs=new Uint8Array([0,0,0,0,0,64,143,192]),Hs=new Uint8Array,Js=new Uint8Array([0,0,0,0,0,64,143,64]),Ns=new Uint8Array,Qs=new Uint8Array([0,0,0,0,0,0,89,64]),Ws=new Uint8Array,Xs=new Uint8Array,Ys=new Uint8Array([123,20,174,71,225,122,132,63]),Zs=new Uint8Array,tr=new Uint8Array([0,0,0,0,0,0,36,64]),er=new Uint8Array,sr=new Uint8Array([0,0,0,0,0,0,240,63]),rr=new Uint8Array,ar=new Uint8Array,nr=new Uint8Array([123,20,174,71,225,122,132,63]),ir=new Uint8Array,or=new Uint8Array([0,0,0,0,0,0,89,64]),cr=new Uint8Array,ur=new Uint8Array([0,0,0,0,0,0,240,63]),mr=new Uint8Array,yr=new Uint8Array,br=new Uint8Array([0,0,0,0,0,0,0,0]),lr=new Uint8Array,gr=new Uint8Array([31,133,235,81,184,30,25,64]),pr=new Uint8Array,Or=new Uint8Array([0,0,0,0,0,0,0,0]),fr=new Uint8Array,Sr=new Uint8Array,jr=new Uint8Array,hr=new Uint8Array,zr=new Uint8Array,dr=new Uint8Array,wr=new Uint8Array([4]),Ar=new Uint8Array,Ur=new Uint8Array,Vr=new Uint8Array([6,16,0,1]),Pr=new Uint8Array([99,111,109,46,101,118,101,114,101,116,116,45,99,104,117,114,99,104,46,106,117,115,116,105,110,0]),Ir=new Uint8Array([43,16,0,1]),qr=new Uint8Array([74,117,115,116,105,110,32,69,118,101,114,101,116,116,45,67,104,117,114,99,104,0]),Rr=new Uint8Array,kr=new Uint8Array([1]),xr=new Uint8Array([82,16,0,1]),vr=new Uint8Array([99,104,105,104,117,108,121,32,116,104,101,109,101,100,32,116,114,97,110,115,105,116,105,111,110,0]),Er=new Uint8Array,Kr=new Uint8Array,Cr=new Uint8Array,_r=new Uint8Array([0]),Dr=new Uint8Array([1]),ys=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Fr=new Uint8Array,Mr=new Uint8Array,Tr=new Uint8Array,$r=new Uint8Array,Lr=new Uint8Array([4]),Lt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),bs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Br=new Uint8Array,Gr=new Uint8Array,Hr=new Uint8Array,Jr=new Uint8Array,Nr=new Uint8Array([4]),Bt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Qr=new Uint8Array([0,0,72,67,0,0,200,66,0,0,128,63,0,0,128,63,0,0,0,0]),Wr=new Uint8Array([27,0]),Xr=new Uint8Array,Yr=new Uint8Array,Zr=new Uint8Array,ta=new Uint8Array;Object.assign(Jt,{slots:{0:yt,1:bt,2:lt,3:gt}});Object.assign(yt,{structure:r,memory:{array:Cs},slots:{0:A}});Object.assign(A,{structure:p});Object.assign(bt,{structure:s,memory:{array:_s},slots:{0:Nt}});Object.assign(Nt,{structure:n,memory:{array:Ds}});Object.assign(lt,{structure:s,memory:{array:Fs},slots:{0:Qt}});Object.assign(Qt,{structure:n,memory:{array:Ms}});Object.assign(gt,{structure:s,memory:{array:Ts},slots:{0:Wt}});Object.assign(Wt,{structure:n,memory:{array:$s}});Object.assign(Xt,{slots:{0:pt,1:Ot,2:ft,3:St}});Object.assign(pt,{structure:r,memory:{array:Ls},slots:{0:A}});Object.assign(Ot,{structure:s,memory:{array:Bs},slots:{0:Yt}});Object.assign(Yt,{structure:n,memory:{array:Gs}});Object.assign(ft,{structure:s,memory:{array:Hs},slots:{0:Zt}});Object.assign(Zt,{structure:n,memory:{array:Js}});Object.assign(St,{structure:s,memory:{array:Ns},slots:{0:te}});Object.assign(te,{structure:n,memory:{array:Qs}});Object.assign(ee,{slots:{0:jt,1:ht,2:zt,3:dt}});Object.assign(jt,{structure:r,memory:{array:Ws},slots:{0:A}});Object.assign(ht,{structure:s,memory:{array:Xs},slots:{0:se}});Object.assign(se,{structure:n,memory:{array:Ys}});Object.assign(zt,{structure:s,memory:{array:Zs},slots:{0:re}});Object.assign(re,{structure:n,memory:{array:tr}});Object.assign(dt,{structure:s,memory:{array:er},slots:{0:ae}});Object.assign(ae,{structure:n,memory:{array:sr}});Object.assign(ne,{slots:{0:wt,1:At,2:Ut,3:Vt}});Object.assign(wt,{structure:r,memory:{array:rr},slots:{0:A}});Object.assign(At,{structure:s,memory:{array:ar},slots:{0:ie}});Object.assign(ie,{structure:n,memory:{array:nr}});Object.assign(Ut,{structure:s,memory:{array:ir},slots:{0:oe}});Object.assign(oe,{structure:n,memory:{array:or}});Object.assign(Vt,{structure:s,memory:{array:cr},slots:{0:ce}});Object.assign(ce,{structure:n,memory:{array:ur}});Object.assign(ue,{slots:{0:Pt,1:It,2:qt,3:Rt}});Object.assign(Pt,{structure:r,memory:{array:mr},slots:{0:A}});Object.assign(It,{structure:s,memory:{array:yr},slots:{0:me}});Object.assign(me,{structure:n,memory:{array:br}});Object.assign(qt,{structure:s,memory:{array:lr},slots:{0:ye}});Object.assign(ye,{structure:n,memory:{array:gr}});Object.assign(Rt,{structure:s,memory:{array:pr},slots:{0:be}});Object.assign(be,{structure:n,memory:{array:Or}});Object.assign(le,{slots:{0:kt,1:xt,2:vt,3:Et,4:Kt}});Object.assign(kt,{structure:$,memory:{array:fr},slots:{0:yt,1:bt,2:lt,3:gt}});Object.assign(xt,{structure:L,memory:{array:Sr},slots:{0:pt,1:Ot,2:ft,3:St}});Object.assign(vt,{structure:B,memory:{array:jr},slots:{0:jt,1:ht,2:zt,3:dt}});Object.assign(Et,{structure:G,memory:{array:hr},slots:{0:wt,1:At,2:Ut,3:Vt}});Object.assign(Kt,{structure:H,memory:{array:zr},slots:{0:Pt,1:It,2:qt,3:Rt}});Object.assign(ge,{slots:{0:tt}});Object.assign(tt,{structure:l,memory:{array:dr},slots:{0:pe}});Object.assign(pe,{structure:f,memory:{array:wr}});Object.assign(Oe,{slots:{0:Ct}});Object.assign(Ct,{structure:w,memory:{array:Ar},slots:{0:tt}});Object.assign(fe,{slots:{0:_t}});Object.assign(_t,{structure:w,memory:{array:Ur},slots:{0:tt}});Object.assign(Se,{slots:{0:je,1:ze,2:we,3:Ue,4:Pe,5:Ie,6:qe}});Object.assign(je,{structure:d,memory:{array:Vr},slots:{0:he}});Object.assign(he,{structure:q,memory:{array:Pr},reloc:16781318,const:!0});Object.assign(ze,{structure:T,memory:{array:Ir},slots:{0:de}});Object.assign(de,{structure:M,memory:{array:qr},reloc:16781355,const:!0});Object.assign(we,{structure:l,memory:{array:Rr},slots:{0:Ae}});Object.assign(Ae,{structure:f,memory:{array:kr}});Object.assign(Ue,{structure:d,memory:{array:xr},slots:{0:Ve}});Object.assign(Ve,{structure:q,memory:{array:vr},reloc:16781394,const:!0});Object.assign(Pe,{structure:J,memory:{array:Er},slots:{0:kt,1:xt,2:vt,3:Et,4:Kt}});Object.assign(Ie,{structure:N,memory:{array:Kr},slots:{0:Ct}});Object.assign(qe,{structure:Q,memory:{array:Cr},slots:{0:_t}});Object.assign(Re,{slots:{0:ke,1:xe}});Object.assign(ke,{structure:O,memory:{array:_r}});Object.assign(xe,{structure:O,memory:{array:Dr}});Object.assign(ve,{memory:{array:ys},slots:{0:Ee}});Object.assign(Ee,{structure:k,memory:{array:ys,offset:0,length:8},slots:{0:Dt}});Object.assign(Dt,{structure:W,memory:{array:Fr},reloc:0,const:!0});Object.assign(Ke,{slots:{0:Ce,1:_e,2:De}});Object.assign(Ce,{structure:r,memory:{array:Mr},slots:{0:Ft}});Object.assign(Ft,{structure:R});Object.assign(_e,{structure:r,memory:{array:Tr},slots:{0:Mt}});Object.assign(Mt,{structure:nt});Object.assign(De,{structure:l,memory:{array:$r},slots:{0:Fe}});Object.assign(Fe,{structure:f,memory:{array:Lr}});Object.assign(Me,{memory:{array:Lt},slots:{0:Te}});Object.assign(Te,{structure:X,memory:{array:Lt},slots:{0:$e}});Object.assign($e,{structure:k,memory:{array:Lt,offset:0,length:8},slots:{0:Dt}});Object.assign(Le,{memory:{array:bs},slots:{0:Be}});Object.assign(Be,{structure:v,memory:{array:bs,offset:0,length:8},slots:{0:Tt}});Object.assign(Tt,{structure:Y,memory:{array:Br},reloc:0});Object.assign(Ge,{slots:{0:He,1:Je,2:Ne}});Object.assign(He,{structure:r,memory:{array:Gr},slots:{0:Ft}});Object.assign(Je,{structure:r,memory:{array:Hr},slots:{0:Mt}});Object.assign(Ne,{structure:l,memory:{array:Jr},slots:{0:Qe}});Object.assign(Qe,{structure:f,memory:{array:Nr}});Object.assign(We,{memory:{array:Bt},slots:{0:Xe}});Object.assign(Xe,{structure:Z,memory:{array:Bt},slots:{0:Ye}});Object.assign(Ye,{structure:v,memory:{array:Bt,offset:0,length:8},slots:{0:Tt}});Object.assign(Ze,{memory:{array:Qr}});Object.assign(ts,{slots:{0:$t}});Object.assign($t,{structure:I,memory:{array:Wr}});Object.assign(es,{slots:{0:$t}});Object.assign(ss,{slots:{0:rs,1:ns,2:os,3:us}});Object.assign(rs,{structure:r,memory:{array:Xr},slots:{0:as}});Object.assign(as,{structure:at});Object.assign(ns,{structure:r,memory:{array:Yr},slots:{0:is}});Object.assign(is,{structure:x});Object.assign(os,{structure:r,memory:{array:Zr},slots:{0:cs}});Object.assign(cs,{structure:E});Object.assign(us,{structure:r,memory:{array:ta},slots:{0:ms}});Object.assign(ms,{structure:K});const ea={argStruct:ot,thunkId:2,name:"createOutput"},sa={argStruct:ut,thunkId:3,name:"createPartialOutput"};Object.assign(r,{...e,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(z,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:z}],methods:[]}});Object.assign(q,{...e,type:1,name:"[25:0]u8",length:25,byteSize:26,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:z}],methods:[]}});Object.assign(d,{...e,type:13,name:"*const [25:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:q}],methods:[]}});Object.assign(M,{...e,type:1,name:"[21:0]u8",length:21,byteSize:22,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:z}],methods:[]}});Object.assign(T,{...e,type:13,name:"*const [21:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(l,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:l}],methods:[]}});Object.assign(f,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(s,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(p,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[]}});Object.assign(n,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:n}],methods:[]}});Object.assign($,{...e,type:2,name:"Struct3155081868",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:s},{...t,type:9,slot:2,name:"maxValue",structure:s},{...t,type:9,slot:3,name:"defaultValue",structure:s}],methods:[],template:Jt}});Object.assign(L,{...e,type:2,name:"Struct1412983404",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:s},{...t,type:9,slot:2,name:"maxValue",structure:s},{...t,type:9,slot:3,name:"defaultValue",structure:s}],methods:[],template:Xt}});Object.assign(B,{...e,type:2,name:"Struct3336507509",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:s},{...t,type:9,slot:2,name:"maxValue",structure:s},{...t,type:9,slot:3,name:"defaultValue",structure:s}],methods:[],template:ee}});Object.assign(G,{...e,type:2,name:"Struct157438120",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:s},{...t,type:9,slot:2,name:"maxValue",structure:s},{...t,type:9,slot:3,name:"defaultValue",structure:s}],methods:[],template:ne}});Object.assign(H,{...e,type:2,name:"Struct416569239",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:s},{...t,type:9,slot:2,name:"maxValue",structure:s},{...t,type:9,slot:3,name:"defaultValue",structure:s}],methods:[],template:ue}});Object.assign(J,{...e,type:2,name:"Struct2842505572",align:1,instance:{members:[{...t,type:9,slot:0,name:"line",structure:$},{...t,type:9,slot:1,name:"height",structure:L},{...t,type:9,slot:2,name:"stemScale",structure:B},{...t,type:9,slot:3,name:"squiggleScale",structure:G},{...t,type:9,slot:4,name:"animationIndex",structure:H}],methods:[],template:le}});Object.assign(w,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:l}],methods:[],template:ge}});Object.assign(N,{...e,type:2,name:"Struct3045313233",align:1,instance:{members:[{...t,type:9,slot:0,name:"inputImage",structure:w}],methods:[],template:Oe}});Object.assign(Q,{...e,type:2,name:"Struct2973892749",align:1,instance:{members:[{...t,type:9,slot:0,name:"outputPixel",structure:w}],methods:[],template:fe}});Object.assign(at,{...e,type:2,name:"chihuly.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:d},{...t,type:9,slot:1,name:"vendor",structure:T},{...t,type:9,slot:2,name:"version",structure:l},{...t,type:9,slot:3,name:"description",structure:d},{...t,type:9,slot:4,name:"parameters",structure:J},{...t,type:9,slot:5,name:"inputImages",structure:N},{...t,type:9,slot:6,name:"outputImages",structure:Q}],methods:[],template:Se}});Object.assign(R,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:z}],methods:[]}});Object.assign(W,{...e,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(k,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:W}],methods:[]}});Object.assign(y,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[]}});Object.assign(O,{...e,type:11,name:"chihuly.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:O},{...t,type:9,slot:1,name:"display-p3",structure:O}],methods:[],template:Re}});Object.assign(P,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(nt,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:p}],methods:[]}});Object.assign(X,{...e,type:2,name:"chihuly.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:k},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:ve},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:r},{...t,type:9,slot:1,name:"FPixel",structure:r},{...t,type:9,slot:2,name:"channels",structure:l}],methods:[],template:Ke}});Object.assign(x,{...e,type:2,name:"chihuly.KernelInput(u8,chihuly.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"inputImage",structure:X}],methods:[],template:Me}});Object.assign(Y,{...e,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(v,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:Y}],methods:[]}});Object.assign(Z,{...e,type:2,name:"chihuly.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:v},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:Le},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:r},{...t,type:9,slot:1,name:"FPixel",structure:r},{...t,type:9,slot:2,name:"channels",structure:l}],methods:[],template:Ge}});Object.assign(E,{...e,type:2,name:"chihuly.KernelOutput(u8,chihuly.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"outputPixel",structure:Z}],methods:[],template:We}});Object.assign(K,{...e,type:2,name:"chihuly.KernelParameters(chihuly.kernel)",byteSize:20,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"line",structure:p},{...t,type:4,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"height",structure:p},{...t,type:4,bitOffset:64,bitSize:32,byteSize:4,slot:2,name:"stemScale",structure:p},{...t,type:4,bitOffset:96,bitSize:32,byteSize:4,slot:3,name:"squiggleScale",structure:p},{...t,type:4,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"animationIndex",structure:p}],methods:[],template:Ze}});Object.assign(I,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(chihuly.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:I}],methods:[],template:ts}});Object.assign(it,{...e,type:9,name:"ErrorSet439145803!chihuly.KernelOutput(u8,chihuly.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:E},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:I}],methods:[]}});Object.assign(ot,{...e,type:5,name:"createOutput",byteSize:80,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:y},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:y},{...t,type:7,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:x},{...t,type:7,isRequired:!0,bitOffset:256,bitSize:160,byteSize:20,slot:1,name:"3",structure:K},{...t,type:7,isRequired:!0,bitOffset:416,bitSize:224,byteSize:28,slot:2,name:"retval",structure:it}],methods:[]}});Object.assign(F,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(chihuly.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:F}],methods:[],template:es}});Object.assign(ct,{...e,type:9,name:"ErrorSet1591072673!chihuly.KernelOutput(u8,chihuly.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:E},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:F}],methods:[]}});Object.assign(ut,{...e,type:5,name:"createPartialOutput",byteSize:88,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:y},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:y},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:y},{...t,type:7,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:x},{...t,type:7,isRequired:!0,bitOffset:320,bitSize:160,byteSize:20,slot:1,name:"5",structure:K},{...t,type:7,isRequired:!0,bitOffset:480,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ct}],methods:[]}});Object.assign(mt,{...e,type:2,name:"chihuly",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:r},{...t,type:9,slot:1,name:"Input",structure:r},{...t,type:9,slot:2,name:"Output",structure:r},{...t,type:9,slot:3,name:"Parameters",structure:r}],methods:[ea,sa],template:ss}});const ra=[r,z,q,d,M,T,l,f,s,p,n,$,L,B,G,H,J,w,N,Q,at,R,W,k,y,O,P,nt,X,x,Y,v,Z,E,K,I,it,ot,F,ct,ut,mt],aa=mt,na={runtimeSafety:!1,littleEndian:!0},et=Es();et.getControlObject();et.recreateStructures(ra,na);const ia=(async()=>{const c=new URL("chihuly-90570ef3.wasm",import.meta.url).href;return fetch(c)})();et.loadModule(ia);et.linkVariables(!0);const{constructor:oa}=aa,{createPartialOutput:ca,Input:ua,kernel:rt}=oa;function ma(c,u,i,a,o={},S={}){const j=[];for(const[b]of rt.inputImages)j.push(b);const U=[];for(const[b]of rt.outputImages)U.push(b);if(Array.isArray(o)){const b=o;o={};for(const[g,h]of j.entries())o[h]=b[g]}const m=new ua(void 0),C=[];let V;for(const b of j){let g=o[b];if(g||(j.length===1&&["data","width","height"].every(h=>!!o[h])?g=o:C.push(b)),m[b]=g,V){if(g.colorSpace!==V)throw new Error(`Input images must all use the same color space: ${V}`)}else V=g.colorSpace}if(C.length>0)throw new Error(`Missing input image${C.length>1?"s":""}: ${C.join(", ")}`);const st=ca(c,u,i,a,m,S),Gt=b=>{const g={};for(const h of U){const{data:{typedArray:_},width:Ht,height:gs}=b[h];let D;if(typeof ImageData=="function"){const ps=new Uint8ClampedArray(_.buffer,_.byteOffset,_.byteLength);D=new ImageData(ps,Ht,a,{colorSpace:V})}else D={data:_,width:Ht,height:gs};if(U.length===1)return D;g[h]=D}return g};return st[Symbol.toStringTag]==="Promise"?st.then(Gt):Gt(st)}function ya(){const c={};for(let[u,i]of rt){if(u==="parameters"){const a={};for(const[o,S]of i){const j=a[o]={};for(let[U,m]of S)typeof m=="object"?"string"in m?m=m.string:m=ls(m):typeof m=="function"&&(m=ba(m.name)),j[U]=m}i=a}else typeof i=="object"&&("string"in i?i=i.string:i=i.valueOf());c[u]=i}return c}function ls(c){const u=[];for(let[i,a]of c)typeof a=="object"&&(a=ls(a)),u[i]=a;return u}function ba(c){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[c]}onmessage=c=>{const[u,i,...a]=c.data;la(u,a).then(([o,S])=>{postMessage([u,i,o],{transfer:S})}).catch(o=>{postMessage(["error",i,o])})};async function la(c,u){switch(c){case"getKernelInfo":return[ya(...u)];case"createPartialImageData":const a=await ma(...u),o=[];if("data"in a&&"width"in a&&"height"in a)o.push(a.data.buffer);else for(const S of Object.entries(a))o.push(a.data.buffer);return[a,o];default:throw new Error(`Unknown function: ${c}`)}}
