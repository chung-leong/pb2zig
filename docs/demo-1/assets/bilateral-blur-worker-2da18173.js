import{u as We,a as Xe,b as Ye,c as Ze,d as ts,e as es,f as ss,g as rs,h as as,i as ns,j as is,k as os,l as cs,m as us,n as ms,o as ys,p as bs,q as ls}from"./index-270629a1.js";We();os();cs();Xe();Ye();us();ms();ys();bs();Ze();ts();es();ss();ls();rs();as();ns();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},p={},D={},M={},F={},T={},b={},O={},_={},$={},n={},L={},B={},S={},f={},G={},H={},J={},N={},Q={},A={},W={},X={},it={},R={},Y={},k={},c={},g={},V={},ot={},Z={},q={},tt={},I={},et={},v={},E={},d={},ct={},ut={},w={},mt={},yt={},bt={},Kt={},lt={},gt={},pt={},Dt={},ft={},Mt={},Ot={},Ft={},St={},Tt={},_t={},zt={},jt={},$t={},ht={},Lt={},dt={},Bt={},wt={},Gt={},Ht={},At={},Ut={},Jt={},st={},Nt={},Qt={},Pt={},Wt={},Vt={},Xt={},Yt={},Zt={},te={},ee={},se={},re={},ae={},ne={},ie={},oe={},ce={},ue={},me={},ye={},be={},le={},Rt={},ge={},pe={},kt={},fe={},qt={},Oe={},Se={},ze={},je={},he={},de={},we={},It={},Ae={},Ue={},Pe={},Ve={},Re={},ke={},qe={},Ie={},ve={},Ee={},xe={},Ce={},Ke={},De={},Me={},Fe={},Te={},_e={},$e={},Le={},Be={},Ge={},gs=new Uint8Array,ps=new Uint8Array,fs=new Uint8Array([252,169,241,210,77,98,80,63]),Os=new Uint8Array,Ss=new Uint8Array([0,0,0,0,0,0,36,64]),zs=new Uint8Array,js=new Uint8Array([0,0,0,0,0,0,0,64]),hs=new Uint8Array([228,6,0,1]),ds=new Uint8Array([65,102,102,97,99,116,115,32,116,104,101,32,71,97,117,115,115,105,97,110,32,102,117,110,99,116,105,111,110,32,119,104,105,99,104,32,98,97,115,101,100,32,111,110,32,100,105,115,116,97,110,99,101,46,0]),ws=new Uint8Array,As=new Uint8Array,Us=new Uint8Array([252,169,241,210,77,98,80,63]),Ps=new Uint8Array,Vs=new Uint8Array([0,0,0,0,0,0,36,64]),Rs=new Uint8Array,ks=new Uint8Array([51,51,51,51,51,51,219,63]),qs=new Uint8Array([44,7,0,1]),Is=new Uint8Array([65,102,102,101,99,116,115,32,116,104,101,32,71,97,117,115,115,105,97,110,32,102,117,110,99,116,105,111,110,32,119,104,105,99,104,32,98,97,115,101,100,32,111,110,32,99,111,108,111,114,32,99,104,97,110,110,101,108,115,40,105,110,99,108,117,100,105,110,103,32,97,108,112,104,97,41,0]),vs=new Uint8Array,Es=new Uint8Array,xs=new Uint8Array,Cs=new Uint8Array([4]),Ks=new Uint8Array,Ds=new Uint8Array,Ms=new Uint8Array([12,5,0,1]),Fs=new Uint8Array([110,101,116,46,111,110,116,104,101,119,105,110,103,115,46,102,105,108,116,101,114,115,0]),Ts=new Uint8Array([46,5,0,1]),_s=new Uint8Array([65,110,100,121,32,76,105,0]),$s=new Uint8Array,Ls=new Uint8Array([1]),Bs=new Uint8Array([71,5,0,1]),Gs=new Uint8Array([66,105,108,97,116,101,114,97,108,32,66,108,117,114,46,0]),Hs=new Uint8Array,Js=new Uint8Array,Ns=new Uint8Array,Qs=new Uint8Array([0]),Ws=new Uint8Array([1]),He=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Xs=new Uint8Array,Ys=new Uint8Array,Zs=new Uint8Array,tr=new Uint8Array,er=new Uint8Array([4]),vt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Je=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),sr=new Uint8Array,rr=new Uint8Array,ar=new Uint8Array,nr=new Uint8Array,ir=new Uint8Array([4]),Et=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),or=new Uint8Array([0,0,0,64,154,153,217,62]),cr=new Uint8Array([27,0]),ur=new Uint8Array([27,0]),mr=new Uint8Array,yr=new Uint8Array,br=new Uint8Array,lr=new Uint8Array;Object.assign(Kt,{slots:{0:lt,1:pt,2:ft,3:Ot,4:St}});Object.assign(lt,{structure:s,memory:{array:gs},const:!0,slots:{0:gt}});Object.assign(gt,{structure:S});Object.assign(pt,{structure:n,memory:{array:ps},const:!0,slots:{0:Dt}});Object.assign(Dt,{structure:f,memory:{array:fs},const:!0});Object.assign(ft,{structure:n,memory:{array:Os},const:!0,slots:{0:Mt}});Object.assign(Mt,{structure:f,memory:{array:Ss},const:!0});Object.assign(Ot,{structure:n,memory:{array:zs},const:!0,slots:{0:Ft}});Object.assign(Ft,{structure:f,memory:{array:js},const:!0});Object.assign(St,{structure:B,memory:{array:hs},const:!0,slots:{0:Tt}});Object.assign(Tt,{structure:L,memory:{array:ds},reloc:16778980});Object.assign(_t,{slots:{0:zt,1:jt,2:ht,3:dt,4:wt}});Object.assign(zt,{structure:s,memory:{array:ws},const:!0,slots:{0:gt}});Object.assign(jt,{structure:n,memory:{array:As},const:!0,slots:{0:$t}});Object.assign($t,{structure:f,memory:{array:Us},const:!0});Object.assign(ht,{structure:n,memory:{array:Ps},const:!0,slots:{0:Lt}});Object.assign(Lt,{structure:f,memory:{array:Vs},const:!0});Object.assign(dt,{structure:n,memory:{array:Rs},const:!0,slots:{0:Bt}});Object.assign(Bt,{structure:f,memory:{array:ks},const:!0});Object.assign(wt,{structure:J,memory:{array:qs},const:!0,slots:{0:Gt}});Object.assign(Gt,{structure:H,memory:{array:Is},reloc:16779052});Object.assign(Ht,{slots:{0:At,1:Ut}});Object.assign(At,{structure:G,memory:{array:vs},const:!0,slots:{0:lt,1:pt,2:ft,3:Ot,4:St}});Object.assign(Ut,{structure:N,memory:{array:Es},const:!0,slots:{0:zt,1:jt,2:ht,3:dt,4:wt}});Object.assign(Jt,{slots:{0:st}});Object.assign(st,{structure:b,memory:{array:xs},const:!0,slots:{0:Nt}});Object.assign(Nt,{structure:O,memory:{array:Cs},const:!0});Object.assign(Qt,{slots:{0:Pt}});Object.assign(Pt,{structure:A,memory:{array:Ks},const:!0,slots:{0:st}});Object.assign(Wt,{slots:{0:Vt}});Object.assign(Vt,{structure:A,memory:{array:Ds},const:!0,slots:{0:st}});Object.assign(Xt,{slots:{0:Yt,1:te,2:se,3:ae,4:ie,5:oe,6:ce}});Object.assign(Yt,{structure:M,memory:{array:Ms},const:!0,slots:{0:Zt}});Object.assign(Zt,{structure:D,memory:{array:Fs},reloc:16778508});Object.assign(te,{structure:T,memory:{array:Ts},const:!0,slots:{0:ee}});Object.assign(ee,{structure:F,memory:{array:_s},reloc:16778542});Object.assign(se,{structure:b,memory:{array:$s},const:!0,slots:{0:re}});Object.assign(re,{structure:O,memory:{array:Ls},const:!0});Object.assign(ae,{structure:$,memory:{array:Bs},const:!0,slots:{0:ne}});Object.assign(ne,{structure:_,memory:{array:Gs},reloc:16778567});Object.assign(ie,{structure:Q,memory:{array:Hs},const:!0,slots:{0:At,1:Ut}});Object.assign(oe,{structure:W,memory:{array:Js},const:!0,slots:{0:Pt}});Object.assign(ce,{structure:X,memory:{array:Ns},const:!0,slots:{0:Vt}});Object.assign(ue,{slots:{0:me,1:ye}});Object.assign(me,{structure:g,memory:{array:Qs},const:!0});Object.assign(ye,{structure:g,memory:{array:Ws},const:!0});Object.assign(be,{memory:{array:He},slots:{0:le}});Object.assign(le,{structure:k,memory:{array:He,offset:0,length:8},slots:{0:Rt}});Object.assign(Rt,{structure:Y,memory:{array:Xs},reloc:0});Object.assign(ge,{slots:{0:pe,1:fe,2:Oe}});Object.assign(pe,{structure:s,memory:{array:Ys},const:!0,slots:{0:kt}});Object.assign(kt,{structure:R});Object.assign(fe,{structure:s,memory:{array:Zs},const:!0,slots:{0:qt}});Object.assign(qt,{structure:ot});Object.assign(Oe,{structure:b,memory:{array:tr},const:!0,slots:{0:Se}});Object.assign(Se,{structure:O,memory:{array:er},const:!0});Object.assign(ze,{memory:{array:vt},slots:{0:je}});Object.assign(je,{structure:Z,memory:{array:vt},slots:{0:he}});Object.assign(he,{structure:k,memory:{array:vt,offset:0,length:8},slots:{0:Rt}});Object.assign(de,{memory:{array:Je},slots:{0:we}});Object.assign(we,{structure:I,memory:{array:Je,offset:0,length:8},slots:{0:It}});Object.assign(It,{structure:tt,memory:{array:sr},reloc:0});Object.assign(Ae,{slots:{0:Ue,1:Pe,2:Ve}});Object.assign(Ue,{structure:s,memory:{array:rr},const:!0,slots:{0:kt}});Object.assign(Pe,{structure:s,memory:{array:ar},const:!0,slots:{0:qt}});Object.assign(Ve,{structure:b,memory:{array:nr},const:!0,slots:{0:Re}});Object.assign(Re,{structure:O,memory:{array:ir},const:!0});Object.assign(ke,{memory:{array:Et},slots:{0:qe}});Object.assign(qe,{structure:et,memory:{array:Et},slots:{0:Ie}});Object.assign(Ie,{structure:I,memory:{array:Et,offset:0,length:8},slots:{0:It}});Object.assign(ve,{memory:{array:or}});Object.assign(Ee,{slots:{0:xe}});Object.assign(xe,{structure:d,memory:{array:cr},const:!0});Object.assign(Ce,{slots:{0:Ke}});Object.assign(Ke,{structure:w,memory:{array:ur},const:!0});Object.assign(De,{slots:{0:Me,1:Te,2:$e,3:Be}});Object.assign(Me,{structure:s,memory:{array:mr},const:!0,slots:{0:Fe}});Object.assign(Fe,{structure:it});Object.assign(Te,{structure:s,memory:{array:yr},const:!0,slots:{0:_e}});Object.assign(_e,{structure:q});Object.assign($e,{structure:s,memory:{array:br},const:!0,slots:{0:Le}});Object.assign(Le,{structure:v});Object.assign(Be,{structure:s,memory:{array:lr},const:!0,slots:{0:Ge}});Object.assign(Ge,{structure:E});const gr={argStruct:ut,thunkId:2,name:"createOutput"},pr={argStruct:yt,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(p,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(D,{...e,type:1,name:"[22:0]u8",length:22,byteSize:23,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(M,{...e,type:13,name:"*const [22:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:D}],methods:[]}});Object.assign(F,{...e,type:1,name:"[7:0]u8",length:7,byteSize:8,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(T,{...e,type:13,name:"*const [7:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(b,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:b}],methods:[]}});Object.assign(O,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(_,{...e,type:1,name:"[15:0]u8",length:15,byteSize:16,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign($,{...e,type:13,name:"*const [15:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[]}});Object.assign(n,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:n}],methods:[]}});Object.assign(L,{...e,type:1,name:"[54:0]u8",length:54,byteSize:55,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(B,{...e,type:13,name:"*const [54:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[]}});Object.assign(S,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(f,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:f}],methods:[]}});Object.assign(G,{...e,type:2,name:"Struct611671119",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:n},{...t,type:7,slot:2,name:"maxValue",structure:n},{...t,type:7,slot:3,name:"defaultValue",structure:n},{...t,type:7,slot:4,name:"description",structure:B}],methods:[],template:Kt}});Object.assign(H,{...e,type:1,name:"[76:0]u8",length:76,byteSize:77,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(J,{...e,type:13,name:"*const [76:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[]}});Object.assign(N,{...e,type:2,name:"Struct976552448",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:n},{...t,type:7,slot:2,name:"maxValue",structure:n},{...t,type:7,slot:3,name:"defaultValue",structure:n},{...t,type:7,slot:4,name:"description",structure:J}],methods:[],template:_t}});Object.assign(Q,{...e,type:2,name:"Struct334250097",align:1,instance:{members:[{...t,type:7,slot:0,name:"d",structure:G},{...t,type:7,slot:1,name:"r",structure:N}],methods:[],template:Ht}});Object.assign(A,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:b}],methods:[],template:Jt}});Object.assign(W,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:7,slot:0,name:"src",structure:A}],methods:[],template:Qt}});Object.assign(X,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:A}],methods:[],template:Wt}});Object.assign(it,{...e,type:2,name:"bilateral-blur.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:M},{...t,type:7,slot:1,name:"vendor",structure:T},{...t,type:7,slot:2,name:"version",structure:b},{...t,type:7,slot:3,name:"description",structure:$},{...t,type:7,slot:4,name:"parameters",structure:Q},{...t,type:7,slot:5,name:"inputImages",structure:W},{...t,type:7,slot:6,name:"outputImages",structure:X}],methods:[],template:Xt}});Object.assign(R,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(Y,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(k,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:Y}],methods:[]}});Object.assign(c,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[]}});Object.assign(g,{...e,type:11,name:"bilateral-blur.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:g}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:g},{...t,type:7,slot:1,name:"display-p3",structure:g}],methods:[],template:ue}});Object.assign(V,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(ot,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(Z,{...e,type:2,name:"bilateral-blur.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:k},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:g},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:be},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:b}],methods:[],template:ge}});Object.assign(q,{...e,type:2,name:"bilateral-blur.KernelInput(u8,bilateral-blur.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:Z}],methods:[],template:ze}});Object.assign(tt,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(I,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:tt}],methods:[]}});Object.assign(et,{...e,type:2,name:"bilateral-blur.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:I},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:g},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:de},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:b}],methods:[],template:Ae}});Object.assign(v,{...e,type:2,name:"bilateral-blur.KernelOutput(u8,bilateral-blur.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:et}],methods:[],template:ke}});Object.assign(E,{...e,type:2,name:"bilateral-blur.KernelParameters(bilateral-blur.kernel)",byteSize:8,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"d",structure:S},{...t,type:4,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"r",structure:S}],methods:[],template:ve}});Object.assign(d,{...e,type:10,name:"ErrorSet1517171916",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:d}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:d}],methods:[],template:Ee}});Object.assign(ct,{...e,type:9,name:"ErrorSet1517171916!bilateral-blur.KernelOutput(u8,bilateral-blur.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:d}],methods:[]}});Object.assign(ut,{...e,type:5,name:"createOutput",byteSize:68,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:c},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:c},{...t,type:5,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:q},{...t,type:5,isRequired:!0,bitOffset:256,bitSize:64,byteSize:8,slot:1,name:"3",structure:E},{...t,type:5,isRequired:!0,bitOffset:320,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ct}],methods:[]}});Object.assign(w,{...e,type:10,name:"ErrorSet282802563",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:w}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:w}],methods:[],template:Ce}});Object.assign(mt,{...e,type:9,name:"ErrorSet282802563!bilateral-blur.KernelOutput(u8,bilateral-blur.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:w}],methods:[]}});Object.assign(yt,{...e,type:5,name:"createPartialOutput",byteSize:76,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:c},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:c},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:c},{...t,type:5,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:q},{...t,type:5,isRequired:!0,bitOffset:320,bitSize:64,byteSize:8,slot:1,name:"5",structure:E},{...t,type:5,isRequired:!0,bitOffset:384,bitSize:224,byteSize:28,slot:2,name:"retval",structure:mt}],methods:[]}});Object.assign(bt,{...e,type:2,name:"bilateral-blur",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:s},{...t,type:7,slot:1,name:"Input",structure:s},{...t,type:7,slot:2,name:"Output",structure:s},{...t,type:7,slot:3,name:"Parameters",structure:s}],methods:[gr,pr],template:De}});const fr=[s,p,D,M,F,T,b,O,_,$,n,L,B,S,f,G,H,J,N,Q,A,W,X,it,R,Y,k,c,g,V,ot,Z,q,tt,I,et,v,E,d,ct,ut,w,mt,yt,bt],Or=bt,Sr={runtimeSafety:!1,littleEndian:!0},rt=is();rt.getSpecialExports();rt.recreateStructures(fr,Sr);const zr=(async()=>{const i=new URL("bilateral-blur-07dbd213.wasm",import.meta.url).href;return fetch(i)})();rt.loadModule(zr);rt.linkVariables(!0);const{constructor:jr}=Or,{createPartialOutput:hr,Input:dr,kernel:nt}=jr;function wr(i,u,o,a,r={},z={}){const j=[];for(const[y]of nt.inputImages)j.push(y);const U=[];for(const[y]of nt.outputImages)U.push(y);if(Array.isArray(r)){const y=r;r={};for(const[l,h]of j.entries())r[h]=y[l]}const m=new dr(void 0),x=[];let P;for(const y of j){let l=r[y];if(l||(j.length===1&&["data","width","height"].every(h=>!!r[h])?l=r:x.push(y)),m[y]=l,P){if(l.colorSpace!==P)throw new Error(`Input images must all use the same color space: ${P}`)}else P=l.colorSpace}if(x.length>0)throw new Error(`Missing input image${x.length>1?"s":""}: ${x.join(", ")}`);const at=hr(i,u,o,a,m,z),xt=y=>{const l={};for(const h of U){const{data:{typedArray:C},width:Ct,height:Ne}=y[h];let K;if(typeof ImageData=="function"){const Qe=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);K=new ImageData(Qe,Ct,a,{colorSpace:P})}else K={data:C,width:Ct,height:Ne};if(U.length===1)return K;l[h]=K}return l};return at[Symbol.toStringTag]==="Promise"?at.then(xt):xt(at)}function Ar(){const i={};for(let[u,o]of nt){if(u==="parameters"){const a={};for(const[r,z]of o){const j=a[r]={};for(let[U,m]of z)typeof m=="object"?m=m.string??m.valueOf():typeof m=="function"&&(m=Ur(m.name)),j[U]=m}o=a}else typeof o=="object"&&(o=o.string??o.valueOf());i[u]=o}return i}function Ur(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[u,o,...a]=i.data;Pr(u,a).then(([r,z])=>{postMessage([u,o,r],{transfer:z})}).catch(r=>{postMessage(["error",o,r])})};async function Pr(i,u){switch(i){case"getKernelInfo":return[Ar(...u)];case"createPartialImageData":const a=await wr(...u),r=[];if("data"in a&&"width"in a&&"height"in a)r.push(a.data.buffer);else for(const z of Object.entries(a))r.push(a.data.buffer);return[a,r];default:throw new Error(`Unknown function: ${i}`)}}
