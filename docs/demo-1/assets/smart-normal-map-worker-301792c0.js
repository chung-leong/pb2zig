import{u as es,a as ss,b as rs,c as as,d as ns,e as is,f as os,g as cs,h as us,i as ms,j as ys,k as bs,l as ls,m as ps,n as gs,p as fs,o as Os,q as Ss,r as zs,s as js}from"./index-58d89d46.js";es();ys();bs();ss();rs();ls();ps();gs();as();fs();ns();is();os();Os();js();cs();Ss();us();ms();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},S={},F={},M={},T={},$={},i={},p={},L={},B={},P={},G={},c={},f={},g={},H={},d={},J={},w={},N={},Q={},ct={},R={},W={},k={},y={},O={},V={},ut={},X={},q={},Y={},v={},Z={},E={},_={},I={},mt={},yt={},D={},bt={},lt={},pt={},Ft={},gt={},Mt={},ft={},Tt={},Ot={},$t={},St={},Lt={},Bt={},zt={},jt={},ht={},Gt={},dt={},Ht={},wt={},Jt={},Nt={},tt={},et={},Qt={},st={},Wt={},rt={},Xt={},Yt={},At={},Ut={},Pt={},Vt={},Zt={},at={},te={},ee={},It={},se={},Rt={},re={},ae={},ne={},ie={},oe={},ce={},ue={},me={},ye={},be={},le={},pe={},ge={},fe={},Oe={},Se={},ze={},kt={},je={},he={},qt={},de={},vt={},we={},Ae={},Ue={},Pe={},Ve={},Ie={},Re={},Et={},ke={},qe={},ve={},Ee={},_e={},xe={},Ce={},Ke={},De={},Fe={},_t={},Me={},Te={},$e={},Le={},Be={},Ge={},He={},Je={},Ne={},Qe={},hs=new Uint8Array,ds=new Uint8Array,ws=new Uint8Array([0]),As=new Uint8Array,Us=new Uint8Array([1]),Ps=new Uint8Array,Vs=new Uint8Array([0]),Is=new Uint8Array,Rs=new Uint8Array,ks=new Uint8Array([0,0,0,0,0,0,0,0]),qs=new Uint8Array,vs=new Uint8Array([0,0,0,0,0,0,20,64]),Es=new Uint8Array,_s=new Uint8Array([0,0,0,0,0,0,240,63]),xs=new Uint8Array,Cs=new Uint8Array,Ks=new Uint8Array([0,0,0,0,0,0,240,191]),Ds=new Uint8Array,Fs=new Uint8Array([0,0,0,0,0,0,240,63]),Ms=new Uint8Array,Ts=new Uint8Array([0,0,0,0,0,0,240,63]),$s=new Uint8Array,Ls=new Uint8Array,Bs=new Uint8Array,Gs=new Uint8Array,Hs=new Uint8Array,Js=new Uint8Array([4]),Ns=new Uint8Array,Qs=new Uint8Array,Ws=new Uint8Array([0,5,0,1]),Xs=new Uint8Array([99,111,109,46,115,109,97,114,116,112,97,103,101,46,102,105,108,116,101,114,115,0]),Ys=new Uint8Array([33,5,0,1]),Zs=new Uint8Array([115,109,97,114,116,45,112,97,103,101,46,110,101,116,32,45,32,74,97,110,45,67,46,32,70,114,105,115,99,104,109,117,116,104,0]),tr=new Uint8Array,er=new Uint8Array([1]),sr=new Uint8Array([85,5,0,1]),rr=new Uint8Array([71,101,110,101,114,97,116,101,115,32,97,32,110,111,114,109,97,108,109,97,112,32,117,115,105,110,103,32,99,111,110,100,101,110,115,101,100,32,111,114,32,115,111,98,101,108,45,101,100,103,101,46,0]),ar=new Uint8Array,nr=new Uint8Array,ir=new Uint8Array,or=new Uint8Array([0]),cr=new Uint8Array([1]),We=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ur=new Uint8Array,mr=new Uint8Array,yr=new Uint8Array,br=new Uint8Array,lr=new Uint8Array([4]),xt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Xe=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),pr=new Uint8Array,gr=new Uint8Array,fr=new Uint8Array,Or=new Uint8Array,Sr=new Uint8Array([4]),Ct=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),zr=new Uint8Array([0,0,0,0,0,0,128,63,0,0,128,63,0,0,128,63]),jr=new Uint8Array([27,0]),hr=new Uint8Array,dr=new Uint8Array,wr=new Uint8Array,Ar=new Uint8Array;Object.assign(Ft,{slots:{0:gt,1:ft,2:Ot,3:St}});Object.assign(gt,{structure:s,memory:{array:hs},slots:{0:Mt}});Object.assign(Mt,{structure:P});Object.assign(ft,{structure:i,memory:{array:ds},slots:{0:Tt}});Object.assign(Tt,{structure:p,memory:{array:ws}});Object.assign(Ot,{structure:i,memory:{array:As},slots:{0:$t}});Object.assign($t,{structure:p,memory:{array:Us}});Object.assign(St,{structure:i,memory:{array:Ps},slots:{0:Lt}});Object.assign(Lt,{structure:p,memory:{array:Vs}});Object.assign(Bt,{slots:{0:zt,1:ht,2:dt,3:wt}});Object.assign(zt,{structure:s,memory:{array:Is},slots:{0:jt}});Object.assign(jt,{structure:f});Object.assign(ht,{structure:c,memory:{array:Rs},slots:{0:Gt}});Object.assign(Gt,{structure:g,memory:{array:ks}});Object.assign(dt,{structure:c,memory:{array:qs},slots:{0:Ht}});Object.assign(Ht,{structure:g,memory:{array:vs}});Object.assign(wt,{structure:c,memory:{array:Es},slots:{0:Jt}});Object.assign(Jt,{structure:g,memory:{array:_s}});Object.assign(Nt,{slots:{0:tt,1:et,2:st,3:rt}});Object.assign(tt,{structure:s,memory:{array:xs},slots:{0:jt}});Object.assign(et,{structure:c,memory:{array:Cs},slots:{0:Qt}});Object.assign(Qt,{structure:g,memory:{array:Ks}});Object.assign(st,{structure:c,memory:{array:Ds},slots:{0:Wt}});Object.assign(Wt,{structure:g,memory:{array:Fs}});Object.assign(rt,{structure:c,memory:{array:Ms},slots:{0:Xt}});Object.assign(Xt,{structure:g,memory:{array:Ts}});Object.assign(Yt,{slots:{0:At,1:Ut,2:Pt,3:Vt}});Object.assign(At,{structure:G,memory:{array:$s},slots:{0:gt,1:ft,2:Ot,3:St}});Object.assign(Ut,{structure:H,memory:{array:Ls},slots:{0:zt,1:ht,2:dt,3:wt}});Object.assign(Pt,{structure:d,memory:{array:Bs},slots:{0:tt,1:et,2:st,3:rt}});Object.assign(Vt,{structure:d,memory:{array:Gs},slots:{0:tt,1:et,2:st,3:rt}});Object.assign(Zt,{slots:{0:at}});Object.assign(at,{structure:i,memory:{array:Hs},slots:{0:te}});Object.assign(te,{structure:p,memory:{array:Js}});Object.assign(ee,{slots:{0:It}});Object.assign(It,{structure:w,memory:{array:Ns},slots:{0:at}});Object.assign(se,{slots:{0:Rt}});Object.assign(Rt,{structure:w,memory:{array:Qs},slots:{0:at}});Object.assign(re,{slots:{0:ae,1:ie,2:ce,3:me,4:be,5:le,6:pe}});Object.assign(ae,{structure:M,memory:{array:Ws},slots:{0:ne}});Object.assign(ne,{structure:F,memory:{array:Xs},reloc:16778496,const:!0});Object.assign(ie,{structure:$,memory:{array:Ys},slots:{0:oe}});Object.assign(oe,{structure:T,memory:{array:Zs},reloc:16778529,const:!0});Object.assign(ce,{structure:i,memory:{array:tr},slots:{0:ue}});Object.assign(ue,{structure:p,memory:{array:er}});Object.assign(me,{structure:B,memory:{array:sr},slots:{0:ye}});Object.assign(ye,{structure:L,memory:{array:rr},reloc:16778581,const:!0});Object.assign(be,{structure:J,memory:{array:ar},slots:{0:At,1:Ut,2:Pt,3:Vt}});Object.assign(le,{structure:N,memory:{array:nr},slots:{0:It}});Object.assign(pe,{structure:Q,memory:{array:ir},slots:{0:Rt}});Object.assign(ge,{slots:{0:fe,1:Oe}});Object.assign(fe,{structure:O,memory:{array:or}});Object.assign(Oe,{structure:O,memory:{array:cr}});Object.assign(Se,{memory:{array:We},slots:{0:ze}});Object.assign(ze,{structure:k,memory:{array:We,offset:0,length:8},slots:{0:kt}});Object.assign(kt,{structure:W,memory:{array:ur},reloc:0,const:!0});Object.assign(je,{slots:{0:he,1:de,2:we}});Object.assign(he,{structure:s,memory:{array:mr},slots:{0:qt}});Object.assign(qt,{structure:R});Object.assign(de,{structure:s,memory:{array:yr},slots:{0:vt}});Object.assign(vt,{structure:ut});Object.assign(we,{structure:i,memory:{array:br},slots:{0:Ae}});Object.assign(Ae,{structure:p,memory:{array:lr}});Object.assign(Ue,{memory:{array:xt},slots:{0:Pe}});Object.assign(Pe,{structure:X,memory:{array:xt},slots:{0:Ve}});Object.assign(Ve,{structure:k,memory:{array:xt,offset:0,length:8},slots:{0:kt}});Object.assign(Ie,{memory:{array:Xe},slots:{0:Re}});Object.assign(Re,{structure:v,memory:{array:Xe,offset:0,length:8},slots:{0:Et}});Object.assign(Et,{structure:Y,memory:{array:pr},reloc:0});Object.assign(ke,{slots:{0:qe,1:ve,2:Ee}});Object.assign(qe,{structure:s,memory:{array:gr},slots:{0:qt}});Object.assign(ve,{structure:s,memory:{array:fr},slots:{0:vt}});Object.assign(Ee,{structure:i,memory:{array:Or},slots:{0:_e}});Object.assign(_e,{structure:p,memory:{array:Sr}});Object.assign(xe,{memory:{array:Ct},slots:{0:Ce}});Object.assign(Ce,{structure:Z,memory:{array:Ct},slots:{0:Ke}});Object.assign(Ke,{structure:v,memory:{array:Ct,offset:0,length:8},slots:{0:Et}});Object.assign(De,{memory:{array:zr}});Object.assign(Fe,{slots:{0:_t}});Object.assign(_t,{structure:I,memory:{array:jr}});Object.assign(Me,{slots:{0:_t}});Object.assign(Te,{slots:{0:$e,1:Be,2:He,3:Ne}});Object.assign($e,{structure:s,memory:{array:hr},slots:{0:Le}});Object.assign(Le,{structure:ct});Object.assign(Be,{structure:s,memory:{array:dr},slots:{0:Ge}});Object.assign(Ge,{structure:q});Object.assign(He,{structure:s,memory:{array:wr},slots:{0:Je}});Object.assign(Je,{structure:E});Object.assign(Ne,{structure:s,memory:{array:Ar},slots:{0:Qe}});Object.assign(Qe,{structure:_});const Ur={argStruct:yt,thunkId:2,name:"createOutput"},Pr={argStruct:lt,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(S,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(F,{...e,type:1,name:"[21:0]u8",length:21,byteSize:22,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(M,{...e,type:13,name:"*const [21:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(T,{...e,type:1,name:"[34:0]u8",length:34,byteSize:35,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign($,{...e,type:13,name:"*const [34:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[]}});Object.assign(i,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:i}],methods:[]}});Object.assign(p,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(L,{...e,type:1,name:"[52:0]u8",length:52,byteSize:53,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(B,{...e,type:13,name:"*const [52:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[]}});Object.assign(P,{...e,name:"i32",byteSize:4,align:4,instance:{members:[{...t,type:2,bitOffset:0,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(G,{...e,type:2,name:"Struct152411989",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:i},{...t,type:9,slot:2,name:"maxValue",structure:i},{...t,type:9,slot:3,name:"defaultValue",structure:i}],methods:[],template:Ft}});Object.assign(c,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:c}],methods:[]}});Object.assign(f,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:f}],methods:[]}});Object.assign(g,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:g}],methods:[]}});Object.assign(H,{...e,type:2,name:"Struct4017537585",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:c},{...t,type:9,slot:2,name:"maxValue",structure:c},{...t,type:9,slot:3,name:"defaultValue",structure:c}],methods:[],template:Bt}});Object.assign(d,{...e,type:2,name:"Struct3549883580",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:c},{...t,type:9,slot:2,name:"maxValue",structure:c},{...t,type:9,slot:3,name:"defaultValue",structure:c}],methods:[],template:Nt}});Object.assign(J,{...e,type:2,name:"Struct2454565375",align:1,instance:{members:[{...t,type:9,slot:0,name:"soft_sobel",structure:G},{...t,type:9,slot:1,name:"amount",structure:H},{...t,type:9,slot:2,name:"invert_red",structure:d},{...t,type:9,slot:3,name:"invert_green",structure:d}],methods:[],template:Yt}});Object.assign(w,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:i}],methods:[],template:Zt}});Object.assign(N,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:9,slot:0,name:"src",structure:w}],methods:[],template:ee}});Object.assign(Q,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:9,slot:0,name:"dst",structure:w}],methods:[],template:se}});Object.assign(ct,{...e,type:2,name:"smart-normal-map.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:M},{...t,type:9,slot:1,name:"vendor",structure:$},{...t,type:9,slot:2,name:"version",structure:i},{...t,type:9,slot:3,name:"description",structure:B},{...t,type:9,slot:4,name:"parameters",structure:J},{...t,type:9,slot:5,name:"inputImages",structure:N},{...t,type:9,slot:6,name:"outputImages",structure:Q}],methods:[],template:re}});Object.assign(R,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(W,{...e,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(k,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:W}],methods:[]}});Object.assign(y,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[]}});Object.assign(O,{...e,type:11,name:"smart-normal-map.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:O},{...t,type:9,slot:1,name:"display-p3",structure:O}],methods:[],template:ge}});Object.assign(V,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(ut,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:f}],methods:[]}});Object.assign(X,{...e,type:2,name:"smart-normal-map.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:k},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:Se},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:i}],methods:[],template:je}});Object.assign(q,{...e,type:2,name:"smart-normal-map.KernelInput(u8,smart-normal-map.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:X}],methods:[],template:Ue}});Object.assign(Y,{...e,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(v,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:Y}],methods:[]}});Object.assign(Z,{...e,type:2,name:"smart-normal-map.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:v},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:Ie},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:i}],methods:[],template:ke}});Object.assign(E,{...e,type:2,name:"smart-normal-map.KernelOutput(u8,smart-normal-map.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:Z}],methods:[],template:xe}});Object.assign(_,{...e,type:2,name:"smart-normal-map.KernelParameters(smart-normal-map.kernel)",byteSize:16,align:4,instance:{members:[{...t,type:2,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"soft_sobel",structure:P},{...t,type:4,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"amount",structure:f},{...t,type:4,bitOffset:64,bitSize:32,byteSize:4,slot:2,name:"invert_red",structure:f},{...t,type:4,bitOffset:96,bitSize:32,byteSize:4,slot:3,name:"invert_green",structure:f}],methods:[],template:De}});Object.assign(I,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(smart-normal-map.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:I}],methods:[],template:Fe}});Object.assign(mt,{...e,type:9,name:"ErrorSet3426908800!smart-normal-map.KernelOutput(u8,smart-normal-map.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:E},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:I}],methods:[]}});Object.assign(yt,{...e,type:5,name:"createOutput",byteSize:76,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:y},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:y},{...t,type:7,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:q},{...t,type:7,isRequired:!0,bitOffset:256,bitSize:128,byteSize:16,slot:1,name:"3",structure:_},{...t,type:7,isRequired:!0,bitOffset:384,bitSize:224,byteSize:28,slot:2,name:"retval",structure:mt}],methods:[]}});Object.assign(D,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(smart-normal-map.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:D}],methods:[],template:Me}});Object.assign(bt,{...e,type:9,name:"ErrorSet448078773!smart-normal-map.KernelOutput(u8,smart-normal-map.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:E},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:D}],methods:[]}});Object.assign(lt,{...e,type:5,name:"createPartialOutput",byteSize:84,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:y},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:y},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:y},{...t,type:7,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:q},{...t,type:7,isRequired:!0,bitOffset:320,bitSize:128,byteSize:16,slot:1,name:"5",structure:_},{...t,type:7,isRequired:!0,bitOffset:448,bitSize:224,byteSize:28,slot:2,name:"retval",structure:bt}],methods:[]}});Object.assign(pt,{...e,type:2,name:"smart-normal-map",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:s},{...t,type:9,slot:1,name:"Input",structure:s},{...t,type:9,slot:2,name:"Output",structure:s},{...t,type:9,slot:3,name:"Parameters",structure:s}],methods:[Ur,Pr],template:Te}});const Vr=[s,S,F,M,T,$,i,p,L,B,P,G,c,f,g,H,d,J,w,N,Q,ct,R,W,k,y,O,V,ut,X,q,Y,v,Z,E,_,I,mt,yt,D,bt,lt,pt],Ir=pt,Rr={runtimeSafety:!1,littleEndian:!0},nt=zs();nt.getControlObject();nt.recreateStructures(Vr,Rr);const kr=(async()=>{const o=new URL("smart-normal-map-145bc428.wasm",import.meta.url).href;return fetch(o)})();nt.loadModule(kr);nt.linkVariables(!0);const{constructor:qr}=Ir,{createPartialOutput:vr,Input:Er,kernel:ot}=qr;function _r(o,u,a,r,n={},z={}){const j=[];for(const[b]of ot.inputImages)j.push(b);const A=[];for(const[b]of ot.outputImages)A.push(b);if(Array.isArray(n)){const b=n;n={};for(const[l,h]of j.entries())n[h]=b[l]}const m=new Er(void 0),x=[];let U;for(const b of j){let l=n[b];if(l||(j.length===1&&["data","width","height"].every(h=>!!n[h])?l=n:x.push(b)),m[b]=l,U){if(l.colorSpace!==U)throw new Error(`Input images must all use the same color space: ${U}`)}else U=l.colorSpace}if(x.length>0)throw new Error(`Missing input image${x.length>1?"s":""}: ${x.join(", ")}`);const it=vr(o,u,a,r,m,z),Kt=b=>{const l={};for(const h of A){const{data:{typedArray:C},width:Dt,height:Ze}=b[h];let K;if(typeof ImageData=="function"){const ts=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);K=new ImageData(ts,Dt,r,{colorSpace:U})}else K={data:C,width:Dt,height:Ze};if(A.length===1)return K;l[h]=K}return l};return it[Symbol.toStringTag]==="Promise"?it.then(Kt):Kt(it)}function xr(){const o={};for(let[u,a]of ot){if(u==="parameters"){const r={};for(const[n,z]of a){const j=r[n]={};for(let[A,m]of z)typeof m=="object"?"string"in m?m=m.string:m=Ye(m):typeof m=="function"&&(m=Cr(m.name)),j[A]=m}a=r}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());o[u]=a}return o}function Ye(o){const u=[];for(let[a,r]of o)typeof r=="object"&&(r=Ye(r)),u[a]=r;return u}function Cr(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[u,a,...r]=o.data;Kr(u,r).then(([n,z])=>{postMessage([u,a,n],{transfer:z})}).catch(n=>{postMessage(["error",a,n])})};async function Kr(o,u){switch(o){case"getKernelInfo":return[xr(...u)];case"createPartialImageData":const r=await _r(...u),n=[];if("data"in r&&"width"in r&&"height"in r)n.push(r.data.buffer);else for(const z of Object.entries(r))n.push(r.data.buffer);return[r,n];default:throw new Error(`Unknown function: ${o}`)}}
