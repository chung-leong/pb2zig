import{u as Ve,a as ke,b as Ie,d as Ce,c as ve,e as Ee,f as xe,g as Ke,h as De,i as Fe,j as Me,k as _e,l as Te,m as $e,o as Be,n as Le,p as Ge,q as He}from"./index-422d9c98.js";Ve();ke();Ie();Ce();ve();Ee();xe();Ke();De();Fe();Me();_e();Te();$e();Be();Le();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},S={},H={},J={},E={},N={},Q={},x={},b={},p={},W={},X={},K={},d={},Y={},i={},s={},Z={},D={},ee={},F={},te={},M={},se={},_={},R={},z={},re={},T={},U={},O={},ae={},$={},ne={},B={},pe={},w={},ie={},ue={},m={},oe={},A={},le={},L={},j={},me={},ye={},G={},P={},V={},fe={},de={},Se={},he={},ge={},ze={},Oe={};Object.assign(S,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:5});Object.assign(H,{...t,type:1,name:"[18:0]u8",length:18,byteSize:19,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:4});Object.assign(J,{...t,type:11,name:"*const [18:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[],template:null},slot:3});Object.assign(E,{...t,type:11,name:"*const *const [18:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:J}],methods:[],template:null},slot:2});Object.assign(N,{...t,type:1,name:"[14:0]u8",length:14,byteSize:15,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:8});Object.assign(Q,{...t,type:11,name:"*const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:N}],methods:[],template:null},slot:7});Object.assign(x,{...t,type:11,name:"*const *const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[],template:null},slot:6});Object.assign(b,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:10});Object.assign(p,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:b}],methods:[],template:null},slot:9});Object.assign(W,{...t,type:1,name:"[30:0]u8",length:30,byteSize:31,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:13});Object.assign(X,{...t,type:11,name:"*const [30:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:12});Object.assign(K,{...t,type:11,name:"*const *const [30:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:11});Object.assign(d,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:d}],methods:[],template:null},slot:33});Object.assign(Y,{...t,type:13,name:"@Vector(3, f32)",length:3,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:d}],methods:[],template:null},slot:32});Object.assign(i,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:i}],methods:[],template:null},slot:54});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:i}],methods:[],template:null},slot:53});const Je=new Uint8Array([]),Ne=new Uint8Array([24,253,15,0]),Qe=new Uint8Array([0,0,0,0,0,0,240,191]),We=new Uint8Array([64,253,15,0]),Xe=new Uint8Array([0,0,0,0,0,0,240,191]),Ye=new Uint8Array([104,253,15,0]),Ze=new Uint8Array([0,0,0,0,0,0,89,192]);Object.assign(Z,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:Je},slots:{0:{structure:s,memory:{array:Ne},slots:{0:{structure:i,memory:{array:Qe}}}},1:{structure:s,memory:{array:We},slots:{0:{structure:i,memory:{array:Xe}}}},2:{structure:s,memory:{array:Ye},slots:{0:{structure:i,memory:{array:Ze}}}}}}},slot:48});Object.assign(D,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:47});const et=new Uint8Array([]),tt=new Uint8Array([24,253,15,0]),st=new Uint8Array([0,0,0,0,0,0,240,63]),rt=new Uint8Array([64,253,15,0]),at=new Uint8Array([0,0,0,0,0,0,240,63]),nt=new Uint8Array([104,253,15,0]),it=new Uint8Array([0,0,0,0,0,0,89,64]);Object.assign(ee,{...t,type:2,name:"Struct0016",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:et},slots:{0:{structure:s,memory:{array:tt},slots:{0:{structure:i,memory:{array:st}}}},1:{structure:s,memory:{array:rt},slots:{0:{structure:i,memory:{array:at}}}},2:{structure:s,memory:{array:nt},slots:{0:{structure:i,memory:{array:it}}}}}}},slot:50});Object.assign(F,{...t,type:11,name:"Struct0013",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:49});const ut=new Uint8Array([]),ot=new Uint8Array([24,253,15,0]),lt=new Uint8Array([57,180,200,118,190,159,230,63]),mt=new Uint8Array([64,253,15,0]),yt=new Uint8Array([57,180,200,118,190,159,230,191]),ct=new Uint8Array([104,253,15,0]),bt=new Uint8Array([0,0,0,0,0,0,62,64]);Object.assign(te,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:ut},slots:{0:{structure:s,memory:{array:ot},slots:{0:{structure:i,memory:{array:lt}}}},1:{structure:s,memory:{array:mt},slots:{0:{structure:i,memory:{array:yt}}}},2:{structure:s,memory:{array:ct},slots:{0:{structure:i,memory:{array:bt}}}}}}},slot:52});Object.assign(M,{...t,type:11,name:"Struct0014",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:51});const pt=new Uint8Array([]),ft=new Uint8Array([170,170,170,170]),y=new Uint8Array([]),dt=new Uint8Array([170,170,170,170]),St=new Uint8Array([170,170,170,170]);Object.assign(se,{...t,type:2,name:"Struct0009",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:Y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:D},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:F},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:M}],methods:[],template:{memory:{array:pt},slots:{0:{structure:D,memory:{array:ft},slots:{0:{structure:Z,memory:{array:y},address:-1431655766}}},1:{structure:F,memory:{array:dt},slots:{0:{structure:ee,memory:{array:y},address:-1431655766}}},2:{structure:M,memory:{array:St},slots:{0:{structure:te,memory:{array:y},address:-1431655766}}}}}},slot:39});Object.assign(_,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:38});const ht=new Uint8Array([]),gt=new Uint8Array([200,247,15,0]),zt=new Uint8Array([0,0,0,0,0,0,0,0]),Ot=new Uint8Array([240,247,15,0]),wt=new Uint8Array([0,0,0,0,0,0,36,64]),qt=new Uint8Array([24,248,15,0]),Rt=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(R,{...t,type:2,name:"Struct0010",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:d},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:ht},slots:{0:{structure:s,memory:{array:gt},slots:{0:{structure:i,memory:{array:zt}}}},1:{structure:s,memory:{array:Ot},slots:{0:{structure:i,memory:{array:wt}}}},2:{structure:s,memory:{array:qt},slots:{0:{structure:i,memory:{array:Rt}}}}}}},slot:41});Object.assign(z,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:R}],methods:[],template:null},slot:40});const At=new Uint8Array([]),Ut=new Uint8Array([170,170,170,170]),jt=new Uint8Array([170,170,170,170]),Pt=new Uint8Array([170,170,170,170]);Object.assign(re,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"lineEquation",structure:_},{...e,type:8,isRequired:!1,slot:1,name:"uScale",structure:z},{...e,type:8,isRequired:!1,slot:2,name:"vScale",structure:z}],methods:[],template:{memory:{array:At},slots:{0:{structure:_,memory:{array:Ut},slots:{0:{structure:se,memory:{array:y},address:-1431655766}}},1:{structure:z,memory:{array:jt},slots:{0:{structure:R,memory:{array:y},address:-1431655766}}},2:{structure:z,memory:{array:Pt},slots:{0:{structure:R,memory:{array:y},address:-1431655766}}}}}},slot:15});Object.assign(T,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:14});const Vt=new Uint8Array([]),kt=new Uint8Array([16,248,15,0]),It=new Uint8Array([4,0,0,0]);Object.assign(U,{...t,type:2,name:"Struct0011",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:Vt},slots:{0:{structure:p,memory:{array:kt},slots:{0:{structure:b,memory:{array:It}}}}}}},slot:43});Object.assign(O,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:U}],methods:[],template:null},slot:42});const Ct=new Uint8Array([]),vt=new Uint8Array([170,170,170,170]);Object.assign(ae,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:O}],methods:[],template:{memory:{array:Ct},slots:{0:{structure:O,memory:{array:vt},slots:{0:{structure:U,memory:{array:y},address:-1431655766}}}}}},slot:17});Object.assign($,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:16});const Et=new Uint8Array([]),xt=new Uint8Array([170,170,170,170]);Object.assign(ne,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:O}],methods:[],template:{memory:{array:Et},slots:{0:{structure:O,memory:{array:xt},slots:{0:{structure:U,memory:{array:y},address:-1431655766}}}}}},slot:19});Object.assign(B,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:18});const Kt=new Uint8Array([]),Dt=new Uint8Array([]),Ft=new Uint8Array([68,248,15,0]),Mt=new Uint8Array([13,9,16,0]),_t=new Uint8Array([70,111,99,117,115,105,110,103,76,105,110,101,97,114,66,108,117,114,0]),Tt=new Uint8Array([132,248,15,0]),$t=new Uint8Array([254,8,16,0]),Bt=new Uint8Array([80,101,116,114,105,32,76,101,115,107,105,110,101,110,0]),Lt=new Uint8Array([196,248,15,0]),Gt=new Uint8Array([1,0,0,0]),Ht=new Uint8Array([28,249,15,0]),Jt=new Uint8Array([223,8,16,0]),Nt=new Uint8Array([108,105,110,101,97,114,32,98,108,117,114,32,98,121,32,97,32,108,105,110,101,32,101,113,117,97,116,105,111,110,0]),Qt=new Uint8Array([170,170,170,170]),Wt=new Uint8Array([170,170,170,170]),Xt=new Uint8Array([170,170,170,170]);Object.assign(pe,{...t,type:2,name:"focus-linear-blur.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Kt}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:E},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:x},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:p},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:K},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:T},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:$},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:B}],methods:[],template:{memory:{array:Dt},slots:{0:{structure:E,memory:{array:Ft},slots:{0:{structure:J,memory:{array:Mt},slots:{0:{structure:H,memory:{array:_t},address:1050893}}}}},1:{structure:x,memory:{array:Tt},slots:{0:{structure:Q,memory:{array:$t},slots:{0:{structure:N,memory:{array:Bt},address:1050878}}}}},2:{structure:p,memory:{array:Lt},slots:{0:{structure:b,memory:{array:Gt}}}},3:{structure:K,memory:{array:Ht},slots:{0:{structure:X,memory:{array:Jt},slots:{0:{structure:W,memory:{array:Nt},address:1050847}}}}},4:{structure:T,memory:{array:Qt},slots:{0:{structure:re,memory:{array:y},address:-1431655766}}},5:{structure:$,memory:{array:Wt},slots:{0:{structure:ae,memory:{array:y},address:-1431655766}}},6:{structure:B,memory:{array:Xt},slots:{0:{structure:ne,memory:{array:y},address:-1431655766}}}}}},slot:1});Object.assign(w,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:24});Object.assign(ie,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:w}],methods:[],template:null},slot:23});Object.assign(ue,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:ie}],methods:[],template:null},slot:22});Object.assign(m,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[],template:null},slot:25});const Yt=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(oe,{...t,type:9,name:"focus-linear-blur.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:b},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:b}],methods:[],template:{memory:{array:Yt}}},slot:26});Object.assign(A,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:A}],methods:[],template:null},slot:27});Object.assign(le,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:d}],methods:[],template:null},slot:44});const Zt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),es=new Uint8Array([]),ts=new Uint8Array([72,253,15,0]),ss=new Uint8Array([4,0,0,0]);Object.assign(L,{...t,type:2,name:"focus-linear-blur.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:ue},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:oe},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:A}],methods:[],template:{memory:{array:Zt}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:w},{...e,type:7,isRequired:!1,name:"FPixel",structure:le},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:es},slots:{0:{structure:p,memory:{array:ts},slots:{0:{structure:b,memory:{array:ss}}}}}}},slot:21});const rs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),as=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ns=new Uint8Array([0,0,0,0,0,0,0,0]),we=new Uint8Array([]);Object.assign(j,{...t,type:2,name:"focus-linear-blur.KernelInput(u8,focus-linear-blur.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:L}],methods:[],template:{memory:{array:rs},slots:{0:{structure:L,memory:{array:as},slots:{0:{structure:ue,memory:{array:ns},slots:{0:{structure:ie,memory:{array:we}}}}}}}}},slot:20});Object.assign(me,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:w}],methods:[],template:null},slot:23});Object.assign(ye,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:me}],methods:[],template:null},slot:30});const is=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),us=new Uint8Array([]),os=new Uint8Array([72,253,15,0]),ls=new Uint8Array([4,0,0,0]);Object.assign(G,{...t,type:2,name:"focus-linear-blur.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:ye},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:oe},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:A}],methods:[],template:{memory:{array:is}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:w},{...e,type:7,isRequired:!1,name:"FPixel",structure:le},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:us},slots:{0:{structure:p,memory:{array:os},slots:{0:{structure:b,memory:{array:ls}}}}}}},slot:29});const ms=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ys=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),cs=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(P,{...t,type:2,name:"focus-linear-blur.KernelOutput(u8,focus-linear-blur.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:G}],methods:[],template:{memory:{array:ms},slots:{0:{structure:G,memory:{array:ys},slots:{0:{structure:ye,memory:{array:cs},slots:{0:{structure:me,memory:{array:we}}}}}}}}},slot:28});const bs=new Uint8Array([244,253,52,63,244,253,52,191,0,0,240,65,0,0,0,0,0,0,128,63,0,0,128,63,0,0,0,0,0,0,0,0]);Object.assign(V,{...t,type:2,name:"focus-linear-blur.KernelParameters(focus-linear-blur.kernel)",length:1,byteSize:32,align:4,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:96,byteSize:16,slot:0,name:"lineEquation",structure:Y},{...e,type:4,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:1,name:"uScale",structure:d},{...e,type:4,isRequired:!1,bitOffset:160,bitSize:32,byteSize:4,slot:2,name:"vScale",structure:d}],methods:[],template:{memory:{array:bs}}},slot:31});Object.assign(fe,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(focus-linear-blur.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:45});Object.assign(de,{...t,type:7,name:"ErrorSet0000!focus-linear-blur.KernelOutput(u8,focus-linear-blur.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:P},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:fe}],methods:[],template:null},slot:36});Object.assign(Se,{...t,type:3,name:"createOutput",length:1,byteSize:96,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:m},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:m},{...e,type:6,bitOffset:320,bitSize:192,byteSize:24,slot:2,name:"2",structure:j},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:3,name:"3",structure:V},{...e,type:6,bitOffset:512,bitSize:224,byteSize:28,slot:4,name:"retval",structure:de}],methods:[],template:null},slot:34});Object.assign(he,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(focus-linear-blur.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:46});Object.assign(ge,{...t,type:7,name:"ErrorSet0001!focus-linear-blur.KernelOutput(u8,focus-linear-blur.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:P},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:he}],methods:[],template:null},slot:37});Object.assign(ze,{...t,type:3,name:"createPartialOutput",length:1,byteSize:112,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:m},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:m},{...e,type:3,bitOffset:320,bitSize:32,byteSize:4,slot:2,name:"2",structure:m},{...e,type:3,bitOffset:352,bitSize:32,byteSize:4,slot:3,name:"3",structure:m},{...e,type:6,bitOffset:384,bitSize:192,byteSize:24,slot:4,name:"4",structure:j},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:5,name:"5",structure:V},{...e,type:6,bitOffset:576,bitSize:224,byteSize:28,slot:6,name:"retval",structure:ge}],methods:[],template:null},slot:35});const ps={argStruct:Se,thunk:8,name:"createOutput"},fs={argStruct:ze,thunk:2,name:"createPartialOutput"};Object.assign(Oe,{...t,type:2,name:"focus-linear-blur",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:we}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:pe},{...e,type:7,isRequired:!1,name:"Input",structure:j},{...e,type:7,isRequired:!1,name:"Output",structure:P},{...e,type:7,isRequired:!1,name:"Parameters",structure:V}],methods:[ps,fs],template:null},slot:0});const ds=[S,H,J,E,N,Q,x,b,p,W,X,K,d,Y,i,s,Z,D,ee,F,te,M,se,_,R,z,re,T,U,O,ae,$,ne,B,pe,w,ie,ue,m,oe,A,le,L,j,me,ye,G,P,V,fe,de,Se,he,ge,ze,Oe],Ss=Ge(ds),hs=Oe.constructor,gs=(async()=>{const u=new URL("focus-linear-blur-630ab079.wasm",import.meta.url).href;return fetch(u)})();He(gs,{...Ss,writeBack:!0});const{createOutput:js,createPartialOutput:zs,kernel:be,Input:Os,Output:Ps,Parameters:Vs}=hs;function ws(u,l,a,r,n={},h={}){if(Array.isArray(n)){const f=n;n={};for(const[c,g]of Object.keys(be.inputImages).entries())n[g]=f[c]}const k=new Os(void 0),I=Object.keys(be.inputImages),o=[];let q;for(const f of I){let c=n[f];if(c||(I.length===1&&["data","width","height"].every(g=>!!n[g])?c=n:o.push(f)),k[f]=c,q){if(c.colorSpace!==q)throw new Error(`Input images must all use the same color space: ${q}`)}else q=c.colorSpace}if(o.length>0)throw new Error(`Missing input image${o.length>1?"s":""}: ${o.join(", ")}`);const ce=zs(u,l,a,r,k,h),qe=f=>{const c=Object.keys(f),g={};for(const Re of c){const{data:{typedArray:C},width:Ae,height:je}=f[Re];let v;if(typeof ImageData=="function"){const Pe=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);v=new ImageData(Pe,Ae,r,{colorSpace:q})}else v={data:C,width:Ae,height:je};if(c.length===1)return v;g[Re]=v}return g};return ce[Symbol.toStringTag]==="Promise"?ce.then(qe):qe(ce)}function qs(){const u={};for(let[l,a]of Object.entries(be)){if(l==="parameters"){const r={};for(const[n,h]of Object.entries(a)){const k=r[n]={};for(let[I,o]of Object.entries(h))typeof o=="object"?"string"in o?o=o.string:o=Ue(o):typeof o=="function"&&(o=Rs(o.name)),k[I]=o}a=r}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());u[l]=a}return u}function Ue(u){const l=[];for(let[a,r]of Object.entries(u))typeof r=="object"&&(r=Ue(r)),l[a]=r;return l}function Rs(u){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[u]}onmessage=u=>{const[l,a,...r]=u.data;As(l,r).then(([n,h])=>{postMessage([l,a,n],{transfer:h})}).catch(n=>{postMessage(["error",a,n])})};async function As(u,l){switch(u){case"getKernelInfo":return[qs(...l)];case"createPartialImageData":const r=await ws(...l),n=[];if("data"in r&&"width"in r&&"height"in r)n.push(r.data.buffer);else for(const h of Object.entries(r))n.push(r.data.buffer);return[r,n];default:throw new Error(`Unknown function: ${u}`)}}
