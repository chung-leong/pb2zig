import{u as Ye,a as Ze,b as ts,c as es,d as ss,e as rs,f as ns,g as as,h as is,i as os,j as cs,k as us,l as ms,m as ys,n as bs,p as ls,o as ps,q as gs,r as fs,s as Os}from"./index-25a52593.js";Ye();cs();us();Ze();ts();ms();ys();bs();ls();es();ss();rs();ns();ps();Os();as();gs();is();os();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},O={},_={},D={},F={},M={},l={},S={},T={},$={},r={},g={},y={},L={},B={},G={},H={},d={},J={},N={},nt={},V={},Q={},I={},m={},f={},U={},at={},W={},R={},X={},k={},Y={},q={},v={},P={},it={},ot={},K={},ct={},ut={},mt={},_t={},yt={},Z={},bt={},Dt={},lt={},Ft={},pt={},Mt={},Tt={},gt={},ft={},$t={},Ot={},Lt={},St={},Bt={},Gt={},zt={},jt={},Ht={},ht={},Jt={},dt={},Nt={},Qt={},wt={},At={},Ut={},Wt={},tt={},Xt={},Yt={},Pt={},Zt={},Vt={},te={},ee={},se={},re={},ne={},ae={},ie={},oe={},ce={},ue={},me={},ye={},be={},le={},pe={},ge={},fe={},It={},Oe={},Se={},Rt={},ze={},kt={},je={},he={},de={},we={},Ae={},Ue={},Pe={},qt={},Ve={},Ie={},Re={},ke={},qe={},ve={},Ee={},xe={},Ce={},Ke={},vt={},_e={},De={},Fe={},Me={},Te={},$e={},Le={},Be={},Ge={},He={},Ss=new Uint8Array,zs=new Uint8Array,js=new Uint8Array([0,0,0,0,0,0,0,0]),hs=new Uint8Array,ds=new Uint8Array([0,0,0,0,0,0,240,63]),ws=new Uint8Array,As=new Uint8Array([0,0,0,0,0,0,0,0]),Us=new Uint8Array,Ps=new Uint8Array,Vs=new Uint8Array([0,0,0,0,0,0,0,0]),Is=new Uint8Array,Rs=new Uint8Array([0,0,0,0,0,0,248,63]),ks=new Uint8Array,qs=new Uint8Array([51,51,51,51,51,51,227,63]),vs=new Uint8Array,Es=new Uint8Array,xs=new Uint8Array([0,0,0,0,0,0,224,191]),Cs=new Uint8Array,Ks=new Uint8Array([0,0,0,0,0,0,224,63]),_s=new Uint8Array,Ds=new Uint8Array([41,92,143,194,245,40,188,63]),Fs=new Uint8Array,Ms=new Uint8Array,Ts=new Uint8Array,$s=new Uint8Array,Ls=new Uint8Array([4]),Bs=new Uint8Array,Gs=new Uint8Array,Hs=new Uint8Array([240,4,0,1]),Js=new Uint8Array([97,114,46,115,104,97,100,101,114,46,112,97,105,110,116,105,110,103,0]),Ns=new Uint8Array([14,5,0,1]),Qs=new Uint8Array([65,108,97,110,32,82,111,115,115,0]),Ws=new Uint8Array,Xs=new Uint8Array([1]),Ys=new Uint8Array([41,5,0,1]),Zs=new Uint8Array([80,97,105,110,116,105,110,103,0]),tr=new Uint8Array,er=new Uint8Array,sr=new Uint8Array,rr=new Uint8Array([0]),nr=new Uint8Array([1]),Je=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ar=new Uint8Array,ir=new Uint8Array,or=new Uint8Array,cr=new Uint8Array,ur=new Uint8Array([4]),Et=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ne=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),mr=new Uint8Array,yr=new Uint8Array,br=new Uint8Array,lr=new Uint8Array,pr=new Uint8Array([4]),xt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),gr=new Uint8Array([0,0,0,0,154,153,25,63,174,71,225,61]),fr=new Uint8Array([27,0]),Or=new Uint8Array,Sr=new Uint8Array,zr=new Uint8Array,jr=new Uint8Array;Object.assign(_t,{slots:{0:yt,1:bt,2:lt,3:pt}});Object.assign(yt,{structure:s,memory:{array:Ss},slots:{0:Z}});Object.assign(Z,{structure:g});Object.assign(bt,{structure:r,memory:{array:zs},slots:{0:Dt}});Object.assign(Dt,{structure:y,memory:{array:js}});Object.assign(lt,{structure:r,memory:{array:hs},slots:{0:Ft}});Object.assign(Ft,{structure:y,memory:{array:ds}});Object.assign(pt,{structure:r,memory:{array:ws},slots:{0:Mt}});Object.assign(Mt,{structure:y,memory:{array:As}});Object.assign(Tt,{slots:{0:gt,1:ft,2:Ot,3:St}});Object.assign(gt,{structure:s,memory:{array:Us},slots:{0:Z}});Object.assign(ft,{structure:r,memory:{array:Ps},slots:{0:$t}});Object.assign($t,{structure:y,memory:{array:Vs}});Object.assign(Ot,{structure:r,memory:{array:Is},slots:{0:Lt}});Object.assign(Lt,{structure:y,memory:{array:Rs}});Object.assign(St,{structure:r,memory:{array:ks},slots:{0:Bt}});Object.assign(Bt,{structure:y,memory:{array:qs}});Object.assign(Gt,{slots:{0:zt,1:jt,2:ht,3:dt}});Object.assign(zt,{structure:s,memory:{array:vs},slots:{0:Z}});Object.assign(jt,{structure:r,memory:{array:Es},slots:{0:Ht}});Object.assign(Ht,{structure:y,memory:{array:xs}});Object.assign(ht,{structure:r,memory:{array:Cs},slots:{0:Jt}});Object.assign(Jt,{structure:y,memory:{array:Ks}});Object.assign(dt,{structure:r,memory:{array:_s},slots:{0:Nt}});Object.assign(Nt,{structure:y,memory:{array:Ds}});Object.assign(Qt,{slots:{0:wt,1:At,2:Ut}});Object.assign(wt,{structure:L,memory:{array:Fs},slots:{0:yt,1:bt,2:lt,3:pt}});Object.assign(At,{structure:B,memory:{array:Ms},slots:{0:gt,1:ft,2:Ot,3:St}});Object.assign(Ut,{structure:G,memory:{array:Ts},slots:{0:zt,1:jt,2:ht,3:dt}});Object.assign(Wt,{slots:{0:tt}});Object.assign(tt,{structure:l,memory:{array:$s},slots:{0:Xt}});Object.assign(Xt,{structure:S,memory:{array:Ls}});Object.assign(Yt,{slots:{0:Pt}});Object.assign(Pt,{structure:d,memory:{array:Bs},slots:{0:tt}});Object.assign(Zt,{slots:{0:Vt}});Object.assign(Vt,{structure:d,memory:{array:Gs},slots:{0:tt}});Object.assign(te,{slots:{0:ee,1:re,2:ae,3:oe,4:ue,5:me,6:ye}});Object.assign(ee,{structure:D,memory:{array:Hs},slots:{0:se}});Object.assign(se,{structure:_,memory:{array:Js},reloc:16778480,const:!0});Object.assign(re,{structure:M,memory:{array:Ns},slots:{0:ne}});Object.assign(ne,{structure:F,memory:{array:Qs},reloc:16778510,const:!0});Object.assign(ae,{structure:l,memory:{array:Ws},slots:{0:ie}});Object.assign(ie,{structure:S,memory:{array:Xs}});Object.assign(oe,{structure:$,memory:{array:Ys},slots:{0:ce}});Object.assign(ce,{structure:T,memory:{array:Zs},reloc:16778537,const:!0});Object.assign(ue,{structure:H,memory:{array:tr},slots:{0:wt,1:At,2:Ut}});Object.assign(me,{structure:J,memory:{array:er},slots:{0:Pt}});Object.assign(ye,{structure:N,memory:{array:sr},slots:{0:Vt}});Object.assign(be,{slots:{0:le,1:pe}});Object.assign(le,{structure:f,memory:{array:rr}});Object.assign(pe,{structure:f,memory:{array:nr}});Object.assign(ge,{memory:{array:Je},slots:{0:fe}});Object.assign(fe,{structure:I,memory:{array:Je,offset:0,length:8},slots:{0:It}});Object.assign(It,{structure:Q,memory:{array:ar},reloc:0,const:!0});Object.assign(Oe,{slots:{0:Se,1:ze,2:je}});Object.assign(Se,{structure:s,memory:{array:ir},slots:{0:Rt}});Object.assign(Rt,{structure:V});Object.assign(ze,{structure:s,memory:{array:or},slots:{0:kt}});Object.assign(kt,{structure:at});Object.assign(je,{structure:l,memory:{array:cr},slots:{0:he}});Object.assign(he,{structure:S,memory:{array:ur}});Object.assign(de,{memory:{array:Et},slots:{0:we}});Object.assign(we,{structure:W,memory:{array:Et},slots:{0:Ae}});Object.assign(Ae,{structure:I,memory:{array:Et,offset:0,length:8},slots:{0:It}});Object.assign(Ue,{memory:{array:Ne},slots:{0:Pe}});Object.assign(Pe,{structure:k,memory:{array:Ne,offset:0,length:8},slots:{0:qt}});Object.assign(qt,{structure:X,memory:{array:mr},reloc:0});Object.assign(Ve,{slots:{0:Ie,1:Re,2:ke}});Object.assign(Ie,{structure:s,memory:{array:yr},slots:{0:Rt}});Object.assign(Re,{structure:s,memory:{array:br},slots:{0:kt}});Object.assign(ke,{structure:l,memory:{array:lr},slots:{0:qe}});Object.assign(qe,{structure:S,memory:{array:pr}});Object.assign(ve,{memory:{array:xt},slots:{0:Ee}});Object.assign(Ee,{structure:Y,memory:{array:xt},slots:{0:xe}});Object.assign(xe,{structure:k,memory:{array:xt,offset:0,length:8},slots:{0:qt}});Object.assign(Ce,{memory:{array:gr}});Object.assign(Ke,{slots:{0:vt}});Object.assign(vt,{structure:P,memory:{array:fr}});Object.assign(_e,{slots:{0:vt}});Object.assign(De,{slots:{0:Fe,1:Te,2:Le,3:Ge}});Object.assign(Fe,{structure:s,memory:{array:Or},slots:{0:Me}});Object.assign(Me,{structure:nt});Object.assign(Te,{structure:s,memory:{array:Sr},slots:{0:$e}});Object.assign($e,{structure:R});Object.assign(Le,{structure:s,memory:{array:zr},slots:{0:Be}});Object.assign(Be,{structure:q});Object.assign(Ge,{structure:s,memory:{array:jr},slots:{0:He}});Object.assign(He,{structure:v});const hr={argStruct:ot,thunkId:2,name:"createOutput"},dr={argStruct:ut,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(O,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(_,{...e,type:1,name:"[18:0]u8",length:18,byteSize:19,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(D,{...e,type:13,name:"*const [18:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[]}});Object.assign(F,{...e,type:1,name:"[9:0]u8",length:9,byteSize:10,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(M,{...e,type:13,name:"*const [9:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(l,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:l}],methods:[]}});Object.assign(S,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(T,{...e,type:1,name:"[8:0]u8",length:8,byteSize:9,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign($,{...e,type:13,name:"*const [8:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[]}});Object.assign(r,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(g,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:g}],methods:[]}});Object.assign(y,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:y}],methods:[]}});Object.assign(L,{...e,type:2,name:"Struct2890073165",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:r},{...t,type:9,slot:2,name:"maxValue",structure:r},{...t,type:9,slot:3,name:"defaultValue",structure:r}],methods:[],template:_t}});Object.assign(B,{...e,type:2,name:"Struct4206764882",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:r},{...t,type:9,slot:2,name:"maxValue",structure:r},{...t,type:9,slot:3,name:"defaultValue",structure:r}],methods:[],template:Tt}});Object.assign(G,{...e,type:2,name:"Struct2479264263",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:r},{...t,type:9,slot:2,name:"maxValue",structure:r},{...t,type:9,slot:3,name:"defaultValue",structure:r}],methods:[],template:Gt}});Object.assign(H,{...e,type:2,name:"Struct1979784021",align:1,instance:{members:[{...t,type:9,slot:0,name:"n0",structure:L},{...t,type:9,slot:1,name:"n1",structure:B},{...t,type:9,slot:2,name:"n2",structure:G}],methods:[],template:Qt}});Object.assign(d,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:l}],methods:[],template:Wt}});Object.assign(J,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:9,slot:0,name:"src",structure:d}],methods:[],template:Yt}});Object.assign(N,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:9,slot:0,name:"dst",structure:d}],methods:[],template:Zt}});Object.assign(nt,{...e,type:2,name:"painting.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:D},{...t,type:9,slot:1,name:"vendor",structure:M},{...t,type:9,slot:2,name:"version",structure:l},{...t,type:9,slot:3,name:"description",structure:$},{...t,type:9,slot:4,name:"parameters",structure:H},{...t,type:9,slot:5,name:"inputImages",structure:J},{...t,type:9,slot:6,name:"outputImages",structure:N}],methods:[],template:te}});Object.assign(V,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(Q,{...e,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(I,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:Q}],methods:[]}});Object.assign(m,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[]}});Object.assign(f,{...e,type:11,name:"painting.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:f},{...t,type:9,slot:1,name:"display-p3",structure:f}],methods:[],template:be}});Object.assign(U,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:U}],methods:[]}});Object.assign(at,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:g}],methods:[]}});Object.assign(W,{...e,type:2,name:"painting.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:I},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:f},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:ge},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:l}],methods:[],template:Oe}});Object.assign(R,{...e,type:2,name:"painting.KernelInput(u8,painting.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:W}],methods:[],template:de}});Object.assign(X,{...e,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(k,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:X}],methods:[]}});Object.assign(Y,{...e,type:2,name:"painting.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:k},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:f},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:Ue},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:l}],methods:[],template:Ve}});Object.assign(q,{...e,type:2,name:"painting.KernelOutput(u8,painting.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:Y}],methods:[],template:ve}});Object.assign(v,{...e,type:2,name:"painting.KernelParameters(painting.kernel)",byteSize:12,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"n0",structure:g},{...t,type:4,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"n1",structure:g},{...t,type:4,bitOffset:64,bitSize:32,byteSize:4,slot:2,name:"n2",structure:g}],methods:[],template:Ce}});Object.assign(P,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(painting.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:P}],methods:[],template:Ke}});Object.assign(it,{...e,type:9,name:"ErrorSet2556392059!painting.KernelOutput(u8,painting.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:q},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:P}],methods:[]}});Object.assign(ot,{...e,type:5,name:"createOutput",byteSize:72,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...t,type:7,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:R},{...t,type:7,isRequired:!0,bitOffset:256,bitSize:96,byteSize:12,slot:1,name:"3",structure:v},{...t,type:7,isRequired:!0,bitOffset:352,bitSize:224,byteSize:28,slot:2,name:"retval",structure:it}],methods:[]}});Object.assign(K,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(painting.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:K}],methods:[],template:_e}});Object.assign(ct,{...e,type:9,name:"ErrorSet1477741487!painting.KernelOutput(u8,painting.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:q},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:K}],methods:[]}});Object.assign(ut,{...e,type:5,name:"createPartialOutput",byteSize:80,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:m},{...t,type:7,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:R},{...t,type:7,isRequired:!0,bitOffset:320,bitSize:96,byteSize:12,slot:1,name:"5",structure:v},{...t,type:7,isRequired:!0,bitOffset:416,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ct}],methods:[]}});Object.assign(mt,{...e,type:2,name:"painting",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:s},{...t,type:9,slot:1,name:"Input",structure:s},{...t,type:9,slot:2,name:"Output",structure:s},{...t,type:9,slot:3,name:"Parameters",structure:s}],methods:[hr,dr],template:De}});const wr=[s,O,_,D,F,M,l,S,T,$,r,g,y,L,B,G,H,d,J,N,nt,V,Q,I,m,f,U,at,W,R,X,k,Y,q,v,P,it,ot,K,ct,ut,mt],Ar=mt,Ur={runtimeSafety:!1,littleEndian:!0},et=fs();et.getControlObject();et.recreateStructures(wr,Ur);const Pr=(async()=>{const o=new URL("painting-a2327dd3.wasm",import.meta.url).href;return fetch(o)})();et.loadModule(Pr);et.linkVariables(!0);const{constructor:Vr}=Ar,{createPartialOutput:Ir,Input:Rr,kernel:rt}=Vr;function kr(o,c,a,n,i={},z={}){const j=[];for(const[b]of rt.inputImages)j.push(b);const w=[];for(const[b]of rt.outputImages)w.push(b);if(Array.isArray(i)){const b=i;i={};for(const[p,h]of j.entries())i[h]=b[p]}const u=new Rr(void 0),E=[];let A;for(const b of j){let p=i[b];if(p||(j.length===1&&["data","width","height"].every(h=>!!i[h])?p=i:E.push(b)),u[b]=p,A){if(p.colorSpace!==A)throw new Error(`Input images must all use the same color space: ${A}`)}else A=p.colorSpace}if(E.length>0)throw new Error(`Missing input image${E.length>1?"s":""}: ${E.join(", ")}`);const st=Ir(o,c,a,n,u,z),Ct=b=>{const p={};for(const h of w){const{data:{typedArray:x},width:Kt,height:We}=b[h];let C;if(typeof ImageData=="function"){const Xe=new Uint8ClampedArray(x.buffer,x.byteOffset,x.byteLength);C=new ImageData(Xe,Kt,n,{colorSpace:A})}else C={data:x,width:Kt,height:We};if(w.length===1)return C;p[h]=C}return p};return st[Symbol.toStringTag]==="Promise"?st.then(Ct):Ct(st)}function qr(){const o={};for(let[c,a]of rt){if(c==="parameters"){const n={};for(const[i,z]of a){const j=n[i]={};for(let[w,u]of z)typeof u=="object"?"string"in u?u=u.string:u=Qe(u):typeof u=="function"&&(u=vr(u.name)),j[w]=u}a=n}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());o[c]=a}return o}function Qe(o){const c=[];for(let[a,n]of o)typeof n=="object"&&(n=Qe(n)),c[a]=n;return c}function vr(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[c,a,...n]=o.data;Er(c,n).then(([i,z])=>{postMessage([c,a,i],{transfer:z})}).catch(i=>{postMessage(["error",a,i])})};async function Er(o,c){switch(o){case"getKernelInfo":return[qr(...c)];case"createPartialImageData":const n=await kr(...c),i=[];if("data"in n&&"width"in n&&"height"in n)i.push(n.data.buffer);else for(const z of Object.entries(n))i.push(n.data.buffer);return[n,i];default:throw new Error(`Unknown function: ${o}`)}}
