import{u as Vs,a as Rs,b as ks,c as qs,d as Is,e as vs,f as Es,g as Ts,h as xs,i as Ks,j as Cs,k as Ms,l as Ds,m as Fs,n as _s,o as $s,p as Ls,q as Bs}from"./index-33238b17.js";Vs();Ms();Ds();Rs();ks();Fs();_s();$s();Ls();qs();Is();vs();Es();Bs();Ts();xs();Ks();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},r={},A={},G={},H={},J={},N={},l={},S={},s={},n={},O={},Q={},f={},W={},X={},Y={},Z={},tt={},B={},et={},st={},rt={},nt={},U={},at={},ot={},gt={},k={},it={},q={},u={},g={},R={},ct={},I={},ut={},v={},mt={},E={},T={},d={},Ot={},ft={},w={},St={},jt={},zt={},te={},x={},ee={},K={},se={},C={},re={},ne={},ht={},dt={},wt={},ae={},M={},oe={},D={},ie={},F={},ce={},ue={},At={},Ut={},Pt={},me={},Vt={},ye={},Rt={},be={},kt={},le={},pe={},qt={},ge={},It={},Oe={},vt={},fe={},Se={},Et={},je={},Tt={},ze={},xt={},he={},de={},Kt={},Ct={},Mt={},we={},Dt={},Ae={},Ft={},_t={},$t={},Ue={},Lt={},Pe={},yt={},Ve={},Re={},Bt={},ke={},Gt={},qe={},Ie={},ve={},Ee={},Te={},xe={},Ke={},Ce={},Me={},De={},Fe={},_e={},$e={},Le={},Be={},Ht={},Ge={},He={},Jt={},Je={},Nt={},Ne={},Qe={},We={},Xe={},Ye={},Ze={},ts={},Qt={},es={},ss={},rs={},ns={},as={},os={},is={},cs={},us={},ms={},ys={},bs={},ls={},ps={},gs={},Os={},fs={},Ss={},js={},zs={},hs={},ds={},Gs=new Uint8Array,Hs=new Uint8Array([0,0,0,0,0,0,240,191]),Js=new Uint8Array,Ns=new Uint8Array([0,0,0,0,0,0,240,191]),Qs=new Uint8Array,Ws=new Uint8Array([0,0,0,0,0,0,240,191]),Xs=new Uint8Array,Ys=new Uint8Array,Zs=new Uint8Array,tr=new Uint8Array,er=new Uint8Array([0,0,0,0,0,0,240,63]),sr=new Uint8Array,rr=new Uint8Array([0,0,0,0,0,0,240,63]),nr=new Uint8Array,ar=new Uint8Array([0,0,0,0,0,0,240,63]),or=new Uint8Array,ir=new Uint8Array,cr=new Uint8Array,ur=new Uint8Array,mr=new Uint8Array([0,0,0,0,0,0,224,63]),yr=new Uint8Array,br=new Uint8Array([0,0,0,0,0,0,0,0]),lr=new Uint8Array,pr=new Uint8Array([0,0,0,0,0,0,0,0]),gr=new Uint8Array,Or=new Uint8Array([51,51,51,51,51,51,211,63]),fr=new Uint8Array,Sr=new Uint8Array([0,0,0,0,0,0,240,63]),jr=new Uint8Array,zr=new Uint8Array([102,102,102,102,102,102,230,63]),hr=new Uint8Array,dr=new Uint8Array([154,153,153,153,153,153,185,63]),wr=new Uint8Array,Ar=new Uint8Array([51,51,51,51,51,51,211,63]),Ur=new Uint8Array,Pr=new Uint8Array([154,153,153,153,153,153,233,63]),Vr=new Uint8Array,Rr=new Uint8Array,kr=new Uint8Array,qr=new Uint8Array,Ir=new Uint8Array,vr=new Uint8Array,Er=new Uint8Array,Tr=new Uint8Array,xr=new Uint8Array,Kr=new Uint8Array([3]),Cr=new Uint8Array,Mr=new Uint8Array,Dr=new Uint8Array([28,5,0,1]),Fr=new Uint8Array([89,111,117,114,32,78,97,109,101,115,112,97,99,101,0]),_r=new Uint8Array([54,5,0,1]),$r=new Uint8Array([89,111,117,114,32,86,101,110,100,111,114,0]),Lr=new Uint8Array,Br=new Uint8Array([1]),Gr=new Uint8Array,Hr=new Uint8Array,Jr=new Uint8Array,Nr=new Uint8Array([0]),Qr=new Uint8Array([1]),ws=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Wr=new Uint8Array,Xr=new Uint8Array,Yr=new Uint8Array,Zr=new Uint8Array,tn=new Uint8Array([3]),Wt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),As=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),en=new Uint8Array,sn=new Uint8Array,rn=new Uint8Array,nn=new Uint8Array,an=new Uint8Array([3]),Xt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),on=new Uint8Array([0,0,0,63,0,0,0,0,0,0,0,0,0,0,0,0,154,153,153,62,0,0,128,63,51,51,51,63,0,0,0,0,205,204,204,61,154,153,153,62,205,204,76,63,0,0,0,0]),cn=new Uint8Array([27,0]),un=new Uint8Array([27,0]),mn=new Uint8Array,yn=new Uint8Array,bn=new Uint8Array,ln=new Uint8Array;Object.assign(te,{slots:{0:x,1:K,2:C}});Object.assign(x,{structure:s,memory:{array:Gs},const:!0,slots:{0:ee}});Object.assign(ee,{structure:n,memory:{array:Hs},const:!0});Object.assign(K,{structure:s,memory:{array:Js},const:!0,slots:{0:se}});Object.assign(se,{structure:n,memory:{array:Ns},const:!0});Object.assign(C,{structure:s,memory:{array:Qs},const:!0,slots:{0:re}});Object.assign(re,{structure:n,memory:{array:Ws},const:!0});Object.assign(ne,{slots:{0:ht,1:dt,2:wt}});Object.assign(ht,{structure:O,memory:{array:Xs},const:!0,slots:{0:x,1:K,2:C}});Object.assign(dt,{structure:O,memory:{array:Ys},const:!0,slots:{0:x,1:K,2:C}});Object.assign(wt,{structure:O,memory:{array:Zs},const:!0,slots:{0:x,1:K,2:C}});Object.assign(ae,{slots:{0:M,1:D,2:F}});Object.assign(M,{structure:s,memory:{array:tr},const:!0,slots:{0:oe}});Object.assign(oe,{structure:n,memory:{array:er},const:!0});Object.assign(D,{structure:s,memory:{array:sr},const:!0,slots:{0:ie}});Object.assign(ie,{structure:n,memory:{array:rr},const:!0});Object.assign(F,{structure:s,memory:{array:nr},const:!0,slots:{0:ce}});Object.assign(ce,{structure:n,memory:{array:ar},const:!0});Object.assign(ue,{slots:{0:At,1:Ut,2:Pt}});Object.assign(At,{structure:f,memory:{array:or},const:!0,slots:{0:M,1:D,2:F}});Object.assign(Ut,{structure:f,memory:{array:ir},const:!0,slots:{0:M,1:D,2:F}});Object.assign(Pt,{structure:f,memory:{array:cr},const:!0,slots:{0:M,1:D,2:F}});Object.assign(me,{slots:{0:Vt,1:Rt,2:kt}});Object.assign(Vt,{structure:s,memory:{array:ur},const:!0,slots:{0:ye}});Object.assign(ye,{structure:n,memory:{array:mr},const:!0});Object.assign(Rt,{structure:s,memory:{array:yr},const:!0,slots:{0:be}});Object.assign(be,{structure:n,memory:{array:br},const:!0});Object.assign(kt,{structure:s,memory:{array:lr},const:!0,slots:{0:le}});Object.assign(le,{structure:n,memory:{array:pr},const:!0});Object.assign(pe,{slots:{0:qt,1:It,2:vt}});Object.assign(qt,{structure:s,memory:{array:gr},const:!0,slots:{0:ge}});Object.assign(ge,{structure:n,memory:{array:Or},const:!0});Object.assign(It,{structure:s,memory:{array:fr},const:!0,slots:{0:Oe}});Object.assign(Oe,{structure:n,memory:{array:Sr},const:!0});Object.assign(vt,{structure:s,memory:{array:jr},const:!0,slots:{0:fe}});Object.assign(fe,{structure:n,memory:{array:zr},const:!0});Object.assign(Se,{slots:{0:Et,1:Tt,2:xt}});Object.assign(Et,{structure:s,memory:{array:hr},const:!0,slots:{0:je}});Object.assign(je,{structure:n,memory:{array:dr},const:!0});Object.assign(Tt,{structure:s,memory:{array:wr},const:!0,slots:{0:ze}});Object.assign(ze,{structure:n,memory:{array:Ar},const:!0});Object.assign(xt,{structure:s,memory:{array:Ur},const:!0,slots:{0:he}});Object.assign(he,{structure:n,memory:{array:Pr},const:!0});Object.assign(de,{slots:{0:Kt,1:Ct,2:Mt}});Object.assign(Kt,{structure:X,memory:{array:Vr},const:!0,slots:{0:Vt,1:Rt,2:kt}});Object.assign(Ct,{structure:Y,memory:{array:Rr},const:!0,slots:{0:qt,1:It,2:vt}});Object.assign(Mt,{structure:Z,memory:{array:kr},const:!0,slots:{0:Et,1:Tt,2:xt}});Object.assign(we,{slots:{0:Dt,1:Ft,2:_t,3:$t}});Object.assign(Dt,{structure:r,memory:{array:qr},const:!0,slots:{0:Ae}});Object.assign(Ae,{structure:st});Object.assign(Ft,{structure:Q,memory:{array:Ir},const:!0,slots:{0:ht,1:dt,2:wt}});Object.assign(_t,{structure:W,memory:{array:vr},const:!0,slots:{0:At,1:Ut,2:Pt}});Object.assign($t,{structure:tt,memory:{array:Er},const:!0,slots:{0:Kt,1:Ct,2:Mt}});Object.assign(Ue,{slots:{0:Lt}});Object.assign(Lt,{structure:rt,memory:{array:Tr},const:!0,slots:{0:Dt,1:Ft,2:_t,3:$t}});Object.assign(Pe,{slots:{0:yt}});Object.assign(yt,{structure:l,memory:{array:xr},const:!0,slots:{0:Ve}});Object.assign(Ve,{structure:S,memory:{array:Kr},const:!0});Object.assign(Re,{slots:{0:Bt}});Object.assign(Bt,{structure:U,memory:{array:Cr},const:!0,slots:{0:yt}});Object.assign(ke,{slots:{0:Gt}});Object.assign(Gt,{structure:U,memory:{array:Mr},const:!0,slots:{0:yt}});Object.assign(qe,{slots:{0:Ie,1:Ee,2:xe,3:Ce,4:Me,5:De}});Object.assign(Ie,{structure:H,memory:{array:Dr},const:!0,slots:{0:ve}});Object.assign(ve,{structure:G,memory:{array:Fr},reloc:16778524});Object.assign(Ee,{structure:N,memory:{array:_r},const:!0,slots:{0:Te}});Object.assign(Te,{structure:J,memory:{array:$r},reloc:16778550});Object.assign(xe,{structure:l,memory:{array:Lr},const:!0,slots:{0:Ke}});Object.assign(Ke,{structure:S,memory:{array:Br},const:!0});Object.assign(Ce,{structure:nt,memory:{array:Gr},const:!0,slots:{0:Lt}});Object.assign(Me,{structure:at,memory:{array:Hr},const:!0,slots:{0:Bt}});Object.assign(De,{structure:ot,memory:{array:Jr},const:!0,slots:{0:Gt}});Object.assign(Fe,{slots:{0:_e,1:$e}});Object.assign(_e,{structure:g,memory:{array:Nr},const:!0});Object.assign($e,{structure:g,memory:{array:Qr},const:!0});Object.assign(Le,{memory:{array:ws},slots:{0:Be}});Object.assign(Be,{structure:q,memory:{array:ws,offset:0,length:8},slots:{0:Ht}});Object.assign(Ht,{structure:it,memory:{array:Wr},reloc:0});Object.assign(Ge,{slots:{0:He,1:Je,2:Ne}});Object.assign(He,{structure:r,memory:{array:Xr},const:!0,slots:{0:Jt}});Object.assign(Jt,{structure:k});Object.assign(Je,{structure:r,memory:{array:Yr},const:!0,slots:{0:Nt}});Object.assign(Nt,{structure:et});Object.assign(Ne,{structure:l,memory:{array:Zr},const:!0,slots:{0:Qe}});Object.assign(Qe,{structure:S,memory:{array:tn},const:!0});Object.assign(We,{memory:{array:Wt},slots:{0:Xe}});Object.assign(Xe,{structure:ct,memory:{array:Wt},slots:{0:Ye}});Object.assign(Ye,{structure:q,memory:{array:Wt,offset:0,length:8},slots:{0:Ht}});Object.assign(Ze,{memory:{array:As},slots:{0:ts}});Object.assign(ts,{structure:v,memory:{array:As,offset:0,length:8},slots:{0:Qt}});Object.assign(Qt,{structure:ut,memory:{array:en},reloc:0});Object.assign(es,{slots:{0:ss,1:rs,2:ns}});Object.assign(ss,{structure:r,memory:{array:sn},const:!0,slots:{0:Jt}});Object.assign(rs,{structure:r,memory:{array:rn},const:!0,slots:{0:Nt}});Object.assign(ns,{structure:l,memory:{array:nn},const:!0,slots:{0:as}});Object.assign(as,{structure:S,memory:{array:an},const:!0});Object.assign(os,{memory:{array:Xt},slots:{0:is}});Object.assign(is,{structure:mt,memory:{array:Xt},slots:{0:cs}});Object.assign(cs,{structure:v,memory:{array:Xt,offset:0,length:8},slots:{0:Qt}});Object.assign(us,{memory:{array:on}});Object.assign(ms,{slots:{0:ys}});Object.assign(ys,{structure:d,memory:{array:cn},const:!0});Object.assign(bs,{slots:{0:ls}});Object.assign(ls,{structure:w,memory:{array:un},const:!0});Object.assign(ps,{slots:{0:gs,1:fs,2:js,3:hs}});Object.assign(gs,{structure:r,memory:{array:mn},const:!0,slots:{0:Os}});Object.assign(Os,{structure:gt});Object.assign(fs,{structure:r,memory:{array:yn},const:!0,slots:{0:Ss}});Object.assign(Ss,{structure:I});Object.assign(js,{structure:r,memory:{array:bn},const:!0,slots:{0:zs}});Object.assign(zs,{structure:E});Object.assign(hs,{structure:r,memory:{array:ln},const:!0,slots:{0:ds}});Object.assign(ds,{structure:T});const pn={argStruct:ft,thunkId:2,name:"createOutput"},gn={argStruct:jt,thunkId:3,name:"createPartialOutput"};Object.assign(r,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(A,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:A}],methods:[]}});Object.assign(G,{...e,type:1,name:"[14:0]u8",length:14,byteSize:15,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:A}],methods:[]}});Object.assign(H,{...e,type:13,name:"*const [14:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:G}],methods:[]}});Object.assign(J,{...e,type:1,name:"[11:0]u8",length:11,byteSize:12,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:A}],methods:[]}});Object.assign(N,{...e,type:13,name:"*const [11:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:J}],methods:[]}});Object.assign(l,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:l}],methods:[]}});Object.assign(S,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(s,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(n,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:n}],methods:[]}});Object.assign(O,{...e,type:2,name:"Struct3651955411",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s},{...t,type:7,slot:2,name:"2",structure:s}],methods:[],template:te}});Object.assign(Q,{...e,type:2,name:"Struct1390697979",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:O},{...t,type:7,slot:1,name:"1",structure:O},{...t,type:7,slot:2,name:"2",structure:O}],methods:[],template:ne}});Object.assign(f,{...e,type:2,name:"Struct2060771296",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s},{...t,type:7,slot:2,name:"2",structure:s}],methods:[],template:ae}});Object.assign(W,{...e,type:2,name:"Struct644281370",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:f},{...t,type:7,slot:1,name:"1",structure:f},{...t,type:7,slot:2,name:"2",structure:f}],methods:[],template:ue}});Object.assign(X,{...e,type:2,name:"Struct3800968537",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s},{...t,type:7,slot:2,name:"2",structure:s}],methods:[],template:me}});Object.assign(Y,{...e,type:2,name:"Struct2724820031",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s},{...t,type:7,slot:2,name:"2",structure:s}],methods:[],template:pe}});Object.assign(Z,{...e,type:2,name:"Struct1350969599",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s},{...t,type:7,slot:2,name:"2",structure:s}],methods:[],template:Se}});Object.assign(tt,{...e,type:2,name:"Struct2019922924",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:X},{...t,type:7,slot:1,name:"1",structure:Y},{...t,type:7,slot:2,name:"2",structure:Z}],methods:[],template:de}});Object.assign(B,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:B}],methods:[]}});Object.assign(et,{...e,type:15,name:"@Vector(3, f32)",length:3,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:B}],methods:[]}});Object.assign(st,{...e,type:1,name:"[3]@Vector(3, f32)",length:3,byteSize:48,align:16,instance:{members:[{...t,type:5,bitSize:96,byteSize:16,structure:et}],methods:[]}});Object.assign(rt,{...e,type:2,name:"Struct3448744814",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:Q},{...t,type:7,slot:2,name:"maxValue",structure:W},{...t,type:7,slot:3,name:"defaultValue",structure:tt}],methods:[],template:we}});Object.assign(nt,{...e,type:2,name:"Struct3437036445",align:1,instance:{members:[{...t,type:7,slot:0,name:"transform",structure:rt}],methods:[],template:Ue}});Object.assign(U,{...e,type:2,name:"Struct3196272719",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:l}],methods:[],template:Pe}});Object.assign(at,{...e,type:2,name:"Struct3897456493",align:1,instance:{members:[{...t,type:7,slot:0,name:"src",structure:U}],methods:[],template:Re}});Object.assign(ot,{...e,type:2,name:"Struct4047475671",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:U}],methods:[],template:ke}});Object.assign(gt,{...e,type:2,name:"simple.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:H},{...t,type:7,slot:1,name:"vendor",structure:N},{...t,type:7,slot:2,name:"version",structure:l},{...t,type:7,slot:3,name:"parameters",structure:nt},{...t,type:7,slot:4,name:"inputImages",structure:at},{...t,type:7,slot:5,name:"outputImages",structure:ot}],methods:[],template:qe}});Object.assign(k,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:A}],methods:[]}});Object.assign(it,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(q,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:it}],methods:[]}});Object.assign(u,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:u}],methods:[]}});Object.assign(g,{...e,type:11,name:"simple.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:g}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:g},{...t,type:7,slot:1,name:"display-p3",structure:g}],methods:[],template:Fe}});Object.assign(R,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(ct,{...e,type:2,name:"simple.Image(u8,3,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:q},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:g},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:Le},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:r},{...t,type:7,slot:1,name:"FPixel",structure:r},{...t,type:7,slot:2,name:"channels",structure:l}],methods:[],template:Ge}});Object.assign(I,{...e,type:2,name:"simple.KernelInput(u8,simple.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:ct}],methods:[],template:We}});Object.assign(ut,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(v,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:ut}],methods:[]}});Object.assign(mt,{...e,type:2,name:"simple.Image(u8,3,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:v},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:g},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:Ze},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:r},{...t,type:7,slot:1,name:"FPixel",structure:r},{...t,type:7,slot:2,name:"channels",structure:l}],methods:[],template:es}});Object.assign(E,{...e,type:2,name:"simple.KernelOutput(u8,simple.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:mt}],methods:[],template:os}});Object.assign(T,{...e,type:2,name:"simple.KernelParameters(simple.kernel)",byteSize:48,align:16,instance:{members:[{...t,type:5,bitOffset:0,bitSize:352,byteSize:48,slot:0,name:"transform",structure:st}],methods:[],template:us}});Object.assign(d,{...e,type:10,name:"ErrorSet2014799019",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:d}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:d}],methods:[],template:ms}});Object.assign(Ot,{...e,type:9,name:"ErrorSet2014799019!simple.KernelOutput(u8,simple.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:E},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:d}],methods:[]}});Object.assign(ft,{...e,type:5,name:"createOutput",byteSize:112,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:384,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...t,type:3,isRequired:!0,bitOffset:416,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...t,type:5,isRequired:!0,bitOffset:448,bitSize:192,byteSize:24,slot:0,name:"2",structure:I},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:384,byteSize:48,slot:1,name:"3",structure:T},{...t,type:5,isRequired:!0,bitOffset:640,bitSize:224,byteSize:28,slot:2,name:"retval",structure:Ot}],methods:[]}});Object.assign(w,{...e,type:10,name:"ErrorSet3697547636",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:w}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:w}],methods:[],template:bs}});Object.assign(St,{...e,type:9,name:"ErrorSet3697547636!simple.KernelOutput(u8,simple.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:E},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:w}],methods:[]}});Object.assign(jt,{...e,type:5,name:"createPartialOutput",byteSize:128,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:384,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...t,type:3,isRequired:!0,bitOffset:416,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...t,type:3,isRequired:!0,bitOffset:448,bitSize:32,byteSize:4,slot:5,name:"2",structure:u},{...t,type:3,isRequired:!0,bitOffset:480,bitSize:32,byteSize:4,slot:6,name:"3",structure:u},{...t,type:5,isRequired:!0,bitOffset:512,bitSize:192,byteSize:24,slot:0,name:"4",structure:I},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:384,byteSize:48,slot:1,name:"5",structure:T},{...t,type:5,isRequired:!0,bitOffset:704,bitSize:224,byteSize:28,slot:2,name:"retval",structure:St}],methods:[]}});Object.assign(zt,{...e,type:2,name:"simple",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:r},{...t,type:7,slot:1,name:"Input",structure:r},{...t,type:7,slot:2,name:"Output",structure:r},{...t,type:7,slot:3,name:"Parameters",structure:r}],methods:[pn,gn],template:ps}});const On=[r,A,G,H,J,N,l,S,s,n,O,Q,f,W,X,Y,Z,tt,B,et,st,rt,nt,U,at,ot,gt,k,it,q,u,g,R,ct,I,ut,v,mt,E,T,d,Ot,ft,w,St,jt,zt],fn=zt,Sn={runtimeSafety:!1,littleEndian:!0},bt=Cs();bt.getSpecialExports();bt.recreateStructures(On,Sn);const jn=(async()=>{const i=new URL("simple-e1583d16.wasm",import.meta.url).href;return fetch(i)})();bt.loadModule(jn);bt.linkVariables(!0);const{constructor:zn}=fn,{createPartialOutput:hn,Input:dn,kernel:pt}=zn;function wn(i,m,c,o,a={},j={}){const z=[];for(const[b]of pt.inputImages)z.push(b);const P=[];for(const[b]of pt.outputImages)P.push(b);if(Array.isArray(a)){const b=a;a={};for(const[p,h]of z.entries())a[h]=b[p]}const y=new dn(void 0),_=[];let V;for(const b of z){let p=a[b];if(p||(z.length===1&&["data","width","height"].every(h=>!!a[h])?p=a:_.push(b)),y[b]=p,V){if(p.colorSpace!==V)throw new Error(`Input images must all use the same color space: ${V}`)}else V=p.colorSpace}if(_.length>0)throw new Error(`Missing input image${_.length>1?"s":""}: ${_.join(", ")}`);const lt=hn(i,m,c,o,y,j),Yt=b=>{const p={};for(const h of P){const{data:{typedArray:$},width:Zt,height:Us}=b[h];let L;if(typeof ImageData=="function"){const Ps=new Uint8ClampedArray($.buffer,$.byteOffset,$.byteLength);L=new ImageData(Ps,Zt,o,{colorSpace:V})}else L={data:$,width:Zt,height:Us};if(P.length===1)return L;p[h]=L}return p};return lt[Symbol.toStringTag]==="Promise"?lt.then(Yt):Yt(lt)}function An(){const i={};for(let[m,c]of pt){if(m==="parameters"){const o={};for(const[a,j]of c){const z=o[a]={};for(let[P,y]of j)typeof y=="object"?y=y.string??y.valueOf():typeof y=="function"&&(y=Un(y.name)),z[P]=y}c=o}else typeof c=="object"&&(c=c.string??c.valueOf());i[m]=c}return i}function Un(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=async i=>{if(!Array.isArray(i.data))return;const[m,c,...o]=i.data;try{const[a,j]=await Pn(m,o);postMessage([m,c,a],{transfer:j})}catch(a){postMessage(["error",c,a])}};async function Pn(i,m){switch(i){case"getKernelInfo":return[An(...m)];case"createPartialImageData":const o=await wn(...m),a=[];if("data"in o&&"width"in o&&"height"in o)a.push(o.data.buffer);else for(const j of Object.entries(o))a.push(o.data.buffer);return[o,a];default:throw new Error(`Unknown function: ${i}`)}}postMessage("ready");
