import{u as ve,a as Ee,b as Ke,c as De,d as Fe,e as Me,f as _e,g as Te,h as $e,i as Be,j as Le,k as Ge,l as He,m as Je,o as Ne,n as Qe,p as We,q as Xe}from"./index-d64bc850.js";ve();Ee();Ke();De();Fe();Me();_e();Te();$e();Be();Le();Ge();He();Je();Ne();Qe();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},p={},H={},J={},C={},N={},Q={},k={},c={},b={},W={},X={},I={},h={},m={},r={},Y={},Z={},v={},ee={},E={},te={},se={},K={},re={},D={},ae={},F={},ne={},ie={},M={},ue={},_={},oe={},T={},R={},g={},le={},$={},me={},B={},ge={},z={},ye={},ce={},l={},be={},w={},pe={},L={},q={},fe={},he={},G={},A={},U={},ze={},Oe={},we={},Re={},qe={},Ae={},Ue={};Object.assign(p,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:5});Object.assign(H,{...t,type:1,name:"[29:0]u8",length:29,byteSize:30,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:4});Object.assign(J,{...t,type:11,name:"*const [29:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[],template:null},slot:3});Object.assign(C,{...t,type:11,name:"*const *const [29:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:J}],methods:[],template:null},slot:2});Object.assign(N,{...t,type:1,name:"[14:0]u8",length:14,byteSize:15,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:8});Object.assign(Q,{...t,type:11,name:"*const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:N}],methods:[],template:null},slot:7});Object.assign(k,{...t,type:11,name:"*const *const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[],template:null},slot:6});Object.assign(c,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:10});Object.assign(b,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:c}],methods:[],template:null},slot:9});Object.assign(W,{...t,type:1,name:"[16:0]u8",length:16,byteSize:17,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:13});Object.assign(X,{...t,type:11,name:"*const [16:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:12});Object.assign(I,{...t,type:11,name:"*const *const [16:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:11});Object.assign(h,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:h}],methods:[],template:null},slot:32});Object.assign(m,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:m}],methods:[],template:null},slot:48});Object.assign(r,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:m}],methods:[],template:null},slot:47});Object.assign(Y,{...t,type:1,name:"[12:0]u8",length:12,byteSize:13,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:51});Object.assign(Z,{...t,type:11,name:"*const [12:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[],template:null},slot:50});Object.assign(v,{...t,type:11,name:"*const *const [12:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:49});const Ye=new Uint8Array,Ze=new Uint8Array([24,251,15,0]),et=new Uint8Array([0,0,0,0,0,0,240,63]),tt=new Uint8Array([80,251,15,0]),st=new Uint8Array([0,0,0,0,0,0,105,64]),rt=new Uint8Array([104,251,15,0]),at=new Uint8Array([0,0,0,0,0,0,73,64]),nt=new Uint8Array([120,251,15,0]),it=new Uint8Array([100,5,16,0]),ut=new Uint8Array([72,101,120,97,103,111,110,32,83,105,122,101,0]);Object.assign(ee,{...t,type:2,name:"Struct0009",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:h},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:v}],methods:[],template:{memory:{array:Ye},slots:{0:{structure:r,memory:{array:Ze},slots:{0:{structure:m,memory:{array:et}}}},1:{structure:r,memory:{array:tt},slots:{0:{structure:m,memory:{array:st}}}},2:{structure:r,memory:{array:rt},slots:{0:{structure:m,memory:{array:at}}}},3:{structure:v,memory:{array:nt},slots:{0:{structure:Z,memory:{array:it},slots:{0:{structure:Y,memory:{array:ut}}}}}}}}},slot:39});Object.assign(E,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:38});Object.assign(te,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:h}],methods:[],template:null},slot:33});const ot=new Uint8Array,lt=new Uint8Array([136,251,15,0]),mt=new Uint8Array([0,0,0,0,0,0,105,192]),yt=new Uint8Array([48,252,15,0]),ct=new Uint8Array([0,0,0,0,0,0,105,192]);Object.assign(se,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:ot},slots:{0:{structure:r,memory:{array:lt},slots:{0:{structure:m,memory:{array:mt}}}},1:{structure:r,memory:{array:yt},slots:{0:{structure:m,memory:{array:ct}}}}}}},slot:53});Object.assign(K,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:52});const bt=new Uint8Array,pt=new Uint8Array([136,251,15,0]),ft=new Uint8Array([0,0,0,0,0,0,137,64]),ht=new Uint8Array([48,252,15,0]),St=new Uint8Array([0,0,0,0,0,64,127,64]);Object.assign(re,{...t,type:2,name:"Struct0016",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:bt},slots:{0:{structure:r,memory:{array:pt},slots:{0:{structure:m,memory:{array:ft}}}},1:{structure:r,memory:{array:ht},slots:{0:{structure:m,memory:{array:St}}}}}}},slot:55});Object.assign(D,{...t,type:11,name:"Struct0013",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:54});const dt=new Uint8Array,gt=new Uint8Array([136,251,15,0]),zt=new Uint8Array([0,0,0,0,0,0,121,64]),Ot=new Uint8Array([48,252,15,0]),wt=new Uint8Array([0,0,0,0,0,64,111,64]);Object.assign(ae,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:dt},slots:{0:{structure:r,memory:{array:gt},slots:{0:{structure:m,memory:{array:zt}}}},1:{structure:r,memory:{array:Ot},slots:{0:{structure:m,memory:{array:wt}}}}}}},slot:57});Object.assign(F,{...t,type:11,name:"Struct0014",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:56});Object.assign(ne,{...t,type:1,name:"[10:0]u8",length:10,byteSize:11,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:60});Object.assign(ie,{...t,type:11,name:"*const [10:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:59});Object.assign(M,{...t,type:11,name:"*const *const [10:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:58});const Rt=new Uint8Array,qt=new Uint8Array([170,170,170,170]),At=new Uint8Array,Ut=new Uint8Array([170,170,170,170]),jt=new Uint8Array,Pt=new Uint8Array([170,170,170,170]),xt=new Uint8Array,Vt=new Uint8Array([68,251,15,0]),Ct=new Uint8Array([89,5,16,0]),kt=new Uint8Array([98,97,115,101,32,112,111,105,110,116,0]);Object.assign(ue,{...t,type:2,name:"Struct0010",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:te},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:K},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:D},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:F},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:M}],methods:[],template:{memory:{array:Rt},slots:{0:{structure:K,memory:{array:qt},slots:{0:{structure:se,memory:{array:At}}}},1:{structure:D,memory:{array:Ut},slots:{0:{structure:re,memory:{array:jt}}}},2:{structure:F,memory:{array:Pt},slots:{0:{structure:ae,memory:{array:xt}}}},3:{structure:M,memory:{array:Vt},slots:{0:{structure:ie,memory:{array:Ct},slots:{0:{structure:ne,memory:{array:kt}}}}}}}}},slot:41});Object.assign(_,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:40});const It=new Uint8Array,vt=new Uint8Array([170,170,170,170]),Et=new Uint8Array,Kt=new Uint8Array([170,170,170,170]),Dt=new Uint8Array;Object.assign(oe,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"size",structure:E},{...e,type:8,isRequired:!1,slot:1,name:"base",structure:_}],methods:[],template:{memory:{array:It},slots:{0:{structure:E,memory:{array:vt},slots:{0:{structure:ee,memory:{array:Et}}}},1:{structure:_,memory:{array:Kt},slots:{0:{structure:ue,memory:{array:Dt}}}}}}},slot:15});Object.assign(T,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:14});const Ft=new Uint8Array,Mt=new Uint8Array([48,252,15,0]),_t=new Uint8Array([4,0,0,0]);Object.assign(R,{...t,type:2,name:"Struct0011",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:b}],methods:[],template:{memory:{array:Ft},slots:{0:{structure:b,memory:{array:Mt},slots:{0:{structure:c,memory:{array:_t}}}}}}},slot:43});Object.assign(g,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:R}],methods:[],template:null},slot:42});const Tt=new Uint8Array,$t=new Uint8Array([170,170,170,170]),Bt=new Uint8Array;Object.assign(le,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"img",structure:g}],methods:[],template:{memory:{array:Tt},slots:{0:{structure:g,memory:{array:$t},slots:{0:{structure:R,memory:{array:Bt}}}}}}},slot:17});Object.assign($,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:16});const Lt=new Uint8Array,Gt=new Uint8Array([170,170,170,170]),Ht=new Uint8Array;Object.assign(me,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"pxl",structure:g}],methods:[],template:{memory:{array:Lt},slots:{0:{structure:g,memory:{array:Gt},slots:{0:{structure:R,memory:{array:Ht}}}}}}},slot:19});Object.assign(B,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:18});const Jt=new Uint8Array,Nt=new Uint8Array,Qt=new Uint8Array([16,9,16,0]),Wt=new Uint8Array([179,8,16,0]),Xt=new Uint8Array([72,101,120,32,99,101,108,108,115,32,239,191,189,32,110,111,116,32,106,117,115,116,32,112,105,120,101,108,115,0]),Yt=new Uint8Array([12,9,16,0]),Zt=new Uint8Array([153,8,16,0]),es=new Uint8Array([80,101,116,114,105,32,76,101,115,107,105,110,101,110,0]),ts=new Uint8Array([8,9,16,0]),ss=new Uint8Array([1,0,0,0]),rs=new Uint8Array([4,9,16,0]),as=new Uint8Array([119,8,16,0]),ns=new Uint8Array([72,101,120,97,103,111,110,97,108,32,84,105,108,105,110,103,0]),is=new Uint8Array([170,170,170,170]),us=new Uint8Array,os=new Uint8Array([170,170,170,170]),ls=new Uint8Array,ms=new Uint8Array([170,170,170,170]),ys=new Uint8Array;Object.assign(ge,{...t,type:2,name:"hex-cells.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Jt}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:C},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:k},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:b},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:I},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:T},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:$},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:B}],methods:[],template:{memory:{array:Nt},slots:{0:{structure:C,memory:{array:Qt},slots:{0:{structure:J,memory:{array:Wt},slots:{0:{structure:H,memory:{array:Xt}}}}}},1:{structure:k,memory:{array:Yt},slots:{0:{structure:Q,memory:{array:Zt},slots:{0:{structure:N,memory:{array:es}}}}}},2:{structure:b,memory:{array:ts},slots:{0:{structure:c,memory:{array:ss}}}},3:{structure:I,memory:{array:rs},slots:{0:{structure:X,memory:{array:as},slots:{0:{structure:W,memory:{array:ns}}}}}},4:{structure:T,memory:{array:is},slots:{0:{structure:oe,memory:{array:us}}}},5:{structure:$,memory:{array:os},slots:{0:{structure:le,memory:{array:ls}}}},6:{structure:B,memory:{array:ms},slots:{0:{structure:me,memory:{array:ys}}}}}}},slot:1});Object.assign(z,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:24});Object.assign(ye,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:z}],methods:[],template:null},slot:23});Object.assign(ce,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:ye}],methods:[],template:null},slot:22});Object.assign(l,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:l}],methods:[],template:null},slot:25});const cs=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(be,{...t,type:9,name:"hex-cells.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:c},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:c}],methods:[],template:{memory:{array:cs}}},slot:26});Object.assign(w,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:w}],methods:[],template:null},slot:27});Object.assign(pe,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:h}],methods:[],template:null},slot:44});const bs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ps=new Uint8Array,fs=new Uint8Array([76,8,16,0]),hs=new Uint8Array([4,0,0,0]);Object.assign(L,{...t,type:2,name:"hex-cells.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:ce},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:be},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:w}],methods:[],template:{memory:{array:bs}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:z},{...e,type:7,isRequired:!1,name:"FPixel",structure:pe},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:b}],methods:[],template:{memory:{array:ps},slots:{0:{structure:b,memory:{array:fs},slots:{0:{structure:c,memory:{array:hs}}}}}}},slot:21});const Ss=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ds=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ve=new Uint8Array([0,0,0,0,0,0,0,0]),gs=new Uint8Array;Object.assign(q,{...t,type:2,name:"hex-cells.KernelInput(u8,hex-cells.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"img",structure:L}],methods:[],template:{memory:{array:Ss},slots:{0:{structure:L,memory:{array:ds},slots:{0:{structure:ce,memory:{array:Ve},address:1047200,slots:{0:{structure:ye,memory:{array:gs},address:0}}}}}}}},slot:20});Object.assign(fe,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:z}],methods:[],template:null},slot:23});Object.assign(he,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:fe}],methods:[],template:null},slot:30});const zs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Os=new Uint8Array,ws=new Uint8Array([76,8,16,0]),Rs=new Uint8Array([4,0,0,0]);Object.assign(G,{...t,type:2,name:"hex-cells.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:he},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:be},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:w}],methods:[],template:{memory:{array:zs}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:z},{...e,type:7,isRequired:!1,name:"FPixel",structure:pe},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:b}],methods:[],template:{memory:{array:Os},slots:{0:{structure:b,memory:{array:ws},slots:{0:{structure:c,memory:{array:Rs}}}}}}},slot:29});const qs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),As=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Us=new Uint8Array;Object.assign(A,{...t,type:2,name:"hex-cells.KernelOutput(u8,hex-cells.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"pxl",structure:G}],methods:[],template:{memory:{array:qs},slots:{0:{structure:G,memory:{array:As},slots:{0:{structure:he,memory:{array:Ve},address:1047200,slots:{0:{structure:fe,memory:{array:Us},address:0}}}}}}}},slot:28});const js=new Uint8Array([0,0,200,67,0,0,122,67,0,0,72,66,0,0,0,0]);Object.assign(U,{...t,type:2,name:"hex-cells.KernelParameters(hex-cells.kernel)",length:1,byteSize:16,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:64,bitSize:32,byteSize:4,slot:0,name:"size",structure:h},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,slot:1,name:"base",structure:te}],methods:[],template:{memory:{array:js}}},slot:31});Object.assign(ze,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(hex-cells.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:45});Object.assign(Oe,{...t,type:7,name:"ErrorSet0000!hex-cells.KernelOutput(u8,hex-cells.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:A},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:ze}],methods:[],template:null},slot:36});Object.assign(we,{...t,type:3,name:"createOutput",length:1,byteSize:80,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:0,name:"0",structure:l},{...e,type:3,bitOffset:160,bitSize:32,byteSize:4,slot:1,name:"1",structure:l},{...e,type:6,bitOffset:192,bitSize:192,byteSize:24,slot:2,name:"2",structure:q},{...e,type:6,bitOffset:0,bitSize:128,byteSize:16,slot:3,name:"3",structure:U},{...e,type:6,bitOffset:384,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Oe}],methods:[],template:null},slot:34});Object.assign(Re,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(hex-cells.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:46});Object.assign(qe,{...t,type:7,name:"ErrorSet0001!hex-cells.KernelOutput(u8,hex-cells.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:A},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Re}],methods:[],template:null},slot:37});Object.assign(Ae,{...t,type:3,name:"createPartialOutput",length:1,byteSize:88,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:0,name:"0",structure:l},{...e,type:3,bitOffset:160,bitSize:32,byteSize:4,slot:1,name:"1",structure:l},{...e,type:3,bitOffset:192,bitSize:32,byteSize:4,slot:2,name:"2",structure:l},{...e,type:3,bitOffset:224,bitSize:32,byteSize:4,slot:3,name:"3",structure:l},{...e,type:6,bitOffset:256,bitSize:192,byteSize:24,slot:4,name:"4",structure:q},{...e,type:6,bitOffset:0,bitSize:128,byteSize:16,slot:5,name:"5",structure:U},{...e,type:6,bitOffset:448,bitSize:224,byteSize:28,slot:6,name:"retval",structure:qe}],methods:[],template:null},slot:35});const Ps=new Uint8Array,xs={argStruct:we,thunk:5,name:"createOutput"},Vs={argStruct:Ae,thunk:1,name:"createPartialOutput"};Object.assign(Ue,{...t,type:2,name:"hex-cells",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Ps}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:ge},{...e,type:7,isRequired:!1,name:"Input",structure:q},{...e,type:7,isRequired:!1,name:"Output",structure:A},{...e,type:7,isRequired:!1,name:"Parameters",structure:U}],methods:[xs,Vs],template:null},slot:0});const Cs=[p,H,J,C,N,Q,k,c,b,W,X,I,h,m,r,Y,Z,v,ee,E,te,se,K,re,D,ae,F,ne,ie,M,ue,_,oe,T,R,g,le,$,me,B,ge,z,ye,ce,l,be,w,pe,L,q,fe,he,G,A,U,ze,Oe,we,Re,qe,Ae,Ue],ks=We(Cs),Is=Ue.constructor,vs=(async()=>{const i=new URL("hex-cells-94a8b6ac.wasm",import.meta.url).href;return fetch(i)})();Xe(vs,{...ks,writeBack:!0});const{createOutput:$s,createPartialOutput:Es,kernel:de,Input:Ks,Output:Bs,Parameters:Ls}=Is;function Ds(i,o,a,s,n={},S={}){if(Array.isArray(n)){const f=n;n={};for(const[y,d]of Object.keys(de.inputImages).entries())n[d]=f[y]}const j=new Ks(void 0),P=Object.keys(de.inputImages),u=[];let O;for(const f of P){let y=n[f];if(y||(P.length===1&&["data","width","height"].every(d=>!!n[d])?y=n:u.push(f)),j[f]=y,O){if(y.colorSpace!==O)throw new Error(`Input images must all use the same color space: ${O}`)}else O=y.colorSpace}if(u.length>0)throw new Error(`Missing input image${u.length>1?"s":""}: ${u.join(", ")}`);const Se=Es(i,o,a,s,j,S),je=f=>{const y=Object.keys(f),d={};for(const Pe of y){const{data:{typedArray:x},width:xe,height:ke}=f[Pe];let V;if(typeof ImageData=="function"){const Ie=new Uint8ClampedArray(x.buffer,x.byteOffset,x.byteLength);V=new ImageData(Ie,xe,s,{colorSpace:O})}else V={data:x,width:xe,height:ke};if(y.length===1)return V;d[Pe]=V}return d};return Se[Symbol.toStringTag]==="Promise"?Se.then(je):je(Se)}function Fs(){const i={};for(let[o,a]of Object.entries(de)){if(o==="parameters"){const s={};for(const[n,S]of Object.entries(a)){const j=s[n]={};for(let[P,u]of Object.entries(S))typeof u=="object"?"string"in u?u=u.string:u=Ce(u):typeof u=="function"&&(u=Ms(u.name)),j[P]=u}a=s}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());i[o]=a}return i}function Ce(i){const o=[];for(let[a,s]of Object.entries(i))typeof s=="object"&&(s=Ce(s)),o[a]=s;return o}function Ms(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[o,a,...s]=i.data;_s(o,s).then(([n,S])=>{postMessage([o,a,n],{transfer:S})}).catch(n=>{postMessage(["error",a,n])})};async function _s(i,o){switch(i){case"getKernelInfo":return[Fs(...o)];case"createPartialImageData":const s=await Ds(...o),n=[];if("data"in s&&"width"in s&&"height"in s)n.push(s.data.buffer);else for(const S of Object.entries(s))n.push(s.data.buffer);return[s,n];default:throw new Error(`Unknown function: ${i}`)}}
