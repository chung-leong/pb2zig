import{u as Ps,a as Is,b as Rs,c as ks,d as qs,e as vs,f as Es,g as xs,h as Cs,i as Ks,j as _s,k as Ds,l as Fs,m as Ms,n as Ts,p as $s,o as Ls,q as Bs,r as Gs,s as Hs}from"./index-58d89d46.js";Ps();_s();Ds();Is();Rs();Fs();Ms();Ts();$s();ks();qs();vs();Es();Ls();Hs();xs();Bs();Cs();Ks();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},S={},D={},F={},M={},T={},o={},p={},$={},L={},r={},f={},u={},B={},G={},H={},J={},N={},Q={},W={},U={},X={},Y={},w={},Z={},tt={},ut={},I={},et={},R={},b={},O={},V={},mt={},st={},k={},rt={},q={},at={},v={},E={},P={},yt={},bt={},_={},lt={},gt={},pt={},te={},Ot={},ft={},St={},ee={},jt={},se={},zt={},re={},ae={},ht={},ne={},wt={},ie={},oe={},dt={},ce={},At={},ue={},me={},Ut={},ye={},Vt={},be={},le={},Pt={},ge={},It={},Rt={},kt={},pe={},qt={},vt={},Oe={},Et={},fe={},xt={},Se={},je={},Ct={},ze={},Kt={},he={},_t={},we={},Dt={},de={},Ae={},Ft={},Mt={},Tt={},$t={},Ue={},nt={},Ve={},Pe={},Lt={},Ie={},Bt={},Re={},ke={},qe={},ve={},Ee={},xe={},Ce={},Ke={},_e={},De={},Fe={},Me={},Te={},$e={},Le={},Be={},Ge={},Gt={},He={},Je={},Ht={},Ne={},Jt={},Qe={},We={},Xe={},Ye={},Ze={},ts={},es={},Nt={},ss={},rs={},as={},ns={},is={},os={},cs={},us={},ms={},ys={},Qt={},bs={},ls={},gs={},ps={},Os={},fs={},Ss={},js={},zs={},hs={},Js=new Uint8Array,Ns=new Uint8Array,Qs=new Uint8Array([154,153,153,153,153,153,185,63]),Ws=new Uint8Array,Xs=new Uint8Array([0,0,0,0,0,0,160,64]),Ys=new Uint8Array,Zs=new Uint8Array([0,0,0,0,0,0,36,64]),tr=new Uint8Array,er=new Uint8Array([0,0,0,0,0,0,0,0]),sr=new Uint8Array,rr=new Uint8Array([0,0,0,0,0,0,0,0]),ar=new Uint8Array,nr=new Uint8Array([0,0,0,0,0,0,160,64]),ir=new Uint8Array,or=new Uint8Array([0,0,0,0,0,0,160,64]),cr=new Uint8Array,ur=new Uint8Array([0,0,0,0,0,0,112,64]),mr=new Uint8Array,yr=new Uint8Array([0,0,0,0,0,0,112,64]),br=new Uint8Array,lr=new Uint8Array,gr=new Uint8Array,pr=new Uint8Array,Or=new Uint8Array,fr=new Uint8Array,Sr=new Uint8Array([0,0,0,0,0,0,0,0]),jr=new Uint8Array,zr=new Uint8Array([0,0,0,0,0,128,118,64]),hr=new Uint8Array,wr=new Uint8Array([0,0,0,0,0,128,86,64]),dr=new Uint8Array,Ar=new Uint8Array,Ur=new Uint8Array([0]),Vr=new Uint8Array,Pr=new Uint8Array([1]),Ir=new Uint8Array,Rr=new Uint8Array([0]),kr=new Uint8Array,qr=new Uint8Array,vr=new Uint8Array,Er=new Uint8Array,xr=new Uint8Array,Cr=new Uint8Array([4]),Kr=new Uint8Array,_r=new Uint8Array,Dr=new Uint8Array([10,16,0,1]),Fr=new Uint8Array([80,105,120,101,108,32,66,101,110,100,101,114,32,83,97,109,112,108,101,115,0]),Mr=new Uint8Array([42,16,0,1]),Tr=new Uint8Array([65,100,111,98,101,32,83,121,115,116,101,109,115,0]),$r=new Uint8Array,Lr=new Uint8Array([2]),Br=new Uint8Array([73,16,0,1]),Gr=new Uint8Array([116,119,105,115,116,32,97,110,32,105,109,97,103,101,32,97,114,111,117,110,100,0]),Hr=new Uint8Array,Jr=new Uint8Array,Nr=new Uint8Array,Qr=new Uint8Array([0]),Wr=new Uint8Array([1]),ws=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Xr=new Uint8Array,Yr=new Uint8Array,Zr=new Uint8Array,ta=new Uint8Array,ea=new Uint8Array([4]),Wt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ds=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),sa=new Uint8Array,ra=new Uint8Array,aa=new Uint8Array,na=new Uint8Array,ia=new Uint8Array([4]),Xt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),oa=new Uint8Array([0,0,128,67,0,0,128,67,0,0,32,65,0,0,180,66,0,0,0,0,0,0,0,0]),ca=new Uint8Array([27,0]),ua=new Uint8Array,ma=new Uint8Array,ya=new Uint8Array,ba=new Uint8Array;Object.assign(te,{slots:{0:Ot,1:St,2:jt,3:zt}});Object.assign(Ot,{structure:s,memory:{array:Js},slots:{0:ft}});Object.assign(ft,{structure:f});Object.assign(St,{structure:r,memory:{array:Ns},slots:{0:ee}});Object.assign(ee,{structure:u,memory:{array:Qs}});Object.assign(jt,{structure:r,memory:{array:Ws},slots:{0:se}});Object.assign(se,{structure:u,memory:{array:Xs}});Object.assign(zt,{structure:r,memory:{array:Ys},slots:{0:re}});Object.assign(re,{structure:u,memory:{array:Zs}});Object.assign(ae,{slots:{0:ht,1:wt}});Object.assign(ht,{structure:r,memory:{array:tr},slots:{0:ne}});Object.assign(ne,{structure:u,memory:{array:er}});Object.assign(wt,{structure:r,memory:{array:sr},slots:{0:ie}});Object.assign(ie,{structure:u,memory:{array:rr}});Object.assign(oe,{slots:{0:dt,1:At}});Object.assign(dt,{structure:r,memory:{array:ar},slots:{0:ce}});Object.assign(ce,{structure:u,memory:{array:nr}});Object.assign(At,{structure:r,memory:{array:ir},slots:{0:ue}});Object.assign(ue,{structure:u,memory:{array:or}});Object.assign(me,{slots:{0:Ut,1:Vt}});Object.assign(Ut,{structure:r,memory:{array:cr},slots:{0:ye}});Object.assign(ye,{structure:u,memory:{array:ur}});Object.assign(Vt,{structure:r,memory:{array:mr},slots:{0:be}});Object.assign(be,{structure:u,memory:{array:yr}});Object.assign(le,{slots:{0:Pt,1:It,2:Rt,3:kt}});Object.assign(Pt,{structure:s,memory:{array:br},slots:{0:ge}});Object.assign(ge,{structure:N});Object.assign(It,{structure:G,memory:{array:lr},slots:{0:ht,1:wt}});Object.assign(Rt,{structure:H,memory:{array:gr},slots:{0:dt,1:At}});Object.assign(kt,{structure:J,memory:{array:pr},slots:{0:Ut,1:Vt}});Object.assign(pe,{slots:{0:qt,1:vt,2:Et,3:xt}});Object.assign(qt,{structure:s,memory:{array:Or},slots:{0:ft}});Object.assign(vt,{structure:r,memory:{array:fr},slots:{0:Oe}});Object.assign(Oe,{structure:u,memory:{array:Sr}});Object.assign(Et,{structure:r,memory:{array:jr},slots:{0:fe}});Object.assign(fe,{structure:u,memory:{array:zr}});Object.assign(xt,{structure:r,memory:{array:hr},slots:{0:Se}});Object.assign(Se,{structure:u,memory:{array:wr}});Object.assign(je,{slots:{0:Ct,1:Kt,2:_t,3:Dt}});Object.assign(Ct,{structure:s,memory:{array:dr},slots:{0:ze}});Object.assign(ze,{structure:U});Object.assign(Kt,{structure:o,memory:{array:Ar},slots:{0:he}});Object.assign(he,{structure:p,memory:{array:Ur}});Object.assign(_t,{structure:o,memory:{array:Vr},slots:{0:we}});Object.assign(we,{structure:p,memory:{array:Pr}});Object.assign(Dt,{structure:o,memory:{array:Ir},slots:{0:de}});Object.assign(de,{structure:p,memory:{array:Rr}});Object.assign(Ae,{slots:{0:Ft,1:Mt,2:Tt,3:$t}});Object.assign(Ft,{structure:B,memory:{array:kr},slots:{0:Ot,1:St,2:jt,3:zt}});Object.assign(Mt,{structure:Q,memory:{array:qr},slots:{0:Pt,1:It,2:Rt,3:kt}});Object.assign(Tt,{structure:W,memory:{array:vr},slots:{0:qt,1:vt,2:Et,3:xt}});Object.assign($t,{structure:X,memory:{array:Er},slots:{0:Ct,1:Kt,2:_t,3:Dt}});Object.assign(Ue,{slots:{0:nt}});Object.assign(nt,{structure:o,memory:{array:xr},slots:{0:Ve}});Object.assign(Ve,{structure:p,memory:{array:Cr}});Object.assign(Pe,{slots:{0:Lt}});Object.assign(Lt,{structure:w,memory:{array:Kr},slots:{0:nt}});Object.assign(Ie,{slots:{0:Bt}});Object.assign(Bt,{structure:w,memory:{array:_r},slots:{0:nt}});Object.assign(Re,{slots:{0:ke,1:ve,2:xe,3:Ke,4:De,5:Fe,6:Me}});Object.assign(ke,{structure:F,memory:{array:Dr},slots:{0:qe}});Object.assign(qe,{structure:D,memory:{array:Fr},reloc:16781322,const:!0});Object.assign(ve,{structure:T,memory:{array:Mr},slots:{0:Ee}});Object.assign(Ee,{structure:M,memory:{array:Tr},reloc:16781354,const:!0});Object.assign(xe,{structure:o,memory:{array:$r},slots:{0:Ce}});Object.assign(Ce,{structure:p,memory:{array:Lr}});Object.assign(Ke,{structure:L,memory:{array:Br},slots:{0:_e}});Object.assign(_e,{structure:$,memory:{array:Gr},reloc:16781385,const:!0});Object.assign(De,{structure:Y,memory:{array:Hr},slots:{0:Ft,1:Mt,2:Tt,3:$t}});Object.assign(Fe,{structure:Z,memory:{array:Jr},slots:{0:Lt}});Object.assign(Me,{structure:tt,memory:{array:Nr},slots:{0:Bt}});Object.assign(Te,{slots:{0:$e,1:Le}});Object.assign($e,{structure:O,memory:{array:Qr}});Object.assign(Le,{structure:O,memory:{array:Wr}});Object.assign(Be,{memory:{array:ws},slots:{0:Ge}});Object.assign(Ge,{structure:R,memory:{array:ws,offset:0,length:8},slots:{0:Gt}});Object.assign(Gt,{structure:et,memory:{array:Xr},reloc:0,const:!0});Object.assign(He,{slots:{0:Je,1:Ne,2:Qe}});Object.assign(Je,{structure:s,memory:{array:Yr},slots:{0:Ht}});Object.assign(Ht,{structure:I});Object.assign(Ne,{structure:s,memory:{array:Zr},slots:{0:Jt}});Object.assign(Jt,{structure:mt});Object.assign(Qe,{structure:o,memory:{array:ta},slots:{0:We}});Object.assign(We,{structure:p,memory:{array:ea}});Object.assign(Xe,{memory:{array:Wt},slots:{0:Ye}});Object.assign(Ye,{structure:st,memory:{array:Wt},slots:{0:Ze}});Object.assign(Ze,{structure:R,memory:{array:Wt,offset:0,length:8},slots:{0:Gt}});Object.assign(ts,{memory:{array:ds},slots:{0:es}});Object.assign(es,{structure:q,memory:{array:ds,offset:0,length:8},slots:{0:Nt}});Object.assign(Nt,{structure:rt,memory:{array:sa},reloc:0});Object.assign(ss,{slots:{0:rs,1:as,2:ns}});Object.assign(rs,{structure:s,memory:{array:ra},slots:{0:Ht}});Object.assign(as,{structure:s,memory:{array:aa},slots:{0:Jt}});Object.assign(ns,{structure:o,memory:{array:na},slots:{0:is}});Object.assign(is,{structure:p,memory:{array:ia}});Object.assign(os,{memory:{array:Xt},slots:{0:cs}});Object.assign(cs,{structure:at,memory:{array:Xt},slots:{0:us}});Object.assign(us,{structure:q,memory:{array:Xt,offset:0,length:8},slots:{0:Nt}});Object.assign(ms,{memory:{array:oa}});Object.assign(ys,{slots:{0:Qt}});Object.assign(Qt,{structure:P,memory:{array:ca}});Object.assign(bs,{slots:{0:Qt}});Object.assign(ls,{slots:{0:gs,1:Os,2:Ss,3:zs}});Object.assign(gs,{structure:s,memory:{array:ua},slots:{0:ps}});Object.assign(ps,{structure:ut});Object.assign(Os,{structure:s,memory:{array:ma},slots:{0:fs}});Object.assign(fs,{structure:k});Object.assign(Ss,{structure:s,memory:{array:ya},slots:{0:js}});Object.assign(js,{structure:v});Object.assign(zs,{structure:s,memory:{array:ba},slots:{0:hs}});Object.assign(hs,{structure:E});const la={argStruct:bt,thunkId:2,name:"createOutput"},ga={argStruct:gt,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(S,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(D,{...e,type:1,name:"[20:0]u8",length:20,byteSize:21,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(F,{...e,type:13,name:"*const [20:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:D}],methods:[]}});Object.assign(M,{...e,type:1,name:"[13:0]u8",length:13,byteSize:14,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(T,{...e,type:13,name:"*const [13:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(o,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:o}],methods:[]}});Object.assign(p,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign($,{...e,type:1,name:"[21:0]u8",length:21,byteSize:22,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(L,{...e,type:13,name:"*const [21:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[]}});Object.assign(r,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(f,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:f}],methods:[]}});Object.assign(u,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:u}],methods:[]}});Object.assign(B,{...e,type:2,name:"Struct3251071098",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:r},{...t,type:9,slot:2,name:"maxValue",structure:r},{...t,type:9,slot:3,name:"defaultValue",structure:r}],methods:[],template:te}});Object.assign(G,{...e,type:2,name:"Struct738220547",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:r},{...t,type:9,slot:1,name:"1",structure:r}],methods:[],template:ae}});Object.assign(H,{...e,type:2,name:"Struct3853790599",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:r},{...t,type:9,slot:1,name:"1",structure:r}],methods:[],template:oe}});Object.assign(J,{...e,type:2,name:"Struct1632360224",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:r},{...t,type:9,slot:1,name:"1",structure:r}],methods:[],template:me}});Object.assign(N,{...e,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:f}],methods:[]}});Object.assign(Q,{...e,type:2,name:"Struct2761480646",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:G},{...t,type:9,slot:2,name:"maxValue",structure:H},{...t,type:9,slot:3,name:"defaultValue",structure:J}],methods:[],template:le}});Object.assign(W,{...e,type:2,name:"Struct2033008198",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:r},{...t,type:9,slot:2,name:"maxValue",structure:r},{...t,type:9,slot:3,name:"defaultValue",structure:r}],methods:[],template:pe}});Object.assign(U,{...e,name:"i32",byteSize:4,align:4,instance:{members:[{...t,type:2,bitOffset:0,bitSize:32,byteSize:4,structure:U}],methods:[]}});Object.assign(X,{...e,type:2,name:"Struct152411989",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:o},{...t,type:9,slot:2,name:"maxValue",structure:o},{...t,type:9,slot:3,name:"defaultValue",structure:o}],methods:[],template:je}});Object.assign(Y,{...e,type:2,name:"Struct1485110009",align:1,instance:{members:[{...t,type:9,slot:0,name:"radius",structure:B},{...t,type:9,slot:1,name:"center",structure:Q},{...t,type:9,slot:2,name:"twirlAngle",structure:W},{...t,type:9,slot:3,name:"gaussOrSinc",structure:X}],methods:[],template:Ae}});Object.assign(w,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:o}],methods:[],template:Ue}});Object.assign(Z,{...e,type:2,name:"Struct558158291",align:1,instance:{members:[{...t,type:9,slot:0,name:"oImage",structure:w}],methods:[],template:Pe}});Object.assign(tt,{...e,type:2,name:"Struct1549434608",align:1,instance:{members:[{...t,type:9,slot:0,name:"outputColor",structure:w}],methods:[],template:Ie}});Object.assign(ut,{...e,type:2,name:"twirl.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:F},{...t,type:9,slot:1,name:"vendor",structure:T},{...t,type:9,slot:2,name:"version",structure:o},{...t,type:9,slot:3,name:"description",structure:L},{...t,type:9,slot:4,name:"parameters",structure:Y},{...t,type:9,slot:5,name:"inputImages",structure:Z},{...t,type:9,slot:6,name:"outputImages",structure:tt}],methods:[],template:Re}});Object.assign(I,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(et,{...e,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(R,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:et}],methods:[]}});Object.assign(b,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[]}});Object.assign(O,{...e,type:11,name:"twirl.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:O},{...t,type:9,slot:1,name:"display-p3",structure:O}],methods:[],template:Te}});Object.assign(V,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(mt,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:f}],methods:[]}});Object.assign(st,{...e,type:2,name:"twirl.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:R},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:b},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:b},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:Be},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:o}],methods:[],template:He}});Object.assign(k,{...e,type:2,name:"twirl.KernelInput(u8,twirl.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"oImage",structure:st}],methods:[],template:Xe}});Object.assign(rt,{...e,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(q,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:rt}],methods:[]}});Object.assign(at,{...e,type:2,name:"twirl.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:q},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:b},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:b},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:ts},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:o}],methods:[],template:ss}});Object.assign(v,{...e,type:2,name:"twirl.KernelOutput(u8,twirl.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"outputColor",structure:at}],methods:[],template:os}});Object.assign(E,{...e,type:2,name:"twirl.KernelParameters(twirl.kernel)",byteSize:24,align:8,instance:{members:[{...t,type:4,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"radius",structure:f},{...t,type:7,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"center",structure:N},{...t,type:4,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"twirlAngle",structure:f},{...t,type:2,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"gaussOrSinc",structure:U}],methods:[],template:ms}});Object.assign(P,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(twirl.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:P}],methods:[],template:ys}});Object.assign(yt,{...e,type:9,name:"ErrorSet2554407169!twirl.KernelOutput(u8,twirl.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:P}],methods:[]}});Object.assign(bt,{...e,type:5,name:"createOutput",byteSize:88,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:192,bitSize:32,byteSize:4,slot:3,name:"0",structure:b},{...t,type:3,isRequired:!0,bitOffset:224,bitSize:32,byteSize:4,slot:4,name:"1",structure:b},{...t,type:7,isRequired:!0,bitOffset:256,bitSize:192,byteSize:24,slot:0,name:"2",structure:k},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:192,byteSize:24,slot:1,name:"3",structure:E},{...t,type:7,isRequired:!0,bitOffset:448,bitSize:224,byteSize:28,slot:2,name:"retval",structure:yt}],methods:[]}});Object.assign(_,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(twirl.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:_}],methods:[],template:bs}});Object.assign(lt,{...e,type:9,name:"ErrorSet3197891492!twirl.KernelOutput(u8,twirl.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:_}],methods:[]}});Object.assign(gt,{...e,type:5,name:"createPartialOutput",byteSize:96,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:192,bitSize:32,byteSize:4,slot:3,name:"0",structure:b},{...t,type:3,isRequired:!0,bitOffset:224,bitSize:32,byteSize:4,slot:4,name:"1",structure:b},{...t,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:5,name:"2",structure:b},{...t,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:6,name:"3",structure:b},{...t,type:7,isRequired:!0,bitOffset:320,bitSize:192,byteSize:24,slot:0,name:"4",structure:k},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:192,byteSize:24,slot:1,name:"5",structure:E},{...t,type:7,isRequired:!0,bitOffset:512,bitSize:224,byteSize:28,slot:2,name:"retval",structure:lt}],methods:[]}});Object.assign(pt,{...e,type:2,name:"twirl",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:s},{...t,type:9,slot:1,name:"Input",structure:s},{...t,type:9,slot:2,name:"Output",structure:s},{...t,type:9,slot:3,name:"Parameters",structure:s}],methods:[la,ga],template:ls}});const pa=[s,S,D,F,M,T,o,p,$,L,r,f,u,B,G,H,J,N,Q,W,U,X,Y,w,Z,tt,ut,I,et,R,b,O,V,mt,st,k,rt,q,at,v,E,P,yt,bt,_,lt,gt,pt],Oa=pt,fa={runtimeSafety:!1,littleEndian:!0},it=Gs();it.getControlObject();it.recreateStructures(pa,fa);const Sa=(async()=>{const c=new URL("twirl-8f860340.wasm",import.meta.url).href;return fetch(c)})();it.loadModule(Sa);it.linkVariables(!0);const{constructor:ja}=Oa,{createPartialOutput:za,Input:ha,kernel:ct}=ja;function wa(c,m,n,a,i={},j={}){const z=[];for(const[l]of ct.inputImages)z.push(l);const d=[];for(const[l]of ct.outputImages)d.push(l);if(Array.isArray(i)){const l=i;i={};for(const[g,h]of z.entries())i[h]=l[g]}const y=new ha(void 0),x=[];let A;for(const l of z){let g=i[l];if(g||(z.length===1&&["data","width","height"].every(h=>!!i[h])?g=i:x.push(l)),y[l]=g,A){if(g.colorSpace!==A)throw new Error(`Input images must all use the same color space: ${A}`)}else A=g.colorSpace}if(x.length>0)throw new Error(`Missing input image${x.length>1?"s":""}: ${x.join(", ")}`);const ot=za(c,m,n,a,y,j),Yt=l=>{const g={};for(const h of d){const{data:{typedArray:C},width:Zt,height:Us}=l[h];let K;if(typeof ImageData=="function"){const Vs=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);K=new ImageData(Vs,Zt,a,{colorSpace:A})}else K={data:C,width:Zt,height:Us};if(d.length===1)return K;g[h]=K}return g};return ot[Symbol.toStringTag]==="Promise"?ot.then(Yt):Yt(ot)}function da(){const c={};for(let[m,n]of ct){if(m==="parameters"){const a={};for(const[i,j]of n){const z=a[i]={};for(let[d,y]of j)typeof y=="object"?"string"in y?y=y.string:y=As(y):typeof y=="function"&&(y=Aa(y.name)),z[d]=y}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());c[m]=n}return c}function As(c){const m=[];for(let[n,a]of c)typeof a=="object"&&(a=As(a)),m[n]=a;return m}function Aa(c){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[c]}onmessage=c=>{const[m,n,...a]=c.data;Ua(m,a).then(([i,j])=>{postMessage([m,n,i],{transfer:j})}).catch(i=>{postMessage(["error",n,i])})};async function Ua(c,m){switch(c){case"getKernelInfo":return[da(...m)];case"createPartialImageData":const a=await wa(...m),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const j of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${c}`)}}
