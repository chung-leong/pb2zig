import{u as Ae,a as Ue,b as Ve,d as Pe,c as _e,e as Ie,f as ke,g as xe,h as ve,i as Ce,j as Ee,k as Ke,l as Fe,m as De,n as Te,o as Me,p as $e,q as Be,r as Le}from"./index-778418ea.js";Ae();Ue();Ve();Pe();_e();Ie();ke();xe();ve();Ce();Ee();Ke();Fe();De();Te();Me();$e();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},h={},L={},G={},x={},H={},J={},v={},l={},b={},N={},Q={},C={},f={},y={},o={},W={},E={},X={},K={},Y={},F={},D={},j={},z={},Z={},T={},ee={},M={},ue={},O={},te={},se={},u={},re={},q={},w={},ae={},$={},A={},ie={},ne={},B={},U={},V={},le={},ce={},ye={},pe={},be={},fe={},de={};Object.assign(h,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:h}],methods:[],template:null},slot:5});Object.assign(L,{...t,type:1,name:"[17:0]u8",length:17,byteSize:18,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:h}],methods:[],template:null},slot:4});Object.assign(G,{...t,type:11,name:"*const [17:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[],template:null},slot:3});Object.assign(x,{...t,type:11,name:"**const [17:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:G}],methods:[],template:null},slot:2});Object.assign(H,{...t,type:1,name:"[9:0]u8",length:9,byteSize:10,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:h}],methods:[],template:null},slot:8});Object.assign(J,{...t,type:11,name:"*const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[],template:null},slot:7});Object.assign(v,{...t,type:11,name:"**const [9:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:J}],methods:[],template:null},slot:6});Object.assign(l,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:l}],methods:[],template:null},slot:10});Object.assign(b,{...t,type:11,name:"*i32",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:l}],methods:[],template:null},slot:9});Object.assign(N,{...t,type:1,name:"[7:0]u8",length:7,byteSize:8,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:h}],methods:[],template:null},slot:13});Object.assign(Q,{...t,type:11,name:"*const [7:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:N}],methods:[],template:null},slot:12});Object.assign(C,{...t,type:11,name:"**const [7:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[],template:null},slot:11});Object.assign(f,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:f}],methods:[],template:null},slot:33});Object.assign(y,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:y}],methods:[],template:null},slot:48});Object.assign(o,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:y}],methods:[],template:null},slot:47});const Ge=new Uint8Array([]),He=new Uint8Array([160,2,16,0]),Oe=new Uint8Array([0,0,0,0,0,0,0,0]),Je=new Uint8Array([144,2,16,0]),Re=new Uint8Array([0,0,0,0,0,0,240,63]),Ne=new Uint8Array([160,2,16,0]);Object.assign(W,{...t,type:2,name:"struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:f},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:o},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:o},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:o}],methods:[],template:{memory:{array:Ge},slots:{0:{structure:o,memory:{array:He},slots:{0:{structure:y,memory:{array:Oe},address:1049248}}},1:{structure:o,memory:{array:Je},slots:{0:{structure:y,memory:{array:Re},address:1049232}}},2:{structure:o,memory:{array:Ne},slots:{0:{structure:y,memory:{array:Oe},address:1049248}}}}}},slot:39});Object.assign(E,{...t,type:11,name:"*const struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:38});const Qe=new Uint8Array([]),We=new Uint8Array([152,2,16,0]),Xe=new Uint8Array([154,153,153,153,153,153,201,63]),Ye=new Uint8Array([144,2,16,0]),Ze=new Uint8Array([136,2,16,0]),et=new Uint8Array([0,0,0,0,0,0,224,63]);Object.assign(X,{...t,type:2,name:"struct{comptime type: type = f32, comptime minValue: comptime_float = 0.2, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0.5}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:f},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:o},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:o},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:o}],methods:[],template:{memory:{array:Qe},slots:{0:{structure:o,memory:{array:We},slots:{0:{structure:y,memory:{array:Xe},address:1049240}}},1:{structure:o,memory:{array:Ye},slots:{0:{structure:y,memory:{array:Re},address:1049232}}},2:{structure:o,memory:{array:Ze},slots:{0:{structure:y,memory:{array:et},address:1049224}}}}}},slot:41});Object.assign(K,{...t,type:11,name:"*const struct{comptime type: type = f32, comptime minValue: comptime_float = 0.2, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0.5}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:40});const tt=new Uint8Array([]),st=new Uint8Array([170,170,170,170]),d=new Uint8Array([]),rt=new Uint8Array([170,170,170,170]);Object.assign(Y,{...t,type:2,name:"struct{comptime n0: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0} = .{.type = f32, .minValue = 0, .maxValue = 1, .defaultValue = 0}, comptime n1: struct{comptime type: type = f32, comptime minValue: comptime_float = 0.2, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0.5} = .{.type = f32, .minValue = 0.2, .maxValue = 1, .defaultValue = 0.5}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"n0",structure:E},{...e,type:8,isRequired:!1,slot:1,name:"n1",structure:K}],methods:[],template:{memory:{array:tt},slots:{0:{structure:E,memory:{array:st},slots:{0:{structure:W,memory:{array:d},address:-1431655766}}},1:{structure:K,memory:{array:rt},slots:{0:{structure:X,memory:{array:d},address:-1431655766}}}}}},slot:15});Object.assign(F,{...t,type:11,name:"*struct{comptime n0: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0} = .{.type = f32, .minValue = 0, .maxValue = 1, .defaultValue = 0}, comptime n1: struct{comptime type: type = f32, comptime minValue: comptime_float = 0.2, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0.5} = .{.type = f32, .minValue = 0.2, .maxValue = 1, .defaultValue = 0.5}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[],template:null},slot:14});Object.assign(D,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:l}],methods:[],template:null},slot:49});const at=new Uint8Array([]),it=new Uint8Array([128,2,16,0]),nt=new Uint8Array([3,0,0,0]);Object.assign(j,{...t,type:2,name:"struct{comptime channels: comptime_int = 3}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:D}],methods:[],template:{memory:{array:at},slots:{0:{structure:D,memory:{array:it},slots:{0:{structure:l,memory:{array:nt},address:1049216}}}}}},slot:43});Object.assign(z,{...t,type:11,name:"*const struct{comptime channels: comptime_int = 3}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:j}],methods:[],template:null},slot:42});const mt=new Uint8Array([]),ot=new Uint8Array([170,170,170,170]);Object.assign(Z,{...t,type:2,name:"struct{comptime src: struct{comptime channels: comptime_int = 3} = .{.channels = 3}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:z}],methods:[],template:{memory:{array:mt},slots:{0:{structure:z,memory:{array:ot},slots:{0:{structure:j,memory:{array:d},address:-1431655766}}}}}},slot:17});Object.assign(T,{...t,type:11,name:"*struct{comptime src: struct{comptime channels: comptime_int = 3} = .{.channels = 3}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:16});const ut=new Uint8Array([]),lt=new Uint8Array([170,170,170,170]);Object.assign(ee,{...t,type:2,name:"struct{comptime dst: struct{comptime channels: comptime_int = 3} = .{.channels = 3}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:z}],methods:[],template:{memory:{array:ut},slots:{0:{structure:z,memory:{array:lt},slots:{0:{structure:j,memory:{array:d},address:-1431655766}}}}}},slot:19});Object.assign(M,{...t,type:11,name:"*struct{comptime dst: struct{comptime channels: comptime_int = 3} = .{.channels = 3}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:18});const ct=new Uint8Array([]),yt=new Uint8Array([]),pt=new Uint8Array([12,250,15,0]),bt=new Uint8Array([32,16,16,0]),ft=new Uint8Array([97,114,46,115,104,97,100,101,114,46,111,117,116,108,105,110,101,0]),dt=new Uint8Array([76,250,15,0]),ht=new Uint8Array([22,16,16,0]),St=new Uint8Array([65,108,97,110,32,82,111,115,115,0]),gt=new Uint8Array([140,250,15,0]),zt=new Uint8Array([1,0,0,0]),Ot=new Uint8Array([228,250,15,0]),Rt=new Uint8Array([14,16,16,0]),qt=new Uint8Array([79,117,116,108,105,110,101,0]),wt=new Uint8Array([170,170,170,170]),jt=new Uint8Array([170,170,170,170]),At=new Uint8Array([170,170,170,170]);Object.assign(ue,{...t,type:2,name:"outline2.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:ct}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:x},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:v},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:b},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:C},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:F},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:T},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:M}],methods:[],template:{memory:{array:yt},slots:{0:{structure:x,memory:{array:pt},slots:{0:{structure:G,memory:{array:bt},slots:{0:{structure:L,memory:{array:ft},address:1052704}}}}},1:{structure:v,memory:{array:dt},slots:{0:{structure:J,memory:{array:ht},slots:{0:{structure:H,memory:{array:St},address:1052694}}}}},2:{structure:b,memory:{array:gt},slots:{0:{structure:l,memory:{array:zt}}}},3:{structure:C,memory:{array:Ot},slots:{0:{structure:Q,memory:{array:Rt},slots:{0:{structure:N,memory:{array:qt},address:1052686}}}}},4:{structure:F,memory:{array:wt},slots:{0:{structure:Y,memory:{array:d},address:-1431655766}}},5:{structure:T,memory:{array:jt},slots:{0:{structure:Z,memory:{array:d},address:-1431655766}}},6:{structure:M,memory:{array:At},slots:{0:{structure:ee,memory:{array:d},address:-1431655766}}}}}},slot:1});Object.assign(O,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:h}],methods:[],template:null},slot:24});Object.assign(te,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:23});Object.assign(se,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:te}],methods:[],template:null},slot:22});Object.assign(u,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:u}],methods:[],template:null},slot:25});const Ut=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(re,{...t,type:9,name:"outline2.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:l},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:l}],methods:[],template:{memory:{array:Ut}}},slot:26});Object.assign(q,{...t,name:"bool",length:1,byteSize:1,align:0,instance:{members:[{...e,type:1,isRequired:!1,bitOffset:0,bitSize:1,byteSize:1,structure:q}],methods:[],template:null},slot:27});Object.assign(w,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:w}],methods:[],template:null},slot:28});Object.assign(ae,{...t,type:13,name:"@Vector(3, f32)",length:3,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:f}],methods:[],template:null},slot:44});const Vt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Pt=new Uint8Array([]),_t=new Uint8Array([104,253,15,0]),It=new Uint8Array([3,0,0,0]);Object.assign($,{...t,type:2,name:"outline2.Image(u8,3,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:se},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:re},{...e,type:1,isRequired:!1,bitOffset:168,bitSize:1,byteSize:1,slot:4,name:"premultiplied",structure:q},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:5,name:"offset",structure:w}],methods:[],template:{memory:{array:Vt}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:ae},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:b}],methods:[],template:{memory:{array:Pt},slots:{0:{structure:b,memory:{array:_t},slots:{0:{structure:l,memory:{array:It}}}}}}},slot:21});const kt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),xt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),vt=new Uint8Array([0,0,0,0,0,0,0,0]),he=new Uint8Array([]);Object.assign(A,{...t,type:2,name:"outline2.KernelInput(u8,outline2.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:$}],methods:[],template:{memory:{array:kt},slots:{0:{structure:$,memory:{array:xt},slots:{0:{structure:se,memory:{array:vt},slots:{0:{structure:te,memory:{array:he}}}}}}}}},slot:20});Object.assign(ie,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:23});Object.assign(ne,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:ie}],methods:[],template:null},slot:31});const Ct=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Et=new Uint8Array([]),Kt=new Uint8Array([104,253,15,0]),Ft=new Uint8Array([3,0,0,0]);Object.assign(B,{...t,type:2,name:"outline2.Image(u8,3,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:ne},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:re},{...e,type:1,isRequired:!1,bitOffset:168,bitSize:1,byteSize:1,slot:4,name:"premultiplied",structure:q},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:5,name:"offset",structure:w}],methods:[],template:{memory:{array:Ct}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:ae},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:b}],methods:[],template:{memory:{array:Et},slots:{0:{structure:b,memory:{array:Kt},slots:{0:{structure:l,memory:{array:Ft}}}}}}},slot:30});const Dt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Tt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Mt=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(U,{...t,type:2,name:"outline2.KernelOutput(u8,outline2.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:B}],methods:[],template:{memory:{array:Dt},slots:{0:{structure:B,memory:{array:Tt},slots:{0:{structure:ne,memory:{array:Mt},slots:{0:{structure:ie,memory:{array:he}}}}}}}}},slot:29});const $t=new Uint8Array([0,0,0,0,0,0,0,63]);Object.assign(V,{...t,type:2,name:"outline2.KernelParameters(outline2.kernel)",length:1,byteSize:8,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"n0",structure:f},{...e,type:4,isRequired:!1,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"n1",structure:f}],methods:[],template:{memory:{array:$t}}},slot:32});Object.assign(le,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(outline2.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:45});Object.assign(ce,{...t,type:7,name:"@typeInfo(@typeInfo(@TypeOf(outline2.createOutput)).Fn.return_type.?).ErrorUnion.error_set!outline2.KernelOutput(u8,outline2.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:U},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:le}],methods:[],template:null},slot:36});Object.assign(ye,{...t,type:3,name:"createOutput",length:1,byteSize:68,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"0",structure:u},{...e,type:3,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"1",structure:u},{...e,type:6,bitOffset:64,bitSize:192,byteSize:24,slot:2,name:"2",structure:A},{...e,type:6,bitOffset:256,bitSize:64,byteSize:8,slot:3,name:"3",structure:V},{...e,type:6,bitOffset:320,bitSize:224,byteSize:28,slot:4,name:"retval",structure:ce}],methods:[],template:null},slot:34});Object.assign(pe,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(outline2.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:46});Object.assign(be,{...t,type:7,name:"@typeInfo(@typeInfo(@TypeOf(outline2.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set!outline2.KernelOutput(u8,outline2.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:U},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:pe}],methods:[],template:null},slot:37});Object.assign(fe,{...t,type:3,name:"createPartialOutput",length:1,byteSize:76,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"0",structure:u},{...e,type:3,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"1",structure:u},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:2,name:"2",structure:u},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:3,name:"3",structure:u},{...e,type:6,bitOffset:128,bitSize:192,byteSize:24,slot:4,name:"4",structure:A},{...e,type:6,bitOffset:320,bitSize:64,byteSize:8,slot:5,name:"5",structure:V},{...e,type:6,bitOffset:384,bitSize:224,byteSize:28,slot:6,name:"retval",structure:be}],methods:[],template:null},slot:35});const Bt={argStruct:ye,thunk:6,name:"createOutput"},Lt={argStruct:fe,thunk:2,name:"createPartialOutput"};Object.assign(de,{...t,type:2,name:"outline2",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:he}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:ue},{...e,type:7,isRequired:!1,name:"Input",structure:A},{...e,type:7,isRequired:!1,name:"Output",structure:U},{...e,type:7,isRequired:!1,name:"Parameters",structure:V}],methods:[Bt,Lt],template:null},slot:0});const Gt=[h,L,G,x,H,J,v,l,b,N,Q,C,f,y,o,W,E,X,K,Y,F,D,j,z,Z,T,ee,M,ue,O,te,se,u,re,q,w,ae,$,A,ie,ne,B,U,V,le,ce,ye,pe,be,fe,de],Ht=Be(Gt),Jt=de.constructor,Nt=(async()=>{const i=new URL("outline2-cb2c971a.wasm",import.meta.url).href;return fetch(i)})();Le(Nt,{...Ht,writeBack:!0});const{createOutput:ss,createPartialOutput:Qt,kernel:oe,Input:Wt,Output:rs,Parameters:as}=Jt;function Xt(i,m,r,s,a={},S={}){if(Array.isArray(a)){const p=a;a={};for(const[c,g]of Object.keys(oe.inputImages).entries())a[g]=p[c]}const P=new Wt(void 0),_=Object.keys(oe.inputImages),n=[];let R;for(const p of _){let c=a[p];if(c||(_.length===1&&["data","width","height"].every(g=>!!a[g])?c=a:n.push(p)),P[p]=c,R){if(c.colorSpace!==R)throw new Error(`Input images must all use the same color space: ${R}`)}else R=c.colorSpace}if(n.length>0)throw new Error(`Missing input image${n.length>1?"s":""}: ${n.join(", ")}`);const me=Qt(i,m,r,s,P,S),Se=p=>{const c=Object.keys(p),g={};for(const ge of c){const{data:{typedArray:I},width:ze,height:we}=p[ge];let k;if(typeof ImageData=="function"){const je=new Uint8ClampedArray(I.buffer,I.byteOffset,I.byteLength);k=new ImageData(je,ze,s,{colorSpace:R})}else k={data:I,width:ze,height:we};if(c.length===1)return k;g[ge]=k}return g};return me[Symbol.toStringTag]==="Promise"?me.then(Se):Se(me)}function Yt(){const i={};for(let[m,r]of Object.entries(oe)){if(m==="parameters"){const s={};for(const[a,S]of Object.entries(r)){const P=s[a]={};for(let[_,n]of Object.entries(S))typeof n=="object"?"string"in n?n=n.string:n=qe(n):typeof n=="function"&&(n=Zt(n.name)),P[_]=n}r=s}else typeof r=="object"&&("string"in r?r=r.string:r=r.valueOf());i[m]=r}return i}function qe(i){const m=[];for(let[r,s]of Object.entries(i))typeof s=="object"&&(s=qe(s)),m[r]=s;return m}function Zt(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[m,r,...s]=i.data;es(m,s).then(([a,S])=>{postMessage([m,r,a],{transfer:S})}).catch(a=>{postMessage(["error",r,a])})};async function es(i,m){switch(i){case"getKernelInfo":return[Yt(...m)];case"createPartialImageData":const s=await Xt(...m),a=[];if("data"in s&&"width"in s&&"height"in s)a.push(s.data.buffer);else for(const S of Object.entries(s))a.push(s.data.buffer);return[s,a];default:throw new Error(`Unknown function: ${i}`)}}
