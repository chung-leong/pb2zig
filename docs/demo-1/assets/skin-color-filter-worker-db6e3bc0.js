import{u as cs,a as us,b as ms,c as ys,d as bs,e as ls,f as gs,g as ps,h as fs,i as Os,j as Ss,k as js,l as zs,m as hs,n as ds,p as ws,o as As,q as Us,r as ks,s as Vs}from"./index-58d89d46.js";cs();Ss();js();us();ms();zs();hs();ds();ws();ys();bs();ls();gs();As();Vs();ps();Us();fs();Os();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},O={},_={},D={},F={},T={},l={},S={},$={},L={},r={},p={},c={},B={},G={},H={},J={},N={},d={},Q={},W={},nt={},V={},X={},P={},y={},f={},U={},it={},Y={},I={},Z={},R={},tt={},q={},x={},k={},ot={},ct={},K={},ut={},mt={},yt={},Lt={},bt={},C={},lt={},Bt={},gt={},Gt={},pt={},Ht={},Jt={},ft={},Ot={},Nt={},St={},Qt={},jt={},Wt={},Xt={},zt={},ht={},Yt={},dt={},Zt={},wt={},te={},ee={},At={},Ut={},se={},kt={},re={},Vt={},ae={},ne={},Pt={},It={},Rt={},qt={},ie={},et={},oe={},ce={},xt={},ue={},Ct={},me={},ye={},be={},le={},ge={},pe={},fe={},Oe={},Se={},je={},ze={},he={},de={},we={},Ae={},Ue={},ke={},vt={},Ve={},Pe={},Et={},Ie={},Mt={},Re={},qe={},xe={},Ce={},ve={},Ee={},Me={},Kt={},Ke={},_e={},De={},Fe={},Te={},$e={},Le={},Be={},Ge={},He={},_t={},Je={},Ne={},Qe={},We={},Xe={},Ye={},Ze={},ts={},es={},ss={},Ps=new Uint8Array,Is=new Uint8Array,Rs=new Uint8Array([0,0,0,0,0,0,0,0]),qs=new Uint8Array,xs=new Uint8Array([0,0,0,0,0,0,240,63]),Cs=new Uint8Array,vs=new Uint8Array([90,90,90,90,90,90,218,63]),Es=new Uint8Array,Ms=new Uint8Array,Ks=new Uint8Array([0,0,0,0,0,0,0,0]),_s=new Uint8Array,Ds=new Uint8Array([0,0,0,0,0,0,240,63]),Fs=new Uint8Array,Ts=new Uint8Array([241,240,240,240,240,240,224,63]),$s=new Uint8Array,Ls=new Uint8Array,Bs=new Uint8Array([0,0,0,0,0,0,0,0]),Gs=new Uint8Array,Hs=new Uint8Array([0,0,0,0,0,0,240,63]),Js=new Uint8Array,Ns=new Uint8Array([146,145,145,145,145,145,225,63]),Qs=new Uint8Array,Ws=new Uint8Array,Xs=new Uint8Array([0,0,0,0,0,0,0,0]),Ys=new Uint8Array,Zs=new Uint8Array([0,0,0,0,0,0,240,63]),tr=new Uint8Array,er=new Uint8Array([181,180,180,180,180,180,228,63]),sr=new Uint8Array,rr=new Uint8Array,ar=new Uint8Array,nr=new Uint8Array,ir=new Uint8Array,or=new Uint8Array([4]),cr=new Uint8Array,ur=new Uint8Array,mr=new Uint8Array([2,5,0,1]),yr=new Uint8Array([109,101,46,99,111,115,109,111,100,114,111,46,102,105,108,116,101,114,115,0]),br=new Uint8Array([33,5,0,1]),lr=new Uint8Array([83,116,101,118,101,32,83,104,105,112,109,97,110,0]),gr=new Uint8Array,pr=new Uint8Array([1]),fr=new Uint8Array([64,5,0,1]),Or=new Uint8Array([83,107,105,110,32,67,111,108,111,114,32,102,105,108,116,101,114,0]),Sr=new Uint8Array,jr=new Uint8Array,zr=new Uint8Array,hr=new Uint8Array([0]),dr=new Uint8Array([1]),rs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),wr=new Uint8Array,Ar=new Uint8Array,Ur=new Uint8Array,kr=new Uint8Array,Vr=new Uint8Array([4]),Dt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),as=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Pr=new Uint8Array,Ir=new Uint8Array,Rr=new Uint8Array,qr=new Uint8Array,xr=new Uint8Array([4]),Ft=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Cr=new Uint8Array([211,210,210,62,136,135,7,63,141,140,12,63,166,165,37,63]),vr=new Uint8Array([27,0]),Er=new Uint8Array,Mr=new Uint8Array,Kr=new Uint8Array,_r=new Uint8Array;Object.assign(Lt,{slots:{0:bt,1:lt,2:gt,3:pt}});Object.assign(bt,{structure:s,memory:{array:Ps},slots:{0:C}});Object.assign(C,{structure:p});Object.assign(lt,{structure:r,memory:{array:Is},slots:{0:Bt}});Object.assign(Bt,{structure:c,memory:{array:Rs}});Object.assign(gt,{structure:r,memory:{array:qs},slots:{0:Gt}});Object.assign(Gt,{structure:c,memory:{array:xs}});Object.assign(pt,{structure:r,memory:{array:Cs},slots:{0:Ht}});Object.assign(Ht,{structure:c,memory:{array:vs}});Object.assign(Jt,{slots:{0:ft,1:Ot,2:St,3:jt}});Object.assign(ft,{structure:s,memory:{array:Es},slots:{0:C}});Object.assign(Ot,{structure:r,memory:{array:Ms},slots:{0:Nt}});Object.assign(Nt,{structure:c,memory:{array:Ks}});Object.assign(St,{structure:r,memory:{array:_s},slots:{0:Qt}});Object.assign(Qt,{structure:c,memory:{array:Ds}});Object.assign(jt,{structure:r,memory:{array:Fs},slots:{0:Wt}});Object.assign(Wt,{structure:c,memory:{array:Ts}});Object.assign(Xt,{slots:{0:zt,1:ht,2:dt,3:wt}});Object.assign(zt,{structure:s,memory:{array:$s},slots:{0:C}});Object.assign(ht,{structure:r,memory:{array:Ls},slots:{0:Yt}});Object.assign(Yt,{structure:c,memory:{array:Bs}});Object.assign(dt,{structure:r,memory:{array:Gs},slots:{0:Zt}});Object.assign(Zt,{structure:c,memory:{array:Hs}});Object.assign(wt,{structure:r,memory:{array:Js},slots:{0:te}});Object.assign(te,{structure:c,memory:{array:Ns}});Object.assign(ee,{slots:{0:At,1:Ut,2:kt,3:Vt}});Object.assign(At,{structure:s,memory:{array:Qs},slots:{0:C}});Object.assign(Ut,{structure:r,memory:{array:Ws},slots:{0:se}});Object.assign(se,{structure:c,memory:{array:Xs}});Object.assign(kt,{structure:r,memory:{array:Ys},slots:{0:re}});Object.assign(re,{structure:c,memory:{array:Zs}});Object.assign(Vt,{structure:r,memory:{array:tr},slots:{0:ae}});Object.assign(ae,{structure:c,memory:{array:er}});Object.assign(ne,{slots:{0:Pt,1:It,2:Rt,3:qt}});Object.assign(Pt,{structure:B,memory:{array:sr},slots:{0:bt,1:lt,2:gt,3:pt}});Object.assign(It,{structure:G,memory:{array:rr},slots:{0:ft,1:Ot,2:St,3:jt}});Object.assign(Rt,{structure:H,memory:{array:ar},slots:{0:zt,1:ht,2:dt,3:wt}});Object.assign(qt,{structure:J,memory:{array:nr},slots:{0:At,1:Ut,2:kt,3:Vt}});Object.assign(ie,{slots:{0:et}});Object.assign(et,{structure:l,memory:{array:ir},slots:{0:oe}});Object.assign(oe,{structure:S,memory:{array:or}});Object.assign(ce,{slots:{0:xt}});Object.assign(xt,{structure:d,memory:{array:cr},slots:{0:et}});Object.assign(ue,{slots:{0:Ct}});Object.assign(Ct,{structure:d,memory:{array:ur},slots:{0:et}});Object.assign(me,{slots:{0:ye,1:le,2:pe,3:Oe,4:je,5:ze,6:he}});Object.assign(ye,{structure:D,memory:{array:mr},slots:{0:be}});Object.assign(be,{structure:_,memory:{array:yr},reloc:16778498,const:!0});Object.assign(le,{structure:T,memory:{array:br},slots:{0:ge}});Object.assign(ge,{structure:F,memory:{array:lr},reloc:16778529,const:!0});Object.assign(pe,{structure:l,memory:{array:gr},slots:{0:fe}});Object.assign(fe,{structure:S,memory:{array:pr}});Object.assign(Oe,{structure:L,memory:{array:fr},slots:{0:Se}});Object.assign(Se,{structure:$,memory:{array:Or},reloc:16778560,const:!0});Object.assign(je,{structure:N,memory:{array:Sr},slots:{0:Pt,1:It,2:Rt,3:qt}});Object.assign(ze,{structure:Q,memory:{array:jr},slots:{0:xt}});Object.assign(he,{structure:W,memory:{array:zr},slots:{0:Ct}});Object.assign(de,{slots:{0:we,1:Ae}});Object.assign(we,{structure:f,memory:{array:hr}});Object.assign(Ae,{structure:f,memory:{array:dr}});Object.assign(Ue,{memory:{array:rs},slots:{0:ke}});Object.assign(ke,{structure:P,memory:{array:rs,offset:0,length:8},slots:{0:vt}});Object.assign(vt,{structure:X,memory:{array:wr},reloc:0,const:!0});Object.assign(Ve,{slots:{0:Pe,1:Ie,2:Re}});Object.assign(Pe,{structure:s,memory:{array:Ar},slots:{0:Et}});Object.assign(Et,{structure:V});Object.assign(Ie,{structure:s,memory:{array:Ur},slots:{0:Mt}});Object.assign(Mt,{structure:it});Object.assign(Re,{structure:l,memory:{array:kr},slots:{0:qe}});Object.assign(qe,{structure:S,memory:{array:Vr}});Object.assign(xe,{memory:{array:Dt},slots:{0:Ce}});Object.assign(Ce,{structure:Y,memory:{array:Dt},slots:{0:ve}});Object.assign(ve,{structure:P,memory:{array:Dt,offset:0,length:8},slots:{0:vt}});Object.assign(Ee,{memory:{array:as},slots:{0:Me}});Object.assign(Me,{structure:R,memory:{array:as,offset:0,length:8},slots:{0:Kt}});Object.assign(Kt,{structure:Z,memory:{array:Pr},reloc:0});Object.assign(Ke,{slots:{0:_e,1:De,2:Fe}});Object.assign(_e,{structure:s,memory:{array:Ir},slots:{0:Et}});Object.assign(De,{structure:s,memory:{array:Rr},slots:{0:Mt}});Object.assign(Fe,{structure:l,memory:{array:qr},slots:{0:Te}});Object.assign(Te,{structure:S,memory:{array:xr}});Object.assign($e,{memory:{array:Ft},slots:{0:Le}});Object.assign(Le,{structure:tt,memory:{array:Ft},slots:{0:Be}});Object.assign(Be,{structure:R,memory:{array:Ft,offset:0,length:8},slots:{0:Kt}});Object.assign(Ge,{memory:{array:Cr}});Object.assign(He,{slots:{0:_t}});Object.assign(_t,{structure:k,memory:{array:vr}});Object.assign(Je,{slots:{0:_t}});Object.assign(Ne,{slots:{0:Qe,1:Xe,2:Ze,3:es}});Object.assign(Qe,{structure:s,memory:{array:Er},slots:{0:We}});Object.assign(We,{structure:nt});Object.assign(Xe,{structure:s,memory:{array:Mr},slots:{0:Ye}});Object.assign(Ye,{structure:I});Object.assign(Ze,{structure:s,memory:{array:Kr},slots:{0:ts}});Object.assign(ts,{structure:q});Object.assign(es,{structure:s,memory:{array:_r},slots:{0:ss}});Object.assign(ss,{structure:x});const Dr={argStruct:ct,thunkId:2,name:"createOutput"},Fr={argStruct:mt,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(O,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(_,{...e,type:1,name:"[19:0]u8",length:19,byteSize:20,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(D,{...e,type:13,name:"*const [19:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[]}});Object.assign(F,{...e,type:1,name:"[13:0]u8",length:13,byteSize:14,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(T,{...e,type:13,name:"*const [13:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(l,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:l}],methods:[]}});Object.assign(S,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign($,{...e,type:1,name:"[17:0]u8",length:17,byteSize:18,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(L,{...e,type:13,name:"*const [17:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[]}});Object.assign(r,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(p,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[]}});Object.assign(c,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:c}],methods:[]}});Object.assign(B,{...e,type:2,name:"Struct2361882108",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:r},{...t,type:9,slot:2,name:"maxValue",structure:r},{...t,type:9,slot:3,name:"defaultValue",structure:r}],methods:[],template:Lt}});Object.assign(G,{...e,type:2,name:"Struct2591150647",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:r},{...t,type:9,slot:2,name:"maxValue",structure:r},{...t,type:9,slot:3,name:"defaultValue",structure:r}],methods:[],template:Jt}});Object.assign(H,{...e,type:2,name:"Struct3344065547",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:r},{...t,type:9,slot:2,name:"maxValue",structure:r},{...t,type:9,slot:3,name:"defaultValue",structure:r}],methods:[],template:Xt}});Object.assign(J,{...e,type:2,name:"Struct3756800795",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:r},{...t,type:9,slot:2,name:"maxValue",structure:r},{...t,type:9,slot:3,name:"defaultValue",structure:r}],methods:[],template:ee}});Object.assign(N,{...e,type:2,name:"Struct2131766377",align:1,instance:{members:[{...t,type:9,slot:0,name:"CbMin",structure:B},{...t,type:9,slot:1,name:"CbMax",structure:G},{...t,type:9,slot:2,name:"CrMin",structure:H},{...t,type:9,slot:3,name:"CrMax",structure:J}],methods:[],template:ne}});Object.assign(d,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:l}],methods:[],template:ie}});Object.assign(Q,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:9,slot:0,name:"src",structure:d}],methods:[],template:ce}});Object.assign(W,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:9,slot:0,name:"dst",structure:d}],methods:[],template:ue}});Object.assign(nt,{...e,type:2,name:"skin-color-filter.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:D},{...t,type:9,slot:1,name:"vendor",structure:T},{...t,type:9,slot:2,name:"version",structure:l},{...t,type:9,slot:3,name:"description",structure:L},{...t,type:9,slot:4,name:"parameters",structure:N},{...t,type:9,slot:5,name:"inputImages",structure:Q},{...t,type:9,slot:6,name:"outputImages",structure:W}],methods:[],template:me}});Object.assign(V,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(X,{...e,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(P,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:X}],methods:[]}});Object.assign(y,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[]}});Object.assign(f,{...e,type:11,name:"skin-color-filter.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:f},{...t,type:9,slot:1,name:"display-p3",structure:f}],methods:[],template:de}});Object.assign(U,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:U}],methods:[]}});Object.assign(it,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:p}],methods:[]}});Object.assign(Y,{...e,type:2,name:"skin-color-filter.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:P},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:f},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:Ue},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:l}],methods:[],template:Ve}});Object.assign(I,{...e,type:2,name:"skin-color-filter.KernelInput(u8,skin-color-filter.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:Y}],methods:[],template:xe}});Object.assign(Z,{...e,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(R,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:Z}],methods:[]}});Object.assign(tt,{...e,type:2,name:"skin-color-filter.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:R},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:f},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:Ee},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:l}],methods:[],template:Ke}});Object.assign(q,{...e,type:2,name:"skin-color-filter.KernelOutput(u8,skin-color-filter.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:tt}],methods:[],template:$e}});Object.assign(x,{...e,type:2,name:"skin-color-filter.KernelParameters(skin-color-filter.kernel)",byteSize:16,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"CbMin",structure:p},{...t,type:4,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"CbMax",structure:p},{...t,type:4,bitOffset:64,bitSize:32,byteSize:4,slot:2,name:"CrMin",structure:p},{...t,type:4,bitOffset:96,bitSize:32,byteSize:4,slot:3,name:"CrMax",structure:p}],methods:[],template:Ge}});Object.assign(k,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(skin-color-filter.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:k}],methods:[],template:He}});Object.assign(ot,{...e,type:9,name:"ErrorSet3558221809!skin-color-filter.KernelOutput(u8,skin-color-filter.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:q},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:k}],methods:[]}});Object.assign(ct,{...e,type:5,name:"createOutput",byteSize:76,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:y},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:y},{...t,type:7,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:I},{...t,type:7,isRequired:!0,bitOffset:256,bitSize:128,byteSize:16,slot:1,name:"3",structure:x},{...t,type:7,isRequired:!0,bitOffset:384,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ot}],methods:[]}});Object.assign(K,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(skin-color-filter.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:K}],methods:[],template:Je}});Object.assign(ut,{...e,type:9,name:"ErrorSet3201149335!skin-color-filter.KernelOutput(u8,skin-color-filter.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:q},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:K}],methods:[]}});Object.assign(mt,{...e,type:5,name:"createPartialOutput",byteSize:84,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:y},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:y},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:y},{...t,type:7,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:I},{...t,type:7,isRequired:!0,bitOffset:320,bitSize:128,byteSize:16,slot:1,name:"5",structure:x},{...t,type:7,isRequired:!0,bitOffset:448,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ut}],methods:[]}});Object.assign(yt,{...e,type:2,name:"skin-color-filter",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:s},{...t,type:9,slot:1,name:"Input",structure:s},{...t,type:9,slot:2,name:"Output",structure:s},{...t,type:9,slot:3,name:"Parameters",structure:s}],methods:[Dr,Fr],template:Ne}});const Tr=[s,O,_,D,F,T,l,S,$,L,r,p,c,B,G,H,J,N,d,Q,W,nt,V,X,P,y,f,U,it,Y,I,Z,R,tt,q,x,k,ot,ct,K,ut,mt,yt],$r=yt,Lr={runtimeSafety:!1,littleEndian:!0},st=ks();st.getControlObject();st.recreateStructures(Tr,Lr);const Br=(async()=>{const o=new URL("skin-color-filter-9d7bd75d.wasm",import.meta.url).href;return fetch(o)})();st.loadModule(Br);st.linkVariables(!0);const{constructor:Gr}=$r,{createPartialOutput:Hr,Input:Jr,kernel:at}=Gr;function Nr(o,u,n,a,i={},j={}){const z=[];for(const[b]of at.inputImages)z.push(b);const w=[];for(const[b]of at.outputImages)w.push(b);if(Array.isArray(i)){const b=i;i={};for(const[g,h]of z.entries())i[h]=b[g]}const m=new Jr(void 0),v=[];let A;for(const b of z){let g=i[b];if(g||(z.length===1&&["data","width","height"].every(h=>!!i[h])?g=i:v.push(b)),m[b]=g,A){if(g.colorSpace!==A)throw new Error(`Input images must all use the same color space: ${A}`)}else A=g.colorSpace}if(v.length>0)throw new Error(`Missing input image${v.length>1?"s":""}: ${v.join(", ")}`);const rt=Hr(o,u,n,a,m,j),Tt=b=>{const g={};for(const h of w){const{data:{typedArray:E},width:$t,height:is}=b[h];let M;if(typeof ImageData=="function"){const os=new Uint8ClampedArray(E.buffer,E.byteOffset,E.byteLength);M=new ImageData(os,$t,a,{colorSpace:A})}else M={data:E,width:$t,height:is};if(w.length===1)return M;g[h]=M}return g};return rt[Symbol.toStringTag]==="Promise"?rt.then(Tt):Tt(rt)}function Qr(){const o={};for(let[u,n]of at){if(u==="parameters"){const a={};for(const[i,j]of n){const z=a[i]={};for(let[w,m]of j)typeof m=="object"?"string"in m?m=m.string:m=ns(m):typeof m=="function"&&(m=Wr(m.name)),z[w]=m}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());o[u]=n}return o}function ns(o){const u=[];for(let[n,a]of o)typeof a=="object"&&(a=ns(a)),u[n]=a;return u}function Wr(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[u,n,...a]=o.data;Xr(u,a).then(([i,j])=>{postMessage([u,n,i],{transfer:j})}).catch(i=>{postMessage(["error",n,i])})};async function Xr(o,u){switch(o){case"getKernelInfo":return[Qr(...u)];case"createPartialImageData":const a=await Nr(...u),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const j of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${o}`)}}
