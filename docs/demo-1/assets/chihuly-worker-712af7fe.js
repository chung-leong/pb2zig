import{u as Ue,a as qe,b as Re,c as je,d as Pe,e as Ve,f as Ie,g as ke,h as Ce,i as xe,j as ve,k as Ee,l as Ke,m as De,o as Fe,n as Me,p as _e,q as Te}from"./index-d64bc850.js";Ue();qe();Re();je();Pe();Ve();Ie();ke();Ce();xe();ve();Ee();Ke();De();Fe();Me();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},g={},A={},U={},d={},G={},H={},v={},b={},p={},m={},a={},s={},J={},E={},N={},K={},Q={},D={},W={},F={},X={},M={},Y={},_={},R={},z={},Z={},T={},ee={},$={},le={},O={},te={},se={},y={},re={},q={},ae={},B={},j={},ne={},ie={},L={},P={},V={},me={},ye={},ce={},be={},pe={},fe={},he={};Object.assign(g,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:5});Object.assign(A,{...t,type:1,name:"[25:0]u8",length:25,byteSize:26,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:4});Object.assign(U,{...t,type:11,name:"*const [25:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:A}],methods:[],template:null},slot:3});Object.assign(d,{...t,type:11,name:"*const *const [25:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:U}],methods:[],template:null},slot:2});Object.assign(G,{...t,type:1,name:"[21:0]u8",length:21,byteSize:22,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:8});Object.assign(H,{...t,type:11,name:"*const [21:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:G}],methods:[],template:null},slot:7});Object.assign(v,{...t,type:11,name:"*const *const [21:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[],template:null},slot:6});Object.assign(b,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:10});Object.assign(p,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:b}],methods:[],template:null},slot:9});Object.assign(m,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[],template:null},slot:29});Object.assign(a,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:a}],methods:[],template:null},slot:50});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:a}],methods:[],template:null},slot:49});const $e=new Uint8Array,Be=new Uint8Array([24,253,15,0]),Le=new Uint8Array([0,0,0,0,0,64,143,192]),Ge=new Uint8Array([64,253,15,0]),He=new Uint8Array([0,0,0,0,0,64,143,64]),Je=new Uint8Array([104,253,15,0]),Ne=new Uint8Array([0,0,0,0,0,0,105,64]);Object.assign(J,{...t,type:2,name:"Struct0012",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:$e},slots:{0:{structure:s,memory:{array:Be},slots:{0:{structure:a,memory:{array:Le}}}},1:{structure:s,memory:{array:Ge},slots:{0:{structure:a,memory:{array:He}}}},2:{structure:s,memory:{array:Je},slots:{0:{structure:a,memory:{array:Ne}}}}}}},slot:35});Object.assign(E,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:J}],methods:[],template:null},slot:34});const Qe=new Uint8Array,We=new Uint8Array([24,253,15,0]),Xe=new Uint8Array([0,0,0,0,0,64,143,192]),Ye=new Uint8Array([64,253,15,0]),Ze=new Uint8Array([0,0,0,0,0,64,143,64]),et=new Uint8Array([104,253,15,0]),tt=new Uint8Array([0,0,0,0,0,0,89,64]);Object.assign(N,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:Qe},slots:{0:{structure:s,memory:{array:We},slots:{0:{structure:a,memory:{array:Xe}}}},1:{structure:s,memory:{array:Ye},slots:{0:{structure:a,memory:{array:Ze}}}},2:{structure:s,memory:{array:et},slots:{0:{structure:a,memory:{array:tt}}}}}}},slot:37});Object.assign(K,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:N}],methods:[],template:null},slot:36});const st=new Uint8Array,rt=new Uint8Array([24,253,15,0]),at=new Uint8Array([123,20,174,71,225,122,132,63]),nt=new Uint8Array([64,253,15,0]),it=new Uint8Array([0,0,0,0,0,0,36,64]),ut=new Uint8Array([104,253,15,0]),ot=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(Q,{...t,type:2,name:"Struct0014",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:st},slots:{0:{structure:s,memory:{array:rt},slots:{0:{structure:a,memory:{array:at}}}},1:{structure:s,memory:{array:nt},slots:{0:{structure:a,memory:{array:it}}}},2:{structure:s,memory:{array:ut},slots:{0:{structure:a,memory:{array:ot}}}}}}},slot:39});Object.assign(D,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[],template:null},slot:38});const lt=new Uint8Array,mt=new Uint8Array([24,253,15,0]),yt=new Uint8Array([123,20,174,71,225,122,132,63]),ct=new Uint8Array([64,253,15,0]),bt=new Uint8Array([0,0,0,0,0,0,89,64]),pt=new Uint8Array([104,253,15,0]),ft=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(W,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:lt},slots:{0:{structure:s,memory:{array:mt},slots:{0:{structure:a,memory:{array:yt}}}},1:{structure:s,memory:{array:ct},slots:{0:{structure:a,memory:{array:bt}}}},2:{structure:s,memory:{array:pt},slots:{0:{structure:a,memory:{array:ft}}}}}}},slot:41});Object.assign(F,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:40});const ht=new Uint8Array,St=new Uint8Array([24,253,15,0]),dt=new Uint8Array([0,0,0,0,0,0,0,0]),gt=new Uint8Array([64,253,15,0]),zt=new Uint8Array([31,133,235,81,184,30,25,64]),Ot=new Uint8Array([104,253,15,0]),wt=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(X,{...t,type:2,name:"Struct0016",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:ht},slots:{0:{structure:s,memory:{array:St},slots:{0:{structure:a,memory:{array:dt}}}},1:{structure:s,memory:{array:gt},slots:{0:{structure:a,memory:{array:zt}}}},2:{structure:s,memory:{array:Ot},slots:{0:{structure:a,memory:{array:wt}}}}}}},slot:43});Object.assign(M,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:42});const At=new Uint8Array,Ut=new Uint8Array([170,170,170,170]),qt=new Uint8Array,Rt=new Uint8Array([170,170,170,170]),jt=new Uint8Array,Pt=new Uint8Array([170,170,170,170]),Vt=new Uint8Array,It=new Uint8Array([170,170,170,170]),kt=new Uint8Array,Ct=new Uint8Array([170,170,170,170]),xt=new Uint8Array;Object.assign(Y,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"line",structure:E},{...e,type:8,isRequired:!1,slot:1,name:"height",structure:K},{...e,type:8,isRequired:!1,slot:2,name:"stemScale",structure:D},{...e,type:8,isRequired:!1,slot:3,name:"squiggleScale",structure:F},{...e,type:8,isRequired:!1,slot:4,name:"animationIndex",structure:M}],methods:[],template:{memory:{array:At},slots:{0:{structure:E,memory:{array:Ut},slots:{0:{structure:J,memory:{array:qt}}}},1:{structure:K,memory:{array:Rt},slots:{0:{structure:N,memory:{array:jt}}}},2:{structure:D,memory:{array:Pt},slots:{0:{structure:Q,memory:{array:Vt}}}},3:{structure:F,memory:{array:It},slots:{0:{structure:W,memory:{array:kt}}}},4:{structure:M,memory:{array:Ct},slots:{0:{structure:X,memory:{array:xt}}}}}}},slot:12});Object.assign(_,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[],template:null},slot:11});const vt=new Uint8Array,Et=new Uint8Array([176,248,15,0]),Kt=new Uint8Array([4,0,0,0]);Object.assign(R,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:vt},slots:{0:{structure:p,memory:{array:Et},slots:{0:{structure:b,memory:{array:Kt}}}}}}},slot:45});Object.assign(z,{...t,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:R}],methods:[],template:null},slot:44});const Dt=new Uint8Array,Ft=new Uint8Array([170,170,170,170]),Mt=new Uint8Array;Object.assign(Z,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"inputImage",structure:z}],methods:[],template:{memory:{array:Dt},slots:{0:{structure:z,memory:{array:Ft},slots:{0:{structure:R,memory:{array:Mt}}}}}}},slot:14});Object.assign(T,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:13});const _t=new Uint8Array,Tt=new Uint8Array([170,170,170,170]),$t=new Uint8Array;Object.assign(ee,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"outputPixel",structure:z}],methods:[],template:{memory:{array:_t},slots:{0:{structure:z,memory:{array:Tt},slots:{0:{structure:R,memory:{array:$t}}}}}}},slot:16});Object.assign($,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:15});const Bt=new Uint8Array,Lt=new Uint8Array,Gt=new Uint8Array([28,36,16,0]),Ht=new Uint8Array([196,35,16,0]),Jt=new Uint8Array([99,111,109,46,101,118,101,114,101,116,116,45,99,104,117,114,99,104,46,106,117,115,116,105,110,0]),Nt=new Uint8Array([24,36,16,0]),Qt=new Uint8Array([163,35,16,0]),Wt=new Uint8Array([74,117,115,116,105,110,32,69,118,101,114,101,116,116,45,67,104,117,114,99,104,0]),Xt=new Uint8Array([20,36,16,0]),Yt=new Uint8Array([1,0,0,0]),Zt=new Uint8Array([16,36,16,0]),es=new Uint8Array([120,35,16,0]),ts=new Uint8Array([99,104,105,104,117,108,121,32,116,104,101,109,101,100,32,116,114,97,110,115,105,116,105,111,110,0]),ss=new Uint8Array([170,170,170,170]),rs=new Uint8Array,as=new Uint8Array([170,170,170,170]),ns=new Uint8Array,is=new Uint8Array([170,170,170,170]),us=new Uint8Array;Object.assign(le,{...t,type:2,name:"chihuly.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Bt}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:d},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:v},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:p},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:d},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:_},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:T},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:$}],methods:[],template:{memory:{array:Lt},slots:{0:{structure:d,memory:{array:Gt},slots:{0:{structure:U,memory:{array:Ht},slots:{0:{structure:A,memory:{array:Jt}}}}}},1:{structure:v,memory:{array:Nt},slots:{0:{structure:H,memory:{array:Qt},slots:{0:{structure:G,memory:{array:Wt}}}}}},2:{structure:p,memory:{array:Xt},slots:{0:{structure:b,memory:{array:Yt}}}},3:{structure:d,memory:{array:Zt},slots:{0:{structure:U,memory:{array:es},slots:{0:{structure:A,memory:{array:ts}}}}}},4:{structure:_,memory:{array:ss},slots:{0:{structure:Y,memory:{array:rs}}}},5:{structure:T,memory:{array:as},slots:{0:{structure:Z,memory:{array:ns}}}},6:{structure:$,memory:{array:is},slots:{0:{structure:ee,memory:{array:us}}}}}}},slot:1});Object.assign(O,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:21});Object.assign(te,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:20});Object.assign(se,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:te}],methods:[],template:null},slot:19});Object.assign(y,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:22});const os=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(re,{...t,type:9,name:"chihuly.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:b},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:b}],methods:[],template:{memory:{array:os}}},slot:23});Object.assign(q,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:24});Object.assign(ae,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:m}],methods:[],template:null},slot:46});const ls=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ms=new Uint8Array,ys=new Uint8Array([64,35,16,0]),cs=new Uint8Array([4,0,0,0]);Object.assign(B,{...t,type:2,name:"chihuly.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:se},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:re},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:q}],methods:[],template:{memory:{array:ls}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:ae},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:ms},slots:{0:{structure:p,memory:{array:ys},slots:{0:{structure:b,memory:{array:cs}}}}}}},slot:18});const bs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ps=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ze=new Uint8Array([0,0,0,0,0,0,0,0]),fs=new Uint8Array;Object.assign(j,{...t,type:2,name:"chihuly.KernelInput(u8,chihuly.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"inputImage",structure:B}],methods:[],template:{memory:{array:bs},slots:{0:{structure:B,memory:{array:ps},slots:{0:{structure:se,memory:{array:ze},address:1047568,slots:{0:{structure:te,memory:{array:fs},address:0}}}}}}}},slot:17});Object.assign(ne,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:20});Object.assign(ie,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:ne}],methods:[],template:null},slot:27});const hs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ss=new Uint8Array,ds=new Uint8Array([64,35,16,0]),gs=new Uint8Array([4,0,0,0]);Object.assign(L,{...t,type:2,name:"chihuly.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:ie},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:re},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:q}],methods:[],template:{memory:{array:hs}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:ae},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:Ss},slots:{0:{structure:p,memory:{array:ds},slots:{0:{structure:b,memory:{array:gs}}}}}}},slot:26});const zs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Os=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ws=new Uint8Array;Object.assign(P,{...t,type:2,name:"chihuly.KernelOutput(u8,chihuly.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"outputPixel",structure:L}],methods:[],template:{memory:{array:zs},slots:{0:{structure:L,memory:{array:Os},slots:{0:{structure:ie,memory:{array:ze},address:1047568,slots:{0:{structure:ne,memory:{array:ws},address:0}}}}}}}},slot:25});const As=new Uint8Array([0,0,72,67,0,0,200,66,0,0,128,63,0,0,128,63,0,0,0,0]);Object.assign(V,{...t,type:2,name:"chihuly.KernelParameters(chihuly.kernel)",length:1,byteSize:20,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"line",structure:m},{...e,type:4,isRequired:!1,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"height",structure:m},{...e,type:4,isRequired:!1,bitOffset:64,bitSize:32,byteSize:4,slot:2,name:"stemScale",structure:m},{...e,type:4,isRequired:!1,bitOffset:96,bitSize:32,byteSize:4,slot:3,name:"squiggleScale",structure:m},{...e,type:4,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"animationIndex",structure:m}],methods:[],template:{memory:{array:As}}},slot:28});Object.assign(me,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(chihuly.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:47});Object.assign(ye,{...t,type:7,name:"ErrorSet0000!chihuly.KernelOutput(u8,chihuly.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:P},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:me}],methods:[],template:null},slot:32});Object.assign(ce,{...t,type:3,name:"createOutput",length:1,byteSize:80,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:6,bitOffset:64,bitSize:192,byteSize:24,slot:2,name:"2",structure:j},{...e,type:6,bitOffset:256,bitSize:160,byteSize:20,slot:3,name:"3",structure:V},{...e,type:6,bitOffset:416,bitSize:224,byteSize:28,slot:4,name:"retval",structure:ye}],methods:[],template:null},slot:30});Object.assign(be,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(chihuly.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:48});Object.assign(pe,{...t,type:7,name:"ErrorSet0001!chihuly.KernelOutput(u8,chihuly.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:P},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:be}],methods:[],template:null},slot:33});Object.assign(fe,{...t,type:3,name:"createPartialOutput",length:1,byteSize:88,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:2,name:"2",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:3,name:"3",structure:y},{...e,type:6,bitOffset:128,bitSize:192,byteSize:24,slot:4,name:"4",structure:j},{...e,type:6,bitOffset:320,bitSize:160,byteSize:20,slot:5,name:"5",structure:V},{...e,type:6,bitOffset:480,bitSize:224,byteSize:28,slot:6,name:"retval",structure:pe}],methods:[],template:null},slot:31});const Us=new Uint8Array,qs={argStruct:ce,thunk:7,name:"createOutput"},Rs={argStruct:fe,thunk:2,name:"createPartialOutput"};Object.assign(he,{...t,type:2,name:"chihuly",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Us}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:le},{...e,type:7,isRequired:!1,name:"Input",structure:j},{...e,type:7,isRequired:!1,name:"Output",structure:P},{...e,type:7,isRequired:!1,name:"Parameters",structure:V}],methods:[qs,Rs],template:null},slot:0});const js=[g,A,U,d,G,H,v,b,p,m,a,s,J,E,N,K,Q,D,W,F,X,M,Y,_,R,z,Z,T,ee,$,le,O,te,se,y,re,q,ae,B,j,ne,ie,L,P,V,me,ye,ce,be,pe,fe,he],Ps=_e(js),Vs=he.constructor,Is=(async()=>{const u=new URL("chihuly-289c97db.wasm",import.meta.url).href;return fetch(u)})();Te(Is,{...Ps,writeBack:!0});const{createOutput:Fs,createPartialOutput:ks,kernel:oe,Input:Cs,Output:Ms,Parameters:_s}=Vs;function xs(u,l,n,r,i={},h={}){if(Array.isArray(i)){const f=i;i={};for(const[c,S]of Object.keys(oe.inputImages).entries())i[S]=f[c]}const I=new Cs(void 0),k=Object.keys(oe.inputImages),o=[];let w;for(const f of k){let c=i[f];if(c||(k.length===1&&["data","width","height"].every(S=>!!i[S])?c=i:o.push(f)),I[f]=c,w){if(c.colorSpace!==w)throw new Error(`Input images must all use the same color space: ${w}`)}else w=c.colorSpace}if(o.length>0)throw new Error(`Missing input image${o.length>1?"s":""}: ${o.join(", ")}`);const ue=ks(u,l,n,r,I,h),Se=f=>{const c=Object.keys(f),S={};for(const de of c){const{data:{typedArray:C},width:ge,height:we}=f[de];let x;if(typeof ImageData=="function"){const Ae=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);x=new ImageData(Ae,ge,r,{colorSpace:w})}else x={data:C,width:ge,height:we};if(c.length===1)return x;S[de]=x}return S};return ue[Symbol.toStringTag]==="Promise"?ue.then(Se):Se(ue)}function vs(){const u={};for(let[l,n]of Object.entries(oe)){if(l==="parameters"){const r={};for(const[i,h]of Object.entries(n)){const I=r[i]={};for(let[k,o]of Object.entries(h))typeof o=="object"?"string"in o?o=o.string:o=Oe(o):typeof o=="function"&&(o=Es(o.name)),I[k]=o}n=r}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());u[l]=n}return u}function Oe(u){const l=[];for(let[n,r]of Object.entries(u))typeof r=="object"&&(r=Oe(r)),l[n]=r;return l}function Es(u){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[u]}onmessage=u=>{const[l,n,...r]=u.data;Ks(l,r).then(([i,h])=>{postMessage([l,n,i],{transfer:h})}).catch(i=>{postMessage(["error",n,i])})};async function Ks(u,l){switch(u){case"getKernelInfo":return[vs(...l)];case"createPartialImageData":const r=await xs(...l),i=[];if("data"in r&&"width"in r&&"height"in r)i.push(r.data.buffer);else for(const h of Object.entries(r))i.push(r.data.buffer);return[r,i];default:throw new Error(`Unknown function: ${u}`)}}
