import{u as Ie,a as ve,b as Ee,c as Ke,d as De,e as Fe,f as Me,g as _e,h as Te,i as $e,j as Be,k as Le,l as Ge,m as He,o as Je,n as Ne,p as Qe,q as We}from"./index-d64bc850.js";Ie();ve();Ee();Ke();De();Fe();Me();_e();Te();$e();Be();Le();Ge();He();Je();Ne();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},g={},A={},U={},h={},Q={},W={},v={},b={},p={},m={},s={},r={},X={},E={},Y={},K={},Z={},D={},ee={},F={},te={},M={},re={},se={},_={},ae={},T={},ne={},$={},ie={},B={},ue={},L={},q={},z={},oe={},G={},me={},H={},he={},w={},le={},ye={},y={},ce={},R={},be={},J={},j={},pe={},fe={},N={},P={},V={},ge={},ze={},we={},Oe={},Ae={},Ue={},Re={};Object.assign(g,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:5});Object.assign(A,{...t,type:1,name:"[22:0]u8",length:22,byteSize:23,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:4});Object.assign(U,{...t,type:11,name:"*const [22:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:A}],methods:[],template:null},slot:3});Object.assign(h,{...t,type:11,name:"*const *const [22:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:U}],methods:[],template:null},slot:2});Object.assign(Q,{...t,type:1,name:"[8:0]u8",length:8,byteSize:9,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:8});Object.assign(W,{...t,type:11,name:"*const [8:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[],template:null},slot:7});Object.assign(v,{...t,type:11,name:"*const *const [8:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:6});Object.assign(b,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:10});Object.assign(p,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:b}],methods:[],template:null},slot:9});Object.assign(m,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[],template:null},slot:29});Object.assign(s,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:s}],methods:[],template:null},slot:53});Object.assign(r,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:s}],methods:[],template:null},slot:52});const Xe=new Uint8Array,Ye=new Uint8Array([0,252,15,0]),Ze=new Uint8Array([0,0,0,0,0,0,240,63]),et=new Uint8Array([40,252,15,0]),tt=new Uint8Array([0,0,0,0,0,0,89,64]),rt=new Uint8Array([32,251,15,0]),st=new Uint8Array([0,0,0,0,0,0,42,64]);Object.assign(X,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:Xe},slots:{0:{structure:r,memory:{array:Ye},slots:{0:{structure:s,memory:{array:Ze}}}},1:{structure:r,memory:{array:et},slots:{0:{structure:s,memory:{array:tt}}}},2:{structure:r,memory:{array:rt},slots:{0:{structure:s,memory:{array:st}}}}}}},slot:36});Object.assign(E,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:35});const at=new Uint8Array,nt=new Uint8Array([0,252,15,0]),it=new Uint8Array([0,0,0,0,0,0,240,63]),ut=new Uint8Array([40,252,15,0]),ot=new Uint8Array([0,0,0,0,0,0,89,64]),mt=new Uint8Array([32,251,15,0]),lt=new Uint8Array([0,0,0,0,0,0,49,64]);Object.assign(Y,{...t,type:2,name:"Struct0014",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:at},slots:{0:{structure:r,memory:{array:nt},slots:{0:{structure:s,memory:{array:it}}}},1:{structure:r,memory:{array:ut},slots:{0:{structure:s,memory:{array:ot}}}},2:{structure:r,memory:{array:mt},slots:{0:{structure:s,memory:{array:lt}}}}}}},slot:38});Object.assign(K,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[],template:null},slot:37});const yt=new Uint8Array,ct=new Uint8Array([0,252,15,0]),bt=new Uint8Array([0,0,0,0,0,0,240,63]),pt=new Uint8Array([40,252,15,0]),ft=new Uint8Array([0,0,0,0,0,0,89,64]),dt=new Uint8Array([32,251,15,0]),St=new Uint8Array([0,0,0,0,0,0,51,64]);Object.assign(Z,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:yt},slots:{0:{structure:r,memory:{array:ct},slots:{0:{structure:s,memory:{array:bt}}}},1:{structure:r,memory:{array:pt},slots:{0:{structure:s,memory:{array:ft}}}},2:{structure:r,memory:{array:dt},slots:{0:{structure:s,memory:{array:St}}}}}}},slot:40});Object.assign(D,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:39});const ht=new Uint8Array,gt=new Uint8Array([0,252,15,0]),zt=new Uint8Array([0,0,0,0,0,0,240,63]),wt=new Uint8Array([40,252,15,0]),Ot=new Uint8Array([0,0,0,0,0,0,89,64]),At=new Uint8Array([32,251,15,0]),Ut=new Uint8Array([0,0,0,0,0,0,53,64]);Object.assign(ee,{...t,type:2,name:"Struct0016",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:ht},slots:{0:{structure:r,memory:{array:gt},slots:{0:{structure:s,memory:{array:zt}}}},1:{structure:r,memory:{array:wt},slots:{0:{structure:s,memory:{array:Ot}}}},2:{structure:r,memory:{array:At},slots:{0:{structure:s,memory:{array:Ut}}}}}}},slot:42});Object.assign(F,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:41});const Rt=new Uint8Array,qt=new Uint8Array([0,252,15,0]),jt=new Uint8Array([0,0,0,0,0,0,240,63]),Pt=new Uint8Array([40,252,15,0]),Vt=new Uint8Array([0,0,0,0,0,0,89,64]),xt=new Uint8Array([32,251,15,0]),kt=new Uint8Array([0,0,0,0,0,0,55,64]);Object.assign(te,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:Rt},slots:{0:{structure:r,memory:{array:qt},slots:{0:{structure:s,memory:{array:jt}}}},1:{structure:r,memory:{array:Pt},slots:{0:{structure:s,memory:{array:Vt}}}},2:{structure:r,memory:{array:xt},slots:{0:{structure:s,memory:{array:kt}}}}}}},slot:44});Object.assign(M,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:43});Object.assign(re,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:m}],methods:[],template:null},slot:30});const Ct=new Uint8Array,It=new Uint8Array([224,251,15,0]),vt=new Uint8Array([0,0,0,0,0,0,89,192]),Et=new Uint8Array([8,252,15,0]),Kt=new Uint8Array([0,0,0,0,0,0,89,192]);Object.assign(se,{...t,type:2,name:"Struct0023",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Ct},slots:{0:{structure:r,memory:{array:It},slots:{0:{structure:s,memory:{array:vt}}}},1:{structure:r,memory:{array:Et},slots:{0:{structure:s,memory:{array:Kt}}}}}}},slot:55});Object.assign(_,{...t,type:11,name:"Struct0020",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:54});const Dt=new Uint8Array,Ft=new Uint8Array([224,251,15,0]),Mt=new Uint8Array([0,0,0,0,0,64,143,64]),_t=new Uint8Array([8,252,15,0]),Tt=new Uint8Array([0,0,0,0,0,64,143,64]);Object.assign(ae,{...t,type:2,name:"Struct0024",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Dt},slots:{0:{structure:r,memory:{array:Ft},slots:{0:{structure:s,memory:{array:Mt}}}},1:{structure:r,memory:{array:_t},slots:{0:{structure:s,memory:{array:Tt}}}}}}},slot:57});Object.assign(T,{...t,type:11,name:"Struct0021",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:56});const $t=new Uint8Array,Bt=new Uint8Array([224,251,15,0]),Lt=new Uint8Array([0,0,0,0,0,48,107,64]),Gt=new Uint8Array([8,252,15,0]),Ht=new Uint8Array([205,204,204,204,204,108,136,64]);Object.assign(ne,{...t,type:2,name:"Struct0025",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:$t},slots:{0:{structure:r,memory:{array:Bt},slots:{0:{structure:s,memory:{array:Lt}}}},1:{structure:r,memory:{array:Gt},slots:{0:{structure:s,memory:{array:Ht}}}}}}},slot:59});Object.assign($,{...t,type:11,name:"Struct0022",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:58});const Jt=new Uint8Array,Nt=new Uint8Array([170,170,170,170]),Qt=new Uint8Array,Wt=new Uint8Array([170,170,170,170]),Xt=new Uint8Array,Yt=new Uint8Array([170,170,170,170]),Zt=new Uint8Array;Object.assign(ie,{...t,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:re},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:_},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:T},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:$}],methods:[],template:{memory:{array:Jt},slots:{0:{structure:_,memory:{array:Nt},slots:{0:{structure:se,memory:{array:Qt}}}},1:{structure:T,memory:{array:Wt},slots:{0:{structure:ae,memory:{array:Xt}}}},2:{structure:$,memory:{array:Yt},slots:{0:{structure:ne,memory:{array:Zt}}}}}}},slot:46});Object.assign(B,{...t,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:45});const er=new Uint8Array,tr=new Uint8Array([170,170,170,170]),rr=new Uint8Array,sr=new Uint8Array([170,170,170,170]),ar=new Uint8Array,nr=new Uint8Array([170,170,170,170]),ir=new Uint8Array,ur=new Uint8Array([170,170,170,170]),or=new Uint8Array,mr=new Uint8Array([170,170,170,170]),lr=new Uint8Array,yr=new Uint8Array([170,170,170,170]),cr=new Uint8Array;Object.assign(ue,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"n0",structure:E},{...e,type:8,isRequired:!1,slot:1,name:"n1",structure:K},{...e,type:8,isRequired:!1,slot:2,name:"n2",structure:D},{...e,type:8,isRequired:!1,slot:3,name:"n3",structure:F},{...e,type:8,isRequired:!1,slot:4,name:"n4",structure:M},{...e,type:8,isRequired:!1,slot:5,name:"randomPoint",structure:B}],methods:[],template:{memory:{array:er},slots:{0:{structure:E,memory:{array:tr},slots:{0:{structure:X,memory:{array:rr}}}},1:{structure:K,memory:{array:sr},slots:{0:{structure:Y,memory:{array:ar}}}},2:{structure:D,memory:{array:nr},slots:{0:{structure:Z,memory:{array:ir}}}},3:{structure:F,memory:{array:ur},slots:{0:{structure:ee,memory:{array:or}}}},4:{structure:M,memory:{array:mr},slots:{0:{structure:te,memory:{array:lr}}}},5:{structure:B,memory:{array:yr},slots:{0:{structure:ie,memory:{array:cr}}}}}}},slot:12});Object.assign(L,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:11});const br=new Uint8Array,pr=new Uint8Array([0,252,15,0]),fr=new Uint8Array([4,0,0,0]);Object.assign(q,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:br},slots:{0:{structure:p,memory:{array:pr},slots:{0:{structure:b,memory:{array:fr}}}}}}},slot:48});Object.assign(z,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:q}],methods:[],template:null},slot:47});const dr=new Uint8Array,Sr=new Uint8Array([170,170,170,170]),hr=new Uint8Array;Object.assign(oe,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:z}],methods:[],template:{memory:{array:dr},slots:{0:{structure:z,memory:{array:Sr},slots:{0:{structure:q,memory:{array:hr}}}}}}},slot:14});Object.assign(G,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:13});const gr=new Uint8Array,zr=new Uint8Array([170,170,170,170]),wr=new Uint8Array;Object.assign(me,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:z}],methods:[],template:{memory:{array:gr},slots:{0:{structure:z,memory:{array:zr},slots:{0:{structure:q,memory:{array:wr}}}}}}},slot:16});Object.assign(H,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:15});const Or=new Uint8Array,Ar=new Uint8Array,Ur=new Uint8Array([224,36,16,0]),Rr=new Uint8Array([141,36,16,0]),qr=new Uint8Array([114,97,110,100,111,109,32,115,105,122,101,32,112,105,120,101,108,97,116,105,111,110,0]),jr=new Uint8Array([232,36,16,0]),Pr=new Uint8Array([121,36,16,0]),Vr=new Uint8Array([112,105,120,101,108,101,114,111,0]),xr=new Uint8Array([228,36,16,0]),kr=new Uint8Array([1,0,0,0]),Cr=new Uint8Array([224,36,16,0]),Ir=new Uint8Array([141,36,16,0]),vr=new Uint8Array([114,97,110,100,111,109,32,115,105,122,101,32,112,105,120,101,108,97,116,105,111,110,0]),Er=new Uint8Array([170,170,170,170]),Kr=new Uint8Array,Dr=new Uint8Array([170,170,170,170]),Fr=new Uint8Array,Mr=new Uint8Array([170,170,170,170]),_r=new Uint8Array;Object.assign(he,{...t,type:2,name:"random-pixelation.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Or}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:h},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:v},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:p},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:h},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:L},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:G},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:H}],methods:[],template:{memory:{array:Ar},slots:{0:{structure:h,memory:{array:Ur},slots:{0:{structure:U,memory:{array:Rr},slots:{0:{structure:A,memory:{array:qr}}}}}},1:{structure:v,memory:{array:jr},slots:{0:{structure:W,memory:{array:Pr},slots:{0:{structure:Q,memory:{array:Vr}}}}}},2:{structure:p,memory:{array:xr},slots:{0:{structure:b,memory:{array:kr}}}},3:{structure:h,memory:{array:Cr},slots:{0:{structure:U,memory:{array:Ir},slots:{0:{structure:A,memory:{array:vr}}}}}},4:{structure:L,memory:{array:Er},slots:{0:{structure:ue,memory:{array:Kr}}}},5:{structure:G,memory:{array:Dr},slots:{0:{structure:oe,memory:{array:Fr}}}},6:{structure:H,memory:{array:Mr},slots:{0:{structure:me,memory:{array:_r}}}}}}},slot:1});Object.assign(w,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:21});Object.assign(le,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:w}],methods:[],template:null},slot:20});Object.assign(ye,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:le}],methods:[],template:null},slot:19});Object.assign(y,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:22});const Tr=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(ce,{...t,type:9,name:"random-pixelation.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:b},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:b}],methods:[],template:{memory:{array:Tr}}},slot:23});Object.assign(R,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:R}],methods:[],template:null},slot:24});Object.assign(be,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:m}],methods:[],template:null},slot:49});const $r=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Br=new Uint8Array,Lr=new Uint8Array([48,36,16,0]),Gr=new Uint8Array([4,0,0,0]);Object.assign(J,{...t,type:2,name:"random-pixelation.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:ye},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ce},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:{memory:{array:$r}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:w},{...e,type:7,isRequired:!1,name:"FPixel",structure:be},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:Br},slots:{0:{structure:p,memory:{array:Lr},slots:{0:{structure:b,memory:{array:Gr}}}}}}},slot:18});const Hr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Jr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ve=new Uint8Array([0,0,0,0,0,0,0,0]),Nr=new Uint8Array;Object.assign(j,{...t,type:2,name:"random-pixelation.KernelInput(u8,random-pixelation.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:J}],methods:[],template:{memory:{array:Hr},slots:{0:{structure:J,memory:{array:Jr},slots:{0:{structure:ye,memory:{array:Ve},address:1047152,slots:{0:{structure:le,memory:{array:Nr},address:0}}}}}}}},slot:17});Object.assign(pe,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:w}],methods:[],template:null},slot:20});Object.assign(fe,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:pe}],methods:[],template:null},slot:27});const Qr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Wr=new Uint8Array,Xr=new Uint8Array([48,36,16,0]),Yr=new Uint8Array([4,0,0,0]);Object.assign(N,{...t,type:2,name:"random-pixelation.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:fe},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ce},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:{memory:{array:Qr}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:w},{...e,type:7,isRequired:!1,name:"FPixel",structure:be},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:Wr},slots:{0:{structure:p,memory:{array:Xr},slots:{0:{structure:b,memory:{array:Yr}}}}}}},slot:26});const Zr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),es=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ts=new Uint8Array;Object.assign(P,{...t,type:2,name:"random-pixelation.KernelOutput(u8,random-pixelation.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:N}],methods:[],template:{memory:{array:Zr},slots:{0:{structure:N,memory:{array:es},slots:{0:{structure:fe,memory:{array:Ve},address:1047152,slots:{0:{structure:pe,memory:{array:ts},address:0}}}}}}}},slot:25});const rs=new Uint8Array([0,128,89,67,102,102,67,68,0,0,80,65,0,0,136,65,0,0,152,65,0,0,168,65,0,0,184,65,0,0,0,0]);Object.assign(V,{...t,type:2,name:"random-pixelation.KernelParameters(random-pixelation.kernel)",length:1,byteSize:32,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:64,bitSize:32,byteSize:4,slot:0,name:"n0",structure:m},{...e,type:4,isRequired:!1,bitOffset:96,bitSize:32,byteSize:4,slot:1,name:"n1",structure:m},{...e,type:4,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:2,name:"n2",structure:m},{...e,type:4,isRequired:!1,bitOffset:160,bitSize:32,byteSize:4,slot:3,name:"n3",structure:m},{...e,type:4,isRequired:!1,bitOffset:192,bitSize:32,byteSize:4,slot:4,name:"n4",structure:m},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,slot:5,name:"randomPoint",structure:re}],methods:[],template:{memory:{array:rs}}},slot:28});Object.assign(ge,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(random-pixelation.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:50});Object.assign(ze,{...t,type:7,name:"ErrorSet0000!random-pixelation.KernelOutput(u8,random-pixelation.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:P},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:ge}],methods:[],template:null},slot:33});Object.assign(we,{...t,type:3,name:"createOutput",length:1,byteSize:96,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:6,bitOffset:320,bitSize:192,byteSize:24,slot:2,name:"2",structure:j},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:3,name:"3",structure:V},{...e,type:6,bitOffset:512,bitSize:224,byteSize:28,slot:4,name:"retval",structure:ze}],methods:[],template:null},slot:31});Object.assign(Oe,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(random-pixelation.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:51});Object.assign(Ae,{...t,type:7,name:"ErrorSet0001!random-pixelation.KernelOutput(u8,random-pixelation.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:P},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Oe}],methods:[],template:null},slot:34});Object.assign(Ue,{...t,type:3,name:"createPartialOutput",length:1,byteSize:104,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:3,bitOffset:320,bitSize:32,byteSize:4,slot:2,name:"2",structure:y},{...e,type:3,bitOffset:352,bitSize:32,byteSize:4,slot:3,name:"3",structure:y},{...e,type:6,bitOffset:384,bitSize:192,byteSize:24,slot:4,name:"4",structure:j},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:5,name:"5",structure:V},{...e,type:6,bitOffset:576,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Ae}],methods:[],template:null},slot:32});const ss=new Uint8Array,as={argStruct:we,thunk:4,name:"createOutput"},ns={argStruct:Ue,thunk:6,name:"createPartialOutput"};Object.assign(Re,{...t,type:2,name:"random-pixelation",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:ss}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:he},{...e,type:7,isRequired:!1,name:"Input",structure:j},{...e,type:7,isRequired:!1,name:"Output",structure:P},{...e,type:7,isRequired:!1,name:"Parameters",structure:V}],methods:[as,ns],template:null},slot:0});const is=[g,A,U,h,Q,W,v,b,p,m,s,r,X,E,Y,K,Z,D,ee,F,te,M,re,se,_,ae,T,ne,$,ie,B,ue,L,q,z,oe,G,me,H,he,w,le,ye,y,ce,R,be,J,j,pe,fe,N,P,V,ge,ze,we,Oe,Ae,Ue,Re],us=Qe(is),os=Re.constructor,ms=(async()=>{const u=new URL("random-pixelation-ce87a7c8.wasm",import.meta.url).href;return fetch(u)})();We(ms,{...us,writeBack:!0});const{createOutput:Ss,createPartialOutput:ls,kernel:Se,Input:ys,Output:hs,Parameters:gs}=os;function cs(u,l,n,a,i={},d={}){if(Array.isArray(i)){const f=i;i={};for(const[c,S]of Object.keys(Se.inputImages).entries())i[S]=f[c]}const x=new ys(void 0),k=Object.keys(Se.inputImages),o=[];let O;for(const f of k){let c=i[f];if(c||(k.length===1&&["data","width","height"].every(S=>!!i[S])?c=i:o.push(f)),x[f]=c,O){if(c.colorSpace!==O)throw new Error(`Input images must all use the same color space: ${O}`)}else O=c.colorSpace}if(o.length>0)throw new Error(`Missing input image${o.length>1?"s":""}: ${o.join(", ")}`);const de=ls(u,l,n,a,x,d),qe=f=>{const c=Object.keys(f),S={};for(const je of c){const{data:{typedArray:C},width:Pe,height:ke}=f[je];let I;if(typeof ImageData=="function"){const Ce=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);I=new ImageData(Ce,Pe,a,{colorSpace:O})}else I={data:C,width:Pe,height:ke};if(c.length===1)return I;S[je]=I}return S};return de[Symbol.toStringTag]==="Promise"?de.then(qe):qe(de)}function bs(){const u={};for(let[l,n]of Object.entries(Se)){if(l==="parameters"){const a={};for(const[i,d]of Object.entries(n)){const x=a[i]={};for(let[k,o]of Object.entries(d))typeof o=="object"?"string"in o?o=o.string:o=xe(o):typeof o=="function"&&(o=ps(o.name)),x[k]=o}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());u[l]=n}return u}function xe(u){const l=[];for(let[n,a]of Object.entries(u))typeof a=="object"&&(a=xe(a)),l[n]=a;return l}function ps(u){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[u]}onmessage=u=>{const[l,n,...a]=u.data;fs(l,a).then(([i,d])=>{postMessage([l,n,i],{transfer:d})}).catch(i=>{postMessage(["error",n,i])})};async function fs(u,l){switch(u){case"getKernelInfo":return[bs(...l)];case"createPartialImageData":const a=await cs(...l),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const d of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${u}`)}}
