import{u as Mr,a as Tr,b as $r,c as Hr,d as Lr,e as Wr,f as Xr,g as Yr,h as Br,i as Gr,j as Jr,k as Qr,l as Zr,m as ta,n as ea,p as sa,o as ra,q as aa,r as na,s as oa}from"./index-25a52593.js";Mr();Jr();Qr();Tr();$r();Zr();ta();ea();sa();Hr();Lr();Wr();Xr();ra();oa();Yr();aa();Br();Gr();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},r={},b={},W={},X={},Y={},B={},p={},h={},s={},G={},J={},y={},a={},Q={},Z={},tt={},et={},st={},rt={},at={},U={},z={},nt={},q={},V={},ot={},it={},j={},ct={},ut={},yt={},mt={},lt={},bt={},gt={},pt={},Ot={},P={},ft={},jt={},Pt={},x={},St={},C={},l={},S={},I={},vt={},zt={},E={},ht={},K={},dt={},N={},_={},k={},Rt={},It={},L={},kt={},qt={},xt={},We={},Ct={},f={},Et={},Xe={},Kt={},Ye={},Nt={},Be={},_t={},Ge={},Je={},Dt={},Ft={},Qe={},Mt={},Ze={},Tt={},ts={},$t={},es={},ss={},Ht={},Lt={},rs={},Wt={},as={},Xt={},ns={},Yt={},os={},is={},Bt={},Gt={},cs={},Jt={},us={},Qt={},ys={},Zt={},ms={},ls={},te={},ee={},bs={},se={},gs={},re={},ps={},ae={},Os={},fs={},ne={},oe={},js={},ie={},Ss={},ce={},zs={},ue={},hs={},ds={},D={},ws={},F={},As={},M={},Us={},Vs={},ye={},Ps={},me={},le={},be={},ge={},vs={},pe={},Rs={},Is={},Oe={},fe={},ks={},je={},qs={},Se={},xs={},ze={},Cs={},Es={},he={},de={},Ks={},we={},Ns={},Ae={},_s={},Ue={},Ds={},Fs={},Ve={},Pe={},ve={},Re={},Ie={},ke={},qe={},xe={},Ce={},Ms={},wt={},Ts={},$s={},Ee={},Hs={},Ke={},Ls={},Ws={},Xs={},Ys={},Bs={},Gs={},Js={},Qs={},Zs={},tr={},er={},sr={},rr={},ar={},nr={},Ne={},or={},ir={},_e={},cr={},De={},ur={},yr={},mr={},lr={},br={},gr={},pr={},Fe={},Or={},fr={},jr={},Sr={},zr={},hr={},dr={},wr={},Ar={},Ur={},Me={},Vr={},Pr={},vr={},Rr={},Ir={},kr={},qr={},xr={},Cr={},Er={},ia=new Uint8Array,ca=new Uint8Array,ua=new Uint8Array([0,0,0,0,0,0,0,0]),ya=new Uint8Array,ma=new Uint8Array([0,0,0,0,0,64,143,64]),la=new Uint8Array,ba=new Uint8Array([0,0,0,0,0,0,89,64]),ga=new Uint8Array([244,6,0,1]),pa=new Uint8Array([84,111,112,32,82,111,108,108,32,82,97,100,105,117,115,0]),Oa=new Uint8Array,fa=new Uint8Array,ja=new Uint8Array([0,0,0,0,0,0,0,0]),Sa=new Uint8Array,za=new Uint8Array([0,0,0,0,0,64,143,64]),ha=new Uint8Array,da=new Uint8Array([0,0,0,0,0,0,89,64]),wa=new Uint8Array([8,7,0,1]),Aa=new Uint8Array([66,111,116,116,111,109,32,82,111,108,108,32,82,97,100,105,117,115,0]),Ua=new Uint8Array,Va=new Uint8Array,Pa=new Uint8Array([0,0,0,0,0,0,0,0]),va=new Uint8Array,Ra=new Uint8Array([0,0,0,0,0,64,143,64]),Ia=new Uint8Array,ka=new Uint8Array([0,0,0,0,0,64,127,64]),qa=new Uint8Array([44,7,0,1]),xa=new Uint8Array([82,111,108,108,32,72,101,105,103,104,116,0]),Ca=new Uint8Array,Ea=new Uint8Array,Ka=new Uint8Array([0,0,0,0,0,0,0,0]),Na=new Uint8Array,_a=new Uint8Array([0,0,0,0,0,64,143,64]),Da=new Uint8Array,Fa=new Uint8Array([0,0,0,0,0,0,0,0]),Ma=new Uint8Array([60,7,0,1]),Ta=new Uint8Array([82,111,108,108,32,79,102,102,115,101,116,32,89,0]),$a=new Uint8Array,Ha=new Uint8Array,La=new Uint8Array([0,0,0,0,0,0,0,0]),Wa=new Uint8Array,Xa=new Uint8Array([0,0,0,0,0,64,143,64]),Ya=new Uint8Array,Ba=new Uint8Array([0,0,0,0,0,64,127,64]),Ga=new Uint8Array([80,7,0,1]),Ja=new Uint8Array([82,111,108,108,32,87,105,100,116,104,0]),Qa=new Uint8Array,Za=new Uint8Array,tn=new Uint8Array([0,0,0,0,0,0,0,0]),en=new Uint8Array,sn=new Uint8Array([0,0,0,0,0,64,143,64]),rn=new Uint8Array,an=new Uint8Array([0,0,0,0,0,0,0,0]),nn=new Uint8Array([96,7,0,1]),on=new Uint8Array([82,111,108,108,32,79,102,102,115,101,116,32,88,0]),cn=new Uint8Array,un=new Uint8Array([0,0,0,0,0,0,0,0]),yn=new Uint8Array,mn=new Uint8Array([0,0,0,0,0,0,0,0]),ln=new Uint8Array,bn=new Uint8Array([0,0,0,0,0,0,0,0]),gn=new Uint8Array,pn=new Uint8Array,On=new Uint8Array,fn=new Uint8Array,jn=new Uint8Array([116,7,0,1]),Sn=new Uint8Array([99,111,108,111,114,82,71,66,0]),zn=new Uint8Array([132,7,0,1]),hn=new Uint8Array([70,111,103,32,67,111,108,111,117,114,0]),dn=new Uint8Array,wn=new Uint8Array,An=new Uint8Array([0,0,0,0,0,0,0,0]),Un=new Uint8Array,Vn=new Uint8Array([0,0,0,0,0,0,36,64]),Pn=new Uint8Array,vn=new Uint8Array([0,0,0,0,0,0,240,63]),Rn=new Uint8Array([164,7,0,1]),In=new Uint8Array([70,111,103,32,73,110,102,108,117,101,110,99,101,0]),kn=new Uint8Array,qn=new Uint8Array,xn=new Uint8Array([0,0,0,0,0,0,0,0]),Cn=new Uint8Array,En=new Uint8Array([0,0,0,0,0,0,36,64]),Kn=new Uint8Array,Nn=new Uint8Array([0,0,0,0,0,0,240,63]),_n=new Uint8Array([184,7,0,1]),Dn=new Uint8Array([70,97,100,101,0]),Fn=new Uint8Array,Mn=new Uint8Array,Tn=new Uint8Array,$n=new Uint8Array,Hn=new Uint8Array,Ln=new Uint8Array,Wn=new Uint8Array,Xn=new Uint8Array,Yn=new Uint8Array,Bn=new Uint8Array,Gn=new Uint8Array([4]),Jn=new Uint8Array,Qn=new Uint8Array,Zn=new Uint8Array([246,4,0,1]),to=new Uint8Array([119,119,119,46,116,98,121,114,110,101,46,111,114,103,0]),eo=new Uint8Array([16,5,0,1]),so=new Uint8Array([84,111,109,32,66,121,114,110,101,0]),ro=new Uint8Array,ao=new Uint8Array([1]),no=new Uint8Array,oo=new Uint8Array,io=new Uint8Array,co=new Uint8Array([0]),uo=new Uint8Array([1]),Kr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),yo=new Uint8Array,mo=new Uint8Array,lo=new Uint8Array,bo=new Uint8Array,go=new Uint8Array([4]),Te=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Nr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),po=new Uint8Array,Oo=new Uint8Array,fo=new Uint8Array,jo=new Uint8Array,So=new Uint8Array([4]),$e=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),zo=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,66,0,0,200,66,0,0,250,67,0,0,0,0,0,0,250,67,0,0,0,0,0,0,128,63,0,0,128,63]),ho=new Uint8Array([27,0]),wo=new Uint8Array,Ao=new Uint8Array,Uo=new Uint8Array,Vo=new Uint8Array;Object.assign(We,{slots:{0:Ct,1:Et,2:Kt,3:Nt,4:_t}});Object.assign(Ct,{structure:r,memory:{array:ia},slots:{0:f}});Object.assign(f,{structure:y});Object.assign(Et,{structure:s,memory:{array:ca},slots:{0:Xe}});Object.assign(Xe,{structure:a,memory:{array:ua}});Object.assign(Kt,{structure:s,memory:{array:ya},slots:{0:Ye}});Object.assign(Ye,{structure:a,memory:{array:ma}});Object.assign(Nt,{structure:s,memory:{array:la},slots:{0:Be}});Object.assign(Be,{structure:a,memory:{array:ba}});Object.assign(_t,{structure:J,memory:{array:ga},slots:{0:Ge}});Object.assign(Ge,{structure:G,memory:{array:pa},reloc:16778996,const:!0});Object.assign(Je,{slots:{0:Dt,1:Ft,2:Mt,3:Tt,4:$t}});Object.assign(Dt,{structure:r,memory:{array:Oa},slots:{0:f}});Object.assign(Ft,{structure:s,memory:{array:fa},slots:{0:Qe}});Object.assign(Qe,{structure:a,memory:{array:ja}});Object.assign(Mt,{structure:s,memory:{array:Sa},slots:{0:Ze}});Object.assign(Ze,{structure:a,memory:{array:za}});Object.assign(Tt,{structure:s,memory:{array:ha},slots:{0:ts}});Object.assign(ts,{structure:a,memory:{array:da}});Object.assign($t,{structure:tt,memory:{array:wa},slots:{0:es}});Object.assign(es,{structure:Z,memory:{array:Aa},reloc:16779016,const:!0});Object.assign(ss,{slots:{0:Ht,1:Lt,2:Wt,3:Xt,4:Yt}});Object.assign(Ht,{structure:r,memory:{array:Ua},slots:{0:f}});Object.assign(Lt,{structure:s,memory:{array:Va},slots:{0:rs}});Object.assign(rs,{structure:a,memory:{array:Pa}});Object.assign(Wt,{structure:s,memory:{array:va},slots:{0:as}});Object.assign(as,{structure:a,memory:{array:Ra}});Object.assign(Xt,{structure:s,memory:{array:Ia},slots:{0:ns}});Object.assign(ns,{structure:a,memory:{array:ka}});Object.assign(Yt,{structure:rt,memory:{array:qa},slots:{0:os}});Object.assign(os,{structure:st,memory:{array:xa},reloc:16779052,const:!0});Object.assign(is,{slots:{0:Bt,1:Gt,2:Jt,3:Qt,4:Zt}});Object.assign(Bt,{structure:r,memory:{array:Ca},slots:{0:f}});Object.assign(Gt,{structure:s,memory:{array:Ea},slots:{0:cs}});Object.assign(cs,{structure:a,memory:{array:Ka}});Object.assign(Jt,{structure:s,memory:{array:Na},slots:{0:us}});Object.assign(us,{structure:a,memory:{array:_a}});Object.assign(Qt,{structure:s,memory:{array:Da},slots:{0:ys}});Object.assign(ys,{structure:a,memory:{array:Fa}});Object.assign(Zt,{structure:z,memory:{array:Ma},slots:{0:ms}});Object.assign(ms,{structure:U,memory:{array:Ta},reloc:16779068,const:!0});Object.assign(ls,{slots:{0:te,1:ee,2:se,3:re,4:ae}});Object.assign(te,{structure:r,memory:{array:$a},slots:{0:f}});Object.assign(ee,{structure:s,memory:{array:Ha},slots:{0:bs}});Object.assign(bs,{structure:a,memory:{array:La}});Object.assign(se,{structure:s,memory:{array:Wa},slots:{0:gs}});Object.assign(gs,{structure:a,memory:{array:Xa}});Object.assign(re,{structure:s,memory:{array:Ya},slots:{0:ps}});Object.assign(ps,{structure:a,memory:{array:Ba}});Object.assign(ae,{structure:V,memory:{array:Ga},slots:{0:Os}});Object.assign(Os,{structure:q,memory:{array:Ja},reloc:16779088,const:!0});Object.assign(fs,{slots:{0:ne,1:oe,2:ie,3:ce,4:ue}});Object.assign(ne,{structure:r,memory:{array:Qa},slots:{0:f}});Object.assign(oe,{structure:s,memory:{array:Za},slots:{0:js}});Object.assign(js,{structure:a,memory:{array:tn}});Object.assign(ie,{structure:s,memory:{array:en},slots:{0:Ss}});Object.assign(Ss,{structure:a,memory:{array:sn}});Object.assign(ce,{structure:s,memory:{array:rn},slots:{0:zs}});Object.assign(zs,{structure:a,memory:{array:an}});Object.assign(ue,{structure:z,memory:{array:nn},slots:{0:hs}});Object.assign(hs,{structure:U,memory:{array:on},reloc:16779104,const:!0});Object.assign(ds,{slots:{0:D,1:F,2:M}});Object.assign(D,{structure:s,memory:{array:cn},slots:{0:ws}});Object.assign(ws,{structure:a,memory:{array:un}});Object.assign(F,{structure:s,memory:{array:yn},slots:{0:As}});Object.assign(As,{structure:a,memory:{array:mn}});Object.assign(M,{structure:s,memory:{array:ln},slots:{0:Us}});Object.assign(Us,{structure:a,memory:{array:bn}});Object.assign(Vs,{slots:{0:ye,1:me,2:le,3:be,4:ge,5:pe}});Object.assign(ye,{structure:r,memory:{array:gn},slots:{0:Ps}});Object.assign(Ps,{structure:yt});Object.assign(me,{structure:j,memory:{array:pn},slots:{0:D,1:F,2:M}});Object.assign(le,{structure:j,memory:{array:On},slots:{0:D,1:F,2:M}});Object.assign(be,{structure:j,memory:{array:fn},slots:{0:D,1:F,2:M}});Object.assign(ge,{structure:ut,memory:{array:jn},slots:{0:vs}});Object.assign(vs,{structure:ct,memory:{array:Sn},reloc:16779124,const:!0});Object.assign(pe,{structure:V,memory:{array:zn},slots:{0:Rs}});Object.assign(Rs,{structure:q,memory:{array:hn},reloc:16779140,const:!0});Object.assign(Is,{slots:{0:Oe,1:fe,2:je,3:Se,4:ze}});Object.assign(Oe,{structure:r,memory:{array:dn},slots:{0:f}});Object.assign(fe,{structure:s,memory:{array:wn},slots:{0:ks}});Object.assign(ks,{structure:a,memory:{array:An}});Object.assign(je,{structure:s,memory:{array:Un},slots:{0:qs}});Object.assign(qs,{structure:a,memory:{array:Vn}});Object.assign(Se,{structure:s,memory:{array:Pn},slots:{0:xs}});Object.assign(xs,{structure:a,memory:{array:vn}});Object.assign(ze,{structure:z,memory:{array:Rn},slots:{0:Cs}});Object.assign(Cs,{structure:U,memory:{array:In},reloc:16779172,const:!0});Object.assign(Es,{slots:{0:he,1:de,2:we,3:Ae,4:Ue}});Object.assign(he,{structure:r,memory:{array:kn},slots:{0:f}});Object.assign(de,{structure:s,memory:{array:qn},slots:{0:Ks}});Object.assign(Ks,{structure:a,memory:{array:xn}});Object.assign(we,{structure:s,memory:{array:Cn},slots:{0:Ns}});Object.assign(Ns,{structure:a,memory:{array:En}});Object.assign(Ae,{structure:s,memory:{array:Kn},slots:{0:_s}});Object.assign(_s,{structure:a,memory:{array:Nn}});Object.assign(Ue,{structure:gt,memory:{array:_n},slots:{0:Ds}});Object.assign(Ds,{structure:bt,memory:{array:Dn},reloc:16779192,const:!0});Object.assign(Fs,{slots:{0:Ve,1:Pe,2:ve,3:Re,4:Ie,5:ke,6:qe,7:xe,8:Ce}});Object.assign(Ve,{structure:Q,memory:{array:Fn},slots:{0:Ct,1:Et,2:Kt,3:Nt,4:_t}});Object.assign(Pe,{structure:et,memory:{array:Mn},slots:{0:Dt,1:Ft,2:Mt,3:Tt,4:$t}});Object.assign(ve,{structure:at,memory:{array:Tn},slots:{0:Ht,1:Lt,2:Wt,3:Xt,4:Yt}});Object.assign(Re,{structure:nt,memory:{array:$n},slots:{0:Bt,1:Gt,2:Jt,3:Qt,4:Zt}});Object.assign(Ie,{structure:ot,memory:{array:Hn},slots:{0:te,1:ee,2:se,3:re,4:ae}});Object.assign(ke,{structure:it,memory:{array:Ln},slots:{0:ne,1:oe,2:ie,3:ce,4:ue}});Object.assign(qe,{structure:mt,memory:{array:Wn},slots:{0:ye,1:me,2:le,3:be,4:ge,5:pe}});Object.assign(xe,{structure:lt,memory:{array:Xn},slots:{0:Oe,1:fe,2:je,3:Se,4:ze}});Object.assign(Ce,{structure:pt,memory:{array:Yn},slots:{0:he,1:de,2:we,3:Ae,4:Ue}});Object.assign(Ms,{slots:{0:wt}});Object.assign(wt,{structure:p,memory:{array:Bn},slots:{0:Ts}});Object.assign(Ts,{structure:h,memory:{array:Gn}});Object.assign($s,{slots:{0:Ee}});Object.assign(Ee,{structure:P,memory:{array:Jn},slots:{0:wt}});Object.assign(Hs,{slots:{0:Ke}});Object.assign(Ke,{structure:P,memory:{array:Qn},slots:{0:wt}});Object.assign(Ls,{slots:{0:Ws,1:Ys,2:Gs,3:Qs,4:Zs,5:tr}});Object.assign(Ws,{structure:X,memory:{array:Zn},slots:{0:Xs}});Object.assign(Xs,{structure:W,memory:{array:to},reloc:16778486,const:!0});Object.assign(Ys,{structure:B,memory:{array:eo},slots:{0:Bs}});Object.assign(Bs,{structure:Y,memory:{array:so},reloc:16778512,const:!0});Object.assign(Gs,{structure:p,memory:{array:ro},slots:{0:Js}});Object.assign(Js,{structure:h,memory:{array:ao}});Object.assign(Qs,{structure:Ot,memory:{array:no},slots:{0:Ve,1:Pe,2:ve,3:Re,4:Ie,5:ke,6:qe,7:xe,8:Ce}});Object.assign(Zs,{structure:ft,memory:{array:oo},slots:{0:Ee}});Object.assign(tr,{structure:jt,memory:{array:io},slots:{0:Ke}});Object.assign(er,{slots:{0:sr,1:rr}});Object.assign(sr,{structure:S,memory:{array:co}});Object.assign(rr,{structure:S,memory:{array:uo}});Object.assign(ar,{memory:{array:Kr},slots:{0:nr}});Object.assign(nr,{structure:C,memory:{array:Kr,offset:0,length:8},slots:{0:Ne}});Object.assign(Ne,{structure:St,memory:{array:yo},reloc:0,const:!0});Object.assign(or,{slots:{0:ir,1:cr,2:ur}});Object.assign(ir,{structure:r,memory:{array:mo},slots:{0:_e}});Object.assign(_e,{structure:x});Object.assign(cr,{structure:r,memory:{array:lo},slots:{0:De}});Object.assign(De,{structure:vt});Object.assign(ur,{structure:p,memory:{array:bo},slots:{0:yr}});Object.assign(yr,{structure:h,memory:{array:go}});Object.assign(mr,{memory:{array:Te},slots:{0:lr}});Object.assign(lr,{structure:zt,memory:{array:Te},slots:{0:br}});Object.assign(br,{structure:C,memory:{array:Te,offset:0,length:8},slots:{0:Ne}});Object.assign(gr,{memory:{array:Nr},slots:{0:pr}});Object.assign(pr,{structure:K,memory:{array:Nr,offset:0,length:8},slots:{0:Fe}});Object.assign(Fe,{structure:ht,memory:{array:po},reloc:0});Object.assign(Or,{slots:{0:fr,1:jr,2:Sr}});Object.assign(fr,{structure:r,memory:{array:Oo},slots:{0:_e}});Object.assign(jr,{structure:r,memory:{array:fo},slots:{0:De}});Object.assign(Sr,{structure:p,memory:{array:jo},slots:{0:zr}});Object.assign(zr,{structure:h,memory:{array:So}});Object.assign(hr,{memory:{array:$e},slots:{0:dr}});Object.assign(dr,{structure:dt,memory:{array:$e},slots:{0:wr}});Object.assign(wr,{structure:K,memory:{array:$e,offset:0,length:8},slots:{0:Fe}});Object.assign(Ar,{memory:{array:zo}});Object.assign(Ur,{slots:{0:Me}});Object.assign(Me,{structure:k,memory:{array:ho}});Object.assign(Vr,{slots:{0:Me}});Object.assign(Pr,{slots:{0:vr,1:Ir,2:qr,3:Cr}});Object.assign(vr,{structure:r,memory:{array:wo},slots:{0:Rr}});Object.assign(Rr,{structure:Pt});Object.assign(Ir,{structure:r,memory:{array:Ao},slots:{0:kr}});Object.assign(kr,{structure:E});Object.assign(qr,{structure:r,memory:{array:Uo},slots:{0:xr}});Object.assign(xr,{structure:N});Object.assign(Cr,{structure:r,memory:{array:Vo},slots:{0:Er}});Object.assign(Er,{structure:_});const Po={argStruct:It,thunkId:2,name:"createOutput"},vo={argStruct:qt,thunkId:3,name:"createPartialOutput"};Object.assign(r,{...e,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(b,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:b}],methods:[]}});Object.assign(W,{...e,type:1,name:"[14:0]u8",length:14,byteSize:15,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:b}],methods:[]}});Object.assign(X,{...e,type:13,name:"*const [14:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[]}});Object.assign(Y,{...e,type:1,name:"[9:0]u8",length:9,byteSize:10,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:b}],methods:[]}});Object.assign(B,{...e,type:13,name:"*const [9:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[]}});Object.assign(p,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:p}],methods:[]}});Object.assign(h,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:h}],methods:[]}});Object.assign(s,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(G,{...e,type:1,name:"[15:0]u8",length:15,byteSize:16,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:b}],methods:[]}});Object.assign(J,{...e,type:13,name:"*const [15:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:G}],methods:[]}});Object.assign(y,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[]}});Object.assign(a,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:a}],methods:[]}});Object.assign(Q,{...e,type:2,name:"Struct972942755",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:s},{...t,type:9,slot:2,name:"maxValue",structure:s},{...t,type:9,slot:3,name:"defaultValue",structure:s},{...t,type:9,slot:4,name:"displayName",structure:J}],methods:[],template:We}});Object.assign(Z,{...e,type:1,name:"[18:0]u8",length:18,byteSize:19,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:b}],methods:[]}});Object.assign(tt,{...e,type:13,name:"*const [18:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[]}});Object.assign(et,{...e,type:2,name:"Struct1082333680",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:s},{...t,type:9,slot:2,name:"maxValue",structure:s},{...t,type:9,slot:3,name:"defaultValue",structure:s},{...t,type:9,slot:4,name:"displayName",structure:tt}],methods:[],template:Je}});Object.assign(st,{...e,type:1,name:"[11:0]u8",length:11,byteSize:12,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:b}],methods:[]}});Object.assign(rt,{...e,type:13,name:"*const [11:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:st}],methods:[]}});Object.assign(at,{...e,type:2,name:"Struct2671915373",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:s},{...t,type:9,slot:2,name:"maxValue",structure:s},{...t,type:9,slot:3,name:"defaultValue",structure:s},{...t,type:9,slot:4,name:"displayName",structure:rt}],methods:[],template:ss}});Object.assign(U,{...e,type:1,name:"[13:0]u8",length:13,byteSize:14,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:b}],methods:[]}});Object.assign(z,{...e,type:13,name:"*const [13:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:U}],methods:[]}});Object.assign(nt,{...e,type:2,name:"Struct211694407",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:s},{...t,type:9,slot:2,name:"maxValue",structure:s},{...t,type:9,slot:3,name:"defaultValue",structure:s},{...t,type:9,slot:4,name:"displayName",structure:z}],methods:[],template:is}});Object.assign(q,{...e,type:1,name:"[10:0]u8",length:10,byteSize:11,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:b}],methods:[]}});Object.assign(V,{...e,type:13,name:"*const [10:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:q}],methods:[]}});Object.assign(ot,{...e,type:2,name:"Struct2176326679",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:s},{...t,type:9,slot:2,name:"maxValue",structure:s},{...t,type:9,slot:3,name:"defaultValue",structure:s},{...t,type:9,slot:4,name:"displayName",structure:V}],methods:[],template:ls}});Object.assign(it,{...e,type:2,name:"Struct1717299855",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:s},{...t,type:9,slot:2,name:"maxValue",structure:s},{...t,type:9,slot:3,name:"defaultValue",structure:s},{...t,type:9,slot:4,name:"displayName",structure:z}],methods:[],template:fs}});Object.assign(j,{...e,type:2,name:"Struct4174069246",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:s},{...t,type:9,slot:1,name:"1",structure:s},{...t,type:9,slot:2,name:"2",structure:s}],methods:[],template:ds}});Object.assign(ct,{...e,type:1,name:"[8:0]u8",length:8,byteSize:9,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:b}],methods:[]}});Object.assign(ut,{...e,type:13,name:"*const [8:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:ct}],methods:[]}});Object.assign(yt,{...e,type:15,name:"@Vector(3, f32)",length:3,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:y}],methods:[]}});Object.assign(mt,{...e,type:2,name:"Struct1897161641",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:j},{...t,type:9,slot:2,name:"maxValue",structure:j},{...t,type:9,slot:3,name:"defaultValue",structure:j},{...t,type:9,slot:4,name:"parameterType",structure:ut},{...t,type:9,slot:5,name:"displayName",structure:V}],methods:[],template:Vs}});Object.assign(lt,{...e,type:2,name:"Struct1832619012",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:s},{...t,type:9,slot:2,name:"maxValue",structure:s},{...t,type:9,slot:3,name:"defaultValue",structure:s},{...t,type:9,slot:4,name:"displayName",structure:z}],methods:[],template:Is}});Object.assign(bt,{...e,type:1,name:"[4:0]u8",length:4,byteSize:5,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:b}],methods:[]}});Object.assign(gt,{...e,type:13,name:"*const [4:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:bt}],methods:[]}});Object.assign(pt,{...e,type:2,name:"Struct3341956269",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:s},{...t,type:9,slot:2,name:"maxValue",structure:s},{...t,type:9,slot:3,name:"defaultValue",structure:s},{...t,type:9,slot:4,name:"displayName",structure:gt}],methods:[],template:Es}});Object.assign(Ot,{...e,type:2,name:"Struct66982406",align:1,instance:{members:[{...t,type:9,slot:0,name:"topRollRadius",structure:Q},{...t,type:9,slot:1,name:"bottomRollRadius",structure:et},{...t,type:9,slot:2,name:"rollHeight",structure:at},{...t,type:9,slot:3,name:"rollOffsetY",structure:nt},{...t,type:9,slot:4,name:"rollWidth",structure:ot},{...t,type:9,slot:5,name:"rollOffsetX",structure:it},{...t,type:9,slot:6,name:"fogColour",structure:mt},{...t,type:9,slot:7,name:"fogInfluence",structure:lt},{...t,type:9,slot:8,name:"fade",structure:pt}],methods:[],template:Fs}});Object.assign(P,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:p}],methods:[],template:Ms}});Object.assign(ft,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:9,slot:0,name:"src",structure:P}],methods:[],template:$s}});Object.assign(jt,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:9,slot:0,name:"dst",structure:P}],methods:[],template:Hs}});Object.assign(Pt,{...e,type:2,name:"vertical-scroll.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:X},{...t,type:9,slot:1,name:"vendor",structure:B},{...t,type:9,slot:2,name:"version",structure:p},{...t,type:9,slot:3,name:"parameters",structure:Ot},{...t,type:9,slot:4,name:"inputImages",structure:ft},{...t,type:9,slot:5,name:"outputImages",structure:jt}],methods:[],template:Ls}});Object.assign(x,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:b}],methods:[]}});Object.assign(St,{...e,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:x}],methods:[]}});Object.assign(C,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:St}],methods:[]}});Object.assign(l,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:l}],methods:[]}});Object.assign(S,{...e,type:11,name:"vertical-scroll.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:S},{...t,type:9,slot:1,name:"display-p3",structure:S}],methods:[],template:er}});Object.assign(I,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(vt,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:y}],methods:[]}});Object.assign(zt,{...e,type:2,name:"vertical-scroll.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:C},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:S},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:I}],methods:[],template:ar},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:r},{...t,type:9,slot:1,name:"FPixel",structure:r},{...t,type:9,slot:2,name:"channels",structure:p}],methods:[],template:or}});Object.assign(E,{...e,type:2,name:"vertical-scroll.KernelInput(u8,vertical-scroll.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:zt}],methods:[],template:mr}});Object.assign(ht,{...e,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:x}],methods:[]}});Object.assign(K,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:ht}],methods:[]}});Object.assign(dt,{...e,type:2,name:"vertical-scroll.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:K},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:S},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:I}],methods:[],template:gr},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:r},{...t,type:9,slot:1,name:"FPixel",structure:r},{...t,type:9,slot:2,name:"channels",structure:p}],methods:[],template:Or}});Object.assign(N,{...e,type:2,name:"vertical-scroll.KernelOutput(u8,vertical-scroll.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:dt}],methods:[],template:hr}});Object.assign(_,{...e,type:2,name:"vertical-scroll.KernelParameters(vertical-scroll.kernel)",byteSize:48,align:16,instance:{members:[{...t,type:4,bitOffset:128,bitSize:32,byteSize:4,slot:1,name:"topRollRadius",structure:y},{...t,type:4,bitOffset:160,bitSize:32,byteSize:4,slot:2,name:"bottomRollRadius",structure:y},{...t,type:4,bitOffset:192,bitSize:32,byteSize:4,slot:3,name:"rollHeight",structure:y},{...t,type:4,bitOffset:224,bitSize:32,byteSize:4,slot:4,name:"rollOffsetY",structure:y},{...t,type:4,bitOffset:256,bitSize:32,byteSize:4,slot:5,name:"rollWidth",structure:y},{...t,type:4,bitOffset:288,bitSize:32,byteSize:4,slot:6,name:"rollOffsetX",structure:y},{...t,type:7,bitOffset:0,bitSize:96,byteSize:16,slot:0,name:"fogColour",structure:yt},{...t,type:4,bitOffset:320,bitSize:32,byteSize:4,slot:7,name:"fogInfluence",structure:y},{...t,type:4,bitOffset:352,bitSize:32,byteSize:4,slot:8,name:"fade",structure:y}],methods:[],template:Ar}});Object.assign(k,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(vertical-scroll.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:k}],methods:[],template:Ur}});Object.assign(Rt,{...e,type:9,name:"ErrorSet1571224981!vertical-scroll.KernelOutput(u8,vertical-scroll.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:N},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:k}],methods:[]}});Object.assign(It,{...e,type:5,name:"createOutput",byteSize:112,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:384,bitSize:32,byteSize:4,slot:3,name:"0",structure:l},{...t,type:3,isRequired:!0,bitOffset:416,bitSize:32,byteSize:4,slot:4,name:"1",structure:l},{...t,type:7,isRequired:!0,bitOffset:448,bitSize:192,byteSize:24,slot:0,name:"2",structure:E},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:384,byteSize:48,slot:1,name:"3",structure:_},{...t,type:7,isRequired:!0,bitOffset:640,bitSize:224,byteSize:28,slot:2,name:"retval",structure:Rt}],methods:[]}});Object.assign(L,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(vertical-scroll.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:L}],methods:[],template:Vr}});Object.assign(kt,{...e,type:9,name:"ErrorSet1573175008!vertical-scroll.KernelOutput(u8,vertical-scroll.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:N},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:L}],methods:[]}});Object.assign(qt,{...e,type:5,name:"createPartialOutput",byteSize:128,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:384,bitSize:32,byteSize:4,slot:3,name:"0",structure:l},{...t,type:3,isRequired:!0,bitOffset:416,bitSize:32,byteSize:4,slot:4,name:"1",structure:l},{...t,type:3,isRequired:!0,bitOffset:448,bitSize:32,byteSize:4,slot:5,name:"2",structure:l},{...t,type:3,isRequired:!0,bitOffset:480,bitSize:32,byteSize:4,slot:6,name:"3",structure:l},{...t,type:7,isRequired:!0,bitOffset:512,bitSize:192,byteSize:24,slot:0,name:"4",structure:E},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:384,byteSize:48,slot:1,name:"5",structure:_},{...t,type:7,isRequired:!0,bitOffset:704,bitSize:224,byteSize:28,slot:2,name:"retval",structure:kt}],methods:[]}});Object.assign(xt,{...e,type:2,name:"vertical-scroll",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:r},{...t,type:9,slot:1,name:"Input",structure:r},{...t,type:9,slot:2,name:"Output",structure:r},{...t,type:9,slot:3,name:"Parameters",structure:r}],methods:[Po,vo],template:Pr}});const Ro=[r,b,W,X,Y,B,p,h,s,G,J,y,a,Q,Z,tt,et,st,rt,at,U,z,nt,q,V,ot,it,j,ct,ut,yt,mt,lt,bt,gt,pt,Ot,P,ft,jt,Pt,x,St,C,l,S,I,vt,zt,E,ht,K,dt,N,_,k,Rt,It,L,kt,qt,xt],Io=xt,ko={runtimeSafety:!1,littleEndian:!0},At=na();At.getControlObject();At.recreateStructures(Ro,ko);const qo=(async()=>{const c=new URL("vertical-scroll-7b27a764.wasm",import.meta.url).href;return fetch(c)})();At.loadModule(qo);At.linkVariables(!0);const{constructor:xo}=Io,{createPartialOutput:Co,Input:Eo,kernel:Vt}=xo;function Ko(c,u,o,n,i={},d={}){const w=[];for(const[g]of Vt.inputImages)w.push(g);const v=[];for(const[g]of Vt.outputImages)v.push(g);if(Array.isArray(i)){const g=i;i={};for(const[O,A]of w.entries())i[A]=g[O]}const m=new Eo(void 0),T=[];let R;for(const g of w){let O=i[g];if(O||(w.length===1&&["data","width","height"].every(A=>!!i[A])?O=i:T.push(g)),m[g]=O,R){if(O.colorSpace!==R)throw new Error(`Input images must all use the same color space: ${R}`)}else R=O.colorSpace}if(T.length>0)throw new Error(`Missing input image${T.length>1?"s":""}: ${T.join(", ")}`);const Ut=Co(c,u,o,n,m,d),He=g=>{const O={};for(const A of v){const{data:{typedArray:$},width:Le,height:Dr}=g[A];let H;if(typeof ImageData=="function"){const Fr=new Uint8ClampedArray($.buffer,$.byteOffset,$.byteLength);H=new ImageData(Fr,Le,n,{colorSpace:R})}else H={data:$,width:Le,height:Dr};if(v.length===1)return H;O[A]=H}return O};return Ut[Symbol.toStringTag]==="Promise"?Ut.then(He):He(Ut)}function No(){const c={};for(let[u,o]of Vt){if(u==="parameters"){const n={};for(const[i,d]of o){const w=n[i]={};for(let[v,m]of d)typeof m=="object"?"string"in m?m=m.string:m=_r(m):typeof m=="function"&&(m=_o(m.name)),w[v]=m}o=n}else typeof o=="object"&&("string"in o?o=o.string:o=o.valueOf());c[u]=o}return c}function _r(c){const u=[];for(let[o,n]of c)typeof n=="object"&&(n=_r(n)),u[o]=n;return u}function _o(c){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[c]}onmessage=c=>{const[u,o,...n]=c.data;Do(u,n).then(([i,d])=>{postMessage([u,o,i],{transfer:d})}).catch(i=>{postMessage(["error",o,i])})};async function Do(c,u){switch(c){case"getKernelInfo":return[No(...u)];case"createPartialImageData":const n=await Ko(...u),i=[];if("data"in n&&"width"in n&&"height"in n)i.push(n.data.buffer);else for(const d of Object.entries(n))i.push(n.data.buffer);return[n,i];default:throw new Error(`Unknown function: ${c}`)}}
