import{u as vt,a as Et,b as xt,c as Kt,d as Ct,e as Mt,f as Dt,g as Ft,h as Tt,i as _t,j as $t,k as Lt,l as Bt,m as Gt,n as Ht,o as Jt,p as Nt,q as Qt}from"./index-33238b17.js";vt();Lt();Bt();Et();xt();Gt();Ht();Jt();Nt();Kt();Ct();Mt();Dt();Qt();Ft();Tt();_t();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},e={type:0,isRequired:!1},s={},p={},M={},D={},F={},T={},y={},f={},_={},$={},g={},d={},w={},L={},B={},A={},G={},H={},te={},R={},J={},k={},o={},l={},V={},se={},N={},q={},Q={},I={},W={},v={},E={},j={},re={},ne={},h={},ae={},ie={},oe={},we={},ce={},Ae={},ue={},Ue={},me={},Pe={},ye={},Ve={},Re={},be={},ke={},X={},qe={},Ie={},le={},ve={},ge={},Ee={},xe={},Ke={},Ce={},Me={},De={},Fe={},Te={},_e={},$e={},Le={},Be={},Ge={},He={},Je={},Ne={},Qe={},pe={},We={},Xe={},fe={},Ye={},Oe={},Ze={},et={},tt={},st={},rt={},nt={},at={},Se={},it={},ot={},ct={},ut={},mt={},yt={},bt={},lt={},gt={},pt={},ft={},Ot={},St={},zt={},jt={},ht={},dt={},wt={},At={},Ut={},Pt={},Vt={},Wt=new Uint8Array,Xt=new Uint8Array,Yt=new Uint8Array([0,0,0,0,0,0,0,0]),Zt=new Uint8Array,es=new Uint8Array([0,0,0,0,0,0,89,64]),ts=new Uint8Array,ss=new Uint8Array([0,0,0,0,0,0,16,64]),rs=new Uint8Array,ns=new Uint8Array,as=new Uint8Array([4]),is=new Uint8Array,os=new Uint8Array,cs=new Uint8Array([136,5,0,1]),us=new Uint8Array([112,98,50,122,105,103,0]),ms=new Uint8Array([154,5,0,1]),ys=new Uint8Array([67,104,117,110,103,32,76,101,111,110,103,0]),bs=new Uint8Array,ls=new Uint8Array([1]),gs=new Uint8Array([183,5,0,1]),ps=new Uint8Array([82,101,109,111,118,97,108,32,111,102,32,103,114,101,101,110,32,98,97,99,107,103,114,111,117,110,100,0]),fs=new Uint8Array,Os=new Uint8Array,Ss=new Uint8Array,zs=new Uint8Array([0]),js=new Uint8Array([1]),Rt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),hs=new Uint8Array,ds=new Uint8Array,ws=new Uint8Array,As=new Uint8Array,Us=new Uint8Array([4]),ze=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),kt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ps=new Uint8Array,Vs=new Uint8Array,Rs=new Uint8Array,ks=new Uint8Array,qs=new Uint8Array([4]),je=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Is=new Uint8Array([0,0,128,64]),vs=new Uint8Array([27,0]),Es=new Uint8Array([27,0]),xs=new Uint8Array,Ks=new Uint8Array,Cs=new Uint8Array,Ms=new Uint8Array;Object.assign(we,{slots:{0:ce,1:ue,2:me,3:ye}});Object.assign(ce,{structure:s,memory:{array:Wt},const:!0,slots:{0:Ae}});Object.assign(Ae,{structure:d});Object.assign(ue,{structure:g,memory:{array:Xt},const:!0,slots:{0:Ue}});Object.assign(Ue,{structure:w,memory:{array:Yt},const:!0});Object.assign(me,{structure:g,memory:{array:Zt},const:!0,slots:{0:Pe}});Object.assign(Pe,{structure:w,memory:{array:es},const:!0});Object.assign(ye,{structure:g,memory:{array:ts},const:!0,slots:{0:Ve}});Object.assign(Ve,{structure:w,memory:{array:ss},const:!0});Object.assign(Re,{slots:{0:be}});Object.assign(be,{structure:L,memory:{array:rs},const:!0,slots:{0:ce,1:ue,2:me,3:ye}});Object.assign(ke,{slots:{0:X}});Object.assign(X,{structure:y,memory:{array:ns},const:!0,slots:{0:qe}});Object.assign(qe,{structure:f,memory:{array:as},const:!0});Object.assign(Ie,{slots:{0:le}});Object.assign(le,{structure:A,memory:{array:is},const:!0,slots:{0:X}});Object.assign(ve,{slots:{0:ge}});Object.assign(ge,{structure:A,memory:{array:os},const:!0,slots:{0:X}});Object.assign(Ee,{slots:{0:xe,1:Ce,2:De,3:Te,4:$e,5:Le,6:Be}});Object.assign(xe,{structure:D,memory:{array:cs},const:!0,slots:{0:Ke}});Object.assign(Ke,{structure:M,memory:{array:us},reloc:16778632});Object.assign(Ce,{structure:T,memory:{array:ms},const:!0,slots:{0:Me}});Object.assign(Me,{structure:F,memory:{array:ys},reloc:16778650});Object.assign(De,{structure:y,memory:{array:bs},const:!0,slots:{0:Fe}});Object.assign(Fe,{structure:f,memory:{array:ls},const:!0});Object.assign(Te,{structure:$,memory:{array:gs},const:!0,slots:{0:_e}});Object.assign(_e,{structure:_,memory:{array:ps},reloc:16778679});Object.assign($e,{structure:B,memory:{array:fs},const:!0,slots:{0:be}});Object.assign(Le,{structure:G,memory:{array:Os},const:!0,slots:{0:le}});Object.assign(Be,{structure:H,memory:{array:Ss},const:!0,slots:{0:ge}});Object.assign(Ge,{slots:{0:He,1:Je}});Object.assign(He,{structure:l,memory:{array:zs},const:!0});Object.assign(Je,{structure:l,memory:{array:js},const:!0});Object.assign(Ne,{memory:{array:Rt},slots:{0:Qe}});Object.assign(Qe,{structure:k,memory:{array:Rt,offset:0,length:8},slots:{0:pe}});Object.assign(pe,{structure:J,memory:{array:hs},reloc:0});Object.assign(We,{slots:{0:Xe,1:Ye,2:Ze}});Object.assign(Xe,{structure:s,memory:{array:ds},const:!0,slots:{0:fe}});Object.assign(fe,{structure:R});Object.assign(Ye,{structure:s,memory:{array:ws},const:!0,slots:{0:Oe}});Object.assign(Oe,{structure:se});Object.assign(Ze,{structure:y,memory:{array:As},const:!0,slots:{0:et}});Object.assign(et,{structure:f,memory:{array:Us},const:!0});Object.assign(tt,{memory:{array:ze},slots:{0:st}});Object.assign(st,{structure:N,memory:{array:ze},slots:{0:rt}});Object.assign(rt,{structure:k,memory:{array:ze,offset:0,length:8},slots:{0:pe}});Object.assign(nt,{memory:{array:kt},slots:{0:at}});Object.assign(at,{structure:I,memory:{array:kt,offset:0,length:8},slots:{0:Se}});Object.assign(Se,{structure:Q,memory:{array:Ps},reloc:0});Object.assign(it,{slots:{0:ot,1:ct,2:ut}});Object.assign(ot,{structure:s,memory:{array:Vs},const:!0,slots:{0:fe}});Object.assign(ct,{structure:s,memory:{array:Rs},const:!0,slots:{0:Oe}});Object.assign(ut,{structure:y,memory:{array:ks},const:!0,slots:{0:mt}});Object.assign(mt,{structure:f,memory:{array:qs},const:!0});Object.assign(yt,{memory:{array:je},slots:{0:bt}});Object.assign(bt,{structure:W,memory:{array:je},slots:{0:lt}});Object.assign(lt,{structure:I,memory:{array:je,offset:0,length:8},slots:{0:Se}});Object.assign(gt,{memory:{array:Is}});Object.assign(pt,{slots:{0:ft}});Object.assign(ft,{structure:j,memory:{array:vs},const:!0});Object.assign(Ot,{slots:{0:St}});Object.assign(St,{structure:h,memory:{array:Es},const:!0});Object.assign(zt,{slots:{0:jt,1:dt,2:At,3:Pt}});Object.assign(jt,{structure:s,memory:{array:xs},const:!0,slots:{0:ht}});Object.assign(ht,{structure:te});Object.assign(dt,{structure:s,memory:{array:Ks},const:!0,slots:{0:wt}});Object.assign(wt,{structure:q});Object.assign(At,{structure:s,memory:{array:Cs},const:!0,slots:{0:Ut}});Object.assign(Ut,{structure:v});Object.assign(Pt,{structure:s,memory:{array:Ms},const:!0,slots:{0:Vt}});Object.assign(Vt,{structure:E});const Ds={argStruct:ne,thunkId:2,name:"createOutput"},Fs={argStruct:ie,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...t,name:"type",align:1,instance:{members:[{...e,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(p,{...t,name:"u8",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(M,{...t,type:1,name:"[6:0]u8",length:6,byteSize:7,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(D,{...t,type:13,name:"*const [6:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(F,{...t,type:1,name:"[11:0]u8",length:11,byteSize:12,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(T,{...t,type:13,name:"*const [11:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(y,{...t,name:"comptime_int",align:1,instance:{members:[{...e,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:y}],methods:[]}});Object.assign(f,{...t,name:"i8",byteSize:1,align:1,instance:{members:[{...e,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(_,{...t,type:1,name:"[27:0]u8",length:27,byteSize:28,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign($,{...t,type:13,name:"*const [27:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[]}});Object.assign(g,{...t,name:"comptime_float",align:1,instance:{members:[{...e,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:g}],methods:[]}});Object.assign(d,{...t,name:"f32",byteSize:4,align:4,instance:{members:[{...e,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:d}],methods:[]}});Object.assign(w,{...t,name:"f64",byteSize:8,align:8,instance:{members:[{...e,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:w}],methods:[]}});Object.assign(L,{...t,type:2,name:"Struct4116658537",align:1,instance:{members:[{...e,type:7,slot:0,name:"type",structure:s},{...e,type:7,slot:1,name:"minValue",structure:g},{...e,type:7,slot:2,name:"maxValue",structure:g},{...e,type:7,slot:3,name:"defaultValue",structure:g}],methods:[],template:we}});Object.assign(B,{...t,type:2,name:"Struct233136554",align:1,instance:{members:[{...e,type:7,slot:0,name:"strength",structure:L}],methods:[],template:Re}});Object.assign(A,{...t,type:2,name:"Struct3832472641",align:1,instance:{members:[{...e,type:7,slot:0,name:"channels",structure:y}],methods:[],template:ke}});Object.assign(G,{...t,type:2,name:"Struct2242867897",align:1,instance:{members:[{...e,type:7,slot:0,name:"src",structure:A}],methods:[],template:Ie}});Object.assign(H,{...t,type:2,name:"Struct172100005",align:1,instance:{members:[{...e,type:7,slot:0,name:"dst",structure:A}],methods:[],template:ve}});Object.assign(te,{...t,type:2,name:"green-screen.kernel",align:1,static:{members:[{...e,type:7,slot:0,name:"namespace",structure:D},{...e,type:7,slot:1,name:"vendor",structure:T},{...e,type:7,slot:2,name:"version",structure:y},{...e,type:7,slot:3,name:"description",structure:$},{...e,type:7,slot:4,name:"parameters",structure:B},{...e,type:7,slot:5,name:"inputImages",structure:G},{...e,type:7,slot:6,name:"outputImages",structure:H}],methods:[],template:Ee}});Object.assign(R,{...t,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(J,{...t,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(k,{...t,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:64,byteSize:8,slot:0,structure:J}],methods:[]}});Object.assign(o,{...t,name:"u32",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:o}],methods:[]}});Object.assign(l,{...t,type:11,name:"green-screen.ColorSpace",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:l}],methods:[]},static:{members:[{...e,type:7,slot:0,name:"srgb",structure:l},{...e,type:7,slot:1,name:"display-p3",structure:l}],methods:[],template:Ge}});Object.assign(V,{...t,name:"usize",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(se,{...t,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...e,type:4,bitSize:32,byteSize:4,structure:d}],methods:[]}});Object.assign(N,{...t,type:2,name:"green-screen.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:k},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:o},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:o},{...e,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:l},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:Ne},static:{members:[{...e,type:7,slot:0,name:"Pixel",structure:s},{...e,type:7,slot:1,name:"FPixel",structure:s},{...e,type:7,slot:2,name:"channels",structure:y}],methods:[],template:We}});Object.assign(q,{...t,type:2,name:"green-screen.KernelInput(u8,green-screen.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:N}],methods:[],template:tt}});Object.assign(Q,{...t,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(I,{...t,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:64,byteSize:8,slot:0,structure:Q}],methods:[]}});Object.assign(W,{...t,type:2,name:"green-screen.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:I},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:o},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:o},{...e,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:l},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:nt},static:{members:[{...e,type:7,slot:0,name:"Pixel",structure:s},{...e,type:7,slot:1,name:"FPixel",structure:s},{...e,type:7,slot:2,name:"channels",structure:y}],methods:[],template:it}});Object.assign(v,{...t,type:2,name:"green-screen.KernelOutput(u8,green-screen.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:W}],methods:[],template:yt}});Object.assign(E,{...t,type:2,name:"green-screen.KernelParameters(green-screen.kernel)",byteSize:4,align:4,instance:{members:[{...e,type:4,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"strength",structure:d}],methods:[],template:gt}});Object.assign(j,{...t,type:10,name:"ErrorSet2262648624",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:j}],methods:[]},static:{members:[{...e,type:7,slot:0,name:"OutOfMemory",structure:j}],methods:[],template:pt}});Object.assign(re,{...t,type:9,name:"ErrorSet2262648624!green-screen.KernelOutput(u8,green-screen.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...e,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:j}],methods:[]}});Object.assign(ne,{...t,type:5,name:"createOutput",byteSize:64,align:4,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:o},{...e,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:o},{...e,type:5,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:q},{...e,type:5,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:1,name:"3",structure:E},{...e,type:5,isRequired:!0,bitOffset:288,bitSize:224,byteSize:28,slot:2,name:"retval",structure:re}],methods:[]}});Object.assign(h,{...t,type:10,name:"ErrorSet36057449",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:h}],methods:[]},static:{members:[{...e,type:7,slot:0,name:"OutOfMemory",structure:h}],methods:[],template:Ot}});Object.assign(ae,{...t,type:9,name:"ErrorSet36057449!green-screen.KernelOutput(u8,green-screen.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...e,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:h}],methods:[]}});Object.assign(ie,{...t,type:5,name:"createPartialOutput",byteSize:72,align:4,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:o},{...e,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:o},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:o},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:o},{...e,type:5,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:q},{...e,type:5,isRequired:!0,bitOffset:320,bitSize:32,byteSize:4,slot:1,name:"5",structure:E},{...e,type:5,isRequired:!0,bitOffset:352,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ae}],methods:[]}});Object.assign(oe,{...t,type:2,name:"green-screen",align:1,static:{members:[{...e,type:7,slot:0,name:"kernel",structure:s},{...e,type:7,slot:1,name:"Input",structure:s},{...e,type:7,slot:2,name:"Output",structure:s},{...e,type:7,slot:3,name:"Parameters",structure:s}],methods:[Ds,Fs],template:zt}});const Ts=[s,p,M,D,F,T,y,f,_,$,g,d,w,L,B,A,G,H,te,R,J,k,o,l,V,se,N,q,Q,I,W,v,E,j,re,ne,h,ae,ie,oe],_s=oe,$s={runtimeSafety:!1,littleEndian:!0},Y=$t();Y.getSpecialExports();Y.recreateStructures(Ts,$s);const Ls=(async()=>{const a=new URL("green-screen-66a84fb8.wasm",import.meta.url).href;return fetch(a)})();Y.loadModule(Ls);Y.linkVariables(!0);const{constructor:Bs}=_s,{createPartialOutput:Gs,Input:Hs,kernel:ee}=Bs;function Js(a,c,i,n,r={},O={}){const S=[];for(const[m]of ee.inputImages)S.push(m);const U=[];for(const[m]of ee.outputImages)U.push(m);if(Array.isArray(r)){const m=r;r={};for(const[b,z]of S.entries())r[z]=m[b]}const u=new Hs(void 0),x=[];let P;for(const m of S){let b=r[m];if(b||(S.length===1&&["data","width","height"].every(z=>!!r[z])?b=r:x.push(m)),u[m]=b,P){if(b.colorSpace!==P)throw new Error(`Input images must all use the same color space: ${P}`)}else P=b.colorSpace}if(x.length>0)throw new Error(`Missing input image${x.length>1?"s":""}: ${x.join(", ")}`);const Z=Gs(a,c,i,n,u,O),he=m=>{const b={};for(const z of U){const{data:{typedArray:K},width:de,height:qt}=m[z];let C;if(typeof ImageData=="function"){const It=new Uint8ClampedArray(K.buffer,K.byteOffset,K.byteLength);C=new ImageData(It,de,n,{colorSpace:P})}else C={data:K,width:de,height:qt};if(U.length===1)return C;b[z]=C}return b};return Z[Symbol.toStringTag]==="Promise"?Z.then(he):he(Z)}function Ns(){const a={};for(let[c,i]of ee){if(c==="parameters"){const n={};for(const[r,O]of i){const S=n[r]={};for(let[U,u]of O)typeof u=="object"?u=u.string??u.valueOf():typeof u=="function"&&(u=Qs(u.name)),S[U]=u}i=n}else typeof i=="object"&&(i=i.string??i.valueOf());a[c]=i}return a}function Qs(a){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[a]}onmessage=async a=>{if(!Array.isArray(a.data))return;const[c,i,...n]=a.data;try{const[r,O]=await Ws(c,n);postMessage([c,i,r],{transfer:O})}catch(r){postMessage(["error",i,r])}};async function Ws(a,c){switch(a){case"getKernelInfo":return[Ns(...c)];case"createPartialImageData":const n=await Js(...c),r=[];if("data"in n&&"width"in n&&"height"in n)r.push(n.data.buffer);else for(const O of Object.entries(n))r.push(n.data.buffer);return[n,r];default:throw new Error(`Unknown function: ${a}`)}}postMessage("ready");
