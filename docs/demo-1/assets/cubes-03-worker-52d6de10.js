import{u as pt,a as ft,b as bt,d as dt,c as ht,e as gt,f as St,g as zt,h as _t,i as Vt,j as Ot,k as Rt,l as qt,m as wt,n as At,o as Ut,p as jt,q as Pt,r as xt}from"./index-9f315e7a.js";pt();ft();bt();dt();ht();gt();St();zt();_t();Vt();Ot();Rt();qt();wt();At();Ut();jt();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},g={},oe={},ne={},I={},ce={},ue={},k={},p={},h={},le={},ye={},v={},y={},f={},r={},s={},pe={},D={},fe={},E={},be={},K={},de={},F={},he={},T={},ge={},M={},Se={},ze={},$={},_e={},B={},Ve={},L={},Oe={},G={},Re={},H={},qe={},J={},we={},N={},Ae={},Q={},Ue={},W={},je={},X={},Pe={},Y={},xe={},Z={},_={},Ce={},ee={},Ie={},te={},ke={},se={},ve={},re={},He={},V={},De={},Ee={},l={},Ke={},R={},q={},ae={},w={},Fe={},Te={},Je={},me={},A={},U={},Ne={},Qe={},We={},Xe={},Ye={},Ze={},et={};Object.assign(g,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:5});Object.assign(oe,{...t,type:1,name:"[3:0]u8",length:3,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:4});Object.assign(ne,{...t,type:11,name:"*const [3:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:3});Object.assign(I,{...t,type:11,name:"**const [3:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:2});Object.assign(ce,{...t,type:1,name:"[9:0]u8",length:9,byteSize:10,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:8});Object.assign(ue,{...t,type:11,name:"*const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:7});Object.assign(k,{...t,type:11,name:"**const [9:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:6});Object.assign(p,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[],template:null},slot:10});Object.assign(h,{...t,type:11,name:"*i32",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:p}],methods:[],template:null},slot:9});Object.assign(le,{...t,type:1,name:"[13:0]u8",length:13,byteSize:14,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:13});Object.assign(ye,{...t,type:11,name:"*const [13:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:12});Object.assign(v,{...t,type:11,name:"**const [13:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:11});Object.assign(y,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:35});Object.assign(f,{...t,type:13,name:"@Vector(3, f32)",length:3,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:33});Object.assign(r,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[],template:null},slot:82});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:r}],methods:[],template:null},slot:81});const Ct=new Uint8Array([]),It=new Uint8Array([112,30,16,0]),nt=new Uint8Array([0,0,0,0,0,0,240,63]),kt=new Uint8Array([48,30,16,0]),Me=new Uint8Array([51,51,51,51,51,51,211,63]),vt=new Uint8Array([120,30,16,0]),ct=new Uint8Array([154,153,153,153,153,153,217,63]);Object.assign(pe,{...t,type:2,name:"struct{comptime comptime_float = 1, comptime comptime_float = 0.3, comptime comptime_float = 0.4}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:Ct},slots:{0:{structure:s,memory:{array:It},slots:{0:{structure:r,memory:{array:nt},address:1056368}}},1:{structure:s,memory:{array:kt},slots:{0:{structure:r,memory:{array:Me},address:1056304}}},2:{structure:s,memory:{array:vt},slots:{0:{structure:r,memory:{array:ct},address:1056376}}}}}},slot:64});Object.assign(D,{...t,type:11,name:"*const struct{comptime comptime_float = 1, comptime comptime_float = 0.3, comptime comptime_float = 0.4}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:63});const Dt=new Uint8Array([]),Et=new Uint8Array([170,170,170,170]),a=new Uint8Array([]);Object.assign(fe,{...t,type:2,name:"struct{comptime type: type = @Vector(3, f32), comptime defaultValue: struct{comptime comptime_float = 1, comptime comptime_float = 0.3, comptime comptime_float = 0.4} = .{1, 0.3, 0.4}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:f},{...e,type:8,isRequired:!1,slot:0,name:"defaultValue",structure:D}],methods:[],template:{memory:{array:Dt},slots:{0:{structure:D,memory:{array:Et},slots:{0:{structure:pe,memory:{array:a},address:-1431655766}}}}}},slot:41});Object.assign(E,{...t,type:11,name:"*const struct{comptime type: type = @Vector(3, f32), comptime defaultValue: struct{comptime comptime_float = 1, comptime comptime_float = 0.3, comptime comptime_float = 0.4} = .{1, 0.3, 0.4}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:40});const Kt=new Uint8Array([]),Ft=new Uint8Array([48,30,16,0]),Tt=new Uint8Array([128,30,16,0]),Mt=new Uint8Array([154,153,153,153,153,153,233,63]),$t=new Uint8Array([120,30,16,0]);Object.assign(be,{...t,type:2,name:"struct{comptime comptime_float = 0.3, comptime comptime_float = 0.8, comptime comptime_float = 0.4}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:Kt},slots:{0:{structure:s,memory:{array:Ft},slots:{0:{structure:r,memory:{array:Me},address:1056304}}},1:{structure:s,memory:{array:Tt},slots:{0:{structure:r,memory:{array:Mt},address:1056384}}},2:{structure:s,memory:{array:$t},slots:{0:{structure:r,memory:{array:ct},address:1056376}}}}}},slot:66});Object.assign(K,{...t,type:11,name:"*const struct{comptime comptime_float = 0.3, comptime comptime_float = 0.8, comptime comptime_float = 0.4}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:65});const Bt=new Uint8Array([]),Lt=new Uint8Array([170,170,170,170]);Object.assign(de,{...t,type:2,name:"struct{comptime type: type = @Vector(3, f32), comptime defaultValue: struct{comptime comptime_float = 0.3, comptime comptime_float = 0.8, comptime comptime_float = 0.4} = .{0.3, 0.8, 0.4}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:f},{...e,type:8,isRequired:!1,slot:0,name:"defaultValue",structure:K}],methods:[],template:{memory:{array:Bt},slots:{0:{structure:K,memory:{array:Lt},slots:{0:{structure:be,memory:{array:a},address:-1431655766}}}}}},slot:43});Object.assign(F,{...t,type:11,name:"*const struct{comptime type: type = @Vector(3, f32), comptime defaultValue: struct{comptime comptime_float = 0.3, comptime comptime_float = 0.8, comptime comptime_float = 0.4} = .{0.3, 0.8, 0.4}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:de}],methods:[],template:null},slot:42});const Gt=new Uint8Array([]),Ht=new Uint8Array([64,30,16,0]),tt=new Uint8Array([154,153,153,153,153,153,185,63]),Jt=new Uint8Array([48,30,16,0]),Nt=new Uint8Array([112,30,16,0]);Object.assign(he,{...t,type:2,name:"struct{comptime comptime_float = 0.1, comptime comptime_float = 0.3, comptime comptime_float = 1}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:Gt},slots:{0:{structure:s,memory:{array:Ht},slots:{0:{structure:r,memory:{array:tt},address:1056320}}},1:{structure:s,memory:{array:Jt},slots:{0:{structure:r,memory:{array:Me},address:1056304}}},2:{structure:s,memory:{array:Nt},slots:{0:{structure:r,memory:{array:nt},address:1056368}}}}}},slot:68});Object.assign(T,{...t,type:11,name:"*const struct{comptime comptime_float = 0.1, comptime comptime_float = 0.3, comptime comptime_float = 1}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:he}],methods:[],template:null},slot:67});const Qt=new Uint8Array([]),Wt=new Uint8Array([170,170,170,170]);Object.assign(ge,{...t,type:2,name:"struct{comptime type: type = @Vector(3, f32), comptime defaultValue: struct{comptime comptime_float = 0.1, comptime comptime_float = 0.3, comptime comptime_float = 1} = .{0.1, 0.3, 1}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:f},{...e,type:8,isRequired:!1,slot:0,name:"defaultValue",structure:T}],methods:[],template:{memory:{array:Qt},slots:{0:{structure:T,memory:{array:Wt},slots:{0:{structure:he,memory:{array:a},address:-1431655766}}}}}},slot:45});Object.assign(M,{...t,type:11,name:"*const struct{comptime type: type = @Vector(3, f32), comptime defaultValue: struct{comptime comptime_float = 0.1, comptime comptime_float = 0.3, comptime comptime_float = 1} = .{0.1, 0.3, 1}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ge}],methods:[],template:null},slot:44});Object.assign(Se,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:34});const Xt=new Uint8Array([]),Yt=new Uint8Array([104,30,16,0]),ie=new Uint8Array([0,0,0,0,0,0,0,0]),Zt=new Uint8Array([104,30,16,0]);Object.assign(ze,{...t,type:2,name:"struct{comptime comptime_float = 0, comptime comptime_float = 0}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Xt},slots:{0:{structure:s,memory:{array:Yt},slots:{0:{structure:r,memory:{array:ie},address:1056360}}},1:{structure:s,memory:{array:Zt},slots:{0:{structure:r,memory:{array:ie},address:1056360}}}}}},slot:70});Object.assign($,{...t,type:11,name:"*const struct{comptime comptime_float = 0, comptime comptime_float = 0}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ze}],methods:[],template:null},slot:69});const es=new Uint8Array([]),ts=new Uint8Array([96,30,16,0]),it=new Uint8Array([0,0,0,0,0,0,137,64]),ss=new Uint8Array([96,30,16,0]);Object.assign(_e,{...t,type:2,name:"struct{comptime comptime_float = 800, comptime comptime_float = 800}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:es},slots:{0:{structure:s,memory:{array:ts},slots:{0:{structure:r,memory:{array:it},address:1056352}}},1:{structure:s,memory:{array:ss},slots:{0:{structure:r,memory:{array:it},address:1056352}}}}}},slot:72});Object.assign(B,{...t,type:11,name:"*const struct{comptime comptime_float = 800, comptime comptime_float = 800}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:_e}],methods:[],template:null},slot:71});const rs=new Uint8Array([]),as=new Uint8Array([88,30,16,0]),ot=new Uint8Array([0,0,0,0,0,192,114,64]),ms=new Uint8Array([88,30,16,0]);Object.assign(Ve,{...t,type:2,name:"struct{comptime comptime_float = 300, comptime comptime_float = 300}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:rs},slots:{0:{structure:s,memory:{array:as},slots:{0:{structure:r,memory:{array:ot},address:1056344}}},1:{structure:s,memory:{array:ms},slots:{0:{structure:r,memory:{array:ot},address:1056344}}}}}},slot:74});Object.assign(L,{...t,type:11,name:"*const struct{comptime comptime_float = 300, comptime comptime_float = 300}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ve}],methods:[],template:null},slot:73});const is=new Uint8Array([]),os=new Uint8Array([170,170,170,170]),ns=new Uint8Array([170,170,170,170]),cs=new Uint8Array([170,170,170,170]);Object.assign(Oe,{...t,type:2,name:"struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0}, comptime maxValue: struct{comptime comptime_float = 800, comptime comptime_float = 800} = .{800, 800}, comptime defaultValue: struct{comptime comptime_float = 300, comptime comptime_float = 300} = .{300, 300}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:Se},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:$},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:B},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:L}],methods:[],template:{memory:{array:is},slots:{0:{structure:$,memory:{array:os},slots:{0:{structure:ze,memory:{array:a},address:-1431655766}}},1:{structure:B,memory:{array:ns},slots:{0:{structure:_e,memory:{array:a},address:-1431655766}}},2:{structure:L,memory:{array:cs},slots:{0:{structure:Ve,memory:{array:a},address:-1431655766}}}}}},slot:47});Object.assign(G,{...t,type:11,name:"*const struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0}, comptime maxValue: struct{comptime comptime_float = 800, comptime comptime_float = 800} = .{800, 800}, comptime defaultValue: struct{comptime comptime_float = 300, comptime comptime_float = 300} = .{300, 300}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Oe}],methods:[],template:null},slot:46});const us=new Uint8Array([]),ls=new Uint8Array([80,30,16,0]),Be=new Uint8Array([0,0,0,0,0,0,36,192]),ys=new Uint8Array([80,30,16,0]),ps=new Uint8Array([80,30,16,0]);Object.assign(Re,{...t,type:2,name:"struct{comptime comptime_float = -10, comptime comptime_float = -10, comptime comptime_float = -10}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:us},slots:{0:{structure:s,memory:{array:ls},slots:{0:{structure:r,memory:{array:Be},address:1056336}}},1:{structure:s,memory:{array:ys},slots:{0:{structure:r,memory:{array:Be},address:1056336}}},2:{structure:s,memory:{array:ps},slots:{0:{structure:r,memory:{array:Be},address:1056336}}}}}},slot:76});Object.assign(H,{...t,type:11,name:"*const struct{comptime comptime_float = -10, comptime comptime_float = -10, comptime comptime_float = -10}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Re}],methods:[],template:null},slot:75});const fs=new Uint8Array([]),bs=new Uint8Array([72,30,16,0]),Le=new Uint8Array([0,0,0,0,0,0,36,64]),ds=new Uint8Array([72,30,16,0]),hs=new Uint8Array([72,30,16,0]);Object.assign(qe,{...t,type:2,name:"struct{comptime comptime_float = 10, comptime comptime_float = 10, comptime comptime_float = 10}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:fs},slots:{0:{structure:s,memory:{array:bs},slots:{0:{structure:r,memory:{array:Le},address:1056328}}},1:{structure:s,memory:{array:ds},slots:{0:{structure:r,memory:{array:Le},address:1056328}}},2:{structure:s,memory:{array:hs},slots:{0:{structure:r,memory:{array:Le},address:1056328}}}}}},slot:78});Object.assign(J,{...t,type:11,name:"*const struct{comptime comptime_float = 10, comptime comptime_float = 10, comptime comptime_float = 10}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:qe}],methods:[],template:null},slot:77});const gs=new Uint8Array([]),Ss=new Uint8Array([64,30,16,0]),zs=new Uint8Array([56,30,16,0]),_s=new Uint8Array([123,20,174,71,225,122,148,63]),Vs=new Uint8Array([48,30,16,0]);Object.assign(we,{...t,type:2,name:"struct{comptime comptime_float = 0.1, comptime comptime_float = 0.02, comptime comptime_float = 0.3}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:gs},slots:{0:{structure:s,memory:{array:Ss},slots:{0:{structure:r,memory:{array:tt},address:1056320}}},1:{structure:s,memory:{array:zs},slots:{0:{structure:r,memory:{array:_s},address:1056312}}},2:{structure:s,memory:{array:Vs},slots:{0:{structure:r,memory:{array:Me},address:1056304}}}}}},slot:80});Object.assign(N,{...t,type:11,name:"*const struct{comptime comptime_float = 0.1, comptime comptime_float = 0.02, comptime comptime_float = 0.3}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:we}],methods:[],template:null},slot:79});const Os=new Uint8Array([]),Rs=new Uint8Array([170,170,170,170]),qs=new Uint8Array([170,170,170,170]),ws=new Uint8Array([170,170,170,170]);Object.assign(Ae,{...t,type:2,name:"struct{comptime type: type = @Vector(3, f32), comptime minValue: struct{comptime comptime_float = -10, comptime comptime_float = -10, comptime comptime_float = -10} = .{-10, -10, -10}, comptime maxValue: struct{comptime comptime_float = 10, comptime comptime_float = 10, comptime comptime_float = 10} = .{10, 10, 10}, comptime defaultValue: struct{comptime comptime_float = 0.1, comptime comptime_float = 0.02, comptime comptime_float = 0.3} = .{0.1, 0.02, 0.3}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:f},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:H},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:J},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:N}],methods:[],template:{memory:{array:Os},slots:{0:{structure:H,memory:{array:Rs},slots:{0:{structure:Re,memory:{array:a},address:-1431655766}}},1:{structure:J,memory:{array:qs},slots:{0:{structure:qe,memory:{array:a},address:-1431655766}}},2:{structure:N,memory:{array:ws},slots:{0:{structure:we,memory:{array:a},address:-1431655766}}}}}},slot:49});Object.assign(Q,{...t,type:11,name:"*const struct{comptime type: type = @Vector(3, f32), comptime minValue: struct{comptime comptime_float = -10, comptime comptime_float = -10, comptime comptime_float = -10} = .{-10, -10, -10}, comptime maxValue: struct{comptime comptime_float = 10, comptime comptime_float = 10, comptime comptime_float = 10} = .{10, 10, 10}, comptime defaultValue: struct{comptime comptime_float = 0.1, comptime comptime_float = 0.02, comptime comptime_float = 0.3} = .{0.1, 0.02, 0.3}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ae}],methods:[],template:null},slot:48});const As=new Uint8Array([]),Us=new Uint8Array([104,30,16,0]),js=new Uint8Array([184,30,16,0]),Ps=new Uint8Array([0,0,0,0,0,0,52,64]),xs=new Uint8Array([104,30,16,0]);Object.assign(Ue,{...t,type:2,name:"struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 20, comptime defaultValue: comptime_float = 0}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:As},slots:{0:{structure:s,memory:{array:Us},slots:{0:{structure:r,memory:{array:ie},address:1056360}}},1:{structure:s,memory:{array:js},slots:{0:{structure:r,memory:{array:Ps},address:1056440}}},2:{structure:s,memory:{array:xs},slots:{0:{structure:r,memory:{array:ie},address:1056360}}}}}},slot:51});Object.assign(W,{...t,type:11,name:"*const struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 20, comptime defaultValue: comptime_float = 0}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ue}],methods:[],template:null},slot:50});const Cs=new Uint8Array([]),Is=new Uint8Array([176,30,16,0]),ks=new Uint8Array([123,20,174,71,225,122,116,63]),vs=new Uint8Array([64,30,16,0]),Ds=new Uint8Array([168,30,16,0]),Es=new Uint8Array([184,30,133,235,81,184,158,63]);Object.assign(je,{...t,type:2,name:"struct{comptime type: type = f32, comptime minValue: comptime_float = 0.005, comptime maxValue: comptime_float = 0.1, comptime defaultValue: comptime_float = 0.03}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:Cs},slots:{0:{structure:s,memory:{array:Is},slots:{0:{structure:r,memory:{array:ks},address:1056432}}},1:{structure:s,memory:{array:vs},slots:{0:{structure:r,memory:{array:tt},address:1056320}}},2:{structure:s,memory:{array:Ds},slots:{0:{structure:r,memory:{array:Es},address:1056424}}}}}},slot:53});Object.assign(X,{...t,type:11,name:"*const struct{comptime type: type = f32, comptime minValue: comptime_float = 0.005, comptime maxValue: comptime_float = 0.1, comptime defaultValue: comptime_float = 0.03}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:je}],methods:[],template:null},slot:52});const Ks=new Uint8Array([]),Fs=new Uint8Array([160,30,16,0]),Ts=new Uint8Array([0,0,0,0,0,0,20,64]),Ms=new Uint8Array([152,30,16,0]),$s=new Uint8Array([0,0,0,0,0,0,105,64]),Bs=new Uint8Array([144,30,16,0]),Ls=new Uint8Array([0,0,0,0,0,0,89,64]);Object.assign(Pe,{...t,type:2,name:"struct{comptime type: type = f32, comptime minValue: comptime_float = 5, comptime maxValue: comptime_float = 200, comptime defaultValue: comptime_float = 100}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:Ks},slots:{0:{structure:s,memory:{array:Fs},slots:{0:{structure:r,memory:{array:Ts},address:1056416}}},1:{structure:s,memory:{array:Ms},slots:{0:{structure:r,memory:{array:$s},address:1056408}}},2:{structure:s,memory:{array:Bs},slots:{0:{structure:r,memory:{array:Ls},address:1056400}}}}}},slot:55});Object.assign(Y,{...t,type:11,name:"*const struct{comptime type: type = f32, comptime minValue: comptime_float = 5, comptime maxValue: comptime_float = 200, comptime defaultValue: comptime_float = 100}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Pe}],methods:[],template:null},slot:54});const Gs=new Uint8Array([]),Hs=new Uint8Array([170,170,170,170]),Js=new Uint8Array([170,170,170,170]),Ns=new Uint8Array([170,170,170,170]),Qs=new Uint8Array([170,170,170,170]),Ws=new Uint8Array([170,170,170,170]),Xs=new Uint8Array([170,170,170,170]),Ys=new Uint8Array([170,170,170,170]),Zs=new Uint8Array([170,170,170,170]);Object.assign(xe,{...t,type:2,name:"struct{comptime xAxisColor: struct{comptime type: type = @Vector(3, f32), comptime defaultValue: struct{comptime comptime_float = 1, comptime comptime_float = 0.3, comptime comptime_float = 0.4} = .{1, 0.3, 0.4}} = .{.type = @Vector(3, f32), .defaultValue = .{1, 0.3, 0.4}}, comptime yAxisColor: struct{comptime type: type = @Vector(3, f32), comptime defaultValue: struct{comptime comptime_float = 0.3, comptime comptime_float = 0.8, comptime comptime_float = 0.4} = .{0.3, 0.8, 0.4}} = .{.type = @Vector(3, f32), .defaultValue = .{0.3, 0.8, 0.4}}, comptime zAxisColor: struct{comptime type: type = @Vector(3, f32), comptime defaultValue: struct{comptime comptime_float = 0.1, comptime comptime_float = 0.3, comptime comptime_float = 1} = .{0.1, 0.3, 1}} = .{.type = @Vector(3, f32), .defaultValue = .{0.1, 0.3, 1}}, comptime center: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0}, comptime maxValue: struct{comptime comptime_float = 800, comptime comptime_float = 800} = .{800, 800}, comptime defaultValue: struct{comptime comptime_float = 300, comptime comptime_float = 300} = .{300, 300}} = .{.type = @Vector(2, f32), .minValue = .{0, 0}, .maxValue = .{800, 800}, .defaultValue = .{300, 300}}, comptime spin: struct{comptime type: type = @Vector(3, f32), comptime minValue: struct{comptime comptime_float = -10, comptime comptime_float = -10, comptime comptime_float = -10} = .{-10, -10, -10}, comptime maxValue: struct{comptime comptime_float = 10, comptime comptime_float = 10, comptime comptime_float = 10} = .{10, 10, 10}, comptime defaultValue: struct{comptime comptime_float = 0.1, comptime comptime_float = 0.02, comptime comptime_float = 0.3} = .{0.1, 0.02, 0.3}} = .{.type = @Vector(3, f32), .minValue = .{-10, -10, -10}, .maxValue = .{10, 10, 10}, .defaultValue = .{0.1, 0.02, 0.3}}, comptime plunge: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 20, comptime defaultValue: comptime_float = 0} = .{.type = f32, .minValue = 0, .maxValue = 20, .defaultValue = 0}, comptime cellDensity: struct{comptime type: type = f32, comptime minValue: comptime_float = 0.005, comptime maxValue: comptime_float = 0.1, comptime defaultValue: comptime_float = 0.03} = .{.type = f32, .minValue = 0.005, .maxValue = 0.1, .defaultValue = 0.03}, comptime radius: struct{comptime type: type = f32, comptime minValue: comptime_float = 5, comptime maxValue: comptime_float = 200, comptime defaultValue: comptime_float = 100} = .{.type = f32, .minValue = 5, .maxValue = 200, .defaultValue = 100}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"xAxisColor",structure:E},{...e,type:8,isRequired:!1,slot:1,name:"yAxisColor",structure:F},{...e,type:8,isRequired:!1,slot:2,name:"zAxisColor",structure:M},{...e,type:8,isRequired:!1,slot:3,name:"center",structure:G},{...e,type:8,isRequired:!1,slot:4,name:"spin",structure:Q},{...e,type:8,isRequired:!1,slot:5,name:"plunge",structure:W},{...e,type:8,isRequired:!1,slot:6,name:"cellDensity",structure:X},{...e,type:8,isRequired:!1,slot:7,name:"radius",structure:Y}],methods:[],template:{memory:{array:Gs},slots:{0:{structure:E,memory:{array:Hs},slots:{0:{structure:fe,memory:{array:a},address:-1431655766}}},1:{structure:F,memory:{array:Js},slots:{0:{structure:de,memory:{array:a},address:-1431655766}}},2:{structure:M,memory:{array:Ns},slots:{0:{structure:ge,memory:{array:a},address:-1431655766}}},3:{structure:G,memory:{array:Qs},slots:{0:{structure:Oe,memory:{array:a},address:-1431655766}}},4:{structure:Q,memory:{array:Ws},slots:{0:{structure:Ae,memory:{array:a},address:-1431655766}}},5:{structure:W,memory:{array:Xs},slots:{0:{structure:Ue,memory:{array:a},address:-1431655766}}},6:{structure:X,memory:{array:Ys},slots:{0:{structure:je,memory:{array:a},address:-1431655766}}},7:{structure:Y,memory:{array:Zs},slots:{0:{structure:Pe,memory:{array:a},address:-1431655766}}}}}},slot:15});Object.assign(Z,{...t,type:11,name:"*struct{comptime xAxisColor: struct{comptime type: type = @Vector(3, f32), comptime defaultValue: struct{comptime comptime_float = 1, comptime comptime_float = 0.3, comptime comptime_float = 0.4} = .{1, 0.3, 0.4}} = .{.type = @Vector(3, f32), .defaultValue = .{1, 0.3, 0.4}}, comptime yAxisColor: struct{comptime type: type = @Vector(3, f32), comptime defaultValue: struct{comptime comptime_float = 0.3, comptime comptime_float = 0.8, comptime comptime_float = 0.4} = .{0.3, 0.8, 0.4}} = .{.type = @Vector(3, f32), .defaultValue = .{0.3, 0.8, 0.4}}, comptime zAxisColor: struct{comptime type: type = @Vector(3, f32), comptime defaultValue: struct{comptime comptime_float = 0.1, comptime comptime_float = 0.3, comptime comptime_float = 1} = .{0.1, 0.3, 1}} = .{.type = @Vector(3, f32), .defaultValue = .{0.1, 0.3, 1}}, comptime center: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0}, comptime maxValue: struct{comptime comptime_float = 800, comptime comptime_float = 800} = .{800, 800}, comptime defaultValue: struct{comptime comptime_float = 300, comptime comptime_float = 300} = .{300, 300}} = .{.type = @Vector(2, f32), .minValue = .{0, 0}, .maxValue = .{800, 800}, .defaultValue = .{300, 300}}, comptime spin: struct{comptime type: type = @Vector(3, f32), comptime minValue: struct{comptime comptime_float = -10, comptime comptime_float = -10, comptime comptime_float = -10} = .{-10, -10, -10}, comptime maxValue: struct{comptime comptime_float = 10, comptime comptime_float = 10, comptime comptime_float = 10} = .{10, 10, 10}, comptime defaultValue: struct{comptime comptime_float = 0.1, comptime comptime_float = 0.02, comptime comptime_float = 0.3} = .{0.1, 0.02, 0.3}} = .{.type = @Vector(3, f32), .minValue = .{-10, -10, -10}, .maxValue = .{10, 10, 10}, .defaultValue = .{0.1, 0.02, 0.3}}, comptime plunge: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 20, comptime defaultValue: comptime_float = 0} = .{.type = f32, .minValue = 0, .maxValue = 20, .defaultValue = 0}, comptime cellDensity: struct{comptime type: type = f32, comptime minValue: comptime_float = 0.005, comptime maxValue: comptime_float = 0.1, comptime defaultValue: comptime_float = 0.03} = .{.type = f32, .minValue = 0.005, .maxValue = 0.1, .defaultValue = 0.03}, comptime radius: struct{comptime type: type = f32, comptime minValue: comptime_float = 5, comptime maxValue: comptime_float = 200, comptime defaultValue: comptime_float = 100} = .{.type = f32, .minValue = 5, .maxValue = 200, .defaultValue = 100}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:xe}],methods:[],template:null},slot:14});Object.assign(_,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:p}],methods:[],template:null},slot:83});const er=new Uint8Array([]),tr=new Uint8Array([140,30,16,0]),sr=new Uint8Array([3,0,0,0]);Object.assign(Ce,{...t,type:2,name:"struct{comptime channels: comptime_int = 3}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:_}],methods:[],template:{memory:{array:er},slots:{0:{structure:_,memory:{array:tr},slots:{0:{structure:p,memory:{array:sr},address:1056396}}}}}},slot:57});Object.assign(ee,{...t,type:11,name:"*const struct{comptime channels: comptime_int = 3}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ce}],methods:[],template:null},slot:56});const rr=new Uint8Array([]),ar=new Uint8Array([170,170,170,170]);Object.assign(Ie,{...t,type:2,name:"struct{comptime unused: struct{comptime channels: comptime_int = 3} = .{.channels = 3}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"unused",structure:ee}],methods:[],template:{memory:{array:rr},slots:{0:{structure:ee,memory:{array:ar},slots:{0:{structure:Ce,memory:{array:a},address:-1431655766}}}}}},slot:17});Object.assign(te,{...t,type:11,name:"*struct{comptime unused: struct{comptime channels: comptime_int = 3} = .{.channels = 3}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ie}],methods:[],template:null},slot:16});const mr=new Uint8Array([]),ir=new Uint8Array([136,30,16,0]),or=new Uint8Array([4,0,0,0]);Object.assign(ke,{...t,type:2,name:"struct{comptime channels: comptime_int = 4}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:_}],methods:[],template:{memory:{array:mr},slots:{0:{structure:_,memory:{array:ir},slots:{0:{structure:p,memory:{array:or},address:1056392}}}}}},slot:59});Object.assign(se,{...t,type:11,name:"*const struct{comptime channels: comptime_int = 4}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ke}],methods:[],template:null},slot:58});const nr=new Uint8Array([]),cr=new Uint8Array([170,170,170,170]);Object.assign(ve,{...t,type:2,name:"struct{comptime dst: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:se}],methods:[],template:{memory:{array:nr},slots:{0:{structure:se,memory:{array:cr},slots:{0:{structure:ke,memory:{array:a},address:-1431655766}}}}}},slot:19});Object.assign(re,{...t,type:11,name:"*struct{comptime dst: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ve}],methods:[],template:null},slot:18});const ur=new Uint8Array([]),lr=new Uint8Array([]),yr=new Uint8Array([196,250,15,0]),pr=new Uint8Array([46,81,16,0]),fr=new Uint8Array([65,73,70,0]),br=new Uint8Array([4,251,15,0]),dr=new Uint8Array([36,81,16,0]),hr=new Uint8Array([111,109,105,110,111,46,99,111,109,0]),gr=new Uint8Array([68,251,15,0]),Sr=new Uint8Array([2,0,0,0]),zr=new Uint8Array([156,251,15,0]),_r=new Uint8Array([22,81,16,0]),Vr=new Uint8Array([115,112,104,101,114,101,115,101,99,116,105,111,110,0]),Or=new Uint8Array([170,170,170,170]),Rr=new Uint8Array([170,170,170,170]),qr=new Uint8Array([170,170,170,170]);Object.assign(He,{...t,type:2,name:"cubes-03.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:ur}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:I},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:k},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:h},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:v},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:Z},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:te},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:re}],methods:[],template:{memory:{array:lr},slots:{0:{structure:I,memory:{array:yr},slots:{0:{structure:ne,memory:{array:pr},slots:{0:{structure:oe,memory:{array:fr},address:1069358}}}}},1:{structure:k,memory:{array:br},slots:{0:{structure:ue,memory:{array:dr},slots:{0:{structure:ce,memory:{array:hr},address:1069348}}}}},2:{structure:h,memory:{array:gr},slots:{0:{structure:p,memory:{array:Sr}}}},3:{structure:v,memory:{array:zr},slots:{0:{structure:ye,memory:{array:_r},slots:{0:{structure:le,memory:{array:Vr},address:1069334}}}}},4:{structure:Z,memory:{array:Or},slots:{0:{structure:xe,memory:{array:a},address:-1431655766}}},5:{structure:te,memory:{array:Rr},slots:{0:{structure:Ie,memory:{array:a},address:-1431655766}}},6:{structure:re,memory:{array:qr},slots:{0:{structure:ve,memory:{array:a},address:-1431655766}}}}}},slot:1});Object.assign(V,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:24});Object.assign(De,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:V}],methods:[],template:null},slot:23});Object.assign(Ee,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:De}],methods:[],template:null},slot:22});Object.assign(l,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:l}],methods:[],template:null},slot:25});const wr=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(Ke,{...t,type:9,name:"cubes-03.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:p},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:p}],methods:[],template:{memory:{array:wr}}},slot:26});Object.assign(R,{...t,name:"bool",length:1,byteSize:1,align:0,instance:{members:[{...e,type:1,isRequired:!1,bitOffset:0,bitSize:1,byteSize:1,structure:R}],methods:[],template:null},slot:27});Object.assign(q,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:28});const Ar=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ur=new Uint8Array([]),jr=new Uint8Array([104,253,15,0]),Pr=new Uint8Array([3,0,0,0]);Object.assign(ae,{...t,type:2,name:"cubes-03.Image(u8,3,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Ee},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Ke},{...e,type:1,isRequired:!1,bitOffset:168,bitSize:1,byteSize:1,slot:4,name:"premultiplied",structure:R},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:5,name:"offset",structure:q}],methods:[],template:{memory:{array:Ar}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:V},{...e,type:7,isRequired:!1,name:"FPixel",structure:f},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:h}],methods:[],template:{memory:{array:Ur},slots:{0:{structure:h,memory:{array:jr},slots:{0:{structure:p,memory:{array:Pr}}}}}}},slot:21});const xr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Cr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ir=new Uint8Array([0,0,0,0,0,0,0,0]),st=new Uint8Array([]);Object.assign(w,{...t,type:2,name:"cubes-03.KernelInput(u8,cubes-03.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"unused",structure:ae}],methods:[],template:{memory:{array:xr},slots:{0:{structure:ae,memory:{array:Cr},slots:{0:{structure:Ee,memory:{array:Ir},slots:{0:{structure:De,memory:{array:st}}}}}}}}},slot:20});Object.assign(Fe,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:V}],methods:[],template:null},slot:23});Object.assign(Te,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Fe}],methods:[],template:null},slot:31});Object.assign(Je,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:60});const kr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),vr=new Uint8Array([]),Dr=new Uint8Array([0,253,15,0]),Er=new Uint8Array([4,0,0,0]);Object.assign(me,{...t,type:2,name:"cubes-03.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Te},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Ke},{...e,type:1,isRequired:!1,bitOffset:168,bitSize:1,byteSize:1,slot:4,name:"premultiplied",structure:R},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:5,name:"offset",structure:q}],methods:[],template:{memory:{array:kr}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:V},{...e,type:7,isRequired:!1,name:"FPixel",structure:Je},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:h}],methods:[],template:{memory:{array:vr},slots:{0:{structure:h,memory:{array:Dr},slots:{0:{structure:p,memory:{array:Er}}}}}}},slot:30});const Kr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Fr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Tr=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(A,{...t,type:2,name:"cubes-03.KernelOutput(u8,cubes-03.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:me}],methods:[],template:{memory:{array:Kr},slots:{0:{structure:me,memory:{array:Fr},slots:{0:{structure:Te,memory:{array:Tr},slots:{0:{structure:Fe,memory:{array:st}}}}}}}}},slot:29});const Mr=new Uint8Array([0,0,128,63,154,153,153,62,205,204,204,62,0,0,0,0,154,153,153,62,205,204,76,63,205,204,204,62,0,0,0,0,205,204,204,61,154,153,153,62,0,0,128,63,0,0,0,0,205,204,204,61,10,215,163,60,154,153,153,62,0,0,0,0,0,0,150,67,0,0,150,67,0,0,0,0,143,194,245,60,0,0,200,66,0,0,0,0,0,0,0,0,0,0,0,0]);Object.assign(U,{...t,type:2,name:"cubes-03.KernelParameters(cubes-03.kernel)",length:1,byteSize:96,align:4,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:96,byteSize:16,slot:0,name:"xAxisColor",structure:f},{...e,type:6,isRequired:!1,bitOffset:128,bitSize:96,byteSize:16,slot:1,name:"yAxisColor",structure:f},{...e,type:6,isRequired:!1,bitOffset:256,bitSize:96,byteSize:16,slot:2,name:"zAxisColor",structure:f},{...e,type:6,isRequired:!1,bitOffset:512,bitSize:64,byteSize:8,slot:3,name:"center",structure:Se},{...e,type:6,isRequired:!1,bitOffset:384,bitSize:96,byteSize:16,slot:4,name:"spin",structure:f},{...e,type:4,isRequired:!1,bitOffset:576,bitSize:32,byteSize:4,slot:5,name:"plunge",structure:y},{...e,type:4,isRequired:!1,bitOffset:608,bitSize:32,byteSize:4,slot:6,name:"cellDensity",structure:y},{...e,type:4,isRequired:!1,bitOffset:640,bitSize:32,byteSize:4,slot:7,name:"radius",structure:y}],methods:[],template:{memory:{array:Mr}}},slot:32});Object.assign(Ne,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(cubes-03.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:61});Object.assign(Qe,{...t,type:7,name:"@typeInfo(@typeInfo(@TypeOf(cubes-03.createOutput)).Fn.return_type.?).ErrorUnion.error_set!cubes-03.KernelOutput(u8,cubes-03.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:A},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Ne}],methods:[],template:null},slot:38});Object.assign(We,{...t,type:3,name:"createOutput",length:1,byteSize:160,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:768,bitSize:32,byteSize:4,slot:0,name:"0",structure:l},{...e,type:3,bitOffset:800,bitSize:32,byteSize:4,slot:1,name:"1",structure:l},{...e,type:6,bitOffset:832,bitSize:192,byteSize:24,slot:2,name:"2",structure:w},{...e,type:6,bitOffset:0,bitSize:768,byteSize:96,slot:3,name:"3",structure:U},{...e,type:6,bitOffset:1024,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Qe}],methods:[],template:null},slot:36});Object.assign(Xe,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(cubes-03.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:62});Object.assign(Ye,{...t,type:7,name:"@typeInfo(@typeInfo(@TypeOf(cubes-03.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set!cubes-03.KernelOutput(u8,cubes-03.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:A},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Xe}],methods:[],template:null},slot:39});Object.assign(Ze,{...t,type:3,name:"createPartialOutput",length:1,byteSize:176,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:768,bitSize:32,byteSize:4,slot:0,name:"0",structure:l},{...e,type:3,bitOffset:800,bitSize:32,byteSize:4,slot:1,name:"1",structure:l},{...e,type:3,bitOffset:832,bitSize:32,byteSize:4,slot:2,name:"2",structure:l},{...e,type:3,bitOffset:864,bitSize:32,byteSize:4,slot:3,name:"3",structure:l},{...e,type:6,bitOffset:896,bitSize:192,byteSize:24,slot:4,name:"4",structure:w},{...e,type:6,bitOffset:0,bitSize:768,byteSize:96,slot:5,name:"5",structure:U},{...e,type:6,bitOffset:1088,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Ye}],methods:[],template:null},slot:37});const $r={argStruct:We,thunk:8,name:"createOutput"},Br={argStruct:Ze,thunk:2,name:"createPartialOutput"};Object.assign(et,{...t,type:2,name:"cubes-03",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:st}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:He},{...e,type:7,isRequired:!1,name:"Input",structure:w},{...e,type:7,isRequired:!1,name:"Output",structure:A},{...e,type:7,isRequired:!1,name:"Parameters",structure:U}],methods:[$r,Br],template:null},slot:0});const Lr=[g,oe,ne,I,ce,ue,k,p,h,le,ye,v,y,f,r,s,pe,D,fe,E,be,K,de,F,he,T,ge,M,Se,ze,$,_e,B,Ve,L,Oe,G,Re,H,qe,J,we,N,Ae,Q,Ue,W,je,X,Pe,Y,xe,Z,_,Ce,ee,Ie,te,ke,se,ve,re,He,V,De,Ee,l,Ke,R,q,ae,w,Fe,Te,Je,me,A,U,Ne,Qe,We,Xe,Ye,Ze,et],Gr=Pt(Lr),Hr=et.constructor,Jr=(async()=>{const n=new URL("cubes-03-898cc425.wasm",import.meta.url).href;return fetch(n)})();xt(Jr,{...Gr,writeBack:!0});const{createOutput:ta,createPartialOutput:Nr,kernel:Ge,Input:Qr,Output:sa,Parameters:ra}=Hr;function Wr(n,u,i,m,o={},S={}){if(Array.isArray(o)){const d=o;o={};for(const[b,z]of Object.keys(Ge.inputImages).entries())o[z]=d[b]}const j=new Qr(void 0),P=Object.keys(Ge.inputImages),c=[];let O;for(const d of P){let b=o[d];if(b||(P.length===1&&["data","width","height"].every(z=>!!o[z])?b=o:c.push(d)),j[d]=b,O){if(b.colorSpace!==O)throw new Error(`Input images must all use the same color space: ${O}`)}else O=b.colorSpace}if(c.length>0)throw new Error(`Missing input image${c.length>1?"s":""}: ${c.join(", ")}`);const $e=Nr(n,u,i,m,j,S),rt=d=>{const b=Object.keys(d),z={};for(const at of b){const{data:{typedArray:x},width:mt,height:lt}=d[at];let C;if(typeof ImageData=="function"){const yt=new Uint8ClampedArray(x.buffer,x.byteOffset,x.byteLength);C=new ImageData(yt,mt,m,{colorSpace:O})}else C={data:x,width:mt,height:lt};if(b.length===1)return C;z[at]=C}return z};return $e[Symbol.toStringTag]==="Promise"?$e.then(rt):rt($e)}function Xr(){const n={};for(let[u,i]of Object.entries(Ge)){if(u==="parameters"){const m={};for(const[o,S]of Object.entries(i)){const j=m[o]={};for(let[P,c]of Object.entries(S))typeof c=="object"?"string"in c?c=c.string:c=ut(c):typeof c=="function"&&(c=Yr(c.name)),j[P]=c}i=m}else typeof i=="object"&&("string"in i?i=i.string:i=i.valueOf());n[u]=i}return n}function ut(n){const u=[];for(let[i,m]of Object.entries(n))typeof m=="object"&&(m=ut(m)),u[i]=m;return u}function Yr(n){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[n]}onmessage=n=>{const[u,i,...m]=n.data;Zr(u,m).then(([o,S])=>{postMessage([u,i,o],{transfer:S})}).catch(o=>{postMessage(["error",i,o])})};async function Zr(n,u){switch(n){case"getKernelInfo":return[Xr(...u)];case"createPartialImageData":const m=await Wr(...u),o=[];if("data"in m&&"width"in m&&"height"in m)o.push(m.data.buffer);else for(const S of Object.entries(m))o.push(m.data.buffer);return[m,o];default:throw new Error(`Unknown function: ${n}`)}}
