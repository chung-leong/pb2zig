import{u as hs,a as ws,b as As,c as Us,d as Ps,e as Vs,f as Is,g as Rs,h as ks,i as qs,j as xs,k as vs,l as Es,m as _s,n as Cs,p as Ks,o as Ds,q as Fs,r as Ms,s as Ts}from"./index-58d89d46.js";hs();xs();vs();ws();As();Es();_s();Cs();Ks();Us();Ps();Vs();Is();Ds();Ts();Rs();Fs();ks();qs();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},f={},$={},H={},k={},h={},o={},p={},L={},B={},r={},q={},w={},O={},b={},G={},J={},N={},Q={},W={},V={},X={},Y={},A={},Z={},tt={},mt={},x={},et={},v={},y={},S={},I={},yt={},st={},E={},rt={},_={},at={},C={},K={},R={},bt={},lt={},T={},gt={},pt={},ft={},Yt={},Ot={},nt={},St={},Zt={},jt={},te={},zt={},ee={},dt={},se={},re={},ht={},wt={},ae={},At={},ne={},Ut={},ie={},Pt={},oe={},ce={},Vt={},It={},ue={},Rt={},me={},kt={},ye={},qt={},be={},le={},xt={},ge={},vt={},pe={},Et={},fe={},_t={},Oe={},Ct={},Se={},je={},Kt={},Dt={},Ft={},Mt={},ze={},it={},de={},he={},Tt={},we={},$t={},Ae={},Ue={},Pe={},Ve={},Ie={},Re={},ke={},qe={},xe={},ve={},Ee={},_e={},Ce={},Ke={},De={},Fe={},Me={},Ht={},Te={},$e={},Lt={},He={},Bt={},Le={},Be={},Ge={},Je={},Ne={},Qe={},We={},Gt={},Xe={},Ye={},Ze={},ts={},es={},ss={},rs={},as={},ns={},is={},Jt={},os={},cs={},us={},ms={},ys={},bs={},ls={},gs={},ps={},fs={},$s=new Uint8Array,Hs=new Uint8Array,Ls=new Uint8Array([0,0,0,0,0,192,102,64]),Bs=new Uint8Array,Gs=new Uint8Array([0,0,0,0,0,32,111,64]),Js=new Uint8Array,Ns=new Uint8Array([20,174,71,225,122,148,105,64]),Qs=new Uint8Array([44,18,0,1]),Ws=new Uint8Array([99,101,110,116,101,114,32,112,111,105,110,116,32,120,0]),Xs=new Uint8Array,Ys=new Uint8Array,Zs=new Uint8Array([0,0,0,0,0,192,99,64]),tr=new Uint8Array,er=new Uint8Array([0,0,0,0,0,32,111,64]),sr=new Uint8Array,rr=new Uint8Array([133,235,81,184,30,197,102,64]),ar=new Uint8Array([84,18,0,1]),nr=new Uint8Array([99,101,110,116,101,114,32,112,111,105,110,116,32,121,0]),ir=new Uint8Array,or=new Uint8Array,cr=new Uint8Array([0,0,0,0,0,0,240,63]),ur=new Uint8Array,mr=new Uint8Array([0,0,0,0,0,160,159,64]),yr=new Uint8Array,br=new Uint8Array([0,0,0,0,0,48,116,64]),lr=new Uint8Array([132,18,0,1]),gr=new Uint8Array([115,101,116,32,105,109,97,103,101,32,104,101,105,103,104,116,0]),pr=new Uint8Array,fr=new Uint8Array,Or=new Uint8Array([1]),Sr=new Uint8Array,jr=new Uint8Array([3]),zr=new Uint8Array,dr=new Uint8Array([2]),hr=new Uint8Array([156,18,0,1]),wr=new Uint8Array([99,97,108,99,117,108,97,116,101,32,115,116,114,101,116,99,104,40,101,115,41,0]),Ar=new Uint8Array,Ur=new Uint8Array,Pr=new Uint8Array,Vr=new Uint8Array,Ir=new Uint8Array,Rr=new Uint8Array([4]),kr=new Uint8Array,qr=new Uint8Array,xr=new Uint8Array([40,16,0,1]),vr=new Uint8Array([100,101,102,111,114,109,101,114,0]),Er=new Uint8Array([60,16,0,1]),_r=new Uint8Array([70,114,97,110,107,32,82,101,105,116,98,101,114,103,101,114,0]),Cr=new Uint8Array,Kr=new Uint8Array([1]),Dr=new Uint8Array([94,16,0,1]),Fr=new Uint8Array([100,101,102,111,114,109,115,32,119,104,97,116,101,118,101,114,32,103,101,116,239,191,189,115,32,105,110,32,116,104,101,32,119,97,121,46,0]),Mr=new Uint8Array,Tr=new Uint8Array,$r=new Uint8Array,Hr=new Uint8Array([0]),Lr=new Uint8Array([1]),Os=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Br=new Uint8Array,Gr=new Uint8Array,Jr=new Uint8Array,Nr=new Uint8Array,Qr=new Uint8Array([4]),Nt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ss=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Wr=new Uint8Array,Xr=new Uint8Array,Yr=new Uint8Array,Zr=new Uint8Array,ta=new Uint8Array([4]),Qt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ea=new Uint8Array([215,163,76,67,246,40,54,67,0,128,161,67,2,0,0,0]),sa=new Uint8Array([27,0]),ra=new Uint8Array,aa=new Uint8Array,na=new Uint8Array,ia=new Uint8Array;Object.assign(Yt,{slots:{0:Ot,1:St,2:jt,3:zt,4:dt}});Object.assign(Ot,{structure:s,memory:{array:$s},slots:{0:nt}});Object.assign(nt,{structure:O});Object.assign(St,{structure:r,memory:{array:Hs},slots:{0:Zt}});Object.assign(Zt,{structure:b,memory:{array:Ls}});Object.assign(jt,{structure:r,memory:{array:Bs},slots:{0:te}});Object.assign(te,{structure:b,memory:{array:Gs}});Object.assign(zt,{structure:r,memory:{array:Js},slots:{0:ee}});Object.assign(ee,{structure:b,memory:{array:Ns}});Object.assign(dt,{structure:w,memory:{array:Qs},slots:{0:se}});Object.assign(se,{structure:q,memory:{array:Ws},reloc:16781868,const:!0});Object.assign(re,{slots:{0:ht,1:wt,2:At,3:Ut,4:Pt}});Object.assign(ht,{structure:s,memory:{array:Xs},slots:{0:nt}});Object.assign(wt,{structure:r,memory:{array:Ys},slots:{0:ae}});Object.assign(ae,{structure:b,memory:{array:Zs}});Object.assign(At,{structure:r,memory:{array:tr},slots:{0:ne}});Object.assign(ne,{structure:b,memory:{array:er}});Object.assign(Ut,{structure:r,memory:{array:sr},slots:{0:ie}});Object.assign(ie,{structure:b,memory:{array:rr}});Object.assign(Pt,{structure:w,memory:{array:ar},slots:{0:oe}});Object.assign(oe,{structure:q,memory:{array:nr},reloc:16781908,const:!0});Object.assign(ce,{slots:{0:Vt,1:It,2:Rt,3:kt,4:qt}});Object.assign(Vt,{structure:s,memory:{array:ir},slots:{0:nt}});Object.assign(It,{structure:r,memory:{array:or},slots:{0:ue}});Object.assign(ue,{structure:b,memory:{array:cr}});Object.assign(Rt,{structure:r,memory:{array:ur},slots:{0:me}});Object.assign(me,{structure:b,memory:{array:mr}});Object.assign(kt,{structure:r,memory:{array:yr},slots:{0:ye}});Object.assign(ye,{structure:b,memory:{array:br}});Object.assign(qt,{structure:h,memory:{array:lr},slots:{0:be}});Object.assign(be,{structure:k,memory:{array:gr},reloc:16781956,const:!0});Object.assign(le,{slots:{0:xt,1:vt,2:Et,3:_t,4:Ct}});Object.assign(xt,{structure:s,memory:{array:pr},slots:{0:ge}});Object.assign(ge,{structure:V});Object.assign(vt,{structure:o,memory:{array:fr},slots:{0:pe}});Object.assign(pe,{structure:p,memory:{array:Or}});Object.assign(Et,{structure:o,memory:{array:Sr},slots:{0:fe}});Object.assign(fe,{structure:p,memory:{array:jr}});Object.assign(_t,{structure:o,memory:{array:zr},slots:{0:Oe}});Object.assign(Oe,{structure:p,memory:{array:dr}});Object.assign(Ct,{structure:W,memory:{array:hr},slots:{0:Se}});Object.assign(Se,{structure:Q,memory:{array:wr},reloc:16781980,const:!0});Object.assign(je,{slots:{0:Kt,1:Dt,2:Ft,3:Mt}});Object.assign(Kt,{structure:G,memory:{array:Ar},slots:{0:Ot,1:St,2:jt,3:zt,4:dt}});Object.assign(Dt,{structure:J,memory:{array:Ur},slots:{0:ht,1:wt,2:At,3:Ut,4:Pt}});Object.assign(Ft,{structure:N,memory:{array:Pr},slots:{0:Vt,1:It,2:Rt,3:kt,4:qt}});Object.assign(Mt,{structure:X,memory:{array:Vr},slots:{0:xt,1:vt,2:Et,3:_t,4:Ct}});Object.assign(ze,{slots:{0:it}});Object.assign(it,{structure:o,memory:{array:Ir},slots:{0:de}});Object.assign(de,{structure:p,memory:{array:Rr}});Object.assign(he,{slots:{0:Tt}});Object.assign(Tt,{structure:A,memory:{array:kr},slots:{0:it}});Object.assign(we,{slots:{0:$t}});Object.assign($t,{structure:A,memory:{array:qr},slots:{0:it}});Object.assign(Ae,{slots:{0:Ue,1:Ve,2:Re,3:qe,4:ve,5:Ee,6:_e}});Object.assign(Ue,{structure:H,memory:{array:xr},slots:{0:Pe}});Object.assign(Pe,{structure:$,memory:{array:vr},reloc:16781352,const:!0});Object.assign(Ve,{structure:h,memory:{array:Er},slots:{0:Ie}});Object.assign(Ie,{structure:k,memory:{array:_r},reloc:16781372,const:!0});Object.assign(Re,{structure:o,memory:{array:Cr},slots:{0:ke}});Object.assign(ke,{structure:p,memory:{array:Kr}});Object.assign(qe,{structure:B,memory:{array:Dr},slots:{0:xe}});Object.assign(xe,{structure:L,memory:{array:Fr},reloc:16781406,const:!0});Object.assign(ve,{structure:Y,memory:{array:Mr},slots:{0:Kt,1:Dt,2:Ft,3:Mt}});Object.assign(Ee,{structure:Z,memory:{array:Tr},slots:{0:Tt}});Object.assign(_e,{structure:tt,memory:{array:$r},slots:{0:$t}});Object.assign(Ce,{slots:{0:Ke,1:De}});Object.assign(Ke,{structure:S,memory:{array:Hr}});Object.assign(De,{structure:S,memory:{array:Lr}});Object.assign(Fe,{memory:{array:Os},slots:{0:Me}});Object.assign(Me,{structure:v,memory:{array:Os,offset:0,length:8},slots:{0:Ht}});Object.assign(Ht,{structure:et,memory:{array:Br},reloc:0,const:!0});Object.assign(Te,{slots:{0:$e,1:He,2:Le}});Object.assign($e,{structure:s,memory:{array:Gr},slots:{0:Lt}});Object.assign(Lt,{structure:x});Object.assign(He,{structure:s,memory:{array:Jr},slots:{0:Bt}});Object.assign(Bt,{structure:yt});Object.assign(Le,{structure:o,memory:{array:Nr},slots:{0:Be}});Object.assign(Be,{structure:p,memory:{array:Qr}});Object.assign(Ge,{memory:{array:Nt},slots:{0:Je}});Object.assign(Je,{structure:st,memory:{array:Nt},slots:{0:Ne}});Object.assign(Ne,{structure:v,memory:{array:Nt,offset:0,length:8},slots:{0:Ht}});Object.assign(Qe,{memory:{array:Ss},slots:{0:We}});Object.assign(We,{structure:_,memory:{array:Ss,offset:0,length:8},slots:{0:Gt}});Object.assign(Gt,{structure:rt,memory:{array:Wr},reloc:0});Object.assign(Xe,{slots:{0:Ye,1:Ze,2:ts}});Object.assign(Ye,{structure:s,memory:{array:Xr},slots:{0:Lt}});Object.assign(Ze,{structure:s,memory:{array:Yr},slots:{0:Bt}});Object.assign(ts,{structure:o,memory:{array:Zr},slots:{0:es}});Object.assign(es,{structure:p,memory:{array:ta}});Object.assign(ss,{memory:{array:Qt},slots:{0:rs}});Object.assign(rs,{structure:at,memory:{array:Qt},slots:{0:as}});Object.assign(as,{structure:_,memory:{array:Qt,offset:0,length:8},slots:{0:Gt}});Object.assign(ns,{memory:{array:ea}});Object.assign(is,{slots:{0:Jt}});Object.assign(Jt,{structure:R,memory:{array:sa}});Object.assign(os,{slots:{0:Jt}});Object.assign(cs,{slots:{0:us,1:ys,2:ls,3:ps}});Object.assign(us,{structure:s,memory:{array:ra},slots:{0:ms}});Object.assign(ms,{structure:mt});Object.assign(ys,{structure:s,memory:{array:aa},slots:{0:bs}});Object.assign(bs,{structure:E});Object.assign(ls,{structure:s,memory:{array:na},slots:{0:gs}});Object.assign(gs,{structure:C});Object.assign(ps,{structure:s,memory:{array:ia},slots:{0:fs}});Object.assign(fs,{structure:K});const oa={argStruct:lt,thunkId:2,name:"createOutput"},ca={argStruct:pt,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(f,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign($,{...e,type:1,name:"[8:0]u8",length:8,byteSize:9,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(H,{...e,type:13,name:"*const [8:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[]}});Object.assign(k,{...e,type:1,name:"[16:0]u8",length:16,byteSize:17,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(h,{...e,type:13,name:"*const [16:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:k}],methods:[]}});Object.assign(o,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:o}],methods:[]}});Object.assign(p,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(L,{...e,type:1,name:"[36:0]u8",length:36,byteSize:37,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(B,{...e,type:13,name:"*const [36:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[]}});Object.assign(r,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(q,{...e,type:1,name:"[14:0]u8",length:14,byteSize:15,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(w,{...e,type:13,name:"*const [14:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:q}],methods:[]}});Object.assign(O,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:O}],methods:[]}});Object.assign(b,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:b}],methods:[]}});Object.assign(G,{...e,type:2,name:"Struct3634399580",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:r},{...t,type:9,slot:2,name:"maxValue",structure:r},{...t,type:9,slot:3,name:"defaultValue",structure:r},{...t,type:9,slot:4,name:"description",structure:w}],methods:[],template:Yt}});Object.assign(J,{...e,type:2,name:"Struct3192383015",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:r},{...t,type:9,slot:2,name:"maxValue",structure:r},{...t,type:9,slot:3,name:"defaultValue",structure:r},{...t,type:9,slot:4,name:"description",structure:w}],methods:[],template:re}});Object.assign(N,{...e,type:2,name:"Struct159051341",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:r},{...t,type:9,slot:2,name:"maxValue",structure:r},{...t,type:9,slot:3,name:"defaultValue",structure:r},{...t,type:9,slot:4,name:"description",structure:h}],methods:[],template:ce}});Object.assign(Q,{...e,type:1,name:"[21:0]u8",length:21,byteSize:22,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(W,{...e,type:13,name:"*const [21:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[]}});Object.assign(V,{...e,name:"i32",byteSize:4,align:4,instance:{members:[{...t,type:2,bitOffset:0,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(X,{...e,type:2,name:"Struct2458889317",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:o},{...t,type:9,slot:2,name:"maxValue",structure:o},{...t,type:9,slot:3,name:"defaultValue",structure:o},{...t,type:9,slot:4,name:"description",structure:W}],methods:[],template:le}});Object.assign(Y,{...e,type:2,name:"Struct4255862122",align:1,instance:{members:[{...t,type:9,slot:0,name:"center_x",structure:G},{...t,type:9,slot:1,name:"center_y",structure:J},{...t,type:9,slot:2,name:"imageHeight",structure:N},{...t,type:9,slot:3,name:"stretch",structure:X}],methods:[],template:je}});Object.assign(A,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:o}],methods:[],template:ze}});Object.assign(Z,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:9,slot:0,name:"src",structure:A}],methods:[],template:he}});Object.assign(tt,{...e,type:2,name:"Struct199712073",align:1,instance:{members:[{...t,type:9,slot:0,name:"pxl",structure:A}],methods:[],template:we}});Object.assign(mt,{...e,type:2,name:"deformer.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:H},{...t,type:9,slot:1,name:"vendor",structure:h},{...t,type:9,slot:2,name:"version",structure:o},{...t,type:9,slot:3,name:"description",structure:B},{...t,type:9,slot:4,name:"parameters",structure:Y},{...t,type:9,slot:5,name:"inputImages",structure:Z},{...t,type:9,slot:6,name:"outputImages",structure:tt}],methods:[],template:Ae}});Object.assign(x,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(et,{...e,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:x}],methods:[]}});Object.assign(v,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:et}],methods:[]}});Object.assign(y,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[]}});Object.assign(S,{...e,type:11,name:"deformer.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:S},{...t,type:9,slot:1,name:"display-p3",structure:S}],methods:[],template:Ce}});Object.assign(I,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(yt,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:O}],methods:[]}});Object.assign(st,{...e,type:2,name:"deformer.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:v},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:S},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:I}],methods:[],template:Fe},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:o}],methods:[],template:Te}});Object.assign(E,{...e,type:2,name:"deformer.KernelInput(u8,deformer.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:st}],methods:[],template:Ge}});Object.assign(rt,{...e,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:x}],methods:[]}});Object.assign(_,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:rt}],methods:[]}});Object.assign(at,{...e,type:2,name:"deformer.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:_},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:S},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:I}],methods:[],template:Qe},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:o}],methods:[],template:Xe}});Object.assign(C,{...e,type:2,name:"deformer.KernelOutput(u8,deformer.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"pxl",structure:at}],methods:[],template:ss}});Object.assign(K,{...e,type:2,name:"deformer.KernelParameters(deformer.kernel)",byteSize:16,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"center_x",structure:O},{...t,type:4,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"center_y",structure:O},{...t,type:4,bitOffset:64,bitSize:32,byteSize:4,slot:2,name:"imageHeight",structure:O},{...t,type:2,bitOffset:96,bitSize:32,byteSize:4,slot:3,name:"stretch",structure:V}],methods:[],template:ns}});Object.assign(R,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(deformer.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:R}],methods:[],template:is}});Object.assign(bt,{...e,type:9,name:"ErrorSet155116655!deformer.KernelOutput(u8,deformer.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:C},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:R}],methods:[]}});Object.assign(lt,{...e,type:5,name:"createOutput",byteSize:76,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:y},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:y},{...t,type:7,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:E},{...t,type:7,isRequired:!0,bitOffset:256,bitSize:128,byteSize:16,slot:1,name:"3",structure:K},{...t,type:7,isRequired:!0,bitOffset:384,bitSize:224,byteSize:28,slot:2,name:"retval",structure:bt}],methods:[]}});Object.assign(T,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(deformer.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:T}],methods:[],template:os}});Object.assign(gt,{...e,type:9,name:"ErrorSet2921334905!deformer.KernelOutput(u8,deformer.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:C},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:T}],methods:[]}});Object.assign(pt,{...e,type:5,name:"createPartialOutput",byteSize:84,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:y},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:y},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:y},{...t,type:7,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:E},{...t,type:7,isRequired:!0,bitOffset:320,bitSize:128,byteSize:16,slot:1,name:"5",structure:K},{...t,type:7,isRequired:!0,bitOffset:448,bitSize:224,byteSize:28,slot:2,name:"retval",structure:gt}],methods:[]}});Object.assign(ft,{...e,type:2,name:"deformer",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:s},{...t,type:9,slot:1,name:"Input",structure:s},{...t,type:9,slot:2,name:"Output",structure:s},{...t,type:9,slot:3,name:"Parameters",structure:s}],methods:[oa,ca],template:cs}});const ua=[s,f,$,H,k,h,o,p,L,B,r,q,w,O,b,G,J,N,Q,W,V,X,Y,A,Z,tt,mt,x,et,v,y,S,I,yt,st,E,rt,_,at,C,K,R,bt,lt,T,gt,pt,ft],ma=ft,ya={runtimeSafety:!1,littleEndian:!0},ot=Ms();ot.getControlObject();ot.recreateStructures(ua,ya);const ba=(async()=>{const c=new URL("deformer-520727d6.wasm",import.meta.url).href;return fetch(c)})();ot.loadModule(ba);ot.linkVariables(!0);const{constructor:la}=ma,{createPartialOutput:ga,Input:pa,kernel:ut}=la;function fa(c,u,n,a,i={},j={}){const z=[];for(const[l]of ut.inputImages)z.push(l);const U=[];for(const[l]of ut.outputImages)U.push(l);if(Array.isArray(i)){const l=i;i={};for(const[g,d]of z.entries())i[d]=l[g]}const m=new pa(void 0),D=[];let P;for(const l of z){let g=i[l];if(g||(z.length===1&&["data","width","height"].every(d=>!!i[d])?g=i:D.push(l)),m[l]=g,P){if(g.colorSpace!==P)throw new Error(`Input images must all use the same color space: ${P}`)}else P=g.colorSpace}if(D.length>0)throw new Error(`Missing input image${D.length>1?"s":""}: ${D.join(", ")}`);const ct=ga(c,u,n,a,m,j),Wt=l=>{const g={};for(const d of U){const{data:{typedArray:F},width:Xt,height:zs}=l[d];let M;if(typeof ImageData=="function"){const ds=new Uint8ClampedArray(F.buffer,F.byteOffset,F.byteLength);M=new ImageData(ds,Xt,a,{colorSpace:P})}else M={data:F,width:Xt,height:zs};if(U.length===1)return M;g[d]=M}return g};return ct[Symbol.toStringTag]==="Promise"?ct.then(Wt):Wt(ct)}function Oa(){const c={};for(let[u,n]of ut){if(u==="parameters"){const a={};for(const[i,j]of n){const z=a[i]={};for(let[U,m]of j)typeof m=="object"?"string"in m?m=m.string:m=js(m):typeof m=="function"&&(m=Sa(m.name)),z[U]=m}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());c[u]=n}return c}function js(c){const u=[];for(let[n,a]of c)typeof a=="object"&&(a=js(a)),u[n]=a;return u}function Sa(c){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[c]}onmessage=c=>{const[u,n,...a]=c.data;ja(u,a).then(([i,j])=>{postMessage([u,n,i],{transfer:j})}).catch(i=>{postMessage(["error",n,i])})};async function ja(c,u){switch(c){case"getKernelInfo":return[Oa(...u)];case"createPartialImageData":const a=await fa(...u),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const j of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${c}`)}}
