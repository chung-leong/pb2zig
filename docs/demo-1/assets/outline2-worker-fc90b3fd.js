import{u as $e,a as Le,b as Be,c as Ge,d as He,e as Je,f as Ne,g as Qe,h as We,i as Xe,j as Ye,k as Ze,l as ts,m as es,n as ss,p as rs,o as ns,q as as,r as is,s as os}from"./index-58d89d46.js";$e();Ye();Ze();Le();Be();ts();es();ss();rs();Ge();He();Je();Ne();ns();os();Qe();as();We();Xe();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},f={},_={},D={},F={},M={},b={},O={},T={},$={},o={},S={},p={},L={},B={},G={},d={},H={},J={},st={},V={},N={},I={},m={},g={},U={},rt={},Q={},R={},W={},k={},X={},q={},v={},P={},nt={},at={},K={},it={},ot={},ut={},qt={},ct={},mt={},yt={},vt={},bt={},Et={},lt={},xt={},Ct={},pt={},gt={},Kt={},ft={},_t={},Ot={},Dt={},Ft={},St={},zt={},Mt={},Y={},Tt={},$t={},jt={},Lt={},ht={},Bt={},Gt={},Ht={},Jt={},Nt={},Qt={},Wt={},Xt={},Yt={},Zt={},te={},ee={},se={},re={},ne={},ae={},ie={},dt={},oe={},ue={},wt={},ce={},At={},me={},ye={},be={},le={},pe={},ge={},fe={},Ut={},Oe={},Se={},ze={},je={},he={},de={},we={},Ae={},Ue={},Pe={},Pt={},Ve={},Ie={},Re={},ke={},qe={},ve={},Ee={},xe={},Ce={},Ke={},us=new Uint8Array,cs=new Uint8Array,ms=new Uint8Array([0,0,0,0,0,0,0,0]),ys=new Uint8Array,bs=new Uint8Array([0,0,0,0,0,0,240,63]),ls=new Uint8Array,ps=new Uint8Array([0,0,0,0,0,0,0,0]),gs=new Uint8Array,fs=new Uint8Array,Os=new Uint8Array([154,153,153,153,153,153,201,63]),Ss=new Uint8Array,zs=new Uint8Array([0,0,0,0,0,0,240,63]),js=new Uint8Array,hs=new Uint8Array([0,0,0,0,0,0,224,63]),ds=new Uint8Array,ws=new Uint8Array,As=new Uint8Array,Us=new Uint8Array([3]),Ps=new Uint8Array,Vs=new Uint8Array,Is=new Uint8Array([240,4,0,1]),Rs=new Uint8Array([97,114,46,115,104,97,100,101,114,46,111,117,116,108,105,110,101,0]),ks=new Uint8Array([13,5,0,1]),qs=new Uint8Array([65,108,97,110,32,82,111,115,115,0]),vs=new Uint8Array,Es=new Uint8Array([1]),xs=new Uint8Array([40,5,0,1]),Cs=new Uint8Array([79,117,116,108,105,110,101,0]),Ks=new Uint8Array,_s=new Uint8Array,Ds=new Uint8Array,Fs=new Uint8Array([0]),Ms=new Uint8Array([1]),_e=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ts=new Uint8Array,$s=new Uint8Array,Ls=new Uint8Array,Bs=new Uint8Array,Gs=new Uint8Array([3]),Vt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),De=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Hs=new Uint8Array,Js=new Uint8Array,Ns=new Uint8Array,Qs=new Uint8Array,Ws=new Uint8Array([3]),It=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Xs=new Uint8Array([0,0,0,0,0,0,0,63]),Ys=new Uint8Array([27,0]),Zs=new Uint8Array,tr=new Uint8Array,er=new Uint8Array,sr=new Uint8Array;Object.assign(qt,{slots:{0:ct,1:yt,2:bt,3:lt}});Object.assign(ct,{structure:s,memory:{array:us},slots:{0:mt}});Object.assign(mt,{structure:S});Object.assign(yt,{structure:o,memory:{array:cs},slots:{0:vt}});Object.assign(vt,{structure:p,memory:{array:ms}});Object.assign(bt,{structure:o,memory:{array:ys},slots:{0:Et}});Object.assign(Et,{structure:p,memory:{array:bs}});Object.assign(lt,{structure:o,memory:{array:ls},slots:{0:xt}});Object.assign(xt,{structure:p,memory:{array:ps}});Object.assign(Ct,{slots:{0:pt,1:gt,2:ft,3:Ot}});Object.assign(pt,{structure:s,memory:{array:gs},slots:{0:mt}});Object.assign(gt,{structure:o,memory:{array:fs},slots:{0:Kt}});Object.assign(Kt,{structure:p,memory:{array:Os}});Object.assign(ft,{structure:o,memory:{array:Ss},slots:{0:_t}});Object.assign(_t,{structure:p,memory:{array:zs}});Object.assign(Ot,{structure:o,memory:{array:js},slots:{0:Dt}});Object.assign(Dt,{structure:p,memory:{array:hs}});Object.assign(Ft,{slots:{0:St,1:zt}});Object.assign(St,{structure:L,memory:{array:ds},slots:{0:ct,1:yt,2:bt,3:lt}});Object.assign(zt,{structure:B,memory:{array:ws},slots:{0:pt,1:gt,2:ft,3:Ot}});Object.assign(Mt,{slots:{0:Y}});Object.assign(Y,{structure:b,memory:{array:As},slots:{0:Tt}});Object.assign(Tt,{structure:O,memory:{array:Us}});Object.assign($t,{slots:{0:jt}});Object.assign(jt,{structure:d,memory:{array:Ps},slots:{0:Y}});Object.assign(Lt,{slots:{0:ht}});Object.assign(ht,{structure:d,memory:{array:Vs},slots:{0:Y}});Object.assign(Bt,{slots:{0:Gt,1:Jt,2:Qt,3:Xt,4:Zt,5:te,6:ee}});Object.assign(Gt,{structure:D,memory:{array:Is},slots:{0:Ht}});Object.assign(Ht,{structure:_,memory:{array:Rs},reloc:16778480,const:!0});Object.assign(Jt,{structure:M,memory:{array:ks},slots:{0:Nt}});Object.assign(Nt,{structure:F,memory:{array:qs},reloc:16778509,const:!0});Object.assign(Qt,{structure:b,memory:{array:vs},slots:{0:Wt}});Object.assign(Wt,{structure:O,memory:{array:Es}});Object.assign(Xt,{structure:$,memory:{array:xs},slots:{0:Yt}});Object.assign(Yt,{structure:T,memory:{array:Cs},reloc:16778536,const:!0});Object.assign(Zt,{structure:G,memory:{array:Ks},slots:{0:St,1:zt}});Object.assign(te,{structure:H,memory:{array:_s},slots:{0:jt}});Object.assign(ee,{structure:J,memory:{array:Ds},slots:{0:ht}});Object.assign(se,{slots:{0:re,1:ne}});Object.assign(re,{structure:g,memory:{array:Fs}});Object.assign(ne,{structure:g,memory:{array:Ms}});Object.assign(ae,{memory:{array:_e},slots:{0:ie}});Object.assign(ie,{structure:I,memory:{array:_e,offset:0,length:8},slots:{0:dt}});Object.assign(dt,{structure:N,memory:{array:Ts},reloc:0,const:!0});Object.assign(oe,{slots:{0:ue,1:ce,2:me}});Object.assign(ue,{structure:s,memory:{array:$s},slots:{0:wt}});Object.assign(wt,{structure:V});Object.assign(ce,{structure:s,memory:{array:Ls},slots:{0:At}});Object.assign(At,{structure:rt});Object.assign(me,{structure:b,memory:{array:Bs},slots:{0:ye}});Object.assign(ye,{structure:O,memory:{array:Gs}});Object.assign(be,{memory:{array:Vt},slots:{0:le}});Object.assign(le,{structure:Q,memory:{array:Vt},slots:{0:pe}});Object.assign(pe,{structure:I,memory:{array:Vt,offset:0,length:8},slots:{0:dt}});Object.assign(ge,{memory:{array:De},slots:{0:fe}});Object.assign(fe,{structure:k,memory:{array:De,offset:0,length:8},slots:{0:Ut}});Object.assign(Ut,{structure:W,memory:{array:Hs},reloc:0});Object.assign(Oe,{slots:{0:Se,1:ze,2:je}});Object.assign(Se,{structure:s,memory:{array:Js},slots:{0:wt}});Object.assign(ze,{structure:s,memory:{array:Ns},slots:{0:At}});Object.assign(je,{structure:b,memory:{array:Qs},slots:{0:he}});Object.assign(he,{structure:O,memory:{array:Ws}});Object.assign(de,{memory:{array:It},slots:{0:we}});Object.assign(we,{structure:X,memory:{array:It},slots:{0:Ae}});Object.assign(Ae,{structure:k,memory:{array:It,offset:0,length:8},slots:{0:Ut}});Object.assign(Ue,{memory:{array:Xs}});Object.assign(Pe,{slots:{0:Pt}});Object.assign(Pt,{structure:P,memory:{array:Ys}});Object.assign(Ve,{slots:{0:Pt}});Object.assign(Ie,{slots:{0:Re,1:qe,2:Ee,3:Ce}});Object.assign(Re,{structure:s,memory:{array:Zs},slots:{0:ke}});Object.assign(ke,{structure:st});Object.assign(qe,{structure:s,memory:{array:tr},slots:{0:ve}});Object.assign(ve,{structure:R});Object.assign(Ee,{structure:s,memory:{array:er},slots:{0:xe}});Object.assign(xe,{structure:q});Object.assign(Ce,{structure:s,memory:{array:sr},slots:{0:Ke}});Object.assign(Ke,{structure:v});const rr={argStruct:at,thunkId:2,name:"createOutput"},nr={argStruct:ot,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(f,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(_,{...e,type:1,name:"[17:0]u8",length:17,byteSize:18,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(D,{...e,type:13,name:"*const [17:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[]}});Object.assign(F,{...e,type:1,name:"[9:0]u8",length:9,byteSize:10,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(M,{...e,type:13,name:"*const [9:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(b,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:b}],methods:[]}});Object.assign(O,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(T,{...e,type:1,name:"[7:0]u8",length:7,byteSize:8,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign($,{...e,type:13,name:"*const [7:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[]}});Object.assign(o,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:o}],methods:[]}});Object.assign(S,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(p,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:p}],methods:[]}});Object.assign(L,{...e,type:2,name:"Struct2890073165",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:o},{...t,type:9,slot:2,name:"maxValue",structure:o},{...t,type:9,slot:3,name:"defaultValue",structure:o}],methods:[],template:qt}});Object.assign(B,{...e,type:2,name:"Struct3799330179",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:o},{...t,type:9,slot:2,name:"maxValue",structure:o},{...t,type:9,slot:3,name:"defaultValue",structure:o}],methods:[],template:Ct}});Object.assign(G,{...e,type:2,name:"Struct656337515",align:1,instance:{members:[{...t,type:9,slot:0,name:"n0",structure:L},{...t,type:9,slot:1,name:"n1",structure:B}],methods:[],template:Ft}});Object.assign(d,{...e,type:2,name:"Struct3196272719",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:b}],methods:[],template:Mt}});Object.assign(H,{...e,type:2,name:"Struct3897456493",align:1,instance:{members:[{...t,type:9,slot:0,name:"src",structure:d}],methods:[],template:$t}});Object.assign(J,{...e,type:2,name:"Struct4047475671",align:1,instance:{members:[{...t,type:9,slot:0,name:"dst",structure:d}],methods:[],template:Lt}});Object.assign(st,{...e,type:2,name:"outline2.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:D},{...t,type:9,slot:1,name:"vendor",structure:M},{...t,type:9,slot:2,name:"version",structure:b},{...t,type:9,slot:3,name:"description",structure:$},{...t,type:9,slot:4,name:"parameters",structure:G},{...t,type:9,slot:5,name:"inputImages",structure:H},{...t,type:9,slot:6,name:"outputImages",structure:J}],methods:[],template:Bt}});Object.assign(V,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(N,{...e,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(I,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:N}],methods:[]}});Object.assign(m,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[]}});Object.assign(g,{...e,type:11,name:"outline2.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:g},{...t,type:9,slot:1,name:"display-p3",structure:g}],methods:[],template:se}});Object.assign(U,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:U}],methods:[]}});Object.assign(rt,{...e,type:15,name:"@Vector(3, f32)",length:3,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(Q,{...e,type:2,name:"outline2.Image(u8,3,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:I},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:g},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:ae},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:b}],methods:[],template:oe}});Object.assign(R,{...e,type:2,name:"outline2.KernelInput(u8,outline2.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:Q}],methods:[],template:be}});Object.assign(W,{...e,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(k,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:W}],methods:[]}});Object.assign(X,{...e,type:2,name:"outline2.Image(u8,3,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:k},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:g},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:ge},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:b}],methods:[],template:Oe}});Object.assign(q,{...e,type:2,name:"outline2.KernelOutput(u8,outline2.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:X}],methods:[],template:de}});Object.assign(v,{...e,type:2,name:"outline2.KernelParameters(outline2.kernel)",byteSize:8,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"n0",structure:S},{...t,type:4,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"n1",structure:S}],methods:[],template:Ue}});Object.assign(P,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(outline2.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:P}],methods:[],template:Pe}});Object.assign(nt,{...e,type:9,name:"ErrorSet2505626852!outline2.KernelOutput(u8,outline2.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:q},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:P}],methods:[]}});Object.assign(at,{...e,type:5,name:"createOutput",byteSize:68,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...t,type:7,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:R},{...t,type:7,isRequired:!0,bitOffset:256,bitSize:64,byteSize:8,slot:1,name:"3",structure:v},{...t,type:7,isRequired:!0,bitOffset:320,bitSize:224,byteSize:28,slot:2,name:"retval",structure:nt}],methods:[]}});Object.assign(K,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(outline2.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:K}],methods:[],template:Ve}});Object.assign(it,{...e,type:9,name:"ErrorSet1307133774!outline2.KernelOutput(u8,outline2.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:q},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:K}],methods:[]}});Object.assign(ot,{...e,type:5,name:"createPartialOutput",byteSize:76,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:m},{...t,type:7,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:R},{...t,type:7,isRequired:!0,bitOffset:320,bitSize:64,byteSize:8,slot:1,name:"5",structure:v},{...t,type:7,isRequired:!0,bitOffset:384,bitSize:224,byteSize:28,slot:2,name:"retval",structure:it}],methods:[]}});Object.assign(ut,{...e,type:2,name:"outline2",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:s},{...t,type:9,slot:1,name:"Input",structure:s},{...t,type:9,slot:2,name:"Output",structure:s},{...t,type:9,slot:3,name:"Parameters",structure:s}],methods:[rr,nr],template:Ie}});const ar=[s,f,_,D,F,M,b,O,T,$,o,S,p,L,B,G,d,H,J,st,V,N,I,m,g,U,rt,Q,R,W,k,X,q,v,P,nt,at,K,it,ot,ut],ir=ut,or={runtimeSafety:!1,littleEndian:!0},Z=is();Z.getControlObject();Z.recreateStructures(ar,or);const ur=(async()=>{const i=new URL("outline2-63cac139.wasm",import.meta.url).href;return fetch(i)})();Z.loadModule(ur);Z.linkVariables(!0);const{constructor:cr}=ir,{createPartialOutput:mr,Input:yr,kernel:et}=cr;function br(i,u,n,r,a={},z={}){const j=[];for(const[y]of et.inputImages)j.push(y);const w=[];for(const[y]of et.outputImages)w.push(y);if(Array.isArray(a)){const y=a;a={};for(const[l,h]of j.entries())a[h]=y[l]}const c=new yr(void 0),E=[];let A;for(const y of j){let l=a[y];if(l||(j.length===1&&["data","width","height"].every(h=>!!a[h])?l=a:E.push(y)),c[y]=l,A){if(l.colorSpace!==A)throw new Error(`Input images must all use the same color space: ${A}`)}else A=l.colorSpace}if(E.length>0)throw new Error(`Missing input image${E.length>1?"s":""}: ${E.join(", ")}`);const tt=mr(i,u,n,r,c,z),Rt=y=>{const l={};for(const h of w){const{data:{typedArray:x},width:kt,height:Me}=y[h];let C;if(typeof ImageData=="function"){const Te=new Uint8ClampedArray(x.buffer,x.byteOffset,x.byteLength);C=new ImageData(Te,kt,r,{colorSpace:A})}else C={data:x,width:kt,height:Me};if(w.length===1)return C;l[h]=C}return l};return tt[Symbol.toStringTag]==="Promise"?tt.then(Rt):Rt(tt)}function lr(){const i={};for(let[u,n]of et){if(u==="parameters"){const r={};for(const[a,z]of n){const j=r[a]={};for(let[w,c]of z)typeof c=="object"?"string"in c?c=c.string:c=Fe(c):typeof c=="function"&&(c=pr(c.name)),j[w]=c}n=r}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());i[u]=n}return i}function Fe(i){const u=[];for(let[n,r]of i)typeof r=="object"&&(r=Fe(r)),u[n]=r;return u}function pr(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[u,n,...r]=i.data;gr(u,r).then(([a,z])=>{postMessage([u,n,a],{transfer:z})}).catch(a=>{postMessage(["error",n,a])})};async function gr(i,u){switch(i){case"getKernelInfo":return[lr(...u)];case"createPartialImageData":const r=await br(...u),a=[];if("data"in r&&"width"in r&&"height"in r)a.push(r.data.buffer);else for(const z of Object.entries(r))a.push(r.data.buffer);return[r,a];default:throw new Error(`Unknown function: ${i}`)}}
