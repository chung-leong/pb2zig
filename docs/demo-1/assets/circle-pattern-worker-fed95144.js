import{u as rr,a as ar,b as nr,c as or,d as ir,e as cr,f as ur,g as mr,h as yr,i as lr,j as br,k as pr,l as gr,m as Or,n as fr,p as jr,o as Sr,q as zr,r as dr,s as hr}from"./index-25a52593.js";rr();br();pr();ar();nr();gr();Or();fr();jr();or();ir();cr();ur();Sr();hr();mr();zr();yr();lr();const s={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},r={},d={},M={},h={},T={},$={},b={},f={},e={},g={},a={},L={},B={},G={},H={},J={},V={},N={},Q={},W={},X={},Y={},Z={},tt={},et={},w={},st={},rt={},lt={},R={},at={},k={},y={},O={},P={},bt={},nt={},q={},ot={},x={},it={},v={},E={},I={},pt={},gt={},F={},Ot={},ft={},jt={},ze={},St={},K={},zt={},de={},dt={},he={},ht={},we={},Ae={},wt={},At={},Ue={},Ut={},Ve={},Vt={},Pe={},Ie={},Pt={},Re={},It={},ke={},qe={},Rt={},xe={},kt={},ve={},Ee={},qt={},Ke={},xt={},Ce={},_e={},vt={},Et={},Kt={},Ct={},_t={},De={},Dt={},Fe={},Ft={},Me={},Te={},Mt={},$e={},Tt={},Le={},Be={},$t={},Ge={},Lt={},He={},Je={},Bt={},Gt={},Ht={},Jt={},Ne={},Nt={},Qt={},Qe={},Wt={},We={},Xt={},Xe={},Ye={},Yt={},Zt={},Ze={},te={},ts={},ee={},es={},ss={},se={},re={},ae={},ne={},oe={},ie={},rs={},ct={},as={},ns={},ce={},os={},ue={},is={},cs={},me={},us={},ms={},ys={},ls={},bs={},ps={},gs={},Os={},fs={},js={},Ss={},zs={},ds={},ye={},hs={},ws={},le={},As={},be={},Us={},Vs={},Ps={},Is={},Rs={},ks={},qs={},pe={},xs={},vs={},Es={},Ks={},Cs={},_s={},Ds={},Fs={},Ms={},Ts={},ge={},$s={},Ls={},Bs={},Gs={},Hs={},Js={},Ns={},Qs={},Ws={},Xs={},wr=new Uint8Array,Ar=new Uint8Array,Ur=new Uint8Array([0,0,0,0,0,0,0,0]),Vr=new Uint8Array,Pr=new Uint8Array([31,133,235,81,184,30,213,63]),Ir=new Uint8Array,Rr=new Uint8Array([113,61,10,215,163,112,205,63]),kr=new Uint8Array,qr=new Uint8Array,xr=new Uint8Array([0,0,0,0,0,0,240,63]),vr=new Uint8Array,Er=new Uint8Array([0,0,0,0,0,0,52,64]),Kr=new Uint8Array,Cr=new Uint8Array([0,0,0,0,0,0,240,63]),_r=new Uint8Array,Dr=new Uint8Array([154,153,153,153,153,153,185,63]),Fr=new Uint8Array,Mr=new Uint8Array([154,153,153,153,153,153,185,63]),Tr=new Uint8Array,$r=new Uint8Array([0,0,0,0,0,0,32,64]),Lr=new Uint8Array,Br=new Uint8Array([0,0,0,0,0,0,32,64]),Gr=new Uint8Array,Hr=new Uint8Array([0,0,0,0,0,0,8,64]),Jr=new Uint8Array,Nr=new Uint8Array([145,43,80,230,122,182,251,63]),Qr=new Uint8Array,Wr=new Uint8Array,Xr=new Uint8Array,Yr=new Uint8Array,Zr=new Uint8Array,ta=new Uint8Array([0,0,0,0,0,0,52,192]),ea=new Uint8Array,sa=new Uint8Array([0,0,0,0,0,0,52,192]),ra=new Uint8Array,aa=new Uint8Array([0,0,0,0,0,0,121,64]),na=new Uint8Array,oa=new Uint8Array([0,0,0,0,0,0,121,64]),ia=new Uint8Array,ca=new Uint8Array([0,0,0,0,0,0,94,64]),ua=new Uint8Array,ma=new Uint8Array([0,0,0,0,0,64,96,64]),ya=new Uint8Array,la=new Uint8Array,ba=new Uint8Array,pa=new Uint8Array,ga=new Uint8Array,Oa=new Uint8Array,fa=new Uint8Array([252,169,241,210,77,98,80,63]),ja=new Uint8Array,Sa=new Uint8Array([154,153,153,153,153,153,185,63]),za=new Uint8Array,da=new Uint8Array([123,20,174,71,225,122,116,63]),ha=new Uint8Array,wa=new Uint8Array,Aa=new Uint8Array([252,169,241,210,77,98,80,63]),Ua=new Uint8Array,Va=new Uint8Array([0,0,0,0,0,0,240,63]),Pa=new Uint8Array,Ia=new Uint8Array([154,153,153,153,153,153,169,63]),Ra=new Uint8Array,ka=new Uint8Array,qa=new Uint8Array,xa=new Uint8Array,va=new Uint8Array,Ea=new Uint8Array,Ka=new Uint8Array,Ca=new Uint8Array([4]),_a=new Uint8Array,Da=new Uint8Array,Fa=new Uint8Array([244,4,0,1]),Ma=new Uint8Array([67,105,114,99,108,101,80,97,116,116,101,114,110,0]),Ta=new Uint8Array([13,5,0,1]),$a=new Uint8Array([80,101,116,114,105,32,76,101,115,107,105,110,101,110,0]),La=new Uint8Array,Ba=new Uint8Array([1]),Ga=new Uint8Array([244,4,0,1]),Ha=new Uint8Array,Ja=new Uint8Array,Na=new Uint8Array,Qa=new Uint8Array([0]),Wa=new Uint8Array([1]),Ys=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Xa=new Uint8Array,Ya=new Uint8Array,Za=new Uint8Array,tn=new Uint8Array,en=new Uint8Array([4]),Oe=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Zs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),sn=new Uint8Array,rn=new Uint8Array,an=new Uint8Array,nn=new Uint8Array,on=new Uint8Array([4]),fe=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),cn=new Uint8Array([0,0,64,64,215,179,221,63,0,0,240,66,0,0,2,67,31,133,107,62,0,0,128,63,10,215,163,59,205,204,76,61]),un=new Uint8Array([27,0]),mn=new Uint8Array,yn=new Uint8Array,ln=new Uint8Array,bn=new Uint8Array;Object.assign(ze,{slots:{0:St,1:zt,2:dt,3:ht}});Object.assign(St,{structure:r,memory:{array:wr},slots:{0:K}});Object.assign(K,{structure:g});Object.assign(zt,{structure:e,memory:{array:Ar},slots:{0:de}});Object.assign(de,{structure:a,memory:{array:Ur}});Object.assign(dt,{structure:e,memory:{array:Vr},slots:{0:he}});Object.assign(he,{structure:a,memory:{array:Pr}});Object.assign(ht,{structure:e,memory:{array:Ir},slots:{0:we}});Object.assign(we,{structure:a,memory:{array:Rr}});Object.assign(Ae,{slots:{0:wt,1:At,2:Ut,3:Vt}});Object.assign(wt,{structure:r,memory:{array:kr},slots:{0:K}});Object.assign(At,{structure:e,memory:{array:qr},slots:{0:Ue}});Object.assign(Ue,{structure:a,memory:{array:xr}});Object.assign(Ut,{structure:e,memory:{array:vr},slots:{0:Ve}});Object.assign(Ve,{structure:a,memory:{array:Er}});Object.assign(Vt,{structure:e,memory:{array:Kr},slots:{0:Pe}});Object.assign(Pe,{structure:a,memory:{array:Cr}});Object.assign(Ie,{slots:{0:Pt,1:It}});Object.assign(Pt,{structure:e,memory:{array:_r},slots:{0:Re}});Object.assign(Re,{structure:a,memory:{array:Dr}});Object.assign(It,{structure:e,memory:{array:Fr},slots:{0:ke}});Object.assign(ke,{structure:a,memory:{array:Mr}});Object.assign(qe,{slots:{0:Rt,1:kt}});Object.assign(Rt,{structure:e,memory:{array:Tr},slots:{0:xe}});Object.assign(xe,{structure:a,memory:{array:$r}});Object.assign(kt,{structure:e,memory:{array:Lr},slots:{0:ve}});Object.assign(ve,{structure:a,memory:{array:Br}});Object.assign(Ee,{slots:{0:qt,1:xt}});Object.assign(qt,{structure:e,memory:{array:Gr},slots:{0:Ke}});Object.assign(Ke,{structure:a,memory:{array:Hr}});Object.assign(xt,{structure:e,memory:{array:Jr},slots:{0:Ce}});Object.assign(Ce,{structure:a,memory:{array:Nr}});Object.assign(_e,{slots:{0:vt,1:Kt,2:Ct,3:_t}});Object.assign(vt,{structure:r,memory:{array:Qr},slots:{0:Et}});Object.assign(Et,{structure:V});Object.assign(Kt,{structure:G,memory:{array:Wr},slots:{0:Pt,1:It}});Object.assign(Ct,{structure:H,memory:{array:Xr},slots:{0:Rt,1:kt}});Object.assign(_t,{structure:J,memory:{array:Yr},slots:{0:qt,1:xt}});Object.assign(De,{slots:{0:Dt,1:Ft}});Object.assign(Dt,{structure:e,memory:{array:Zr},slots:{0:Fe}});Object.assign(Fe,{structure:a,memory:{array:ta}});Object.assign(Ft,{structure:e,memory:{array:ea},slots:{0:Me}});Object.assign(Me,{structure:a,memory:{array:sa}});Object.assign(Te,{slots:{0:Mt,1:Tt}});Object.assign(Mt,{structure:e,memory:{array:ra},slots:{0:$e}});Object.assign($e,{structure:a,memory:{array:aa}});Object.assign(Tt,{structure:e,memory:{array:na},slots:{0:Le}});Object.assign(Le,{structure:a,memory:{array:oa}});Object.assign(Be,{slots:{0:$t,1:Lt}});Object.assign($t,{structure:e,memory:{array:ia},slots:{0:Ge}});Object.assign(Ge,{structure:a,memory:{array:ca}});Object.assign(Lt,{structure:e,memory:{array:ua},slots:{0:He}});Object.assign(He,{structure:a,memory:{array:ma}});Object.assign(Je,{slots:{0:Bt,1:Gt,2:Ht,3:Jt}});Object.assign(Bt,{structure:r,memory:{array:ya},slots:{0:Et}});Object.assign(Gt,{structure:Q,memory:{array:la},slots:{0:Dt,1:Ft}});Object.assign(Ht,{structure:W,memory:{array:ba},slots:{0:Mt,1:Tt}});Object.assign(Jt,{structure:X,memory:{array:pa},slots:{0:$t,1:Lt}});Object.assign(Ne,{slots:{0:Nt,1:Qt,2:Wt,3:Xt}});Object.assign(Nt,{structure:r,memory:{array:ga},slots:{0:K}});Object.assign(Qt,{structure:e,memory:{array:Oa},slots:{0:Qe}});Object.assign(Qe,{structure:a,memory:{array:fa}});Object.assign(Wt,{structure:e,memory:{array:ja},slots:{0:We}});Object.assign(We,{structure:a,memory:{array:Sa}});Object.assign(Xt,{structure:e,memory:{array:za},slots:{0:Xe}});Object.assign(Xe,{structure:a,memory:{array:da}});Object.assign(Ye,{slots:{0:Yt,1:Zt,2:te,3:ee}});Object.assign(Yt,{structure:r,memory:{array:ha},slots:{0:K}});Object.assign(Zt,{structure:e,memory:{array:wa},slots:{0:Ze}});Object.assign(Ze,{structure:a,memory:{array:Aa}});Object.assign(te,{structure:e,memory:{array:Ua},slots:{0:ts}});Object.assign(ts,{structure:a,memory:{array:Va}});Object.assign(ee,{structure:e,memory:{array:Pa},slots:{0:es}});Object.assign(es,{structure:a,memory:{array:Ia}});Object.assign(ss,{slots:{0:se,1:re,2:ae,3:ne,4:oe,5:ie}});Object.assign(se,{structure:L,memory:{array:Ra},slots:{0:St,1:zt,2:dt,3:ht}});Object.assign(re,{structure:B,memory:{array:ka},slots:{0:wt,1:At,2:Ut,3:Vt}});Object.assign(ae,{structure:N,memory:{array:qa},slots:{0:vt,1:Kt,2:Ct,3:_t}});Object.assign(ne,{structure:Y,memory:{array:xa},slots:{0:Bt,1:Gt,2:Ht,3:Jt}});Object.assign(oe,{structure:Z,memory:{array:va},slots:{0:Nt,1:Qt,2:Wt,3:Xt}});Object.assign(ie,{structure:tt,memory:{array:Ea},slots:{0:Yt,1:Zt,2:te,3:ee}});Object.assign(rs,{slots:{0:ct}});Object.assign(ct,{structure:b,memory:{array:Ka},slots:{0:as}});Object.assign(as,{structure:f,memory:{array:Ca}});Object.assign(ns,{slots:{0:ce}});Object.assign(ce,{structure:w,memory:{array:_a},slots:{0:ct}});Object.assign(os,{slots:{0:ue}});Object.assign(ue,{structure:w,memory:{array:Da},slots:{0:ct}});Object.assign(is,{slots:{0:cs,1:us,2:ys,3:bs,4:ps,5:gs,6:Os}});Object.assign(cs,{structure:h,memory:{array:Fa},slots:{0:me}});Object.assign(me,{structure:M,memory:{array:Ma},reloc:16778484,const:!0});Object.assign(us,{structure:$,memory:{array:Ta},slots:{0:ms}});Object.assign(ms,{structure:T,memory:{array:$a},reloc:16778509,const:!0});Object.assign(ys,{structure:b,memory:{array:La},slots:{0:ls}});Object.assign(ls,{structure:f,memory:{array:Ba}});Object.assign(bs,{structure:h,memory:{array:Ga},slots:{0:me}});Object.assign(ps,{structure:et,memory:{array:Ha},slots:{0:se,1:re,2:ae,3:ne,4:oe,5:ie}});Object.assign(gs,{structure:st,memory:{array:Ja},slots:{0:ce}});Object.assign(Os,{structure:rt,memory:{array:Na},slots:{0:ue}});Object.assign(fs,{slots:{0:js,1:Ss}});Object.assign(js,{structure:O,memory:{array:Qa}});Object.assign(Ss,{structure:O,memory:{array:Wa}});Object.assign(zs,{memory:{array:Ys},slots:{0:ds}});Object.assign(ds,{structure:k,memory:{array:Ys,offset:0,length:8},slots:{0:ye}});Object.assign(ye,{structure:at,memory:{array:Xa},reloc:0,const:!0});Object.assign(hs,{slots:{0:ws,1:As,2:Us}});Object.assign(ws,{structure:r,memory:{array:Ya},slots:{0:le}});Object.assign(le,{structure:R});Object.assign(As,{structure:r,memory:{array:Za},slots:{0:be}});Object.assign(be,{structure:bt});Object.assign(Us,{structure:b,memory:{array:tn},slots:{0:Vs}});Object.assign(Vs,{structure:f,memory:{array:en}});Object.assign(Ps,{memory:{array:Oe},slots:{0:Is}});Object.assign(Is,{structure:nt,memory:{array:Oe},slots:{0:Rs}});Object.assign(Rs,{structure:k,memory:{array:Oe,offset:0,length:8},slots:{0:ye}});Object.assign(ks,{memory:{array:Zs},slots:{0:qs}});Object.assign(qs,{structure:x,memory:{array:Zs,offset:0,length:8},slots:{0:pe}});Object.assign(pe,{structure:ot,memory:{array:sn},reloc:0});Object.assign(xs,{slots:{0:vs,1:Es,2:Ks}});Object.assign(vs,{structure:r,memory:{array:rn},slots:{0:le}});Object.assign(Es,{structure:r,memory:{array:an},slots:{0:be}});Object.assign(Ks,{structure:b,memory:{array:nn},slots:{0:Cs}});Object.assign(Cs,{structure:f,memory:{array:on}});Object.assign(_s,{memory:{array:fe},slots:{0:Ds}});Object.assign(Ds,{structure:it,memory:{array:fe},slots:{0:Fs}});Object.assign(Fs,{structure:x,memory:{array:fe,offset:0,length:8},slots:{0:pe}});Object.assign(Ms,{memory:{array:cn}});Object.assign(Ts,{slots:{0:ge}});Object.assign(ge,{structure:I,memory:{array:un}});Object.assign($s,{slots:{0:ge}});Object.assign(Ls,{slots:{0:Bs,1:Hs,2:Ns,3:Ws}});Object.assign(Bs,{structure:r,memory:{array:mn},slots:{0:Gs}});Object.assign(Gs,{structure:lt});Object.assign(Hs,{structure:r,memory:{array:yn},slots:{0:Js}});Object.assign(Js,{structure:q});Object.assign(Ns,{structure:r,memory:{array:ln},slots:{0:Qs}});Object.assign(Qs,{structure:v});Object.assign(Ws,{structure:r,memory:{array:bn},slots:{0:Xs}});Object.assign(Xs,{structure:E});const pn={argStruct:gt,thunkId:2,name:"createOutput"},gn={argStruct:ft,thunkId:3,name:"createPartialOutput"};Object.assign(r,{...s,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(d,{...s,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:d}],methods:[]}});Object.assign(M,{...s,type:1,name:"[13:0]u8",length:13,byteSize:14,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:d}],methods:[]}});Object.assign(h,{...s,type:13,name:"*const [13:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(T,{...s,type:1,name:"[14:0]u8",length:14,byteSize:15,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:d}],methods:[]}});Object.assign($,{...s,type:13,name:"*const [14:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[]}});Object.assign(b,{...s,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:b}],methods:[]}});Object.assign(f,{...s,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(e,{...s,name:"comptime_float",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:e}],methods:[]}});Object.assign(g,{...s,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:g}],methods:[]}});Object.assign(a,{...s,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:a}],methods:[]}});Object.assign(L,{...s,type:2,name:"Struct2593231189",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:e},{...t,type:9,slot:2,name:"maxValue",structure:e},{...t,type:9,slot:3,name:"defaultValue",structure:e}],methods:[],template:ze}});Object.assign(B,{...s,type:2,name:"Struct2780449832",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:e},{...t,type:9,slot:2,name:"maxValue",structure:e},{...t,type:9,slot:3,name:"defaultValue",structure:e}],methods:[],template:Ae}});Object.assign(G,{...s,type:2,name:"Struct3785042217",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:Ie}});Object.assign(H,{...s,type:2,name:"Struct1233730324",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:qe}});Object.assign(J,{...s,type:2,name:"Struct4112446434",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:Ee}});Object.assign(V,{...s,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:g}],methods:[]}});Object.assign(N,{...s,type:2,name:"Struct2663496776",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:G},{...t,type:9,slot:2,name:"maxValue",structure:H},{...t,type:9,slot:3,name:"defaultValue",structure:J}],methods:[],template:_e}});Object.assign(Q,{...s,type:2,name:"Struct4062680865",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:De}});Object.assign(W,{...s,type:2,name:"Struct2796675710",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:Te}});Object.assign(X,{...s,type:2,name:"Struct2998406273",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:Be}});Object.assign(Y,{...s,type:2,name:"Struct2179746371",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:Q},{...t,type:9,slot:2,name:"maxValue",structure:W},{...t,type:9,slot:3,name:"defaultValue",structure:X}],methods:[],template:Je}});Object.assign(Z,{...s,type:2,name:"Struct1194800752",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:e},{...t,type:9,slot:2,name:"maxValue",structure:e},{...t,type:9,slot:3,name:"defaultValue",structure:e}],methods:[],template:Ne}});Object.assign(tt,{...s,type:2,name:"Struct2598084961",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:e},{...t,type:9,slot:2,name:"maxValue",structure:e},{...t,type:9,slot:3,name:"defaultValue",structure:e}],methods:[],template:Ye}});Object.assign(et,{...s,type:2,name:"Struct2672905034",align:1,instance:{members:[{...t,type:9,slot:0,name:"fill",structure:L},{...t,type:9,slot:1,name:"scale",structure:B},{...t,type:9,slot:2,name:"distort",structure:N},{...t,type:9,slot:3,name:"center",structure:Y},{...t,type:9,slot:4,name:"minSolid",structure:Z},{...t,type:9,slot:5,name:"maxSolid",structure:tt}],methods:[],template:ss}});Object.assign(w,{...s,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:b}],methods:[],template:rs}});Object.assign(st,{...s,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:9,slot:0,name:"src",structure:w}],methods:[],template:ns}});Object.assign(rt,{...s,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:9,slot:0,name:"dst",structure:w}],methods:[],template:os}});Object.assign(lt,{...s,type:2,name:"circle-pattern.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:h},{...t,type:9,slot:1,name:"vendor",structure:$},{...t,type:9,slot:2,name:"version",structure:b},{...t,type:9,slot:3,name:"description",structure:h},{...t,type:9,slot:4,name:"parameters",structure:et},{...t,type:9,slot:5,name:"inputImages",structure:st},{...t,type:9,slot:6,name:"outputImages",structure:rt}],methods:[],template:is}});Object.assign(R,{...s,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:d}],methods:[]}});Object.assign(at,{...s,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(k,{...s,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:at}],methods:[]}});Object.assign(y,{...s,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[]}});Object.assign(O,{...s,type:11,name:"circle-pattern.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:O},{...t,type:9,slot:1,name:"display-p3",structure:O}],methods:[],template:fs}});Object.assign(P,{...s,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(bt,{...s,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:g}],methods:[]}});Object.assign(nt,{...s,type:2,name:"circle-pattern.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:k},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:zs},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:r},{...t,type:9,slot:1,name:"FPixel",structure:r},{...t,type:9,slot:2,name:"channels",structure:b}],methods:[],template:hs}});Object.assign(q,{...s,type:2,name:"circle-pattern.KernelInput(u8,circle-pattern.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:nt}],methods:[],template:Ps}});Object.assign(ot,{...s,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(x,{...s,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:ot}],methods:[]}});Object.assign(it,{...s,type:2,name:"circle-pattern.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:x},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:ks},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:r},{...t,type:9,slot:1,name:"FPixel",structure:r},{...t,type:9,slot:2,name:"channels",structure:b}],methods:[],template:xs}});Object.assign(v,{...s,type:2,name:"circle-pattern.KernelOutput(u8,circle-pattern.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:it}],methods:[],template:_s}});Object.assign(E,{...s,type:2,name:"circle-pattern.KernelParameters(circle-pattern.kernel)",byteSize:32,align:8,instance:{members:[{...t,type:4,bitOffset:128,bitSize:32,byteSize:4,slot:2,name:"fill",structure:g},{...t,type:4,bitOffset:160,bitSize:32,byteSize:4,slot:3,name:"scale",structure:g},{...t,type:7,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"distort",structure:V},{...t,type:7,bitOffset:64,bitSize:64,byteSize:8,slot:1,name:"center",structure:V},{...t,type:4,bitOffset:192,bitSize:32,byteSize:4,slot:4,name:"minSolid",structure:g},{...t,type:4,bitOffset:224,bitSize:32,byteSize:4,slot:5,name:"maxSolid",structure:g}],methods:[],template:Ms}});Object.assign(I,{...s,type:10,name:"@typeInfo(@typeInfo(@TypeOf(circle-pattern.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:I}],methods:[],template:Ts}});Object.assign(pt,{...s,type:9,name:"ErrorSet4231652996!circle-pattern.KernelOutput(u8,circle-pattern.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:I}],methods:[]}});Object.assign(gt,{...s,type:5,name:"createOutput",byteSize:96,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:3,name:"0",structure:y},{...t,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:4,name:"1",structure:y},{...t,type:7,isRequired:!0,bitOffset:320,bitSize:192,byteSize:24,slot:0,name:"2",structure:q},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:256,byteSize:32,slot:1,name:"3",structure:E},{...t,type:7,isRequired:!0,bitOffset:512,bitSize:224,byteSize:28,slot:2,name:"retval",structure:pt}],methods:[]}});Object.assign(F,{...s,type:10,name:"@typeInfo(@typeInfo(@TypeOf(circle-pattern.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:F}],methods:[],template:$s}});Object.assign(Ot,{...s,type:9,name:"ErrorSet3730776520!circle-pattern.KernelOutput(u8,circle-pattern.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:F}],methods:[]}});Object.assign(ft,{...s,type:5,name:"createPartialOutput",byteSize:104,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:3,name:"0",structure:y},{...t,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:4,name:"1",structure:y},{...t,type:3,isRequired:!0,bitOffset:320,bitSize:32,byteSize:4,slot:5,name:"2",structure:y},{...t,type:3,isRequired:!0,bitOffset:352,bitSize:32,byteSize:4,slot:6,name:"3",structure:y},{...t,type:7,isRequired:!0,bitOffset:384,bitSize:192,byteSize:24,slot:0,name:"4",structure:q},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:256,byteSize:32,slot:1,name:"5",structure:E},{...t,type:7,isRequired:!0,bitOffset:576,bitSize:224,byteSize:28,slot:2,name:"retval",structure:Ot}],methods:[]}});Object.assign(jt,{...s,type:2,name:"circle-pattern",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:r},{...t,type:9,slot:1,name:"Input",structure:r},{...t,type:9,slot:2,name:"Output",structure:r},{...t,type:9,slot:3,name:"Parameters",structure:r}],methods:[pn,gn],template:Ls}});const On=[r,d,M,h,T,$,b,f,e,g,a,L,B,G,H,J,V,N,Q,W,X,Y,Z,tt,et,w,st,rt,lt,R,at,k,y,O,P,bt,nt,q,ot,x,it,v,E,I,pt,gt,F,Ot,ft,jt],fn=jt,jn={runtimeSafety:!1,littleEndian:!0},ut=dr();ut.getControlObject();ut.recreateStructures(On,jn);const Sn=(async()=>{const c=new URL("circle-pattern-083d3b4f.wasm",import.meta.url).href;return fetch(c)})();ut.loadModule(Sn);ut.linkVariables(!0);const{constructor:zn}=fn,{createPartialOutput:dn,Input:hn,kernel:yt}=zn;function wn(c,u,o,n,i={},j={}){const S=[];for(const[l]of yt.inputImages)S.push(l);const A=[];for(const[l]of yt.outputImages)A.push(l);if(Array.isArray(i)){const l=i;i={};for(const[p,z]of S.entries())i[z]=l[p]}const m=new hn(void 0),C=[];let U;for(const l of S){let p=i[l];if(p||(S.length===1&&["data","width","height"].every(z=>!!i[z])?p=i:C.push(l)),m[l]=p,U){if(p.colorSpace!==U)throw new Error(`Input images must all use the same color space: ${U}`)}else U=p.colorSpace}if(C.length>0)throw new Error(`Missing input image${C.length>1?"s":""}: ${C.join(", ")}`);const mt=dn(c,u,o,n,m,j),je=l=>{const p={};for(const z of A){const{data:{typedArray:_},width:Se,height:er}=l[z];let D;if(typeof ImageData=="function"){const sr=new Uint8ClampedArray(_.buffer,_.byteOffset,_.byteLength);D=new ImageData(sr,Se,n,{colorSpace:U})}else D={data:_,width:Se,height:er};if(A.length===1)return D;p[z]=D}return p};return mt[Symbol.toStringTag]==="Promise"?mt.then(je):je(mt)}function An(){const c={};for(let[u,o]of yt){if(u==="parameters"){const n={};for(const[i,j]of o){const S=n[i]={};for(let[A,m]of j)typeof m=="object"?"string"in m?m=m.string:m=tr(m):typeof m=="function"&&(m=Un(m.name)),S[A]=m}o=n}else typeof o=="object"&&("string"in o?o=o.string:o=o.valueOf());c[u]=o}return c}function tr(c){const u=[];for(let[o,n]of c)typeof n=="object"&&(n=tr(n)),u[o]=n;return u}function Un(c){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[c]}onmessage=c=>{const[u,o,...n]=c.data;Vn(u,n).then(([i,j])=>{postMessage([u,o,i],{transfer:j})}).catch(i=>{postMessage(["error",o,i])})};async function Vn(c,u){switch(c){case"getKernelInfo":return[An(...u)];case"createPartialImageData":const n=await wn(...u),i=[];if("data"in n&&"width"in n&&"height"in n)i.push(n.data.buffer);else for(const j of Object.entries(n))i.push(n.data.buffer);return[n,i];default:throw new Error(`Unknown function: ${c}`)}}
