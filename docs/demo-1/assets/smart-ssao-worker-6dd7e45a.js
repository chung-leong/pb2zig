import{u as Ke,a as Fe,b as Me,c as Te,d as Be,e as $e,f as Ge,g as Le,h as He,i as Je,j as Ne,k as Qe,l as We,m as Xe,o as Ye,n as Ze,p as et,q as tt}from"./index-d64bc850.js";Ke();Fe();Me();Te();Be();$e();Ge();Le();He();Je();Ne();Qe();We();Xe();Ye();Ze();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},d={},Q={},W={},k={},X={},Y={},I={},b={},p={},Z={},ee={},_={},u={},r={},s={},te={},x={},se={},v={},re={},E={},ae={},ne={},D={},ie={},K={},ue={},F={},oe={},M={},me={},T={},le={},B={},ye={},$={},ce={},G={},A={},g={},be={},L={},pe={},H={},Ae={},z={},fe={},de={},y={},Se={},O={},he={},J={},U={},ge={},ze={},N={},R={},q={},Ue={},Re={},qe={},je={},Pe={},Ve={},Ce={};Object.assign(d,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:5});Object.assign(Q,{...t,type:1,name:"[26:0]u8",length:26,byteSize:27,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:4});Object.assign(W,{...t,type:11,name:"*const [26:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[],template:null},slot:3});Object.assign(k,{...t,type:11,name:"*const *const [26:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:2});Object.assign(X,{...t,type:1,name:"[31:0]u8",length:31,byteSize:32,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:8});Object.assign(Y,{...t,type:11,name:"*const [31:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:7});Object.assign(I,{...t,type:11,name:"*const *const [31:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[],template:null},slot:6});Object.assign(b,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:10});Object.assign(p,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:b}],methods:[],template:null},slot:9});Object.assign(Z,{...t,type:1,name:"[58:0]u8",length:58,byteSize:59,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:13});Object.assign(ee,{...t,type:11,name:"*const [58:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:12});Object.assign(_,{...t,type:11,name:"*const *const [58:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:11});Object.assign(u,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:u}],methods:[],template:null},slot:32});Object.assign(r,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[],template:null},slot:58});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:r}],methods:[],template:null},slot:57});const st=new Uint8Array,rt=new Uint8Array([64,252,15,0]),at=new Uint8Array([0,0,0,0,0,0,0,0]),nt=new Uint8Array([88,252,15,0]),it=new Uint8Array([0,0,0,0,0,0,89,64]),ut=new Uint8Array([32,251,15,0]),ot=new Uint8Array([0,0,0,0,0,0,36,64]);Object.assign(te,{...t,type:2,name:"Struct0014",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:st},slots:{0:{structure:s,memory:{array:rt},slots:{0:{structure:r,memory:{array:at}}}},1:{structure:s,memory:{array:nt},slots:{0:{structure:r,memory:{array:it}}}},2:{structure:s,memory:{array:ut},slots:{0:{structure:r,memory:{array:ot}}}}}}},slot:39});Object.assign(x,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:38});const mt=new Uint8Array,lt=new Uint8Array([64,252,15,0]),yt=new Uint8Array([0,0,0,0,0,0,0,0]),ct=new Uint8Array([88,252,15,0]),bt=new Uint8Array([0,0,0,0,0,0,36,64]),pt=new Uint8Array([32,251,15,0]),ft=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(se,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:mt},slots:{0:{structure:s,memory:{array:lt},slots:{0:{structure:r,memory:{array:yt}}}},1:{structure:s,memory:{array:ct},slots:{0:{structure:r,memory:{array:bt}}}},2:{structure:s,memory:{array:pt},slots:{0:{structure:r,memory:{array:ft}}}}}}},slot:41});Object.assign(v,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:40});const dt=new Uint8Array,St=new Uint8Array([64,252,15,0]),ht=new Uint8Array([123,20,174,71,225,122,132,63]),gt=new Uint8Array([88,252,15,0]),zt=new Uint8Array([0,0,0,0,0,0,8,64]),wt=new Uint8Array([32,251,15,0]),Ot=new Uint8Array([0,0,0,0,0,0,0,64]);Object.assign(re,{...t,type:2,name:"Struct0016",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:dt},slots:{0:{structure:s,memory:{array:St},slots:{0:{structure:r,memory:{array:ht}}}},1:{structure:s,memory:{array:gt},slots:{0:{structure:r,memory:{array:zt}}}},2:{structure:s,memory:{array:wt},slots:{0:{structure:r,memory:{array:Ot}}}}}}},slot:43});Object.assign(E,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:42});Object.assign(ae,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:u}],methods:[],template:null},slot:33});const At=new Uint8Array,Ut=new Uint8Array([16,252,15,0]),Rt=new Uint8Array([0,0,0,0,0,0,240,191]),qt=new Uint8Array([72,252,15,0]),jt=new Uint8Array([0,0,0,0,0,0,240,191]);Object.assign(ne,{...t,type:2,name:"Struct0025",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:At},slots:{0:{structure:s,memory:{array:Ut},slots:{0:{structure:r,memory:{array:Rt}}}},1:{structure:s,memory:{array:qt},slots:{0:{structure:r,memory:{array:jt}}}}}}},slot:60});Object.assign(D,{...t,type:11,name:"Struct0022",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:59});const Pt=new Uint8Array,Vt=new Uint8Array([16,252,15,0]),Ct=new Uint8Array([0,0,0,0,0,0,240,63]),kt=new Uint8Array([72,252,15,0]),It=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(ie,{...t,type:2,name:"Struct0026",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Pt},slots:{0:{structure:s,memory:{array:Vt},slots:{0:{structure:r,memory:{array:Ct}}}},1:{structure:s,memory:{array:kt},slots:{0:{structure:r,memory:{array:It}}}}}}},slot:62});Object.assign(K,{...t,type:11,name:"Struct0023",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:61});const _t=new Uint8Array,xt=new Uint8Array([16,252,15,0]),vt=new Uint8Array([0,0,0,0,0,0,0,0]),Et=new Uint8Array([72,252,15,0]),Dt=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(ue,{...t,type:2,name:"Struct0027",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:_t},slots:{0:{structure:s,memory:{array:xt},slots:{0:{structure:r,memory:{array:vt}}}},1:{structure:s,memory:{array:Et},slots:{0:{structure:r,memory:{array:Dt}}}}}}},slot:64});Object.assign(F,{...t,type:11,name:"Struct0024",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:63});const Kt=new Uint8Array,Ft=new Uint8Array([170,170,170,170]),Mt=new Uint8Array,Tt=new Uint8Array([170,170,170,170]),Bt=new Uint8Array,$t=new Uint8Array([170,170,170,170]),Gt=new Uint8Array;Object.assign(oe,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:ae},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:D},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:K},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:F}],methods:[],template:{memory:{array:Kt},slots:{0:{structure:D,memory:{array:Ft},slots:{0:{structure:ne,memory:{array:Mt}}}},1:{structure:K,memory:{array:Tt},slots:{0:{structure:ie,memory:{array:Bt}}}},2:{structure:F,memory:{array:$t},slots:{0:{structure:ue,memory:{array:Gt}}}}}}},slot:45});Object.assign(M,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:44});const Lt=new Uint8Array,Ht=new Uint8Array([64,252,15,0]),Jt=new Uint8Array([154,153,153,153,153,153,185,191]),Nt=new Uint8Array([88,252,15,0]),Qt=new Uint8Array([154,153,153,153,153,153,185,63]),Wt=new Uint8Array([32,251,15,0]),Xt=new Uint8Array([123,20,174,71,225,122,148,63]);Object.assign(me,{...t,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:Lt},slots:{0:{structure:s,memory:{array:Ht},slots:{0:{structure:r,memory:{array:Jt}}}},1:{structure:s,memory:{array:Nt},slots:{0:{structure:r,memory:{array:Qt}}}},2:{structure:s,memory:{array:Wt},slots:{0:{structure:r,memory:{array:Xt}}}}}}},slot:47});Object.assign(T,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:46});const Yt=new Uint8Array,Zt=new Uint8Array([64,252,15,0]),es=new Uint8Array([0,0,0,0,0,0,0,0]),ts=new Uint8Array([88,252,15,0]),ss=new Uint8Array([0,0,0,0,0,0,0,64]),rs=new Uint8Array([32,251,15,0]),as=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(le,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:Yt},slots:{0:{structure:s,memory:{array:Zt},slots:{0:{structure:r,memory:{array:es}}}},1:{structure:s,memory:{array:ts},slots:{0:{structure:r,memory:{array:ss}}}},2:{structure:s,memory:{array:rs},slots:{0:{structure:r,memory:{array:as}}}}}}},slot:49});Object.assign(B,{...t,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:48});const ns=new Uint8Array,is=new Uint8Array([64,252,15,0]),us=new Uint8Array([0,0,0,0,0,0,0,0]),os=new Uint8Array([88,252,15,0]),ms=new Uint8Array([0,0,0,0,0,0,20,64]),ls=new Uint8Array([32,251,15,0]),ys=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(ye,{...t,type:2,name:"Struct0020",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:ns},slots:{0:{structure:s,memory:{array:is},slots:{0:{structure:r,memory:{array:us}}}},1:{structure:s,memory:{array:os},slots:{0:{structure:r,memory:{array:ms}}}},2:{structure:s,memory:{array:ls},slots:{0:{structure:r,memory:{array:ys}}}}}}},slot:51});Object.assign($,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:50});const cs=new Uint8Array,bs=new Uint8Array([170,170,170,170]),ps=new Uint8Array,fs=new Uint8Array([170,170,170,170]),ds=new Uint8Array,Ss=new Uint8Array([170,170,170,170]),hs=new Uint8Array,gs=new Uint8Array([170,170,170,170]),zs=new Uint8Array,ws=new Uint8Array([170,170,170,170]),Os=new Uint8Array,As=new Uint8Array([170,170,170,170]),Us=new Uint8Array,Rs=new Uint8Array([170,170,170,170]),qs=new Uint8Array;Object.assign(ce,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"A_bias",structure:x},{...e,type:8,isRequired:!1,slot:1,name:"B_radius",structure:v},{...e,type:8,isRequired:!1,slot:2,name:"C_bleed",structure:E},{...e,type:8,isRequired:!1,slot:3,name:"D_lightxy",structure:M},{...e,type:8,isRequired:!1,slot:4,name:"E_noise",structure:T},{...e,type:8,isRequired:!1,slot:5,name:"F_brightness",structure:B},{...e,type:8,isRequired:!1,slot:6,name:"G_contrast",structure:$}],methods:[],template:{memory:{array:cs},slots:{0:{structure:x,memory:{array:bs},slots:{0:{structure:te,memory:{array:ps}}}},1:{structure:v,memory:{array:fs},slots:{0:{structure:se,memory:{array:ds}}}},2:{structure:E,memory:{array:Ss},slots:{0:{structure:re,memory:{array:hs}}}},3:{structure:M,memory:{array:gs},slots:{0:{structure:oe,memory:{array:zs}}}},4:{structure:T,memory:{array:ws},slots:{0:{structure:me,memory:{array:Os}}}},5:{structure:B,memory:{array:As},slots:{0:{structure:le,memory:{array:Us}}}},6:{structure:$,memory:{array:Rs},slots:{0:{structure:ye,memory:{array:qs}}}}}}},slot:15});Object.assign(G,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:14});const js=new Uint8Array,Ps=new Uint8Array([48,252,15,0]),Vs=new Uint8Array([4,0,0,0]);Object.assign(A,{...t,type:2,name:"Struct0021",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:js},slots:{0:{structure:p,memory:{array:Ps},slots:{0:{structure:b,memory:{array:Vs}}}}}}},slot:53});Object.assign(g,{...t,type:11,name:"Struct0013",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:A}],methods:[],template:null},slot:52});const Cs=new Uint8Array,ks=new Uint8Array([170,170,170,170]),Is=new Uint8Array;Object.assign(be,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"depthmap",structure:g}],methods:[],template:{memory:{array:Cs},slots:{0:{structure:g,memory:{array:ks},slots:{0:{structure:A,memory:{array:Is}}}}}}},slot:17});Object.assign(L,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:16});const _s=new Uint8Array,xs=new Uint8Array([170,170,170,170]),vs=new Uint8Array;Object.assign(pe,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:g}],methods:[],template:{memory:{array:_s},slots:{0:{structure:g,memory:{array:xs},slots:{0:{structure:A,memory:{array:vs}}}}}}},slot:19});Object.assign(H,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:18});const Es=new Uint8Array,Ds=new Uint8Array,Ks=new Uint8Array([72,37,16,0]),Fs=new Uint8Array([235,36,16,0]),Ms=new Uint8Array([99,111,109,46,115,109,97,114,116,45,112,97,103,101,45,110,101,116,46,115,104,97,100,101,114,115,0]),Ts=new Uint8Array([68,37,16,0]),Bs=new Uint8Array([192,36,16,0]),$s=new Uint8Array([115,109,97,114,116,45,112,97,103,101,46,110,101,116,32,45,32,74,97,110,32,70,114,105,115,99,104,109,117,116,104,0]),Gs=new Uint8Array([64,37,16,0]),Ls=new Uint8Array([2,0,0,0]),Hs=new Uint8Array([60,37,16,0]),Js=new Uint8Array([116,36,16,0]),Ns=new Uint8Array([67,111,109,112,117,116,101,115,32,115,99,114,101,101,110,32,115,112,97,99,101,32,97,109,98,105,101,110,32,111,99,99,108,117,115,105,111,110,32,102,114,111,109,32,97,32,100,101,112,116,104,32,98,117,102,102,101,114,0]),Qs=new Uint8Array([170,170,170,170]),Ws=new Uint8Array,Xs=new Uint8Array([170,170,170,170]),Ys=new Uint8Array,Zs=new Uint8Array([170,170,170,170]),er=new Uint8Array;Object.assign(Ae,{...t,type:2,name:"smart-ssao.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Es}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:k},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:I},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:p},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:_},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:G},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:L},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:H}],methods:[],template:{memory:{array:Ds},slots:{0:{structure:k,memory:{array:Ks},slots:{0:{structure:W,memory:{array:Fs},slots:{0:{structure:Q,memory:{array:Ms}}}}}},1:{structure:I,memory:{array:Ts},slots:{0:{structure:Y,memory:{array:Bs},slots:{0:{structure:X,memory:{array:$s}}}}}},2:{structure:p,memory:{array:Gs},slots:{0:{structure:b,memory:{array:Ls}}}},3:{structure:_,memory:{array:Hs},slots:{0:{structure:ee,memory:{array:Js},slots:{0:{structure:Z,memory:{array:Ns}}}}}},4:{structure:G,memory:{array:Qs},slots:{0:{structure:ce,memory:{array:Ws}}}},5:{structure:L,memory:{array:Xs},slots:{0:{structure:be,memory:{array:Ys}}}},6:{structure:H,memory:{array:Zs},slots:{0:{structure:pe,memory:{array:er}}}}}}},slot:1});Object.assign(z,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:24});Object.assign(fe,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:z}],methods:[],template:null},slot:23});Object.assign(de,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:fe}],methods:[],template:null},slot:22});Object.assign(y,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:25});const tr=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(Se,{...t,type:9,name:"smart-ssao.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:b},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:b}],methods:[],template:{memory:{array:tr}}},slot:26});Object.assign(O,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:27});Object.assign(he,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:u}],methods:[],template:null},slot:54});const sr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),rr=new Uint8Array,ar=new Uint8Array([60,36,16,0]),nr=new Uint8Array([4,0,0,0]);Object.assign(J,{...t,type:2,name:"smart-ssao.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:de},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Se},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:O}],methods:[],template:{memory:{array:sr}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:z},{...e,type:7,isRequired:!1,name:"FPixel",structure:he},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:rr},slots:{0:{structure:p,memory:{array:ar},slots:{0:{structure:b,memory:{array:nr}}}}}}},slot:21});const ir=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ur=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),xe=new Uint8Array([0,0,0,0,0,0,0,0]),or=new Uint8Array;Object.assign(U,{...t,type:2,name:"smart-ssao.KernelInput(u8,smart-ssao.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"depthmap",structure:J}],methods:[],template:{memory:{array:ir},slots:{0:{structure:J,memory:{array:ur},slots:{0:{structure:de,memory:{array:xe},address:1047200,slots:{0:{structure:fe,memory:{array:or},address:0}}}}}}}},slot:20});Object.assign(ge,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:z}],methods:[],template:null},slot:23});Object.assign(ze,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:ge}],methods:[],template:null},slot:30});const mr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),lr=new Uint8Array,yr=new Uint8Array([60,36,16,0]),cr=new Uint8Array([4,0,0,0]);Object.assign(N,{...t,type:2,name:"smart-ssao.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:ze},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Se},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:O}],methods:[],template:{memory:{array:mr}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:z},{...e,type:7,isRequired:!1,name:"FPixel",structure:he},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:lr},slots:{0:{structure:p,memory:{array:yr},slots:{0:{structure:b,memory:{array:cr}}}}}}},slot:29});const br=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),pr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),fr=new Uint8Array;Object.assign(R,{...t,type:2,name:"smart-ssao.KernelOutput(u8,smart-ssao.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:N}],methods:[],template:{memory:{array:br},slots:{0:{structure:N,memory:{array:pr},slots:{0:{structure:ze,memory:{array:xe},address:1047200,slots:{0:{structure:ge,memory:{array:fr},address:0}}}}}}}},slot:28});const dr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,32,65,0,0,128,63,0,0,0,64,10,215,163,60,0,0,128,63,0,0,128,63]);Object.assign(q,{...t,type:2,name:"smart-ssao.KernelParameters(smart-ssao.kernel)",length:1,byteSize:32,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:64,bitSize:32,byteSize:4,slot:0,name:"A_bias",structure:u},{...e,type:4,isRequired:!1,bitOffset:96,bitSize:32,byteSize:4,slot:1,name:"B_radius",structure:u},{...e,type:4,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:2,name:"C_bleed",structure:u},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,slot:3,name:"D_lightxy",structure:ae},{...e,type:4,isRequired:!1,bitOffset:160,bitSize:32,byteSize:4,slot:4,name:"E_noise",structure:u},{...e,type:4,isRequired:!1,bitOffset:192,bitSize:32,byteSize:4,slot:5,name:"F_brightness",structure:u},{...e,type:4,isRequired:!1,bitOffset:224,bitSize:32,byteSize:4,slot:6,name:"G_contrast",structure:u}],methods:[],template:{memory:{array:dr}}},slot:31});Object.assign(Ue,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(smart-ssao.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:55});Object.assign(Re,{...t,type:7,name:"ErrorSet0000!smart-ssao.KernelOutput(u8,smart-ssao.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:R},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Ue}],methods:[],template:null},slot:36});Object.assign(qe,{...t,type:3,name:"createOutput",length:1,byteSize:96,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:6,bitOffset:320,bitSize:192,byteSize:24,slot:2,name:"2",structure:U},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:3,name:"3",structure:q},{...e,type:6,bitOffset:512,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Re}],methods:[],template:null},slot:34});Object.assign(je,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(smart-ssao.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:56});Object.assign(Pe,{...t,type:7,name:"ErrorSet0001!smart-ssao.KernelOutput(u8,smart-ssao.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:R},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:je}],methods:[],template:null},slot:37});Object.assign(Ve,{...t,type:3,name:"createPartialOutput",length:1,byteSize:104,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:3,bitOffset:320,bitSize:32,byteSize:4,slot:2,name:"2",structure:y},{...e,type:3,bitOffset:352,bitSize:32,byteSize:4,slot:3,name:"3",structure:y},{...e,type:6,bitOffset:384,bitSize:192,byteSize:24,slot:4,name:"4",structure:U},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:5,name:"5",structure:q},{...e,type:6,bitOffset:576,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Pe}],methods:[],template:null},slot:35});const Sr=new Uint8Array,hr={argStruct:qe,thunk:6,name:"createOutput"},gr={argStruct:Ve,thunk:1,name:"createPartialOutput"};Object.assign(Ce,{...t,type:2,name:"smart-ssao",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Sr}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:Ae},{...e,type:7,isRequired:!1,name:"Input",structure:U},{...e,type:7,isRequired:!1,name:"Output",structure:R},{...e,type:7,isRequired:!1,name:"Parameters",structure:q}],methods:[hr,gr],template:null},slot:0});const zr=[d,Q,W,k,X,Y,I,b,p,Z,ee,_,u,r,s,te,x,se,v,re,E,ae,ne,D,ie,K,ue,F,oe,M,me,T,le,B,ye,$,ce,G,A,g,be,L,pe,H,Ae,z,fe,de,y,Se,O,he,J,U,ge,ze,N,R,q,Ue,Re,qe,je,Pe,Ve,Ce],wr=et(zr),Or=Ce.constructor,Ar=(async()=>{const o=new URL("smart-ssao-fde6ed98.wasm",import.meta.url).href;return fetch(o)})();tt(Ar,{...wr,writeBack:!0});const{createOutput:kr,createPartialOutput:Ur,kernel:Oe,Input:Rr,Output:Ir,Parameters:_r}=Or;function qr(o,l,n,a,i={},S={}){if(Array.isArray(i)){const f=i;i={};for(const[c,h]of Object.keys(Oe.inputImages).entries())i[h]=f[c]}const j=new Rr(void 0),P=Object.keys(Oe.inputImages),m=[];let w;for(const f of P){let c=i[f];if(c||(P.length===1&&["data","width","height"].every(h=>!!i[h])?c=i:m.push(f)),j[f]=c,w){if(c.colorSpace!==w)throw new Error(`Input images must all use the same color space: ${w}`)}else w=c.colorSpace}if(m.length>0)throw new Error(`Missing input image${m.length>1?"s":""}: ${m.join(", ")}`);const we=Ur(o,l,n,a,j,S),ke=f=>{const c=Object.keys(f),h={};for(const Ie of c){const{data:{typedArray:V},width:_e,height:Ee}=f[Ie];let C;if(typeof ImageData=="function"){const De=new Uint8ClampedArray(V.buffer,V.byteOffset,V.byteLength);C=new ImageData(De,_e,a,{colorSpace:w})}else C={data:V,width:_e,height:Ee};if(c.length===1)return C;h[Ie]=C}return h};return we[Symbol.toStringTag]==="Promise"?we.then(ke):ke(we)}function jr(){const o={};for(let[l,n]of Object.entries(Oe)){if(l==="parameters"){const a={};for(const[i,S]of Object.entries(n)){const j=a[i]={};for(let[P,m]of Object.entries(S))typeof m=="object"?"string"in m?m=m.string:m=ve(m):typeof m=="function"&&(m=Pr(m.name)),j[P]=m}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());o[l]=n}return o}function ve(o){const l=[];for(let[n,a]of Object.entries(o))typeof a=="object"&&(a=ve(a)),l[n]=a;return l}function Pr(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[l,n,...a]=o.data;Vr(l,a).then(([i,S])=>{postMessage([l,n,i],{transfer:S})}).catch(i=>{postMessage(["error",n,i])})};async function Vr(o,l){switch(o){case"getKernelInfo":return[jr(...l)];case"createPartialImageData":const a=await qr(...l),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const S of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${o}`)}}
