import{u as ds,a as ws,b as As,c as Us,d as Ps,e as Vs,f as Rs,g as ks,h as qs,i as Is,j as Cs,k as vs,l as Es,m as xs,n as Ks,o as Ms,p as Ts,q as Ds}from"./index-67c7daa1.js";ds();vs();Es();ws();As();xs();Ks();Ms();Ts();Us();Ps();Vs();Rs();Ds();ks();qs();Is();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},p={},D={},F={},_={},$={},l={},f={},L={},B={},r={},u={},G={},H={},J={},P={},N={},Q={},W={},X={},Y={},V={},Z={},tt={},et={},st={},rt={},nt={},w={},at={},it={},pt={},k={},ot={},q={},c={},O={},R={},ct={},I={},ut={},C={},mt={},v={},E={},j={},Ot={},ft={},d={},St={},ht={},zt={},Yt={},jt={},Zt={},dt={},te={},ee={},wt={},se={},At={},Ut={},re={},ne={},Pt={},ae={},Vt={},ie={},Rt={},oe={},kt={},ce={},ue={},qt={},x={},It={},Ct={},me={},ye={},vt={},be={},Et={},le={},xt={},ge={},Kt={},pe={},Oe={},Mt={},Tt={},Dt={},fe={},Se={},Ft={},_t={},$t={},he={},yt={},ze={},je={},Lt={},de={},Bt={},we={},Ae={},Ue={},Pe={},Ve={},Re={},ke={},qe={},Ie={},Ce={},ve={},Ee={},xe={},Ke={},Me={},Te={},De={},Gt={},Fe={},_e={},Ht={},$e={},Le={},Be={},Ge={},He={},Je={},Ne={},Qe={},Jt={},We={},Xe={},Ye={},Ze={},ts={},es={},ss={},rs={},ns={},as={},is={},os={},cs={},us={},ms={},ys={},bs={},ls={},gs={},ps={},Os={},fs={},Fs=new Uint8Array,_s=new Uint8Array([0,0,0,0,0,0,0,0]),$s=new Uint8Array,Ls=new Uint8Array([0,0,0,0,0,0,240,63]),Bs=new Uint8Array,Gs=new Uint8Array,Hs=new Uint8Array([24,7,0,1]),Js=new Uint8Array([77,105,110,32,97,110,100,32,109,97,120,32,108,105,109,105,116,115,46,0]),Ns=new Uint8Array,Qs=new Uint8Array([0,0,0,0,0,0,0,0]),Ws=new Uint8Array,Xs=new Uint8Array([0,0,0,0,0,0,0,0]),Ys=new Uint8Array,Zs=new Uint8Array([0,0,0,0,0,0,0,0]),tr=new Uint8Array,er=new Uint8Array([0,0,0,0,0,0,240,63]),sr=new Uint8Array,rr=new Uint8Array,nr=new Uint8Array([48,7,0,1]),ar=new Uint8Array([67,111,108,111,114,32,102,111,114,32,116,104,114,101,115,104,111,108,100,101,100,32,97,114,101,97,46,99,111,108,111,114,70,111,114,65,108,108,80,97,115,115,101,100,65,114,101,97,0]),ir=new Uint8Array,or=new Uint8Array([0,0,0,0,0,0,240,63]),cr=new Uint8Array,ur=new Uint8Array([0,0,0,0,0,0,240,63]),mr=new Uint8Array,yr=new Uint8Array([0,0,0,0,0,0,240,63]),br=new Uint8Array,lr=new Uint8Array([0,0,0,0,0,0,240,63]),gr=new Uint8Array,pr=new Uint8Array,Or=new Uint8Array([104,7,0,1]),fr=new Uint8Array([67,111,108,111,114,32,102,111,114,32,97,108,108,32,112,97,115,115,101,100,32,97,114,101,97,0]),Sr=new Uint8Array,hr=new Uint8Array,zr=new Uint8Array,jr=new Uint8Array,dr=new Uint8Array([4]),wr=new Uint8Array,Ar=new Uint8Array,Ur=new Uint8Array([16,5,0,1]),Pr=new Uint8Array([110,101,116,46,111,110,116,104,101,119,105,110,103,115,46,102,105,108,116,101,114,115,0]),Vr=new Uint8Array([50,5,0,1]),Rr=new Uint8Array([65,110,100,121,32,76,105,0]),kr=new Uint8Array,qr=new Uint8Array([1]),Ir=new Uint8Array([75,5,0,1]),Cr=new Uint8Array([84,104,114,101,115,104,111,108,100,105,110,103,32,98,97,115,101,115,32,111,110,32,98,114,105,103,104,116,110,101,115,115,46,0]),vr=new Uint8Array,Er=new Uint8Array,xr=new Uint8Array,Kr=new Uint8Array([0]),Mr=new Uint8Array([1]),Ss=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Tr=new Uint8Array,Dr=new Uint8Array,Fr=new Uint8Array,_r=new Uint8Array,$r=new Uint8Array([4]),Nt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),hs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Lr=new Uint8Array,Br=new Uint8Array,Gr=new Uint8Array,Hr=new Uint8Array,Jr=new Uint8Array([4]),Qt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Nr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,0,0,0,0,128,63,0,0,0,0,0,0,0,0]),Qr=new Uint8Array([27,0]),Wr=new Uint8Array([27,0]),Xr=new Uint8Array,Yr=new Uint8Array,Zr=new Uint8Array,tn=new Uint8Array;Object.assign(Yt,{slots:{0:jt,1:dt}});Object.assign(jt,{structure:r,memory:{array:Fs},const:!0,slots:{0:Zt}});Object.assign(Zt,{structure:u,memory:{array:_s},const:!0});Object.assign(dt,{structure:r,memory:{array:$s},const:!0,slots:{0:te}});Object.assign(te,{structure:u,memory:{array:Ls},const:!0});Object.assign(ee,{slots:{0:wt,1:At,2:Ut}});Object.assign(wt,{structure:s,memory:{array:Bs},const:!0,slots:{0:se}});Object.assign(se,{structure:N});Object.assign(At,{structure:G,memory:{array:Gs},const:!0,slots:{0:jt,1:dt}});Object.assign(Ut,{structure:J,memory:{array:Hs},const:!0,slots:{0:re}});Object.assign(re,{structure:H,memory:{array:Js},reloc:16779032});Object.assign(ne,{slots:{0:Pt,1:Vt,2:Rt,3:kt}});Object.assign(Pt,{structure:r,memory:{array:Ns},const:!0,slots:{0:ae}});Object.assign(ae,{structure:u,memory:{array:Qs},const:!0});Object.assign(Vt,{structure:r,memory:{array:Ws},const:!0,slots:{0:ie}});Object.assign(ie,{structure:u,memory:{array:Xs},const:!0});Object.assign(Rt,{structure:r,memory:{array:Ys},const:!0,slots:{0:oe}});Object.assign(oe,{structure:u,memory:{array:Zs},const:!0});Object.assign(kt,{structure:r,memory:{array:tr},const:!0,slots:{0:ce}});Object.assign(ce,{structure:u,memory:{array:er},const:!0});Object.assign(ue,{slots:{0:qt,1:It,2:Ct}});Object.assign(qt,{structure:s,memory:{array:sr},const:!0,slots:{0:x}});Object.assign(x,{structure:V});Object.assign(It,{structure:W,memory:{array:rr},const:!0,slots:{0:Pt,1:Vt,2:Rt,3:kt}});Object.assign(Ct,{structure:Y,memory:{array:nr},const:!0,slots:{0:me}});Object.assign(me,{structure:X,memory:{array:ar},reloc:16779056});Object.assign(ye,{slots:{0:vt,1:Et,2:xt,3:Kt}});Object.assign(vt,{structure:r,memory:{array:ir},const:!0,slots:{0:be}});Object.assign(be,{structure:u,memory:{array:or},const:!0});Object.assign(Et,{structure:r,memory:{array:cr},const:!0,slots:{0:le}});Object.assign(le,{structure:u,memory:{array:ur},const:!0});Object.assign(xt,{structure:r,memory:{array:mr},const:!0,slots:{0:ge}});Object.assign(ge,{structure:u,memory:{array:yr},const:!0});Object.assign(Kt,{structure:r,memory:{array:br},const:!0,slots:{0:pe}});Object.assign(pe,{structure:u,memory:{array:lr},const:!0});Object.assign(Oe,{slots:{0:Mt,1:Tt,2:Dt}});Object.assign(Mt,{structure:s,memory:{array:gr},const:!0,slots:{0:x}});Object.assign(Tt,{structure:tt,memory:{array:pr},const:!0,slots:{0:vt,1:Et,2:xt,3:Kt}});Object.assign(Dt,{structure:st,memory:{array:Or},const:!0,slots:{0:fe}});Object.assign(fe,{structure:et,memory:{array:fr},reloc:16779112});Object.assign(Se,{slots:{0:Ft,1:_t,2:$t}});Object.assign(Ft,{structure:Q,memory:{array:Sr},const:!0,slots:{0:wt,1:At,2:Ut}});Object.assign(_t,{structure:Z,memory:{array:hr},const:!0,slots:{0:qt,1:It,2:Ct}});Object.assign($t,{structure:rt,memory:{array:zr},const:!0,slots:{0:Mt,1:Tt,2:Dt}});Object.assign(he,{slots:{0:yt}});Object.assign(yt,{structure:l,memory:{array:jr},const:!0,slots:{0:ze}});Object.assign(ze,{structure:f,memory:{array:dr},const:!0});Object.assign(je,{slots:{0:Lt}});Object.assign(Lt,{structure:w,memory:{array:wr},const:!0,slots:{0:yt}});Object.assign(de,{slots:{0:Bt}});Object.assign(Bt,{structure:w,memory:{array:Ar},const:!0,slots:{0:yt}});Object.assign(we,{slots:{0:Ae,1:Pe,2:Re,3:qe,4:Ce,5:ve,6:Ee}});Object.assign(Ae,{structure:F,memory:{array:Ur},const:!0,slots:{0:Ue}});Object.assign(Ue,{structure:D,memory:{array:Pr},reloc:16778512});Object.assign(Pe,{structure:$,memory:{array:Vr},const:!0,slots:{0:Ve}});Object.assign(Ve,{structure:_,memory:{array:Rr},reloc:16778546});Object.assign(Re,{structure:l,memory:{array:kr},const:!0,slots:{0:ke}});Object.assign(ke,{structure:f,memory:{array:qr},const:!0});Object.assign(qe,{structure:B,memory:{array:Ir},const:!0,slots:{0:Ie}});Object.assign(Ie,{structure:L,memory:{array:Cr},reloc:16778571});Object.assign(Ce,{structure:nt,memory:{array:vr},const:!0,slots:{0:Ft,1:_t,2:$t}});Object.assign(ve,{structure:at,memory:{array:Er},const:!0,slots:{0:Lt}});Object.assign(Ee,{structure:it,memory:{array:xr},const:!0,slots:{0:Bt}});Object.assign(xe,{slots:{0:Ke,1:Me}});Object.assign(Ke,{structure:O,memory:{array:Kr},const:!0});Object.assign(Me,{structure:O,memory:{array:Mr},const:!0});Object.assign(Te,{memory:{array:Ss},slots:{0:De}});Object.assign(De,{structure:q,memory:{array:Ss,offset:0,length:8},slots:{0:Gt}});Object.assign(Gt,{structure:ot,memory:{array:Tr},reloc:0});Object.assign(Fe,{slots:{0:_e,1:$e,2:Le}});Object.assign(_e,{structure:s,memory:{array:Dr},const:!0,slots:{0:Ht}});Object.assign(Ht,{structure:k});Object.assign($e,{structure:s,memory:{array:Fr},const:!0,slots:{0:x}});Object.assign(Le,{structure:l,memory:{array:_r},const:!0,slots:{0:Be}});Object.assign(Be,{structure:f,memory:{array:$r},const:!0});Object.assign(Ge,{memory:{array:Nt},slots:{0:He}});Object.assign(He,{structure:ct,memory:{array:Nt},slots:{0:Je}});Object.assign(Je,{structure:q,memory:{array:Nt,offset:0,length:8},slots:{0:Gt}});Object.assign(Ne,{memory:{array:hs},slots:{0:Qe}});Object.assign(Qe,{structure:C,memory:{array:hs,offset:0,length:8},slots:{0:Jt}});Object.assign(Jt,{structure:ut,memory:{array:Lr},reloc:0});Object.assign(We,{slots:{0:Xe,1:Ye,2:Ze}});Object.assign(Xe,{structure:s,memory:{array:Br},const:!0,slots:{0:Ht}});Object.assign(Ye,{structure:s,memory:{array:Gr},const:!0,slots:{0:x}});Object.assign(Ze,{structure:l,memory:{array:Hr},const:!0,slots:{0:ts}});Object.assign(ts,{structure:f,memory:{array:Jr},const:!0});Object.assign(es,{memory:{array:Qt},slots:{0:ss}});Object.assign(ss,{structure:mt,memory:{array:Qt},slots:{0:rs}});Object.assign(rs,{structure:C,memory:{array:Qt,offset:0,length:8},slots:{0:Jt}});Object.assign(ns,{memory:{array:Nr}});Object.assign(as,{slots:{0:is}});Object.assign(is,{structure:j,memory:{array:Qr},const:!0});Object.assign(os,{slots:{0:cs}});Object.assign(cs,{structure:d,memory:{array:Wr},const:!0});Object.assign(us,{slots:{0:ms,1:bs,2:gs,3:Os}});Object.assign(ms,{structure:s,memory:{array:Xr},const:!0,slots:{0:ys}});Object.assign(ys,{structure:pt});Object.assign(bs,{structure:s,memory:{array:Yr},const:!0,slots:{0:ls}});Object.assign(ls,{structure:I});Object.assign(gs,{structure:s,memory:{array:Zr},const:!0,slots:{0:ps}});Object.assign(ps,{structure:v});Object.assign(Os,{structure:s,memory:{array:tn},const:!0,slots:{0:fs}});Object.assign(fs,{structure:E});const en={argStruct:ft,thunkId:2,name:"createOutput"},sn={argStruct:ht,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(p,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(D,{...e,type:1,name:"[22:0]u8",length:22,byteSize:23,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(F,{...e,type:13,name:"*const [22:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:D}],methods:[]}});Object.assign(_,{...e,type:1,name:"[7:0]u8",length:7,byteSize:8,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign($,{...e,type:13,name:"*const [7:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[]}});Object.assign(l,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:l}],methods:[]}});Object.assign(f,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(L,{...e,type:1,name:"[33:0]u8",length:33,byteSize:34,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(B,{...e,type:13,name:"*const [33:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[]}});Object.assign(r,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(u,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:u}],methods:[]}});Object.assign(G,{...e,type:2,name:"Struct3223285779",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:r},{...t,type:7,slot:1,name:"1",structure:r}],methods:[],template:Yt}});Object.assign(H,{...e,type:1,name:"[19:0]u8",length:19,byteSize:20,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(J,{...e,type:13,name:"*const [19:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[]}});Object.assign(P,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(N,{...e,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(Q,{...e,type:2,name:"Struct3040821119",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"defaultValue",structure:G},{...t,type:7,slot:2,name:"description",structure:J}],methods:[],template:ee}});Object.assign(W,{...e,type:2,name:"Struct2874091690",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:r},{...t,type:7,slot:1,name:"1",structure:r},{...t,type:7,slot:2,name:"2",structure:r},{...t,type:7,slot:3,name:"3",structure:r}],methods:[],template:ne}});Object.assign(X,{...e,type:1,name:"[48:0]u8",length:48,byteSize:49,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(Y,{...e,type:13,name:"*const [48:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[]}});Object.assign(V,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(Z,{...e,type:2,name:"Struct617544428",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"defaultValue",structure:W},{...t,type:7,slot:2,name:"description",structure:Y}],methods:[],template:ue}});Object.assign(tt,{...e,type:2,name:"Struct2121898850",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:r},{...t,type:7,slot:1,name:"1",structure:r},{...t,type:7,slot:2,name:"2",structure:r},{...t,type:7,slot:3,name:"3",structure:r}],methods:[],template:ye}});Object.assign(et,{...e,type:1,name:"[25:0]u8",length:25,byteSize:26,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(st,{...e,type:13,name:"*const [25:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:et}],methods:[]}});Object.assign(rt,{...e,type:2,name:"Struct1022917282",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"defaultValue",structure:tt},{...t,type:7,slot:2,name:"description",structure:st}],methods:[],template:Oe}});Object.assign(nt,{...e,type:2,name:"Struct3519533351",align:1,instance:{members:[{...t,type:7,slot:0,name:"threshold",structure:Q},{...t,type:7,slot:1,name:"outputColor1",structure:Z},{...t,type:7,slot:2,name:"outputColor2",structure:rt}],methods:[],template:Se}});Object.assign(w,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:l}],methods:[],template:he}});Object.assign(at,{...e,type:2,name:"Struct4227900966",align:1,instance:{members:[{...t,type:7,slot:0,name:"source",structure:w}],methods:[],template:je}});Object.assign(it,{...e,type:2,name:"Struct1665656598",align:1,instance:{members:[{...t,type:7,slot:0,name:"target",structure:w}],methods:[],template:de}});Object.assign(pt,{...e,type:2,name:"brightness-threshold.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:F},{...t,type:7,slot:1,name:"vendor",structure:$},{...t,type:7,slot:2,name:"version",structure:l},{...t,type:7,slot:3,name:"description",structure:B},{...t,type:7,slot:4,name:"parameters",structure:nt},{...t,type:7,slot:5,name:"inputImages",structure:at},{...t,type:7,slot:6,name:"outputImages",structure:it}],methods:[],template:we}});Object.assign(k,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(ot,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(q,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:ot}],methods:[]}});Object.assign(c,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[]}});Object.assign(O,{...e,type:11,name:"brightness-threshold.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:O}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:O},{...t,type:7,slot:1,name:"display-p3",structure:O}],methods:[],template:xe}});Object.assign(R,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(ct,{...e,type:2,name:"brightness-threshold.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:q},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:Te},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:l}],methods:[],template:Fe}});Object.assign(I,{...e,type:2,name:"brightness-threshold.KernelInput(u8,brightness-threshold.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"source",structure:ct}],methods:[],template:Ge}});Object.assign(ut,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(C,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:ut}],methods:[]}});Object.assign(mt,{...e,type:2,name:"brightness-threshold.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:C},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:Ne},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:l}],methods:[],template:We}});Object.assign(v,{...e,type:2,name:"brightness-threshold.KernelOutput(u8,brightness-threshold.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"target",structure:mt}],methods:[],template:es}});Object.assign(E,{...e,type:2,name:"brightness-threshold.KernelParameters(brightness-threshold.kernel)",byteSize:48,align:16,instance:{members:[{...t,type:5,bitOffset:256,bitSize:64,byteSize:8,slot:0,name:"threshold",structure:N},{...t,type:5,bitOffset:0,bitSize:128,byteSize:16,slot:1,name:"outputColor1",structure:V},{...t,type:5,bitOffset:128,bitSize:128,byteSize:16,slot:2,name:"outputColor2",structure:V}],methods:[],template:ns}});Object.assign(j,{...e,type:10,name:"ErrorSet310723721",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:j}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:j}],methods:[],template:as}});Object.assign(Ot,{...e,type:9,name:"ErrorSet310723721!brightness-threshold.KernelOutput(u8,brightness-threshold.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:j}],methods:[]}});Object.assign(ft,{...e,type:5,name:"createOutput",byteSize:112,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:384,bitSize:32,byteSize:4,slot:3,name:"0",structure:c},{...t,type:3,isRequired:!0,bitOffset:416,bitSize:32,byteSize:4,slot:4,name:"1",structure:c},{...t,type:5,isRequired:!0,bitOffset:448,bitSize:192,byteSize:24,slot:0,name:"2",structure:I},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:384,byteSize:48,slot:1,name:"3",structure:E},{...t,type:5,isRequired:!0,bitOffset:640,bitSize:224,byteSize:28,slot:2,name:"retval",structure:Ot}],methods:[]}});Object.assign(d,{...e,type:10,name:"ErrorSet1229835588",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:d}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:d}],methods:[],template:os}});Object.assign(St,{...e,type:9,name:"ErrorSet1229835588!brightness-threshold.KernelOutput(u8,brightness-threshold.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:d}],methods:[]}});Object.assign(ht,{...e,type:5,name:"createPartialOutput",byteSize:128,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:384,bitSize:32,byteSize:4,slot:3,name:"0",structure:c},{...t,type:3,isRequired:!0,bitOffset:416,bitSize:32,byteSize:4,slot:4,name:"1",structure:c},{...t,type:3,isRequired:!0,bitOffset:448,bitSize:32,byteSize:4,slot:5,name:"2",structure:c},{...t,type:3,isRequired:!0,bitOffset:480,bitSize:32,byteSize:4,slot:6,name:"3",structure:c},{...t,type:5,isRequired:!0,bitOffset:512,bitSize:192,byteSize:24,slot:0,name:"4",structure:I},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:384,byteSize:48,slot:1,name:"5",structure:E},{...t,type:5,isRequired:!0,bitOffset:704,bitSize:224,byteSize:28,slot:2,name:"retval",structure:St}],methods:[]}});Object.assign(zt,{...e,type:2,name:"brightness-threshold",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:s},{...t,type:7,slot:1,name:"Input",structure:s},{...t,type:7,slot:2,name:"Output",structure:s},{...t,type:7,slot:3,name:"Parameters",structure:s}],methods:[en,sn],template:us}});const rn=[s,p,D,F,_,$,l,f,L,B,r,u,G,H,J,P,N,Q,W,X,Y,V,Z,tt,et,st,rt,nt,w,at,it,pt,k,ot,q,c,O,R,ct,I,ut,C,mt,v,E,j,Ot,ft,d,St,ht,zt],nn=zt,an={runtimeSafety:!1,littleEndian:!0},bt=Cs();bt.getSpecialExports();bt.recreateStructures(rn,an);const on=(async()=>{const i=new URL("brightness-threshold-ea7ac0a3.wasm",import.meta.url).href;return fetch(i)})();bt.loadModule(on);bt.linkVariables(!0);const{constructor:cn}=nn,{createPartialOutput:un,Input:mn,kernel:gt}=cn;function yn(i,m,o,a,n={},S={}){const h=[];for(const[b]of gt.inputImages)h.push(b);const A=[];for(const[b]of gt.outputImages)A.push(b);if(Array.isArray(n)){const b=n;n={};for(const[g,z]of h.entries())n[z]=b[g]}const y=new mn(void 0),K=[];let U;for(const b of h){let g=n[b];if(g||(h.length===1&&["data","width","height"].every(z=>!!n[z])?g=n:K.push(b)),y[b]=g,U){if(g.colorSpace!==U)throw new Error(`Input images must all use the same color space: ${U}`)}else U=g.colorSpace}if(K.length>0)throw new Error(`Missing input image${K.length>1?"s":""}: ${K.join(", ")}`);const lt=un(i,m,o,a,y,S),Wt=b=>{const g={};for(const z of A){const{data:{typedArray:M},width:Xt,height:zs}=b[z];let T;if(typeof ImageData=="function"){const js=new Uint8ClampedArray(M.buffer,M.byteOffset,M.byteLength);T=new ImageData(js,Xt,a,{colorSpace:U})}else T={data:M,width:Xt,height:zs};if(A.length===1)return T;g[z]=T}return g};return lt[Symbol.toStringTag]==="Promise"?lt.then(Wt):Wt(lt)}function bn(){const i={};for(let[m,o]of gt){if(m==="parameters"){const a={};for(const[n,S]of o){const h=a[n]={};for(let[A,y]of S)typeof y=="object"?y=y.string??y.valueOf():typeof y=="function"&&(y=ln(y.name)),h[A]=y}o=a}else typeof o=="object"&&(o=o.string??o.valueOf());i[m]=o}return i}function ln(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=async i=>{if(!Array.isArray(i.data))return;const[m,o,...a]=i.data;try{const[n,S]=await gn(m,a);postMessage([m,o,n],{transfer:S})}catch(n){postMessage(["error",o,n])}};async function gn(i,m){switch(i){case"getKernelInfo":return[bn(...m)];case"createPartialImageData":const a=await yn(...m),n=[];if("data"in a&&"width"in a&&"height"in a)n.push(a.data.buffer);else for(const S of Object.entries(a))n.push(a.data.buffer);return[a,n];default:throw new Error(`Unknown function: ${i}`)}}postMessage("ready");
