import{u as bs,a as ls,b as gs,c as ps,d as fs,e as Os,f as Ss,g as js,h as zs,i as hs,j as ds,k as ws,l as As,m as Us,n as Ps,o as Vs,p as qs,q as Rs}from"./index-33238b17.js";bs();ws();As();ls();gs();Us();Ps();Vs();qs();ps();fs();Os();Ss();Rs();js();zs();hs();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},r={},O={},T={},D={},F={},_={},l={},S={},$={},L={},s={},o={},B={},G={},H={},f={},J={},N={},A={},Q={},U={},W={},X={},mt={},R={},Y={},k={},u={},p={},q={},yt={},Z={},I={},tt={},v={},et={},E={},x={},d={},bt={},lt={},w={},gt={},pt={},ft={},Lt={},Ot={},Bt={},St={},Gt={},jt={},Ht={},Jt={},zt={},Nt={},ht={},Qt={},dt={},Wt={},Xt={},wt={},Yt={},At={},Zt={},Ut={},te={},ee={},Pt={},se={},Vt={},qt={},Rt={},re={},st={},ne={},rt={},ae={},nt={},oe={},at={},ie={},ce={},kt={},It={},vt={},ue={},ot={},me={},ye={},Et={},be={},xt={},le={},ge={},pe={},fe={},Oe={},Se={},je={},ze={},he={},de={},we={},Ae={},Ue={},Pe={},Ve={},qe={},Re={},Kt={},ke={},Ie={},Ct={},ve={},Mt={},Ee={},xe={},Ke={},Ce={},Me={},Te={},De={},Tt={},Fe={},_e={},$e={},Le={},Be={},Ge={},He={},Je={},Ne={},Qe={},We={},Xe={},Ye={},Ze={},ts={},es={},ss={},rs={},ns={},as={},os={},is={},ks=new Uint8Array,Is=new Uint8Array([0,0,0,0,0,0,240,191]),vs=new Uint8Array,Es=new Uint8Array([0,0,0,0,0,0,240,191]),xs=new Uint8Array,Ks=new Uint8Array([0,0,0,0,0,0,89,192]),Cs=new Uint8Array,Ms=new Uint8Array([0,0,0,0,0,0,240,63]),Ts=new Uint8Array,Ds=new Uint8Array([0,0,0,0,0,0,240,63]),Fs=new Uint8Array,_s=new Uint8Array([0,0,0,0,0,0,89,64]),$s=new Uint8Array,Ls=new Uint8Array([57,180,200,118,190,159,230,63]),Bs=new Uint8Array,Gs=new Uint8Array([57,180,200,118,190,159,230,191]),Hs=new Uint8Array,Js=new Uint8Array([0,0,0,0,0,0,62,64]),Ns=new Uint8Array,Qs=new Uint8Array,Ws=new Uint8Array,Xs=new Uint8Array,Ys=new Uint8Array,Zs=new Uint8Array,tr=new Uint8Array([0,0,0,0,0,0,0,0]),er=new Uint8Array,sr=new Uint8Array([0,0,0,0,0,0,36,64]),rr=new Uint8Array,nr=new Uint8Array([0,0,0,0,0,0,240,63]),ar=new Uint8Array,or=new Uint8Array,ir=new Uint8Array,cr=new Uint8Array,ur=new Uint8Array([4]),mr=new Uint8Array,yr=new Uint8Array,br=new Uint8Array([10,5,0,1]),lr=new Uint8Array([70,111,99,117,115,105,110,103,76,105,110,101,97,114,66,108,117,114,0]),gr=new Uint8Array([40,5,0,1]),pr=new Uint8Array([80,101,116,114,105,32,76,101,115,107,105,110,101,110,0]),fr=new Uint8Array,Or=new Uint8Array([1]),Sr=new Uint8Array([72,5,0,1]),jr=new Uint8Array([108,105,110,101,97,114,32,98,108,117,114,32,98,121,32,97,32,108,105,110,101,32,101,113,117,97,116,105,111,110,0]),zr=new Uint8Array,hr=new Uint8Array,dr=new Uint8Array,wr=new Uint8Array([0]),Ar=new Uint8Array([1]),cs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ur=new Uint8Array,Pr=new Uint8Array,Vr=new Uint8Array,qr=new Uint8Array,Rr=new Uint8Array([4]),Dt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),us=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),kr=new Uint8Array,Ir=new Uint8Array,vr=new Uint8Array,Er=new Uint8Array,xr=new Uint8Array([4]),Ft=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Kr=new Uint8Array([244,253,52,63,244,253,52,191,0,0,240,65,0,0,0,0,0,0,128,63,0,0,128,63,0,0,0,0,0,0,0,0]),Cr=new Uint8Array([27,0]),Mr=new Uint8Array([27,0]),Tr=new Uint8Array,Dr=new Uint8Array,Fr=new Uint8Array,_r=new Uint8Array;Object.assign(Lt,{slots:{0:Ot,1:St,2:jt}});Object.assign(Ot,{structure:s,memory:{array:ks},const:!0,slots:{0:Bt}});Object.assign(Bt,{structure:o,memory:{array:Is},const:!0});Object.assign(St,{structure:s,memory:{array:vs},const:!0,slots:{0:Gt}});Object.assign(Gt,{structure:o,memory:{array:Es},const:!0});Object.assign(jt,{structure:s,memory:{array:xs},const:!0,slots:{0:Ht}});Object.assign(Ht,{structure:o,memory:{array:Ks},const:!0});Object.assign(Jt,{slots:{0:zt,1:ht,2:dt}});Object.assign(zt,{structure:s,memory:{array:Cs},const:!0,slots:{0:Nt}});Object.assign(Nt,{structure:o,memory:{array:Ms},const:!0});Object.assign(ht,{structure:s,memory:{array:Ts},const:!0,slots:{0:Qt}});Object.assign(Qt,{structure:o,memory:{array:Ds},const:!0});Object.assign(dt,{structure:s,memory:{array:Fs},const:!0,slots:{0:Wt}});Object.assign(Wt,{structure:o,memory:{array:_s},const:!0});Object.assign(Xt,{slots:{0:wt,1:At,2:Ut}});Object.assign(wt,{structure:s,memory:{array:$s},const:!0,slots:{0:Yt}});Object.assign(Yt,{structure:o,memory:{array:Ls},const:!0});Object.assign(At,{structure:s,memory:{array:Bs},const:!0,slots:{0:Zt}});Object.assign(Zt,{structure:o,memory:{array:Gs},const:!0});Object.assign(Ut,{structure:s,memory:{array:Hs},const:!0,slots:{0:te}});Object.assign(te,{structure:o,memory:{array:Js},const:!0});Object.assign(ee,{slots:{0:Pt,1:Vt,2:qt,3:Rt}});Object.assign(Pt,{structure:r,memory:{array:Ns},const:!0,slots:{0:se}});Object.assign(se,{structure:J});Object.assign(Vt,{structure:B,memory:{array:Qs},const:!0,slots:{0:Ot,1:St,2:jt}});Object.assign(qt,{structure:G,memory:{array:Ws},const:!0,slots:{0:zt,1:ht,2:dt}});Object.assign(Rt,{structure:H,memory:{array:Xs},const:!0,slots:{0:wt,1:At,2:Ut}});Object.assign(re,{slots:{0:st,1:rt,2:nt,3:at}});Object.assign(st,{structure:r,memory:{array:Ys},const:!0,slots:{0:ne}});Object.assign(ne,{structure:f});Object.assign(rt,{structure:s,memory:{array:Zs},const:!0,slots:{0:ae}});Object.assign(ae,{structure:o,memory:{array:tr},const:!0});Object.assign(nt,{structure:s,memory:{array:er},const:!0,slots:{0:oe}});Object.assign(oe,{structure:o,memory:{array:sr},const:!0});Object.assign(at,{structure:s,memory:{array:rr},const:!0,slots:{0:ie}});Object.assign(ie,{structure:o,memory:{array:nr},const:!0});Object.assign(ce,{slots:{0:kt,1:It,2:vt}});Object.assign(kt,{structure:N,memory:{array:ar},const:!0,slots:{0:Pt,1:Vt,2:qt,3:Rt}});Object.assign(It,{structure:A,memory:{array:or},const:!0,slots:{0:st,1:rt,2:nt,3:at}});Object.assign(vt,{structure:A,memory:{array:ir},const:!0,slots:{0:st,1:rt,2:nt,3:at}});Object.assign(ue,{slots:{0:ot}});Object.assign(ot,{structure:l,memory:{array:cr},const:!0,slots:{0:me}});Object.assign(me,{structure:S,memory:{array:ur},const:!0});Object.assign(ye,{slots:{0:Et}});Object.assign(Et,{structure:U,memory:{array:mr},const:!0,slots:{0:ot}});Object.assign(be,{slots:{0:xt}});Object.assign(xt,{structure:U,memory:{array:yr},const:!0,slots:{0:ot}});Object.assign(le,{slots:{0:ge,1:fe,2:Se,3:ze,4:de,5:we,6:Ae}});Object.assign(ge,{structure:D,memory:{array:br},const:!0,slots:{0:pe}});Object.assign(pe,{structure:T,memory:{array:lr},reloc:16778506});Object.assign(fe,{structure:_,memory:{array:gr},const:!0,slots:{0:Oe}});Object.assign(Oe,{structure:F,memory:{array:pr},reloc:16778536});Object.assign(Se,{structure:l,memory:{array:fr},const:!0,slots:{0:je}});Object.assign(je,{structure:S,memory:{array:Or},const:!0});Object.assign(ze,{structure:L,memory:{array:Sr},const:!0,slots:{0:he}});Object.assign(he,{structure:$,memory:{array:jr},reloc:16778568});Object.assign(de,{structure:Q,memory:{array:zr},const:!0,slots:{0:kt,1:It,2:vt}});Object.assign(we,{structure:W,memory:{array:hr},const:!0,slots:{0:Et}});Object.assign(Ae,{structure:X,memory:{array:dr},const:!0,slots:{0:xt}});Object.assign(Ue,{slots:{0:Pe,1:Ve}});Object.assign(Pe,{structure:p,memory:{array:wr},const:!0});Object.assign(Ve,{structure:p,memory:{array:Ar},const:!0});Object.assign(qe,{memory:{array:cs},slots:{0:Re}});Object.assign(Re,{structure:k,memory:{array:cs,offset:0,length:8},slots:{0:Kt}});Object.assign(Kt,{structure:Y,memory:{array:Ur},reloc:0});Object.assign(ke,{slots:{0:Ie,1:ve,2:Ee}});Object.assign(Ie,{structure:r,memory:{array:Pr},const:!0,slots:{0:Ct}});Object.assign(Ct,{structure:R});Object.assign(ve,{structure:r,memory:{array:Vr},const:!0,slots:{0:Mt}});Object.assign(Mt,{structure:yt});Object.assign(Ee,{structure:l,memory:{array:qr},const:!0,slots:{0:xe}});Object.assign(xe,{structure:S,memory:{array:Rr},const:!0});Object.assign(Ke,{memory:{array:Dt},slots:{0:Ce}});Object.assign(Ce,{structure:Z,memory:{array:Dt},slots:{0:Me}});Object.assign(Me,{structure:k,memory:{array:Dt,offset:0,length:8},slots:{0:Kt}});Object.assign(Te,{memory:{array:us},slots:{0:De}});Object.assign(De,{structure:v,memory:{array:us,offset:0,length:8},slots:{0:Tt}});Object.assign(Tt,{structure:tt,memory:{array:kr},reloc:0});Object.assign(Fe,{slots:{0:_e,1:$e,2:Le}});Object.assign(_e,{structure:r,memory:{array:Ir},const:!0,slots:{0:Ct}});Object.assign($e,{structure:r,memory:{array:vr},const:!0,slots:{0:Mt}});Object.assign(Le,{structure:l,memory:{array:Er},const:!0,slots:{0:Be}});Object.assign(Be,{structure:S,memory:{array:xr},const:!0});Object.assign(Ge,{memory:{array:Ft},slots:{0:He}});Object.assign(He,{structure:et,memory:{array:Ft},slots:{0:Je}});Object.assign(Je,{structure:v,memory:{array:Ft,offset:0,length:8},slots:{0:Tt}});Object.assign(Ne,{memory:{array:Kr}});Object.assign(Qe,{slots:{0:We}});Object.assign(We,{structure:d,memory:{array:Cr},const:!0});Object.assign(Xe,{slots:{0:Ye}});Object.assign(Ye,{structure:w,memory:{array:Mr},const:!0});Object.assign(Ze,{slots:{0:ts,1:ss,2:ns,3:os}});Object.assign(ts,{structure:r,memory:{array:Tr},const:!0,slots:{0:es}});Object.assign(es,{structure:mt});Object.assign(ss,{structure:r,memory:{array:Dr},const:!0,slots:{0:rs}});Object.assign(rs,{structure:I});Object.assign(ns,{structure:r,memory:{array:Fr},const:!0,slots:{0:as}});Object.assign(as,{structure:E});Object.assign(os,{structure:r,memory:{array:_r},const:!0,slots:{0:is}});Object.assign(is,{structure:x});const $r={argStruct:lt,thunkId:2,name:"createOutput"},Lr={argStruct:pt,thunkId:3,name:"createPartialOutput"};Object.assign(r,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(O,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(T,{...e,type:1,name:"[18:0]u8",length:18,byteSize:19,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(D,{...e,type:13,name:"*const [18:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[]}});Object.assign(F,{...e,type:1,name:"[14:0]u8",length:14,byteSize:15,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(_,{...e,type:13,name:"*const [14:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(l,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:l}],methods:[]}});Object.assign(S,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign($,{...e,type:1,name:"[30:0]u8",length:30,byteSize:31,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(L,{...e,type:13,name:"*const [30:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[]}});Object.assign(s,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(o,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:o}],methods:[]}});Object.assign(B,{...e,type:2,name:"Struct1228912940",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s},{...t,type:7,slot:2,name:"2",structure:s}],methods:[],template:Lt}});Object.assign(G,{...e,type:2,name:"Struct2233907836",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s},{...t,type:7,slot:2,name:"2",structure:s}],methods:[],template:Jt}});Object.assign(H,{...e,type:2,name:"Struct472551018",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s},{...t,type:7,slot:2,name:"2",structure:s}],methods:[],template:Xt}});Object.assign(f,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:f}],methods:[]}});Object.assign(J,{...e,type:15,name:"@Vector(3, f32)",length:3,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:f}],methods:[]}});Object.assign(N,{...e,type:2,name:"Struct149436235",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:B},{...t,type:7,slot:2,name:"maxValue",structure:G},{...t,type:7,slot:3,name:"defaultValue",structure:H}],methods:[],template:ee}});Object.assign(A,{...e,type:2,name:"Struct2255363975",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:s},{...t,type:7,slot:2,name:"maxValue",structure:s},{...t,type:7,slot:3,name:"defaultValue",structure:s}],methods:[],template:re}});Object.assign(Q,{...e,type:2,name:"Struct798344954",align:1,instance:{members:[{...t,type:7,slot:0,name:"lineEquation",structure:N},{...t,type:7,slot:1,name:"uScale",structure:A},{...t,type:7,slot:2,name:"vScale",structure:A}],methods:[],template:ce}});Object.assign(U,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:l}],methods:[],template:ue}});Object.assign(W,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:7,slot:0,name:"src",structure:U}],methods:[],template:ye}});Object.assign(X,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:U}],methods:[],template:be}});Object.assign(mt,{...e,type:2,name:"focus-linear-blur.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:D},{...t,type:7,slot:1,name:"vendor",structure:_},{...t,type:7,slot:2,name:"version",structure:l},{...t,type:7,slot:3,name:"description",structure:L},{...t,type:7,slot:4,name:"parameters",structure:Q},{...t,type:7,slot:5,name:"inputImages",structure:W},{...t,type:7,slot:6,name:"outputImages",structure:X}],methods:[],template:le}});Object.assign(R,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(Y,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(k,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:Y}],methods:[]}});Object.assign(u,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:u}],methods:[]}});Object.assign(p,{...e,type:11,name:"focus-linear-blur.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:p}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:p},{...t,type:7,slot:1,name:"display-p3",structure:p}],methods:[],template:Ue}});Object.assign(q,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:q}],methods:[]}});Object.assign(yt,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:f}],methods:[]}});Object.assign(Z,{...e,type:2,name:"focus-linear-blur.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:k},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:q}],methods:[],template:qe},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:r},{...t,type:7,slot:1,name:"FPixel",structure:r},{...t,type:7,slot:2,name:"channels",structure:l}],methods:[],template:ke}});Object.assign(I,{...e,type:2,name:"focus-linear-blur.KernelInput(u8,focus-linear-blur.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:Z}],methods:[],template:Ke}});Object.assign(tt,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(v,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:tt}],methods:[]}});Object.assign(et,{...e,type:2,name:"focus-linear-blur.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:v},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:q}],methods:[],template:Te},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:r},{...t,type:7,slot:1,name:"FPixel",structure:r},{...t,type:7,slot:2,name:"channels",structure:l}],methods:[],template:Fe}});Object.assign(E,{...e,type:2,name:"focus-linear-blur.KernelOutput(u8,focus-linear-blur.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:et}],methods:[],template:Ge}});Object.assign(x,{...e,type:2,name:"focus-linear-blur.KernelParameters(focus-linear-blur.kernel)",byteSize:32,align:16,instance:{members:[{...t,type:5,bitOffset:0,bitSize:96,byteSize:16,slot:0,name:"lineEquation",structure:J},{...t,type:4,bitOffset:128,bitSize:32,byteSize:4,slot:1,name:"uScale",structure:f},{...t,type:4,bitOffset:160,bitSize:32,byteSize:4,slot:2,name:"vScale",structure:f}],methods:[],template:Ne}});Object.assign(d,{...e,type:10,name:"ErrorSet210340914",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:d}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:d}],methods:[],template:Qe}});Object.assign(bt,{...e,type:9,name:"ErrorSet210340914!focus-linear-blur.KernelOutput(u8,focus-linear-blur.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:E},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:d}],methods:[]}});Object.assign(lt,{...e,type:5,name:"createOutput",byteSize:96,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...t,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...t,type:5,isRequired:!0,bitOffset:320,bitSize:192,byteSize:24,slot:0,name:"2",structure:I},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:256,byteSize:32,slot:1,name:"3",structure:x},{...t,type:5,isRequired:!0,bitOffset:512,bitSize:224,byteSize:28,slot:2,name:"retval",structure:bt}],methods:[]}});Object.assign(w,{...e,type:10,name:"ErrorSet1082675225",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:w}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:w}],methods:[],template:Xe}});Object.assign(gt,{...e,type:9,name:"ErrorSet1082675225!focus-linear-blur.KernelOutput(u8,focus-linear-blur.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:E},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:w}],methods:[]}});Object.assign(pt,{...e,type:5,name:"createPartialOutput",byteSize:112,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...t,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...t,type:3,isRequired:!0,bitOffset:320,bitSize:32,byteSize:4,slot:5,name:"2",structure:u},{...t,type:3,isRequired:!0,bitOffset:352,bitSize:32,byteSize:4,slot:6,name:"3",structure:u},{...t,type:5,isRequired:!0,bitOffset:384,bitSize:192,byteSize:24,slot:0,name:"4",structure:I},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:256,byteSize:32,slot:1,name:"5",structure:x},{...t,type:5,isRequired:!0,bitOffset:576,bitSize:224,byteSize:28,slot:2,name:"retval",structure:gt}],methods:[]}});Object.assign(ft,{...e,type:2,name:"focus-linear-blur",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:r},{...t,type:7,slot:1,name:"Input",structure:r},{...t,type:7,slot:2,name:"Output",structure:r},{...t,type:7,slot:3,name:"Parameters",structure:r}],methods:[$r,Lr],template:Ze}});const Br=[r,O,T,D,F,_,l,S,$,L,s,o,B,G,H,f,J,N,A,Q,U,W,X,mt,R,Y,k,u,p,q,yt,Z,I,tt,v,et,E,x,d,bt,lt,w,gt,pt,ft],Gr=ft,Hr={runtimeSafety:!1,littleEndian:!0},it=ds();it.getSpecialExports();it.recreateStructures(Br,Hr);const Jr=(async()=>{const i=new URL("focus-linear-blur-48d461e0.wasm",import.meta.url).href;return fetch(i)})();it.loadModule(Jr);it.linkVariables(!0);const{constructor:Nr}=Gr,{createPartialOutput:Qr,Input:Wr,kernel:ut}=Nr;function Xr(i,m,c,a,n={},j={}){const z=[];for(const[b]of ut.inputImages)z.push(b);const P=[];for(const[b]of ut.outputImages)P.push(b);if(Array.isArray(n)){const b=n;n={};for(const[g,h]of z.entries())n[h]=b[g]}const y=new Wr(void 0),K=[];let V;for(const b of z){let g=n[b];if(g||(z.length===1&&["data","width","height"].every(h=>!!n[h])?g=n:K.push(b)),y[b]=g,V){if(g.colorSpace!==V)throw new Error(`Input images must all use the same color space: ${V}`)}else V=g.colorSpace}if(K.length>0)throw new Error(`Missing input image${K.length>1?"s":""}: ${K.join(", ")}`);const ct=Qr(i,m,c,a,y,j),_t=b=>{const g={};for(const h of P){const{data:{typedArray:C},width:$t,height:ms}=b[h];let M;if(typeof ImageData=="function"){const ys=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);M=new ImageData(ys,$t,a,{colorSpace:V})}else M={data:C,width:$t,height:ms};if(P.length===1)return M;g[h]=M}return g};return ct[Symbol.toStringTag]==="Promise"?ct.then(_t):_t(ct)}function Yr(){const i={};for(let[m,c]of ut){if(m==="parameters"){const a={};for(const[n,j]of c){const z=a[n]={};for(let[P,y]of j)typeof y=="object"?y=y.string??y.valueOf():typeof y=="function"&&(y=Zr(y.name)),z[P]=y}c=a}else typeof c=="object"&&(c=c.string??c.valueOf());i[m]=c}return i}function Zr(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=async i=>{if(!Array.isArray(i.data))return;const[m,c,...a]=i.data;try{const[n,j]=await tn(m,a);postMessage([m,c,n],{transfer:j})}catch(n){postMessage(["error",c,n])}};async function tn(i,m){switch(i){case"getKernelInfo":return[Yr(...m)];case"createPartialImageData":const a=await Xr(...m),n=[];if("data"in a&&"width"in a&&"height"in a)n.push(a.data.buffer);else for(const j of Object.entries(a))n.push(a.data.buffer);return[a,n];default:throw new Error(`Unknown function: ${i}`)}}postMessage("ready");
