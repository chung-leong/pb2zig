import{u as us,a as ms,b as ys,c as bs,d as ls,e as gs,f as ps,g as Os,h as fs,i as Ss,j as js,k as zs,l as hs,m as ds,n as ws,o as As,p as Us,q as vs}from"./index-270629a1.js";us();zs();hs();ms();ys();ds();ws();As();Us();bs();ls();gs();ps();vs();Os();fs();Ss();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},f={},M={},T={},F={},_={},l={},S={},$={},L={},r={},u={},A={},B={},O={},G={},H={},J={},N={},Q={},U={},W={},X={},ct={},q={},Y={},R={},c={},p={},P={},ut={},Z={},k={},tt={},I={},et={},E={},x={},d={},mt={},yt={},w={},bt={},lt={},gt={},Lt={},st={},Bt={},rt={},Gt={},Ht={},pt={},Jt={},Ot={},Nt={},Qt={},ft={},Wt={},St={},jt={},zt={},Xt={},ht={},dt={},wt={},Yt={},At={},Zt={},Ut={},te={},ee={},vt={},Vt={},se={},Pt={},re={},qt={},ae={},ne={},Rt={},kt={},It={},ie={},at={},oe={},ce={},Et={},ue={},xt={},me={},ye={},be={},le={},ge={},pe={},Oe={},fe={},Se={},je={},ze={},he={},de={},we={},Ae={},Ue={},ve={},Kt={},Ve={},Pe={},Ct={},qe={},Dt={},Re={},ke={},Ie={},Ee={},xe={},Ke={},Ce={},Mt={},De={},Me={},Te={},Fe={},_e={},$e={},Le={},Be={},Ge={},He={},Je={},Ne={},Qe={},We={},Xe={},Ye={},Ze={},ts={},es={},ss={},rs={},as={},Vs=new Uint8Array,Ps=new Uint8Array([0,0,0,0,0,0,0,0]),qs=new Uint8Array,Rs=new Uint8Array([0,0,0,0,0,0,0,0]),ks=new Uint8Array,Is=new Uint8Array([0,0,0,0,0,0,176,64]),Es=new Uint8Array,xs=new Uint8Array([0,0,0,0,0,0,176,64]),Ks=new Uint8Array,Cs=new Uint8Array,Ds=new Uint8Array,Ms=new Uint8Array,Ts=new Uint8Array,Fs=new Uint8Array,_s=new Uint8Array([0,0,0,0,0,0,0,0]),$s=new Uint8Array,Ls=new Uint8Array([0,0,0,0,0,0,89,64]),Bs=new Uint8Array,Gs=new Uint8Array([0,0,0,0,0,0,36,64]),Hs=new Uint8Array,Js=new Uint8Array,Ns=new Uint8Array([0,0,0,0,0,0,0,0]),Qs=new Uint8Array,Ws=new Uint8Array([0,0,0,0,0,0,89,64]),Xs=new Uint8Array,Ys=new Uint8Array([0,0,0,0,0,0,20,64]),Zs=new Uint8Array,tr=new Uint8Array,er=new Uint8Array,sr=new Uint8Array,rr=new Uint8Array([4]),ar=new Uint8Array,nr=new Uint8Array,ir=new Uint8Array([72,16,0,1]),or=new Uint8Array([110,101,116,46,110,105,99,111,112,116,101,114,101,46,102,105,108,116,101,114,115,0]),cr=new Uint8Array([105,16,0,1]),ur=new Uint8Array([110,105,99,111,112,116,101,114,101,0]),mr=new Uint8Array,yr=new Uint8Array([1]),br=new Uint8Array([132,16,0,1]),lr=new Uint8Array([119,97,118,101,0]),gr=new Uint8Array,pr=new Uint8Array,Or=new Uint8Array,fr=new Uint8Array([0]),Sr=new Uint8Array([1]),ns=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),jr=new Uint8Array,zr=new Uint8Array,hr=new Uint8Array,dr=new Uint8Array,wr=new Uint8Array([4]),Tt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),is=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ar=new Uint8Array,Ur=new Uint8Array,vr=new Uint8Array,Vr=new Uint8Array,Pr=new Uint8Array([4]),Ft=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),qr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,32,65,0,0,160,64]),Rr=new Uint8Array([27,0]),kr=new Uint8Array([27,0]),Ir=new Uint8Array,Er=new Uint8Array,xr=new Uint8Array,Kr=new Uint8Array;Object.assign(Lt,{slots:{0:st,1:rt}});Object.assign(st,{structure:r,memory:{array:Vs},const:!0,slots:{0:Bt}});Object.assign(Bt,{structure:u,memory:{array:Ps},const:!0});Object.assign(rt,{structure:r,memory:{array:qs},const:!0,slots:{0:Gt}});Object.assign(Gt,{structure:u,memory:{array:Rs},const:!0});Object.assign(Ht,{slots:{0:pt,1:Ot}});Object.assign(pt,{structure:r,memory:{array:ks},const:!0,slots:{0:Jt}});Object.assign(Jt,{structure:u,memory:{array:Is},const:!0});Object.assign(Ot,{structure:r,memory:{array:Es},const:!0,slots:{0:Nt}});Object.assign(Nt,{structure:u,memory:{array:xs},const:!0});Object.assign(Qt,{slots:{0:ft,1:St,2:jt,3:zt}});Object.assign(ft,{structure:s,memory:{array:Ks},const:!0,slots:{0:Wt}});Object.assign(Wt,{structure:G});Object.assign(St,{structure:A,memory:{array:Cs},const:!0,slots:{0:st,1:rt}});Object.assign(jt,{structure:B,memory:{array:Ds},const:!0,slots:{0:pt,1:Ot}});Object.assign(zt,{structure:A,memory:{array:Ms},const:!0,slots:{0:st,1:rt}});Object.assign(Xt,{slots:{0:ht,1:wt,2:At,3:Ut}});Object.assign(ht,{structure:s,memory:{array:Ts},const:!0,slots:{0:dt}});Object.assign(dt,{structure:O});Object.assign(wt,{structure:r,memory:{array:Fs},const:!0,slots:{0:Yt}});Object.assign(Yt,{structure:u,memory:{array:_s},const:!0});Object.assign(At,{structure:r,memory:{array:$s},const:!0,slots:{0:Zt}});Object.assign(Zt,{structure:u,memory:{array:Ls},const:!0});Object.assign(Ut,{structure:r,memory:{array:Bs},const:!0,slots:{0:te}});Object.assign(te,{structure:u,memory:{array:Gs},const:!0});Object.assign(ee,{slots:{0:vt,1:Vt,2:Pt,3:qt}});Object.assign(vt,{structure:s,memory:{array:Hs},const:!0,slots:{0:dt}});Object.assign(Vt,{structure:r,memory:{array:Js},const:!0,slots:{0:se}});Object.assign(se,{structure:u,memory:{array:Ns},const:!0});Object.assign(Pt,{structure:r,memory:{array:Qs},const:!0,slots:{0:re}});Object.assign(re,{structure:u,memory:{array:Ws},const:!0});Object.assign(qt,{structure:r,memory:{array:Xs},const:!0,slots:{0:ae}});Object.assign(ae,{structure:u,memory:{array:Ys},const:!0});Object.assign(ne,{slots:{0:Rt,1:kt,2:It}});Object.assign(Rt,{structure:H,memory:{array:Zs},const:!0,slots:{0:ft,1:St,2:jt,3:zt}});Object.assign(kt,{structure:J,memory:{array:tr},const:!0,slots:{0:ht,1:wt,2:At,3:Ut}});Object.assign(It,{structure:N,memory:{array:er},const:!0,slots:{0:vt,1:Vt,2:Pt,3:qt}});Object.assign(ie,{slots:{0:at}});Object.assign(at,{structure:l,memory:{array:sr},const:!0,slots:{0:oe}});Object.assign(oe,{structure:S,memory:{array:rr},const:!0});Object.assign(ce,{slots:{0:Et}});Object.assign(Et,{structure:U,memory:{array:ar},const:!0,slots:{0:at}});Object.assign(ue,{slots:{0:xt}});Object.assign(xt,{structure:U,memory:{array:nr},const:!0,slots:{0:at}});Object.assign(me,{slots:{0:ye,1:le,2:pe,3:fe,4:je,5:ze,6:he}});Object.assign(ye,{structure:T,memory:{array:ir},const:!0,slots:{0:be}});Object.assign(be,{structure:M,memory:{array:or},reloc:16781384});Object.assign(le,{structure:_,memory:{array:cr},const:!0,slots:{0:ge}});Object.assign(ge,{structure:F,memory:{array:ur},reloc:16781417});Object.assign(pe,{structure:l,memory:{array:mr},const:!0,slots:{0:Oe}});Object.assign(Oe,{structure:S,memory:{array:yr},const:!0});Object.assign(fe,{structure:L,memory:{array:br},const:!0,slots:{0:Se}});Object.assign(Se,{structure:$,memory:{array:lr},reloc:16781444});Object.assign(je,{structure:Q,memory:{array:gr},const:!0,slots:{0:Rt,1:kt,2:It}});Object.assign(ze,{structure:W,memory:{array:pr},const:!0,slots:{0:Et}});Object.assign(he,{structure:X,memory:{array:Or},const:!0,slots:{0:xt}});Object.assign(de,{slots:{0:we,1:Ae}});Object.assign(we,{structure:p,memory:{array:fr},const:!0});Object.assign(Ae,{structure:p,memory:{array:Sr},const:!0});Object.assign(Ue,{memory:{array:ns},slots:{0:ve}});Object.assign(ve,{structure:R,memory:{array:ns,offset:0,length:8},slots:{0:Kt}});Object.assign(Kt,{structure:Y,memory:{array:jr},reloc:0});Object.assign(Ve,{slots:{0:Pe,1:qe,2:Re}});Object.assign(Pe,{structure:s,memory:{array:zr},const:!0,slots:{0:Ct}});Object.assign(Ct,{structure:q});Object.assign(qe,{structure:s,memory:{array:hr},const:!0,slots:{0:Dt}});Object.assign(Dt,{structure:ut});Object.assign(Re,{structure:l,memory:{array:dr},const:!0,slots:{0:ke}});Object.assign(ke,{structure:S,memory:{array:wr},const:!0});Object.assign(Ie,{memory:{array:Tt},slots:{0:Ee}});Object.assign(Ee,{structure:Z,memory:{array:Tt},slots:{0:xe}});Object.assign(xe,{structure:R,memory:{array:Tt,offset:0,length:8},slots:{0:Kt}});Object.assign(Ke,{memory:{array:is},slots:{0:Ce}});Object.assign(Ce,{structure:I,memory:{array:is,offset:0,length:8},slots:{0:Mt}});Object.assign(Mt,{structure:tt,memory:{array:Ar},reloc:0});Object.assign(De,{slots:{0:Me,1:Te,2:Fe}});Object.assign(Me,{structure:s,memory:{array:Ur},const:!0,slots:{0:Ct}});Object.assign(Te,{structure:s,memory:{array:vr},const:!0,slots:{0:Dt}});Object.assign(Fe,{structure:l,memory:{array:Vr},const:!0,slots:{0:_e}});Object.assign(_e,{structure:S,memory:{array:Pr},const:!0});Object.assign($e,{memory:{array:Ft},slots:{0:Le}});Object.assign(Le,{structure:et,memory:{array:Ft},slots:{0:Be}});Object.assign(Be,{structure:I,memory:{array:Ft,offset:0,length:8},slots:{0:Mt}});Object.assign(Ge,{memory:{array:qr}});Object.assign(He,{slots:{0:Je}});Object.assign(Je,{structure:d,memory:{array:Rr},const:!0});Object.assign(Ne,{slots:{0:Qe}});Object.assign(Qe,{structure:w,memory:{array:kr},const:!0});Object.assign(We,{slots:{0:Xe,1:Ze,2:es,3:rs}});Object.assign(Xe,{structure:s,memory:{array:Ir},const:!0,slots:{0:Ye}});Object.assign(Ye,{structure:ct});Object.assign(Ze,{structure:s,memory:{array:Er},const:!0,slots:{0:ts}});Object.assign(ts,{structure:k});Object.assign(es,{structure:s,memory:{array:xr},const:!0,slots:{0:ss}});Object.assign(ss,{structure:E});Object.assign(rs,{structure:s,memory:{array:Kr},const:!0,slots:{0:as}});Object.assign(as,{structure:x});const Cr={argStruct:yt,thunkId:2,name:"createOutput"},Dr={argStruct:lt,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(f,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(M,{...e,type:1,name:"[21:0]u8",length:21,byteSize:22,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(T,{...e,type:13,name:"*const [21:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(F,{...e,type:1,name:"[9:0]u8",length:9,byteSize:10,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(_,{...e,type:13,name:"*const [9:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(l,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:l}],methods:[]}});Object.assign(S,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign($,{...e,type:1,name:"[4:0]u8",length:4,byteSize:5,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(L,{...e,type:13,name:"*const [4:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[]}});Object.assign(r,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(u,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:u}],methods:[]}});Object.assign(A,{...e,type:2,name:"Struct738220547",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:r},{...t,type:7,slot:1,name:"1",structure:r}],methods:[],template:Lt}});Object.assign(B,{...e,type:2,name:"Struct2662133551",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:r},{...t,type:7,slot:1,name:"1",structure:r}],methods:[],template:Ht}});Object.assign(O,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:O}],methods:[]}});Object.assign(G,{...e,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:O}],methods:[]}});Object.assign(H,{...e,type:2,name:"Struct2812903031",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:A},{...t,type:7,slot:2,name:"maxValue",structure:B},{...t,type:7,slot:3,name:"defaultValue",structure:A}],methods:[],template:Qt}});Object.assign(J,{...e,type:2,name:"Struct2233039273",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:r},{...t,type:7,slot:2,name:"maxValue",structure:r},{...t,type:7,slot:3,name:"defaultValue",structure:r}],methods:[],template:Xt}});Object.assign(N,{...e,type:2,name:"Struct2806498133",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:r},{...t,type:7,slot:2,name:"maxValue",structure:r},{...t,type:7,slot:3,name:"defaultValue",structure:r}],methods:[],template:ee}});Object.assign(Q,{...e,type:2,name:"Struct1601438196",align:1,instance:{members:[{...t,type:7,slot:0,name:"center",structure:H},{...t,type:7,slot:1,name:"amplitude",structure:J},{...t,type:7,slot:2,name:"frequency",structure:N}],methods:[],template:ne}});Object.assign(U,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:l}],methods:[],template:ie}});Object.assign(W,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:7,slot:0,name:"src",structure:U}],methods:[],template:ce}});Object.assign(X,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:U}],methods:[],template:ue}});Object.assign(ct,{...e,type:2,name:"wave.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:T},{...t,type:7,slot:1,name:"vendor",structure:_},{...t,type:7,slot:2,name:"version",structure:l},{...t,type:7,slot:3,name:"description",structure:L},{...t,type:7,slot:4,name:"parameters",structure:Q},{...t,type:7,slot:5,name:"inputImages",structure:W},{...t,type:7,slot:6,name:"outputImages",structure:X}],methods:[],template:me}});Object.assign(q,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(Y,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:q}],methods:[]}});Object.assign(R,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:Y}],methods:[]}});Object.assign(c,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[]}});Object.assign(p,{...e,type:11,name:"wave.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:p}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:p},{...t,type:7,slot:1,name:"display-p3",structure:p}],methods:[],template:de}});Object.assign(P,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(ut,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:O}],methods:[]}});Object.assign(Z,{...e,type:2,name:"wave.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:R},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:Ue},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:l}],methods:[],template:Ve}});Object.assign(k,{...e,type:2,name:"wave.KernelInput(u8,wave.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:Z}],methods:[],template:Ie}});Object.assign(tt,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:q}],methods:[]}});Object.assign(I,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:tt}],methods:[]}});Object.assign(et,{...e,type:2,name:"wave.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:I},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:Ke},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:l}],methods:[],template:De}});Object.assign(E,{...e,type:2,name:"wave.KernelOutput(u8,wave.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:et}],methods:[],template:$e}});Object.assign(x,{...e,type:2,name:"wave.KernelParameters(wave.kernel)",byteSize:16,align:8,instance:{members:[{...t,type:5,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"center",structure:G},{...t,type:4,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"amplitude",structure:O},{...t,type:4,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"frequency",structure:O}],methods:[],template:Ge}});Object.assign(d,{...e,type:10,name:"ErrorSet1314185718",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:d}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:d}],methods:[],template:He}});Object.assign(mt,{...e,type:9,name:"ErrorSet1314185718!wave.KernelOutput(u8,wave.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:E},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:d}],methods:[]}});Object.assign(yt,{...e,type:5,name:"createOutput",byteSize:80,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"0",structure:c},{...t,type:3,isRequired:!0,bitOffset:160,bitSize:32,byteSize:4,slot:4,name:"1",structure:c},{...t,type:5,isRequired:!0,bitOffset:192,bitSize:192,byteSize:24,slot:0,name:"2",structure:k},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:128,byteSize:16,slot:1,name:"3",structure:x},{...t,type:5,isRequired:!0,bitOffset:384,bitSize:224,byteSize:28,slot:2,name:"retval",structure:mt}],methods:[]}});Object.assign(w,{...e,type:10,name:"ErrorSet796355719",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:w}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:w}],methods:[],template:Ne}});Object.assign(bt,{...e,type:9,name:"ErrorSet796355719!wave.KernelOutput(u8,wave.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:E},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:w}],methods:[]}});Object.assign(lt,{...e,type:5,name:"createPartialOutput",byteSize:88,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"0",structure:c},{...t,type:3,isRequired:!0,bitOffset:160,bitSize:32,byteSize:4,slot:4,name:"1",structure:c},{...t,type:3,isRequired:!0,bitOffset:192,bitSize:32,byteSize:4,slot:5,name:"2",structure:c},{...t,type:3,isRequired:!0,bitOffset:224,bitSize:32,byteSize:4,slot:6,name:"3",structure:c},{...t,type:5,isRequired:!0,bitOffset:256,bitSize:192,byteSize:24,slot:0,name:"4",structure:k},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:128,byteSize:16,slot:1,name:"5",structure:x},{...t,type:5,isRequired:!0,bitOffset:448,bitSize:224,byteSize:28,slot:2,name:"retval",structure:bt}],methods:[]}});Object.assign(gt,{...e,type:2,name:"wave",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:s},{...t,type:7,slot:1,name:"Input",structure:s},{...t,type:7,slot:2,name:"Output",structure:s},{...t,type:7,slot:3,name:"Parameters",structure:s}],methods:[Cr,Dr],template:We}});const Mr=[s,f,M,T,F,_,l,S,$,L,r,u,A,B,O,G,H,J,N,Q,U,W,X,ct,q,Y,R,c,p,P,ut,Z,k,tt,I,et,E,x,d,mt,yt,w,bt,lt,gt],Tr=gt,Fr={runtimeSafety:!1,littleEndian:!0},nt=js();nt.getSpecialExports();nt.recreateStructures(Mr,Fr);const _r=(async()=>{const i=new URL("wave-995c66fe.wasm",import.meta.url).href;return fetch(i)})();nt.loadModule(_r);nt.linkVariables(!0);const{constructor:$r}=Tr,{createPartialOutput:Lr,Input:Br,kernel:ot}=$r;function Gr(i,m,o,n,a={},j={}){const z=[];for(const[b]of ot.inputImages)z.push(b);const v=[];for(const[b]of ot.outputImages)v.push(b);if(Array.isArray(a)){const b=a;a={};for(const[g,h]of z.entries())a[h]=b[g]}const y=new Br(void 0),K=[];let V;for(const b of z){let g=a[b];if(g||(z.length===1&&["data","width","height"].every(h=>!!a[h])?g=a:K.push(b)),y[b]=g,V){if(g.colorSpace!==V)throw new Error(`Input images must all use the same color space: ${V}`)}else V=g.colorSpace}if(K.length>0)throw new Error(`Missing input image${K.length>1?"s":""}: ${K.join(", ")}`);const it=Lr(i,m,o,n,y,j),_t=b=>{const g={};for(const h of v){const{data:{typedArray:C},width:$t,height:os}=b[h];let D;if(typeof ImageData=="function"){const cs=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);D=new ImageData(cs,$t,n,{colorSpace:V})}else D={data:C,width:$t,height:os};if(v.length===1)return D;g[h]=D}return g};return it[Symbol.toStringTag]==="Promise"?it.then(_t):_t(it)}function Hr(){const i={};for(let[m,o]of ot){if(m==="parameters"){const n={};for(const[a,j]of o){const z=n[a]={};for(let[v,y]of j)typeof y=="object"?y=y.string??y.valueOf():typeof y=="function"&&(y=Jr(y.name)),z[v]=y}o=n}else typeof o=="object"&&(o=o.string??o.valueOf());i[m]=o}return i}function Jr(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[m,o,...n]=i.data;Nr(m,n).then(([a,j])=>{postMessage([m,o,a],{transfer:j})}).catch(a=>{postMessage(["error",o,a])})};async function Nr(i,m){switch(i){case"getKernelInfo":return[Hr(...m)];case"createPartialImageData":const n=await Gr(...m),a=[];if("data"in n&&"width"in n&&"height"in n)a.push(n.data.buffer);else for(const j of Object.entries(n))a.push(n.data.buffer);return[n,a];default:throw new Error(`Unknown function: ${i}`)}}
