import{u as Me,a as _e,b as Te,c as $e,d as Be,e as Le,f as Ge,g as He,h as Je,i as Ne,j as Qe,k as We,l as Xe,m as Ye,o as Ze,n as et,p as tt,q as st}from"./index-d64bc850.js";Me();_e();Te();$e();Be();Le();Ge();He();Je();Ne();Qe();We();Xe();Ye();Ze();et();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},y={},N={},Q={},C={},W={},X={},I={},b={},p={},Y={},Z={},v={},f={},i={},s={},ee={},te={},x={},se={},E={},re={},ae={},K={},ne={},D={},ie={},ue={},F={},oe={},M={},le={},_={},me={},ce={},T={},ye={},$={},be={},B={},A={},g={},pe={},L={},fe={},G={},Re={},z={},de={},Se={},m={},he={},w={},ge={},H={},R={},ze={},Oe={},J={},q={},U={},qe={},Ue={},je={},Pe={},ke={},Ve={},Ce={};Object.assign(y,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:y}],methods:[],template:null},slot:5});Object.assign(N,{...t,type:1,name:"[13:0]u8",length:13,byteSize:14,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:y}],methods:[],template:null},slot:4});Object.assign(Q,{...t,type:11,name:"*const [13:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:N}],methods:[],template:null},slot:3});Object.assign(C,{...t,type:11,name:"*const *const [13:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[],template:null},slot:2});Object.assign(W,{...t,type:1,name:"[14:0]u8",length:14,byteSize:15,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:y}],methods:[],template:null},slot:8});Object.assign(X,{...t,type:11,name:"*const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:7});Object.assign(I,{...t,type:11,name:"*const *const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:6});Object.assign(b,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:10});Object.assign(p,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:b}],methods:[],template:null},slot:9});Object.assign(Y,{...t,type:1,name:"[11:0]u8",length:11,byteSize:12,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:y}],methods:[],template:null},slot:13});Object.assign(Z,{...t,type:11,name:"*const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[],template:null},slot:12});Object.assign(v,{...t,type:11,name:"*const *const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:11});Object.assign(f,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:f}],methods:[],template:null},slot:32});Object.assign(i,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:i}],methods:[],template:null},slot:50});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:i}],methods:[],template:null},slot:49});Object.assign(ee,{...t,type:1,name:"[12:0]u8",length:12,byteSize:13,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:y}],methods:[],template:null},slot:53});Object.assign(te,{...t,type:11,name:"*const [12:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:52});Object.assign(x,{...t,type:11,name:"*const *const [12:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:51});const rt=new Uint8Array,at=new Uint8Array([24,251,15,0]),nt=new Uint8Array([0,0,0,0,0,0,240,63]),it=new Uint8Array([80,251,15,0]),ut=new Uint8Array([0,0,0,0,0,0,89,64]),ot=new Uint8Array([104,251,15,0]),lt=new Uint8Array([0,0,0,0,0,0,62,64]),mt=new Uint8Array([120,251,15,0]),ct=new Uint8Array([218,33,16,0]),yt=new Uint8Array([80,97,116,116,101,114,110,32,83,105,122,101,0]);Object.assign(se,{...t,type:2,name:"Struct0010",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:f},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:x}],methods:[],template:{memory:{array:rt},slots:{0:{structure:s,memory:{array:at},slots:{0:{structure:i,memory:{array:nt}}}},1:{structure:s,memory:{array:it},slots:{0:{structure:i,memory:{array:ut}}}},2:{structure:s,memory:{array:ot},slots:{0:{structure:i,memory:{array:lt}}}},3:{structure:x,memory:{array:mt},slots:{0:{structure:te,memory:{array:ct},slots:{0:{structure:ee,memory:{array:yt}}}}}}}}},slot:39});Object.assign(E,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:38});Object.assign(re,{...t,type:1,name:"[43:0]u8",length:43,byteSize:44,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:y}],methods:[],template:null},slot:56});Object.assign(ae,{...t,type:11,name:"*const [43:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:55});Object.assign(K,{...t,type:11,name:"*const *const [43:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:54});const bt=new Uint8Array,pt=new Uint8Array([24,251,15,0]),ft=new Uint8Array([0,0,0,0,0,0,0,0]),dt=new Uint8Array([80,251,15,0]),St=new Uint8Array([0,0,0,0,0,0,240,63]),ht=new Uint8Array([104,251,15,0]),gt=new Uint8Array([225,122,20,174,71,225,218,63]),zt=new Uint8Array([120,251,15,0]),Ot=new Uint8Array([174,33,16,0]),wt=new Uint8Array([82,97,100,105,117,115,58,32,104,111,119,32,109,117,99,104,32,97,32,100,105,115,107,115,32,102,105,108,108,115,32,117,112,32,105,116,115,32,115,112,97,99,101,0]);Object.assign(ne,{...t,type:2,name:"Struct0011",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:f},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:K}],methods:[],template:{memory:{array:bt},slots:{0:{structure:s,memory:{array:pt},slots:{0:{structure:i,memory:{array:ft}}}},1:{structure:s,memory:{array:dt},slots:{0:{structure:i,memory:{array:St}}}},2:{structure:s,memory:{array:ht},slots:{0:{structure:i,memory:{array:gt}}}},3:{structure:K,memory:{array:zt},slots:{0:{structure:ae,memory:{array:Ot},slots:{0:{structure:re,memory:{array:wt}}}}}}}}},slot:41});Object.assign(D,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:40});Object.assign(ie,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:f}],methods:[],template:null},slot:33});const At=new Uint8Array,Rt=new Uint8Array([136,251,15,0]),qt=new Uint8Array([0,0,0,0,0,0,105,192]),Ut=new Uint8Array([48,252,15,0]),jt=new Uint8Array([0,0,0,0,0,0,105,192]);Object.assign(ue,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:At},slots:{0:{structure:s,memory:{array:Rt},slots:{0:{structure:i,memory:{array:qt}}}},1:{structure:s,memory:{array:Ut},slots:{0:{structure:i,memory:{array:jt}}}}}}},slot:58});Object.assign(F,{...t,type:11,name:"Struct0014",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:57});const Pt=new Uint8Array,kt=new Uint8Array([136,251,15,0]),Vt=new Uint8Array([0,0,0,0,0,0,137,64]),Ct=new Uint8Array([48,252,15,0]),It=new Uint8Array([0,0,0,0,0,64,127,64]);Object.assign(oe,{...t,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Pt},slots:{0:{structure:s,memory:{array:kt},slots:{0:{structure:i,memory:{array:Vt}}}},1:{structure:s,memory:{array:Ct},slots:{0:{structure:i,memory:{array:It}}}}}}},slot:60});Object.assign(M,{...t,type:11,name:"Struct0015",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:59});const vt=new Uint8Array,xt=new Uint8Array([136,251,15,0]),Et=new Uint8Array([51,51,51,51,51,227,117,64]),Kt=new Uint8Array([48,252,15,0]),Dt=new Uint8Array([205,204,204,204,204,12,89,64]);Object.assign(le,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:vt},slots:{0:{structure:s,memory:{array:xt},slots:{0:{structure:i,memory:{array:Et}}}},1:{structure:s,memory:{array:Kt},slots:{0:{structure:i,memory:{array:Dt}}}}}}},slot:62});Object.assign(_,{...t,type:11,name:"Struct0016",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:61});Object.assign(me,{...t,type:1,name:"[10:0]u8",length:10,byteSize:11,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:y}],methods:[],template:null},slot:65});Object.assign(ce,{...t,type:11,name:"*const [10:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:64});Object.assign(T,{...t,type:11,name:"*const *const [10:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:63});const Ft=new Uint8Array,Mt=new Uint8Array([170,170,170,170]),_t=new Uint8Array,Tt=new Uint8Array([170,170,170,170]),$t=new Uint8Array,Bt=new Uint8Array([170,170,170,170]),Lt=new Uint8Array,Gt=new Uint8Array([68,251,15,0]),Ht=new Uint8Array([163,33,16,0]),Jt=new Uint8Array([66,97,115,101,32,80,111,105,110,116,0]);Object.assign(ye,{...t,type:2,name:"Struct0012",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:ie},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:F},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:M},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:_},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:T}],methods:[],template:{memory:{array:Ft},slots:{0:{structure:F,memory:{array:Mt},slots:{0:{structure:ue,memory:{array:_t}}}},1:{structure:M,memory:{array:Tt},slots:{0:{structure:oe,memory:{array:$t}}}},2:{structure:_,memory:{array:Bt},slots:{0:{structure:le,memory:{array:Lt}}}},3:{structure:T,memory:{array:Gt},slots:{0:{structure:ce,memory:{array:Ht},slots:{0:{structure:me,memory:{array:Jt}}}}}}}}},slot:43});Object.assign($,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:42});const Nt=new Uint8Array,Qt=new Uint8Array([170,170,170,170]),Wt=new Uint8Array,Xt=new Uint8Array([170,170,170,170]),Yt=new Uint8Array,Zt=new Uint8Array([170,170,170,170]),es=new Uint8Array;Object.assign(be,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"size",structure:E},{...e,type:8,isRequired:!1,slot:1,name:"radius",structure:D},{...e,type:8,isRequired:!1,slot:2,name:"base",structure:$}],methods:[],template:{memory:{array:Nt},slots:{0:{structure:E,memory:{array:Qt},slots:{0:{structure:se,memory:{array:Wt}}}},1:{structure:D,memory:{array:Xt},slots:{0:{structure:ne,memory:{array:Yt}}}},2:{structure:$,memory:{array:Zt},slots:{0:{structure:ye,memory:{array:es}}}}}}},slot:15});Object.assign(B,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:14});const ts=new Uint8Array,ss=new Uint8Array([48,252,15,0]),rs=new Uint8Array([4,0,0,0]);Object.assign(A,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:ts},slots:{0:{structure:p,memory:{array:ss},slots:{0:{structure:b,memory:{array:rs}}}}}}},slot:45});Object.assign(g,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:A}],methods:[],template:null},slot:44});const as=new Uint8Array,ns=new Uint8Array([170,170,170,170]),is=new Uint8Array;Object.assign(pe,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:g}],methods:[],template:{memory:{array:as},slots:{0:{structure:g,memory:{array:ns},slots:{0:{structure:A,memory:{array:is}}}}}}},slot:17});Object.assign(L,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:16});const us=new Uint8Array,os=new Uint8Array([170,170,170,170]),ls=new Uint8Array;Object.assign(fe,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:g}],methods:[],template:{memory:{array:us},slots:{0:{structure:g,memory:{array:os},slots:{0:{structure:A,memory:{array:ls}}}}}}},slot:19});Object.assign(G,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:18});const ms=new Uint8Array,cs=new Uint8Array,ys=new Uint8Array([192,37,16,0]),bs=new Uint8Array([110,37,16,0]),ps=new Uint8Array([67,105,114,99,117,108,97,114,68,105,115,107,115,0]),fs=new Uint8Array([188,37,16,0]),ds=new Uint8Array([84,37,16,0]),Ss=new Uint8Array([80,101,116,114,105,32,76,101,115,107,105,110,101,110,0]),hs=new Uint8Array([184,37,16,0]),gs=new Uint8Array([1,0,0,0]),zs=new Uint8Array([180,37,16,0]),Os=new Uint8Array([55,37,16,0]),ws=new Uint8Array([68,105,115,107,32,116,105,108,105,110,103,0]),As=new Uint8Array([170,170,170,170]),Rs=new Uint8Array,qs=new Uint8Array([170,170,170,170]),Us=new Uint8Array,js=new Uint8Array([170,170,170,170]),Ps=new Uint8Array;Object.assign(Re,{...t,type:2,name:"circular-disks.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:ms}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:C},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:I},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:p},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:v},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:B},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:L},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:G}],methods:[],template:{memory:{array:cs},slots:{0:{structure:C,memory:{array:ys},slots:{0:{structure:Q,memory:{array:bs},slots:{0:{structure:N,memory:{array:ps}}}}}},1:{structure:I,memory:{array:fs},slots:{0:{structure:X,memory:{array:ds},slots:{0:{structure:W,memory:{array:Ss}}}}}},2:{structure:p,memory:{array:hs},slots:{0:{structure:b,memory:{array:gs}}}},3:{structure:v,memory:{array:zs},slots:{0:{structure:Z,memory:{array:Os},slots:{0:{structure:Y,memory:{array:ws}}}}}},4:{structure:B,memory:{array:As},slots:{0:{structure:be,memory:{array:Rs}}}},5:{structure:L,memory:{array:qs},slots:{0:{structure:pe,memory:{array:Us}}}},6:{structure:G,memory:{array:js},slots:{0:{structure:fe,memory:{array:Ps}}}}}}},slot:1});Object.assign(z,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:y}],methods:[],template:null},slot:24});Object.assign(de,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:z}],methods:[],template:null},slot:23});Object.assign(Se,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:de}],methods:[],template:null},slot:22});Object.assign(m,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[],template:null},slot:25});const ks=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(he,{...t,type:9,name:"circular-disks.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:b},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:b}],methods:[],template:{memory:{array:ks}}},slot:26});Object.assign(w,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:w}],methods:[],template:null},slot:27});Object.assign(ge,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:f}],methods:[],template:null},slot:46});const Vs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Cs=new Uint8Array,Is=new Uint8Array([12,37,16,0]),vs=new Uint8Array([4,0,0,0]);Object.assign(H,{...t,type:2,name:"circular-disks.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Se},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:he},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:w}],methods:[],template:{memory:{array:Vs}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:z},{...e,type:7,isRequired:!1,name:"FPixel",structure:ge},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:Cs},slots:{0:{structure:p,memory:{array:Is},slots:{0:{structure:b,memory:{array:vs}}}}}}},slot:21});const xs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Es=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ee=new Uint8Array([0,0,0,0,0,0,0,0]),Ks=new Uint8Array;Object.assign(R,{...t,type:2,name:"circular-disks.KernelInput(u8,circular-disks.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:H}],methods:[],template:{memory:{array:xs},slots:{0:{structure:H,memory:{array:Es},slots:{0:{structure:Se,memory:{array:Ee},address:1047200,slots:{0:{structure:de,memory:{array:Ks},address:0}}}}}}}},slot:20});Object.assign(ze,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:z}],methods:[],template:null},slot:23});Object.assign(Oe,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:ze}],methods:[],template:null},slot:30});const Ds=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Fs=new Uint8Array,Ms=new Uint8Array([12,37,16,0]),_s=new Uint8Array([4,0,0,0]);Object.assign(J,{...t,type:2,name:"circular-disks.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Oe},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:he},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:w}],methods:[],template:{memory:{array:Ds}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:z},{...e,type:7,isRequired:!1,name:"FPixel",structure:ge},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:Fs},slots:{0:{structure:p,memory:{array:Ms},slots:{0:{structure:b,memory:{array:_s}}}}}}},slot:29});const Ts=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),$s=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Bs=new Uint8Array;Object.assign(q,{...t,type:2,name:"circular-disks.KernelOutput(u8,circular-disks.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:J}],methods:[],template:{memory:{array:Ts},slots:{0:{structure:J,memory:{array:$s},slots:{0:{structure:Oe,memory:{array:Ee},address:1047200,slots:{0:{structure:ze,memory:{array:Bs},address:0}}}}}}}},slot:28});const Ls=new Uint8Array([154,25,175,67,102,102,200,66,0,0,240,65,61,10,215,62]);Object.assign(U,{...t,type:2,name:"circular-disks.KernelParameters(circular-disks.kernel)",length:1,byteSize:16,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:64,bitSize:32,byteSize:4,slot:0,name:"size",structure:f},{...e,type:4,isRequired:!1,bitOffset:96,bitSize:32,byteSize:4,slot:1,name:"radius",structure:f},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,slot:2,name:"base",structure:ie}],methods:[],template:{memory:{array:Ls}}},slot:31});Object.assign(qe,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(circular-disks.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:47});Object.assign(Ue,{...t,type:7,name:"ErrorSet0000!circular-disks.KernelOutput(u8,circular-disks.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:q},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:qe}],methods:[],template:null},slot:36});Object.assign(je,{...t,type:3,name:"createOutput",length:1,byteSize:80,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:0,name:"0",structure:m},{...e,type:3,bitOffset:160,bitSize:32,byteSize:4,slot:1,name:"1",structure:m},{...e,type:6,bitOffset:192,bitSize:192,byteSize:24,slot:2,name:"2",structure:R},{...e,type:6,bitOffset:0,bitSize:128,byteSize:16,slot:3,name:"3",structure:U},{...e,type:6,bitOffset:384,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Ue}],methods:[],template:null},slot:34});Object.assign(Pe,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(circular-disks.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:48});Object.assign(ke,{...t,type:7,name:"ErrorSet0001!circular-disks.KernelOutput(u8,circular-disks.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:q},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Pe}],methods:[],template:null},slot:37});Object.assign(Ve,{...t,type:3,name:"createPartialOutput",length:1,byteSize:88,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:0,name:"0",structure:m},{...e,type:3,bitOffset:160,bitSize:32,byteSize:4,slot:1,name:"1",structure:m},{...e,type:3,bitOffset:192,bitSize:32,byteSize:4,slot:2,name:"2",structure:m},{...e,type:3,bitOffset:224,bitSize:32,byteSize:4,slot:3,name:"3",structure:m},{...e,type:6,bitOffset:256,bitSize:192,byteSize:24,slot:4,name:"4",structure:R},{...e,type:6,bitOffset:0,bitSize:128,byteSize:16,slot:5,name:"5",structure:U},{...e,type:6,bitOffset:448,bitSize:224,byteSize:28,slot:6,name:"retval",structure:ke}],methods:[],template:null},slot:35});const Gs=new Uint8Array,Hs={argStruct:je,thunk:6,name:"createOutput"},Js={argStruct:Ve,thunk:1,name:"createPartialOutput"};Object.assign(Ce,{...t,type:2,name:"circular-disks",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Gs}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:Re},{...e,type:7,isRequired:!1,name:"Input",structure:R},{...e,type:7,isRequired:!1,name:"Output",structure:q},{...e,type:7,isRequired:!1,name:"Parameters",structure:U}],methods:[Hs,Js],template:null},slot:0});const Ns=[y,N,Q,C,W,X,I,b,p,Y,Z,v,f,i,s,ee,te,x,se,E,re,ae,K,ne,D,ie,ue,F,oe,M,le,_,me,ce,T,ye,$,be,B,A,g,pe,L,fe,G,Re,z,de,Se,m,he,w,ge,H,R,ze,Oe,J,q,U,qe,Ue,je,Pe,ke,Ve,Ce],Qs=tt(Ns),Ws=Ce.constructor,Xs=(async()=>{const u=new URL("circular-disks-84671cd6.wasm",import.meta.url).href;return fetch(u)})();st(Xs,{...Qs,writeBack:!0});const{createOutput:nr,createPartialOutput:Ys,kernel:Ae,Input:Zs,Output:ir,Parameters:ur}=Ws;function er(u,l,a,r,n={},S={}){if(Array.isArray(n)){const d=n;n={};for(const[c,h]of Object.keys(Ae.inputImages).entries())n[h]=d[c]}const j=new Zs(void 0),P=Object.keys(Ae.inputImages),o=[];let O;for(const d of P){let c=n[d];if(c||(P.length===1&&["data","width","height"].every(h=>!!n[h])?c=n:o.push(d)),j[d]=c,O){if(c.colorSpace!==O)throw new Error(`Input images must all use the same color space: ${O}`)}else O=c.colorSpace}if(o.length>0)throw new Error(`Missing input image${o.length>1?"s":""}: ${o.join(", ")}`);const we=Ys(u,l,a,r,j,S),Ie=d=>{const c=Object.keys(d),h={};for(const ve of c){const{data:{typedArray:k},width:xe,height:De}=d[ve];let V;if(typeof ImageData=="function"){const Fe=new Uint8ClampedArray(k.buffer,k.byteOffset,k.byteLength);V=new ImageData(Fe,xe,r,{colorSpace:O})}else V={data:k,width:xe,height:De};if(c.length===1)return V;h[ve]=V}return h};return we[Symbol.toStringTag]==="Promise"?we.then(Ie):Ie(we)}function tr(){const u={};for(let[l,a]of Object.entries(Ae)){if(l==="parameters"){const r={};for(const[n,S]of Object.entries(a)){const j=r[n]={};for(let[P,o]of Object.entries(S))typeof o=="object"?"string"in o?o=o.string:o=Ke(o):typeof o=="function"&&(o=sr(o.name)),j[P]=o}a=r}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());u[l]=a}return u}function Ke(u){const l=[];for(let[a,r]of Object.entries(u))typeof r=="object"&&(r=Ke(r)),l[a]=r;return l}function sr(u){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[u]}onmessage=u=>{const[l,a,...r]=u.data;rr(l,r).then(([n,S])=>{postMessage([l,a,n],{transfer:S})}).catch(n=>{postMessage(["error",a,n])})};async function rr(u,l){switch(u){case"getKernelInfo":return[tr(...l)];case"createPartialImageData":const r=await er(...l),n=[];if("data"in r&&"width"in r&&"height"in r)n.push(r.data.buffer);else for(const S of Object.entries(r))n.push(r.data.buffer);return[r,n];default:throw new Error(`Unknown function: ${u}`)}}
