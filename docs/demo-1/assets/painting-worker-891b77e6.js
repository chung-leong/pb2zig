import{u as Ye,a as Ze,b as ts,c as es,d as ss,e as rs,f as ns,g as as,h as is,i as os,j as cs,k as us,l as ms,m as ys,n as bs,o as ls,p as gs,q as ps}from"./index-270629a1.js";Ye();us();ms();Ze();ts();ys();bs();ls();gs();es();ss();rs();ns();ps();as();is();os();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},O={},D={},M={},F={},T={},l={},S={},_={},$={},r={},f={},u={},L={},B={},G={},H={},A={},J={},N={},nt={},R={},Q={},k={},c={},p={},V={},at={},W={},q={},X={},I={},Y={},v={},E={},d={},it={},ot={},w={},ct={},ut={},mt={},Ct={},yt={},Z={},bt={},Dt={},lt={},Mt={},gt={},Ft={},Tt={},pt={},ft={},_t={},Ot={},$t={},St={},Lt={},Bt={},zt={},jt={},Gt={},ht={},Ht={},dt={},Jt={},Nt={},wt={},At={},Ut={},Qt={},tt={},Wt={},Xt={},Pt={},Yt={},Vt={},Zt={},te={},ee={},se={},re={},ne={},ae={},ie={},oe={},ce={},ue={},me={},ye={},be={},le={},ge={},pe={},Rt={},fe={},Oe={},kt={},Se={},qt={},ze={},je={},he={},de={},we={},Ae={},Ue={},It={},Pe={},Ve={},Re={},ke={},qe={},Ie={},ve={},Ee={},xe={},Ke={},Ce={},De={},Me={},Fe={},Te={},_e={},$e={},Le={},Be={},Ge={},He={},Je={},fs=new Uint8Array,Os=new Uint8Array,Ss=new Uint8Array([0,0,0,0,0,0,0,0]),zs=new Uint8Array,js=new Uint8Array([0,0,0,0,0,0,240,63]),hs=new Uint8Array,ds=new Uint8Array([0,0,0,0,0,0,0,0]),ws=new Uint8Array,As=new Uint8Array,Us=new Uint8Array([0,0,0,0,0,0,0,0]),Ps=new Uint8Array,Vs=new Uint8Array([0,0,0,0,0,0,248,63]),Rs=new Uint8Array,ks=new Uint8Array([51,51,51,51,51,51,227,63]),qs=new Uint8Array,Is=new Uint8Array,vs=new Uint8Array([0,0,0,0,0,0,224,191]),Es=new Uint8Array,xs=new Uint8Array([0,0,0,0,0,0,224,63]),Ks=new Uint8Array,Cs=new Uint8Array([41,92,143,194,245,40,188,63]),Ds=new Uint8Array,Ms=new Uint8Array,Fs=new Uint8Array,Ts=new Uint8Array,_s=new Uint8Array([4]),$s=new Uint8Array,Ls=new Uint8Array,Bs=new Uint8Array([248,4,0,1]),Gs=new Uint8Array([97,114,46,115,104,97,100,101,114,46,112,97,105,110,116,105,110,103,0]),Hs=new Uint8Array([22,5,0,1]),Js=new Uint8Array([65,108,97,110,32,82,111,115,115,0]),Ns=new Uint8Array,Qs=new Uint8Array([1]),Ws=new Uint8Array([49,5,0,1]),Xs=new Uint8Array([80,97,105,110,116,105,110,103,0]),Ys=new Uint8Array,Zs=new Uint8Array,tr=new Uint8Array,er=new Uint8Array([0]),sr=new Uint8Array([1]),Ne=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),rr=new Uint8Array,nr=new Uint8Array,ar=new Uint8Array,ir=new Uint8Array,or=new Uint8Array([4]),vt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Qe=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),cr=new Uint8Array,ur=new Uint8Array,mr=new Uint8Array,yr=new Uint8Array,br=new Uint8Array([4]),Et=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),lr=new Uint8Array([0,0,0,0,154,153,25,63,174,71,225,61]),gr=new Uint8Array([27,0]),pr=new Uint8Array([27,0]),fr=new Uint8Array,Or=new Uint8Array,Sr=new Uint8Array,zr=new Uint8Array;Object.assign(Ct,{slots:{0:yt,1:bt,2:lt,3:gt}});Object.assign(yt,{structure:s,memory:{array:fs},const:!0,slots:{0:Z}});Object.assign(Z,{structure:f});Object.assign(bt,{structure:r,memory:{array:Os},const:!0,slots:{0:Dt}});Object.assign(Dt,{structure:u,memory:{array:Ss},const:!0});Object.assign(lt,{structure:r,memory:{array:zs},const:!0,slots:{0:Mt}});Object.assign(Mt,{structure:u,memory:{array:js},const:!0});Object.assign(gt,{structure:r,memory:{array:hs},const:!0,slots:{0:Ft}});Object.assign(Ft,{structure:u,memory:{array:ds},const:!0});Object.assign(Tt,{slots:{0:pt,1:ft,2:Ot,3:St}});Object.assign(pt,{structure:s,memory:{array:ws},const:!0,slots:{0:Z}});Object.assign(ft,{structure:r,memory:{array:As},const:!0,slots:{0:_t}});Object.assign(_t,{structure:u,memory:{array:Us},const:!0});Object.assign(Ot,{structure:r,memory:{array:Ps},const:!0,slots:{0:$t}});Object.assign($t,{structure:u,memory:{array:Vs},const:!0});Object.assign(St,{structure:r,memory:{array:Rs},const:!0,slots:{0:Lt}});Object.assign(Lt,{structure:u,memory:{array:ks},const:!0});Object.assign(Bt,{slots:{0:zt,1:jt,2:ht,3:dt}});Object.assign(zt,{structure:s,memory:{array:qs},const:!0,slots:{0:Z}});Object.assign(jt,{structure:r,memory:{array:Is},const:!0,slots:{0:Gt}});Object.assign(Gt,{structure:u,memory:{array:vs},const:!0});Object.assign(ht,{structure:r,memory:{array:Es},const:!0,slots:{0:Ht}});Object.assign(Ht,{structure:u,memory:{array:xs},const:!0});Object.assign(dt,{structure:r,memory:{array:Ks},const:!0,slots:{0:Jt}});Object.assign(Jt,{structure:u,memory:{array:Cs},const:!0});Object.assign(Nt,{slots:{0:wt,1:At,2:Ut}});Object.assign(wt,{structure:L,memory:{array:Ds},const:!0,slots:{0:yt,1:bt,2:lt,3:gt}});Object.assign(At,{structure:B,memory:{array:Ms},const:!0,slots:{0:pt,1:ft,2:Ot,3:St}});Object.assign(Ut,{structure:G,memory:{array:Fs},const:!0,slots:{0:zt,1:jt,2:ht,3:dt}});Object.assign(Qt,{slots:{0:tt}});Object.assign(tt,{structure:l,memory:{array:Ts},const:!0,slots:{0:Wt}});Object.assign(Wt,{structure:S,memory:{array:_s},const:!0});Object.assign(Xt,{slots:{0:Pt}});Object.assign(Pt,{structure:A,memory:{array:$s},const:!0,slots:{0:tt}});Object.assign(Yt,{slots:{0:Vt}});Object.assign(Vt,{structure:A,memory:{array:Ls},const:!0,slots:{0:tt}});Object.assign(Zt,{slots:{0:te,1:se,2:ne,3:ie,4:ce,5:ue,6:me}});Object.assign(te,{structure:M,memory:{array:Bs},const:!0,slots:{0:ee}});Object.assign(ee,{structure:D,memory:{array:Gs},reloc:16778488});Object.assign(se,{structure:T,memory:{array:Hs},const:!0,slots:{0:re}});Object.assign(re,{structure:F,memory:{array:Js},reloc:16778518});Object.assign(ne,{structure:l,memory:{array:Ns},const:!0,slots:{0:ae}});Object.assign(ae,{structure:S,memory:{array:Qs},const:!0});Object.assign(ie,{structure:$,memory:{array:Ws},const:!0,slots:{0:oe}});Object.assign(oe,{structure:_,memory:{array:Xs},reloc:16778545});Object.assign(ce,{structure:H,memory:{array:Ys},const:!0,slots:{0:wt,1:At,2:Ut}});Object.assign(ue,{structure:J,memory:{array:Zs},const:!0,slots:{0:Pt}});Object.assign(me,{structure:N,memory:{array:tr},const:!0,slots:{0:Vt}});Object.assign(ye,{slots:{0:be,1:le}});Object.assign(be,{structure:p,memory:{array:er},const:!0});Object.assign(le,{structure:p,memory:{array:sr},const:!0});Object.assign(ge,{memory:{array:Ne},slots:{0:pe}});Object.assign(pe,{structure:k,memory:{array:Ne,offset:0,length:8},slots:{0:Rt}});Object.assign(Rt,{structure:Q,memory:{array:rr},reloc:0});Object.assign(fe,{slots:{0:Oe,1:Se,2:ze}});Object.assign(Oe,{structure:s,memory:{array:nr},const:!0,slots:{0:kt}});Object.assign(kt,{structure:R});Object.assign(Se,{structure:s,memory:{array:ar},const:!0,slots:{0:qt}});Object.assign(qt,{structure:at});Object.assign(ze,{structure:l,memory:{array:ir},const:!0,slots:{0:je}});Object.assign(je,{structure:S,memory:{array:or},const:!0});Object.assign(he,{memory:{array:vt},slots:{0:de}});Object.assign(de,{structure:W,memory:{array:vt},slots:{0:we}});Object.assign(we,{structure:k,memory:{array:vt,offset:0,length:8},slots:{0:Rt}});Object.assign(Ae,{memory:{array:Qe},slots:{0:Ue}});Object.assign(Ue,{structure:I,memory:{array:Qe,offset:0,length:8},slots:{0:It}});Object.assign(It,{structure:X,memory:{array:cr},reloc:0});Object.assign(Pe,{slots:{0:Ve,1:Re,2:ke}});Object.assign(Ve,{structure:s,memory:{array:ur},const:!0,slots:{0:kt}});Object.assign(Re,{structure:s,memory:{array:mr},const:!0,slots:{0:qt}});Object.assign(ke,{structure:l,memory:{array:yr},const:!0,slots:{0:qe}});Object.assign(qe,{structure:S,memory:{array:br},const:!0});Object.assign(Ie,{memory:{array:Et},slots:{0:ve}});Object.assign(ve,{structure:Y,memory:{array:Et},slots:{0:Ee}});Object.assign(Ee,{structure:I,memory:{array:Et,offset:0,length:8},slots:{0:It}});Object.assign(xe,{memory:{array:lr}});Object.assign(Ke,{slots:{0:Ce}});Object.assign(Ce,{structure:d,memory:{array:gr},const:!0});Object.assign(De,{slots:{0:Me}});Object.assign(Me,{structure:w,memory:{array:pr},const:!0});Object.assign(Fe,{slots:{0:Te,1:$e,2:Be,3:He}});Object.assign(Te,{structure:s,memory:{array:fr},const:!0,slots:{0:_e}});Object.assign(_e,{structure:nt});Object.assign($e,{structure:s,memory:{array:Or},const:!0,slots:{0:Le}});Object.assign(Le,{structure:q});Object.assign(Be,{structure:s,memory:{array:Sr},const:!0,slots:{0:Ge}});Object.assign(Ge,{structure:v});Object.assign(He,{structure:s,memory:{array:zr},const:!0,slots:{0:Je}});Object.assign(Je,{structure:E});const jr={argStruct:ot,thunkId:2,name:"createOutput"},hr={argStruct:ut,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(O,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(D,{...e,type:1,name:"[18:0]u8",length:18,byteSize:19,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(M,{...e,type:13,name:"*const [18:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:D}],methods:[]}});Object.assign(F,{...e,type:1,name:"[9:0]u8",length:9,byteSize:10,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(T,{...e,type:13,name:"*const [9:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(l,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:l}],methods:[]}});Object.assign(S,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(_,{...e,type:1,name:"[8:0]u8",length:8,byteSize:9,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign($,{...e,type:13,name:"*const [8:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[]}});Object.assign(r,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(f,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:f}],methods:[]}});Object.assign(u,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:u}],methods:[]}});Object.assign(L,{...e,type:2,name:"Struct2890073165",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:r},{...t,type:7,slot:2,name:"maxValue",structure:r},{...t,type:7,slot:3,name:"defaultValue",structure:r}],methods:[],template:Ct}});Object.assign(B,{...e,type:2,name:"Struct4206764882",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:r},{...t,type:7,slot:2,name:"maxValue",structure:r},{...t,type:7,slot:3,name:"defaultValue",structure:r}],methods:[],template:Tt}});Object.assign(G,{...e,type:2,name:"Struct2479264263",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:r},{...t,type:7,slot:2,name:"maxValue",structure:r},{...t,type:7,slot:3,name:"defaultValue",structure:r}],methods:[],template:Bt}});Object.assign(H,{...e,type:2,name:"Struct1979784021",align:1,instance:{members:[{...t,type:7,slot:0,name:"n0",structure:L},{...t,type:7,slot:1,name:"n1",structure:B},{...t,type:7,slot:2,name:"n2",structure:G}],methods:[],template:Nt}});Object.assign(A,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:l}],methods:[],template:Qt}});Object.assign(J,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:7,slot:0,name:"src",structure:A}],methods:[],template:Xt}});Object.assign(N,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:A}],methods:[],template:Yt}});Object.assign(nt,{...e,type:2,name:"painting.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:M},{...t,type:7,slot:1,name:"vendor",structure:T},{...t,type:7,slot:2,name:"version",structure:l},{...t,type:7,slot:3,name:"description",structure:$},{...t,type:7,slot:4,name:"parameters",structure:H},{...t,type:7,slot:5,name:"inputImages",structure:J},{...t,type:7,slot:6,name:"outputImages",structure:N}],methods:[],template:Zt}});Object.assign(R,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(Q,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(k,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:Q}],methods:[]}});Object.assign(c,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[]}});Object.assign(p,{...e,type:11,name:"painting.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:p}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:p},{...t,type:7,slot:1,name:"display-p3",structure:p}],methods:[],template:ye}});Object.assign(V,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(at,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:f}],methods:[]}});Object.assign(W,{...e,type:2,name:"painting.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:k},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:ge},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:l}],methods:[],template:fe}});Object.assign(q,{...e,type:2,name:"painting.KernelInput(u8,painting.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:W}],methods:[],template:he}});Object.assign(X,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(I,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:X}],methods:[]}});Object.assign(Y,{...e,type:2,name:"painting.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:I},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:Ae},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:l}],methods:[],template:Pe}});Object.assign(v,{...e,type:2,name:"painting.KernelOutput(u8,painting.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:Y}],methods:[],template:Ie}});Object.assign(E,{...e,type:2,name:"painting.KernelParameters(painting.kernel)",byteSize:12,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"n0",structure:f},{...t,type:4,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"n1",structure:f},{...t,type:4,bitOffset:64,bitSize:32,byteSize:4,slot:2,name:"n2",structure:f}],methods:[],template:xe}});Object.assign(d,{...e,type:10,name:"ErrorSet2556392059",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:d}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:d}],methods:[],template:Ke}});Object.assign(it,{...e,type:9,name:"ErrorSet2556392059!painting.KernelOutput(u8,painting.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:d}],methods:[]}});Object.assign(ot,{...e,type:5,name:"createOutput",byteSize:72,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:c},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:c},{...t,type:5,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:q},{...t,type:5,isRequired:!0,bitOffset:256,bitSize:96,byteSize:12,slot:1,name:"3",structure:E},{...t,type:5,isRequired:!0,bitOffset:352,bitSize:224,byteSize:28,slot:2,name:"retval",structure:it}],methods:[]}});Object.assign(w,{...e,type:10,name:"ErrorSet1477741487",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:w}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:w}],methods:[],template:De}});Object.assign(ct,{...e,type:9,name:"ErrorSet1477741487!painting.KernelOutput(u8,painting.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:w}],methods:[]}});Object.assign(ut,{...e,type:5,name:"createPartialOutput",byteSize:80,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:c},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:c},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:c},{...t,type:5,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:q},{...t,type:5,isRequired:!0,bitOffset:320,bitSize:96,byteSize:12,slot:1,name:"5",structure:E},{...t,type:5,isRequired:!0,bitOffset:416,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ct}],methods:[]}});Object.assign(mt,{...e,type:2,name:"painting",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:s},{...t,type:7,slot:1,name:"Input",structure:s},{...t,type:7,slot:2,name:"Output",structure:s},{...t,type:7,slot:3,name:"Parameters",structure:s}],methods:[jr,hr],template:Fe}});const dr=[s,O,D,M,F,T,l,S,_,$,r,f,u,L,B,G,H,A,J,N,nt,R,Q,k,c,p,V,at,W,q,X,I,Y,v,E,d,it,ot,w,ct,ut,mt],wr=mt,Ar={runtimeSafety:!1,littleEndian:!0},et=cs();et.getSpecialExports();et.recreateStructures(dr,Ar);const Ur=(async()=>{const i=new URL("painting-dba0674c.wasm",import.meta.url).href;return fetch(i)})();et.loadModule(Ur);et.linkVariables(!0);const{constructor:Pr}=wr,{createPartialOutput:Vr,Input:Rr,kernel:rt}=Pr;function kr(i,m,o,a,n={},z={}){const j=[];for(const[b]of rt.inputImages)j.push(b);const U=[];for(const[b]of rt.outputImages)U.push(b);if(Array.isArray(n)){const b=n;n={};for(const[g,h]of j.entries())n[h]=b[g]}const y=new Rr(void 0),x=[];let P;for(const b of j){let g=n[b];if(g||(j.length===1&&["data","width","height"].every(h=>!!n[h])?g=n:x.push(b)),y[b]=g,P){if(g.colorSpace!==P)throw new Error(`Input images must all use the same color space: ${P}`)}else P=g.colorSpace}if(x.length>0)throw new Error(`Missing input image${x.length>1?"s":""}: ${x.join(", ")}`);const st=Vr(i,m,o,a,y,z),xt=b=>{const g={};for(const h of U){const{data:{typedArray:K},width:Kt,height:We}=b[h];let C;if(typeof ImageData=="function"){const Xe=new Uint8ClampedArray(K.buffer,K.byteOffset,K.byteLength);C=new ImageData(Xe,Kt,a,{colorSpace:P})}else C={data:K,width:Kt,height:We};if(U.length===1)return C;g[h]=C}return g};return st[Symbol.toStringTag]==="Promise"?st.then(xt):xt(st)}function qr(){const i={};for(let[m,o]of rt){if(m==="parameters"){const a={};for(const[n,z]of o){const j=a[n]={};for(let[U,y]of z)typeof y=="object"?y=y.string??y.valueOf():typeof y=="function"&&(y=Ir(y.name)),j[U]=y}o=a}else typeof o=="object"&&(o=o.string??o.valueOf());i[m]=o}return i}function Ir(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[m,o,...a]=i.data;vr(m,a).then(([n,z])=>{postMessage([m,o,n],{transfer:z})}).catch(n=>{postMessage(["error",o,n])})};async function vr(i,m){switch(i){case"getKernelInfo":return[qr(...m)];case"createPartialImageData":const a=await kr(...m),n=[];if("data"in a&&"width"in a&&"height"in a)n.push(a.data.buffer);else for(const z of Object.entries(a))n.push(a.data.buffer);return[a,n];default:throw new Error(`Unknown function: ${i}`)}}
