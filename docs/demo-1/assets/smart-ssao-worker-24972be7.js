import{u as er,a as sr,b as rr,c as ar,d as nr,e as or,f as ir,g as cr,h as ur,i as mr,j as yr,k as br,l as lr,m as gr,n as pr,p as Or,o as fr,q as jr,r as Sr,s as zr}from"./index-25a52593.js";er();yr();br();sr();rr();lr();gr();pr();Or();ar();nr();or();ir();fr();zr();cr();jr();ur();mr();const s={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},r={},f={},K={},F={},M={},T={},g={},j={},$={},B={},e={},b={},a={},G={},L={},H={},J={},N={},Q={},W={},X={},Y={},Z={},tt={},et={},w={},st={},rt={},bt={},I={},at={},_={},y={},O={},V={},lt={},nt={},R={},ot={},k={},it={},q={},x={},P={},gt={},pt={},D={},Ot={},ft={},jt={},fe={},St={},S={},zt={},je={},ht={},Se={},dt={},ze={},he={},wt={},At={},de={},Ut={},we={},Vt={},Ae={},Ue={},Pt={},It={},Ve={},_t={},Pe={},Rt={},Ie={},_e={},kt={},Re={},qt={},ke={},qe={},xt={},xe={},Et={},Ee={},ve={},vt={},Ce={},Ct={},De={},Ke={},Dt={},Fe={},Kt={},Ft={},Mt={},Me={},Tt={},$t={},Te={},Bt={},$e={},Gt={},Be={},Ge={},Lt={},Ht={},Le={},Jt={},He={},Nt={},Je={},Ne={},Qt={},Wt={},Qe={},Xt={},We={},Yt={},Xe={},Ye={},Zt={},te={},ee={},se={},re={},ae={},ne={},Ze={},ct={},ts={},es={},oe={},ss={},ie={},rs={},as={},ns={},os={},is={},cs={},us={},ms={},ys={},bs={},ls={},gs={},ps={},Os={},fs={},js={},Ss={},ce={},zs={},hs={},ue={},ds={},me={},ws={},As={},Us={},Vs={},Ps={},Is={},_s={},ye={},Rs={},ks={},qs={},xs={},Es={},vs={},Cs={},Ds={},Ks={},Fs={},be={},Ms={},Ts={},$s={},Bs={},Gs={},Ls={},Hs={},Js={},Ns={},Qs={},hr=new Uint8Array,dr=new Uint8Array,wr=new Uint8Array([0,0,0,0,0,0,0,0]),Ar=new Uint8Array,Ur=new Uint8Array([0,0,0,0,0,0,89,64]),Vr=new Uint8Array,Pr=new Uint8Array([0,0,0,0,0,0,36,64]),Ir=new Uint8Array,_r=new Uint8Array,Rr=new Uint8Array([0,0,0,0,0,0,0,0]),kr=new Uint8Array,qr=new Uint8Array([0,0,0,0,0,0,36,64]),xr=new Uint8Array,Er=new Uint8Array([0,0,0,0,0,0,240,63]),vr=new Uint8Array,Cr=new Uint8Array,Dr=new Uint8Array([123,20,174,71,225,122,132,63]),Kr=new Uint8Array,Fr=new Uint8Array([0,0,0,0,0,0,8,64]),Mr=new Uint8Array,Tr=new Uint8Array([0,0,0,0,0,0,0,64]),$r=new Uint8Array,Br=new Uint8Array([0,0,0,0,0,0,240,191]),Gr=new Uint8Array,Lr=new Uint8Array([0,0,0,0,0,0,240,191]),Hr=new Uint8Array,Jr=new Uint8Array([0,0,0,0,0,0,240,63]),Nr=new Uint8Array,Qr=new Uint8Array([0,0,0,0,0,0,240,63]),Wr=new Uint8Array,Xr=new Uint8Array([0,0,0,0,0,0,0,0]),Yr=new Uint8Array,Zr=new Uint8Array([0,0,0,0,0,0,0,0]),ta=new Uint8Array,ea=new Uint8Array,sa=new Uint8Array,ra=new Uint8Array,aa=new Uint8Array,na=new Uint8Array,oa=new Uint8Array([154,153,153,153,153,153,185,191]),ia=new Uint8Array,ca=new Uint8Array([154,153,153,153,153,153,185,63]),ua=new Uint8Array,ma=new Uint8Array([123,20,174,71,225,122,148,63]),ya=new Uint8Array,ba=new Uint8Array,la=new Uint8Array([0,0,0,0,0,0,0,0]),ga=new Uint8Array,pa=new Uint8Array([0,0,0,0,0,0,0,64]),Oa=new Uint8Array,fa=new Uint8Array([0,0,0,0,0,0,240,63]),ja=new Uint8Array,Sa=new Uint8Array,za=new Uint8Array([0,0,0,0,0,0,0,0]),ha=new Uint8Array,da=new Uint8Array([0,0,0,0,0,0,20,64]),wa=new Uint8Array,Aa=new Uint8Array([0,0,0,0,0,0,240,63]),Ua=new Uint8Array,Va=new Uint8Array,Pa=new Uint8Array,Ia=new Uint8Array,_a=new Uint8Array,Ra=new Uint8Array,ka=new Uint8Array,qa=new Uint8Array,xa=new Uint8Array([4]),Ea=new Uint8Array,va=new Uint8Array,Ca=new Uint8Array([20,16,0,1]),Da=new Uint8Array([99,111,109,46,115,109,97,114,116,45,112,97,103,101,45,110,101,116,46,115,104,97,100,101,114,115,0]),Ka=new Uint8Array([58,16,0,1]),Fa=new Uint8Array([115,109,97,114,116,45,112,97,103,101,46,110,101,116,32,45,32,74,97,110,32,70,114,105,115,99,104,109,117,116,104,0]),Ma=new Uint8Array,Ta=new Uint8Array([2]),$a=new Uint8Array([107,16,0,1]),Ba=new Uint8Array([67,111,109,112,117,116,101,115,32,115,99,114,101,101,110,32,115,112,97,99,101,32,97,109,98,105,101,110,32,111,99,99,108,117,115,105,111,110,32,102,114,111,109,32,97,32,100,101,112,116,104,32,98,117,102,102,101,114,0]),Ga=new Uint8Array,La=new Uint8Array,Ha=new Uint8Array,Ja=new Uint8Array([0]),Na=new Uint8Array([1]),Ws=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Qa=new Uint8Array,Wa=new Uint8Array,Xa=new Uint8Array,Ya=new Uint8Array,Za=new Uint8Array([4]),le=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Xs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),tn=new Uint8Array,en=new Uint8Array,sn=new Uint8Array,rn=new Uint8Array,an=new Uint8Array([4]),ge=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),nn=new Uint8Array([0,0,0,0,0,0,0,0,0,0,32,65,0,0,128,63,0,0,0,64,10,215,163,60,0,0,128,63,0,0,128,63]),on=new Uint8Array([27,0]),cn=new Uint8Array,un=new Uint8Array,mn=new Uint8Array,yn=new Uint8Array;Object.assign(fe,{slots:{0:St,1:zt,2:ht,3:dt}});Object.assign(St,{structure:r,memory:{array:hr},slots:{0:S}});Object.assign(S,{structure:b});Object.assign(zt,{structure:e,memory:{array:dr},slots:{0:je}});Object.assign(je,{structure:a,memory:{array:wr}});Object.assign(ht,{structure:e,memory:{array:Ar},slots:{0:Se}});Object.assign(Se,{structure:a,memory:{array:Ur}});Object.assign(dt,{structure:e,memory:{array:Vr},slots:{0:ze}});Object.assign(ze,{structure:a,memory:{array:Pr}});Object.assign(he,{slots:{0:wt,1:At,2:Ut,3:Vt}});Object.assign(wt,{structure:r,memory:{array:Ir},slots:{0:S}});Object.assign(At,{structure:e,memory:{array:_r},slots:{0:de}});Object.assign(de,{structure:a,memory:{array:Rr}});Object.assign(Ut,{structure:e,memory:{array:kr},slots:{0:we}});Object.assign(we,{structure:a,memory:{array:qr}});Object.assign(Vt,{structure:e,memory:{array:xr},slots:{0:Ae}});Object.assign(Ae,{structure:a,memory:{array:Er}});Object.assign(Ue,{slots:{0:Pt,1:It,2:_t,3:Rt}});Object.assign(Pt,{structure:r,memory:{array:vr},slots:{0:S}});Object.assign(It,{structure:e,memory:{array:Cr},slots:{0:Ve}});Object.assign(Ve,{structure:a,memory:{array:Dr}});Object.assign(_t,{structure:e,memory:{array:Kr},slots:{0:Pe}});Object.assign(Pe,{structure:a,memory:{array:Fr}});Object.assign(Rt,{structure:e,memory:{array:Mr},slots:{0:Ie}});Object.assign(Ie,{structure:a,memory:{array:Tr}});Object.assign(_e,{slots:{0:kt,1:qt}});Object.assign(kt,{structure:e,memory:{array:$r},slots:{0:Re}});Object.assign(Re,{structure:a,memory:{array:Br}});Object.assign(qt,{structure:e,memory:{array:Gr},slots:{0:ke}});Object.assign(ke,{structure:a,memory:{array:Lr}});Object.assign(qe,{slots:{0:xt,1:Et}});Object.assign(xt,{structure:e,memory:{array:Hr},slots:{0:xe}});Object.assign(xe,{structure:a,memory:{array:Jr}});Object.assign(Et,{structure:e,memory:{array:Nr},slots:{0:Ee}});Object.assign(Ee,{structure:a,memory:{array:Qr}});Object.assign(ve,{slots:{0:vt,1:Ct}});Object.assign(vt,{structure:e,memory:{array:Wr},slots:{0:Ce}});Object.assign(Ce,{structure:a,memory:{array:Xr}});Object.assign(Ct,{structure:e,memory:{array:Yr},slots:{0:De}});Object.assign(De,{structure:a,memory:{array:Zr}});Object.assign(Ke,{slots:{0:Dt,1:Kt,2:Ft,3:Mt}});Object.assign(Dt,{structure:r,memory:{array:ta},slots:{0:Fe}});Object.assign(Fe,{structure:W});Object.assign(Kt,{structure:J,memory:{array:ea},slots:{0:kt,1:qt}});Object.assign(Ft,{structure:N,memory:{array:sa},slots:{0:xt,1:Et}});Object.assign(Mt,{structure:Q,memory:{array:ra},slots:{0:vt,1:Ct}});Object.assign(Me,{slots:{0:Tt,1:$t,2:Bt,3:Gt}});Object.assign(Tt,{structure:r,memory:{array:aa},slots:{0:S}});Object.assign($t,{structure:e,memory:{array:na},slots:{0:Te}});Object.assign(Te,{structure:a,memory:{array:oa}});Object.assign(Bt,{structure:e,memory:{array:ia},slots:{0:$e}});Object.assign($e,{structure:a,memory:{array:ca}});Object.assign(Gt,{structure:e,memory:{array:ua},slots:{0:Be}});Object.assign(Be,{structure:a,memory:{array:ma}});Object.assign(Ge,{slots:{0:Lt,1:Ht,2:Jt,3:Nt}});Object.assign(Lt,{structure:r,memory:{array:ya},slots:{0:S}});Object.assign(Ht,{structure:e,memory:{array:ba},slots:{0:Le}});Object.assign(Le,{structure:a,memory:{array:la}});Object.assign(Jt,{structure:e,memory:{array:ga},slots:{0:He}});Object.assign(He,{structure:a,memory:{array:pa}});Object.assign(Nt,{structure:e,memory:{array:Oa},slots:{0:Je}});Object.assign(Je,{structure:a,memory:{array:fa}});Object.assign(Ne,{slots:{0:Qt,1:Wt,2:Xt,3:Yt}});Object.assign(Qt,{structure:r,memory:{array:ja},slots:{0:S}});Object.assign(Wt,{structure:e,memory:{array:Sa},slots:{0:Qe}});Object.assign(Qe,{structure:a,memory:{array:za}});Object.assign(Xt,{structure:e,memory:{array:ha},slots:{0:We}});Object.assign(We,{structure:a,memory:{array:da}});Object.assign(Yt,{structure:e,memory:{array:wa},slots:{0:Xe}});Object.assign(Xe,{structure:a,memory:{array:Aa}});Object.assign(Ye,{slots:{0:Zt,1:te,2:ee,3:se,4:re,5:ae,6:ne}});Object.assign(Zt,{structure:G,memory:{array:Ua},slots:{0:St,1:zt,2:ht,3:dt}});Object.assign(te,{structure:L,memory:{array:Va},slots:{0:wt,1:At,2:Ut,3:Vt}});Object.assign(ee,{structure:H,memory:{array:Pa},slots:{0:Pt,1:It,2:_t,3:Rt}});Object.assign(se,{structure:X,memory:{array:Ia},slots:{0:Dt,1:Kt,2:Ft,3:Mt}});Object.assign(re,{structure:Y,memory:{array:_a},slots:{0:Tt,1:$t,2:Bt,3:Gt}});Object.assign(ae,{structure:Z,memory:{array:Ra},slots:{0:Lt,1:Ht,2:Jt,3:Nt}});Object.assign(ne,{structure:tt,memory:{array:ka},slots:{0:Qt,1:Wt,2:Xt,3:Yt}});Object.assign(Ze,{slots:{0:ct}});Object.assign(ct,{structure:g,memory:{array:qa},slots:{0:ts}});Object.assign(ts,{structure:j,memory:{array:xa}});Object.assign(es,{slots:{0:oe}});Object.assign(oe,{structure:w,memory:{array:Ea},slots:{0:ct}});Object.assign(ss,{slots:{0:ie}});Object.assign(ie,{structure:w,memory:{array:va},slots:{0:ct}});Object.assign(rs,{slots:{0:as,1:os,2:cs,3:ms,4:bs,5:ls,6:gs}});Object.assign(as,{structure:F,memory:{array:Ca},slots:{0:ns}});Object.assign(ns,{structure:K,memory:{array:Da},reloc:16781332,const:!0});Object.assign(os,{structure:T,memory:{array:Ka},slots:{0:is}});Object.assign(is,{structure:M,memory:{array:Fa},reloc:16781370,const:!0});Object.assign(cs,{structure:g,memory:{array:Ma},slots:{0:us}});Object.assign(us,{structure:j,memory:{array:Ta}});Object.assign(ms,{structure:B,memory:{array:$a},slots:{0:ys}});Object.assign(ys,{structure:$,memory:{array:Ba},reloc:16781419,const:!0});Object.assign(bs,{structure:et,memory:{array:Ga},slots:{0:Zt,1:te,2:ee,3:se,4:re,5:ae,6:ne}});Object.assign(ls,{structure:st,memory:{array:La},slots:{0:oe}});Object.assign(gs,{structure:rt,memory:{array:Ha},slots:{0:ie}});Object.assign(ps,{slots:{0:Os,1:fs}});Object.assign(Os,{structure:O,memory:{array:Ja}});Object.assign(fs,{structure:O,memory:{array:Na}});Object.assign(js,{memory:{array:Ws},slots:{0:Ss}});Object.assign(Ss,{structure:_,memory:{array:Ws,offset:0,length:8},slots:{0:ce}});Object.assign(ce,{structure:at,memory:{array:Qa},reloc:0,const:!0});Object.assign(zs,{slots:{0:hs,1:ds,2:ws}});Object.assign(hs,{structure:r,memory:{array:Wa},slots:{0:ue}});Object.assign(ue,{structure:I});Object.assign(ds,{structure:r,memory:{array:Xa},slots:{0:me}});Object.assign(me,{structure:lt});Object.assign(ws,{structure:g,memory:{array:Ya},slots:{0:As}});Object.assign(As,{structure:j,memory:{array:Za}});Object.assign(Us,{memory:{array:le},slots:{0:Vs}});Object.assign(Vs,{structure:nt,memory:{array:le},slots:{0:Ps}});Object.assign(Ps,{structure:_,memory:{array:le,offset:0,length:8},slots:{0:ce}});Object.assign(Is,{memory:{array:Xs},slots:{0:_s}});Object.assign(_s,{structure:k,memory:{array:Xs,offset:0,length:8},slots:{0:ye}});Object.assign(ye,{structure:ot,memory:{array:tn},reloc:0});Object.assign(Rs,{slots:{0:ks,1:qs,2:xs}});Object.assign(ks,{structure:r,memory:{array:en},slots:{0:ue}});Object.assign(qs,{structure:r,memory:{array:sn},slots:{0:me}});Object.assign(xs,{structure:g,memory:{array:rn},slots:{0:Es}});Object.assign(Es,{structure:j,memory:{array:an}});Object.assign(vs,{memory:{array:ge},slots:{0:Cs}});Object.assign(Cs,{structure:it,memory:{array:ge},slots:{0:Ds}});Object.assign(Ds,{structure:k,memory:{array:ge,offset:0,length:8},slots:{0:ye}});Object.assign(Ks,{memory:{array:nn}});Object.assign(Fs,{slots:{0:be}});Object.assign(be,{structure:P,memory:{array:on}});Object.assign(Ms,{slots:{0:be}});Object.assign(Ts,{slots:{0:$s,1:Gs,2:Hs,3:Ns}});Object.assign($s,{structure:r,memory:{array:cn},slots:{0:Bs}});Object.assign(Bs,{structure:bt});Object.assign(Gs,{structure:r,memory:{array:un},slots:{0:Ls}});Object.assign(Ls,{structure:R});Object.assign(Hs,{structure:r,memory:{array:mn},slots:{0:Js}});Object.assign(Js,{structure:q});Object.assign(Ns,{structure:r,memory:{array:yn},slots:{0:Qs}});Object.assign(Qs,{structure:x});const bn={argStruct:pt,thunkId:2,name:"createOutput"},ln={argStruct:ft,thunkId:3,name:"createPartialOutput"};Object.assign(r,{...s,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(f,{...s,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(K,{...s,type:1,name:"[26:0]u8",length:26,byteSize:27,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(F,{...s,type:13,name:"*const [26:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:K}],methods:[]}});Object.assign(M,{...s,type:1,name:"[31:0]u8",length:31,byteSize:32,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(T,{...s,type:13,name:"*const [31:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(g,{...s,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:g}],methods:[]}});Object.assign(j,{...s,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:j}],methods:[]}});Object.assign($,{...s,type:1,name:"[58:0]u8",length:58,byteSize:59,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(B,{...s,type:13,name:"*const [58:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[]}});Object.assign(e,{...s,name:"comptime_float",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:e}],methods:[]}});Object.assign(b,{...s,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[]}});Object.assign(a,{...s,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:a}],methods:[]}});Object.assign(G,{...s,type:2,name:"Struct2233039273",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:e},{...t,type:9,slot:2,name:"maxValue",structure:e},{...t,type:9,slot:3,name:"defaultValue",structure:e}],methods:[],template:fe}});Object.assign(L,{...s,type:2,name:"Struct2255363975",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:e},{...t,type:9,slot:2,name:"maxValue",structure:e},{...t,type:9,slot:3,name:"defaultValue",structure:e}],methods:[],template:he}});Object.assign(H,{...s,type:2,name:"Struct577136626",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:e},{...t,type:9,slot:2,name:"maxValue",structure:e},{...t,type:9,slot:3,name:"defaultValue",structure:e}],methods:[],template:Ue}});Object.assign(J,{...s,type:2,name:"Struct2009719738",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:_e}});Object.assign(N,{...s,type:2,name:"Struct2999377579",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:qe}});Object.assign(Q,{...s,type:2,name:"Struct738220547",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:ve}});Object.assign(W,{...s,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:b}],methods:[]}});Object.assign(X,{...s,type:2,name:"Struct2945272992",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:J},{...t,type:9,slot:2,name:"maxValue",structure:N},{...t,type:9,slot:3,name:"defaultValue",structure:Q}],methods:[],template:Ke}});Object.assign(Y,{...s,type:2,name:"Struct3830822449",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:e},{...t,type:9,slot:2,name:"maxValue",structure:e},{...t,type:9,slot:3,name:"defaultValue",structure:e}],methods:[],template:Me}});Object.assign(Z,{...s,type:2,name:"Struct530191728",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:e},{...t,type:9,slot:2,name:"maxValue",structure:e},{...t,type:9,slot:3,name:"defaultValue",structure:e}],methods:[],template:Ge}});Object.assign(tt,{...s,type:2,name:"Struct4017537585",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:e},{...t,type:9,slot:2,name:"maxValue",structure:e},{...t,type:9,slot:3,name:"defaultValue",structure:e}],methods:[],template:Ne}});Object.assign(et,{...s,type:2,name:"Struct2916757478",align:1,instance:{members:[{...t,type:9,slot:0,name:"A_bias",structure:G},{...t,type:9,slot:1,name:"B_radius",structure:L},{...t,type:9,slot:2,name:"C_bleed",structure:H},{...t,type:9,slot:3,name:"D_lightxy",structure:X},{...t,type:9,slot:4,name:"E_noise",structure:Y},{...t,type:9,slot:5,name:"F_brightness",structure:Z},{...t,type:9,slot:6,name:"G_contrast",structure:tt}],methods:[],template:Ye}});Object.assign(w,{...s,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:g}],methods:[],template:Ze}});Object.assign(st,{...s,type:2,name:"Struct2563932758",align:1,instance:{members:[{...t,type:9,slot:0,name:"depthmap",structure:w}],methods:[],template:es}});Object.assign(rt,{...s,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:9,slot:0,name:"dst",structure:w}],methods:[],template:ss}});Object.assign(bt,{...s,type:2,name:"smart-ssao.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:F},{...t,type:9,slot:1,name:"vendor",structure:T},{...t,type:9,slot:2,name:"version",structure:g},{...t,type:9,slot:3,name:"description",structure:B},{...t,type:9,slot:4,name:"parameters",structure:et},{...t,type:9,slot:5,name:"inputImages",structure:st},{...t,type:9,slot:6,name:"outputImages",structure:rt}],methods:[],template:rs}});Object.assign(I,{...s,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(at,{...s,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(_,{...s,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:at}],methods:[]}});Object.assign(y,{...s,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[]}});Object.assign(O,{...s,type:11,name:"smart-ssao.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:O},{...t,type:9,slot:1,name:"display-p3",structure:O}],methods:[],template:ps}});Object.assign(V,{...s,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(lt,{...s,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:b}],methods:[]}});Object.assign(nt,{...s,type:2,name:"smart-ssao.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:_},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:js},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:r},{...t,type:9,slot:1,name:"FPixel",structure:r},{...t,type:9,slot:2,name:"channels",structure:g}],methods:[],template:zs}});Object.assign(R,{...s,type:2,name:"smart-ssao.KernelInput(u8,smart-ssao.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"depthmap",structure:nt}],methods:[],template:Us}});Object.assign(ot,{...s,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(k,{...s,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:ot}],methods:[]}});Object.assign(it,{...s,type:2,name:"smart-ssao.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:k},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:Is},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:r},{...t,type:9,slot:1,name:"FPixel",structure:r},{...t,type:9,slot:2,name:"channels",structure:g}],methods:[],template:Rs}});Object.assign(q,{...s,type:2,name:"smart-ssao.KernelOutput(u8,smart-ssao.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:it}],methods:[],template:vs}});Object.assign(x,{...s,type:2,name:"smart-ssao.KernelParameters(smart-ssao.kernel)",byteSize:32,align:8,instance:{members:[{...t,type:4,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"A_bias",structure:b},{...t,type:4,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"B_radius",structure:b},{...t,type:4,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"C_bleed",structure:b},{...t,type:7,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"D_lightxy",structure:W},{...t,type:4,bitOffset:160,bitSize:32,byteSize:4,slot:4,name:"E_noise",structure:b},{...t,type:4,bitOffset:192,bitSize:32,byteSize:4,slot:5,name:"F_brightness",structure:b},{...t,type:4,bitOffset:224,bitSize:32,byteSize:4,slot:6,name:"G_contrast",structure:b}],methods:[],template:Ks}});Object.assign(P,{...s,type:10,name:"@typeInfo(@typeInfo(@TypeOf(smart-ssao.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:P}],methods:[],template:Fs}});Object.assign(gt,{...s,type:9,name:"ErrorSet2379511334!smart-ssao.KernelOutput(u8,smart-ssao.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:q},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:P}],methods:[]}});Object.assign(pt,{...s,type:5,name:"createOutput",byteSize:96,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:3,name:"0",structure:y},{...t,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:4,name:"1",structure:y},{...t,type:7,isRequired:!0,bitOffset:320,bitSize:192,byteSize:24,slot:0,name:"2",structure:R},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:256,byteSize:32,slot:1,name:"3",structure:x},{...t,type:7,isRequired:!0,bitOffset:512,bitSize:224,byteSize:28,slot:2,name:"retval",structure:gt}],methods:[]}});Object.assign(D,{...s,type:10,name:"@typeInfo(@typeInfo(@TypeOf(smart-ssao.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:D}],methods:[],template:Ms}});Object.assign(Ot,{...s,type:9,name:"ErrorSet1628222313!smart-ssao.KernelOutput(u8,smart-ssao.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:q},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:D}],methods:[]}});Object.assign(ft,{...s,type:5,name:"createPartialOutput",byteSize:104,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:3,name:"0",structure:y},{...t,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:4,name:"1",structure:y},{...t,type:3,isRequired:!0,bitOffset:320,bitSize:32,byteSize:4,slot:5,name:"2",structure:y},{...t,type:3,isRequired:!0,bitOffset:352,bitSize:32,byteSize:4,slot:6,name:"3",structure:y},{...t,type:7,isRequired:!0,bitOffset:384,bitSize:192,byteSize:24,slot:0,name:"4",structure:R},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:256,byteSize:32,slot:1,name:"5",structure:x},{...t,type:7,isRequired:!0,bitOffset:576,bitSize:224,byteSize:28,slot:2,name:"retval",structure:Ot}],methods:[]}});Object.assign(jt,{...s,type:2,name:"smart-ssao",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:r},{...t,type:9,slot:1,name:"Input",structure:r},{...t,type:9,slot:2,name:"Output",structure:r},{...t,type:9,slot:3,name:"Parameters",structure:r}],methods:[bn,ln],template:Ts}});const gn=[r,f,K,F,M,T,g,j,$,B,e,b,a,G,L,H,J,N,Q,W,X,Y,Z,tt,et,w,st,rt,bt,I,at,_,y,O,V,lt,nt,R,ot,k,it,q,x,P,gt,pt,D,Ot,ft,jt],pn=jt,On={runtimeSafety:!1,littleEndian:!0},ut=Sr();ut.getControlObject();ut.recreateStructures(gn,On);const fn=(async()=>{const c=new URL("smart-ssao-d6b601a3.wasm",import.meta.url).href;return fetch(c)})();ut.loadModule(fn);ut.linkVariables(!0);const{constructor:jn}=pn,{createPartialOutput:Sn,Input:zn,kernel:yt}=jn;function hn(c,u,o,n,i={},z={}){const h=[];for(const[l]of yt.inputImages)h.push(l);const A=[];for(const[l]of yt.outputImages)A.push(l);if(Array.isArray(i)){const l=i;i={};for(const[p,d]of h.entries())i[d]=l[p]}const m=new zn(void 0),E=[];let U;for(const l of h){let p=i[l];if(p||(h.length===1&&["data","width","height"].every(d=>!!i[d])?p=i:E.push(l)),m[l]=p,U){if(p.colorSpace!==U)throw new Error(`Input images must all use the same color space: ${U}`)}else U=p.colorSpace}if(E.length>0)throw new Error(`Missing input image${E.length>1?"s":""}: ${E.join(", ")}`);const mt=Sn(c,u,o,n,m,z),pe=l=>{const p={};for(const d of A){const{data:{typedArray:v},width:Oe,height:Zs}=l[d];let C;if(typeof ImageData=="function"){const tr=new Uint8ClampedArray(v.buffer,v.byteOffset,v.byteLength);C=new ImageData(tr,Oe,n,{colorSpace:U})}else C={data:v,width:Oe,height:Zs};if(A.length===1)return C;p[d]=C}return p};return mt[Symbol.toStringTag]==="Promise"?mt.then(pe):pe(mt)}function dn(){const c={};for(let[u,o]of yt){if(u==="parameters"){const n={};for(const[i,z]of o){const h=n[i]={};for(let[A,m]of z)typeof m=="object"?"string"in m?m=m.string:m=Ys(m):typeof m=="function"&&(m=wn(m.name)),h[A]=m}o=n}else typeof o=="object"&&("string"in o?o=o.string:o=o.valueOf());c[u]=o}return c}function Ys(c){const u=[];for(let[o,n]of c)typeof n=="object"&&(n=Ys(n)),u[o]=n;return u}function wn(c){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[c]}onmessage=c=>{const[u,o,...n]=c.data;An(u,n).then(([i,z])=>{postMessage([u,o,i],{transfer:z})}).catch(i=>{postMessage(["error",o,i])})};async function An(c,u){switch(c){case"getKernelInfo":return[dn(...u)];case"createPartialImageData":const n=await hn(...u),i=[];if("data"in n&&"width"in n&&"height"in n)i.push(n.data.buffer);else for(const z of Object.entries(n))i.push(n.data.buffer);return[n,i];default:throw new Error(`Unknown function: ${c}`)}}
