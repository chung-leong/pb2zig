import{u as je,a as Pe,b as ve,d as ke,c as Ie,e as Ve,f as Ce,g as Ee,h as xe,i as Ke,j as De,k as Fe,l as Me,m as _e,o as Te,n as $e,p as Be,q as Le}from"./index-422d9c98.js";je();Pe();ve();ke();Ie();Ve();Ce();Ee();xe();Ke();De();Fe();Me();_e();Te();$e();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},g={},H={},J={},x={},N={},Q={},K={},b={},p={},W={},X={},D={},A={},S={},f={},l={},Y={},F={},Z={},M={},ee={},_={},h={},c={},te={},T={},j={},R={},se={},$={},re={},B={},ce={},q={},ae={},ne={},o={},ie={},U={},ue={},L={},P={},le={},oe={},G={},v={},k={},be={},pe={},fe={},de={},Se={},he={},ge={};Object.assign(g,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:5});Object.assign(H,{...t,type:1,name:"[15:0]u8",length:15,byteSize:16,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:4});Object.assign(J,{...t,type:11,name:"*const [15:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[],template:null},slot:3});Object.assign(x,{...t,type:11,name:"*const *const [15:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:J}],methods:[],template:null},slot:2});Object.assign(N,{...t,type:1,name:"[12:0]u8",length:12,byteSize:13,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:8});Object.assign(Q,{...t,type:11,name:"*const [12:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:N}],methods:[],template:null},slot:7});Object.assign(K,{...t,type:11,name:"*const *const [12:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[],template:null},slot:6});Object.assign(b,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:10});Object.assign(p,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:b}],methods:[],template:null},slot:9});Object.assign(W,{...t,type:1,name:"[13:0]u8",length:13,byteSize:14,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:13});Object.assign(X,{...t,type:11,name:"*const [13:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:12});Object.assign(D,{...t,type:11,name:"*const *const [13:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:11});Object.assign(A,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:A}],methods:[],template:null},slot:42});Object.assign(S,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:A}],methods:[],template:null},slot:32});Object.assign(f,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:f}],methods:[],template:null},slot:52});Object.assign(l,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:f}],methods:[],template:null},slot:51});const Ge=new Uint8Array([]),He=new Uint8Array([32,250,15,0]),Je=new Uint8Array([0,0,0,0,0,0,0,0]),Ne=new Uint8Array([72,250,15,0]),Qe=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(Y,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:l},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:l}],methods:[],template:{memory:{array:Ge},slots:{0:{structure:l,memory:{array:He},slots:{0:{structure:f,memory:{array:Je}}}},1:{structure:l,memory:{array:Ne},slots:{0:{structure:f,memory:{array:Qe}}}}}}},slot:46});Object.assign(F,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[],template:null},slot:45});const We=new Uint8Array([]),Xe=new Uint8Array([32,250,15,0]),Ye=new Uint8Array([0,0,0,0,0,0,240,63]),Ze=new Uint8Array([72,250,15,0]),et=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(Z,{...t,type:2,name:"Struct0014",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:l},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:l}],methods:[],template:{memory:{array:We},slots:{0:{structure:l,memory:{array:Xe},slots:{0:{structure:f,memory:{array:Ye}}}},1:{structure:l,memory:{array:Ze},slots:{0:{structure:f,memory:{array:et}}}}}}},slot:48});Object.assign(M,{...t,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:47});const tt=new Uint8Array([]),st=new Uint8Array([32,250,15,0]),rt=new Uint8Array([0,0,0,0,0,0,0,0]),at=new Uint8Array([72,250,15,0]),nt=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(ee,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:l},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:l}],methods:[],template:{memory:{array:tt},slots:{0:{structure:l,memory:{array:st},slots:{0:{structure:f,memory:{array:rt}}}},1:{structure:l,memory:{array:at},slots:{0:{structure:f,memory:{array:nt}}}}}}},slot:50});Object.assign(_,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:49});const it=new Uint8Array([]),ut=new Uint8Array([170,170,170,170]),m=new Uint8Array([]),lt=new Uint8Array([170,170,170,170]),ot=new Uint8Array([170,170,170,170]);Object.assign(h,{...t,type:2,name:"Struct0008",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:S},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:F},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:M},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:_}],methods:[],template:{memory:{array:it},slots:{0:{structure:F,memory:{array:ut},slots:{0:{structure:Y,memory:{array:m},address:-1431655766}}},1:{structure:M,memory:{array:lt},slots:{0:{structure:Z,memory:{array:m},address:-1431655766}}},2:{structure:_,memory:{array:ot},slots:{0:{structure:ee,memory:{array:m},address:-1431655766}}}}}},slot:38});Object.assign(c,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:h}],methods:[],template:null},slot:37});const mt=new Uint8Array([]),yt=new Uint8Array([170,170,170,170]),ct=new Uint8Array([170,170,170,170]),bt=new Uint8Array([170,170,170,170]),pt=new Uint8Array([170,170,170,170]);Object.assign(te,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"red",structure:c},{...e,type:8,isRequired:!1,slot:1,name:"green",structure:c},{...e,type:8,isRequired:!1,slot:2,name:"blue",structure:c},{...e,type:8,isRequired:!1,slot:3,name:"luminance",structure:c}],methods:[],template:{memory:{array:mt},slots:{0:{structure:c,memory:{array:yt},slots:{0:{structure:h,memory:{array:m},address:-1431655766}}},1:{structure:c,memory:{array:ct},slots:{0:{structure:h,memory:{array:m},address:-1431655766}}},2:{structure:c,memory:{array:bt},slots:{0:{structure:h,memory:{array:m},address:-1431655766}}},3:{structure:c,memory:{array:pt},slots:{0:{structure:h,memory:{array:m},address:-1431655766}}}}}},slot:15});Object.assign(T,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:14});const ft=new Uint8Array([]),dt=new Uint8Array([64,250,15,0]),St=new Uint8Array([4,0,0,0]);Object.assign(j,{...t,type:2,name:"Struct0009",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:ft},slots:{0:{structure:p,memory:{array:dt},slots:{0:{structure:b,memory:{array:St}}}}}}},slot:40});Object.assign(R,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:j}],methods:[],template:null},slot:39});const ht=new Uint8Array([]),gt=new Uint8Array([170,170,170,170]);Object.assign(se,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:R}],methods:[],template:{memory:{array:ht},slots:{0:{structure:R,memory:{array:gt},slots:{0:{structure:j,memory:{array:m},address:-1431655766}}}}}},slot:17});Object.assign($,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:16});const zt=new Uint8Array([]),Ot=new Uint8Array([170,170,170,170]);Object.assign(re,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:R}],methods:[],template:{memory:{array:zt},slots:{0:{structure:R,memory:{array:Ot},slots:{0:{structure:j,memory:{array:m},address:-1431655766}}}}}},slot:19});Object.assign(B,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:18});const Rt=new Uint8Array([]),qt=new Uint8Array([]),wt=new Uint8Array([116,250,15,0]),At=new Uint8Array([38,8,16,0]),Ut=new Uint8Array([99,111,109,46,97,110,116,116,105,107,117,112,105,108,97,0]),jt=new Uint8Array([180,250,15,0]),Pt=new Uint8Array([25,8,16,0]),vt=new Uint8Array([65,110,116,116,105,32,75,117,112,105,108,97,0]),kt=new Uint8Array([244,250,15,0]),It=new Uint8Array([1,0,0,0]),Vt=new Uint8Array([76,251,15,0]),Ct=new Uint8Array([11,8,16,0]),Et=new Uint8Array([76,101,118,101,108,115,32,102,105,108,116,101,114,0]),xt=new Uint8Array([170,170,170,170]),Kt=new Uint8Array([170,170,170,170]),Dt=new Uint8Array([170,170,170,170]);Object.assign(ce,{...t,type:2,name:"levels.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Rt}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:x},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:K},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:p},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:D},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:T},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:$},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:B}],methods:[],template:{memory:{array:qt},slots:{0:{structure:x,memory:{array:wt},slots:{0:{structure:J,memory:{array:At},slots:{0:{structure:H,memory:{array:Ut},address:1050662}}}}},1:{structure:K,memory:{array:jt},slots:{0:{structure:Q,memory:{array:Pt},slots:{0:{structure:N,memory:{array:vt},address:1050649}}}}},2:{structure:p,memory:{array:kt},slots:{0:{structure:b,memory:{array:It}}}},3:{structure:D,memory:{array:Vt},slots:{0:{structure:X,memory:{array:Ct},slots:{0:{structure:W,memory:{array:Et},address:1050635}}}}},4:{structure:T,memory:{array:xt},slots:{0:{structure:te,memory:{array:m},address:-1431655766}}},5:{structure:$,memory:{array:Kt},slots:{0:{structure:se,memory:{array:m},address:-1431655766}}},6:{structure:B,memory:{array:Dt},slots:{0:{structure:re,memory:{array:m},address:-1431655766}}}}}},slot:1});Object.assign(q,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:24});Object.assign(ae,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:23});Object.assign(ne,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:ae}],methods:[],template:null},slot:22});Object.assign(o,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:o}],methods:[],template:null},slot:25});const Ft=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(ie,{...t,type:9,name:"levels.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:b},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:b}],methods:[],template:{memory:{array:Ft}}},slot:26});Object.assign(U,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:U}],methods:[],template:null},slot:27});Object.assign(ue,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:A}],methods:[],template:null},slot:41});const Mt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),_t=new Uint8Array([]),Tt=new Uint8Array([72,253,15,0]),$t=new Uint8Array([4,0,0,0]);Object.assign(L,{...t,type:2,name:"levels.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:ne},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:o},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:o},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ie},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:{memory:{array:Mt}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:q},{...e,type:7,isRequired:!1,name:"FPixel",structure:ue},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:_t},slots:{0:{structure:p,memory:{array:Tt},slots:{0:{structure:b,memory:{array:$t}}}}}}},slot:21});const Bt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Lt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Gt=new Uint8Array([0,0,0,0,0,0,0,0]),ze=new Uint8Array([]);Object.assign(P,{...t,type:2,name:"levels.KernelInput(u8,levels.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:L}],methods:[],template:{memory:{array:Bt},slots:{0:{structure:L,memory:{array:Lt},slots:{0:{structure:ne,memory:{array:Gt},slots:{0:{structure:ae,memory:{array:ze}}}}}}}}},slot:20});Object.assign(le,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:23});Object.assign(oe,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:le}],methods:[],template:null},slot:30});const Ht=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Jt=new Uint8Array([]),Nt=new Uint8Array([72,253,15,0]),Qt=new Uint8Array([4,0,0,0]);Object.assign(G,{...t,type:2,name:"levels.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:oe},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:o},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:o},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ie},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:{memory:{array:Ht}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:q},{...e,type:7,isRequired:!1,name:"FPixel",structure:ue},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:Jt},slots:{0:{structure:p,memory:{array:Nt},slots:{0:{structure:b,memory:{array:Qt}}}}}}},slot:29});const Wt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Xt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Yt=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(v,{...t,type:2,name:"levels.KernelOutput(u8,levels.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:G}],methods:[],template:{memory:{array:Wt},slots:{0:{structure:G,memory:{array:Xt},slots:{0:{structure:oe,memory:{array:Yt},slots:{0:{structure:le,memory:{array:ze}}}}}}}}},slot:28});const Zt=new Uint8Array([0,0,0,0,0,0,128,63,0,0,0,0,0,0,128,63,0,0,0,0,0,0,128,63,0,0,0,0,0,0,128,63]);Object.assign(k,{...t,type:2,name:"levels.KernelParameters(levels.kernel)",length:1,byteSize:32,align:3,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"red",structure:S},{...e,type:6,isRequired:!1,bitOffset:64,bitSize:64,byteSize:8,slot:1,name:"green",structure:S},{...e,type:6,isRequired:!1,bitOffset:128,bitSize:64,byteSize:8,slot:2,name:"blue",structure:S},{...e,type:6,isRequired:!1,bitOffset:192,bitSize:64,byteSize:8,slot:3,name:"luminance",structure:S}],methods:[],template:{memory:{array:Zt}}},slot:31});Object.assign(be,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(levels.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:43});Object.assign(pe,{...t,type:7,name:"ErrorSet0000!levels.KernelOutput(u8,levels.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:be}],methods:[],template:null},slot:35});Object.assign(fe,{...t,type:3,name:"createOutput",length:1,byteSize:96,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:o},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:o},{...e,type:6,bitOffset:320,bitSize:192,byteSize:24,slot:2,name:"2",structure:P},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:3,name:"3",structure:k},{...e,type:6,bitOffset:512,bitSize:224,byteSize:28,slot:4,name:"retval",structure:pe}],methods:[],template:null},slot:33});Object.assign(de,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(levels.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:44});Object.assign(Se,{...t,type:7,name:"ErrorSet0001!levels.KernelOutput(u8,levels.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:de}],methods:[],template:null},slot:36});Object.assign(he,{...t,type:3,name:"createPartialOutput",length:1,byteSize:104,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:o},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:o},{...e,type:3,bitOffset:320,bitSize:32,byteSize:4,slot:2,name:"2",structure:o},{...e,type:3,bitOffset:352,bitSize:32,byteSize:4,slot:3,name:"3",structure:o},{...e,type:6,bitOffset:384,bitSize:192,byteSize:24,slot:4,name:"4",structure:P},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:5,name:"5",structure:k},{...e,type:6,bitOffset:576,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Se}],methods:[],template:null},slot:34});const es={argStruct:fe,thunk:7,name:"createOutput"},ts={argStruct:he,thunk:2,name:"createPartialOutput"};Object.assign(ge,{...t,type:2,name:"levels",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:ze}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:ce},{...e,type:7,isRequired:!1,name:"Input",structure:P},{...e,type:7,isRequired:!1,name:"Output",structure:v},{...e,type:7,isRequired:!1,name:"Parameters",structure:k}],methods:[es,ts],template:null},slot:0});const ss=[g,H,J,x,N,Q,K,b,p,W,X,D,A,S,f,l,Y,F,Z,M,ee,_,h,c,te,T,j,R,se,$,re,B,ce,q,ae,ne,o,ie,U,ue,L,P,le,oe,G,v,k,be,pe,fe,de,Se,he,ge],rs=Be(ss),as=ge.constructor,ns=(async()=>{const n=new URL("levels-102fcf23.wasm",import.meta.url).href;return fetch(n)})();Le(ns,{...rs,writeBack:!0});const{createOutput:bs,createPartialOutput:is,kernel:ye,Input:us,Output:ps,Parameters:fs}=as;function ls(n,u,r,s,a={},z={}){if(Array.isArray(a)){const d=a;a={};for(const[y,O]of Object.keys(ye.inputImages).entries())a[O]=d[y]}const I=new us(void 0),V=Object.keys(ye.inputImages),i=[];let w;for(const d of V){let y=a[d];if(y||(V.length===1&&["data","width","height"].every(O=>!!a[O])?y=a:i.push(d)),I[d]=y,w){if(y.colorSpace!==w)throw new Error(`Input images must all use the same color space: ${w}`)}else w=y.colorSpace}if(i.length>0)throw new Error(`Missing input image${i.length>1?"s":""}: ${i.join(", ")}`);const me=is(n,u,r,s,I,z),Oe=d=>{const y=Object.keys(d),O={};for(const Re of y){const{data:{typedArray:C},width:qe,height:Ae}=d[Re];let E;if(typeof ImageData=="function"){const Ue=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);E=new ImageData(Ue,qe,s,{colorSpace:w})}else E={data:C,width:qe,height:Ae};if(y.length===1)return E;O[Re]=E}return O};return me[Symbol.toStringTag]==="Promise"?me.then(Oe):Oe(me)}function os(){const n={};for(let[u,r]of Object.entries(ye)){if(u==="parameters"){const s={};for(const[a,z]of Object.entries(r)){const I=s[a]={};for(let[V,i]of Object.entries(z))typeof i=="object"?"string"in i?i=i.string:i=we(i):typeof i=="function"&&(i=ms(i.name)),I[V]=i}r=s}else typeof r=="object"&&("string"in r?r=r.string:r=r.valueOf());n[u]=r}return n}function we(n){const u=[];for(let[r,s]of Object.entries(n))typeof s=="object"&&(s=we(s)),u[r]=s;return u}function ms(n){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[n]}onmessage=n=>{const[u,r,...s]=n.data;ys(u,s).then(([a,z])=>{postMessage([u,r,a],{transfer:z})}).catch(a=>{postMessage(["error",r,a])})};async function ys(n,u){switch(n){case"getKernelInfo":return[os(...u)];case"createPartialImageData":const s=await ls(...u),a=[];if("data"in s&&"width"in s&&"height"in s)a.push(s.data.buffer);else for(const z of Object.entries(s))a.push(s.data.buffer);return[s,a];default:throw new Error(`Unknown function: ${n}`)}}
