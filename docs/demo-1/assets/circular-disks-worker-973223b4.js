import{u as Ps,a as Vs,b as Rs,c as qs,d as Is,e as vs,f as Es,g as xs,h as Cs,i as Ks,j as Ms,k as Ts,l as Ds,m as Fs,n as _s,o as $s,p as Ls,q as Bs}from"./index-67c7daa1.js";Ps();Ts();Ds();Vs();Rs();Fs();_s();$s();Ls();qs();Is();vs();Es();Bs();xs();Cs();Ks();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},r={},p={},M={},T={},D={},F={},l={},S={},_={},$={},s={},L={},B={},f={},i={},G={},H={},J={},N={},Q={},W={},X={},Y={},Z={},tt={},et={},st={},A={},rt={},nt={},lt={},V={},at={},R={},u={},O={},P={},gt={},it={},q={},ot={},I={},ct={},v={},E={},h={},pt={},Ot={},w={},ft={},St={},jt={},ee={},zt={},dt={},ht={},se={},wt={},re={},At={},ne={},Ut={},ae={},ie={},kt={},Pt={},oe={},Vt={},ce={},Rt={},ue={},qt={},me={},ye={},It={},be={},vt={},le={},ge={},Et={},pe={},xt={},Oe={},fe={},Ct={},Se={},Kt={},je={},ze={},Mt={},de={},Tt={},Dt={},Ft={},_t={},he={},we={},$t={},Lt={},Bt={},Ae={},ut={},Ue={},ke={},Gt={},Pe={},Ht={},Ve={},Re={},qe={},Ie={},ve={},Ee={},xe={},Ce={},Ke={},Me={},Te={},De={},Fe={},_e={},$e={},Le={},Be={},Jt={},Ge={},He={},Nt={},Je={},Qt={},Ne={},Qe={},We={},Xe={},Ye={},Ze={},ts={},Wt={},es={},ss={},rs={},ns={},as={},is={},os={},cs={},us={},ms={},ys={},bs={},ls={},gs={},ps={},Os={},fs={},Ss={},js={},zs={},ds={},hs={},Gs=new Uint8Array,Hs=new Uint8Array,Js=new Uint8Array([0,0,0,0,0,0,240,63]),Ns=new Uint8Array,Qs=new Uint8Array([0,0,0,0,0,0,89,64]),Ws=new Uint8Array,Xs=new Uint8Array([0,0,0,0,0,0,62,64]),Ys=new Uint8Array([60,18,0,1]),Zs=new Uint8Array([80,97,116,116,101,114,110,32,83,105,122,101,0]),tr=new Uint8Array,er=new Uint8Array,sr=new Uint8Array([0,0,0,0,0,0,0,0]),rr=new Uint8Array,nr=new Uint8Array([0,0,0,0,0,0,240,63]),ar=new Uint8Array,ir=new Uint8Array([225,122,20,174,71,225,218,63]),or=new Uint8Array([92,18,0,1]),cr=new Uint8Array([82,97,100,105,117,115,58,32,104,111,119,32,109,117,99,104,32,97,32,100,105,115,107,115,32,102,105,108,108,115,32,117,112,32,105,116,115,32,115,112,97,99,101,0]),ur=new Uint8Array,mr=new Uint8Array([0,0,0,0,0,0,105,192]),yr=new Uint8Array,br=new Uint8Array([0,0,0,0,0,0,105,192]),lr=new Uint8Array,gr=new Uint8Array([0,0,0,0,0,0,137,64]),pr=new Uint8Array,Or=new Uint8Array([0,0,0,0,0,64,127,64]),fr=new Uint8Array,Sr=new Uint8Array([51,51,51,51,51,227,117,64]),jr=new Uint8Array,zr=new Uint8Array([205,204,204,204,204,12,89,64]),dr=new Uint8Array,hr=new Uint8Array,wr=new Uint8Array,Ar=new Uint8Array,Ur=new Uint8Array([140,18,0,1]),kr=new Uint8Array([66,97,115,101,32,80,111,105,110,116,0]),Pr=new Uint8Array,Vr=new Uint8Array,Rr=new Uint8Array,qr=new Uint8Array,Ir=new Uint8Array([4]),vr=new Uint8Array,Er=new Uint8Array,xr=new Uint8Array([92,16,0,1]),Cr=new Uint8Array([67,105,114,99,117,108,97,114,68,105,115,107,115,0]),Kr=new Uint8Array([117,16,0,1]),Mr=new Uint8Array([80,101,116,114,105,32,76,101,115,107,105,110,101,110,0]),Tr=new Uint8Array,Dr=new Uint8Array([1]),Fr=new Uint8Array([149,16,0,1]),_r=new Uint8Array([68,105,115,107,32,116,105,108,105,110,103,0]),$r=new Uint8Array,Lr=new Uint8Array,Br=new Uint8Array,Gr=new Uint8Array([0]),Hr=new Uint8Array([1]),ws=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Jr=new Uint8Array,Nr=new Uint8Array,Qr=new Uint8Array,Wr=new Uint8Array,Xr=new Uint8Array([4]),Xt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),As=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Yr=new Uint8Array,Zr=new Uint8Array,tn=new Uint8Array,en=new Uint8Array,sn=new Uint8Array([4]),Yt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),rn=new Uint8Array([154,25,175,67,102,102,200,66,0,0,240,65,61,10,215,62]),nn=new Uint8Array([27,0]),an=new Uint8Array([27,0]),on=new Uint8Array,cn=new Uint8Array,un=new Uint8Array,mn=new Uint8Array;Object.assign(ee,{slots:{0:zt,1:ht,2:wt,3:At,4:Ut}});Object.assign(zt,{structure:r,memory:{array:Gs},const:!0,slots:{0:dt}});Object.assign(dt,{structure:f});Object.assign(ht,{structure:s,memory:{array:Hs},const:!0,slots:{0:se}});Object.assign(se,{structure:i,memory:{array:Js},const:!0});Object.assign(wt,{structure:s,memory:{array:Ns},const:!0,slots:{0:re}});Object.assign(re,{structure:i,memory:{array:Qs},const:!0});Object.assign(At,{structure:s,memory:{array:Ws},const:!0,slots:{0:ne}});Object.assign(ne,{structure:i,memory:{array:Xs},const:!0});Object.assign(Ut,{structure:B,memory:{array:Ys},const:!0,slots:{0:ae}});Object.assign(ae,{structure:L,memory:{array:Zs},reloc:16781884});Object.assign(ie,{slots:{0:kt,1:Pt,2:Vt,3:Rt,4:qt}});Object.assign(kt,{structure:r,memory:{array:tr},const:!0,slots:{0:dt}});Object.assign(Pt,{structure:s,memory:{array:er},const:!0,slots:{0:oe}});Object.assign(oe,{structure:i,memory:{array:sr},const:!0});Object.assign(Vt,{structure:s,memory:{array:rr},const:!0,slots:{0:ce}});Object.assign(ce,{structure:i,memory:{array:nr},const:!0});Object.assign(Rt,{structure:s,memory:{array:ar},const:!0,slots:{0:ue}});Object.assign(ue,{structure:i,memory:{array:ir},const:!0});Object.assign(qt,{structure:J,memory:{array:or},const:!0,slots:{0:me}});Object.assign(me,{structure:H,memory:{array:cr},reloc:16781916});Object.assign(ye,{slots:{0:It,1:vt}});Object.assign(It,{structure:s,memory:{array:ur},const:!0,slots:{0:be}});Object.assign(be,{structure:i,memory:{array:mr},const:!0});Object.assign(vt,{structure:s,memory:{array:yr},const:!0,slots:{0:le}});Object.assign(le,{structure:i,memory:{array:br},const:!0});Object.assign(ge,{slots:{0:Et,1:xt}});Object.assign(Et,{structure:s,memory:{array:lr},const:!0,slots:{0:pe}});Object.assign(pe,{structure:i,memory:{array:gr},const:!0});Object.assign(xt,{structure:s,memory:{array:pr},const:!0,slots:{0:Oe}});Object.assign(Oe,{structure:i,memory:{array:Or},const:!0});Object.assign(fe,{slots:{0:Ct,1:Kt}});Object.assign(Ct,{structure:s,memory:{array:fr},const:!0,slots:{0:Se}});Object.assign(Se,{structure:i,memory:{array:Sr},const:!0});Object.assign(Kt,{structure:s,memory:{array:jr},const:!0,slots:{0:je}});Object.assign(je,{structure:i,memory:{array:zr},const:!0});Object.assign(ze,{slots:{0:Mt,1:Tt,2:Dt,3:Ft,4:_t}});Object.assign(Mt,{structure:r,memory:{array:dr},const:!0,slots:{0:de}});Object.assign(de,{structure:tt});Object.assign(Tt,{structure:Q,memory:{array:hr},const:!0,slots:{0:It,1:vt}});Object.assign(Dt,{structure:W,memory:{array:wr},const:!0,slots:{0:Et,1:xt}});Object.assign(Ft,{structure:X,memory:{array:Ar},const:!0,slots:{0:Ct,1:Kt}});Object.assign(_t,{structure:Z,memory:{array:Ur},const:!0,slots:{0:he}});Object.assign(he,{structure:Y,memory:{array:kr},reloc:16781964});Object.assign(we,{slots:{0:$t,1:Lt,2:Bt}});Object.assign($t,{structure:G,memory:{array:Pr},const:!0,slots:{0:zt,1:ht,2:wt,3:At,4:Ut}});Object.assign(Lt,{structure:N,memory:{array:Vr},const:!0,slots:{0:kt,1:Pt,2:Vt,3:Rt,4:qt}});Object.assign(Bt,{structure:et,memory:{array:Rr},const:!0,slots:{0:Mt,1:Tt,2:Dt,3:Ft,4:_t}});Object.assign(Ae,{slots:{0:ut}});Object.assign(ut,{structure:l,memory:{array:qr},const:!0,slots:{0:Ue}});Object.assign(Ue,{structure:S,memory:{array:Ir},const:!0});Object.assign(ke,{slots:{0:Gt}});Object.assign(Gt,{structure:A,memory:{array:vr},const:!0,slots:{0:ut}});Object.assign(Pe,{slots:{0:Ht}});Object.assign(Ht,{structure:A,memory:{array:Er},const:!0,slots:{0:ut}});Object.assign(Ve,{slots:{0:Re,1:Ie,2:Ee,3:Ce,4:Me,5:Te,6:De}});Object.assign(Re,{structure:T,memory:{array:xr},const:!0,slots:{0:qe}});Object.assign(qe,{structure:M,memory:{array:Cr},reloc:16781404});Object.assign(Ie,{structure:F,memory:{array:Kr},const:!0,slots:{0:ve}});Object.assign(ve,{structure:D,memory:{array:Mr},reloc:16781429});Object.assign(Ee,{structure:l,memory:{array:Tr},const:!0,slots:{0:xe}});Object.assign(xe,{structure:S,memory:{array:Dr},const:!0});Object.assign(Ce,{structure:$,memory:{array:Fr},const:!0,slots:{0:Ke}});Object.assign(Ke,{structure:_,memory:{array:_r},reloc:16781461});Object.assign(Me,{structure:st,memory:{array:$r},const:!0,slots:{0:$t,1:Lt,2:Bt}});Object.assign(Te,{structure:rt,memory:{array:Lr},const:!0,slots:{0:Gt}});Object.assign(De,{structure:nt,memory:{array:Br},const:!0,slots:{0:Ht}});Object.assign(Fe,{slots:{0:_e,1:$e}});Object.assign(_e,{structure:O,memory:{array:Gr},const:!0});Object.assign($e,{structure:O,memory:{array:Hr},const:!0});Object.assign(Le,{memory:{array:ws},slots:{0:Be}});Object.assign(Be,{structure:R,memory:{array:ws,offset:0,length:8},slots:{0:Jt}});Object.assign(Jt,{structure:at,memory:{array:Jr},reloc:0});Object.assign(Ge,{slots:{0:He,1:Je,2:Ne}});Object.assign(He,{structure:r,memory:{array:Nr},const:!0,slots:{0:Nt}});Object.assign(Nt,{structure:V});Object.assign(Je,{structure:r,memory:{array:Qr},const:!0,slots:{0:Qt}});Object.assign(Qt,{structure:gt});Object.assign(Ne,{structure:l,memory:{array:Wr},const:!0,slots:{0:Qe}});Object.assign(Qe,{structure:S,memory:{array:Xr},const:!0});Object.assign(We,{memory:{array:Xt},slots:{0:Xe}});Object.assign(Xe,{structure:it,memory:{array:Xt},slots:{0:Ye}});Object.assign(Ye,{structure:R,memory:{array:Xt,offset:0,length:8},slots:{0:Jt}});Object.assign(Ze,{memory:{array:As},slots:{0:ts}});Object.assign(ts,{structure:I,memory:{array:As,offset:0,length:8},slots:{0:Wt}});Object.assign(Wt,{structure:ot,memory:{array:Yr},reloc:0});Object.assign(es,{slots:{0:ss,1:rs,2:ns}});Object.assign(ss,{structure:r,memory:{array:Zr},const:!0,slots:{0:Nt}});Object.assign(rs,{structure:r,memory:{array:tn},const:!0,slots:{0:Qt}});Object.assign(ns,{structure:l,memory:{array:en},const:!0,slots:{0:as}});Object.assign(as,{structure:S,memory:{array:sn},const:!0});Object.assign(is,{memory:{array:Yt},slots:{0:os}});Object.assign(os,{structure:ct,memory:{array:Yt},slots:{0:cs}});Object.assign(cs,{structure:I,memory:{array:Yt,offset:0,length:8},slots:{0:Wt}});Object.assign(us,{memory:{array:rn}});Object.assign(ms,{slots:{0:ys}});Object.assign(ys,{structure:h,memory:{array:nn},const:!0});Object.assign(bs,{slots:{0:ls}});Object.assign(ls,{structure:w,memory:{array:an},const:!0});Object.assign(gs,{slots:{0:ps,1:fs,2:js,3:ds}});Object.assign(ps,{structure:r,memory:{array:on},const:!0,slots:{0:Os}});Object.assign(Os,{structure:lt});Object.assign(fs,{structure:r,memory:{array:cn},const:!0,slots:{0:Ss}});Object.assign(Ss,{structure:q});Object.assign(js,{structure:r,memory:{array:un},const:!0,slots:{0:zs}});Object.assign(zs,{structure:v});Object.assign(ds,{structure:r,memory:{array:mn},const:!0,slots:{0:hs}});Object.assign(hs,{structure:E});const yn={argStruct:Ot,thunkId:2,name:"createOutput"},bn={argStruct:St,thunkId:3,name:"createPartialOutput"};Object.assign(r,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(p,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(M,{...e,type:1,name:"[13:0]u8",length:13,byteSize:14,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(T,{...e,type:13,name:"*const [13:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(D,{...e,type:1,name:"[14:0]u8",length:14,byteSize:15,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(F,{...e,type:13,name:"*const [14:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:D}],methods:[]}});Object.assign(l,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:l}],methods:[]}});Object.assign(S,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(_,{...e,type:1,name:"[11:0]u8",length:11,byteSize:12,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign($,{...e,type:13,name:"*const [11:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[]}});Object.assign(s,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(L,{...e,type:1,name:"[12:0]u8",length:12,byteSize:13,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(B,{...e,type:13,name:"*const [12:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[]}});Object.assign(f,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:f}],methods:[]}});Object.assign(i,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:i}],methods:[]}});Object.assign(G,{...e,type:2,name:"Struct2983709326",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:s},{...t,type:7,slot:2,name:"maxValue",structure:s},{...t,type:7,slot:3,name:"defaultValue",structure:s},{...t,type:7,slot:4,name:"description",structure:B}],methods:[],template:ee}});Object.assign(H,{...e,type:1,name:"[43:0]u8",length:43,byteSize:44,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(J,{...e,type:13,name:"*const [43:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[]}});Object.assign(N,{...e,type:2,name:"Struct1050616952",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:s},{...t,type:7,slot:2,name:"maxValue",structure:s},{...t,type:7,slot:3,name:"defaultValue",structure:s},{...t,type:7,slot:4,name:"description",structure:J}],methods:[],template:ie}});Object.assign(Q,{...e,type:2,name:"Struct761432325",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s}],methods:[],template:ye}});Object.assign(W,{...e,type:2,name:"Struct4139784567",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s}],methods:[],template:ge}});Object.assign(X,{...e,type:2,name:"Struct1774147102",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s}],methods:[],template:fe}});Object.assign(Y,{...e,type:1,name:"[10:0]u8",length:10,byteSize:11,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(Z,{...e,type:13,name:"*const [10:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[]}});Object.assign(tt,{...e,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:f}],methods:[]}});Object.assign(et,{...e,type:2,name:"Struct3356244885",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:Q},{...t,type:7,slot:2,name:"maxValue",structure:W},{...t,type:7,slot:3,name:"defaultValue",structure:X},{...t,type:7,slot:4,name:"description",structure:Z}],methods:[],template:ze}});Object.assign(st,{...e,type:2,name:"Struct1970795987",align:1,instance:{members:[{...t,type:7,slot:0,name:"size",structure:G},{...t,type:7,slot:1,name:"radius",structure:N},{...t,type:7,slot:2,name:"base",structure:et}],methods:[],template:we}});Object.assign(A,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:l}],methods:[],template:Ae}});Object.assign(rt,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:7,slot:0,name:"src",structure:A}],methods:[],template:ke}});Object.assign(nt,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:A}],methods:[],template:Pe}});Object.assign(lt,{...e,type:2,name:"circular-disks.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:T},{...t,type:7,slot:1,name:"vendor",structure:F},{...t,type:7,slot:2,name:"version",structure:l},{...t,type:7,slot:3,name:"description",structure:$},{...t,type:7,slot:4,name:"parameters",structure:st},{...t,type:7,slot:5,name:"inputImages",structure:rt},{...t,type:7,slot:6,name:"outputImages",structure:nt}],methods:[],template:Ve}});Object.assign(V,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(at,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(R,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:at}],methods:[]}});Object.assign(u,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:u}],methods:[]}});Object.assign(O,{...e,type:11,name:"circular-disks.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:O}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:O},{...t,type:7,slot:1,name:"display-p3",structure:O}],methods:[],template:Fe}});Object.assign(P,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(gt,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:f}],methods:[]}});Object.assign(it,{...e,type:2,name:"circular-disks.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:R},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:Le},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:r},{...t,type:7,slot:1,name:"FPixel",structure:r},{...t,type:7,slot:2,name:"channels",structure:l}],methods:[],template:Ge}});Object.assign(q,{...e,type:2,name:"circular-disks.KernelInput(u8,circular-disks.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:it}],methods:[],template:We}});Object.assign(ot,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(I,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:ot}],methods:[]}});Object.assign(ct,{...e,type:2,name:"circular-disks.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:I},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:Ze},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:r},{...t,type:7,slot:1,name:"FPixel",structure:r},{...t,type:7,slot:2,name:"channels",structure:l}],methods:[],template:es}});Object.assign(v,{...e,type:2,name:"circular-disks.KernelOutput(u8,circular-disks.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:ct}],methods:[],template:is}});Object.assign(E,{...e,type:2,name:"circular-disks.KernelParameters(circular-disks.kernel)",byteSize:16,align:8,instance:{members:[{...t,type:4,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"size",structure:f},{...t,type:4,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"radius",structure:f},{...t,type:5,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"base",structure:tt}],methods:[],template:us}});Object.assign(h,{...e,type:10,name:"ErrorSet2308878325",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:h}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:h}],methods:[],template:ms}});Object.assign(pt,{...e,type:9,name:"ErrorSet2308878325!circular-disks.KernelOutput(u8,circular-disks.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:h}],methods:[]}});Object.assign(Ot,{...e,type:5,name:"createOutput",byteSize:80,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...t,type:3,isRequired:!0,bitOffset:160,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...t,type:5,isRequired:!0,bitOffset:192,bitSize:192,byteSize:24,slot:0,name:"2",structure:q},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:128,byteSize:16,slot:1,name:"3",structure:E},{...t,type:5,isRequired:!0,bitOffset:384,bitSize:224,byteSize:28,slot:2,name:"retval",structure:pt}],methods:[]}});Object.assign(w,{...e,type:10,name:"ErrorSet138125471",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:w}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:w}],methods:[],template:bs}});Object.assign(ft,{...e,type:9,name:"ErrorSet138125471!circular-disks.KernelOutput(u8,circular-disks.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:w}],methods:[]}});Object.assign(St,{...e,type:5,name:"createPartialOutput",byteSize:88,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...t,type:3,isRequired:!0,bitOffset:160,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...t,type:3,isRequired:!0,bitOffset:192,bitSize:32,byteSize:4,slot:5,name:"2",structure:u},{...t,type:3,isRequired:!0,bitOffset:224,bitSize:32,byteSize:4,slot:6,name:"3",structure:u},{...t,type:5,isRequired:!0,bitOffset:256,bitSize:192,byteSize:24,slot:0,name:"4",structure:q},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:128,byteSize:16,slot:1,name:"5",structure:E},{...t,type:5,isRequired:!0,bitOffset:448,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ft}],methods:[]}});Object.assign(jt,{...e,type:2,name:"circular-disks",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:r},{...t,type:7,slot:1,name:"Input",structure:r},{...t,type:7,slot:2,name:"Output",structure:r},{...t,type:7,slot:3,name:"Parameters",structure:r}],methods:[yn,bn],template:gs}});const ln=[r,p,M,T,D,F,l,S,_,$,s,L,B,f,i,G,H,J,N,Q,W,X,Y,Z,tt,et,st,A,rt,nt,lt,V,at,R,u,O,P,gt,it,q,ot,I,ct,v,E,h,pt,Ot,w,ft,St,jt],gn=jt,pn={runtimeSafety:!1,littleEndian:!0},mt=Ms();mt.getSpecialExports();mt.recreateStructures(ln,pn);const On=(async()=>{const o=new URL("circular-disks-cfd986cb.wasm",import.meta.url).href;return fetch(o)})();mt.loadModule(On);mt.linkVariables(!0);const{constructor:fn}=gn,{createPartialOutput:Sn,Input:jn,kernel:bt}=fn;function zn(o,m,c,a,n={},j={}){const z=[];for(const[b]of bt.inputImages)z.push(b);const U=[];for(const[b]of bt.outputImages)U.push(b);if(Array.isArray(n)){const b=n;n={};for(const[g,d]of z.entries())n[d]=b[g]}const y=new jn(void 0),x=[];let k;for(const b of z){let g=n[b];if(g||(z.length===1&&["data","width","height"].every(d=>!!n[d])?g=n:x.push(b)),y[b]=g,k){if(g.colorSpace!==k)throw new Error(`Input images must all use the same color space: ${k}`)}else k=g.colorSpace}if(x.length>0)throw new Error(`Missing input image${x.length>1?"s":""}: ${x.join(", ")}`);const yt=Sn(o,m,c,a,y,j),Zt=b=>{const g={};for(const d of U){const{data:{typedArray:C},width:te,height:Us}=b[d];let K;if(typeof ImageData=="function"){const ks=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);K=new ImageData(ks,te,a,{colorSpace:k})}else K={data:C,width:te,height:Us};if(U.length===1)return K;g[d]=K}return g};return yt[Symbol.toStringTag]==="Promise"?yt.then(Zt):Zt(yt)}function dn(){const o={};for(let[m,c]of bt){if(m==="parameters"){const a={};for(const[n,j]of c){const z=a[n]={};for(let[U,y]of j)typeof y=="object"?y=y.string??y.valueOf():typeof y=="function"&&(y=hn(y.name)),z[U]=y}c=a}else typeof c=="object"&&(c=c.string??c.valueOf());o[m]=c}return o}function hn(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=async o=>{if(!Array.isArray(o.data))return;const[m,c,...a]=o.data;try{const[n,j]=await wn(m,a);postMessage([m,c,n],{transfer:j})}catch(n){postMessage(["error",c,n])}};async function wn(o,m){switch(o){case"getKernelInfo":return[dn(...m)];case"createPartialImageData":const a=await zn(...m),n=[];if("data"in a&&"width"in a&&"height"in a)n.push(a.data.buffer);else for(const j of Object.entries(a))n.push(a.data.buffer);return[a,n];default:throw new Error(`Unknown function: ${o}`)}}postMessage("ready");
