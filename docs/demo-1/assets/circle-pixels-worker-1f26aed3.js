import{u as ms,a as ys,b as bs,c as ls,d as ps,e as gs,f as Os,g as fs,h as Ss,i as zs,j as js,k as hs,l as ds,m as ws,n as As,o as Us,p as Ps,q as xs}from"./index-33238b17.js";ms();hs();ds();ys();bs();ws();As();Us();Ps();ls();ps();gs();Os();xs();fs();Ss();zs();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},g={},M={},D={},F={},T={},l={},S={},_={},$={},r={},L={},B={},f={},u={},G={},H={},J={},N={},Q={},W={},X={},Y={},A={},Z={},tt={},mt={},V={},et={},R={},c={},O={},x={},yt={},st={},k={},rt={},q={},nt={},I={},v={},d={},bt={},lt={},w={},pt={},gt={},Ot={},Gt={},ft={},at={},St={},Ht={},zt={},Jt={},jt={},Nt={},ht={},Qt={},Wt={},dt={},wt={},Xt={},At={},Yt={},Ut={},Zt={},Pt={},te={},ee={},xt={},Vt={},se={},Rt={},re={},kt={},ne={},qt={},ae={},ie={},It={},vt={},Et={},oe={},it={},ce={},ue={},Ct={},me={},Kt={},ye={},be={},le={},pe={},ge={},Oe={},fe={},Se={},ze={},je={},he={},de={},we={},Ae={},Ue={},Pe={},xe={},Mt={},Ve={},Re={},Dt={},ke={},Ft={},qe={},Ie={},ve={},Ee={},Ce={},Ke={},Me={},Tt={},De={},Fe={},Te={},_e={},$e={},Le={},Be={},Ge={},He={},Je={},Ne={},Qe={},We={},Xe={},Ye={},Ze={},ts={},es={},ss={},rs={},ns={},as={},Vs=new Uint8Array,Rs=new Uint8Array,ks=new Uint8Array([0,0,0,0,0,0,240,63]),qs=new Uint8Array,Is=new Uint8Array([0,0,0,0,0,192,114,64]),vs=new Uint8Array,Es=new Uint8Array([0,0,0,0,0,0,89,64]),Cs=new Uint8Array([244,6,0,1]),Ks=new Uint8Array([100,105,115,116,97,110,99,101,0]),Ms=new Uint8Array,Ds=new Uint8Array,Fs=new Uint8Array([0,0,0,0,0,0,0,0]),Ts=new Uint8Array,_s=new Uint8Array([0,0,0,0,0,0,0,64]),$s=new Uint8Array,Ls=new Uint8Array([0,0,0,0,0,0,240,63]),Bs=new Uint8Array([12,7,0,1]),Gs=new Uint8Array([115,105,122,101,0]),Hs=new Uint8Array,Js=new Uint8Array,Ns=new Uint8Array([0,0,0,0,0,0,0,0]),Qs=new Uint8Array,Ws=new Uint8Array([0,0,0,0,0,192,114,64]),Xs=new Uint8Array,Ys=new Uint8Array([0,0,0,0,0,0,0,64]),Zs=new Uint8Array([24,7,0,1]),tr=new Uint8Array([101,100,103,101,65,108,112,104,97,0]),er=new Uint8Array,sr=new Uint8Array,rr=new Uint8Array,nr=new Uint8Array,ar=new Uint8Array([4]),ir=new Uint8Array,or=new Uint8Array,cr=new Uint8Array([2,5,0,1]),ur=new Uint8Array([98,101,46,110,101,117,114,111,112,114,111,100,117,99,116,105,111,110,115,0]),mr=new Uint8Array([33,5,0,1]),yr=new Uint8Array([78,101,117,114,111,32,80,114,111,100,117,99,116,105,111,110,115,0]),br=new Uint8Array,lr=new Uint8Array([1]),pr=new Uint8Array([68,5,0,1]),gr=new Uint8Array([99,105,114,99,108,101,80,105,120,101,108,115,0]),Or=new Uint8Array,fr=new Uint8Array,Sr=new Uint8Array,zr=new Uint8Array([0]),jr=new Uint8Array([1]),is=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),hr=new Uint8Array,dr=new Uint8Array,wr=new Uint8Array,Ar=new Uint8Array,Ur=new Uint8Array([4]),_t=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),os=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Pr=new Uint8Array,xr=new Uint8Array,Vr=new Uint8Array,Rr=new Uint8Array,kr=new Uint8Array([4]),$t=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),qr=new Uint8Array([0,0,200,66,0,0,128,63,0,0,0,64]),Ir=new Uint8Array([27,0]),vr=new Uint8Array([27,0]),Er=new Uint8Array,Cr=new Uint8Array,Kr=new Uint8Array,Mr=new Uint8Array;Object.assign(Gt,{slots:{0:ft,1:St,2:zt,3:jt,4:ht}});Object.assign(ft,{structure:s,memory:{array:Vs},const:!0,slots:{0:at}});Object.assign(at,{structure:f});Object.assign(St,{structure:r,memory:{array:Rs},const:!0,slots:{0:Ht}});Object.assign(Ht,{structure:u,memory:{array:ks},const:!0});Object.assign(zt,{structure:r,memory:{array:qs},const:!0,slots:{0:Jt}});Object.assign(Jt,{structure:u,memory:{array:Is},const:!0});Object.assign(jt,{structure:r,memory:{array:vs},const:!0,slots:{0:Nt}});Object.assign(Nt,{structure:u,memory:{array:Es},const:!0});Object.assign(ht,{structure:B,memory:{array:Cs},const:!0,slots:{0:Qt}});Object.assign(Qt,{structure:L,memory:{array:Ks},reloc:16778996});Object.assign(Wt,{slots:{0:dt,1:wt,2:At,3:Ut,4:Pt}});Object.assign(dt,{structure:s,memory:{array:Ms},const:!0,slots:{0:at}});Object.assign(wt,{structure:r,memory:{array:Ds},const:!0,slots:{0:Xt}});Object.assign(Xt,{structure:u,memory:{array:Fs},const:!0});Object.assign(At,{structure:r,memory:{array:Ts},const:!0,slots:{0:Yt}});Object.assign(Yt,{structure:u,memory:{array:_s},const:!0});Object.assign(Ut,{structure:r,memory:{array:$s},const:!0,slots:{0:Zt}});Object.assign(Zt,{structure:u,memory:{array:Ls},const:!0});Object.assign(Pt,{structure:J,memory:{array:Bs},const:!0,slots:{0:te}});Object.assign(te,{structure:H,memory:{array:Gs},reloc:16779020});Object.assign(ee,{slots:{0:xt,1:Vt,2:Rt,3:kt,4:qt}});Object.assign(xt,{structure:s,memory:{array:Hs},const:!0,slots:{0:at}});Object.assign(Vt,{structure:r,memory:{array:Js},const:!0,slots:{0:se}});Object.assign(se,{structure:u,memory:{array:Ns},const:!0});Object.assign(Rt,{structure:r,memory:{array:Qs},const:!0,slots:{0:re}});Object.assign(re,{structure:u,memory:{array:Ws},const:!0});Object.assign(kt,{structure:r,memory:{array:Xs},const:!0,slots:{0:ne}});Object.assign(ne,{structure:u,memory:{array:Ys},const:!0});Object.assign(qt,{structure:W,memory:{array:Zs},const:!0,slots:{0:ae}});Object.assign(ae,{structure:Q,memory:{array:tr},reloc:16779032});Object.assign(ie,{slots:{0:It,1:vt,2:Et}});Object.assign(It,{structure:G,memory:{array:er},const:!0,slots:{0:ft,1:St,2:zt,3:jt,4:ht}});Object.assign(vt,{structure:N,memory:{array:sr},const:!0,slots:{0:dt,1:wt,2:At,3:Ut,4:Pt}});Object.assign(Et,{structure:X,memory:{array:rr},const:!0,slots:{0:xt,1:Vt,2:Rt,3:kt,4:qt}});Object.assign(oe,{slots:{0:it}});Object.assign(it,{structure:l,memory:{array:nr},const:!0,slots:{0:ce}});Object.assign(ce,{structure:S,memory:{array:ar},const:!0});Object.assign(ue,{slots:{0:Ct}});Object.assign(Ct,{structure:A,memory:{array:ir},const:!0,slots:{0:it}});Object.assign(me,{slots:{0:Kt}});Object.assign(Kt,{structure:A,memory:{array:or},const:!0,slots:{0:it}});Object.assign(ye,{slots:{0:be,1:pe,2:Oe,3:Se,4:je,5:he,6:de}});Object.assign(be,{structure:D,memory:{array:cr},const:!0,slots:{0:le}});Object.assign(le,{structure:M,memory:{array:ur},reloc:16778498});Object.assign(pe,{structure:T,memory:{array:mr},const:!0,slots:{0:ge}});Object.assign(ge,{structure:F,memory:{array:yr},reloc:16778529});Object.assign(Oe,{structure:l,memory:{array:br},const:!0,slots:{0:fe}});Object.assign(fe,{structure:S,memory:{array:lr},const:!0});Object.assign(Se,{structure:$,memory:{array:pr},const:!0,slots:{0:ze}});Object.assign(ze,{structure:_,memory:{array:gr},reloc:16778564});Object.assign(je,{structure:Y,memory:{array:Or},const:!0,slots:{0:It,1:vt,2:Et}});Object.assign(he,{structure:Z,memory:{array:fr},const:!0,slots:{0:Ct}});Object.assign(de,{structure:tt,memory:{array:Sr},const:!0,slots:{0:Kt}});Object.assign(we,{slots:{0:Ae,1:Ue}});Object.assign(Ae,{structure:O,memory:{array:zr},const:!0});Object.assign(Ue,{structure:O,memory:{array:jr},const:!0});Object.assign(Pe,{memory:{array:is},slots:{0:xe}});Object.assign(xe,{structure:R,memory:{array:is,offset:0,length:8},slots:{0:Mt}});Object.assign(Mt,{structure:et,memory:{array:hr},reloc:0});Object.assign(Ve,{slots:{0:Re,1:ke,2:qe}});Object.assign(Re,{structure:s,memory:{array:dr},const:!0,slots:{0:Dt}});Object.assign(Dt,{structure:V});Object.assign(ke,{structure:s,memory:{array:wr},const:!0,slots:{0:Ft}});Object.assign(Ft,{structure:yt});Object.assign(qe,{structure:l,memory:{array:Ar},const:!0,slots:{0:Ie}});Object.assign(Ie,{structure:S,memory:{array:Ur},const:!0});Object.assign(ve,{memory:{array:_t},slots:{0:Ee}});Object.assign(Ee,{structure:st,memory:{array:_t},slots:{0:Ce}});Object.assign(Ce,{structure:R,memory:{array:_t,offset:0,length:8},slots:{0:Mt}});Object.assign(Ke,{memory:{array:os},slots:{0:Me}});Object.assign(Me,{structure:q,memory:{array:os,offset:0,length:8},slots:{0:Tt}});Object.assign(Tt,{structure:rt,memory:{array:Pr},reloc:0});Object.assign(De,{slots:{0:Fe,1:Te,2:_e}});Object.assign(Fe,{structure:s,memory:{array:xr},const:!0,slots:{0:Dt}});Object.assign(Te,{structure:s,memory:{array:Vr},const:!0,slots:{0:Ft}});Object.assign(_e,{structure:l,memory:{array:Rr},const:!0,slots:{0:$e}});Object.assign($e,{structure:S,memory:{array:kr},const:!0});Object.assign(Le,{memory:{array:$t},slots:{0:Be}});Object.assign(Be,{structure:nt,memory:{array:$t},slots:{0:Ge}});Object.assign(Ge,{structure:q,memory:{array:$t,offset:0,length:8},slots:{0:Tt}});Object.assign(He,{memory:{array:qr}});Object.assign(Je,{slots:{0:Ne}});Object.assign(Ne,{structure:d,memory:{array:Ir},const:!0});Object.assign(Qe,{slots:{0:We}});Object.assign(We,{structure:w,memory:{array:vr},const:!0});Object.assign(Xe,{slots:{0:Ye,1:ts,2:ss,3:ns}});Object.assign(Ye,{structure:s,memory:{array:Er},const:!0,slots:{0:Ze}});Object.assign(Ze,{structure:mt});Object.assign(ts,{structure:s,memory:{array:Cr},const:!0,slots:{0:es}});Object.assign(es,{structure:k});Object.assign(ss,{structure:s,memory:{array:Kr},const:!0,slots:{0:rs}});Object.assign(rs,{structure:I});Object.assign(ns,{structure:s,memory:{array:Mr},const:!0,slots:{0:as}});Object.assign(as,{structure:v});const Dr={argStruct:lt,thunkId:2,name:"createOutput"},Fr={argStruct:gt,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(g,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(M,{...e,type:1,name:"[19:0]u8",length:19,byteSize:20,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(D,{...e,type:13,name:"*const [19:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(F,{...e,type:1,name:"[17:0]u8",length:17,byteSize:18,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(T,{...e,type:13,name:"*const [17:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(l,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:l}],methods:[]}});Object.assign(S,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(_,{...e,type:1,name:"[12:0]u8",length:12,byteSize:13,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign($,{...e,type:13,name:"*const [12:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[]}});Object.assign(r,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(L,{...e,type:1,name:"[8:0]u8",length:8,byteSize:9,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(B,{...e,type:13,name:"*const [8:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[]}});Object.assign(f,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:f}],methods:[]}});Object.assign(u,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:u}],methods:[]}});Object.assign(G,{...e,type:2,name:"Struct2866347245",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:r},{...t,type:7,slot:2,name:"maxValue",structure:r},{...t,type:7,slot:3,name:"defaultValue",structure:r},{...t,type:7,slot:4,name:"description",structure:B}],methods:[],template:Gt}});Object.assign(H,{...e,type:1,name:"[4:0]u8",length:4,byteSize:5,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(J,{...e,type:13,name:"*const [4:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[]}});Object.assign(N,{...e,type:2,name:"Struct1978584772",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:r},{...t,type:7,slot:2,name:"maxValue",structure:r},{...t,type:7,slot:3,name:"defaultValue",structure:r},{...t,type:7,slot:4,name:"description",structure:J}],methods:[],template:Wt}});Object.assign(Q,{...e,type:1,name:"[9:0]u8",length:9,byteSize:10,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(W,{...e,type:13,name:"*const [9:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[]}});Object.assign(X,{...e,type:2,name:"Struct1203006598",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:r},{...t,type:7,slot:2,name:"maxValue",structure:r},{...t,type:7,slot:3,name:"defaultValue",structure:r},{...t,type:7,slot:4,name:"description",structure:W}],methods:[],template:ee}});Object.assign(Y,{...e,type:2,name:"Struct2398695803",align:1,instance:{members:[{...t,type:7,slot:0,name:"dist",structure:G},{...t,type:7,slot:1,name:"size",structure:N},{...t,type:7,slot:2,name:"edgeAlpha",structure:X}],methods:[],template:ie}});Object.assign(A,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:l}],methods:[],template:oe}});Object.assign(Z,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:7,slot:0,name:"src",structure:A}],methods:[],template:ue}});Object.assign(tt,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:A}],methods:[],template:me}});Object.assign(mt,{...e,type:2,name:"circle-pixels.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:D},{...t,type:7,slot:1,name:"vendor",structure:T},{...t,type:7,slot:2,name:"version",structure:l},{...t,type:7,slot:3,name:"description",structure:$},{...t,type:7,slot:4,name:"parameters",structure:Y},{...t,type:7,slot:5,name:"inputImages",structure:Z},{...t,type:7,slot:6,name:"outputImages",structure:tt}],methods:[],template:ye}});Object.assign(V,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(et,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(R,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:et}],methods:[]}});Object.assign(c,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[]}});Object.assign(O,{...e,type:11,name:"circle-pixels.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:O}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:O},{...t,type:7,slot:1,name:"display-p3",structure:O}],methods:[],template:we}});Object.assign(x,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:x}],methods:[]}});Object.assign(yt,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:f}],methods:[]}});Object.assign(st,{...e,type:2,name:"circle-pixels.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:R},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:x}],methods:[],template:Pe},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:l}],methods:[],template:Ve}});Object.assign(k,{...e,type:2,name:"circle-pixels.KernelInput(u8,circle-pixels.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:st}],methods:[],template:ve}});Object.assign(rt,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(q,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:rt}],methods:[]}});Object.assign(nt,{...e,type:2,name:"circle-pixels.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:q},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:x}],methods:[],template:Ke},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:l}],methods:[],template:De}});Object.assign(I,{...e,type:2,name:"circle-pixels.KernelOutput(u8,circle-pixels.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:nt}],methods:[],template:Le}});Object.assign(v,{...e,type:2,name:"circle-pixels.KernelParameters(circle-pixels.kernel)",byteSize:12,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"dist",structure:f},{...t,type:4,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"size",structure:f},{...t,type:4,bitOffset:64,bitSize:32,byteSize:4,slot:2,name:"edgeAlpha",structure:f}],methods:[],template:He}});Object.assign(d,{...e,type:10,name:"ErrorSet709993732",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:d}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:d}],methods:[],template:Je}});Object.assign(bt,{...e,type:9,name:"ErrorSet709993732!circle-pixels.KernelOutput(u8,circle-pixels.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:I},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:d}],methods:[]}});Object.assign(lt,{...e,type:5,name:"createOutput",byteSize:72,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:c},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:c},{...t,type:5,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:k},{...t,type:5,isRequired:!0,bitOffset:256,bitSize:96,byteSize:12,slot:1,name:"3",structure:v},{...t,type:5,isRequired:!0,bitOffset:352,bitSize:224,byteSize:28,slot:2,name:"retval",structure:bt}],methods:[]}});Object.assign(w,{...e,type:10,name:"ErrorSet3562998636",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:w}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:w}],methods:[],template:Qe}});Object.assign(pt,{...e,type:9,name:"ErrorSet3562998636!circle-pixels.KernelOutput(u8,circle-pixels.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:I},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:w}],methods:[]}});Object.assign(gt,{...e,type:5,name:"createPartialOutput",byteSize:80,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:c},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:c},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:c},{...t,type:5,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:k},{...t,type:5,isRequired:!0,bitOffset:320,bitSize:96,byteSize:12,slot:1,name:"5",structure:v},{...t,type:5,isRequired:!0,bitOffset:416,bitSize:224,byteSize:28,slot:2,name:"retval",structure:pt}],methods:[]}});Object.assign(Ot,{...e,type:2,name:"circle-pixels",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:s},{...t,type:7,slot:1,name:"Input",structure:s},{...t,type:7,slot:2,name:"Output",structure:s},{...t,type:7,slot:3,name:"Parameters",structure:s}],methods:[Dr,Fr],template:Xe}});const Tr=[s,g,M,D,F,T,l,S,_,$,r,L,B,f,u,G,H,J,N,Q,W,X,Y,A,Z,tt,mt,V,et,R,c,O,x,yt,st,k,rt,q,nt,I,v,d,bt,lt,w,pt,gt,Ot],_r=Ot,$r={runtimeSafety:!1,littleEndian:!0},ot=js();ot.getSpecialExports();ot.recreateStructures(Tr,$r);const Lr=(async()=>{const i=new URL("circle-pixels-85812ec5.wasm",import.meta.url).href;return fetch(i)})();ot.loadModule(Lr);ot.linkVariables(!0);const{constructor:Br}=_r,{createPartialOutput:Gr,Input:Hr,kernel:ut}=Br;function Jr(i,m,o,a,n={},z={}){const j=[];for(const[b]of ut.inputImages)j.push(b);const U=[];for(const[b]of ut.outputImages)U.push(b);if(Array.isArray(n)){const b=n;n={};for(const[p,h]of j.entries())n[h]=b[p]}const y=new Hr(void 0),E=[];let P;for(const b of j){let p=n[b];if(p||(j.length===1&&["data","width","height"].every(h=>!!n[h])?p=n:E.push(b)),y[b]=p,P){if(p.colorSpace!==P)throw new Error(`Input images must all use the same color space: ${P}`)}else P=p.colorSpace}if(E.length>0)throw new Error(`Missing input image${E.length>1?"s":""}: ${E.join(", ")}`);const ct=Gr(i,m,o,a,y,z),Lt=b=>{const p={};for(const h of U){const{data:{typedArray:C},width:Bt,height:cs}=b[h];let K;if(typeof ImageData=="function"){const us=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);K=new ImageData(us,Bt,a,{colorSpace:P})}else K={data:C,width:Bt,height:cs};if(U.length===1)return K;p[h]=K}return p};return ct[Symbol.toStringTag]==="Promise"?ct.then(Lt):Lt(ct)}function Nr(){const i={};for(let[m,o]of ut){if(m==="parameters"){const a={};for(const[n,z]of o){const j=a[n]={};for(let[U,y]of z)typeof y=="object"?y=y.string??y.valueOf():typeof y=="function"&&(y=Qr(y.name)),j[U]=y}o=a}else typeof o=="object"&&(o=o.string??o.valueOf());i[m]=o}return i}function Qr(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=async i=>{if(!Array.isArray(i.data))return;const[m,o,...a]=i.data;try{const[n,z]=await Wr(m,a);postMessage([m,o,n],{transfer:z})}catch(n){postMessage(["error",o,n])}};async function Wr(i,m){switch(i){case"getKernelInfo":return[Nr(...m)];case"createPartialImageData":const a=await Jr(...m),n=[];if("data"in a&&"width"in a&&"height"in a)n.push(a.data.buffer);else for(const z of Object.entries(a))n.push(a.data.buffer);return[a,n];default:throw new Error(`Unknown function: ${i}`)}}postMessage("ready");
