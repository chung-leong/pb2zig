import{u as Me,a as _e,b as Te,d as $e,c as Be,e as Le,f as Ge,g as He,h as Je,i as Ne,j as Qe,k as We,l as Xe,m as Ye,o as Ze,n as et,p as tt,q as st}from"./index-d64bc850.js";Me();_e();Te();$e();Be();Le();Ge();He();Je();Ne();Qe();We();Xe();Ye();Ze();et();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},c={},Q={},W={},V={},X={},Y={},v={},b={},p={},Z={},ee={},E={},w={},te={},l={},s={},se={},x={},re={},ae={},K={},ne={},D={},h={},ie={},F={},ue={},oe={},M={},le={},_={},me={},T={},ye={},ce={},$={},be={},B={},pe={},L={},q={},S={},fe={},G={},he={},H={},qe={},z={},de={},ge={},m={},Se={},R={},J={},A={},ze={},Oe={},N={},U={},j={},Ae={},Ue={},je={},Pe={},Ce={},ke={},Ie={};Object.assign(c,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:5});Object.assign(Q,{...t,type:1,name:"[22:0]u8",length:22,byteSize:23,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:4});Object.assign(W,{...t,type:11,name:"*const [22:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[],template:null},slot:3});Object.assign(V,{...t,type:11,name:"*const *const [22:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:2});Object.assign(X,{...t,type:1,name:"[7:0]u8",length:7,byteSize:8,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:8});Object.assign(Y,{...t,type:11,name:"*const [7:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:7});Object.assign(v,{...t,type:11,name:"*const *const [7:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[],template:null},slot:6});Object.assign(b,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:10});Object.assign(p,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:b}],methods:[],template:null},slot:9});Object.assign(Z,{...t,type:1,name:"[33:0]u8",length:33,byteSize:34,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:13});Object.assign(ee,{...t,type:11,name:"*const [33:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:12});Object.assign(E,{...t,type:11,name:"*const *const [33:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:11});Object.assign(w,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:w}],methods:[],template:null},slot:46});Object.assign(te,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:w}],methods:[],template:null},slot:32});Object.assign(l,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:l}],methods:[],template:null},slot:65});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:l}],methods:[],template:null},slot:64});const rt=new Uint8Array,at=new Uint8Array([184,251,15,0]),nt=new Uint8Array([0,0,0,0,0,0,0,0]),it=new Uint8Array([56,252,15,0]),ut=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(se,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:rt},slots:{0:{structure:s,memory:{array:at},slots:{0:{structure:l,memory:{array:nt}}}},1:{structure:s,memory:{array:it},slots:{0:{structure:l,memory:{array:ut}}}}}}},slot:50});Object.assign(x,{...t,type:11,name:"Struct0014",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:49});Object.assign(re,{...t,type:1,name:"[19:0]u8",length:19,byteSize:20,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:53});Object.assign(ae,{...t,type:11,name:"*const [19:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:52});Object.assign(K,{...t,type:11,name:"*const *const [19:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:51});const ot=new Uint8Array,lt=new Uint8Array([170,170,170,170]),mt=new Uint8Array,yt=new Uint8Array([136,250,15,0]),ct=new Uint8Array([165,33,16,0]),bt=new Uint8Array([77,105,110,32,97,110,100,32,109,97,120,32,108,105,109,105,116,115,46,0]);Object.assign(ne,{...t,type:2,name:"Struct0010",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:te},{...e,type:8,isRequired:!1,slot:0,name:"defaultValue",structure:x},{...e,type:8,isRequired:!1,slot:1,name:"description",structure:K}],methods:[],template:{memory:{array:ot},slots:{0:{structure:x,memory:{array:lt},slots:{0:{structure:se,memory:{array:mt}}}},1:{structure:K,memory:{array:yt},slots:{0:{structure:ae,memory:{array:ct},slots:{0:{structure:re,memory:{array:bt}}}}}}}}},slot:39});Object.assign(D,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:38});Object.assign(h,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:w}],methods:[],template:null},slot:33});const pt=new Uint8Array,ft=new Uint8Array([72,251,15,0]),ht=new Uint8Array([0,0,0,0,0,0,0,0]),dt=new Uint8Array([112,251,15,0]),gt=new Uint8Array([0,0,0,0,0,0,0,0]),St=new Uint8Array([152,251,15,0]),zt=new Uint8Array([0,0,0,0,0,0,0,0]),Ot=new Uint8Array([232,251,15,0]),wt=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(ie,{...t,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:s}],methods:[],template:{memory:{array:pt},slots:{0:{structure:s,memory:{array:ft},slots:{0:{structure:l,memory:{array:ht}}}},1:{structure:s,memory:{array:dt},slots:{0:{structure:l,memory:{array:gt}}}},2:{structure:s,memory:{array:St},slots:{0:{structure:l,memory:{array:zt}}}},3:{structure:s,memory:{array:Ot},slots:{0:{structure:l,memory:{array:wt}}}}}}},slot:55});Object.assign(F,{...t,type:11,name:"Struct0015",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:54});Object.assign(ue,{...t,type:1,name:"[48:0]u8",length:48,byteSize:49,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:58});Object.assign(oe,{...t,type:11,name:"*const [48:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:57});Object.assign(M,{...t,type:11,name:"*const *const [48:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:56});const Rt=new Uint8Array,qt=new Uint8Array([170,170,170,170]),At=new Uint8Array,Ut=new Uint8Array([160,250,15,0]),jt=new Uint8Array([116,33,16,0]),Pt=new Uint8Array([67,111,108,111,114,32,102,111,114,32,116,104,114,101,115,104,111,108,100,101,100,32,97,114,101,97,46,99,111,108,111,114,70,111,114,65,108,108,80,97,115,115,101,100,65,114,101,97,0]);Object.assign(le,{...t,type:2,name:"Struct0011",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:h},{...e,type:8,isRequired:!1,slot:0,name:"defaultValue",structure:F},{...e,type:8,isRequired:!1,slot:1,name:"description",structure:M}],methods:[],template:{memory:{array:Rt},slots:{0:{structure:F,memory:{array:qt},slots:{0:{structure:ie,memory:{array:At}}}},1:{structure:M,memory:{array:Ut},slots:{0:{structure:oe,memory:{array:jt},slots:{0:{structure:ue,memory:{array:Pt}}}}}}}}},slot:41});Object.assign(_,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:40});const Ct=new Uint8Array,kt=new Uint8Array([72,251,15,0]),It=new Uint8Array([0,0,0,0,0,0,240,63]),Vt=new Uint8Array([112,251,15,0]),vt=new Uint8Array([0,0,0,0,0,0,240,63]),Et=new Uint8Array([152,251,15,0]),xt=new Uint8Array([0,0,0,0,0,0,240,63]),Kt=new Uint8Array([232,251,15,0]),Dt=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(me,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:s}],methods:[],template:{memory:{array:Ct},slots:{0:{structure:s,memory:{array:kt},slots:{0:{structure:l,memory:{array:It}}}},1:{structure:s,memory:{array:Vt},slots:{0:{structure:l,memory:{array:vt}}}},2:{structure:s,memory:{array:Et},slots:{0:{structure:l,memory:{array:xt}}}},3:{structure:s,memory:{array:Kt},slots:{0:{structure:l,memory:{array:Dt}}}}}}},slot:60});Object.assign(T,{...t,type:11,name:"Struct0016",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:59});Object.assign(ye,{...t,type:1,name:"[25:0]u8",length:25,byteSize:26,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:63});Object.assign(ce,{...t,type:11,name:"*const [25:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:62});Object.assign($,{...t,type:11,name:"*const *const [25:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:61});const Ft=new Uint8Array,Mt=new Uint8Array([170,170,170,170]),_t=new Uint8Array,Tt=new Uint8Array([160,250,15,0]),$t=new Uint8Array([90,33,16,0]),Bt=new Uint8Array([67,111,108,111,114,32,102,111,114,32,97,108,108,32,112,97,115,115,101,100,32,97,114,101,97,0]);Object.assign(be,{...t,type:2,name:"Struct0012",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:h},{...e,type:8,isRequired:!1,slot:0,name:"defaultValue",structure:T},{...e,type:8,isRequired:!1,slot:1,name:"description",structure:$}],methods:[],template:{memory:{array:Ft},slots:{0:{structure:T,memory:{array:Mt},slots:{0:{structure:me,memory:{array:_t}}}},1:{structure:$,memory:{array:Tt},slots:{0:{structure:ce,memory:{array:$t},slots:{0:{structure:ye,memory:{array:Bt}}}}}}}}},slot:43});Object.assign(B,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:42});const Lt=new Uint8Array,Gt=new Uint8Array([170,170,170,170]),Ht=new Uint8Array,Jt=new Uint8Array([170,170,170,170]),Nt=new Uint8Array,Qt=new Uint8Array([170,170,170,170]),Wt=new Uint8Array;Object.assign(pe,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"threshold",structure:D},{...e,type:8,isRequired:!1,slot:1,name:"outputColor1",structure:_},{...e,type:8,isRequired:!1,slot:2,name:"outputColor2",structure:B}],methods:[],template:{memory:{array:Lt},slots:{0:{structure:D,memory:{array:Gt},slots:{0:{structure:ne,memory:{array:Ht}}}},1:{structure:_,memory:{array:Jt},slots:{0:{structure:le,memory:{array:Nt}}}},2:{structure:B,memory:{array:Qt},slots:{0:{structure:be,memory:{array:Wt}}}}}}},slot:15});Object.assign(L,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:14});const Xt=new Uint8Array,Yt=new Uint8Array([48,252,15,0]),Zt=new Uint8Array([4,0,0,0]);Object.assign(q,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:Xt},slots:{0:{structure:p,memory:{array:Yt},slots:{0:{structure:b,memory:{array:Zt}}}}}}},slot:45});Object.assign(S,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:q}],methods:[],template:null},slot:44});const es=new Uint8Array,ts=new Uint8Array([170,170,170,170]),ss=new Uint8Array;Object.assign(fe,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"source",structure:S}],methods:[],template:{memory:{array:es},slots:{0:{structure:S,memory:{array:ts},slots:{0:{structure:q,memory:{array:ss}}}}}}},slot:17});Object.assign(G,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:16});const rs=new Uint8Array,as=new Uint8Array([170,170,170,170]),ns=new Uint8Array;Object.assign(he,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"target",structure:S}],methods:[],template:{memory:{array:rs},slots:{0:{structure:S,memory:{array:as},slots:{0:{structure:q,memory:{array:ns}}}}}}},slot:19});Object.assign(H,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:he}],methods:[],template:null},slot:18});const is=new Uint8Array,us=new Uint8Array,os=new Uint8Array([28,38,16,0]),ls=new Uint8Array([185,37,16,0]),ms=new Uint8Array([110,101,116,46,111,110,116,104,101,119,105,110,103,115,46,102,105,108,116,101,114,115,0]),ys=new Uint8Array([24,38,16,0]),cs=new Uint8Array([166,37,16,0]),bs=new Uint8Array([65,110,100,121,32,76,105,0]),ps=new Uint8Array([20,38,16,0]),fs=new Uint8Array([1,0,0,0]),hs=new Uint8Array([16,38,16,0]),ds=new Uint8Array([115,37,16,0]),gs=new Uint8Array([84,104,114,101,115,104,111,108,100,105,110,103,32,98,97,115,101,115,32,111,110,32,98,114,105,103,104,116,110,101,115,115,46,0]),Ss=new Uint8Array([170,170,170,170]),zs=new Uint8Array,Os=new Uint8Array([170,170,170,170]),ws=new Uint8Array,Rs=new Uint8Array([170,170,170,170]),qs=new Uint8Array;Object.assign(qe,{...t,type:2,name:"brightness-threshold.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:is}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:V},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:v},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:p},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:E},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:L},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:G},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:H}],methods:[],template:{memory:{array:us},slots:{0:{structure:V,memory:{array:os},slots:{0:{structure:W,memory:{array:ls},slots:{0:{structure:Q,memory:{array:ms}}}}}},1:{structure:v,memory:{array:ys},slots:{0:{structure:Y,memory:{array:cs},slots:{0:{structure:X,memory:{array:bs}}}}}},2:{structure:p,memory:{array:ps},slots:{0:{structure:b,memory:{array:fs}}}},3:{structure:E,memory:{array:hs},slots:{0:{structure:ee,memory:{array:ds},slots:{0:{structure:Z,memory:{array:gs}}}}}},4:{structure:L,memory:{array:Ss},slots:{0:{structure:pe,memory:{array:zs}}}},5:{structure:G,memory:{array:Os},slots:{0:{structure:fe,memory:{array:ws}}}},6:{structure:H,memory:{array:Rs},slots:{0:{structure:he,memory:{array:qs}}}}}}},slot:1});Object.assign(z,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:24});Object.assign(de,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:z}],methods:[],template:null},slot:23});Object.assign(ge,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:de}],methods:[],template:null},slot:22});Object.assign(m,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[],template:null},slot:25});const As=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(Se,{...t,type:9,name:"brightness-threshold.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:b},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:b}],methods:[],template:{memory:{array:As}}},slot:26});Object.assign(R,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:R}],methods:[],template:null},slot:27});const Us=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),js=new Uint8Array,Ps=new Uint8Array([72,37,16,0]),Cs=new Uint8Array([4,0,0,0]);Object.assign(J,{...t,type:2,name:"brightness-threshold.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:ge},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Se},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:{memory:{array:Us}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:z},{...e,type:7,isRequired:!1,name:"FPixel",structure:h},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:js},slots:{0:{structure:p,memory:{array:Ps},slots:{0:{structure:b,memory:{array:Cs}}}}}}},slot:21});const ks=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Is=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),xe=new Uint8Array([0,0,0,0,0,0,0,0]),Vs=new Uint8Array;Object.assign(A,{...t,type:2,name:"brightness-threshold.KernelInput(u8,brightness-threshold.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"source",structure:J}],methods:[],template:{memory:{array:ks},slots:{0:{structure:J,memory:{array:Is},slots:{0:{structure:ge,memory:{array:xe},address:1047200,slots:{0:{structure:de,memory:{array:Vs},address:0}}}}}}}},slot:20});Object.assign(ze,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:z}],methods:[],template:null},slot:23});Object.assign(Oe,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:ze}],methods:[],template:null},slot:30});const vs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Es=new Uint8Array,xs=new Uint8Array([72,37,16,0]),Ks=new Uint8Array([4,0,0,0]);Object.assign(N,{...t,type:2,name:"brightness-threshold.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Oe},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Se},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:{memory:{array:vs}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:z},{...e,type:7,isRequired:!1,name:"FPixel",structure:h},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:Es},slots:{0:{structure:p,memory:{array:xs},slots:{0:{structure:b,memory:{array:Ks}}}}}}},slot:29});const Ds=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Fs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ms=new Uint8Array;Object.assign(U,{...t,type:2,name:"brightness-threshold.KernelOutput(u8,brightness-threshold.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"target",structure:N}],methods:[],template:{memory:{array:Ds},slots:{0:{structure:N,memory:{array:Fs},slots:{0:{structure:Oe,memory:{array:xe},address:1047200,slots:{0:{structure:ze,memory:{array:Ms},address:0}}}}}}}},slot:28});const _s=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,0,0,0,0,128,63,0,0,0,0,0,0,0,0]);Object.assign(j,{...t,type:2,name:"brightness-threshold.KernelParameters(brightness-threshold.kernel)",length:1,byteSize:48,align:4,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:256,bitSize:64,byteSize:8,slot:0,name:"threshold",structure:te},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:128,byteSize:16,slot:1,name:"outputColor1",structure:h},{...e,type:6,isRequired:!1,bitOffset:128,bitSize:128,byteSize:16,slot:2,name:"outputColor2",structure:h}],methods:[],template:{memory:{array:_s}}},slot:31});Object.assign(Ae,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(brightness-threshold.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:47});Object.assign(Ue,{...t,type:7,name:"ErrorSet0000!brightness-threshold.KernelOutput(u8,brightness-threshold.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:U},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Ae}],methods:[],template:null},slot:36});Object.assign(je,{...t,type:3,name:"createOutput",length:1,byteSize:112,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:0,name:"0",structure:m},{...e,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:1,name:"1",structure:m},{...e,type:6,bitOffset:448,bitSize:192,byteSize:24,slot:2,name:"2",structure:A},{...e,type:6,bitOffset:0,bitSize:384,byteSize:48,slot:3,name:"3",structure:j},{...e,type:6,bitOffset:640,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Ue}],methods:[],template:null},slot:34});Object.assign(Pe,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(brightness-threshold.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:48});Object.assign(Ce,{...t,type:7,name:"ErrorSet0001!brightness-threshold.KernelOutput(u8,brightness-threshold.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:U},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Pe}],methods:[],template:null},slot:37});Object.assign(ke,{...t,type:3,name:"createPartialOutput",length:1,byteSize:128,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:0,name:"0",structure:m},{...e,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:1,name:"1",structure:m},{...e,type:3,bitOffset:448,bitSize:32,byteSize:4,slot:2,name:"2",structure:m},{...e,type:3,bitOffset:480,bitSize:32,byteSize:4,slot:3,name:"3",structure:m},{...e,type:6,bitOffset:512,bitSize:192,byteSize:24,slot:4,name:"4",structure:A},{...e,type:6,bitOffset:0,bitSize:384,byteSize:48,slot:5,name:"5",structure:j},{...e,type:6,bitOffset:704,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Ce}],methods:[],template:null},slot:35});const Ts=new Uint8Array,$s={argStruct:je,thunk:6,name:"createOutput"},Bs={argStruct:ke,thunk:1,name:"createPartialOutput"};Object.assign(Ie,{...t,type:2,name:"brightness-threshold",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Ts}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:qe},{...e,type:7,isRequired:!1,name:"Input",structure:A},{...e,type:7,isRequired:!1,name:"Output",structure:U},{...e,type:7,isRequired:!1,name:"Parameters",structure:j}],methods:[$s,Bs],template:null},slot:0});const Ls=[c,Q,W,V,X,Y,v,b,p,Z,ee,E,w,te,l,s,se,x,re,ae,K,ne,D,h,ie,F,ue,oe,M,le,_,me,T,ye,ce,$,be,B,pe,L,q,S,fe,G,he,H,qe,z,de,ge,m,Se,R,J,A,ze,Oe,N,U,j,Ae,Ue,je,Pe,Ce,ke,Ie],Gs=tt(Ls),Hs=Ie.constructor,Js=(async()=>{const i=new URL("brightness-threshold-8e32aca7.wasm",import.meta.url).href;return fetch(i)})();st(Js,{...Gs,writeBack:!0});const{createOutput:tr,createPartialOutput:Ns,kernel:Re,Input:Qs,Output:sr,Parameters:rr}=Hs;function Ws(i,o,a,r,n={},d={}){if(Array.isArray(n)){const f=n;n={};for(const[y,g]of Object.keys(Re.inputImages).entries())n[g]=f[y]}const P=new Qs(void 0),C=Object.keys(Re.inputImages),u=[];let O;for(const f of C){let y=n[f];if(y||(C.length===1&&["data","width","height"].every(g=>!!n[g])?y=n:u.push(f)),P[f]=y,O){if(y.colorSpace!==O)throw new Error(`Input images must all use the same color space: ${O}`)}else O=y.colorSpace}if(u.length>0)throw new Error(`Missing input image${u.length>1?"s":""}: ${u.join(", ")}`);const we=Ns(i,o,a,r,P,d),Ve=f=>{const y=Object.keys(f),g={};for(const ve of y){const{data:{typedArray:k},width:Ee,height:De}=f[ve];let I;if(typeof ImageData=="function"){const Fe=new Uint8ClampedArray(k.buffer,k.byteOffset,k.byteLength);I=new ImageData(Fe,Ee,r,{colorSpace:O})}else I={data:k,width:Ee,height:De};if(y.length===1)return I;g[ve]=I}return g};return we[Symbol.toStringTag]==="Promise"?we.then(Ve):Ve(we)}function Xs(){const i={};for(let[o,a]of Object.entries(Re)){if(o==="parameters"){const r={};for(const[n,d]of Object.entries(a)){const P=r[n]={};for(let[C,u]of Object.entries(d))typeof u=="object"?"string"in u?u=u.string:u=Ke(u):typeof u=="function"&&(u=Ys(u.name)),P[C]=u}a=r}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());i[o]=a}return i}function Ke(i){const o=[];for(let[a,r]of Object.entries(i))typeof r=="object"&&(r=Ke(r)),o[a]=r;return o}function Ys(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[o,a,...r]=i.data;Zs(o,r).then(([n,d])=>{postMessage([o,a,n],{transfer:d})}).catch(n=>{postMessage(["error",a,n])})};async function Zs(i,o){switch(i){case"getKernelInfo":return[Xs(...o)];case"createPartialImageData":const r=await Ws(...o),n=[];if("data"in r&&"width"in r&&"height"in r)n.push(r.data.buffer);else for(const d of Object.entries(r))n.push(r.data.buffer);return[r,n];default:throw new Error(`Unknown function: ${i}`)}}
