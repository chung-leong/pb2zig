import{u as St,a as Ot,b as zt,c as dt,d as ht,e as jt,f as wt,g as At,h as Ut,i as Pt,j as Rt,k as kt,l as qt,m as It,n as Vt,o as vt,p as Et,q as xt}from"./index-33238b17.js";St();kt();qt();Ot();zt();It();Vt();vt();dt();ht();jt();wt();xt();Et();At();Ut();Pt();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},e={type:0,isRequired:!1},s={},p={},K={},C={},M={},D={},y={},g={},T={},F={},$={},h={},_={},L={},Y={},U={},B={},P={},o={},l={},A={},x={},Z={},G={},R={},H={},k={},J={},q={},I={},z={},ee={},te={},d={},se={},re={},ae={},ge={},N={},fe={},Se={},ne={},Oe={},ie={},ze={},de={},he={},je={},we={},Ae={},Ue={},Pe={},Re={},ke={},qe={},Ie={},Ve={},ve={},Ee={},xe={},Ke={},oe={},Ce={},Me={},ce={},De={},ue={},Te={},Fe={},$e={},_e={},Le={},Be={},Ge={},me={},He={},Je={},Ne={},Qe={},We={},Xe={},Ye={},Ze={},et={},tt={},st={},rt={},at={},nt={},it={},ot={},ct={},ut={},mt={},yt={},bt={},Kt=new Uint8Array,Ct=new Uint8Array([4]),Mt=new Uint8Array,Dt=new Uint8Array,Tt=new Uint8Array([254,4,0,1]),Ft=new Uint8Array([99,111,109,46,103,97,115,117,98,97,115,117,0]),$t=new Uint8Array([22,5,0,1]),_t=new Uint8Array([103,97,115,117,98,97,115,117,0]),Lt=new Uint8Array,Bt=new Uint8Array([1]),Gt=new Uint8Array([48,5,0,1]),Ht=new Uint8Array([102,108,97,115,104,32,99,111,109,112,97,116,105,98,108,101,32,100,105,108,97,116,101,32,102,105,108,116,101,114,32,39,99,105,114,99,108,101,39,0]),Jt=new Uint8Array,Nt=new Uint8Array,Qt=new Uint8Array,Wt=new Uint8Array([0]),Xt=new Uint8Array([1]),lt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Yt=new Uint8Array,Zt=new Uint8Array,es=new Uint8Array,ts=new Uint8Array,ss=new Uint8Array([4]),ye=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),pt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),rs=new Uint8Array,as=new Uint8Array,ns=new Uint8Array,is=new Uint8Array,os=new Uint8Array([4]),be=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),cs=new Uint8Array([27,0]),us=new Uint8Array([27,0]),ms=new Uint8Array,ys=new Uint8Array,bs=new Uint8Array,ls=new Uint8Array;Object.assign(ge,{slots:{0:N}});Object.assign(N,{structure:y,memory:{array:Kt},const:!0,slots:{0:fe}});Object.assign(fe,{structure:g,memory:{array:Ct},const:!0});Object.assign(Se,{slots:{0:ne}});Object.assign(ne,{structure:h,memory:{array:Mt},const:!0,slots:{0:N}});Object.assign(Oe,{slots:{0:ie}});Object.assign(ie,{structure:h,memory:{array:Dt},const:!0,slots:{0:N}});Object.assign(ze,{slots:{0:de,1:je,2:Ae,3:Pe,4:ke,5:qe,6:Ie}});Object.assign(de,{structure:C,memory:{array:Tt},const:!0,slots:{0:he}});Object.assign(he,{structure:K,memory:{array:Ft},reloc:16778494});Object.assign(je,{structure:D,memory:{array:$t},const:!0,slots:{0:we}});Object.assign(we,{structure:M,memory:{array:_t},reloc:16778518});Object.assign(Ae,{structure:y,memory:{array:Lt},const:!0,slots:{0:Ue}});Object.assign(Ue,{structure:g,memory:{array:Bt},const:!0});Object.assign(Pe,{structure:F,memory:{array:Gt},const:!0,slots:{0:Re}});Object.assign(Re,{structure:T,memory:{array:Ht},reloc:16778544});Object.assign(ke,{structure:$,memory:{array:Jt},const:!0});Object.assign(qe,{structure:_,memory:{array:Nt},const:!0,slots:{0:ne}});Object.assign(Ie,{structure:L,memory:{array:Qt},const:!0,slots:{0:ie}});Object.assign(Ve,{slots:{0:ve,1:Ee}});Object.assign(ve,{structure:l,memory:{array:Wt},const:!0});Object.assign(Ee,{structure:l,memory:{array:Xt},const:!0});Object.assign(xe,{memory:{array:lt},slots:{0:Ke}});Object.assign(Ke,{structure:P,memory:{array:lt,offset:0,length:8},slots:{0:oe}});Object.assign(oe,{structure:B,memory:{array:Yt},reloc:0});Object.assign(Ce,{slots:{0:Me,1:De,2:Te}});Object.assign(Me,{structure:s,memory:{array:Zt},const:!0,slots:{0:ce}});Object.assign(ce,{structure:U});Object.assign(De,{structure:s,memory:{array:es},const:!0,slots:{0:ue}});Object.assign(ue,{structure:Z});Object.assign(Te,{structure:y,memory:{array:ts},const:!0,slots:{0:Fe}});Object.assign(Fe,{structure:g,memory:{array:ss},const:!0});Object.assign($e,{memory:{array:ye},slots:{0:_e}});Object.assign(_e,{structure:G,memory:{array:ye},slots:{0:Le}});Object.assign(Le,{structure:P,memory:{array:ye,offset:0,length:8},slots:{0:oe}});Object.assign(Be,{memory:{array:pt},slots:{0:Ge}});Object.assign(Ge,{structure:k,memory:{array:pt,offset:0,length:8},slots:{0:me}});Object.assign(me,{structure:H,memory:{array:rs},reloc:0});Object.assign(He,{slots:{0:Je,1:Ne,2:Qe}});Object.assign(Je,{structure:s,memory:{array:as},const:!0,slots:{0:ce}});Object.assign(Ne,{structure:s,memory:{array:ns},const:!0,slots:{0:ue}});Object.assign(Qe,{structure:y,memory:{array:is},const:!0,slots:{0:We}});Object.assign(We,{structure:g,memory:{array:os},const:!0});Object.assign(Xe,{memory:{array:be},slots:{0:Ye}});Object.assign(Ye,{structure:J,memory:{array:be},slots:{0:Ze}});Object.assign(Ze,{structure:k,memory:{array:be,offset:0,length:8},slots:{0:me}});Object.assign(et,{slots:{0:tt}});Object.assign(tt,{structure:z,memory:{array:cs},const:!0});Object.assign(st,{slots:{0:rt}});Object.assign(rt,{structure:d,memory:{array:us},const:!0});Object.assign(at,{slots:{0:nt,1:ot,2:ut,3:yt}});Object.assign(nt,{structure:s,memory:{array:ms},const:!0,slots:{0:it}});Object.assign(it,{structure:Y});Object.assign(ot,{structure:s,memory:{array:ys},const:!0,slots:{0:ct}});Object.assign(ct,{structure:R});Object.assign(ut,{structure:s,memory:{array:bs},const:!0,slots:{0:mt}});Object.assign(mt,{structure:q});Object.assign(yt,{structure:s,memory:{array:ls},const:!0,slots:{0:bt}});Object.assign(bt,{structure:I});const ps={argStruct:te,thunkId:2,name:"createOutput"},gs={argStruct:re,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...t,name:"type",align:1,instance:{members:[{...e,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(p,{...t,name:"u8",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(K,{...t,type:1,name:"[12:0]u8",length:12,byteSize:13,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(C,{...t,type:13,name:"*const [12:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,slot:0,structure:K}],methods:[]}});Object.assign(M,{...t,type:1,name:"[8:0]u8",length:8,byteSize:9,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(D,{...t,type:13,name:"*const [8:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(y,{...t,name:"comptime_int",align:1,instance:{members:[{...e,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:y}],methods:[]}});Object.assign(g,{...t,name:"i8",byteSize:1,align:1,instance:{members:[{...e,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(T,{...t,type:1,name:"[39:0]u8",length:39,byteSize:40,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(F,{...t,type:13,name:"*const [39:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[]}});Object.assign($,{...t,type:2,name:"@TypeOf(.{})",align:1,isTuple:!0});Object.assign(h,{...t,type:2,name:"Struct3832472641",align:1,instance:{members:[{...e,type:7,slot:0,name:"channels",structure:y}],methods:[],template:ge}});Object.assign(_,{...t,type:2,name:"Struct1223234931",align:1,instance:{members:[{...e,type:7,slot:0,name:"i",structure:h}],methods:[],template:Se}});Object.assign(L,{...t,type:2,name:"Struct851752505",align:1,instance:{members:[{...e,type:7,slot:0,name:"o",structure:h}],methods:[],template:Oe}});Object.assign(Y,{...t,type:2,name:"dilate-circle.kernel",align:1,static:{members:[{...e,type:7,slot:0,name:"namespace",structure:C},{...e,type:7,slot:1,name:"vendor",structure:D},{...e,type:7,slot:2,name:"version",structure:y},{...e,type:7,slot:3,name:"description",structure:F},{...e,type:7,slot:4,name:"parameters",structure:$},{...e,type:7,slot:5,name:"inputImages",structure:_},{...e,type:7,slot:6,name:"outputImages",structure:L}],methods:[],template:ze}});Object.assign(U,{...t,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(B,{...t,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,structure:U}],methods:[]}});Object.assign(P,{...t,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:64,byteSize:8,slot:0,structure:B}],methods:[]}});Object.assign(o,{...t,name:"u32",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:o}],methods:[]}});Object.assign(l,{...t,type:11,name:"dilate-circle.ColorSpace",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:l}],methods:[]},static:{members:[{...e,type:7,slot:0,name:"srgb",structure:l},{...e,type:7,slot:1,name:"display-p3",structure:l}],methods:[],template:Ve}});Object.assign(A,{...t,name:"usize",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:A}],methods:[]}});Object.assign(x,{...t,name:"f32",byteSize:4,align:4,instance:{members:[{...e,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:x}],methods:[]}});Object.assign(Z,{...t,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...e,type:4,bitSize:32,byteSize:4,structure:x}],methods:[]}});Object.assign(G,{...t,type:2,name:"dilate-circle.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:P},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:o},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:o},{...e,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:l},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:A}],methods:[],template:xe},static:{members:[{...e,type:7,slot:0,name:"Pixel",structure:s},{...e,type:7,slot:1,name:"FPixel",structure:s},{...e,type:7,slot:2,name:"channels",structure:y}],methods:[],template:Ce}});Object.assign(R,{...t,type:2,name:"dilate-circle.KernelInput(u8,dilate-circle.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"i",structure:G}],methods:[],template:$e}});Object.assign(H,{...t,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,structure:U}],methods:[]}});Object.assign(k,{...t,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:64,byteSize:8,slot:0,structure:H}],methods:[]}});Object.assign(J,{...t,type:2,name:"dilate-circle.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:k},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:o},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:o},{...e,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:l},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:A}],methods:[],template:Be},static:{members:[{...e,type:7,slot:0,name:"Pixel",structure:s},{...e,type:7,slot:1,name:"FPixel",structure:s},{...e,type:7,slot:2,name:"channels",structure:y}],methods:[],template:He}});Object.assign(q,{...t,type:2,name:"dilate-circle.KernelOutput(u8,dilate-circle.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"o",structure:J}],methods:[],template:Xe}});Object.assign(I,{...t,type:2,name:"dilate-circle.KernelParameters(dilate-circle.kernel)",align:1});Object.assign(z,{...t,type:10,name:"ErrorSet1637745258",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:z}],methods:[]},static:{members:[{...e,type:7,slot:0,name:"OutOfMemory",structure:z}],methods:[],template:et}});Object.assign(ee,{...t,type:9,name:"ErrorSet1637745258!dilate-circle.KernelOutput(u8,dilate-circle.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:q},{...e,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:z}],methods:[]}});Object.assign(te,{...t,type:5,name:"createOutput",byteSize:60,align:4,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:o},{...e,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:o},{...e,type:5,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:R},{...e,type:5,isRequired:!0,bitOffset:480,bitSize:0,byteSize:0,slot:1,name:"3",structure:I},{...e,type:5,isRequired:!0,bitOffset:256,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ee}],methods:[]}});Object.assign(d,{...t,type:10,name:"ErrorSet1221407770",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:d}],methods:[]},static:{members:[{...e,type:7,slot:0,name:"OutOfMemory",structure:d}],methods:[],template:st}});Object.assign(se,{...t,type:9,name:"ErrorSet1221407770!dilate-circle.KernelOutput(u8,dilate-circle.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:q},{...e,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:d}],methods:[]}});Object.assign(re,{...t,type:5,name:"createPartialOutput",byteSize:68,align:4,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:o},{...e,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:o},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:o},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:o},{...e,type:5,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:R},{...e,type:5,isRequired:!0,bitOffset:544,bitSize:0,byteSize:0,slot:1,name:"5",structure:I},{...e,type:5,isRequired:!0,bitOffset:320,bitSize:224,byteSize:28,slot:2,name:"retval",structure:se}],methods:[]}});Object.assign(ae,{...t,type:2,name:"dilate-circle",align:1,static:{members:[{...e,type:7,slot:0,name:"kernel",structure:s},{...e,type:7,slot:1,name:"Input",structure:s},{...e,type:7,slot:2,name:"Output",structure:s},{...e,type:7,slot:3,name:"Parameters",structure:s}],methods:[ps,gs],template:at}});const fs=[s,p,K,C,M,D,y,g,T,F,$,h,_,L,Y,U,B,P,o,l,A,x,Z,G,R,H,k,J,q,I,z,ee,te,d,se,re,ae],Ss=ae,Os={runtimeSafety:!1,littleEndian:!0},Q=Rt();Q.getSpecialExports();Q.recreateStructures(fs,Os);const zs=(async()=>{const n=new URL("dilate-circle-7e95fb24.wasm",import.meta.url).href;return fetch(n)})();Q.loadModule(zs);Q.linkVariables(!0);const{constructor:ds}=Ss,{createPartialOutput:hs,Input:js,kernel:X}=ds;function ws(n,c,i,a,r={},f={}){const S=[];for(const[m]of X.inputImages)S.push(m);const j=[];for(const[m]of X.outputImages)j.push(m);if(Array.isArray(r)){const m=r;r={};for(const[b,O]of S.entries())r[O]=m[b]}const u=new js(void 0),V=[];let w;for(const m of S){let b=r[m];if(b||(S.length===1&&["data","width","height"].every(O=>!!r[O])?b=r:V.push(m)),u[m]=b,w){if(b.colorSpace!==w)throw new Error(`Input images must all use the same color space: ${w}`)}else w=b.colorSpace}if(V.length>0)throw new Error(`Missing input image${V.length>1?"s":""}: ${V.join(", ")}`);const W=hs(n,c,i,a,u,f),le=m=>{const b={};for(const O of j){const{data:{typedArray:v},width:pe,height:gt}=m[O];let E;if(typeof ImageData=="function"){const ft=new Uint8ClampedArray(v.buffer,v.byteOffset,v.byteLength);E=new ImageData(ft,pe,a,{colorSpace:w})}else E={data:v,width:pe,height:gt};if(j.length===1)return E;b[O]=E}return b};return W[Symbol.toStringTag]==="Promise"?W.then(le):le(W)}function As(){const n={};for(let[c,i]of X){if(c==="parameters"){const a={};for(const[r,f]of i){const S=a[r]={};for(let[j,u]of f)typeof u=="object"?u=u.string??u.valueOf():typeof u=="function"&&(u=Us(u.name)),S[j]=u}i=a}else typeof i=="object"&&(i=i.string??i.valueOf());n[c]=i}return n}function Us(n){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[n]}onmessage=async n=>{if(!Array.isArray(n.data))return;const[c,i,...a]=n.data;try{const[r,f]=await Ps(c,a);postMessage([c,i,r],{transfer:f})}catch(r){postMessage(["error",i,r])}};async function Ps(n,c){switch(n){case"getKernelInfo":return[As(...c)];case"createPartialImageData":const a=await ws(...c),r=[];if("data"in a&&"width"in a&&"height"in a)r.push(a.data.buffer);else for(const f of Object.entries(a))r.push(a.data.buffer);return[a,r];default:throw new Error(`Unknown function: ${n}`)}}postMessage("ready");
