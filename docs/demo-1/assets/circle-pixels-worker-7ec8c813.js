import{u as Ie,a as ve,b as Ee,c as Ke,d as De,e as Fe,f as Me,g as _e,h as Te,i as $e,j as Be,k as Le,l as Ge,m as He,o as Je,n as Ne,p as Qe,q as We}from"./index-422d9c98.js";Ie();ve();Ee();Ke();De();Fe();Me();_e();Te();$e();Be();Le();Ge();He();Je();Ne();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},b={},H={},J={},k={},N={},Q={},I={},p={},f={},W={},X={},v={},y={},m={},r={},Y={},Z={},E={},ee={},K={},te={},se={},D={},re={},F={},ae={},ne={},M={},ie={},_={},ue={},T={},w={},z={},le={},$={},oe={},B={},he={},O={},me={},ce={},o={},ye={},q={},be={},L={},A={},pe={},fe={},G={},U={},j={},ge={},ze={},Oe={},Re={},qe={},we={},Ae={};Object.assign(b,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:5});Object.assign(H,{...t,type:1,name:"[19:0]u8",length:19,byteSize:20,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:4});Object.assign(J,{...t,type:11,name:"*const [19:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[],template:null},slot:3});Object.assign(k,{...t,type:11,name:"*const *const [19:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:J}],methods:[],template:null},slot:2});Object.assign(N,{...t,type:1,name:"[17:0]u8",length:17,byteSize:18,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:8});Object.assign(Q,{...t,type:11,name:"*const [17:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:N}],methods:[],template:null},slot:7});Object.assign(I,{...t,type:11,name:"*const *const [17:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[],template:null},slot:6});Object.assign(p,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[],template:null},slot:10});Object.assign(f,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:p}],methods:[],template:null},slot:9});Object.assign(W,{...t,type:1,name:"[12:0]u8",length:12,byteSize:13,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:13});Object.assign(X,{...t,type:11,name:"*const [12:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:12});Object.assign(v,{...t,type:11,name:"*const *const [12:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:11});Object.assign(y,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:32});Object.assign(m,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:m}],methods:[],template:null},slot:49});Object.assign(r,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:m}],methods:[],template:null},slot:48});Object.assign(Y,{...t,type:1,name:"[8:0]u8",length:8,byteSize:9,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:52});Object.assign(Z,{...t,type:11,name:"*const [8:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[],template:null},slot:51});Object.assign(E,{...t,type:11,name:"*const *const [8:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:50});const Xe=new Uint8Array([]),Ye=new Uint8Array([16,249,15,0]),Ze=new Uint8Array([0,0,0,0,0,0,240,63]),et=new Uint8Array([56,249,15,0]),tt=new Uint8Array([0,0,0,0,0,192,114,64]),st=new Uint8Array([96,249,15,0]),rt=new Uint8Array([0,0,0,0,0,0,89,64]),at=new Uint8Array([136,249,15,0]),nt=new Uint8Array([104,5,16,0]),it=new Uint8Array([100,105,115,116,97,110,99,101,0]);Object.assign(ee,{...t,type:2,name:"Struct0010",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:E}],methods:[],template:{memory:{array:Xe},slots:{0:{structure:r,memory:{array:Ye},slots:{0:{structure:m,memory:{array:Ze}}}},1:{structure:r,memory:{array:et},slots:{0:{structure:m,memory:{array:tt}}}},2:{structure:r,memory:{array:st},slots:{0:{structure:m,memory:{array:rt}}}},3:{structure:E,memory:{array:at},slots:{0:{structure:Z,memory:{array:nt},slots:{0:{structure:Y,memory:{array:it},address:1049960}}}}}}}},slot:38});Object.assign(K,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:37});Object.assign(te,{...t,type:1,name:"[4:0]u8",length:4,byteSize:5,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:55});Object.assign(se,{...t,type:11,name:"*const [4:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:54});Object.assign(D,{...t,type:11,name:"*const *const [4:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:53});const ut=new Uint8Array([]),lt=new Uint8Array([16,249,15,0]),ot=new Uint8Array([0,0,0,0,0,0,0,0]),mt=new Uint8Array([56,249,15,0]),ct=new Uint8Array([0,0,0,0,0,0,0,64]),yt=new Uint8Array([96,249,15,0]),bt=new Uint8Array([0,0,0,0,0,0,240,63]),pt=new Uint8Array([136,249,15,0]),ft=new Uint8Array([99,5,16,0]),dt=new Uint8Array([115,105,122,101,0]);Object.assign(re,{...t,type:2,name:"Struct0011",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:D}],methods:[],template:{memory:{array:ut},slots:{0:{structure:r,memory:{array:lt},slots:{0:{structure:m,memory:{array:ot}}}},1:{structure:r,memory:{array:mt},slots:{0:{structure:m,memory:{array:ct}}}},2:{structure:r,memory:{array:yt},slots:{0:{structure:m,memory:{array:bt}}}},3:{structure:D,memory:{array:pt},slots:{0:{structure:se,memory:{array:ft},slots:{0:{structure:te,memory:{array:dt},address:1049955}}}}}}}},slot:40});Object.assign(F,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:39});Object.assign(ae,{...t,type:1,name:"[9:0]u8",length:9,byteSize:10,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:58});Object.assign(ne,{...t,type:11,name:"*const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:57});Object.assign(M,{...t,type:11,name:"*const *const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:56});const St=new Uint8Array([]),ht=new Uint8Array([16,249,15,0]),gt=new Uint8Array([0,0,0,0,0,0,0,0]),zt=new Uint8Array([56,249,15,0]),Ot=new Uint8Array([0,0,0,0,0,192,114,64]),Rt=new Uint8Array([96,249,15,0]),qt=new Uint8Array([0,0,0,0,0,0,0,64]),wt=new Uint8Array([136,249,15,0]),At=new Uint8Array([89,5,16,0]),Ut=new Uint8Array([101,100,103,101,65,108,112,104,97,0]);Object.assign(ie,{...t,type:2,name:"Struct0012",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:M}],methods:[],template:{memory:{array:St},slots:{0:{structure:r,memory:{array:ht},slots:{0:{structure:m,memory:{array:gt}}}},1:{structure:r,memory:{array:zt},slots:{0:{structure:m,memory:{array:Ot}}}},2:{structure:r,memory:{array:Rt},slots:{0:{structure:m,memory:{array:qt}}}},3:{structure:M,memory:{array:wt},slots:{0:{structure:ne,memory:{array:At},slots:{0:{structure:ae,memory:{array:Ut},address:1049945}}}}}}}},slot:42});Object.assign(_,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:41});const jt=new Uint8Array([]),Pt=new Uint8Array([170,170,170,170]),S=new Uint8Array([]),xt=new Uint8Array([170,170,170,170]),Vt=new Uint8Array([170,170,170,170]);Object.assign(ue,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dist",structure:K},{...e,type:8,isRequired:!1,slot:1,name:"size",structure:F},{...e,type:8,isRequired:!1,slot:2,name:"edgeAlpha",structure:_}],methods:[],template:{memory:{array:jt},slots:{0:{structure:K,memory:{array:Pt},slots:{0:{structure:ee,memory:{array:S},address:-1431655766}}},1:{structure:F,memory:{array:xt},slots:{0:{structure:re,memory:{array:S},address:-1431655766}}},2:{structure:_,memory:{array:Vt},slots:{0:{structure:ie,memory:{array:S},address:-1431655766}}}}}},slot:15});Object.assign(T,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:14});const Ct=new Uint8Array([]),kt=new Uint8Array([48,250,15,0]),It=new Uint8Array([4,0,0,0]);Object.assign(w,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:Ct},slots:{0:{structure:f,memory:{array:kt},slots:{0:{structure:p,memory:{array:It}}}}}}},slot:44});Object.assign(z,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:w}],methods:[],template:null},slot:43});const vt=new Uint8Array([]),Et=new Uint8Array([170,170,170,170]);Object.assign(le,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:z}],methods:[],template:{memory:{array:vt},slots:{0:{structure:z,memory:{array:Et},slots:{0:{structure:w,memory:{array:S},address:-1431655766}}}}}},slot:17});Object.assign($,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:16});const Kt=new Uint8Array([]),Dt=new Uint8Array([170,170,170,170]);Object.assign(oe,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:z}],methods:[],template:{memory:{array:Kt},slots:{0:{structure:z,memory:{array:Dt},slots:{0:{structure:w,memory:{array:S},address:-1431655766}}}}}},slot:19});Object.assign(B,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:18});const Ft=new Uint8Array([]),Mt=new Uint8Array([]),_t=new Uint8Array([28,251,15,0]),Tt=new Uint8Array([26,9,16,0]),$t=new Uint8Array([98,101,46,110,101,117,114,111,112,114,111,100,117,99,116,105,111,110,115,0]),Bt=new Uint8Array([92,251,15,0]),Lt=new Uint8Array([8,9,16,0]),Gt=new Uint8Array([78,101,117,114,111,32,80,114,111,100,117,99,116,105,111,110,115,0]),Ht=new Uint8Array([156,251,15,0]),Jt=new Uint8Array([1,0,0,0]),Nt=new Uint8Array([244,251,15,0]),Qt=new Uint8Array([251,8,16,0]),Wt=new Uint8Array([99,105,114,99,108,101,80,105,120,101,108,115,0]),Xt=new Uint8Array([170,170,170,170]),Yt=new Uint8Array([170,170,170,170]),Zt=new Uint8Array([170,170,170,170]);Object.assign(he,{...t,type:2,name:"circle-pixels.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Ft}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:k},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:I},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:f},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:v},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:T},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:$},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:B}],methods:[],template:{memory:{array:Mt},slots:{0:{structure:k,memory:{array:_t},slots:{0:{structure:J,memory:{array:Tt},slots:{0:{structure:H,memory:{array:$t},address:1050906}}}}},1:{structure:I,memory:{array:Bt},slots:{0:{structure:Q,memory:{array:Lt},slots:{0:{structure:N,memory:{array:Gt},address:1050888}}}}},2:{structure:f,memory:{array:Ht},slots:{0:{structure:p,memory:{array:Jt}}}},3:{structure:v,memory:{array:Nt},slots:{0:{structure:X,memory:{array:Qt},slots:{0:{structure:W,memory:{array:Wt},address:1050875}}}}},4:{structure:T,memory:{array:Xt},slots:{0:{structure:ue,memory:{array:S},address:-1431655766}}},5:{structure:$,memory:{array:Yt},slots:{0:{structure:le,memory:{array:S},address:-1431655766}}},6:{structure:B,memory:{array:Zt},slots:{0:{structure:oe,memory:{array:S},address:-1431655766}}}}}},slot:1});Object.assign(O,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:24});Object.assign(me,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:23});Object.assign(ce,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:me}],methods:[],template:null},slot:22});Object.assign(o,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:o}],methods:[],template:null},slot:25});const es=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(ye,{...t,type:9,name:"circle-pixels.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:p},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:p}],methods:[],template:{memory:{array:es}}},slot:26});Object.assign(q,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:27});Object.assign(be,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:45});const ts=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ss=new Uint8Array([]),rs=new Uint8Array([216,249,15,0]),as=new Uint8Array([4,0,0,0]);Object.assign(L,{...t,type:2,name:"circle-pixels.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:ce},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:o},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:o},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ye},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:q}],methods:[],template:{memory:{array:ts}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:be},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:ss},slots:{0:{structure:f,memory:{array:rs},slots:{0:{structure:p,memory:{array:as}}}}}}},slot:21});const ns=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),is=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),us=new Uint8Array([0,0,0,0,0,0,0,0]),Ue=new Uint8Array([]);Object.assign(A,{...t,type:2,name:"circle-pixels.KernelInput(u8,circle-pixels.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:L}],methods:[],template:{memory:{array:ns},slots:{0:{structure:L,memory:{array:is},slots:{0:{structure:ce,memory:{array:us},slots:{0:{structure:me,memory:{array:Ue}}}}}}}}},slot:20});Object.assign(pe,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:23});Object.assign(fe,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:pe}],methods:[],template:null},slot:30});const ls=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),os=new Uint8Array([]),ms=new Uint8Array([216,249,15,0]),cs=new Uint8Array([4,0,0,0]);Object.assign(G,{...t,type:2,name:"circle-pixels.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:fe},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:o},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:o},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ye},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:q}],methods:[],template:{memory:{array:ls}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:be},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:os},slots:{0:{structure:f,memory:{array:ms},slots:{0:{structure:p,memory:{array:cs}}}}}}},slot:29});const ys=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),bs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ps=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(U,{...t,type:2,name:"circle-pixels.KernelOutput(u8,circle-pixels.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:G}],methods:[],template:{memory:{array:ys},slots:{0:{structure:G,memory:{array:bs},slots:{0:{structure:fe,memory:{array:ps},slots:{0:{structure:pe,memory:{array:Ue}}}}}}}}},slot:28});const fs=new Uint8Array([0,0,200,66,0,0,128,63,0,0,0,64]);Object.assign(j,{...t,type:2,name:"circle-pixels.KernelParameters(circle-pixels.kernel)",length:1,byteSize:12,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"dist",structure:y},{...e,type:4,isRequired:!1,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"size",structure:y},{...e,type:4,isRequired:!1,bitOffset:64,bitSize:32,byteSize:4,slot:2,name:"edgeAlpha",structure:y}],methods:[],template:{memory:{array:fs}}},slot:31});Object.assign(ge,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(circle-pixels.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:46});Object.assign(ze,{...t,type:7,name:"ErrorSet0000!circle-pixels.KernelOutput(u8,circle-pixels.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:U},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:ge}],methods:[],template:null},slot:35});Object.assign(Oe,{...t,type:3,name:"createOutput",length:1,byteSize:72,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"0",structure:o},{...e,type:3,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"1",structure:o},{...e,type:6,bitOffset:64,bitSize:192,byteSize:24,slot:2,name:"2",structure:A},{...e,type:6,bitOffset:256,bitSize:96,byteSize:12,slot:3,name:"3",structure:j},{...e,type:6,bitOffset:352,bitSize:224,byteSize:28,slot:4,name:"retval",structure:ze}],methods:[],template:null},slot:33});Object.assign(Re,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(circle-pixels.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:47});Object.assign(qe,{...t,type:7,name:"ErrorSet0001!circle-pixels.KernelOutput(u8,circle-pixels.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:U},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Re}],methods:[],template:null},slot:36});Object.assign(we,{...t,type:3,name:"createPartialOutput",length:1,byteSize:80,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"0",structure:o},{...e,type:3,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"1",structure:o},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:2,name:"2",structure:o},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:3,name:"3",structure:o},{...e,type:6,bitOffset:128,bitSize:192,byteSize:24,slot:4,name:"4",structure:A},{...e,type:6,bitOffset:320,bitSize:96,byteSize:12,slot:5,name:"5",structure:j},{...e,type:6,bitOffset:416,bitSize:224,byteSize:28,slot:6,name:"retval",structure:qe}],methods:[],template:null},slot:34});const ds={argStruct:Oe,thunk:1,name:"createOutput"},Ss={argStruct:we,thunk:5,name:"createPartialOutput"};Object.assign(Ae,{...t,type:2,name:"circle-pixels",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Ue}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:he},{...e,type:7,isRequired:!1,name:"Input",structure:A},{...e,type:7,isRequired:!1,name:"Output",structure:U},{...e,type:7,isRequired:!1,name:"Parameters",structure:j}],methods:[ds,Ss],template:null},slot:0});const hs=[b,H,J,k,N,Q,I,p,f,W,X,v,y,m,r,Y,Z,E,ee,K,te,se,D,re,F,ae,ne,M,ie,_,ue,T,w,z,le,$,oe,B,he,O,me,ce,o,ye,q,be,L,A,pe,fe,G,U,j,ge,ze,Oe,Re,qe,we,Ae],gs=Qe(hs),zs=Ae.constructor,Os=(async()=>{const i=new URL("circle-pixels-cfcf5dce.wasm",import.meta.url).href;return fetch(i)})();We(Os,{...gs,writeBack:!0});const{createOutput:xs,createPartialOutput:Rs,kernel:Se,Input:qs,Output:Vs,Parameters:Cs}=zs;function ws(i,l,a,s,n={},h={}){if(Array.isArray(n)){const d=n;n={};for(const[c,g]of Object.keys(Se.inputImages).entries())n[g]=d[c]}const P=new qs(void 0),x=Object.keys(Se.inputImages),u=[];let R;for(const d of x){let c=n[d];if(c||(x.length===1&&["data","width","height"].every(g=>!!n[g])?c=n:u.push(d)),P[d]=c,R){if(c.colorSpace!==R)throw new Error(`Input images must all use the same color space: ${R}`)}else R=c.colorSpace}if(u.length>0)throw new Error(`Missing input image${u.length>1?"s":""}: ${u.join(", ")}`);const de=Rs(i,l,a,s,P,h),je=d=>{const c=Object.keys(d),g={};for(const Pe of c){const{data:{typedArray:V},width:xe,height:Ce}=d[Pe];let C;if(typeof ImageData=="function"){const ke=new Uint8ClampedArray(V.buffer,V.byteOffset,V.byteLength);C=new ImageData(ke,xe,s,{colorSpace:R})}else C={data:V,width:xe,height:Ce};if(c.length===1)return C;g[Pe]=C}return g};return de[Symbol.toStringTag]==="Promise"?de.then(je):je(de)}function As(){const i={};for(let[l,a]of Object.entries(Se)){if(l==="parameters"){const s={};for(const[n,h]of Object.entries(a)){const P=s[n]={};for(let[x,u]of Object.entries(h))typeof u=="object"?"string"in u?u=u.string:u=Ve(u):typeof u=="function"&&(u=Us(u.name)),P[x]=u}a=s}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());i[l]=a}return i}function Ve(i){const l=[];for(let[a,s]of Object.entries(i))typeof s=="object"&&(s=Ve(s)),l[a]=s;return l}function Us(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[l,a,...s]=i.data;js(l,s).then(([n,h])=>{postMessage([l,a,n],{transfer:h})}).catch(n=>{postMessage(["error",a,n])})};async function js(i,l){switch(i){case"getKernelInfo":return[As(...l)];case"createPartialImageData":const s=await ws(...l),n=[];if("data"in s&&"width"in s&&"height"in s)n.push(s.data.buffer);else for(const h of Object.entries(s))n.push(s.data.buffer);return[s,n];default:throw new Error(`Unknown function: ${i}`)}}
