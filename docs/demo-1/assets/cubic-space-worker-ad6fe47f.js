import{u as Ze,a as $e,b as Le,d as He,c as Je,e as Ne,f as Qe,g as We,h as tm,i as em,j as mm,k as om,l as rm,m as sm,n as am,o as im,p as cm,q as pm,r as lm}from"./index-9f315e7a.js";Ze();$e();Le();He();Je();Ne();Qe();We();tm();em();mm();om();rm();sm();am();im();cm();const m={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},t={type:0,isRequired:!0},V={},F={},D={},j={},kt={},Gt={},rt={},_={},R={},d={},C={},o={},e={},vt={},st={},Et={},at={},Kt={},it={},Z={},$={},I={},Ft={},ct={},Dt={},pt={},Mt={},lt={},Xt={},ut={},Yt={},nt={},Zt={},yt={},$t={},ft={},Lt={},dt={},p={},A={},w={},h={},k={},G={},q={},M={},x={},Ht={},_t={},Jt={},bt={},Nt={},ht={},Qt={},gt={},Wt={},P={},S={},te={},St={},ee={},zt={},T={},z={},me={},Vt={},oe={},Rt={},re={},At={},se={},qt={},ae={},wt={},ie={},Ut={},ce={},Ot={},pe={},jt={},le={},xt={},Pt={},L={},B={},ue={},Tt={},ne={},Ct={},Ve={},v={},ye={},fe={},f={},de={},X={},Y={},It={},H={},_e={},be={},Bt={},J={},N={},Re={},Ae={},qe={},we={},Ue={},Oe={},je={};Object.assign(V,{...m,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...t,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:V}],methods:[],template:null},slot:5});Object.assign(F,{...m,type:1,name:"[10:0]u8",length:10,byteSize:11,align:0,instance:{members:[{...t,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:V}],methods:[],template:null},slot:4});Object.assign(D,{...m,type:11,name:"*const [10:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[],template:null},slot:3});Object.assign(j,{...m,type:11,name:"**const [10:0]u8",length:1,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:D}],methods:[],template:null},slot:2});Object.assign(kt,{...m,type:1,name:"[14:0]u8",length:14,byteSize:15,align:0,instance:{members:[{...t,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:V}],methods:[],template:null},slot:8});Object.assign(Gt,{...m,type:11,name:"*const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:kt}],methods:[],template:null},slot:7});Object.assign(rt,{...m,type:11,name:"**const [14:0]u8",length:1,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Gt}],methods:[],template:null},slot:6});Object.assign(_,{...m,name:"i32",length:1,instance:{members:[{...t,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:_}],methods:[],template:null},slot:10});Object.assign(R,{...m,type:11,name:"*i32",length:1,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[],template:null},slot:9});Object.assign(d,{...m,name:"f32",length:1,instance:{members:[{...t,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:d}],methods:[],template:null},slot:31});Object.assign(C,{...m,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...t,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:d}],methods:[],template:null},slot:30});Object.assign(o,{...m,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...t,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:o}],methods:[],template:null},slot:70});Object.assign(e,{...m,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:o}],methods:[],template:null},slot:69});const um=new Uint8Array([]),nm=new Uint8Array([136,30,16,0]),Ge=new Uint8Array([0,0,0,0,0,0,105,192]),ym=new Uint8Array([136,30,16,0]);Object.assign(vt,{...m,type:2,name:"struct{comptime comptime_float = -200, comptime comptime_float = -200}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"0",structure:e},{...t,type:8,isRequired:!1,slot:1,name:"1",structure:e}],methods:[],template:{memory:{array:um},slots:{0:{structure:e,memory:{array:nm},slots:{0:{structure:o,memory:{array:Ge},address:1056392}}},1:{structure:e,memory:{array:ym},slots:{0:{structure:o,memory:{array:Ge},address:1056392}}}}}},slot:61});Object.assign(st,{...m,type:11,name:"*const struct{comptime comptime_float = -200, comptime comptime_float = -200}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:vt}],methods:[],template:null},slot:60});const fm=new Uint8Array([]),dm=new Uint8Array([72,30,16,0]),K=new Uint8Array([0,0,0,0,0,64,127,64]),_m=new Uint8Array([72,30,16,0]);Object.assign(Et,{...m,type:2,name:"struct{comptime comptime_float = 500, comptime comptime_float = 500}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"0",structure:e},{...t,type:8,isRequired:!1,slot:1,name:"1",structure:e}],methods:[],template:{memory:{array:fm},slots:{0:{structure:e,memory:{array:dm},slots:{0:{structure:o,memory:{array:K},address:1056328}}},1:{structure:e,memory:{array:_m},slots:{0:{structure:o,memory:{array:K},address:1056328}}}}}},slot:63});Object.assign(at,{...m,type:11,name:"*const struct{comptime comptime_float = 500, comptime comptime_float = 500}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Et}],methods:[],template:null},slot:62});const bm=new Uint8Array([]),hm=new Uint8Array([128,30,16,0]),Ke=new Uint8Array([0,0,0,0,0,192,114,64]),gm=new Uint8Array([120,30,16,0]),Sm=new Uint8Array([0,0,0,0,0,0,105,64]);Object.assign(Kt,{...m,type:2,name:"struct{comptime comptime_float = 300, comptime comptime_float = 200}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"0",structure:e},{...t,type:8,isRequired:!1,slot:1,name:"1",structure:e}],methods:[],template:{memory:{array:bm},slots:{0:{structure:e,memory:{array:hm},slots:{0:{structure:o,memory:{array:Ke},address:1056384}}},1:{structure:e,memory:{array:gm},slots:{0:{structure:o,memory:{array:Sm},address:1056376}}}}}},slot:65});Object.assign(it,{...m,type:11,name:"*const struct{comptime comptime_float = 300, comptime comptime_float = 200}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Kt}],methods:[],template:null},slot:64});Object.assign(Z,{...m,type:1,name:"[8:0]u8",length:8,byteSize:9,align:0,instance:{members:[{...t,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:V}],methods:[],template:null},slot:68});Object.assign($,{...m,type:11,name:"*const [8:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:67});Object.assign(I,{...m,type:11,name:"*const *const [8:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[],template:null},slot:66});const zm=new Uint8Array([]),Vm=new Uint8Array([170,170,170,170]),r=new Uint8Array([]),Rm=new Uint8Array([170,170,170,170]),Am=new Uint8Array([170,170,170,170]),qm=new Uint8Array([176,30,16,0]),Fe=new Uint8Array([226,30,16,0]),De=new Uint8Array([112,111,115,105,116,105,111,110,0]);Object.assign(Ft,{...m,type:2,name:'struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = -200, comptime comptime_float = -200} = .{-200, -200}, comptime maxValue: struct{comptime comptime_float = 500, comptime comptime_float = 500} = .{500, 500}, comptime defaultValue: struct{comptime comptime_float = 300, comptime comptime_float = 200} = .{300, 200}, comptime parameterType: *const [8:0]u8 = "position"}',length:1,byteSize:0,align:0,instance:{members:[{...t,type:7,isRequired:!1,name:"type",structure:C},{...t,type:8,isRequired:!1,slot:0,name:"minValue",structure:st},{...t,type:8,isRequired:!1,slot:1,name:"maxValue",structure:at},{...t,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:it},{...t,type:8,isRequired:!1,slot:3,name:"parameterType",structure:I}],methods:[],template:{memory:{array:zm},slots:{0:{structure:st,memory:{array:Vm},slots:{0:{structure:vt,memory:{array:r},address:-1431655766}}},1:{structure:at,memory:{array:Rm},slots:{0:{structure:Et,memory:{array:r},address:-1431655766}}},2:{structure:it,memory:{array:Am},slots:{0:{structure:Kt,memory:{array:r},address:-1431655766}}},3:{structure:I,memory:{array:qm},slots:{0:{structure:$,memory:{array:Fe},address:1056432,slots:{0:{structure:Z,memory:{array:De},address:1056482}}}}}}}},slot:39});Object.assign(ct,{...m,type:11,name:'*const struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = -200, comptime comptime_float = -200} = .{-200, -200}, comptime maxValue: struct{comptime comptime_float = 500, comptime comptime_float = 500} = .{500, 500}, comptime defaultValue: struct{comptime comptime_float = 300, comptime comptime_float = 200} = .{300, 200}, comptime parameterType: *const [8:0]u8 = "position"}',length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ft}],methods:[],template:null},slot:38});const wm=new Uint8Array([]),Um=new Uint8Array([208,30,16,0]),Om=new Uint8Array([0,0,0,0,0,0,36,64]),jm=new Uint8Array([128,30,16,0]),xm=new Uint8Array([200,30,16,0]),Pm=new Uint8Array([0,0,0,0,0,0,89,64]);Object.assign(Dt,{...m,type:2,name:"struct{comptime type: type = f32, comptime minValue: comptime_float = 10, comptime maxValue: comptime_float = 300, comptime defaultValue: comptime_float = 100}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:7,isRequired:!1,name:"type",structure:d},{...t,type:8,isRequired:!1,slot:0,name:"minValue",structure:e},{...t,type:8,isRequired:!1,slot:1,name:"maxValue",structure:e},{...t,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:e}],methods:[],template:{memory:{array:wm},slots:{0:{structure:e,memory:{array:Um},slots:{0:{structure:o,memory:{array:Om},address:1056464}}},1:{structure:e,memory:{array:jm},slots:{0:{structure:o,memory:{array:Ke},address:1056384}}},2:{structure:e,memory:{array:xm},slots:{0:{structure:o,memory:{array:Pm},address:1056456}}}}}},slot:41});Object.assign(pt,{...m,type:11,name:"*const struct{comptime type: type = f32, comptime minValue: comptime_float = 10, comptime maxValue: comptime_float = 300, comptime defaultValue: comptime_float = 100}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Dt}],methods:[],template:null},slot:40});const Tm=new Uint8Array([]),Cm=new Uint8Array([64,30,16,0]),l=new Uint8Array([0,0,0,0,0,0,0,0]),Im=new Uint8Array([48,30,16,0]),c=new Uint8Array([0,0,0,0,0,0,240,63]),Bm=new Uint8Array([96,30,16,0]),mt=new Uint8Array([154,153,153,153,153,153,233,63]);Object.assign(Mt,{...m,type:2,name:"struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0.8}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:7,isRequired:!1,name:"type",structure:d},{...t,type:8,isRequired:!1,slot:0,name:"minValue",structure:e},{...t,type:8,isRequired:!1,slot:1,name:"maxValue",structure:e},{...t,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:e}],methods:[],template:{memory:{array:Tm},slots:{0:{structure:e,memory:{array:Cm},slots:{0:{structure:o,memory:{array:l},address:1056320}}},1:{structure:e,memory:{array:Im},slots:{0:{structure:o,memory:{array:c},address:1056304}}},2:{structure:e,memory:{array:Bm},slots:{0:{structure:o,memory:{array:mt},address:1056352}}}}}},slot:43});Object.assign(lt,{...m,type:11,name:"*const struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0.8}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Mt}],methods:[],template:null},slot:42});const km=new Uint8Array([]),Gm=new Uint8Array([56,30,16,0]),Se=new Uint8Array([0,0,0,0,0,0,73,64]),vm=new Uint8Array([192,30,16,0]),Em=new Uint8Array([0,0,0,0,0,64,143,64]),Km=new Uint8Array([184,30,16,0]),Fm=new Uint8Array([0,0,0,0,0,64,111,64]);Object.assign(Xt,{...m,type:2,name:"struct{comptime type: type = f32, comptime minValue: comptime_float = 50, comptime maxValue: comptime_float = 1000, comptime defaultValue: comptime_float = 250}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:7,isRequired:!1,name:"type",structure:d},{...t,type:8,isRequired:!1,slot:0,name:"minValue",structure:e},{...t,type:8,isRequired:!1,slot:1,name:"maxValue",structure:e},{...t,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:e}],methods:[],template:{memory:{array:km},slots:{0:{structure:e,memory:{array:Gm},slots:{0:{structure:o,memory:{array:Se},address:1056312}}},1:{structure:e,memory:{array:vm},slots:{0:{structure:o,memory:{array:Em},address:1056448}}},2:{structure:e,memory:{array:Km},slots:{0:{structure:o,memory:{array:Fm},address:1056440}}}}}},slot:45});Object.assign(ut,{...m,type:11,name:"*const struct{comptime type: type = f32, comptime minValue: comptime_float = 50, comptime maxValue: comptime_float = 1000, comptime defaultValue: comptime_float = 250}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Xt}],methods:[],template:null},slot:44});const Dm=new Uint8Array([]),Mm=new Uint8Array([48,30,16,0]),Xm=new Uint8Array([48,30,16,0]);Object.assign(Yt,{...m,type:2,name:"struct{comptime comptime_float = 1, comptime comptime_float = 1}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"0",structure:e},{...t,type:8,isRequired:!1,slot:1,name:"1",structure:e}],methods:[],template:{memory:{array:Dm},slots:{0:{structure:e,memory:{array:Mm},slots:{0:{structure:o,memory:{array:c},address:1056304}}},1:{structure:e,memory:{array:Xm},slots:{0:{structure:o,memory:{array:c},address:1056304}}}}}},slot:72});Object.assign(nt,{...m,type:11,name:"*const struct{comptime comptime_float = 1, comptime comptime_float = 1}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Yt}],methods:[],template:null},slot:71});const Ym=new Uint8Array([]),Zm=new Uint8Array([112,30,16,0]),ve=new Uint8Array([0,0,0,0,0,192,130,64]),$m=new Uint8Array([112,30,16,0]);Object.assign(Zt,{...m,type:2,name:"struct{comptime comptime_float = 600, comptime comptime_float = 600}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"0",structure:e},{...t,type:8,isRequired:!1,slot:1,name:"1",structure:e}],methods:[],template:{memory:{array:Ym},slots:{0:{structure:e,memory:{array:Zm},slots:{0:{structure:o,memory:{array:ve},address:1056368}}},1:{structure:e,memory:{array:$m},slots:{0:{structure:o,memory:{array:ve},address:1056368}}}}}},slot:74});Object.assign(yt,{...m,type:11,name:"*const struct{comptime comptime_float = 600, comptime comptime_float = 600}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Zt}],methods:[],template:null},slot:73});const Lm=new Uint8Array([]),Hm=new Uint8Array([104,30,16,0]),Ee=new Uint8Array([0,0,0,0,0,0,121,64]),Jm=new Uint8Array([104,30,16,0]);Object.assign($t,{...m,type:2,name:"struct{comptime comptime_float = 400, comptime comptime_float = 400}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"0",structure:e},{...t,type:8,isRequired:!1,slot:1,name:"1",structure:e}],methods:[],template:{memory:{array:Lm},slots:{0:{structure:e,memory:{array:Hm},slots:{0:{structure:o,memory:{array:Ee},address:1056360}}},1:{structure:e,memory:{array:Jm},slots:{0:{structure:o,memory:{array:Ee},address:1056360}}}}}},slot:76});Object.assign(ft,{...m,type:11,name:"*const struct{comptime comptime_float = 400, comptime comptime_float = 400}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:$t}],methods:[],template:null},slot:75});const Nm=new Uint8Array([]),Qm=new Uint8Array([170,170,170,170]),Wm=new Uint8Array([170,170,170,170]),to=new Uint8Array([170,170,170,170]),eo=new Uint8Array([176,30,16,0]);Object.assign(Lt,{...m,type:2,name:'struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1}, comptime maxValue: struct{comptime comptime_float = 600, comptime comptime_float = 600} = .{600, 600}, comptime defaultValue: struct{comptime comptime_float = 400, comptime comptime_float = 400} = .{400, 400}, comptime parameterType: *const [8:0]u8 = "position"}',length:1,byteSize:0,align:0,instance:{members:[{...t,type:7,isRequired:!1,name:"type",structure:C},{...t,type:8,isRequired:!1,slot:0,name:"minValue",structure:nt},{...t,type:8,isRequired:!1,slot:1,name:"maxValue",structure:yt},{...t,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:ft},{...t,type:8,isRequired:!1,slot:3,name:"parameterType",structure:I}],methods:[],template:{memory:{array:Nm},slots:{0:{structure:nt,memory:{array:Qm},slots:{0:{structure:Yt,memory:{array:r},address:-1431655766}}},1:{structure:yt,memory:{array:Wm},slots:{0:{structure:Zt,memory:{array:r},address:-1431655766}}},2:{structure:ft,memory:{array:to},slots:{0:{structure:$t,memory:{array:r},address:-1431655766}}},3:{structure:I,memory:{array:eo},slots:{0:{structure:$,memory:{array:Fe},address:1056432,slots:{0:{structure:Z,memory:{array:De},address:1056482}}}}}}}},slot:47});Object.assign(dt,{...m,type:11,name:'*const struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1}, comptime maxValue: struct{comptime comptime_float = 600, comptime comptime_float = 600} = .{600, 600}, comptime defaultValue: struct{comptime comptime_float = 400, comptime comptime_float = 400} = .{400, 400}, comptime parameterType: *const [8:0]u8 = "position"}',length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Lt}],methods:[],template:null},slot:46});Object.assign(p,{...m,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...t,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:d}],methods:[],template:null},slot:32});Object.assign(A,{...m,type:11,name:"*const @Vector(4, f32)",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:p}],methods:[],template:null},slot:77});const mo=new Uint8Array([]),oo=new Uint8Array([48,30,16,0]),ro=new Uint8Array([48,30,16,0]),so=new Uint8Array([48,30,16,0]),ao=new Uint8Array([48,30,16,0]);Object.assign(w,{...m,type:2,name:"struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"0",structure:e},{...t,type:8,isRequired:!1,slot:1,name:"1",structure:e},{...t,type:8,isRequired:!1,slot:2,name:"2",structure:e},{...t,type:8,isRequired:!1,slot:3,name:"3",structure:e}],methods:[],template:{memory:{array:mo},slots:{0:{structure:e,memory:{array:oo},slots:{0:{structure:o,memory:{array:c},address:1056304}}},1:{structure:e,memory:{array:ro},slots:{0:{structure:o,memory:{array:c},address:1056304}}},2:{structure:e,memory:{array:so},slots:{0:{structure:o,memory:{array:c},address:1056304}}},3:{structure:e,memory:{array:ao},slots:{0:{structure:o,memory:{array:c},address:1056304}}}}}},slot:79});Object.assign(h,{...m,type:11,name:"*const struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:w}],methods:[],template:null},slot:78});Object.assign(k,{...m,type:1,name:"[9:0]u8",length:9,byteSize:10,align:0,instance:{members:[{...t,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:V}],methods:[],template:null},slot:82});Object.assign(G,{...m,type:11,name:"*const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:k}],methods:[],template:null},slot:81});Object.assign(q,{...m,type:11,name:"*const *const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:G}],methods:[],template:null},slot:80});const io=new Uint8Array([]),co=new Uint8Array([160,30,16,0]),xe=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),po=new Uint8Array([170,170,170,170]),lo=new Uint8Array([170,170,170,170]),uo=new Uint8Array([148,30,16,0]),Pe=new Uint8Array([216,30,16,0]),Te=new Uint8Array([99,111,108,111,114,82,71,66,65,0]);Object.assign(M,{...m,type:2,name:'struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1, 1}, comptime defaultValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"}',length:1,byteSize:0,align:0,instance:{members:[{...t,type:7,isRequired:!1,name:"type",structure:p},{...t,type:8,isRequired:!1,slot:0,name:"minValue",structure:A},{...t,type:8,isRequired:!1,slot:1,name:"maxValue",structure:h},{...t,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:h},{...t,type:8,isRequired:!1,slot:3,name:"parameterType",structure:q}],methods:[],template:{memory:{array:io},slots:{0:{structure:A,memory:{array:co},slots:{0:{structure:p,memory:{array:xe},address:1056416}}},1:{structure:h,memory:{array:po},slots:{0:{structure:w,memory:{array:r},address:-1431655766}}},2:{structure:h,memory:{array:lo},slots:{0:{structure:w,memory:{array:r},address:-1431655766}}},3:{structure:q,memory:{array:uo},slots:{0:{structure:G,memory:{array:Pe},address:1056404,slots:{0:{structure:k,memory:{array:Te},address:1056472}}}}}}}},slot:49});Object.assign(x,{...m,type:11,name:'*const struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1, 1}, comptime defaultValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"}',length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[],template:null},slot:48});const no=new Uint8Array([]),yo=new Uint8Array([96,30,16,0]),fo=new Uint8Array([96,30,16,0]),_o=new Uint8Array([96,30,16,0]),bo=new Uint8Array([48,30,16,0]);Object.assign(Ht,{...m,type:2,name:"struct{comptime comptime_float = 0.8, comptime comptime_float = 0.8, comptime comptime_float = 0.8, comptime comptime_float = 1}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"0",structure:e},{...t,type:8,isRequired:!1,slot:1,name:"1",structure:e},{...t,type:8,isRequired:!1,slot:2,name:"2",structure:e},{...t,type:8,isRequired:!1,slot:3,name:"3",structure:e}],methods:[],template:{memory:{array:no},slots:{0:{structure:e,memory:{array:yo},slots:{0:{structure:o,memory:{array:mt},address:1056352}}},1:{structure:e,memory:{array:fo},slots:{0:{structure:o,memory:{array:mt},address:1056352}}},2:{structure:e,memory:{array:_o},slots:{0:{structure:o,memory:{array:mt},address:1056352}}},3:{structure:e,memory:{array:bo},slots:{0:{structure:o,memory:{array:c},address:1056304}}}}}},slot:84});Object.assign(_t,{...m,type:11,name:"*const struct{comptime comptime_float = 0.8, comptime comptime_float = 0.8, comptime comptime_float = 0.8, comptime comptime_float = 1}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ht}],methods:[],template:null},slot:83});const ho=new Uint8Array([]),go=new Uint8Array([160,30,16,0]),So=new Uint8Array([170,170,170,170]),zo=new Uint8Array([170,170,170,170]),Vo=new Uint8Array([148,30,16,0]);Object.assign(Jt,{...m,type:2,name:'struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1, 1}, comptime defaultValue: struct{comptime comptime_float = 0.8, comptime comptime_float = 0.8, comptime comptime_float = 0.8, comptime comptime_float = 1} = .{0.8, 0.8, 0.8, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"}',length:1,byteSize:0,align:0,instance:{members:[{...t,type:7,isRequired:!1,name:"type",structure:p},{...t,type:8,isRequired:!1,slot:0,name:"minValue",structure:A},{...t,type:8,isRequired:!1,slot:1,name:"maxValue",structure:h},{...t,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:_t},{...t,type:8,isRequired:!1,slot:3,name:"parameterType",structure:q}],methods:[],template:{memory:{array:ho},slots:{0:{structure:A,memory:{array:go},slots:{0:{structure:p,memory:{array:xe},address:1056416}}},1:{structure:h,memory:{array:So},slots:{0:{structure:w,memory:{array:r},address:-1431655766}}},2:{structure:_t,memory:{array:zo},slots:{0:{structure:Ht,memory:{array:r},address:-1431655766}}},3:{structure:q,memory:{array:Vo},slots:{0:{structure:G,memory:{array:Pe},address:1056404,slots:{0:{structure:k,memory:{array:Te},address:1056472}}}}}}}},slot:51});Object.assign(bt,{...m,type:11,name:'*const struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1, 1}, comptime defaultValue: struct{comptime comptime_float = 0.8, comptime comptime_float = 0.8, comptime comptime_float = 0.8, comptime comptime_float = 1} = .{0.8, 0.8, 0.8, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"}',length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Jt}],methods:[],template:null},slot:50});const Ro=new Uint8Array([]),Ao=new Uint8Array([64,30,16,0]),qo=new Uint8Array([64,30,16,0]),wo=new Uint8Array([64,30,16,0]),Uo=new Uint8Array([48,30,16,0]);Object.assign(Nt,{...m,type:2,name:"struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"0",structure:e},{...t,type:8,isRequired:!1,slot:1,name:"1",structure:e},{...t,type:8,isRequired:!1,slot:2,name:"2",structure:e},{...t,type:8,isRequired:!1,slot:3,name:"3",structure:e}],methods:[],template:{memory:{array:Ro},slots:{0:{structure:e,memory:{array:Ao},slots:{0:{structure:o,memory:{array:l},address:1056320}}},1:{structure:e,memory:{array:qo},slots:{0:{structure:o,memory:{array:l},address:1056320}}},2:{structure:e,memory:{array:wo},slots:{0:{structure:o,memory:{array:l},address:1056320}}},3:{structure:e,memory:{array:Uo},slots:{0:{structure:o,memory:{array:c},address:1056304}}}}}},slot:86});Object.assign(ht,{...m,type:11,name:"*const struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Nt}],methods:[],template:null},slot:85});const Oo=new Uint8Array([]),jo=new Uint8Array([160,30,16,0]),xo=new Uint8Array([170,170,170,170]),Po=new Uint8Array([170,170,170,170]),To=new Uint8Array([148,30,16,0]);Object.assign(Qt,{...m,type:2,name:'struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1, 1}, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1} = .{0, 0, 0, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"}',length:1,byteSize:0,align:0,instance:{members:[{...t,type:7,isRequired:!1,name:"type",structure:p},{...t,type:8,isRequired:!1,slot:0,name:"minValue",structure:A},{...t,type:8,isRequired:!1,slot:1,name:"maxValue",structure:h},{...t,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:ht},{...t,type:8,isRequired:!1,slot:3,name:"parameterType",structure:q}],methods:[],template:{memory:{array:Oo},slots:{0:{structure:A,memory:{array:jo},slots:{0:{structure:p,memory:{array:xe},address:1056416}}},1:{structure:h,memory:{array:xo},slots:{0:{structure:w,memory:{array:r},address:-1431655766}}},2:{structure:ht,memory:{array:Po},slots:{0:{structure:Nt,memory:{array:r},address:-1431655766}}},3:{structure:q,memory:{array:To},slots:{0:{structure:G,memory:{array:Pe},address:1056404,slots:{0:{structure:k,memory:{array:Te},address:1056472}}}}}}}},slot:53});Object.assign(gt,{...m,type:11,name:'*const struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1, 1}, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1} = .{0, 0, 0, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"}',length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Qt}],methods:[],template:null},slot:52});Object.assign(Wt,{...m,type:1,name:"[4]@Vector(4, f32)",length:4,byteSize:64,align:4,instance:{members:[{...t,type:6,isRequired:!1,bitSize:128,byteSize:16,structure:p}],methods:[],template:null},slot:33});const Co=new Uint8Array([]),Io=new Uint8Array([80,30,16,0]),ot=new Uint8Array([0,0,0,0,0,0,240,191]),Bo=new Uint8Array([80,30,16,0]),ko=new Uint8Array([80,30,16,0]),Go=new Uint8Array([64,30,16,0]);Object.assign(P,{...m,type:2,name:"struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = 0}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"0",structure:e},{...t,type:8,isRequired:!1,slot:1,name:"1",structure:e},{...t,type:8,isRequired:!1,slot:2,name:"2",structure:e},{...t,type:8,isRequired:!1,slot:3,name:"3",structure:e}],methods:[],template:{memory:{array:Co},slots:{0:{structure:e,memory:{array:Io},slots:{0:{structure:o,memory:{array:ot},address:1056336}}},1:{structure:e,memory:{array:Bo},slots:{0:{structure:o,memory:{array:ot},address:1056336}}},2:{structure:e,memory:{array:ko},slots:{0:{structure:o,memory:{array:ot},address:1056336}}},3:{structure:e,memory:{array:Go},slots:{0:{structure:o,memory:{array:l},address:1056320}}}}}},slot:95});Object.assign(S,{...m,type:11,name:"*const struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = 0}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:P}],methods:[],template:null},slot:94});const vo=new Uint8Array([]),Eo=new Uint8Array([88,30,16,0]),ge=new Uint8Array([0,0,0,0,0,64,127,192]),Ko=new Uint8Array([88,30,16,0]),Fo=new Uint8Array([88,30,16,0]),Do=new Uint8Array([80,30,16,0]);Object.assign(te,{...m,type:2,name:"struct{comptime comptime_float = -500, comptime comptime_float = -500, comptime comptime_float = -500, comptime comptime_float = -1}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"0",structure:e},{...t,type:8,isRequired:!1,slot:1,name:"1",structure:e},{...t,type:8,isRequired:!1,slot:2,name:"2",structure:e},{...t,type:8,isRequired:!1,slot:3,name:"3",structure:e}],methods:[],template:{memory:{array:vo},slots:{0:{structure:e,memory:{array:Eo},slots:{0:{structure:o,memory:{array:ge},address:1056344}}},1:{structure:e,memory:{array:Ko},slots:{0:{structure:o,memory:{array:ge},address:1056344}}},2:{structure:e,memory:{array:Fo},slots:{0:{structure:o,memory:{array:ge},address:1056344}}},3:{structure:e,memory:{array:Do},slots:{0:{structure:o,memory:{array:ot},address:1056336}}}}}},slot:97});Object.assign(St,{...m,type:11,name:"*const struct{comptime comptime_float = -500, comptime comptime_float = -500, comptime comptime_float = -500, comptime comptime_float = -1}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:96});const Mo=new Uint8Array([]),Xo=new Uint8Array([170,170,170,170]),Yo=new Uint8Array([170,170,170,170]),Zo=new Uint8Array([170,170,170,170]),$o=new Uint8Array([170,170,170,170]);Object.assign(ee,{...m,type:2,name:"struct{comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = 0} = .{-1, -1, -1, 0}, comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = 0} = .{-1, -1, -1, 0}, comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = 0} = .{-1, -1, -1, 0}, comptime struct{comptime comptime_float = -500, comptime comptime_float = -500, comptime comptime_float = -500, comptime comptime_float = -1} = .{-500, -500, -500, -1}}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"0",structure:S},{...t,type:8,isRequired:!1,slot:1,name:"1",structure:S},{...t,type:8,isRequired:!1,slot:2,name:"2",structure:S},{...t,type:8,isRequired:!1,slot:3,name:"3",structure:St}],methods:[],template:{memory:{array:Mo},slots:{0:{structure:S,memory:{array:Xo},slots:{0:{structure:P,memory:{array:r},address:-1431655766}}},1:{structure:S,memory:{array:Yo},slots:{0:{structure:P,memory:{array:r},address:-1431655766}}},2:{structure:S,memory:{array:Zo},slots:{0:{structure:P,memory:{array:r},address:-1431655766}}},3:{structure:St,memory:{array:$o},slots:{0:{structure:te,memory:{array:r},address:-1431655766}}}}}},slot:88});Object.assign(zt,{...m,type:11,name:"*const struct{comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = 0} = .{-1, -1, -1, 0}, comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = 0} = .{-1, -1, -1, 0}, comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = 0} = .{-1, -1, -1, 0}, comptime struct{comptime comptime_float = -500, comptime comptime_float = -500, comptime comptime_float = -500, comptime comptime_float = -1} = .{-500, -500, -500, -1}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:87});const Lo=new Uint8Array([]),Ho=new Uint8Array([48,30,16,0]),Jo=new Uint8Array([48,30,16,0]),No=new Uint8Array([48,30,16,0]),Qo=new Uint8Array([64,30,16,0]);Object.assign(T,{...m,type:2,name:"struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 0}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"0",structure:e},{...t,type:8,isRequired:!1,slot:1,name:"1",structure:e},{...t,type:8,isRequired:!1,slot:2,name:"2",structure:e},{...t,type:8,isRequired:!1,slot:3,name:"3",structure:e}],methods:[],template:{memory:{array:Lo},slots:{0:{structure:e,memory:{array:Ho},slots:{0:{structure:o,memory:{array:c},address:1056304}}},1:{structure:e,memory:{array:Jo},slots:{0:{structure:o,memory:{array:c},address:1056304}}},2:{structure:e,memory:{array:No},slots:{0:{structure:o,memory:{array:c},address:1056304}}},3:{structure:e,memory:{array:Qo},slots:{0:{structure:o,memory:{array:l},address:1056320}}}}}},slot:99});Object.assign(z,{...m,type:11,name:"*const struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 0}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[],template:null},slot:98});const Wo=new Uint8Array([]),tr=new Uint8Array([72,30,16,0]),er=new Uint8Array([72,30,16,0]),mr=new Uint8Array([72,30,16,0]),or=new Uint8Array([48,30,16,0]);Object.assign(me,{...m,type:2,name:"struct{comptime comptime_float = 500, comptime comptime_float = 500, comptime comptime_float = 500, comptime comptime_float = 1}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"0",structure:e},{...t,type:8,isRequired:!1,slot:1,name:"1",structure:e},{...t,type:8,isRequired:!1,slot:2,name:"2",structure:e},{...t,type:8,isRequired:!1,slot:3,name:"3",structure:e}],methods:[],template:{memory:{array:Wo},slots:{0:{structure:e,memory:{array:tr},slots:{0:{structure:o,memory:{array:K},address:1056328}}},1:{structure:e,memory:{array:er},slots:{0:{structure:o,memory:{array:K},address:1056328}}},2:{structure:e,memory:{array:mr},slots:{0:{structure:o,memory:{array:K},address:1056328}}},3:{structure:e,memory:{array:or},slots:{0:{structure:o,memory:{array:c},address:1056304}}}}}},slot:101});Object.assign(Vt,{...m,type:11,name:"*const struct{comptime comptime_float = 500, comptime comptime_float = 500, comptime comptime_float = 500, comptime comptime_float = 1}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:100});const rr=new Uint8Array([]),sr=new Uint8Array([170,170,170,170]),ar=new Uint8Array([170,170,170,170]),ir=new Uint8Array([170,170,170,170]),cr=new Uint8Array([170,170,170,170]);Object.assign(oe,{...m,type:2,name:"struct{comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 0} = .{1, 1, 1, 0}, comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 0} = .{1, 1, 1, 0}, comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 0} = .{1, 1, 1, 0}, comptime struct{comptime comptime_float = 500, comptime comptime_float = 500, comptime comptime_float = 500, comptime comptime_float = 1} = .{500, 500, 500, 1}}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"0",structure:z},{...t,type:8,isRequired:!1,slot:1,name:"1",structure:z},{...t,type:8,isRequired:!1,slot:2,name:"2",structure:z},{...t,type:8,isRequired:!1,slot:3,name:"3",structure:Vt}],methods:[],template:{memory:{array:rr},slots:{0:{structure:z,memory:{array:sr},slots:{0:{structure:T,memory:{array:r},address:-1431655766}}},1:{structure:z,memory:{array:ar},slots:{0:{structure:T,memory:{array:r},address:-1431655766}}},2:{structure:z,memory:{array:ir},slots:{0:{structure:T,memory:{array:r},address:-1431655766}}},3:{structure:Vt,memory:{array:cr},slots:{0:{structure:me,memory:{array:r},address:-1431655766}}}}}},slot:90});Object.assign(Rt,{...m,type:11,name:"*const struct{comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 0} = .{1, 1, 1, 0}, comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 0} = .{1, 1, 1, 0}, comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 0} = .{1, 1, 1, 0}, comptime struct{comptime comptime_float = 500, comptime comptime_float = 500, comptime comptime_float = 500, comptime comptime_float = 1} = .{500, 500, 500, 1}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:89});const pr=new Uint8Array([]),lr=new Uint8Array([48,30,16,0]),ur=new Uint8Array([64,30,16,0]),nr=new Uint8Array([64,30,16,0]),yr=new Uint8Array([64,30,16,0]);Object.assign(re,{...m,type:2,name:"struct{comptime comptime_float = 1, comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"0",structure:e},{...t,type:8,isRequired:!1,slot:1,name:"1",structure:e},{...t,type:8,isRequired:!1,slot:2,name:"2",structure:e},{...t,type:8,isRequired:!1,slot:3,name:"3",structure:e}],methods:[],template:{memory:{array:pr},slots:{0:{structure:e,memory:{array:lr},slots:{0:{structure:o,memory:{array:c},address:1056304}}},1:{structure:e,memory:{array:ur},slots:{0:{structure:o,memory:{array:l},address:1056320}}},2:{structure:e,memory:{array:nr},slots:{0:{structure:o,memory:{array:l},address:1056320}}},3:{structure:e,memory:{array:yr},slots:{0:{structure:o,memory:{array:l},address:1056320}}}}}},slot:103});Object.assign(At,{...m,type:11,name:"*const struct{comptime comptime_float = 1, comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:102});const fr=new Uint8Array([]),dr=new Uint8Array([64,30,16,0]),_r=new Uint8Array([48,30,16,0]),br=new Uint8Array([64,30,16,0]),hr=new Uint8Array([64,30,16,0]);Object.assign(se,{...m,type:2,name:"struct{comptime comptime_float = 0, comptime comptime_float = 1, comptime comptime_float = 0, comptime comptime_float = 0}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"0",structure:e},{...t,type:8,isRequired:!1,slot:1,name:"1",structure:e},{...t,type:8,isRequired:!1,slot:2,name:"2",structure:e},{...t,type:8,isRequired:!1,slot:3,name:"3",structure:e}],methods:[],template:{memory:{array:fr},slots:{0:{structure:e,memory:{array:dr},slots:{0:{structure:o,memory:{array:l},address:1056320}}},1:{structure:e,memory:{array:_r},slots:{0:{structure:o,memory:{array:c},address:1056304}}},2:{structure:e,memory:{array:br},slots:{0:{structure:o,memory:{array:l},address:1056320}}},3:{structure:e,memory:{array:hr},slots:{0:{structure:o,memory:{array:l},address:1056320}}}}}},slot:105});Object.assign(qt,{...m,type:11,name:"*const struct{comptime comptime_float = 0, comptime comptime_float = 1, comptime comptime_float = 0, comptime comptime_float = 0}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:104});const gr=new Uint8Array([]),Sr=new Uint8Array([64,30,16,0]),zr=new Uint8Array([64,30,16,0]),Vr=new Uint8Array([48,30,16,0]),Rr=new Uint8Array([64,30,16,0]);Object.assign(ae,{...m,type:2,name:"struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1, comptime comptime_float = 0}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"0",structure:e},{...t,type:8,isRequired:!1,slot:1,name:"1",structure:e},{...t,type:8,isRequired:!1,slot:2,name:"2",structure:e},{...t,type:8,isRequired:!1,slot:3,name:"3",structure:e}],methods:[],template:{memory:{array:gr},slots:{0:{structure:e,memory:{array:Sr},slots:{0:{structure:o,memory:{array:l},address:1056320}}},1:{structure:e,memory:{array:zr},slots:{0:{structure:o,memory:{array:l},address:1056320}}},2:{structure:e,memory:{array:Vr},slots:{0:{structure:o,memory:{array:c},address:1056304}}},3:{structure:e,memory:{array:Rr},slots:{0:{structure:o,memory:{array:l},address:1056320}}}}}},slot:107});Object.assign(wt,{...m,type:11,name:"*const struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1, comptime comptime_float = 0}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:106});const Ar=new Uint8Array([]),qr=new Uint8Array([64,30,16,0]),wr=new Uint8Array([56,30,16,0]),Ur=new Uint8Array([56,30,16,0]),Or=new Uint8Array([48,30,16,0]);Object.assign(ie,{...m,type:2,name:"struct{comptime comptime_float = 0, comptime comptime_float = 50, comptime comptime_float = 50, comptime comptime_float = 1}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"0",structure:e},{...t,type:8,isRequired:!1,slot:1,name:"1",structure:e},{...t,type:8,isRequired:!1,slot:2,name:"2",structure:e},{...t,type:8,isRequired:!1,slot:3,name:"3",structure:e}],methods:[],template:{memory:{array:Ar},slots:{0:{structure:e,memory:{array:qr},slots:{0:{structure:o,memory:{array:l},address:1056320}}},1:{structure:e,memory:{array:wr},slots:{0:{structure:o,memory:{array:Se},address:1056312}}},2:{structure:e,memory:{array:Ur},slots:{0:{structure:o,memory:{array:Se},address:1056312}}},3:{structure:e,memory:{array:Or},slots:{0:{structure:o,memory:{array:c},address:1056304}}}}}},slot:109});Object.assign(Ut,{...m,type:11,name:"*const struct{comptime comptime_float = 0, comptime comptime_float = 50, comptime comptime_float = 50, comptime comptime_float = 1}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:108});const jr=new Uint8Array([]),xr=new Uint8Array([170,170,170,170]),Pr=new Uint8Array([170,170,170,170]),Tr=new Uint8Array([170,170,170,170]),Cr=new Uint8Array([170,170,170,170]);Object.assign(ce,{...m,type:2,name:"struct{comptime struct{comptime comptime_float = 1, comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0} = .{1, 0, 0, 0}, comptime struct{comptime comptime_float = 0, comptime comptime_float = 1, comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 1, 0, 0}, comptime struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1, comptime comptime_float = 0} = .{0, 0, 1, 0}, comptime struct{comptime comptime_float = 0, comptime comptime_float = 50, comptime comptime_float = 50, comptime comptime_float = 1} = .{0, 50, 50, 1}}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"0",structure:At},{...t,type:8,isRequired:!1,slot:1,name:"1",structure:qt},{...t,type:8,isRequired:!1,slot:2,name:"2",structure:wt},{...t,type:8,isRequired:!1,slot:3,name:"3",structure:Ut}],methods:[],template:{memory:{array:jr},slots:{0:{structure:At,memory:{array:xr},slots:{0:{structure:re,memory:{array:r},address:-1431655766}}},1:{structure:qt,memory:{array:Pr},slots:{0:{structure:se,memory:{array:r},address:-1431655766}}},2:{structure:wt,memory:{array:Tr},slots:{0:{structure:ae,memory:{array:r},address:-1431655766}}},3:{structure:Ut,memory:{array:Cr},slots:{0:{structure:ie,memory:{array:r},address:-1431655766}}}}}},slot:92});Object.assign(Ot,{...m,type:11,name:"*const struct{comptime struct{comptime comptime_float = 1, comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0} = .{1, 0, 0, 0}, comptime struct{comptime comptime_float = 0, comptime comptime_float = 1, comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 1, 0, 0}, comptime struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1, comptime comptime_float = 0} = .{0, 0, 1, 0}, comptime struct{comptime comptime_float = 0, comptime comptime_float = 50, comptime comptime_float = 50, comptime comptime_float = 1} = .{0, 50, 50, 1}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:91});const Ir=new Uint8Array([]),Br=new Uint8Array([170,170,170,170]),kr=new Uint8Array([170,170,170,170]),Gr=new Uint8Array([170,170,170,170]);Object.assign(pe,{...m,type:2,name:"struct{comptime type: type = [4]@Vector(4, f32), comptime minValue: struct{comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = 0} = .{-1, -1, -1, 0}, comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = 0} = .{-1, -1, -1, 0}, comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = 0} = .{-1, -1, -1, 0}, comptime struct{comptime comptime_float = -500, comptime comptime_float = -500, comptime comptime_float = -500, comptime comptime_float = -1} = .{-500, -500, -500, -1}} = .{.{-1, -1, -1, 0}, .{-1, -1, -1, 0}, .{-1, -1, -1, 0}, .{-500, -500, -500, -1}}, comptime maxValue: struct{comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 0} = .{1, 1, 1, 0}, comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 0} = .{1, 1, 1, 0}, comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 0} = .{1, 1, 1, 0}, comptime struct{comptime comptime_float = 500, comptime comptime_float = 500, comptime comptime_float = 500, comptime comptime_float = 1} = .{500, 500, 500, 1}} = .{.{1, 1, 1, 0}, .{1, 1, 1, 0}, .{1, 1, 1, 0}, .{500, 500, 500, 1}}, comptime defaultValue: struct{comptime struct{comptime comptime_float = 1, comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0} = .{1, 0, 0, 0}, comptime struct{comptime comptime_float = 0, comptime comptime_float = 1, comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 1, 0, 0}, comptime struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1, comptime comptime_float = 0} = .{0, 0, 1, 0}, comptime struct{comptime comptime_float = 0, comptime comptime_float = 50, comptime comptime_float = 50, comptime comptime_float = 1} = .{0, 50, 50, 1}} = .{.{1, 0, 0, 0}, .{0, 1, 0, 0}, .{0, 0, 1, 0}, .{0, 50, 50, 1}}}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:7,isRequired:!1,name:"type",structure:Wt},{...t,type:8,isRequired:!1,slot:0,name:"minValue",structure:zt},{...t,type:8,isRequired:!1,slot:1,name:"maxValue",structure:Rt},{...t,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:Ot}],methods:[],template:{memory:{array:Ir},slots:{0:{structure:zt,memory:{array:Br},slots:{0:{structure:ee,memory:{array:r},address:-1431655766}}},1:{structure:Rt,memory:{array:kr},slots:{0:{structure:oe,memory:{array:r},address:-1431655766}}},2:{structure:Ot,memory:{array:Gr},slots:{0:{structure:ce,memory:{array:r},address:-1431655766}}}}}},slot:55});Object.assign(jt,{...m,type:11,name:"*const struct{comptime type: type = [4]@Vector(4, f32), comptime minValue: struct{comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = 0} = .{-1, -1, -1, 0}, comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = 0} = .{-1, -1, -1, 0}, comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = 0} = .{-1, -1, -1, 0}, comptime struct{comptime comptime_float = -500, comptime comptime_float = -500, comptime comptime_float = -500, comptime comptime_float = -1} = .{-500, -500, -500, -1}} = .{.{-1, -1, -1, 0}, .{-1, -1, -1, 0}, .{-1, -1, -1, 0}, .{-500, -500, -500, -1}}, comptime maxValue: struct{comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 0} = .{1, 1, 1, 0}, comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 0} = .{1, 1, 1, 0}, comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 0} = .{1, 1, 1, 0}, comptime struct{comptime comptime_float = 500, comptime comptime_float = 500, comptime comptime_float = 500, comptime comptime_float = 1} = .{500, 500, 500, 1}} = .{.{1, 1, 1, 0}, .{1, 1, 1, 0}, .{1, 1, 1, 0}, .{500, 500, 500, 1}}, comptime defaultValue: struct{comptime struct{comptime comptime_float = 1, comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0} = .{1, 0, 0, 0}, comptime struct{comptime comptime_float = 0, comptime comptime_float = 1, comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 1, 0, 0}, comptime struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1, comptime comptime_float = 0} = .{0, 0, 1, 0}, comptime struct{comptime comptime_float = 0, comptime comptime_float = 50, comptime comptime_float = 50, comptime comptime_float = 1} = .{0, 50, 50, 1}} = .{.{1, 0, 0, 0}, .{0, 1, 0, 0}, .{0, 0, 1, 0}, .{0, 50, 50, 1}}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:54});const vr=new Uint8Array([]),Er=new Uint8Array([170,170,170,170]),Kr=new Uint8Array([170,170,170,170]),Fr=new Uint8Array([170,170,170,170]),Dr=new Uint8Array([170,170,170,170]),Mr=new Uint8Array([170,170,170,170]),Xr=new Uint8Array([170,170,170,170]),Yr=new Uint8Array([170,170,170,170]),Zr=new Uint8Array([170,170,170,170]),$r=new Uint8Array([170,170,170,170]),Lr=new Uint8Array([170,170,170,170]);Object.assign(le,{...m,type:2,name:'struct{comptime center: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = -200, comptime comptime_float = -200} = .{-200, -200}, comptime maxValue: struct{comptime comptime_float = 500, comptime comptime_float = 500} = .{500, 500}, comptime defaultValue: struct{comptime comptime_float = 300, comptime comptime_float = 200} = .{300, 200}, comptime parameterType: *const [8:0]u8 = "position"} = .{.type = @Vector(2, f32), .minValue = .{-200, -200}, .maxValue = .{500, 500}, .defaultValue = .{300, 200}, .parameterType = "position"}, comptime size: struct{comptime type: type = f32, comptime minValue: comptime_float = 10, comptime maxValue: comptime_float = 300, comptime defaultValue: comptime_float = 100} = .{.type = f32, .minValue = 10, .maxValue = 300, .defaultValue = 100}, comptime fade: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0.8} = .{.type = f32, .minValue = 0, .maxValue = 1, .defaultValue = 0.8}, comptime focallength: struct{comptime type: type = f32, comptime minValue: comptime_float = 50, comptime maxValue: comptime_float = 1000, comptime defaultValue: comptime_float = 250} = .{.type = f32, .minValue = 50, .maxValue = 1000, .defaultValue = 250}, comptime imagesize: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1}, comptime maxValue: struct{comptime comptime_float = 600, comptime comptime_float = 600} = .{600, 600}, comptime defaultValue: struct{comptime comptime_float = 400, comptime comptime_float = 400} = .{400, 400}, comptime parameterType: *const [8:0]u8 = "position"} = .{.type = @Vector(2, f32), .minValue = .{1, 1}, .maxValue = .{600, 600}, .defaultValue = .{400, 400}, .parameterType = "position"}, comptime colorX: struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1, 1}, comptime defaultValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"} = .{.type = @Vector(4, f32), .minValue = .{ 0, 0, 0, 0 }, .maxValue = .{1, 1, 1, 1}, .defaultValue = .{1, 1, 1, 1}, .parameterType = "colorRGBA"}, comptime colorY: struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1, 1}, comptime defaultValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"} = .{.type = @Vector(4, f32), .minValue = .{ 0, 0, 0, 0 }, .maxValue = .{1, 1, 1, 1}, .defaultValue = .{1, 1, 1, 1}, .parameterType = "colorRGBA"}, comptime colorZ: struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1, 1}, comptime defaultValue: struct{comptime comptime_float = 0.8, comptime comptime_float = 0.8, comptime comptime_float = 0.8, comptime comptime_float = 1} = .{0.8, 0.8, 0.8, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"} = .{.type = @Vector(4, f32), .minValue = .{ 0, 0, 0, 0 }, .maxValue = .{1, 1, 1, 1}, .defaultValue = .{0.8, 0.8, 0.8, 1}, .parameterType = "colorRGBA"}, comptime bgcolor: struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1, 1}, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1} = .{0, 0, 0, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"} = .{.type = @Vector(4, f32), .minValue = .{ 0, 0, 0, 0 }, .maxValue = .{1, 1, 1, 1}, .defaultValue = .{0, 0, 0, 1}, .parameterType = "colorRGBA"}, comptime orientation: struct{comptime type: type = [4]@Vector(4, f32), comptime minValue: struct{comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = 0} = .{-1, -1, -1, 0}, comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = 0} = .{-1, -1, -1, 0}, comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = 0} = .{-1, -1, -1, 0}, comptime struct{comptime comptime_float = -500, comptime comptime_float = -500, comptime comptime_float = -500, comptime comptime_float = -1} = .{-500, -500, -500, -1}} = .{.{-1, -1, -1, 0}, .{-1, -1, -1, 0}, .{-1, -1, -1, 0}, .{-500, -500, -500, -1}}, comptime maxValue: struct{comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 0} = .{1, 1, 1, 0}, comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 0} = .{1, 1, 1, 0}, comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 0} = .{1, 1, 1, 0}, comptime struct{comptime comptime_float = 500, comptime comptime_float = 500, comptime comptime_float = 500, comptime comptime_float = 1} = .{500, 500, 500, 1}} = .{.{1, 1, 1, 0}, .{1, 1, 1, 0}, .{1, 1, 1, 0}, .{500, 500, 500, 1}}, comptime defaultValue: struct{comptime struct{comptime comptime_float = 1, comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0} = .{1, 0, 0, 0}, comptime struct{comptime comptime_float = 0, comptime comptime_float = 1, comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 1, 0, 0}, comptime struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1, comptime comptime_float = 0} = .{0, 0, 1, 0}, comptime struct{comptime comptime_float = 0, comptime comptime_float = 50, comptime comptime_float = 50, comptime comptime_float = 1} = .{0, 50, 50, 1}} = .{.{1, 0, 0, 0}, .{0, 1, 0, 0}, .{0, 0, 1, 0}, .{0, 50, 50, 1}}} = .{.type = [4]@Vector(4, f32), .minValue = .{.{-1, -1, -1, 0}, .{-1, -1, -1, 0}, .{-1, -1, -1, 0}, .{-500, -500, -500, -1}}, .maxValue = .{.{1, 1, 1, 0}, .{1, 1, 1, 0}, .{1, 1, 1, 0}, .{500, 500, 500, 1}}, .defaultValue = .{.{1, 0, 0, 0}, .{0, 1, 0, 0}, .{0, 0, 1, 0}, .{0, 50, 50, 1}}}}',length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"center",structure:ct},{...t,type:8,isRequired:!1,slot:1,name:"size",structure:pt},{...t,type:8,isRequired:!1,slot:2,name:"fade",structure:lt},{...t,type:8,isRequired:!1,slot:3,name:"focallength",structure:ut},{...t,type:8,isRequired:!1,slot:4,name:"imagesize",structure:dt},{...t,type:8,isRequired:!1,slot:5,name:"colorX",structure:x},{...t,type:8,isRequired:!1,slot:6,name:"colorY",structure:x},{...t,type:8,isRequired:!1,slot:7,name:"colorZ",structure:bt},{...t,type:8,isRequired:!1,slot:8,name:"bgcolor",structure:gt},{...t,type:8,isRequired:!1,slot:9,name:"orientation",structure:jt}],methods:[],template:{memory:{array:vr},slots:{0:{structure:ct,memory:{array:Er},slots:{0:{structure:Ft,memory:{array:r},address:-1431655766}}},1:{structure:pt,memory:{array:Kr},slots:{0:{structure:Dt,memory:{array:r},address:-1431655766}}},2:{structure:lt,memory:{array:Fr},slots:{0:{structure:Mt,memory:{array:r},address:-1431655766}}},3:{structure:ut,memory:{array:Dr},slots:{0:{structure:Xt,memory:{array:r},address:-1431655766}}},4:{structure:dt,memory:{array:Mr},slots:{0:{structure:Lt,memory:{array:r},address:-1431655766}}},5:{structure:x,memory:{array:Xr},slots:{0:{structure:M,memory:{array:r},address:-1431655766}}},6:{structure:x,memory:{array:Yr},slots:{0:{structure:M,memory:{array:r},address:-1431655766}}},7:{structure:bt,memory:{array:Zr},slots:{0:{structure:Jt,memory:{array:r},address:-1431655766}}},8:{structure:gt,memory:{array:$r},slots:{0:{structure:Qt,memory:{array:r},address:-1431655766}}},9:{structure:jt,memory:{array:Lr},slots:{0:{structure:pe,memory:{array:r},address:-1431655766}}}}}},slot:12});Object.assign(xt,{...m,type:11,name:'*struct{comptime center: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = -200, comptime comptime_float = -200} = .{-200, -200}, comptime maxValue: struct{comptime comptime_float = 500, comptime comptime_float = 500} = .{500, 500}, comptime defaultValue: struct{comptime comptime_float = 300, comptime comptime_float = 200} = .{300, 200}, comptime parameterType: *const [8:0]u8 = "position"} = .{.type = @Vector(2, f32), .minValue = .{-200, -200}, .maxValue = .{500, 500}, .defaultValue = .{300, 200}, .parameterType = "position"}, comptime size: struct{comptime type: type = f32, comptime minValue: comptime_float = 10, comptime maxValue: comptime_float = 300, comptime defaultValue: comptime_float = 100} = .{.type = f32, .minValue = 10, .maxValue = 300, .defaultValue = 100}, comptime fade: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0.8} = .{.type = f32, .minValue = 0, .maxValue = 1, .defaultValue = 0.8}, comptime focallength: struct{comptime type: type = f32, comptime minValue: comptime_float = 50, comptime maxValue: comptime_float = 1000, comptime defaultValue: comptime_float = 250} = .{.type = f32, .minValue = 50, .maxValue = 1000, .defaultValue = 250}, comptime imagesize: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1}, comptime maxValue: struct{comptime comptime_float = 600, comptime comptime_float = 600} = .{600, 600}, comptime defaultValue: struct{comptime comptime_float = 400, comptime comptime_float = 400} = .{400, 400}, comptime parameterType: *const [8:0]u8 = "position"} = .{.type = @Vector(2, f32), .minValue = .{1, 1}, .maxValue = .{600, 600}, .defaultValue = .{400, 400}, .parameterType = "position"}, comptime colorX: struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1, 1}, comptime defaultValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"} = .{.type = @Vector(4, f32), .minValue = .{ 0, 0, 0, 0 }, .maxValue = .{1, 1, 1, 1}, .defaultValue = .{1, 1, 1, 1}, .parameterType = "colorRGBA"}, comptime colorY: struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1, 1}, comptime defaultValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"} = .{.type = @Vector(4, f32), .minValue = .{ 0, 0, 0, 0 }, .maxValue = .{1, 1, 1, 1}, .defaultValue = .{1, 1, 1, 1}, .parameterType = "colorRGBA"}, comptime colorZ: struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1, 1}, comptime defaultValue: struct{comptime comptime_float = 0.8, comptime comptime_float = 0.8, comptime comptime_float = 0.8, comptime comptime_float = 1} = .{0.8, 0.8, 0.8, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"} = .{.type = @Vector(4, f32), .minValue = .{ 0, 0, 0, 0 }, .maxValue = .{1, 1, 1, 1}, .defaultValue = .{0.8, 0.8, 0.8, 1}, .parameterType = "colorRGBA"}, comptime bgcolor: struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1, 1}, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1} = .{0, 0, 0, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"} = .{.type = @Vector(4, f32), .minValue = .{ 0, 0, 0, 0 }, .maxValue = .{1, 1, 1, 1}, .defaultValue = .{0, 0, 0, 1}, .parameterType = "colorRGBA"}, comptime orientation: struct{comptime type: type = [4]@Vector(4, f32), comptime minValue: struct{comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = 0} = .{-1, -1, -1, 0}, comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = 0} = .{-1, -1, -1, 0}, comptime struct{comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = -1, comptime comptime_float = 0} = .{-1, -1, -1, 0}, comptime struct{comptime comptime_float = -500, comptime comptime_float = -500, comptime comptime_float = -500, comptime comptime_float = -1} = .{-500, -500, -500, -1}} = .{.{-1, -1, -1, 0}, .{-1, -1, -1, 0}, .{-1, -1, -1, 0}, .{-500, -500, -500, -1}}, comptime maxValue: struct{comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 0} = .{1, 1, 1, 0}, comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 0} = .{1, 1, 1, 0}, comptime struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 0} = .{1, 1, 1, 0}, comptime struct{comptime comptime_float = 500, comptime comptime_float = 500, comptime comptime_float = 500, comptime comptime_float = 1} = .{500, 500, 500, 1}} = .{.{1, 1, 1, 0}, .{1, 1, 1, 0}, .{1, 1, 1, 0}, .{500, 500, 500, 1}}, comptime defaultValue: struct{comptime struct{comptime comptime_float = 1, comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0} = .{1, 0, 0, 0}, comptime struct{comptime comptime_float = 0, comptime comptime_float = 1, comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 1, 0, 0}, comptime struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1, comptime comptime_float = 0} = .{0, 0, 1, 0}, comptime struct{comptime comptime_float = 0, comptime comptime_float = 50, comptime comptime_float = 50, comptime comptime_float = 1} = .{0, 50, 50, 1}} = .{.{1, 0, 0, 0}, .{0, 1, 0, 0}, .{0, 0, 1, 0}, .{0, 50, 50, 1}}} = .{.type = [4]@Vector(4, f32), .minValue = .{.{-1, -1, -1, 0}, .{-1, -1, -1, 0}, .{-1, -1, -1, 0}, .{-500, -500, -500, -1}}, .maxValue = .{.{1, 1, 1, 0}, .{1, 1, 1, 0}, .{1, 1, 1, 0}, .{500, 500, 500, 1}}, .defaultValue = .{.{1, 0, 0, 0}, .{0, 1, 0, 0}, .{0, 0, 1, 0}, .{0, 50, 50, 1}}}}',length:1,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:11});Object.assign(Pt,{...m,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[],template:null},slot:93});const Hr=new Uint8Array([]),Jr=new Uint8Array([144,30,16,0]),Nr=new Uint8Array([4,0,0,0]);Object.assign(L,{...m,type:2,name:"struct{comptime channels: comptime_int = 4}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"channels",structure:Pt}],methods:[],template:{memory:{array:Hr},slots:{0:{structure:Pt,memory:{array:Jr},slots:{0:{structure:_,memory:{array:Nr},address:1056400}}}}}},slot:57});Object.assign(B,{...m,type:11,name:"*const struct{comptime channels: comptime_int = 4}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[],template:null},slot:56});const Qr=new Uint8Array([]),Wr=new Uint8Array([170,170,170,170]);Object.assign(ue,{...m,type:2,name:"struct{comptime src: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"src",structure:B}],methods:[],template:{memory:{array:Qr},slots:{0:{structure:B,memory:{array:Wr},slots:{0:{structure:L,memory:{array:r},address:-1431655766}}}}}},slot:14});Object.assign(Tt,{...m,type:11,name:"*struct{comptime src: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:13});const ts=new Uint8Array([]),es=new Uint8Array([170,170,170,170]);Object.assign(ne,{...m,type:2,name:"struct{comptime dst: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,byteSize:0,align:0,instance:{members:[{...t,type:8,isRequired:!1,slot:0,name:"dst",structure:B}],methods:[],template:{memory:{array:ts},slots:{0:{structure:B,memory:{array:es},slots:{0:{structure:L,memory:{array:r},address:-1431655766}}}}}},slot:16});Object.assign(Ct,{...m,type:11,name:"*struct{comptime dst: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:15});const ms=new Uint8Array([]),os=new Uint8Array([]),rs=new Uint8Array([20,253,15,0]),ss=new Uint8Array([112,162,16,0]),as=new Uint8Array([67,117,98,105,99,83,112,97,99,101,0]),is=new Uint8Array([76,253,15,0]),cs=new Uint8Array([97,162,16,0]),ps=new Uint8Array([80,101,116,114,105,32,76,101,115,107,105,110,101,110,0]),ls=new Uint8Array([108,253,15,0]),us=new Uint8Array([1,0,0,0]),ns=new Uint8Array([164,253,15,0]),ys=new Uint8Array([86,162,16,0]),fs=new Uint8Array([99,117,98,105,99,115,112,97,99,101,0]),ds=new Uint8Array([170,170,170,170]),_s=new Uint8Array([170,170,170,170]),bs=new Uint8Array([170,170,170,170]);Object.assign(Ve,{...m,type:2,name:"cubic-space.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:ms}}},static:{members:[{...t,type:6,isRequired:!1,slot:0,name:"namespace",structure:j},{...t,type:6,isRequired:!1,slot:1,name:"vendor",structure:rt},{...t,type:6,isRequired:!1,slot:2,name:"version",structure:R},{...t,type:6,isRequired:!1,slot:3,name:"description",structure:j},{...t,type:6,isRequired:!1,slot:4,name:"parameters",structure:xt},{...t,type:6,isRequired:!1,slot:5,name:"inputImages",structure:Tt},{...t,type:6,isRequired:!1,slot:6,name:"outputImages",structure:Ct}],methods:[],template:{memory:{array:os},slots:{0:{structure:j,memory:{array:rs},slots:{0:{structure:D,memory:{array:ss},slots:{0:{structure:F,memory:{array:as},address:1090160}}}}},1:{structure:rt,memory:{array:is},slots:{0:{structure:Gt,memory:{array:cs},slots:{0:{structure:kt,memory:{array:ps},address:1090145}}}}},2:{structure:R,memory:{array:ls},slots:{0:{structure:_,memory:{array:us}}}},3:{structure:j,memory:{array:ns},slots:{0:{structure:D,memory:{array:ys},slots:{0:{structure:F,memory:{array:fs},address:1090134}}}}},4:{structure:xt,memory:{array:ds},slots:{0:{structure:le,memory:{array:r},address:-1431655766}}},5:{structure:Tt,memory:{array:_s},slots:{0:{structure:ue,memory:{array:r},address:-1431655766}}},6:{structure:Ct,memory:{array:bs},slots:{0:{structure:ne,memory:{array:r},address:-1431655766}}}}}},slot:1});Object.assign(v,{...m,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...t,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:V}],methods:[],template:null},slot:21});Object.assign(ye,{...m,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:v}],methods:[],template:null},slot:20});Object.assign(fe,{...m,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:ye}],methods:[],template:null},slot:19});Object.assign(f,{...m,name:"u32",length:1,instance:{members:[{...t,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:f}],methods:[],template:null},slot:22});const hs=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(de,{...m,type:9,name:"cubic-space.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...t,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:_},{...t,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:_}],methods:[],template:{memory:{array:hs}}},slot:23});Object.assign(X,{...m,name:"bool",length:1,byteSize:1,align:0,instance:{members:[{...t,type:1,isRequired:!1,bitOffset:0,bitSize:1,byteSize:1,structure:X}],methods:[],template:null},slot:24});Object.assign(Y,{...m,name:"usize",length:1,instance:{members:[{...t,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:Y}],methods:[],template:null},slot:25});const gs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ss=new Uint8Array([]),zs=new Uint8Array([200,251,15,0]),Vs=new Uint8Array([4,0,0,0]);Object.assign(It,{...m,type:2,name:"cubic-space.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...t,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:fe},{...t,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:f},{...t,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:f},{...t,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:de},{...t,type:1,isRequired:!1,bitOffset:168,bitSize:1,byteSize:1,slot:4,name:"premultiplied",structure:X},{...t,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:5,name:"offset",structure:Y}],methods:[],template:{memory:{array:gs}}},static:{members:[{...t,type:7,isRequired:!1,name:"Pixel",structure:v},{...t,type:7,isRequired:!1,name:"FPixel",structure:p},{...t,type:6,isRequired:!1,slot:0,name:"channels",structure:R}],methods:[],template:{memory:{array:Ss},slots:{0:{structure:R,memory:{array:zs},slots:{0:{structure:_,memory:{array:Vs}}}}}}},slot:18});const Rs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),As=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),qs=new Uint8Array([0,0,0,0,0,0,0,0]),Ce=new Uint8Array([]);Object.assign(H,{...m,type:2,name:"cubic-space.KernelInput(u8,cubic-space.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:It}],methods:[],template:{memory:{array:Rs},slots:{0:{structure:It,memory:{array:As},slots:{0:{structure:fe,memory:{array:qs},slots:{0:{structure:ye,memory:{array:Ce}}}}}}}}},slot:17});Object.assign(_e,{...m,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:v}],methods:[],template:null},slot:20});Object.assign(be,{...m,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:_e}],methods:[],template:null},slot:28});const ws=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Us=new Uint8Array([]),Os=new Uint8Array([200,251,15,0]),js=new Uint8Array([4,0,0,0]);Object.assign(Bt,{...m,type:2,name:"cubic-space.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...t,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:be},{...t,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:f},{...t,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:f},{...t,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:de},{...t,type:1,isRequired:!1,bitOffset:168,bitSize:1,byteSize:1,slot:4,name:"premultiplied",structure:X},{...t,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:5,name:"offset",structure:Y}],methods:[],template:{memory:{array:ws}}},static:{members:[{...t,type:7,isRequired:!1,name:"Pixel",structure:v},{...t,type:7,isRequired:!1,name:"FPixel",structure:p},{...t,type:6,isRequired:!1,slot:0,name:"channels",structure:R}],methods:[],template:{memory:{array:Us},slots:{0:{structure:R,memory:{array:Os},slots:{0:{structure:_,memory:{array:js}}}}}}},slot:27});const xs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ps=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ts=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(J,{...m,type:2,name:"cubic-space.KernelOutput(u8,cubic-space.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:Bt}],methods:[],template:{memory:{array:xs},slots:{0:{structure:Bt,memory:{array:Ps},slots:{0:{structure:be,memory:{array:Ts},slots:{0:{structure:_e,memory:{array:Ce}}}}}}}}},slot:26});const Cs=new Uint8Array([0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,205,204,76,63,205,204,76,63,205,204,76,63,0,0,128,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,128,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,0,0,0,0,0,0,0,0,72,66,0,0,72,66,0,0,128,63,0,0,150,67,0,0,72,67,0,0,200,67,0,0,200,67,0,0,200,66,205,204,76,63,0,0,122,67,0,0,0,0]);Object.assign(N,{...m,type:2,name:"cubic-space.KernelParameters(cubic-space.kernel)",length:1,byteSize:160,align:4,instance:{members:[{...t,type:6,isRequired:!1,bitOffset:1024,bitSize:64,byteSize:8,slot:0,name:"center",structure:C},{...t,type:4,isRequired:!1,bitOffset:1152,bitSize:32,byteSize:4,slot:1,name:"size",structure:d},{...t,type:4,isRequired:!1,bitOffset:1184,bitSize:32,byteSize:4,slot:2,name:"fade",structure:d},{...t,type:4,isRequired:!1,bitOffset:1216,bitSize:32,byteSize:4,slot:3,name:"focallength",structure:d},{...t,type:6,isRequired:!1,bitOffset:1088,bitSize:64,byteSize:8,slot:4,name:"imagesize",structure:C},{...t,type:6,isRequired:!1,bitOffset:0,bitSize:128,byteSize:16,slot:5,name:"colorX",structure:p},{...t,type:6,isRequired:!1,bitOffset:128,bitSize:128,byteSize:16,slot:6,name:"colorY",structure:p},{...t,type:6,isRequired:!1,bitOffset:256,bitSize:128,byteSize:16,slot:7,name:"colorZ",structure:p},{...t,type:6,isRequired:!1,bitOffset:384,bitSize:128,byteSize:16,slot:8,name:"bgcolor",structure:p},{...t,type:6,isRequired:!1,bitOffset:512,bitSize:512,byteSize:64,slot:9,name:"orientation",structure:Wt}],methods:[],template:{memory:{array:Cs}}},slot:29});Object.assign(Re,{...m,type:8,name:"@typeInfo(@typeInfo(@TypeOf(cubic-space.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...t,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:58});Object.assign(Ae,{...m,type:7,name:"@typeInfo(@typeInfo(@TypeOf(cubic-space.createOutput)).Fn.return_type.?).ErrorUnion.error_set!cubic-space.KernelOutput(u8,cubic-space.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:J},{...t,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Re}],methods:[],template:null},slot:36});Object.assign(qe,{...m,type:3,name:"createOutput",length:1,byteSize:224,align:4,hasPointer:!0,instance:{members:[{...t,type:3,bitOffset:1280,bitSize:32,byteSize:4,slot:0,name:"0",structure:f},{...t,type:3,bitOffset:1312,bitSize:32,byteSize:4,slot:1,name:"1",structure:f},{...t,type:6,bitOffset:1344,bitSize:192,byteSize:24,slot:2,name:"2",structure:H},{...t,type:6,bitOffset:0,bitSize:1280,byteSize:160,slot:3,name:"3",structure:N},{...t,type:6,bitOffset:1536,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Ae}],methods:[],template:null},slot:34});Object.assign(we,{...m,type:8,name:"@typeInfo(@typeInfo(@TypeOf(cubic-space.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...t,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:59});Object.assign(Ue,{...m,type:7,name:"@typeInfo(@typeInfo(@TypeOf(cubic-space.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set!cubic-space.KernelOutput(u8,cubic-space.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...t,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:J},{...t,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:we}],methods:[],template:null},slot:37});Object.assign(Oe,{...m,type:3,name:"createPartialOutput",length:1,byteSize:240,align:4,hasPointer:!0,instance:{members:[{...t,type:3,bitOffset:1280,bitSize:32,byteSize:4,slot:0,name:"0",structure:f},{...t,type:3,bitOffset:1312,bitSize:32,byteSize:4,slot:1,name:"1",structure:f},{...t,type:3,bitOffset:1344,bitSize:32,byteSize:4,slot:2,name:"2",structure:f},{...t,type:3,bitOffset:1376,bitSize:32,byteSize:4,slot:3,name:"3",structure:f},{...t,type:6,bitOffset:1408,bitSize:192,byteSize:24,slot:4,name:"4",structure:H},{...t,type:6,bitOffset:0,bitSize:1280,byteSize:160,slot:5,name:"5",structure:N},{...t,type:6,bitOffset:1600,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Ue}],methods:[],template:null},slot:35});const Is={argStruct:qe,thunk:5,name:"createOutput"},Bs={argStruct:Oe,thunk:2,name:"createPartialOutput"};Object.assign(je,{...m,type:2,name:"cubic-space",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Ce}}},static:{members:[{...t,type:7,isRequired:!1,name:"kernel",structure:Ve},{...t,type:7,isRequired:!1,name:"Input",structure:H},{...t,type:7,isRequired:!1,name:"Output",structure:J},{...t,type:7,isRequired:!1,name:"Parameters",structure:N}],methods:[Is,Bs],template:null},slot:0});const ks=[V,F,D,j,kt,Gt,rt,_,R,d,C,o,e,vt,st,Et,at,Kt,it,Z,$,I,Ft,ct,Dt,pt,Mt,lt,Xt,ut,Yt,nt,Zt,yt,$t,ft,Lt,dt,p,A,w,h,k,G,q,M,x,Ht,_t,Jt,bt,Nt,ht,Qt,gt,Wt,P,S,te,St,ee,zt,T,z,me,Vt,oe,Rt,re,At,se,qt,ae,wt,ie,Ut,ce,Ot,pe,jt,le,xt,Pt,L,B,ue,Tt,ne,Ct,Ve,v,ye,fe,f,de,X,Y,It,H,_e,be,Bt,J,N,Re,Ae,qe,we,Ue,Oe,je],Gs=pm(ks),vs=je.constructor,Es=(async()=>{const u=new URL("cubic-space-1006f13c.wasm",import.meta.url).href;return fetch(u)})();lm(Es,{...Gs,writeBack:!0});const{createOutput:$s,createPartialOutput:Ks,kernel:ze,Input:Fs,Output:Ls,Parameters:Hs}=vs;function Ds(u,y,a,s,i={},U={}){if(Array.isArray(i)){const g=i;i={};for(const[b,O]of Object.keys(ze.inputImages).entries())i[O]=g[b]}const Q=new Fs(void 0),W=Object.keys(ze.inputImages),n=[];let E;for(const g of W){let b=i[g];if(b||(W.length===1&&["data","width","height"].every(O=>!!i[O])?b=i:n.push(g)),Q[g]=b,E){if(b.colorSpace!==E)throw new Error(`Input images must all use the same color space: ${E}`)}else E=b.colorSpace}if(n.length>0)throw new Error(`Missing input image${n.length>1?"s":""}: ${n.join(", ")}`);const he=Ks(u,y,a,s,Q,U),Ie=g=>{const b=Object.keys(g),O={};for(const Be of b){const{data:{typedArray:tt},width:ke,height:Xe}=g[Be];let et;if(typeof ImageData=="function"){const Ye=new Uint8ClampedArray(tt.buffer,tt.byteOffset,tt.byteLength);et=new ImageData(Ye,ke,s,{colorSpace:E})}else et={data:tt,width:ke,height:Xe};if(b.length===1)return et;O[Be]=et}return O};return he[Symbol.toStringTag]==="Promise"?he.then(Ie):Ie(he)}function Ms(){const u={};for(let[y,a]of Object.entries(ze)){if(y==="parameters"){const s={};for(const[i,U]of Object.entries(a)){const Q=s[i]={};for(let[W,n]of Object.entries(U))typeof n=="object"?"string"in n?n=n.string:n=Me(n):typeof n=="function"&&(n=Xs(n.name)),Q[W]=n}a=s}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());u[y]=a}return u}function Me(u){const y=[];for(let[a,s]of Object.entries(u))typeof s=="object"&&(s=Me(s)),y[a]=s;return y}function Xs(u){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[u]}onmessage=u=>{const[y,a,...s]=u.data;Ys(y,s).then(([i,U])=>{postMessage([y,a,i],{transfer:U})}).catch(i=>{postMessage(["error",a,i])})};async function Ys(u,y){switch(u){case"getKernelInfo":return[Ms(...y)];case"createPartialImageData":const s=await Ds(...y),i=[];if("data"in s&&"width"in s&&"height"in s)i.push(s.data.buffer);else for(const U of Object.entries(s))i.push(s.data.buffer);return[s,i];default:throw new Error(`Unknown function: ${u}`)}}
