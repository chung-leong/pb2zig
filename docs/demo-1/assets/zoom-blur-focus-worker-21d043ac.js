import{u as Ke,a as Fe,b as De,d as Te,c as Me,e as He,f as $e,g as Be,h as Le,i as Ge,j as Je,k as Ne,l as Qe,m as We,n as Xe,o as Ye,p as Ze,q as et,r as tt}from"./index-778418ea.js";Ke();Fe();De();Te();Me();He();$e();Be();Le();Ge();Je();Ne();Qe();We();Xe();Ye();Ze();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},g={},X={},Y={},K={},Z={},ee={},F={},m={},S={},te={},se={},D={},c={},n={},s={},re={},T={},h={},z={},ae={},M={},ie={},H={},b={},me={},$={},ne={},B={},oe={},L={},ue={},G={},_={},R={},le={},J={},ce={},N={},ge={},q={},ye={},pe={},y={},fe={},A={},U={},be={},Q={},x={},de={},ze={},W={},P={},I={},Ve={},Oe={},Re={},qe={},we={},Ae={},Ue={};Object.assign(g,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:5});Object.assign(X,{...t,type:1,name:"[9:0]u8",length:9,byteSize:10,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:4});Object.assign(Y,{...t,type:11,name:"*const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:3});Object.assign(K,{...t,type:11,name:"**const [9:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[],template:null},slot:2});Object.assign(Z,{...t,type:1,name:"[17:0]u8",length:17,byteSize:18,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:8});Object.assign(ee,{...t,type:11,name:"*const [17:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:7});Object.assign(F,{...t,type:11,name:"**const [17:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:6});Object.assign(m,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[],template:null},slot:10});Object.assign(S,{...t,type:11,name:"*i32",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:m}],methods:[],template:null},slot:9});Object.assign(te,{...t,type:1,name:"[107:0]u8",length:107,byteSize:108,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:13});Object.assign(se,{...t,type:11,name:"*const [107:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:12});Object.assign(D,{...t,type:11,name:"**const [107:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:11});Object.assign(c,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:33});Object.assign(n,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:n}],methods:[],template:null},slot:57});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:n}],methods:[],template:null},slot:56});const st=new Uint8Array([]),rt=new Uint8Array([136,2,16,0]),j=new Uint8Array([0,0,0,0,0,0,0,0]),at=new Uint8Array([216,2,16,0]),it=new Uint8Array([0,0,0,0,0,0,224,63]),mt=new Uint8Array([208,2,16,0]),nt=new Uint8Array([0,0,0,0,0,0,208,63]);Object.assign(re,{...t,type:2,name:"struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 0.5, comptime defaultValue: comptime_float = 0.25}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:c},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:st},slots:{0:{structure:s,memory:{array:rt},slots:{0:{structure:n,memory:{array:j},address:1049224}}},1:{structure:s,memory:{array:at},slots:{0:{structure:n,memory:{array:it},address:1049304}}},2:{structure:s,memory:{array:mt},slots:{0:{structure:n,memory:{array:nt},address:1049296}}}}}},slot:40});Object.assign(T,{...t,type:11,name:"*const struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 0.5, comptime defaultValue: comptime_float = 0.25}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:39});Object.assign(h,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:34});Object.assign(z,{...t,type:11,name:"*const @Vector(2, f32)",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:h}],methods:[],template:null},slot:58});const ot=new Uint8Array([]),ut=new Uint8Array([200,2,16,0]),lt=new Uint8Array([0,0,0,0,0,0,0,0]),ct=new Uint8Array([192,2,16,0]),yt=new Uint8Array([0,0,97,68,0,0,97,68]),pt=new Uint8Array([184,2,16,0]),ft=new Uint8Array([0,0,72,67,0,0,72,67]);Object.assign(ae,{...t,type:2,name:"struct{comptime type: type = @Vector(2, f32), comptime minValue: @Vector(2, f32) = .{ 0, 0 }, comptime maxValue: @Vector(2, f32) = .{ 900, 900 }, comptime defaultValue: @Vector(2, f32) = .{ 200, 200 }}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:h},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:z},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:z},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:z}],methods:[],template:{memory:{array:ot},slots:{0:{structure:z,memory:{array:ut},slots:{0:{structure:h,memory:{array:lt},address:1049288}}},1:{structure:z,memory:{array:ct},slots:{0:{structure:h,memory:{array:yt},address:1049280}}},2:{structure:z,memory:{array:pt},slots:{0:{structure:h,memory:{array:ft},address:1049272}}}}}},slot:42});Object.assign(M,{...t,type:11,name:"*const struct{comptime type: type = @Vector(2, f32), comptime minValue: @Vector(2, f32) = .{ 0, 0 }, comptime maxValue: @Vector(2, f32) = .{ 900, 900 }, comptime defaultValue: @Vector(2, f32) = .{ 200, 200 }}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:41});const bt=new Uint8Array([]),dt=new Uint8Array([136,2,16,0]),zt=new Uint8Array([176,2,16,0]),ht=new Uint8Array([0,0,0,0,0,64,127,64]),St=new Uint8Array([168,2,16,0]),gt=new Uint8Array([0,0,0,0,0,0,89,64]);Object.assign(ie,{...t,type:2,name:"struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 500, comptime defaultValue: comptime_float = 100}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:c},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:bt},slots:{0:{structure:s,memory:{array:dt},slots:{0:{structure:n,memory:{array:j},address:1049224}}},1:{structure:s,memory:{array:zt},slots:{0:{structure:n,memory:{array:ht},address:1049264}}},2:{structure:s,memory:{array:St},slots:{0:{structure:n,memory:{array:gt},address:1049256}}}}}},slot:44});Object.assign(H,{...t,type:11,name:"*const struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 500, comptime defaultValue: comptime_float = 100}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:43});Object.assign(b,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:m}],methods:[],template:null},slot:59});const Vt=new Uint8Array([]),Ot=new Uint8Array([160,2,16,0]),Ie=new Uint8Array([0,0,0,0]),Rt=new Uint8Array([164,2,16,0]),qt=new Uint8Array([1,0,0,0]),wt=new Uint8Array([160,2,16,0]);Object.assign(me,{...t,type:2,name:"struct{comptime type: type = i32, comptime minValue: comptime_int = 0, comptime maxValue: comptime_int = 1, comptime defaultValue: comptime_int = 0}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:b},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:b},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:b}],methods:[],template:{memory:{array:Vt},slots:{0:{structure:b,memory:{array:Ot},slots:{0:{structure:m,memory:{array:Ie},address:1049248}}},1:{structure:b,memory:{array:Rt},slots:{0:{structure:m,memory:{array:qt},address:1049252}}},2:{structure:b,memory:{array:wt},slots:{0:{structure:m,memory:{array:Ie},address:1049248}}}}}},slot:46});Object.assign($,{...t,type:11,name:"*const struct{comptime type: type = i32, comptime minValue: comptime_int = 0, comptime maxValue: comptime_int = 1, comptime defaultValue: comptime_int = 0}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:45});const At=new Uint8Array([]),Ut=new Uint8Array([136,2,16,0]),jt=new Uint8Array([144,2,16,0]),ke=new Uint8Array([0,0,0,0,0,0,240,63]),_t=new Uint8Array([152,2,16,0]),xt=new Uint8Array([51,51,51,51,51,51,227,63]);Object.assign(ne,{...t,type:2,name:"struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0.6}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:c},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:At},slots:{0:{structure:s,memory:{array:Ut},slots:{0:{structure:n,memory:{array:j},address:1049224}}},1:{structure:s,memory:{array:jt},slots:{0:{structure:n,memory:{array:ke},address:1049232}}},2:{structure:s,memory:{array:_t},slots:{0:{structure:n,memory:{array:xt},address:1049240}}}}}},slot:48});Object.assign(B,{...t,type:11,name:"*const struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0.6}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:47});const Pt=new Uint8Array([]),It=new Uint8Array([136,2,16,0]),kt=new Uint8Array([144,2,16,0]),vt=new Uint8Array([136,2,16,0]);Object.assign(oe,{...t,type:2,name:"struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:c},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:Pt},slots:{0:{structure:s,memory:{array:It},slots:{0:{structure:n,memory:{array:j},address:1049224}}},1:{structure:s,memory:{array:kt},slots:{0:{structure:n,memory:{array:ke},address:1049232}}},2:{structure:s,memory:{array:vt},slots:{0:{structure:n,memory:{array:j},address:1049224}}}}}},slot:50});Object.assign(L,{...t,type:11,name:"*const struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:49});const Ct=new Uint8Array([]),Et=new Uint8Array([170,170,170,170]),p=new Uint8Array([]),Kt=new Uint8Array([170,170,170,170]),Ft=new Uint8Array([170,170,170,170]),Dt=new Uint8Array([170,170,170,170]),Tt=new Uint8Array([170,170,170,170]),Mt=new Uint8Array([170,170,170,170]);Object.assign(ue,{...t,type:2,name:"struct{comptime amount: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 0.5, comptime defaultValue: comptime_float = 0.25} = .{.type = f32, .minValue = 0, .maxValue = 0.5, .defaultValue = 0.25}, comptime center: struct{comptime type: type = @Vector(2, f32), comptime minValue: @Vector(2, f32) = .{ 0, 0 }, comptime maxValue: @Vector(2, f32) = .{ 900, 900 }, comptime defaultValue: @Vector(2, f32) = .{ 200, 200 }} = .{.type = @Vector(2, f32), .minValue = .{ 0, 0 }, .maxValue = .{ 900, 900 }, .defaultValue = .{ 200, 200 }}, comptime focalSize: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 500, comptime defaultValue: comptime_float = 100} = .{.type = f32, .minValue = 0, .maxValue = 500, .defaultValue = 100}, comptime invert: struct{comptime type: type = i32, comptime minValue: comptime_int = 0, comptime maxValue: comptime_int = 1, comptime defaultValue: comptime_int = 0} = .{.type = i32, .minValue = 0, .maxValue = 1, .defaultValue = 0}, comptime vignette: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0.6} = .{.type = f32, .minValue = 0, .maxValue = 1, .defaultValue = 0.6}, comptime edgeHardness: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0} = .{.type = f32, .minValue = 0, .maxValue = 1, .defaultValue = 0}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"amount",structure:T},{...e,type:8,isRequired:!1,slot:1,name:"center",structure:M},{...e,type:8,isRequired:!1,slot:2,name:"focalSize",structure:H},{...e,type:8,isRequired:!1,slot:3,name:"invert",structure:$},{...e,type:8,isRequired:!1,slot:4,name:"vignette",structure:B},{...e,type:8,isRequired:!1,slot:5,name:"edgeHardness",structure:L}],methods:[],template:{memory:{array:Ct},slots:{0:{structure:T,memory:{array:Et},slots:{0:{structure:re,memory:{array:p},address:-1431655766}}},1:{structure:M,memory:{array:Kt},slots:{0:{structure:ae,memory:{array:p},address:-1431655766}}},2:{structure:H,memory:{array:Ft},slots:{0:{structure:ie,memory:{array:p},address:-1431655766}}},3:{structure:$,memory:{array:Dt},slots:{0:{structure:me,memory:{array:p},address:-1431655766}}},4:{structure:B,memory:{array:Tt},slots:{0:{structure:ne,memory:{array:p},address:-1431655766}}},5:{structure:L,memory:{array:Mt},slots:{0:{structure:oe,memory:{array:p},address:-1431655766}}}}}},slot:15});Object.assign(G,{...t,type:11,name:"*struct{comptime amount: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 0.5, comptime defaultValue: comptime_float = 0.25} = .{.type = f32, .minValue = 0, .maxValue = 0.5, .defaultValue = 0.25}, comptime center: struct{comptime type: type = @Vector(2, f32), comptime minValue: @Vector(2, f32) = .{ 0, 0 }, comptime maxValue: @Vector(2, f32) = .{ 900, 900 }, comptime defaultValue: @Vector(2, f32) = .{ 200, 200 }} = .{.type = @Vector(2, f32), .minValue = .{ 0, 0 }, .maxValue = .{ 900, 900 }, .defaultValue = .{ 200, 200 }}, comptime focalSize: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 500, comptime defaultValue: comptime_float = 100} = .{.type = f32, .minValue = 0, .maxValue = 500, .defaultValue = 100}, comptime invert: struct{comptime type: type = i32, comptime minValue: comptime_int = 0, comptime maxValue: comptime_int = 1, comptime defaultValue: comptime_int = 0} = .{.type = i32, .minValue = 0, .maxValue = 1, .defaultValue = 0}, comptime vignette: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0.6} = .{.type = f32, .minValue = 0, .maxValue = 1, .defaultValue = 0.6}, comptime edgeHardness: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0} = .{.type = f32, .minValue = 0, .maxValue = 1, .defaultValue = 0}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:14});const Ht=new Uint8Array([]),$t=new Uint8Array([128,2,16,0]),Bt=new Uint8Array([4,0,0,0]);Object.assign(_,{...t,type:2,name:"struct{comptime channels: comptime_int = 4}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:b}],methods:[],template:{memory:{array:Ht},slots:{0:{structure:b,memory:{array:$t},slots:{0:{structure:m,memory:{array:Bt},address:1049216}}}}}},slot:52});Object.assign(R,{...t,type:11,name:"*const struct{comptime channels: comptime_int = 4}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[],template:null},slot:51});const Lt=new Uint8Array([]),Gt=new Uint8Array([170,170,170,170]);Object.assign(le,{...t,type:2,name:"struct{comptime src: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:R}],methods:[],template:{memory:{array:Lt},slots:{0:{structure:R,memory:{array:Gt},slots:{0:{structure:_,memory:{array:p},address:-1431655766}}}}}},slot:17});Object.assign(J,{...t,type:11,name:"*struct{comptime src: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:16});const Jt=new Uint8Array([]),Nt=new Uint8Array([170,170,170,170]);Object.assign(ce,{...t,type:2,name:"struct{comptime dst: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:R}],methods:[],template:{memory:{array:Jt},slots:{0:{structure:R,memory:{array:Nt},slots:{0:{structure:_,memory:{array:p},address:-1431655766}}}}}},slot:19});Object.assign(N,{...t,type:11,name:"*struct{comptime dst: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:18});const Qt=new Uint8Array([]),Wt=new Uint8Array([]),Xt=new Uint8Array([44,251,15,0]),Yt=new Uint8Array([188,31,16,0]),Zt=new Uint8Array([99,111,109,46,97,98,114,105,108,0]),es=new Uint8Array([108,251,15,0]),ts=new Uint8Array([170,31,16,0]),ss=new Uint8Array([68,97,110,105,101,108,32,65,108,108,101,103,114,101,116,116,105,0]),rs=new Uint8Array([172,251,15,0]),as=new Uint8Array([1,0,0,0]),is=new Uint8Array([4,252,15,0]),ms=new Uint8Array([62,31,16,0]),ns=new Uint8Array([65,106,117,115,116,97,98,108,101,32,122,111,111,109,32,98,108,117,114,44,32,121,111,117,32,99,97,110,32,99,111,110,116,114,111,108,32,102,111,99,97,108,32,115,105,122,101,44,32,101,100,103,101,32,104,97,114,100,110,101,115,115,32,97,110,100,32,108,105,103,104,116,46,32,66,97,115,101,100,32,111,110,32,90,111,111,109,66,108,117,114,32,98,121,32,82,121,97,110,32,80,104,101,108,97,110,46,0]),os=new Uint8Array([170,170,170,170]),us=new Uint8Array([170,170,170,170]),ls=new Uint8Array([170,170,170,170]);Object.assign(ge,{...t,type:2,name:"zoom-blur-focus.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Qt}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:K},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:F},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:S},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:D},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:G},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:J},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:N}],methods:[],template:{memory:{array:Wt},slots:{0:{structure:K,memory:{array:Xt},slots:{0:{structure:Y,memory:{array:Yt},slots:{0:{structure:X,memory:{array:Zt},address:1056700}}}}},1:{structure:F,memory:{array:es},slots:{0:{structure:ee,memory:{array:ts},slots:{0:{structure:Z,memory:{array:ss},address:1056682}}}}},2:{structure:S,memory:{array:rs},slots:{0:{structure:m,memory:{array:as}}}},3:{structure:D,memory:{array:is},slots:{0:{structure:se,memory:{array:ms},slots:{0:{structure:te,memory:{array:ns},address:1056574}}}}},4:{structure:G,memory:{array:os},slots:{0:{structure:ue,memory:{array:p},address:-1431655766}}},5:{structure:J,memory:{array:us},slots:{0:{structure:le,memory:{array:p},address:-1431655766}}},6:{structure:N,memory:{array:ls},slots:{0:{structure:ce,memory:{array:p},address:-1431655766}}}}}},slot:1});Object.assign(q,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:24});Object.assign(ye,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:23});Object.assign(pe,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:ye}],methods:[],template:null},slot:22});Object.assign(y,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:25});const cs=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(fe,{...t,type:9,name:"zoom-blur-focus.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:m},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:m}],methods:[],template:{memory:{array:cs}}},slot:26});Object.assign(A,{...t,name:"bool",length:1,byteSize:1,align:0,instance:{members:[{...e,type:1,isRequired:!1,bitOffset:0,bitSize:1,byteSize:1,structure:A}],methods:[],template:null},slot:27});Object.assign(U,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:U}],methods:[],template:null},slot:28});Object.assign(be,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:53});const ys=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ps=new Uint8Array([]),fs=new Uint8Array([8,250,15,0]),bs=new Uint8Array([4,0,0,0]);Object.assign(Q,{...t,type:2,name:"zoom-blur-focus.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:pe},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:fe},{...e,type:1,isRequired:!1,bitOffset:168,bitSize:1,byteSize:1,slot:4,name:"premultiplied",structure:A},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:5,name:"offset",structure:U}],methods:[],template:{memory:{array:ys}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:q},{...e,type:7,isRequired:!1,name:"FPixel",structure:be},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:S}],methods:[],template:{memory:{array:ps},slots:{0:{structure:S,memory:{array:fs},slots:{0:{structure:m,memory:{array:bs}}}}}}},slot:21});const ds=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),zs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),hs=new Uint8Array([0,0,0,0,0,0,0,0]),je=new Uint8Array([]);Object.assign(x,{...t,type:2,name:"zoom-blur-focus.KernelInput(u8,zoom-blur-focus.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:Q}],methods:[],template:{memory:{array:ds},slots:{0:{structure:Q,memory:{array:zs},slots:{0:{structure:pe,memory:{array:hs},slots:{0:{structure:ye,memory:{array:je}}}}}}}}},slot:20});Object.assign(de,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:23});Object.assign(ze,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:de}],methods:[],template:null},slot:31});const Ss=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),gs=new Uint8Array([]),Vs=new Uint8Array([8,250,15,0]),Os=new Uint8Array([4,0,0,0]);Object.assign(W,{...t,type:2,name:"zoom-blur-focus.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:ze},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:fe},{...e,type:1,isRequired:!1,bitOffset:168,bitSize:1,byteSize:1,slot:4,name:"premultiplied",structure:A},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:5,name:"offset",structure:U}],methods:[],template:{memory:{array:Ss}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:q},{...e,type:7,isRequired:!1,name:"FPixel",structure:be},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:S}],methods:[],template:{memory:{array:gs},slots:{0:{structure:S,memory:{array:Vs},slots:{0:{structure:m,memory:{array:Os}}}}}}},slot:30});const Rs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),qs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ws=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(P,{...t,type:2,name:"zoom-blur-focus.KernelOutput(u8,zoom-blur-focus.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:W}],methods:[],template:{memory:{array:Rs},slots:{0:{structure:W,memory:{array:qs},slots:{0:{structure:ze,memory:{array:ws},slots:{0:{structure:de,memory:{array:je}}}}}}}}},slot:29});const As=new Uint8Array([0,0,72,67,0,0,72,67,0,0,128,62,0,0,200,66,0,0,0,0,154,153,25,63,0,0,0,0,0,0,0,0]);Object.assign(I,{...t,type:2,name:"zoom-blur-focus.KernelParameters(zoom-blur-focus.kernel)",length:1,byteSize:32,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:64,bitSize:32,byteSize:4,slot:0,name:"amount",structure:c},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,slot:1,name:"center",structure:h},{...e,type:4,isRequired:!1,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"focalSize",structure:c},{...e,type:2,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"invert",structure:m},{...e,type:4,isRequired:!1,bitOffset:160,bitSize:32,byteSize:4,slot:4,name:"vignette",structure:c},{...e,type:4,isRequired:!1,bitOffset:192,bitSize:32,byteSize:4,slot:5,name:"edgeHardness",structure:c}],methods:[],template:{memory:{array:As}}},slot:32});Object.assign(Ve,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(zoom-blur-focus.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:54});Object.assign(Oe,{...t,type:7,name:"@typeInfo(@typeInfo(@TypeOf(zoom-blur-focus.createOutput)).Fn.return_type.?).ErrorUnion.error_set!zoom-blur-focus.KernelOutput(u8,zoom-blur-focus.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:P},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Ve}],methods:[],template:null},slot:37});Object.assign(Re,{...t,type:3,name:"createOutput",length:1,byteSize:96,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:6,bitOffset:320,bitSize:192,byteSize:24,slot:2,name:"2",structure:x},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:3,name:"3",structure:I},{...e,type:6,bitOffset:512,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Oe}],methods:[],template:null},slot:35});Object.assign(qe,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(zoom-blur-focus.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:55});Object.assign(we,{...t,type:7,name:"@typeInfo(@typeInfo(@TypeOf(zoom-blur-focus.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set!zoom-blur-focus.KernelOutput(u8,zoom-blur-focus.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:P},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:qe}],methods:[],template:null},slot:38});Object.assign(Ae,{...t,type:3,name:"createPartialOutput",length:1,byteSize:104,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:3,bitOffset:320,bitSize:32,byteSize:4,slot:2,name:"2",structure:y},{...e,type:3,bitOffset:352,bitSize:32,byteSize:4,slot:3,name:"3",structure:y},{...e,type:6,bitOffset:384,bitSize:192,byteSize:24,slot:4,name:"4",structure:x},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:5,name:"5",structure:I},{...e,type:6,bitOffset:576,bitSize:224,byteSize:28,slot:6,name:"retval",structure:we}],methods:[],template:null},slot:36});const Us={argStruct:Re,thunk:1,name:"createOutput"},js={argStruct:Ae,thunk:6,name:"createPartialOutput"};Object.assign(Ue,{...t,type:2,name:"zoom-blur-focus",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:je}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:ge},{...e,type:7,isRequired:!1,name:"Input",structure:x},{...e,type:7,isRequired:!1,name:"Output",structure:P},{...e,type:7,isRequired:!1,name:"Parameters",structure:I}],methods:[Us,js],template:null},slot:0});const _s=[g,X,Y,K,Z,ee,F,m,S,te,se,D,c,n,s,re,T,h,z,ae,M,ie,H,b,me,$,ne,B,oe,L,ue,G,_,R,le,J,ce,N,ge,q,ye,pe,y,fe,A,U,be,Q,x,de,ze,W,P,I,Ve,Oe,Re,qe,we,Ae,Ue],xs=et(_s),Ps=Ue.constructor,Is=(async()=>{const o=new URL("zoom-blur-focus-f0efe51d.wasm",import.meta.url).href;return fetch(o)})();tt(Is,{...xs,writeBack:!0});const{createOutput:Ts,createPartialOutput:ks,kernel:Se,Input:vs,Output:Ms,Parameters:Hs}=Ps;function Cs(o,l,a,r,i={},V={}){if(Array.isArray(i)){const d=i;i={};for(const[f,O]of Object.keys(Se.inputImages).entries())i[O]=d[f]}const k=new vs(void 0),v=Object.keys(Se.inputImages),u=[];let w;for(const d of v){let f=i[d];if(f||(v.length===1&&["data","width","height"].every(O=>!!i[O])?f=i:u.push(d)),k[d]=f,w){if(f.colorSpace!==w)throw new Error(`Input images must all use the same color space: ${w}`)}else w=f.colorSpace}if(u.length>0)throw new Error(`Missing input image${u.length>1?"s":""}: ${u.join(", ")}`);const he=ks(o,l,a,r,k,V),_e=d=>{const f=Object.keys(d),O={};for(const xe of f){const{data:{typedArray:C},width:Pe,height:Ce}=d[xe];let E;if(typeof ImageData=="function"){const Ee=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);E=new ImageData(Ee,Pe,r,{colorSpace:w})}else E={data:C,width:Pe,height:Ce};if(f.length===1)return E;O[xe]=E}return O};return he[Symbol.toStringTag]==="Promise"?he.then(_e):_e(he)}function Es(){const o={};for(let[l,a]of Object.entries(Se)){if(l==="parameters"){const r={};for(const[i,V]of Object.entries(a)){const k=r[i]={};for(let[v,u]of Object.entries(V))typeof u=="object"?"string"in u?u=u.string:u=ve(u):typeof u=="function"&&(u=Ks(u.name)),k[v]=u}a=r}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());o[l]=a}return o}function ve(o){const l=[];for(let[a,r]of Object.entries(o))typeof r=="object"&&(r=ve(r)),l[a]=r;return l}function Ks(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[l,a,...r]=o.data;Fs(l,r).then(([i,V])=>{postMessage([l,a,i],{transfer:V})}).catch(i=>{postMessage(["error",a,i])})};async function Fs(o,l){switch(o){case"getKernelInfo":return[Es(...l)];case"createPartialImageData":const r=await Cs(...l),i=[];if("data"in r&&"width"in r&&"height"in r)i.push(r.data.buffer);else for(const V of Object.entries(r))i.push(r.data.buffer);return[r,i];default:throw new Error(`Unknown function: ${o}`)}}
