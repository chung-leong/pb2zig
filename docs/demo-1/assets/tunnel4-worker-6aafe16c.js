import{u as as,a as is,b as os,c as cs,d as us,e as ms,f as ys,g as bs,h as ls,i as gs,j as ps,k as fs,l as Os,m as Ss,n as zs,p as js,o as hs,q as ds,r as ws,s as As}from"./index-58d89d46.js";as();ps();fs();is();os();Os();Ss();zs();js();cs();us();ms();ys();hs();As();bs();ds();ls();gs();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},O={},$={},L={},B={},G={},b={},S={},H={},J={},o={},g={},w={},f={},V={},d={},N={},Q={},W={},X={},Y={},A={},Z={},tt={},bt={},k={},et={},q={},m={},p={},I={},lt={},st={},v={},rt={},E={},nt={},x={},C={},R={},gt={},pt={},T={},ft={},Ot={},St={},Bt={},at={},Gt={},it={},Ht={},Jt={},K={},Nt={},_={},Qt={},Wt={},zt={},ot={},jt={},ht={},dt={},Xt={},wt={},Yt={},At={},Zt={},te={},Ut={},Pt={},Vt={},It={},ee={},Rt={},se={},kt={},qt={},vt={},re={},ct={},ne={},ae={},Et={},ie={},xt={},oe={},ce={},ue={},me={},ye={},be={},le={},ge={},pe={},fe={},Oe={},Se={},ze={},je={},he={},de={},we={},Ct={},Ae={},Ue={},Kt={},Pe={},_t={},Ve={},Ie={},Re={},ke={},qe={},ve={},Ee={},Dt={},xe={},Ce={},Ke={},_e={},De={},Fe={},Me={},Te={},$e={},Le={},Ft={},Be={},Ge={},He={},Je={},Ne={},Qe={},We={},Xe={},Ye={},Ze={},Us=new Uint8Array,Ps=new Uint8Array([0,0,0,0,0,0,0,0]),Vs=new Uint8Array,Is=new Uint8Array([0,0,0,0,0,0,0,0]),Rs=new Uint8Array,ks=new Uint8Array([0,0,0,0,0,0,128,64]),qs=new Uint8Array,vs=new Uint8Array([0,0,0,0,0,0,128,64]),Es=new Uint8Array,xs=new Uint8Array,Cs=new Uint8Array,Ks=new Uint8Array,_s=new Uint8Array,Ds=new Uint8Array([0,0,0,0,0,0,112,64]),Fs=new Uint8Array,Ms=new Uint8Array([0,0,0,0,0,0,112,64]),Ts=new Uint8Array,$s=new Uint8Array,Ls=new Uint8Array,Bs=new Uint8Array,Gs=new Uint8Array,Hs=new Uint8Array,Js=new Uint8Array,Ns=new Uint8Array,Qs=new Uint8Array,Ws=new Uint8Array([4]),Xs=new Uint8Array,Ys=new Uint8Array,Zs=new Uint8Array([78,16,0,1]),tr=new Uint8Array([84,117,110,110,101,108,32,52,0]),er=new Uint8Array([98,16,0,1]),sr=new Uint8Array([77,114,46,100,111,111,98,0]),rr=new Uint8Array,nr=new Uint8Array([1]),ar=new Uint8Array([123,16,0,1]),ir=new Uint8Array([84,117,110,110,101,108,32,101,102,102,101,99,116,32,52,0]),or=new Uint8Array,cr=new Uint8Array,ur=new Uint8Array,mr=new Uint8Array([0]),yr=new Uint8Array([1]),ts=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),br=new Uint8Array,lr=new Uint8Array,gr=new Uint8Array,pr=new Uint8Array,fr=new Uint8Array([4]),Mt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),es=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Or=new Uint8Array,Sr=new Uint8Array,zr=new Uint8Array,jr=new Uint8Array,hr=new Uint8Array([4]),Tt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),dr=new Uint8Array([0,0,0,68,0,0,0,68,0,0,128,67,0,0,128,67,0,0,0,0,0,0,0,0]),wr=new Uint8Array([27,0]),Ar=new Uint8Array,Ur=new Uint8Array,Pr=new Uint8Array,Vr=new Uint8Array;Object.assign(Bt,{slots:{0:at,1:it}});Object.assign(at,{structure:o,memory:{array:Us},slots:{0:Gt}});Object.assign(Gt,{structure:g,memory:{array:Ps}});Object.assign(it,{structure:o,memory:{array:Vs},slots:{0:Ht}});Object.assign(Ht,{structure:g,memory:{array:Is}});Object.assign(Jt,{slots:{0:K,1:_}});Object.assign(K,{structure:o,memory:{array:Rs},slots:{0:Nt}});Object.assign(Nt,{structure:g,memory:{array:ks}});Object.assign(_,{structure:o,memory:{array:qs},slots:{0:Qt}});Object.assign(Qt,{structure:g,memory:{array:vs}});Object.assign(Wt,{slots:{0:zt,1:jt,2:ht,3:dt}});Object.assign(zt,{structure:s,memory:{array:Es},slots:{0:ot}});Object.assign(ot,{structure:d});Object.assign(jt,{structure:w,memory:{array:xs},slots:{0:at,1:it}});Object.assign(ht,{structure:f,memory:{array:Cs},slots:{0:K,1:_}});Object.assign(dt,{structure:f,memory:{array:Ks},slots:{0:K,1:_}});Object.assign(Xt,{slots:{0:wt,1:At}});Object.assign(wt,{structure:o,memory:{array:_s},slots:{0:Yt}});Object.assign(Yt,{structure:g,memory:{array:Ds}});Object.assign(At,{structure:o,memory:{array:Fs},slots:{0:Zt}});Object.assign(Zt,{structure:g,memory:{array:Ms}});Object.assign(te,{slots:{0:Ut,1:Pt,2:Vt,3:It}});Object.assign(Ut,{structure:s,memory:{array:Ts},slots:{0:ot}});Object.assign(Pt,{structure:w,memory:{array:$s},slots:{0:at,1:it}});Object.assign(Vt,{structure:f,memory:{array:Ls},slots:{0:K,1:_}});Object.assign(It,{structure:Q,memory:{array:Bs},slots:{0:wt,1:At}});Object.assign(ee,{slots:{0:Rt}});Object.assign(Rt,{structure:s,memory:{array:Gs},slots:{0:ot}});Object.assign(se,{slots:{0:kt,1:qt,2:vt}});Object.assign(kt,{structure:N,memory:{array:Hs},slots:{0:zt,1:jt,2:ht,3:dt}});Object.assign(qt,{structure:W,memory:{array:Js},slots:{0:Ut,1:Pt,2:Vt,3:It}});Object.assign(vt,{structure:X,memory:{array:Ns},slots:{0:Rt}});Object.assign(re,{slots:{0:ct}});Object.assign(ct,{structure:b,memory:{array:Qs},slots:{0:ne}});Object.assign(ne,{structure:S,memory:{array:Ws}});Object.assign(ae,{slots:{0:Et}});Object.assign(Et,{structure:A,memory:{array:Xs},slots:{0:ct}});Object.assign(ie,{slots:{0:xt}});Object.assign(xt,{structure:A,memory:{array:Ys},slots:{0:ct}});Object.assign(oe,{slots:{0:ce,1:me,2:be,3:ge,4:fe,5:Oe,6:Se}});Object.assign(ce,{structure:L,memory:{array:Zs},slots:{0:ue}});Object.assign(ue,{structure:$,memory:{array:tr},reloc:16781390,const:!0});Object.assign(me,{structure:G,memory:{array:er},slots:{0:ye}});Object.assign(ye,{structure:B,memory:{array:sr},reloc:16781410,const:!0});Object.assign(be,{structure:b,memory:{array:rr},slots:{0:le}});Object.assign(le,{structure:S,memory:{array:nr}});Object.assign(ge,{structure:J,memory:{array:ar},slots:{0:pe}});Object.assign(pe,{structure:H,memory:{array:ir},reloc:16781435,const:!0});Object.assign(fe,{structure:Y,memory:{array:or},slots:{0:kt,1:qt,2:vt}});Object.assign(Oe,{structure:Z,memory:{array:cr},slots:{0:Et}});Object.assign(Se,{structure:tt,memory:{array:ur},slots:{0:xt}});Object.assign(ze,{slots:{0:je,1:he}});Object.assign(je,{structure:p,memory:{array:mr}});Object.assign(he,{structure:p,memory:{array:yr}});Object.assign(de,{memory:{array:ts},slots:{0:we}});Object.assign(we,{structure:q,memory:{array:ts,offset:0,length:8},slots:{0:Ct}});Object.assign(Ct,{structure:et,memory:{array:br},reloc:0,const:!0});Object.assign(Ae,{slots:{0:Ue,1:Pe,2:Ve}});Object.assign(Ue,{structure:s,memory:{array:lr},slots:{0:Kt}});Object.assign(Kt,{structure:k});Object.assign(Pe,{structure:s,memory:{array:gr},slots:{0:_t}});Object.assign(_t,{structure:lt});Object.assign(Ve,{structure:b,memory:{array:pr},slots:{0:Ie}});Object.assign(Ie,{structure:S,memory:{array:fr}});Object.assign(Re,{memory:{array:Mt},slots:{0:ke}});Object.assign(ke,{structure:st,memory:{array:Mt},slots:{0:qe}});Object.assign(qe,{structure:q,memory:{array:Mt,offset:0,length:8},slots:{0:Ct}});Object.assign(ve,{memory:{array:es},slots:{0:Ee}});Object.assign(Ee,{structure:E,memory:{array:es,offset:0,length:8},slots:{0:Dt}});Object.assign(Dt,{structure:rt,memory:{array:Or},reloc:0});Object.assign(xe,{slots:{0:Ce,1:Ke,2:_e}});Object.assign(Ce,{structure:s,memory:{array:Sr},slots:{0:Kt}});Object.assign(Ke,{structure:s,memory:{array:zr},slots:{0:_t}});Object.assign(_e,{structure:b,memory:{array:jr},slots:{0:De}});Object.assign(De,{structure:S,memory:{array:hr}});Object.assign(Fe,{memory:{array:Tt},slots:{0:Me}});Object.assign(Me,{structure:nt,memory:{array:Tt},slots:{0:Te}});Object.assign(Te,{structure:E,memory:{array:Tt,offset:0,length:8},slots:{0:Dt}});Object.assign($e,{memory:{array:dr}});Object.assign(Le,{slots:{0:Ft}});Object.assign(Ft,{structure:R,memory:{array:wr}});Object.assign(Be,{slots:{0:Ft}});Object.assign(Ge,{slots:{0:He,1:Ne,2:We,3:Ye}});Object.assign(He,{structure:s,memory:{array:Ar},slots:{0:Je}});Object.assign(Je,{structure:bt});Object.assign(Ne,{structure:s,memory:{array:Ur},slots:{0:Qe}});Object.assign(Qe,{structure:v});Object.assign(We,{structure:s,memory:{array:Pr},slots:{0:Xe}});Object.assign(Xe,{structure:x});Object.assign(Ye,{structure:s,memory:{array:Vr},slots:{0:Ze}});Object.assign(Ze,{structure:C});const Ir={argStruct:pt,thunkId:2,name:"createOutput"},Rr={argStruct:Ot,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(O,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign($,{...e,type:1,name:"[8:0]u8",length:8,byteSize:9,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(L,{...e,type:13,name:"*const [8:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[]}});Object.assign(B,{...e,type:1,name:"[7:0]u8",length:7,byteSize:8,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(G,{...e,type:13,name:"*const [7:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:B}],methods:[]}});Object.assign(b,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:b}],methods:[]}});Object.assign(S,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(H,{...e,type:1,name:"[15:0]u8",length:15,byteSize:16,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(J,{...e,type:13,name:"*const [15:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[]}});Object.assign(o,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:o}],methods:[]}});Object.assign(g,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:g}],methods:[]}});Object.assign(w,{...e,type:2,name:"Struct738220547",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:o},{...t,type:9,slot:1,name:"1",structure:o}],methods:[],template:Bt}});Object.assign(f,{...e,type:2,name:"Struct2210712367",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:o},{...t,type:9,slot:1,name:"1",structure:o}],methods:[],template:Jt}});Object.assign(V,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(d,{...e,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(N,{...e,type:2,name:"Struct42009499",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:w},{...t,type:9,slot:2,name:"maxValue",structure:f},{...t,type:9,slot:3,name:"defaultValue",structure:f}],methods:[],template:Wt}});Object.assign(Q,{...e,type:2,name:"Struct1632360224",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:o},{...t,type:9,slot:1,name:"1",structure:o}],methods:[],template:Xt}});Object.assign(W,{...e,type:2,name:"Struct738476154",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:w},{...t,type:9,slot:2,name:"maxValue",structure:f},{...t,type:9,slot:3,name:"defaultValue",structure:Q}],methods:[],template:te}});Object.assign(X,{...e,type:2,name:"Struct1916818985",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s}],methods:[],template:ee}});Object.assign(Y,{...e,type:2,name:"Struct1432184459",align:1,instance:{members:[{...t,type:9,slot:0,name:"imgSize",structure:N},{...t,type:9,slot:1,name:"center",structure:W},{...t,type:9,slot:2,name:"offset",structure:X}],methods:[],template:se}});Object.assign(A,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:b}],methods:[],template:re}});Object.assign(Z,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:9,slot:0,name:"src",structure:A}],methods:[],template:ae}});Object.assign(tt,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:9,slot:0,name:"dst",structure:A}],methods:[],template:ie}});Object.assign(bt,{...e,type:2,name:"tunnel4.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:L},{...t,type:9,slot:1,name:"vendor",structure:G},{...t,type:9,slot:2,name:"version",structure:b},{...t,type:9,slot:3,name:"description",structure:J},{...t,type:9,slot:4,name:"parameters",structure:Y},{...t,type:9,slot:5,name:"inputImages",structure:Z},{...t,type:9,slot:6,name:"outputImages",structure:tt}],methods:[],template:oe}});Object.assign(k,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(et,{...e,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(q,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:et}],methods:[]}});Object.assign(m,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[]}});Object.assign(p,{...e,type:11,name:"tunnel4.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:p},{...t,type:9,slot:1,name:"display-p3",structure:p}],methods:[],template:ze}});Object.assign(I,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(lt,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(st,{...e,type:2,name:"tunnel4.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:q},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:I}],methods:[],template:de},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:b}],methods:[],template:Ae}});Object.assign(v,{...e,type:2,name:"tunnel4.KernelInput(u8,tunnel4.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:st}],methods:[],template:Re}});Object.assign(rt,{...e,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(E,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:rt}],methods:[]}});Object.assign(nt,{...e,type:2,name:"tunnel4.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:E},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:I}],methods:[],template:ve},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:b}],methods:[],template:xe}});Object.assign(x,{...e,type:2,name:"tunnel4.KernelOutput(u8,tunnel4.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:nt}],methods:[],template:Fe}});Object.assign(C,{...e,type:2,name:"tunnel4.KernelParameters(tunnel4.kernel)",byteSize:24,align:8,instance:{members:[{...t,type:7,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"imgSize",structure:d},{...t,type:7,bitOffset:64,bitSize:64,byteSize:8,slot:1,name:"center",structure:d},{...t,type:7,bitOffset:128,bitSize:64,byteSize:8,slot:2,name:"offset",structure:d}],methods:[],template:$e}});Object.assign(R,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(tunnel4.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:R}],methods:[],template:Le}});Object.assign(gt,{...e,type:9,name:"ErrorSet3637325587!tunnel4.KernelOutput(u8,tunnel4.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:x},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:R}],methods:[]}});Object.assign(pt,{...e,type:5,name:"createOutput",byteSize:88,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:192,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...t,type:3,isRequired:!0,bitOffset:224,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...t,type:7,isRequired:!0,bitOffset:256,bitSize:192,byteSize:24,slot:0,name:"2",structure:v},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:192,byteSize:24,slot:1,name:"3",structure:C},{...t,type:7,isRequired:!0,bitOffset:448,bitSize:224,byteSize:28,slot:2,name:"retval",structure:gt}],methods:[]}});Object.assign(T,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(tunnel4.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:T}],methods:[],template:Be}});Object.assign(ft,{...e,type:9,name:"ErrorSet3704653998!tunnel4.KernelOutput(u8,tunnel4.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:x},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:T}],methods:[]}});Object.assign(Ot,{...e,type:5,name:"createPartialOutput",byteSize:96,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:192,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...t,type:3,isRequired:!0,bitOffset:224,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...t,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:5,name:"2",structure:m},{...t,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:6,name:"3",structure:m},{...t,type:7,isRequired:!0,bitOffset:320,bitSize:192,byteSize:24,slot:0,name:"4",structure:v},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:192,byteSize:24,slot:1,name:"5",structure:C},{...t,type:7,isRequired:!0,bitOffset:512,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ft}],methods:[]}});Object.assign(St,{...e,type:2,name:"tunnel4",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:s},{...t,type:9,slot:1,name:"Input",structure:s},{...t,type:9,slot:2,name:"Output",structure:s},{...t,type:9,slot:3,name:"Parameters",structure:s}],methods:[Ir,Rr],template:Ge}});const kr=[s,O,$,L,B,G,b,S,H,J,o,g,w,f,V,d,N,Q,W,X,Y,A,Z,tt,bt,k,et,q,m,p,I,lt,st,v,rt,E,nt,x,C,R,gt,pt,T,ft,Ot,St],qr=St,vr={runtimeSafety:!1,littleEndian:!0},ut=ws();ut.getControlObject();ut.recreateStructures(kr,vr);const Er=(async()=>{const i=new URL("tunnel4-9eac0544.wasm",import.meta.url).href;return fetch(i)})();ut.loadModule(Er);ut.linkVariables(!0);const{constructor:xr}=qr,{createPartialOutput:Cr,Input:Kr,kernel:yt}=xr;function _r(i,c,n,r,a={},z={}){const j=[];for(const[y]of yt.inputImages)j.push(y);const U=[];for(const[y]of yt.outputImages)U.push(y);if(Array.isArray(a)){const y=a;a={};for(const[l,h]of j.entries())a[h]=y[l]}const u=new Kr(void 0),D=[];let P;for(const y of j){let l=a[y];if(l||(j.length===1&&["data","width","height"].every(h=>!!a[h])?l=a:D.push(y)),u[y]=l,P){if(l.colorSpace!==P)throw new Error(`Input images must all use the same color space: ${P}`)}else P=l.colorSpace}if(D.length>0)throw new Error(`Missing input image${D.length>1?"s":""}: ${D.join(", ")}`);const mt=Cr(i,c,n,r,u,z),$t=y=>{const l={};for(const h of U){const{data:{typedArray:F},width:Lt,height:rs}=y[h];let M;if(typeof ImageData=="function"){const ns=new Uint8ClampedArray(F.buffer,F.byteOffset,F.byteLength);M=new ImageData(ns,Lt,r,{colorSpace:P})}else M={data:F,width:Lt,height:rs};if(U.length===1)return M;l[h]=M}return l};return mt[Symbol.toStringTag]==="Promise"?mt.then($t):$t(mt)}function Dr(){const i={};for(let[c,n]of yt){if(c==="parameters"){const r={};for(const[a,z]of n){const j=r[a]={};for(let[U,u]of z)typeof u=="object"?"string"in u?u=u.string:u=ss(u):typeof u=="function"&&(u=Fr(u.name)),j[U]=u}n=r}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());i[c]=n}return i}function ss(i){const c=[];for(let[n,r]of i)typeof r=="object"&&(r=ss(r)),c[n]=r;return c}function Fr(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[c,n,...r]=i.data;Mr(c,r).then(([a,z])=>{postMessage([c,n,a],{transfer:z})}).catch(a=>{postMessage(["error",n,a])})};async function Mr(i,c){switch(i){case"getKernelInfo":return[Dr(...c)];case"createPartialImageData":const r=await _r(...c),a=[];if("data"in r&&"width"in r&&"height"in r)a.push(r.data.buffer);else for(const z of Object.entries(r))a.push(r.data.buffer);return[r,a];default:throw new Error(`Unknown function: ${i}`)}}
