import{u as $e,a as Le,b as Be,c as Ge,d as He,e as Je,f as Ne,g as Qe,h as We,i as Xe,j as Ye,k as Ze,l as ts,m as es,n as ss,o as rs,p as ns,q as as}from"./index-67c7daa1.js";$e();Ze();ts();Le();Be();es();ss();rs();ns();Ge();He();Je();Ne();as();Qe();We();Xe();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},f={},M={},D={},F={},T={},b={},O={},_={},$={},a={},S={},p={},L={},B={},G={},A={},H={},J={},st={},R={},N={},k={},u={},g={},V={},rt={},Q={},q={},W={},I={},X={},v={},E={},h={},nt={},at={},w={},it={},ot={},ut={},qt={},ct={},mt={},yt={},It={},bt={},vt={},lt={},Et={},xt={},gt={},pt={},Kt={},ft={},Ct={},Ot={},Mt={},Dt={},St={},zt={},Ft={},Y={},Tt={},_t={},jt={},$t={},dt={},Lt={},Bt={},Gt={},Ht={},Jt={},Nt={},Qt={},Wt={},Xt={},Yt={},Zt={},te={},ee={},se={},re={},ne={},ae={},ht={},ie={},oe={},wt={},ue={},At={},ce={},me={},ye={},be={},le={},ge={},pe={},Ut={},fe={},Oe={},Se={},ze={},je={},de={},he={},we={},Ae={},Ue={},Pe={},Ve={},Re={},ke={},qe={},Ie={},ve={},Ee={},xe={},Ke={},Ce={},Me={},is=new Uint8Array,os=new Uint8Array,us=new Uint8Array([0,0,0,0,0,0,0,0]),cs=new Uint8Array,ms=new Uint8Array([0,0,0,0,0,0,240,63]),ys=new Uint8Array,bs=new Uint8Array([0,0,0,0,0,0,0,0]),ls=new Uint8Array,gs=new Uint8Array,ps=new Uint8Array([154,153,153,153,153,153,201,63]),fs=new Uint8Array,Os=new Uint8Array([0,0,0,0,0,0,240,63]),Ss=new Uint8Array,zs=new Uint8Array([0,0,0,0,0,0,224,63]),js=new Uint8Array,ds=new Uint8Array,hs=new Uint8Array,ws=new Uint8Array([3]),As=new Uint8Array,Us=new Uint8Array,Ps=new Uint8Array([248,4,0,1]),Vs=new Uint8Array([97,114,46,115,104,97,100,101,114,46,111,117,116,108,105,110,101,0]),Rs=new Uint8Array([21,5,0,1]),ks=new Uint8Array([65,108,97,110,32,82,111,115,115,0]),qs=new Uint8Array,Is=new Uint8Array([1]),vs=new Uint8Array([48,5,0,1]),Es=new Uint8Array([79,117,116,108,105,110,101,0]),xs=new Uint8Array,Ks=new Uint8Array,Cs=new Uint8Array,Ms=new Uint8Array([0]),Ds=new Uint8Array([1]),De=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Fs=new Uint8Array,Ts=new Uint8Array,_s=new Uint8Array,$s=new Uint8Array,Ls=new Uint8Array([3]),Pt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Fe=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Bs=new Uint8Array,Gs=new Uint8Array,Hs=new Uint8Array,Js=new Uint8Array,Ns=new Uint8Array([3]),Vt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Qs=new Uint8Array([0,0,0,0,0,0,0,63]),Ws=new Uint8Array([27,0]),Xs=new Uint8Array([27,0]),Ys=new Uint8Array,Zs=new Uint8Array,tr=new Uint8Array,er=new Uint8Array;Object.assign(qt,{slots:{0:ct,1:yt,2:bt,3:lt}});Object.assign(ct,{structure:s,memory:{array:is},const:!0,slots:{0:mt}});Object.assign(mt,{structure:S});Object.assign(yt,{structure:a,memory:{array:os},const:!0,slots:{0:It}});Object.assign(It,{structure:p,memory:{array:us},const:!0});Object.assign(bt,{structure:a,memory:{array:cs},const:!0,slots:{0:vt}});Object.assign(vt,{structure:p,memory:{array:ms},const:!0});Object.assign(lt,{structure:a,memory:{array:ys},const:!0,slots:{0:Et}});Object.assign(Et,{structure:p,memory:{array:bs},const:!0});Object.assign(xt,{slots:{0:gt,1:pt,2:ft,3:Ot}});Object.assign(gt,{structure:s,memory:{array:ls},const:!0,slots:{0:mt}});Object.assign(pt,{structure:a,memory:{array:gs},const:!0,slots:{0:Kt}});Object.assign(Kt,{structure:p,memory:{array:ps},const:!0});Object.assign(ft,{structure:a,memory:{array:fs},const:!0,slots:{0:Ct}});Object.assign(Ct,{structure:p,memory:{array:Os},const:!0});Object.assign(Ot,{structure:a,memory:{array:Ss},const:!0,slots:{0:Mt}});Object.assign(Mt,{structure:p,memory:{array:zs},const:!0});Object.assign(Dt,{slots:{0:St,1:zt}});Object.assign(St,{structure:L,memory:{array:js},const:!0,slots:{0:ct,1:yt,2:bt,3:lt}});Object.assign(zt,{structure:B,memory:{array:ds},const:!0,slots:{0:gt,1:pt,2:ft,3:Ot}});Object.assign(Ft,{slots:{0:Y}});Object.assign(Y,{structure:b,memory:{array:hs},const:!0,slots:{0:Tt}});Object.assign(Tt,{structure:O,memory:{array:ws},const:!0});Object.assign(_t,{slots:{0:jt}});Object.assign(jt,{structure:A,memory:{array:As},const:!0,slots:{0:Y}});Object.assign($t,{slots:{0:dt}});Object.assign(dt,{structure:A,memory:{array:Us},const:!0,slots:{0:Y}});Object.assign(Lt,{slots:{0:Bt,1:Ht,2:Nt,3:Wt,4:Yt,5:Zt,6:te}});Object.assign(Bt,{structure:D,memory:{array:Ps},const:!0,slots:{0:Gt}});Object.assign(Gt,{structure:M,memory:{array:Vs},reloc:16778488});Object.assign(Ht,{structure:T,memory:{array:Rs},const:!0,slots:{0:Jt}});Object.assign(Jt,{structure:F,memory:{array:ks},reloc:16778517});Object.assign(Nt,{structure:b,memory:{array:qs},const:!0,slots:{0:Qt}});Object.assign(Qt,{structure:O,memory:{array:Is},const:!0});Object.assign(Wt,{structure:$,memory:{array:vs},const:!0,slots:{0:Xt}});Object.assign(Xt,{structure:_,memory:{array:Es},reloc:16778544});Object.assign(Yt,{structure:G,memory:{array:xs},const:!0,slots:{0:St,1:zt}});Object.assign(Zt,{structure:H,memory:{array:Ks},const:!0,slots:{0:jt}});Object.assign(te,{structure:J,memory:{array:Cs},const:!0,slots:{0:dt}});Object.assign(ee,{slots:{0:se,1:re}});Object.assign(se,{structure:g,memory:{array:Ms},const:!0});Object.assign(re,{structure:g,memory:{array:Ds},const:!0});Object.assign(ne,{memory:{array:De},slots:{0:ae}});Object.assign(ae,{structure:k,memory:{array:De,offset:0,length:8},slots:{0:ht}});Object.assign(ht,{structure:N,memory:{array:Fs},reloc:0});Object.assign(ie,{slots:{0:oe,1:ue,2:ce}});Object.assign(oe,{structure:s,memory:{array:Ts},const:!0,slots:{0:wt}});Object.assign(wt,{structure:R});Object.assign(ue,{structure:s,memory:{array:_s},const:!0,slots:{0:At}});Object.assign(At,{structure:rt});Object.assign(ce,{structure:b,memory:{array:$s},const:!0,slots:{0:me}});Object.assign(me,{structure:O,memory:{array:Ls},const:!0});Object.assign(ye,{memory:{array:Pt},slots:{0:be}});Object.assign(be,{structure:Q,memory:{array:Pt},slots:{0:le}});Object.assign(le,{structure:k,memory:{array:Pt,offset:0,length:8},slots:{0:ht}});Object.assign(ge,{memory:{array:Fe},slots:{0:pe}});Object.assign(pe,{structure:I,memory:{array:Fe,offset:0,length:8},slots:{0:Ut}});Object.assign(Ut,{structure:W,memory:{array:Bs},reloc:0});Object.assign(fe,{slots:{0:Oe,1:Se,2:ze}});Object.assign(Oe,{structure:s,memory:{array:Gs},const:!0,slots:{0:wt}});Object.assign(Se,{structure:s,memory:{array:Hs},const:!0,slots:{0:At}});Object.assign(ze,{structure:b,memory:{array:Js},const:!0,slots:{0:je}});Object.assign(je,{structure:O,memory:{array:Ns},const:!0});Object.assign(de,{memory:{array:Vt},slots:{0:he}});Object.assign(he,{structure:X,memory:{array:Vt},slots:{0:we}});Object.assign(we,{structure:I,memory:{array:Vt,offset:0,length:8},slots:{0:Ut}});Object.assign(Ae,{memory:{array:Qs}});Object.assign(Ue,{slots:{0:Pe}});Object.assign(Pe,{structure:h,memory:{array:Ws},const:!0});Object.assign(Ve,{slots:{0:Re}});Object.assign(Re,{structure:w,memory:{array:Xs},const:!0});Object.assign(ke,{slots:{0:qe,1:ve,2:xe,3:Ce}});Object.assign(qe,{structure:s,memory:{array:Ys},const:!0,slots:{0:Ie}});Object.assign(Ie,{structure:st});Object.assign(ve,{structure:s,memory:{array:Zs},const:!0,slots:{0:Ee}});Object.assign(Ee,{structure:q});Object.assign(xe,{structure:s,memory:{array:tr},const:!0,slots:{0:Ke}});Object.assign(Ke,{structure:v});Object.assign(Ce,{structure:s,memory:{array:er},const:!0,slots:{0:Me}});Object.assign(Me,{structure:E});const sr={argStruct:at,thunkId:2,name:"createOutput"},rr={argStruct:ot,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(f,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(M,{...e,type:1,name:"[17:0]u8",length:17,byteSize:18,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(D,{...e,type:13,name:"*const [17:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(F,{...e,type:1,name:"[9:0]u8",length:9,byteSize:10,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(T,{...e,type:13,name:"*const [9:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(b,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:b}],methods:[]}});Object.assign(O,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(_,{...e,type:1,name:"[7:0]u8",length:7,byteSize:8,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign($,{...e,type:13,name:"*const [7:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[]}});Object.assign(a,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:a}],methods:[]}});Object.assign(S,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(p,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:p}],methods:[]}});Object.assign(L,{...e,type:2,name:"Struct2890073165",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:a},{...t,type:7,slot:2,name:"maxValue",structure:a},{...t,type:7,slot:3,name:"defaultValue",structure:a}],methods:[],template:qt}});Object.assign(B,{...e,type:2,name:"Struct3799330179",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:a},{...t,type:7,slot:2,name:"maxValue",structure:a},{...t,type:7,slot:3,name:"defaultValue",structure:a}],methods:[],template:xt}});Object.assign(G,{...e,type:2,name:"Struct656337515",align:1,instance:{members:[{...t,type:7,slot:0,name:"n0",structure:L},{...t,type:7,slot:1,name:"n1",structure:B}],methods:[],template:Dt}});Object.assign(A,{...e,type:2,name:"Struct3196272719",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:b}],methods:[],template:Ft}});Object.assign(H,{...e,type:2,name:"Struct3897456493",align:1,instance:{members:[{...t,type:7,slot:0,name:"src",structure:A}],methods:[],template:_t}});Object.assign(J,{...e,type:2,name:"Struct4047475671",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:A}],methods:[],template:$t}});Object.assign(st,{...e,type:2,name:"outline2.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:D},{...t,type:7,slot:1,name:"vendor",structure:T},{...t,type:7,slot:2,name:"version",structure:b},{...t,type:7,slot:3,name:"description",structure:$},{...t,type:7,slot:4,name:"parameters",structure:G},{...t,type:7,slot:5,name:"inputImages",structure:H},{...t,type:7,slot:6,name:"outputImages",structure:J}],methods:[],template:Lt}});Object.assign(R,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(N,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(k,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:N}],methods:[]}});Object.assign(u,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:u}],methods:[]}});Object.assign(g,{...e,type:11,name:"outline2.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:g}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:g},{...t,type:7,slot:1,name:"display-p3",structure:g}],methods:[],template:ee}});Object.assign(V,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(rt,{...e,type:15,name:"@Vector(3, f32)",length:3,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(Q,{...e,type:2,name:"outline2.Image(u8,3,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:k},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:g},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:ne},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:b}],methods:[],template:ie}});Object.assign(q,{...e,type:2,name:"outline2.KernelInput(u8,outline2.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:Q}],methods:[],template:ye}});Object.assign(W,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(I,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:W}],methods:[]}});Object.assign(X,{...e,type:2,name:"outline2.Image(u8,3,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:I},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:g},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:ge},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:b}],methods:[],template:fe}});Object.assign(v,{...e,type:2,name:"outline2.KernelOutput(u8,outline2.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:X}],methods:[],template:de}});Object.assign(E,{...e,type:2,name:"outline2.KernelParameters(outline2.kernel)",byteSize:8,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"n0",structure:S},{...t,type:4,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"n1",structure:S}],methods:[],template:Ae}});Object.assign(h,{...e,type:10,name:"ErrorSet2505626852",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:h}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:h}],methods:[],template:Ue}});Object.assign(nt,{...e,type:9,name:"ErrorSet2505626852!outline2.KernelOutput(u8,outline2.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:h}],methods:[]}});Object.assign(at,{...e,type:5,name:"createOutput",byteSize:68,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...t,type:5,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:q},{...t,type:5,isRequired:!0,bitOffset:256,bitSize:64,byteSize:8,slot:1,name:"3",structure:E},{...t,type:5,isRequired:!0,bitOffset:320,bitSize:224,byteSize:28,slot:2,name:"retval",structure:nt}],methods:[]}});Object.assign(w,{...e,type:10,name:"ErrorSet1307133774",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:w}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:w}],methods:[],template:Ve}});Object.assign(it,{...e,type:9,name:"ErrorSet1307133774!outline2.KernelOutput(u8,outline2.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:w}],methods:[]}});Object.assign(ot,{...e,type:5,name:"createPartialOutput",byteSize:76,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:u},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:u},{...t,type:5,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:q},{...t,type:5,isRequired:!0,bitOffset:320,bitSize:64,byteSize:8,slot:1,name:"5",structure:E},{...t,type:5,isRequired:!0,bitOffset:384,bitSize:224,byteSize:28,slot:2,name:"retval",structure:it}],methods:[]}});Object.assign(ut,{...e,type:2,name:"outline2",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:s},{...t,type:7,slot:1,name:"Input",structure:s},{...t,type:7,slot:2,name:"Output",structure:s},{...t,type:7,slot:3,name:"Parameters",structure:s}],methods:[sr,rr],template:ke}});const nr=[s,f,M,D,F,T,b,O,_,$,a,S,p,L,B,G,A,H,J,st,R,N,k,u,g,V,rt,Q,q,W,I,X,v,E,h,nt,at,w,it,ot,ut],ar=ut,ir={runtimeSafety:!1,littleEndian:!0},Z=Ye();Z.getSpecialExports();Z.recreateStructures(nr,ir);const or=(async()=>{const i=new URL("outline2-072ddfec.wasm",import.meta.url).href;return fetch(i)})();Z.loadModule(or);Z.linkVariables(!0);const{constructor:ur}=ar,{createPartialOutput:cr,Input:mr,kernel:et}=ur;function yr(i,c,o,n,r={},z={}){const j=[];for(const[y]of et.inputImages)j.push(y);const U=[];for(const[y]of et.outputImages)U.push(y);if(Array.isArray(r)){const y=r;r={};for(const[l,d]of j.entries())r[d]=y[l]}const m=new mr(void 0),x=[];let P;for(const y of j){let l=r[y];if(l||(j.length===1&&["data","width","height"].every(d=>!!r[d])?l=r:x.push(y)),m[y]=l,P){if(l.colorSpace!==P)throw new Error(`Input images must all use the same color space: ${P}`)}else P=l.colorSpace}if(x.length>0)throw new Error(`Missing input image${x.length>1?"s":""}: ${x.join(", ")}`);const tt=cr(i,c,o,n,m,z),Rt=y=>{const l={};for(const d of U){const{data:{typedArray:K},width:kt,height:Te}=y[d];let C;if(typeof ImageData=="function"){const _e=new Uint8ClampedArray(K.buffer,K.byteOffset,K.byteLength);C=new ImageData(_e,kt,n,{colorSpace:P})}else C={data:K,width:kt,height:Te};if(U.length===1)return C;l[d]=C}return l};return tt[Symbol.toStringTag]==="Promise"?tt.then(Rt):Rt(tt)}function br(){const i={};for(let[c,o]of et){if(c==="parameters"){const n={};for(const[r,z]of o){const j=n[r]={};for(let[U,m]of z)typeof m=="object"?m=m.string??m.valueOf():typeof m=="function"&&(m=lr(m.name)),j[U]=m}o=n}else typeof o=="object"&&(o=o.string??o.valueOf());i[c]=o}return i}function lr(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=async i=>{if(!Array.isArray(i.data))return;const[c,o,...n]=i.data;try{const[r,z]=await gr(c,n);postMessage([c,o,r],{transfer:z})}catch(r){postMessage(["error",o,r])}};async function gr(i,c){switch(i){case"getKernelInfo":return[br(...c)];case"createPartialImageData":const n=await yr(...c),r=[];if("data"in n&&"width"in n&&"height"in n)r.push(n.data.buffer);else for(const z of Object.entries(n))r.push(n.data.buffer);return[n,r];default:throw new Error(`Unknown function: ${i}`)}}postMessage("ready");
