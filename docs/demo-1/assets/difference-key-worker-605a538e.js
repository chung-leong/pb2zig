import{u as Ue,a as je,b as Pe,d as ke,c as Ve,e as Ie,f as Ce,g as ve,h as xe,i as Ee,j as Ke,k as De,l as Fe,m as Me,o as _e,n as Te,p as $e,q as Be}from"./index-d64bc850.js";Ue();je();Pe();ke();Ve();Ie();Ce();ve();xe();Ee();Ke();De();Fe();Me();_e();Te();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},d={},B={},L={},I={},G={},H={},C={},b={},f={},J={},N={},v={},y={},Q={},W={},x={},m={},r={},X={},E={},Y={},K={},Z={},D={},ee={},F={},R={},g={},te={},M={},se={},_={},ye={},z={},re={},ae={},l={},ne={},w={},ie={},T={},q={},ue={},oe={},$={},A={},U={},ce={},be={},fe={},pe={},de={},Se={},he={};Object.assign(d,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:5});Object.assign(B,{...t,type:1,name:"[14:0]u8",length:14,byteSize:15,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:4});Object.assign(L,{...t,type:11,name:"*const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:B}],methods:[],template:null},slot:3});Object.assign(I,{...t,type:11,name:"*const *const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[],template:null},slot:2});Object.assign(G,{...t,type:1,name:"[10:0]u8",length:10,byteSize:11,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:8});Object.assign(H,{...t,type:11,name:"*const [10:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:G}],methods:[],template:null},slot:7});Object.assign(C,{...t,type:11,name:"*const *const [10:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[],template:null},slot:6});Object.assign(b,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:10});Object.assign(f,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:b}],methods:[],template:null},slot:9});Object.assign(J,{...t,type:1,name:"[41:0]u8",length:41,byteSize:42,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:13});Object.assign(N,{...t,type:11,name:"*const [41:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:J}],methods:[],template:null},slot:12});Object.assign(v,{...t,type:11,name:"*const *const [41:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:N}],methods:[],template:null},slot:11});Object.assign(y,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:33});Object.assign(Q,{...t,type:13,name:"@Vector(3, f32)",length:3,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:32});const Le=new Uint8Array;Object.assign(W,{...t,type:2,name:"Struct0011",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:Q}],methods:[],template:{memory:{array:Le}}},slot:39});Object.assign(x,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:38});Object.assign(m,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:m}],methods:[],template:null},slot:52});Object.assign(r,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:m}],methods:[],template:null},slot:51});const Ge=new Uint8Array,He=new Uint8Array([24,253,15,0]),Je=new Uint8Array([0,0,0,0,0,0,0,0]),Ne=new Uint8Array([64,253,15,0]),Qe=new Uint8Array([0,0,0,0,0,0,8,64]),We=new Uint8Array([104,253,15,0]),Xe=new Uint8Array([123,20,174,71,225,122,148,63]);Object.assign(X,{...t,type:2,name:"Struct0012",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:Ge},slots:{0:{structure:r,memory:{array:He},slots:{0:{structure:m,memory:{array:Je}}}},1:{structure:r,memory:{array:Ne},slots:{0:{structure:m,memory:{array:Qe}}}},2:{structure:r,memory:{array:We},slots:{0:{structure:m,memory:{array:Xe}}}}}}},slot:41});Object.assign(E,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:40});const Ye=new Uint8Array,Ze=new Uint8Array([24,253,15,0]),et=new Uint8Array([0,0,0,0,0,0,0,0]),tt=new Uint8Array([64,253,15,0]),st=new Uint8Array([0,0,0,0,0,0,240,63]),rt=new Uint8Array([104,253,15,0]),at=new Uint8Array([123,20,174,71,225,122,116,63]);Object.assign(Y,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:Ye},slots:{0:{structure:r,memory:{array:Ze},slots:{0:{structure:m,memory:{array:et}}}},1:{structure:r,memory:{array:tt},slots:{0:{structure:m,memory:{array:st}}}},2:{structure:r,memory:{array:rt},slots:{0:{structure:m,memory:{array:at}}}}}}},slot:43});Object.assign(K,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[],template:null},slot:42});const nt=new Uint8Array,it=new Uint8Array([24,253,15,0]),ut=new Uint8Array([0,0,0,0,0,0,0,0]),ot=new Uint8Array([64,253,15,0]),lt=new Uint8Array([0,0,0,0,0,0,36,64]),mt=new Uint8Array([104,253,15,0]),yt=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(Z,{...t,type:2,name:"Struct0014",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:nt},slots:{0:{structure:r,memory:{array:it},slots:{0:{structure:m,memory:{array:ut}}}},1:{structure:r,memory:{array:ot},slots:{0:{structure:m,memory:{array:lt}}}},2:{structure:r,memory:{array:mt},slots:{0:{structure:m,memory:{array:yt}}}}}}},slot:45});Object.assign(D,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:44});const ct=new Uint8Array,bt=new Uint8Array([170,170,170,170]),ft=new Uint8Array,pt=new Uint8Array([170,170,170,170]),dt=new Uint8Array,St=new Uint8Array([170,170,170,170]),ht=new Uint8Array,gt=new Uint8Array([170,170,170,170]),zt=new Uint8Array;Object.assign(ee,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"keyColor",structure:x},{...e,type:8,isRequired:!1,slot:1,name:"tolerance",structure:E},{...e,type:8,isRequired:!1,slot:2,name:"ramp",structure:K},{...e,type:8,isRequired:!1,slot:3,name:"gamma",structure:D}],methods:[],template:{memory:{array:ct},slots:{0:{structure:x,memory:{array:bt},slots:{0:{structure:W,memory:{array:ft}}}},1:{structure:E,memory:{array:pt},slots:{0:{structure:X,memory:{array:dt}}}},2:{structure:K,memory:{array:St},slots:{0:{structure:Y,memory:{array:ht}}}},3:{structure:D,memory:{array:gt},slots:{0:{structure:Z,memory:{array:zt}}}}}}},slot:15});Object.assign(F,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:14});const Ot=new Uint8Array,wt=new Uint8Array([16,249,15,0]),Rt=new Uint8Array([4,0,0,0]);Object.assign(R,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:Ot},slots:{0:{structure:f,memory:{array:wt},slots:{0:{structure:b,memory:{array:Rt}}}}}}},slot:47});Object.assign(g,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:R}],methods:[],template:null},slot:46});const qt=new Uint8Array,At=new Uint8Array([170,170,170,170]),Ut=new Uint8Array;Object.assign(te,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:g}],methods:[],template:{memory:{array:qt},slots:{0:{structure:g,memory:{array:At},slots:{0:{structure:R,memory:{array:Ut}}}}}}},slot:17});Object.assign(M,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:16});const jt=new Uint8Array,Pt=new Uint8Array([170,170,170,170]),kt=new Uint8Array;Object.assign(se,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:g}],methods:[],template:{memory:{array:jt},slots:{0:{structure:g,memory:{array:Pt},slots:{0:{structure:R,memory:{array:kt}}}}}}},slot:19});Object.assign(_,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:18});const Vt=new Uint8Array,It=new Uint8Array,Ct=new Uint8Array([156,36,16,0]),vt=new Uint8Array([73,36,16,0]),xt=new Uint8Array([99,111,109,46,113,117,97,115,105,109,111,110,100,111,0]),Et=new Uint8Array([152,36,16,0]),Kt=new Uint8Array([51,36,16,0]),Dt=new Uint8Array([81,117,97,115,105,109,111,110,100,111,0]),Ft=new Uint8Array([148,36,16,0]),Mt=new Uint8Array([1,0,0,0]),_t=new Uint8Array([144,36,16,0]),Tt=new Uint8Array([248,35,16,0]),$t=new Uint8Array([65,32,115,105,109,112,108,101,32,100,105,102,102,101,114,101,110,99,101,32,107,101,121,32,102,111,114,32,99,104,114,111,109,97,32,107,101,121,105,110,103,0]),Bt=new Uint8Array([170,170,170,170]),Lt=new Uint8Array,Gt=new Uint8Array([170,170,170,170]),Ht=new Uint8Array,Jt=new Uint8Array([170,170,170,170]),Nt=new Uint8Array;Object.assign(ye,{...t,type:2,name:"difference-key.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Vt}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:I},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:C},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:f},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:v},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:F},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:M},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:_}],methods:[],template:{memory:{array:It},slots:{0:{structure:I,memory:{array:Ct},slots:{0:{structure:L,memory:{array:vt},slots:{0:{structure:B,memory:{array:xt}}}}}},1:{structure:C,memory:{array:Et},slots:{0:{structure:H,memory:{array:Kt},slots:{0:{structure:G,memory:{array:Dt}}}}}},2:{structure:f,memory:{array:Ft},slots:{0:{structure:b,memory:{array:Mt}}}},3:{structure:v,memory:{array:_t},slots:{0:{structure:N,memory:{array:Tt},slots:{0:{structure:J,memory:{array:$t}}}}}},4:{structure:F,memory:{array:Bt},slots:{0:{structure:ee,memory:{array:Lt}}}},5:{structure:M,memory:{array:Gt},slots:{0:{structure:te,memory:{array:Ht}}}},6:{structure:_,memory:{array:Jt},slots:{0:{structure:se,memory:{array:Nt}}}}}}},slot:1});Object.assign(z,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:24});Object.assign(re,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:z}],methods:[],template:null},slot:23});Object.assign(ae,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:re}],methods:[],template:null},slot:22});Object.assign(l,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:l}],methods:[],template:null},slot:25});const Qt=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(ne,{...t,type:9,name:"difference-key.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:b},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:b}],methods:[],template:{memory:{array:Qt}}},slot:26});Object.assign(w,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:w}],methods:[],template:null},slot:27});Object.assign(ie,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:48});const Wt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Xt=new Uint8Array,Yt=new Uint8Array([192,35,16,0]),Zt=new Uint8Array([4,0,0,0]);Object.assign(T,{...t,type:2,name:"difference-key.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:ae},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ne},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:w}],methods:[],template:{memory:{array:Wt}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:z},{...e,type:7,isRequired:!1,name:"FPixel",structure:ie},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:Xt},slots:{0:{structure:f,memory:{array:Yt},slots:{0:{structure:b,memory:{array:Zt}}}}}}},slot:21});const es=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ts=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),we=new Uint8Array([0,0,0,0,0,0,0,0]),ss=new Uint8Array;Object.assign(q,{...t,type:2,name:"difference-key.KernelInput(u8,difference-key.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:T}],methods:[],template:{memory:{array:es},slots:{0:{structure:T,memory:{array:ts},slots:{0:{structure:ae,memory:{array:we},address:1047568,slots:{0:{structure:re,memory:{array:ss},address:0}}}}}}}},slot:20});Object.assign(ue,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:z}],methods:[],template:null},slot:23});Object.assign(oe,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:ue}],methods:[],template:null},slot:30});const rs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),as=new Uint8Array,ns=new Uint8Array([192,35,16,0]),is=new Uint8Array([4,0,0,0]);Object.assign($,{...t,type:2,name:"difference-key.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:oe},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ne},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:w}],methods:[],template:{memory:{array:rs}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:z},{...e,type:7,isRequired:!1,name:"FPixel",structure:ie},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:as},slots:{0:{structure:f,memory:{array:ns},slots:{0:{structure:b,memory:{array:is}}}}}}},slot:29});const us=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),os=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ls=new Uint8Array;Object.assign(A,{...t,type:2,name:"difference-key.KernelOutput(u8,difference-key.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:$}],methods:[],template:{memory:{array:us},slots:{0:{structure:$,memory:{array:os},slots:{0:{structure:oe,memory:{array:we},address:1047568,slots:{0:{structure:ue,memory:{array:ls},address:0}}}}}}}},slot:28});const ms=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,215,163,60,10,215,163,59,0,0,128,63,0,0,0,0]);Object.assign(U,{...t,type:2,name:"difference-key.KernelParameters(difference-key.kernel)",length:1,byteSize:32,align:4,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:96,byteSize:16,slot:0,name:"keyColor",structure:Q},{...e,type:4,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:1,name:"tolerance",structure:y},{...e,type:4,isRequired:!1,bitOffset:160,bitSize:32,byteSize:4,slot:2,name:"ramp",structure:y},{...e,type:4,isRequired:!1,bitOffset:192,bitSize:32,byteSize:4,slot:3,name:"gamma",structure:y}],methods:[],template:{memory:{array:ms}}},slot:31});Object.assign(ce,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(difference-key.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:49});Object.assign(be,{...t,type:7,name:"ErrorSet0000!difference-key.KernelOutput(u8,difference-key.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:A},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:ce}],methods:[],template:null},slot:36});Object.assign(fe,{...t,type:3,name:"createOutput",length:1,byteSize:96,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:l},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:l},{...e,type:6,bitOffset:320,bitSize:192,byteSize:24,slot:2,name:"2",structure:q},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:3,name:"3",structure:U},{...e,type:6,bitOffset:512,bitSize:224,byteSize:28,slot:4,name:"retval",structure:be}],methods:[],template:null},slot:34});Object.assign(pe,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(difference-key.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:50});Object.assign(de,{...t,type:7,name:"ErrorSet0001!difference-key.KernelOutput(u8,difference-key.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:A},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:pe}],methods:[],template:null},slot:37});Object.assign(Se,{...t,type:3,name:"createPartialOutput",length:1,byteSize:112,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:l},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:l},{...e,type:3,bitOffset:320,bitSize:32,byteSize:4,slot:2,name:"2",structure:l},{...e,type:3,bitOffset:352,bitSize:32,byteSize:4,slot:3,name:"3",structure:l},{...e,type:6,bitOffset:384,bitSize:192,byteSize:24,slot:4,name:"4",structure:q},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:5,name:"5",structure:U},{...e,type:6,bitOffset:576,bitSize:224,byteSize:28,slot:6,name:"retval",structure:de}],methods:[],template:null},slot:35});const ys=new Uint8Array,cs={argStruct:fe,thunk:8,name:"createOutput"},bs={argStruct:Se,thunk:2,name:"createPartialOutput"};Object.assign(he,{...t,type:2,name:"difference-key",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:ys}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:ye},{...e,type:7,isRequired:!1,name:"Input",structure:q},{...e,type:7,isRequired:!1,name:"Output",structure:A},{...e,type:7,isRequired:!1,name:"Parameters",structure:U}],methods:[cs,bs],template:null},slot:0});const fs=[d,B,L,I,G,H,C,b,f,J,N,v,y,Q,W,x,m,r,X,E,Y,K,Z,D,ee,F,R,g,te,M,se,_,ye,z,re,ae,l,ne,w,ie,T,q,ue,oe,$,A,U,ce,be,fe,pe,de,Se,he],ps=$e(fs),ds=he.constructor,Ss=(async()=>{const i=new URL("difference-key-0cdcd6dd.wasm",import.meta.url).href;return fetch(i)})();Be(Ss,{...ps,writeBack:!0});const{createOutput:As,createPartialOutput:hs,kernel:me,Input:gs,Output:Us,Parameters:js}=ds;function zs(i,o,a,s,n={},S={}){if(Array.isArray(n)){const p=n;n={};for(const[c,h]of Object.keys(me.inputImages).entries())n[h]=p[c]}const j=new gs(void 0),P=Object.keys(me.inputImages),u=[];let O;for(const p of P){let c=n[p];if(c||(P.length===1&&["data","width","height"].every(h=>!!n[h])?c=n:u.push(p)),j[p]=c,O){if(c.colorSpace!==O)throw new Error(`Input images must all use the same color space: ${O}`)}else O=c.colorSpace}if(u.length>0)throw new Error(`Missing input image${u.length>1?"s":""}: ${u.join(", ")}`);const le=hs(i,o,a,s,j,S),ge=p=>{const c=Object.keys(p),h={};for(const ze of c){const{data:{typedArray:k},width:Oe,height:qe}=p[ze];let V;if(typeof ImageData=="function"){const Ae=new Uint8ClampedArray(k.buffer,k.byteOffset,k.byteLength);V=new ImageData(Ae,Oe,s,{colorSpace:O})}else V={data:k,width:Oe,height:qe};if(c.length===1)return V;h[ze]=V}return h};return le[Symbol.toStringTag]==="Promise"?le.then(ge):ge(le)}function Os(){const i={};for(let[o,a]of Object.entries(me)){if(o==="parameters"){const s={};for(const[n,S]of Object.entries(a)){const j=s[n]={};for(let[P,u]of Object.entries(S))typeof u=="object"?"string"in u?u=u.string:u=Re(u):typeof u=="function"&&(u=ws(u.name)),j[P]=u}a=s}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());i[o]=a}return i}function Re(i){const o=[];for(let[a,s]of Object.entries(i))typeof s=="object"&&(s=Re(s)),o[a]=s;return o}function ws(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[o,a,...s]=i.data;Rs(o,s).then(([n,S])=>{postMessage([o,a,n],{transfer:S})}).catch(n=>{postMessage(["error",a,n])})};async function Rs(i,o){switch(i){case"getKernelInfo":return[Os(...o)];case"createPartialImageData":const s=await zs(...o),n=[];if("data"in s&&"width"in s&&"height"in s)n.push(s.data.buffer);else for(const S of Object.entries(s))n.push(s.data.buffer);return[s,n];default:throw new Error(`Unknown function: ${i}`)}}
