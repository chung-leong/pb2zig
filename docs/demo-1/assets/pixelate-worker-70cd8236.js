import{u as de,a as he,b as ge,c as ze,d as Oe,e as we,f as Re,g as qe,h as Ae,i as Ue,j as je,k as Pe,l as xe,o as Ie,m as ke,n as Ve,p as Ce,q as ve}from"./index-d64bc850.js";de();he();ge();ze();Oe();we();Re();qe();Ae();Ue();je();Pe();xe();Ie();ke();Ve();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},b={},F={},M={},P={},_={},T={},x={},o={},n={},$={},B={},I={},L={},k={},G={},V={},z={},S={},H={},C={},J={},v={},se={},d={},N={},Q={},m={},W={},g={},E={},X={},K={},O={},Y={},Z={},D={},w={},R={},re={},ae={},ne={},ie={},ue={},oe={},le={};Object.assign(b,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:5});Object.assign(F,{...t,type:1,name:"[3:0]u8",length:3,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:4});Object.assign(M,{...t,type:11,name:"*const [3:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[],template:null},slot:3});Object.assign(P,{...t,type:11,name:"*const *const [3:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[],template:null},slot:2});Object.assign(_,{...t,type:1,name:"[13:0]u8",length:13,byteSize:14,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:8});Object.assign(T,{...t,type:11,name:"*const [13:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[],template:null},slot:7});Object.assign(x,{...t,type:11,name:"*const *const [13:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[],template:null},slot:6});Object.assign(o,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:o}],methods:[],template:null},slot:10});Object.assign(n,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:o}],methods:[],template:null},slot:9});Object.assign($,{...t,type:1,name:"[17:0]u8",length:17,byteSize:18,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:13});Object.assign(B,{...t,type:11,name:"*const [17:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[],template:null},slot:12});Object.assign(I,{...t,type:11,name:"*const *const [17:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:B}],methods:[],template:null},slot:11});const Ee=new Uint8Array,Ke=new Uint8Array([48,253,15,0]),De=new Uint8Array([1,0,0,0]),Fe=new Uint8Array([80,253,15,0]),Me=new Uint8Array([100,0,0,0]),_e=new Uint8Array([112,253,15,0]),Te=new Uint8Array([1,0,0,0]);Object.assign(L,{...t,type:2,name:"Struct0008",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:o},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:n},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:n},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:n}],methods:[],template:{memory:{array:Ee},slots:{0:{structure:n,memory:{array:Ke},slots:{0:{structure:o,memory:{array:De}}}},1:{structure:n,memory:{array:Fe},slots:{0:{structure:o,memory:{array:Me}}}},2:{structure:n,memory:{array:_e},slots:{0:{structure:o,memory:{array:Te}}}}}}},slot:37});Object.assign(k,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[],template:null},slot:36});const $e=new Uint8Array,Be=new Uint8Array([170,170,170,170]),Le=new Uint8Array;Object.assign(G,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dimension",structure:k}],methods:[],template:{memory:{array:$e},slots:{0:{structure:k,memory:{array:Be},slots:{0:{structure:L,memory:{array:Le}}}}}}},slot:15});Object.assign(V,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:G}],methods:[],template:null},slot:14});const Ge=new Uint8Array,He=new Uint8Array([192,249,15,0]),Je=new Uint8Array([4,0,0,0]);Object.assign(z,{...t,type:2,name:"Struct0009",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:n}],methods:[],template:{memory:{array:Ge},slots:{0:{structure:n,memory:{array:He},slots:{0:{structure:o,memory:{array:Je}}}}}}},slot:39});Object.assign(S,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:z}],methods:[],template:null},slot:38});const Ne=new Uint8Array,Qe=new Uint8Array([170,170,170,170]),We=new Uint8Array;Object.assign(H,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"inputImage",structure:S}],methods:[],template:{memory:{array:Ne},slots:{0:{structure:S,memory:{array:Qe},slots:{0:{structure:z,memory:{array:We}}}}}}},slot:17});Object.assign(C,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[],template:null},slot:16});const Xe=new Uint8Array,Ye=new Uint8Array([170,170,170,170]),Ze=new Uint8Array;Object.assign(J,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"outputPixel",structure:S}],methods:[],template:{memory:{array:Xe},slots:{0:{structure:S,memory:{array:Ye},slots:{0:{structure:z,memory:{array:Ze}}}}}}},slot:19});Object.assign(v,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:J}],methods:[],template:null},slot:18});const et=new Uint8Array,tt=new Uint8Array,st=new Uint8Array([244,7,16,0]),rt=new Uint8Array([176,7,16,0]),at=new Uint8Array([65,73,70,0]),nt=new Uint8Array([240,7,16,0]),it=new Uint8Array([151,7,16,0]),ut=new Uint8Array([65,100,111,98,101,32,83,121,115,116,101,109,115,0]),ot=new Uint8Array([236,7,16,0]),lt=new Uint8Array([2,0,0,0]),mt=new Uint8Array([232,7,16,0]),yt=new Uint8Array([116,7,16,0]),ct=new Uint8Array([112,105,120,101,108,97,116,101,32,97,110,32,105,109,97,103,101,0]),bt=new Uint8Array([170,170,170,170]),pt=new Uint8Array,ft=new Uint8Array([170,170,170,170]),St=new Uint8Array,dt=new Uint8Array([170,170,170,170]),ht=new Uint8Array;Object.assign(se,{...t,type:2,name:"pixelate.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:et}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:P},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:x},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:n},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:I},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:V},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:C},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:v}],methods:[],template:{memory:{array:tt},slots:{0:{structure:P,memory:{array:st},slots:{0:{structure:M,memory:{array:rt},slots:{0:{structure:F,memory:{array:at}}}}}},1:{structure:x,memory:{array:nt},slots:{0:{structure:T,memory:{array:it},slots:{0:{structure:_,memory:{array:ut}}}}}},2:{structure:n,memory:{array:ot},slots:{0:{structure:o,memory:{array:lt}}}},3:{structure:I,memory:{array:mt},slots:{0:{structure:B,memory:{array:yt},slots:{0:{structure:$,memory:{array:ct}}}}}},4:{structure:V,memory:{array:bt},slots:{0:{structure:G,memory:{array:pt}}}},5:{structure:C,memory:{array:ft},slots:{0:{structure:H,memory:{array:St}}}},6:{structure:v,memory:{array:dt},slots:{0:{structure:J,memory:{array:ht}}}}}}},slot:1});Object.assign(d,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:24});Object.assign(N,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:d}],methods:[],template:null},slot:23});Object.assign(Q,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:N}],methods:[],template:null},slot:22});Object.assign(m,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[],template:null},slot:25});const gt=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(W,{...t,type:9,name:"pixelate.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:o},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:o}],methods:[],template:{memory:{array:gt}}},slot:26});Object.assign(g,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:g}],methods:[],template:null},slot:27});Object.assign(E,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:E}],methods:[],template:null},slot:43});Object.assign(X,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:E}],methods:[],template:null},slot:40});const zt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ot=new Uint8Array,wt=new Uint8Array([60,7,16,0]),Rt=new Uint8Array([4,0,0,0]);Object.assign(K,{...t,type:2,name:"pixelate.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Q},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:W},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:g}],methods:[],template:{memory:{array:zt}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:d},{...e,type:7,isRequired:!1,name:"FPixel",structure:X},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:n}],methods:[],template:{memory:{array:Ot},slots:{0:{structure:n,memory:{array:wt},slots:{0:{structure:o,memory:{array:Rt}}}}}}},slot:21});const qt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),At=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),be=new Uint8Array([0,0,0,0,0,0,0,0]),Ut=new Uint8Array;Object.assign(O,{...t,type:2,name:"pixelate.KernelInput(u8,pixelate.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"inputImage",structure:K}],methods:[],template:{memory:{array:qt},slots:{0:{structure:K,memory:{array:At},slots:{0:{structure:Q,memory:{array:be},address:1047568,slots:{0:{structure:N,memory:{array:Ut},address:0}}}}}}}},slot:20});Object.assign(Y,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:d}],methods:[],template:null},slot:23});Object.assign(Z,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Y}],methods:[],template:null},slot:30});const jt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Pt=new Uint8Array,xt=new Uint8Array([60,7,16,0]),It=new Uint8Array([4,0,0,0]);Object.assign(D,{...t,type:2,name:"pixelate.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Z},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:W},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:g}],methods:[],template:{memory:{array:jt}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:d},{...e,type:7,isRequired:!1,name:"FPixel",structure:X},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:n}],methods:[],template:{memory:{array:Pt},slots:{0:{structure:n,memory:{array:xt},slots:{0:{structure:o,memory:{array:It}}}}}}},slot:29});const kt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Vt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ct=new Uint8Array;Object.assign(w,{...t,type:2,name:"pixelate.KernelOutput(u8,pixelate.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"outputPixel",structure:D}],methods:[],template:{memory:{array:kt},slots:{0:{structure:D,memory:{array:Vt},slots:{0:{structure:Z,memory:{array:be},address:1047568,slots:{0:{structure:Y,memory:{array:Ct},address:0}}}}}}}},slot:28});const vt=new Uint8Array([1,0,0,0]);Object.assign(R,{...t,type:2,name:"pixelate.KernelParameters(pixelate.kernel)",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"dimension",structure:o}],methods:[],template:{memory:{array:vt}}},slot:31});Object.assign(re,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(pixelate.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:41});Object.assign(ae,{...t,type:7,name:"ErrorSet0000!pixelate.KernelOutput(u8,pixelate.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:w},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:re}],methods:[],template:null},slot:34});Object.assign(ne,{...t,type:3,name:"createOutput",length:1,byteSize:64,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"0",structure:m},{...e,type:3,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"1",structure:m},{...e,type:6,bitOffset:64,bitSize:192,byteSize:24,slot:2,name:"2",structure:O},{...e,type:6,bitOffset:256,bitSize:32,byteSize:4,slot:3,name:"3",structure:R},{...e,type:6,bitOffset:288,bitSize:224,byteSize:28,slot:4,name:"retval",structure:ae}],methods:[],template:null},slot:32});Object.assign(ie,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(pixelate.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:42});Object.assign(ue,{...t,type:7,name:"ErrorSet0001!pixelate.KernelOutput(u8,pixelate.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:w},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:ie}],methods:[],template:null},slot:35});Object.assign(oe,{...t,type:3,name:"createPartialOutput",length:1,byteSize:72,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"0",structure:m},{...e,type:3,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"1",structure:m},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:2,name:"2",structure:m},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:3,name:"3",structure:m},{...e,type:6,bitOffset:128,bitSize:192,byteSize:24,slot:4,name:"4",structure:O},{...e,type:6,bitOffset:320,bitSize:32,byteSize:4,slot:5,name:"5",structure:R},{...e,type:6,bitOffset:352,bitSize:224,byteSize:28,slot:6,name:"retval",structure:ue}],methods:[],template:null},slot:33});const Et=new Uint8Array,Kt={argStruct:ne,thunk:8,name:"createOutput"},Dt={argStruct:oe,thunk:2,name:"createPartialOutput"};Object.assign(le,{...t,type:2,name:"pixelate",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Et}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:se},{...e,type:7,isRequired:!1,name:"Input",structure:O},{...e,type:7,isRequired:!1,name:"Output",structure:w},{...e,type:7,isRequired:!1,name:"Parameters",structure:R}],methods:[Kt,Dt],template:null},slot:0});const Ft=[b,F,M,P,_,T,x,o,n,$,B,I,L,k,G,V,z,S,H,C,J,v,se,d,N,Q,m,W,g,E,X,K,O,Y,Z,D,w,R,re,ae,ne,ie,ue,oe,le],Mt=Ce(Ft),_t=le.constructor,Tt=(async()=>{const i=new URL("pixelate-5f5ec6b1.wasm",import.meta.url).href;return fetch(i)})();ve(Tt,{...Mt,writeBack:!0});const{createOutput:Qt,createPartialOutput:$t,kernel:te,Input:Bt,Output:Wt,Parameters:Xt}=_t;function Lt(i,l,r,s,a={},p={}){if(Array.isArray(a)){const c=a;a={};for(const[y,f]of Object.keys(te.inputImages).entries())a[f]=c[y]}const q=new Bt(void 0),A=Object.keys(te.inputImages),u=[];let h;for(const c of A){let y=a[c];if(y||(A.length===1&&["data","width","height"].every(f=>!!a[f])?y=a:u.push(c)),q[c]=y,h){if(y.colorSpace!==h)throw new Error(`Input images must all use the same color space: ${h}`)}else h=y.colorSpace}if(u.length>0)throw new Error(`Missing input image${u.length>1?"s":""}: ${u.join(", ")}`);const ee=$t(i,l,r,s,q,p),me=c=>{const y=Object.keys(c),f={};for(const ye of y){const{data:{typedArray:U},width:ce,height:fe}=c[ye];let j;if(typeof ImageData=="function"){const Se=new Uint8ClampedArray(U.buffer,U.byteOffset,U.byteLength);j=new ImageData(Se,ce,s,{colorSpace:h})}else j={data:U,width:ce,height:fe};if(y.length===1)return j;f[ye]=j}return f};return ee[Symbol.toStringTag]==="Promise"?ee.then(me):me(ee)}function Gt(){const i={};for(let[l,r]of Object.entries(te)){if(l==="parameters"){const s={};for(const[a,p]of Object.entries(r)){const q=s[a]={};for(let[A,u]of Object.entries(p))typeof u=="object"?"string"in u?u=u.string:u=pe(u):typeof u=="function"&&(u=Ht(u.name)),q[A]=u}r=s}else typeof r=="object"&&("string"in r?r=r.string:r=r.valueOf());i[l]=r}return i}function pe(i){const l=[];for(let[r,s]of Object.entries(i))typeof s=="object"&&(s=pe(s)),l[r]=s;return l}function Ht(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[l,r,...s]=i.data;Jt(l,s).then(([a,p])=>{postMessage([l,r,a],{transfer:p})}).catch(a=>{postMessage(["error",r,a])})};async function Jt(i,l){switch(i){case"getKernelInfo":return[Gt(...l)];case"createPartialImageData":const s=await Lt(...l),a=[];if("data"in s&&"width"in s&&"height"in s)a.push(s.data.buffer);else for(const p of Object.entries(s))a.push(s.data.buffer);return[s,a];default:throw new Error(`Unknown function: ${i}`)}}
