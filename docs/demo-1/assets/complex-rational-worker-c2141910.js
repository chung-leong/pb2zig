import{u as Jr,a as Nr,b as Qr,c as Wr,d as Xr,e as Yr,f as Zr,g as ta,h as ea,i as sa,j as ra,k as aa,l as na,m as oa,n as ia,p as ca,o as ua,q as ma,r as ya,s as la}from"./index-25a52593.js";Jr();ra();aa();Nr();Qr();na();oa();ia();ca();Wr();Xr();Yr();Zr();ua();la();ta();ma();ea();sa();const s={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},a={},f={},L={},B={},G={},H={},b={},S={},J={},N={},e={},r={},Q={},W={},X={},P={},p={},Y={},Z={},tt={},et={},st={},rt={},j={},at={},nt={},ot={},it={},ct={},ut={},U={},mt={},yt={},lt={},bt={},gt={},d={},pt={},Ot={},xt={},k={},jt={},q={},y={},O={},I={},Pt={},ft={},v={},St={},E={},zt={},C={},K={},R={},It={},Rt={},$={},kt={},qt={},vt={},Je={},Et={},Ne={},Ct={},Qe={},We={},Kt={},Xe={},_t={},Ye={},Ze={},Dt={},ts={},Ft={},es={},ss={},Mt={},z={},Tt={},$t={},Lt={},rs={},Bt={},as={},Gt={},ns={},os={},Ht={},is={},Jt={},cs={},us={},Nt={},ms={},Qt={},ys={},ls={},Wt={},Xt={},Yt={},Zt={},bs={},te={},gs={},ee={},ps={},Os={},_={},js={},D={},fs={},Ss={},se={},zs={},re={},ws={},As={},ae={},ne={},oe={},ie={},hs={},ce={},Us={},ue={},ds={},Vs={},me={},xs={},ye={},Ps={},Is={},le={},Rs={},be={},ks={},qs={},ge={},pe={},Oe={},je={},vs={},wt={},Es={},At={},Cs={},Ks={},fe={},_s={},Se={},Ds={},Fs={},ze={},we={},Ae={},he={},Ms={},Ue={},Ts={},de={},$s={},Ls={},Ve={},xe={},Pe={},Ie={},Bs={},Re={},ke={},qe={},ve={},Ee={},Ce={},Gs={},ht={},Hs={},Js={},Ke={},Ns={},_e={},Qs={},Ws={},Xs={},Ys={},Zs={},tr={},er={},sr={},rr={},ar={},nr={},or={},ir={},cr={},ur={},mr={},yr={},De={},lr={},br={},Fe={},gr={},Me={},pr={},Or={},jr={},fr={},Sr={},zr={},wr={},Te={},Ar={},hr={},Ur={},dr={},Vr={},xr={},Pr={},Ir={},Rr={},kr={},$e={},qr={},vr={},Er={},Cr={},Kr={},_r={},Dr={},Fr={},Mr={},Tr={},ba=new Uint8Array,ga=new Uint8Array([0,0,0,0,0,0,36,192]),pa=new Uint8Array,Oa=new Uint8Array([0,0,0,0,0,0,36,192]),ja=new Uint8Array,fa=new Uint8Array([0,0,0,0,0,0,36,64]),Sa=new Uint8Array,za=new Uint8Array([0,0,0,0,0,0,36,64]),wa=new Uint8Array,Aa=new Uint8Array([0,0,0,0,0,0,240,63]),ha=new Uint8Array,Ua=new Uint8Array([215,163,112,61,10,215,227,63]),da=new Uint8Array,Va=new Uint8Array,xa=new Uint8Array,Pa=new Uint8Array,Ia=new Uint8Array,Ra=new Uint8Array([0,0,0,0,0,64,127,192]),ka=new Uint8Array,qa=new Uint8Array([0,0,0,0,0,64,127,192]),va=new Uint8Array,Ea=new Uint8Array([0,0,0,0,0,64,127,64]),Ca=new Uint8Array,Ka=new Uint8Array([0,0,0,0,0,64,127,64]),_a=new Uint8Array,Da=new Uint8Array([0,0,0,0,0,128,85,192]),Fa=new Uint8Array,Ma=new Uint8Array([0,0,0,0,0,0,54,64]),Ta=new Uint8Array,$a=new Uint8Array,La=new Uint8Array,Ba=new Uint8Array,Ga=new Uint8Array,Ha=new Uint8Array([0,0,0,0,0,0,240,191]),Ja=new Uint8Array,Na=new Uint8Array([0,0,0,0,0,0,240,191]),Qa=new Uint8Array,Wa=new Uint8Array([0,0,0,0,0,0,240,63]),Xa=new Uint8Array,Ya=new Uint8Array([0,0,0,0,0,0,240,63]),Za=new Uint8Array,tn=new Uint8Array([123,20,174,71,225,122,148,191]),en=new Uint8Array,sn=new Uint8Array([123,20,174,71,225,122,148,191]),rn=new Uint8Array,an=new Uint8Array,nn=new Uint8Array,on=new Uint8Array,cn=new Uint8Array,un=new Uint8Array([0,0,0,0,0,0,89,192]),mn=new Uint8Array,yn=new Uint8Array([0,0,0,0,0,0,89,192]),ln=new Uint8Array,bn=new Uint8Array([0,0,0,0,0,0,89,64]),gn=new Uint8Array,pn=new Uint8Array([0,0,0,0,0,0,89,64]),On=new Uint8Array,jn=new Uint8Array([0,0,0,0,0,0,0,192]),fn=new Uint8Array,Sn=new Uint8Array([0,0,0,0,0,0,36,64]),zn=new Uint8Array,wn=new Uint8Array,An=new Uint8Array,hn=new Uint8Array,Un=new Uint8Array,dn=new Uint8Array([0,0,0,0,0,64,143,64]),Vn=new Uint8Array,xn=new Uint8Array([0,0,0,0,0,64,143,64]),Pn=new Uint8Array,In=new Uint8Array([0,0,0,0,0,0,119,64]),Rn=new Uint8Array,kn=new Uint8Array([0,0,0,0,0,208,113,64]),qn=new Uint8Array,vn=new Uint8Array,En=new Uint8Array,Cn=new Uint8Array,Kn=new Uint8Array,_n=new Uint8Array([0,0,0,0,0,0,101,64]),Dn=new Uint8Array,Fn=new Uint8Array([0,0,0,0,0,32,103,64]),Mn=new Uint8Array,Tn=new Uint8Array,$n=new Uint8Array,Ln=new Uint8Array,Bn=new Uint8Array,Gn=new Uint8Array,Hn=new Uint8Array,Jn=new Uint8Array,Nn=new Uint8Array,Qn=new Uint8Array,Wn=new Uint8Array,Xn=new Uint8Array([4]),Yn=new Uint8Array,Zn=new Uint8Array,to=new Uint8Array([0,5,0,1]),eo=new Uint8Array([99,111,109,112,108,101,120,32,114,97,116,105,111,110,97,108,0]),so=new Uint8Array([28,5,0,1]),ro=new Uint8Array([112,105,120,101,108,101,114,111,0]),ao=new Uint8Array,no=new Uint8Array([1]),oo=new Uint8Array([54,5,0,1]),io=new Uint8Array([99,111,109,112,108,101,120,32,109,97,112,112,105,110,103,32,102,40,122,41,61,32,40,97,122,50,43,98,41,47,40,99,122,50,43,100,41,0]),co=new Uint8Array,uo=new Uint8Array,mo=new Uint8Array,yo=new Uint8Array([0]),lo=new Uint8Array([1]),$r=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),bo=new Uint8Array,go=new Uint8Array,po=new Uint8Array,Oo=new Uint8Array,jo=new Uint8Array([4]),Le=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Lr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),fo=new Uint8Array,So=new Uint8Array,zo=new Uint8Array,wo=new Uint8Array,Ao=new Uint8Array([4]),Be=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ho=new Uint8Array([0,0,128,63,82,184,30,63,0,0,172,194,0,0,176,65,10,215,163,188,10,215,163,188,0,0,0,192,0,0,32,65,0,0,184,67,0,128,142,67,0,0,40,67,0,0,57,67]),Uo=new Uint8Array([27,0]),Vo=new Uint8Array,xo=new Uint8Array,Po=new Uint8Array,Io=new Uint8Array;Object.assign(Je,{slots:{0:Et,1:Ct}});Object.assign(Et,{structure:e,memory:{array:ba},slots:{0:Ne}});Object.assign(Ne,{structure:r,memory:{array:ga}});Object.assign(Ct,{structure:e,memory:{array:pa},slots:{0:Qe}});Object.assign(Qe,{structure:r,memory:{array:Oa}});Object.assign(We,{slots:{0:Kt,1:_t}});Object.assign(Kt,{structure:e,memory:{array:ja},slots:{0:Xe}});Object.assign(Xe,{structure:r,memory:{array:fa}});Object.assign(_t,{structure:e,memory:{array:Sa},slots:{0:Ye}});Object.assign(Ye,{structure:r,memory:{array:za}});Object.assign(Ze,{slots:{0:Dt,1:Ft}});Object.assign(Dt,{structure:e,memory:{array:wa},slots:{0:ts}});Object.assign(ts,{structure:r,memory:{array:Aa}});Object.assign(Ft,{structure:e,memory:{array:ha},slots:{0:es}});Object.assign(es,{structure:r,memory:{array:Ua}});Object.assign(ss,{slots:{0:Mt,1:Tt,2:$t,3:Lt}});Object.assign(Mt,{structure:a,memory:{array:da},slots:{0:z}});Object.assign(z,{structure:p});Object.assign(Tt,{structure:Q,memory:{array:Va},slots:{0:Et,1:Ct}});Object.assign($t,{structure:W,memory:{array:xa},slots:{0:Kt,1:_t}});Object.assign(Lt,{structure:X,memory:{array:Pa},slots:{0:Dt,1:Ft}});Object.assign(rs,{slots:{0:Bt,1:Gt}});Object.assign(Bt,{structure:e,memory:{array:Ia},slots:{0:as}});Object.assign(as,{structure:r,memory:{array:Ra}});Object.assign(Gt,{structure:e,memory:{array:ka},slots:{0:ns}});Object.assign(ns,{structure:r,memory:{array:qa}});Object.assign(os,{slots:{0:Ht,1:Jt}});Object.assign(Ht,{structure:e,memory:{array:va},slots:{0:is}});Object.assign(is,{structure:r,memory:{array:Ea}});Object.assign(Jt,{structure:e,memory:{array:Ca},slots:{0:cs}});Object.assign(cs,{structure:r,memory:{array:Ka}});Object.assign(us,{slots:{0:Nt,1:Qt}});Object.assign(Nt,{structure:e,memory:{array:_a},slots:{0:ms}});Object.assign(ms,{structure:r,memory:{array:Da}});Object.assign(Qt,{structure:e,memory:{array:Fa},slots:{0:ys}});Object.assign(ys,{structure:r,memory:{array:Ma}});Object.assign(ls,{slots:{0:Wt,1:Xt,2:Yt,3:Zt}});Object.assign(Wt,{structure:a,memory:{array:Ta},slots:{0:z}});Object.assign(Xt,{structure:Z,memory:{array:$a},slots:{0:Bt,1:Gt}});Object.assign(Yt,{structure:tt,memory:{array:La},slots:{0:Ht,1:Jt}});Object.assign(Zt,{structure:et,memory:{array:Ba},slots:{0:Nt,1:Qt}});Object.assign(bs,{slots:{0:te,1:ee}});Object.assign(te,{structure:e,memory:{array:Ga},slots:{0:gs}});Object.assign(gs,{structure:r,memory:{array:Ha}});Object.assign(ee,{structure:e,memory:{array:Ja},slots:{0:ps}});Object.assign(ps,{structure:r,memory:{array:Na}});Object.assign(Os,{slots:{0:_,1:D}});Object.assign(_,{structure:e,memory:{array:Qa},slots:{0:js}});Object.assign(js,{structure:r,memory:{array:Wa}});Object.assign(D,{structure:e,memory:{array:Xa},slots:{0:fs}});Object.assign(fs,{structure:r,memory:{array:Ya}});Object.assign(Ss,{slots:{0:se,1:re}});Object.assign(se,{structure:e,memory:{array:Za},slots:{0:zs}});Object.assign(zs,{structure:r,memory:{array:tn}});Object.assign(re,{structure:e,memory:{array:en},slots:{0:ws}});Object.assign(ws,{structure:r,memory:{array:sn}});Object.assign(As,{slots:{0:ae,1:ne,2:oe,3:ie}});Object.assign(ae,{structure:a,memory:{array:rn},slots:{0:z}});Object.assign(ne,{structure:rt,memory:{array:an},slots:{0:te,1:ee}});Object.assign(oe,{structure:j,memory:{array:nn},slots:{0:_,1:D}});Object.assign(ie,{structure:at,memory:{array:on},slots:{0:se,1:re}});Object.assign(hs,{slots:{0:ce,1:ue}});Object.assign(ce,{structure:e,memory:{array:cn},slots:{0:Us}});Object.assign(Us,{structure:r,memory:{array:un}});Object.assign(ue,{structure:e,memory:{array:mn},slots:{0:ds}});Object.assign(ds,{structure:r,memory:{array:yn}});Object.assign(Vs,{slots:{0:me,1:ye}});Object.assign(me,{structure:e,memory:{array:ln},slots:{0:xs}});Object.assign(xs,{structure:r,memory:{array:bn}});Object.assign(ye,{structure:e,memory:{array:gn},slots:{0:Ps}});Object.assign(Ps,{structure:r,memory:{array:pn}});Object.assign(Is,{slots:{0:le,1:be}});Object.assign(le,{structure:e,memory:{array:On},slots:{0:Rs}});Object.assign(Rs,{structure:r,memory:{array:jn}});Object.assign(be,{structure:e,memory:{array:fn},slots:{0:ks}});Object.assign(ks,{structure:r,memory:{array:Sn}});Object.assign(qs,{slots:{0:ge,1:pe,2:Oe,3:je}});Object.assign(ge,{structure:a,memory:{array:zn},slots:{0:z}});Object.assign(pe,{structure:ot,memory:{array:wn},slots:{0:ce,1:ue}});Object.assign(Oe,{structure:it,memory:{array:An},slots:{0:me,1:ye}});Object.assign(je,{structure:ct,memory:{array:hn},slots:{0:le,1:be}});Object.assign(vs,{slots:{0:wt,1:At}});Object.assign(wt,{structure:e,memory:{array:Un},slots:{0:Es}});Object.assign(Es,{structure:r,memory:{array:dn}});Object.assign(At,{structure:e,memory:{array:Vn},slots:{0:Cs}});Object.assign(Cs,{structure:r,memory:{array:xn}});Object.assign(Ks,{slots:{0:fe,1:Se}});Object.assign(fe,{structure:e,memory:{array:Pn},slots:{0:_s}});Object.assign(_s,{structure:r,memory:{array:In}});Object.assign(Se,{structure:e,memory:{array:Rn},slots:{0:Ds}});Object.assign(Ds,{structure:r,memory:{array:kn}});Object.assign(Fs,{slots:{0:ze,1:we,2:Ae,3:he}});Object.assign(ze,{structure:a,memory:{array:qn},slots:{0:z}});Object.assign(we,{structure:j,memory:{array:vn},slots:{0:_,1:D}});Object.assign(Ae,{structure:U,memory:{array:En},slots:{0:wt,1:At}});Object.assign(he,{structure:mt,memory:{array:Cn},slots:{0:fe,1:Se}});Object.assign(Ms,{slots:{0:Ue,1:de}});Object.assign(Ue,{structure:e,memory:{array:Kn},slots:{0:Ts}});Object.assign(Ts,{structure:r,memory:{array:_n}});Object.assign(de,{structure:e,memory:{array:Dn},slots:{0:$s}});Object.assign($s,{structure:r,memory:{array:Fn}});Object.assign(Ls,{slots:{0:Ve,1:xe,2:Pe,3:Ie}});Object.assign(Ve,{structure:a,memory:{array:Mn},slots:{0:z}});Object.assign(xe,{structure:j,memory:{array:Tn},slots:{0:_,1:D}});Object.assign(Pe,{structure:U,memory:{array:$n},slots:{0:wt,1:At}});Object.assign(Ie,{structure:lt,memory:{array:Ln},slots:{0:Ue,1:de}});Object.assign(Bs,{slots:{0:Re,1:ke,2:qe,3:ve,4:Ee,5:Ce}});Object.assign(Re,{structure:Y,memory:{array:Bn},slots:{0:Mt,1:Tt,2:$t,3:Lt}});Object.assign(ke,{structure:st,memory:{array:Gn},slots:{0:Wt,1:Xt,2:Yt,3:Zt}});Object.assign(qe,{structure:nt,memory:{array:Hn},slots:{0:ae,1:ne,2:oe,3:ie}});Object.assign(ve,{structure:ut,memory:{array:Jn},slots:{0:ge,1:pe,2:Oe,3:je}});Object.assign(Ee,{structure:yt,memory:{array:Nn},slots:{0:ze,1:we,2:Ae,3:he}});Object.assign(Ce,{structure:bt,memory:{array:Qn},slots:{0:Ve,1:xe,2:Pe,3:Ie}});Object.assign(Gs,{slots:{0:ht}});Object.assign(ht,{structure:b,memory:{array:Wn},slots:{0:Hs}});Object.assign(Hs,{structure:S,memory:{array:Xn}});Object.assign(Js,{slots:{0:Ke}});Object.assign(Ke,{structure:d,memory:{array:Yn},slots:{0:ht}});Object.assign(Ns,{slots:{0:_e}});Object.assign(_e,{structure:d,memory:{array:Zn},slots:{0:ht}});Object.assign(Qs,{slots:{0:Ws,1:Ys,2:tr,3:sr,4:ar,5:nr,6:or}});Object.assign(Ws,{structure:B,memory:{array:to},slots:{0:Xs}});Object.assign(Xs,{structure:L,memory:{array:eo},reloc:16778496,const:!0});Object.assign(Ys,{structure:H,memory:{array:so},slots:{0:Zs}});Object.assign(Zs,{structure:G,memory:{array:ro},reloc:16778524,const:!0});Object.assign(tr,{structure:b,memory:{array:ao},slots:{0:er}});Object.assign(er,{structure:S,memory:{array:no}});Object.assign(sr,{structure:N,memory:{array:oo},slots:{0:rr}});Object.assign(rr,{structure:J,memory:{array:io},reloc:16778550,const:!0});Object.assign(ar,{structure:gt,memory:{array:co},slots:{0:Re,1:ke,2:qe,3:ve,4:Ee,5:Ce}});Object.assign(nr,{structure:pt,memory:{array:uo},slots:{0:Ke}});Object.assign(or,{structure:Ot,memory:{array:mo},slots:{0:_e}});Object.assign(ir,{slots:{0:cr,1:ur}});Object.assign(cr,{structure:O,memory:{array:yo}});Object.assign(ur,{structure:O,memory:{array:lo}});Object.assign(mr,{memory:{array:$r},slots:{0:yr}});Object.assign(yr,{structure:q,memory:{array:$r,offset:0,length:8},slots:{0:De}});Object.assign(De,{structure:jt,memory:{array:bo},reloc:0,const:!0});Object.assign(lr,{slots:{0:br,1:gr,2:pr}});Object.assign(br,{structure:a,memory:{array:go},slots:{0:Fe}});Object.assign(Fe,{structure:k});Object.assign(gr,{structure:a,memory:{array:po},slots:{0:Me}});Object.assign(Me,{structure:Pt});Object.assign(pr,{structure:b,memory:{array:Oo},slots:{0:Or}});Object.assign(Or,{structure:S,memory:{array:jo}});Object.assign(jr,{memory:{array:Le},slots:{0:fr}});Object.assign(fr,{structure:ft,memory:{array:Le},slots:{0:Sr}});Object.assign(Sr,{structure:q,memory:{array:Le,offset:0,length:8},slots:{0:De}});Object.assign(zr,{memory:{array:Lr},slots:{0:wr}});Object.assign(wr,{structure:E,memory:{array:Lr,offset:0,length:8},slots:{0:Te}});Object.assign(Te,{structure:St,memory:{array:fo},reloc:0});Object.assign(Ar,{slots:{0:hr,1:Ur,2:dr}});Object.assign(hr,{structure:a,memory:{array:So},slots:{0:Fe}});Object.assign(Ur,{structure:a,memory:{array:zo},slots:{0:Me}});Object.assign(dr,{structure:b,memory:{array:wo},slots:{0:Vr}});Object.assign(Vr,{structure:S,memory:{array:Ao}});Object.assign(xr,{memory:{array:Be},slots:{0:Pr}});Object.assign(Pr,{structure:zt,memory:{array:Be},slots:{0:Ir}});Object.assign(Ir,{structure:E,memory:{array:Be,offset:0,length:8},slots:{0:Te}});Object.assign(Rr,{memory:{array:ho}});Object.assign(kr,{slots:{0:$e}});Object.assign($e,{structure:R,memory:{array:Uo}});Object.assign(qr,{slots:{0:$e}});Object.assign(vr,{slots:{0:Er,1:Kr,2:Dr,3:Mr}});Object.assign(Er,{structure:a,memory:{array:Vo},slots:{0:Cr}});Object.assign(Cr,{structure:xt});Object.assign(Kr,{structure:a,memory:{array:xo},slots:{0:_r}});Object.assign(_r,{structure:v});Object.assign(Dr,{structure:a,memory:{array:Po},slots:{0:Fr}});Object.assign(Fr,{structure:C});Object.assign(Mr,{structure:a,memory:{array:Io},slots:{0:Tr}});Object.assign(Tr,{structure:K});const Ro={argStruct:Rt,thunkId:2,name:"createOutput"},ko={argStruct:qt,thunkId:3,name:"createPartialOutput"};Object.assign(a,{...s,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:a}],methods:[]}});Object.assign(f,{...s,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(L,{...s,type:1,name:"[16:0]u8",length:16,byteSize:17,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(B,{...s,type:13,name:"*const [16:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[]}});Object.assign(G,{...s,type:1,name:"[8:0]u8",length:8,byteSize:9,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(H,{...s,type:13,name:"*const [8:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:G}],methods:[]}});Object.assign(b,{...s,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:b}],methods:[]}});Object.assign(S,{...s,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(J,{...s,type:1,name:"[37:0]u8",length:37,byteSize:38,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(N,{...s,type:13,name:"*const [37:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:J}],methods:[]}});Object.assign(e,{...s,name:"comptime_float",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:e}],methods:[]}});Object.assign(r,{...s,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[]}});Object.assign(Q,{...s,type:2,name:"Struct2010658752",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:Je}});Object.assign(W,{...s,type:2,name:"Struct1464340365",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:We}});Object.assign(X,{...s,type:2,name:"Struct2556760447",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:Ze}});Object.assign(P,{...s,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(p,{...s,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(Y,{...s,type:2,name:"Struct1234170353",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"minValue",structure:Q},{...t,type:9,slot:2,name:"maxValue",structure:W},{...t,type:9,slot:3,name:"defaultValue",structure:X}],methods:[],template:ss}});Object.assign(Z,{...s,type:2,name:"Struct2891036612",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:rs}});Object.assign(tt,{...s,type:2,name:"Struct2324270226",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:os}});Object.assign(et,{...s,type:2,name:"Struct2440688355",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:us}});Object.assign(st,{...s,type:2,name:"Struct2687980129",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"minValue",structure:Z},{...t,type:9,slot:2,name:"maxValue",structure:tt},{...t,type:9,slot:3,name:"defaultValue",structure:et}],methods:[],template:ls}});Object.assign(rt,{...s,type:2,name:"Struct2009719738",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:bs}});Object.assign(j,{...s,type:2,name:"Struct2999377579",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:Os}});Object.assign(at,{...s,type:2,name:"Struct1674980473",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:Ss}});Object.assign(nt,{...s,type:2,name:"Struct988821803",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"minValue",structure:rt},{...t,type:9,slot:2,name:"maxValue",structure:j},{...t,type:9,slot:3,name:"defaultValue",structure:at}],methods:[],template:As}});Object.assign(ot,{...s,type:2,name:"Struct909833941",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:hs}});Object.assign(it,{...s,type:2,name:"Struct2155520631",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:Vs}});Object.assign(ct,{...s,type:2,name:"Struct1147135485",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:Is}});Object.assign(ut,{...s,type:2,name:"Struct3837692994",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"minValue",structure:ot},{...t,type:9,slot:2,name:"maxValue",structure:it},{...t,type:9,slot:3,name:"defaultValue",structure:ct}],methods:[],template:qs}});Object.assign(U,{...s,type:2,name:"Struct830517164",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:vs}});Object.assign(mt,{...s,type:2,name:"Struct3127283304",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:Ks}});Object.assign(yt,{...s,type:2,name:"Struct3732162626",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"minValue",structure:j},{...t,type:9,slot:2,name:"maxValue",structure:U},{...t,type:9,slot:3,name:"defaultValue",structure:mt}],methods:[],template:Fs}});Object.assign(lt,{...s,type:2,name:"Struct424252010",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:Ms}});Object.assign(bt,{...s,type:2,name:"Struct594465059",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"minValue",structure:j},{...t,type:9,slot:2,name:"maxValue",structure:U},{...t,type:9,slot:3,name:"defaultValue",structure:lt}],methods:[],template:Ls}});Object.assign(gt,{...s,type:2,name:"Struct4189830687",align:1,instance:{members:[{...t,type:9,slot:0,name:"a",structure:Y},{...t,type:9,slot:1,name:"b",structure:st},{...t,type:9,slot:2,name:"c",structure:nt},{...t,type:9,slot:3,name:"d",structure:ut},{...t,type:9,slot:4,name:"size",structure:yt},{...t,type:9,slot:5,name:"center",structure:bt}],methods:[],template:Bs}});Object.assign(d,{...s,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:b}],methods:[],template:Gs}});Object.assign(pt,{...s,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:9,slot:0,name:"src",structure:d}],methods:[],template:Js}});Object.assign(Ot,{...s,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:9,slot:0,name:"dst",structure:d}],methods:[],template:Ns}});Object.assign(xt,{...s,type:2,name:"complex-rational.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:B},{...t,type:9,slot:1,name:"vendor",structure:H},{...t,type:9,slot:2,name:"version",structure:b},{...t,type:9,slot:3,name:"description",structure:N},{...t,type:9,slot:4,name:"parameters",structure:gt},{...t,type:9,slot:5,name:"inputImages",structure:pt},{...t,type:9,slot:6,name:"outputImages",structure:Ot}],methods:[],template:Qs}});Object.assign(k,{...s,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(jt,{...s,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(q,{...s,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:jt}],methods:[]}});Object.assign(y,{...s,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[]}});Object.assign(O,{...s,type:11,name:"complex-rational.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:O},{...t,type:9,slot:1,name:"display-p3",structure:O}],methods:[],template:ir}});Object.assign(I,{...s,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(Pt,{...s,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(ft,{...s,type:2,name:"complex-rational.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:q},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:I}],methods:[],template:mr},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:a},{...t,type:9,slot:1,name:"FPixel",structure:a},{...t,type:9,slot:2,name:"channels",structure:b}],methods:[],template:lr}});Object.assign(v,{...s,type:2,name:"complex-rational.KernelInput(u8,complex-rational.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:ft}],methods:[],template:jr}});Object.assign(St,{...s,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(E,{...s,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:St}],methods:[]}});Object.assign(zt,{...s,type:2,name:"complex-rational.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:E},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:I}],methods:[],template:zr},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:a},{...t,type:9,slot:1,name:"FPixel",structure:a},{...t,type:9,slot:2,name:"channels",structure:b}],methods:[],template:Ar}});Object.assign(C,{...s,type:2,name:"complex-rational.KernelOutput(u8,complex-rational.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:zt}],methods:[],template:xr}});Object.assign(K,{...s,type:2,name:"complex-rational.KernelParameters(complex-rational.kernel)",byteSize:48,align:8,instance:{members:[{...t,type:7,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"a",structure:p},{...t,type:7,bitOffset:64,bitSize:64,byteSize:8,slot:1,name:"b",structure:p},{...t,type:7,bitOffset:128,bitSize:64,byteSize:8,slot:2,name:"c",structure:p},{...t,type:7,bitOffset:192,bitSize:64,byteSize:8,slot:3,name:"d",structure:p},{...t,type:7,bitOffset:256,bitSize:64,byteSize:8,slot:4,name:"size",structure:p},{...t,type:7,bitOffset:320,bitSize:64,byteSize:8,slot:5,name:"center",structure:p}],methods:[],template:Rr}});Object.assign(R,{...s,type:10,name:"@typeInfo(@typeInfo(@TypeOf(complex-rational.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:R}],methods:[],template:kr}});Object.assign(It,{...s,type:9,name:"ErrorSet4228535764!complex-rational.KernelOutput(u8,complex-rational.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:C},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:R}],methods:[]}});Object.assign(Rt,{...s,type:5,name:"createOutput",byteSize:112,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:384,bitSize:32,byteSize:4,slot:3,name:"0",structure:y},{...t,type:3,isRequired:!0,bitOffset:416,bitSize:32,byteSize:4,slot:4,name:"1",structure:y},{...t,type:7,isRequired:!0,bitOffset:448,bitSize:192,byteSize:24,slot:0,name:"2",structure:v},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:384,byteSize:48,slot:1,name:"3",structure:K},{...t,type:7,isRequired:!0,bitOffset:640,bitSize:224,byteSize:28,slot:2,name:"retval",structure:It}],methods:[]}});Object.assign($,{...s,type:10,name:"@typeInfo(@typeInfo(@TypeOf(complex-rational.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:$}],methods:[],template:qr}});Object.assign(kt,{...s,type:9,name:"ErrorSet476474417!complex-rational.KernelOutput(u8,complex-rational.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:C},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:$}],methods:[]}});Object.assign(qt,{...s,type:5,name:"createPartialOutput",byteSize:120,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:384,bitSize:32,byteSize:4,slot:3,name:"0",structure:y},{...t,type:3,isRequired:!0,bitOffset:416,bitSize:32,byteSize:4,slot:4,name:"1",structure:y},{...t,type:3,isRequired:!0,bitOffset:448,bitSize:32,byteSize:4,slot:5,name:"2",structure:y},{...t,type:3,isRequired:!0,bitOffset:480,bitSize:32,byteSize:4,slot:6,name:"3",structure:y},{...t,type:7,isRequired:!0,bitOffset:512,bitSize:192,byteSize:24,slot:0,name:"4",structure:v},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:384,byteSize:48,slot:1,name:"5",structure:K},{...t,type:7,isRequired:!0,bitOffset:704,bitSize:224,byteSize:28,slot:2,name:"retval",structure:kt}],methods:[]}});Object.assign(vt,{...s,type:2,name:"complex-rational",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:a},{...t,type:9,slot:1,name:"Input",structure:a},{...t,type:9,slot:2,name:"Output",structure:a},{...t,type:9,slot:3,name:"Parameters",structure:a}],methods:[Ro,ko],template:vr}});const qo=[a,f,L,B,G,H,b,S,J,N,e,r,Q,W,X,P,p,Y,Z,tt,et,st,rt,j,at,nt,ot,it,ct,ut,U,mt,yt,lt,bt,gt,d,pt,Ot,xt,k,jt,q,y,O,I,Pt,ft,v,St,E,zt,C,K,R,It,Rt,$,kt,qt,vt],vo=vt,Eo={runtimeSafety:!1,littleEndian:!0},Ut=ya();Ut.getControlObject();Ut.recreateStructures(qo,Eo);const Co=(async()=>{const c=new URL("complex-rational-638e1e46.wasm",import.meta.url).href;return fetch(c)})();Ut.loadModule(Co);Ut.linkVariables(!0);const{constructor:Ko}=vo,{createPartialOutput:_o,Input:Do,kernel:Vt}=Ko;function Fo(c,u,o,n,i={},w={}){const A=[];for(const[l]of Vt.inputImages)A.push(l);const V=[];for(const[l]of Vt.outputImages)V.push(l);if(Array.isArray(i)){const l=i;i={};for(const[g,h]of A.entries())i[h]=l[g]}const m=new Do(void 0),F=[];let x;for(const l of A){let g=i[l];if(g||(A.length===1&&["data","width","height"].every(h=>!!i[h])?g=i:F.push(l)),m[l]=g,x){if(g.colorSpace!==x)throw new Error(`Input images must all use the same color space: ${x}`)}else x=g.colorSpace}if(F.length>0)throw new Error(`Missing input image${F.length>1?"s":""}: ${F.join(", ")}`);const dt=_o(c,u,o,n,m,w),Ge=l=>{const g={};for(const h of V){const{data:{typedArray:M},width:He,height:Gr}=l[h];let T;if(typeof ImageData=="function"){const Hr=new Uint8ClampedArray(M.buffer,M.byteOffset,M.byteLength);T=new ImageData(Hr,He,n,{colorSpace:x})}else T={data:M,width:He,height:Gr};if(V.length===1)return T;g[h]=T}return g};return dt[Symbol.toStringTag]==="Promise"?dt.then(Ge):Ge(dt)}function Mo(){const c={};for(let[u,o]of Vt){if(u==="parameters"){const n={};for(const[i,w]of o){const A=n[i]={};for(let[V,m]of w)typeof m=="object"?"string"in m?m=m.string:m=Br(m):typeof m=="function"&&(m=To(m.name)),A[V]=m}o=n}else typeof o=="object"&&("string"in o?o=o.string:o=o.valueOf());c[u]=o}return c}function Br(c){const u=[];for(let[o,n]of c)typeof n=="object"&&(n=Br(n)),u[o]=n;return u}function To(c){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[c]}onmessage=c=>{const[u,o,...n]=c.data;$o(u,n).then(([i,w])=>{postMessage([u,o,i],{transfer:w})}).catch(i=>{postMessage(["error",o,i])})};async function $o(c,u){switch(c){case"getKernelInfo":return[Mo(...u)];case"createPartialImageData":const n=await Fo(...u),i=[];if("data"in n&&"width"in n&&"height"in n)i.push(n.data.buffer);else for(const w of Object.entries(n))i.push(n.data.buffer);return[n,i];default:throw new Error(`Unknown function: ${c}`)}}
