import{u as $e,a as Le,b as Be,c as Ge,d as He,e as Je,f as Ne,g as Qe,h as We,i as Xe,j as Ye,k as Ze,l as ts,m as es,n as ss,p as rs,o as as,q as ns,r as is,s as os}from"./index-25a52593.js";$e();Ye();Ze();Le();Be();ts();es();ss();rs();Ge();He();Je();Ne();as();os();Qe();ns();We();Xe();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},h={},R={},z={},i={},l={},M={},T={},g={},j={},d={},$={},P={},L={},B={},w={},G={},H={},et={},k={},J={},q={},m={},p={},V={},st={},N={},v={},Q={},E={},W={},x={},K={},I={},rt={},at={},F={},nt={},it={},ot={},Rt={},ct={},kt={},ut={},qt={},mt={},vt={},yt={},Et={},xt={},bt={},Kt={},lt={},Ct={},gt={},_t={},pt={},Dt={},Ft={},ft={},Ot={},Mt={},X={},Tt={},$t={},St={},Lt={},ht={},Bt={},Gt={},Ht={},Jt={},Nt={},Qt={},Wt={},Xt={},Yt={},Zt={},te={},ee={},se={},re={},ae={},ne={},ie={},zt={},oe={},ce={},jt={},ue={},dt={},me={},ye={},be={},le={},ge={},pe={},fe={},wt={},Oe={},Se={},he={},ze={},je={},de={},we={},Ae={},Ue={},Pe={},At={},Ve={},Ie={},Re={},ke={},qe={},ve={},Ee={},xe={},Ke={},Ce={},cs=new Uint8Array,us=new Uint8Array,ms=new Uint8Array([0,0,0,0,0,0,0,0]),ys=new Uint8Array,bs=new Uint8Array([0,0,0,0,0,224,111,64]),ls=new Uint8Array,gs=new Uint8Array([0,0,0,0,0,0,96,64]),ps=new Uint8Array,fs=new Uint8Array,Os=new Uint8Array([0]),Ss=new Uint8Array,hs=new Uint8Array([1]),zs=new Uint8Array,js=new Uint8Array([0]),ds=new Uint8Array,ws=new Uint8Array,As=new Uint8Array,Us=new Uint8Array([4]),Ps=new Uint8Array,Vs=new Uint8Array,Is=new Uint8Array([250,4,0,1]),Rs=new Uint8Array([99,111,109,46,109,105,109,115,119,114,105,103,104,116,0]),ks=new Uint8Array([20,5,0,1]),qs=new Uint8Array([77,105,109,115,87,114,105,103,104,116,46,99,111,109,0]),vs=new Uint8Array,Es=new Uint8Array([1]),xs=new Uint8Array([52,5,0,1]),Ks=new Uint8Array([101,120,116,114,101,109,101,32,99,111,110,116,114,97,115,116,32,102,105,108,116,101,114,32,116,104,97,116,32,99,111,110,118,101,114,116,115,32,116,111,32,101,105,116,104,101,114,32,49,32,111,114,32,48,32,98,97,115,101,100,32,111,110,32,98,114,105,103,104,116,110,101,115,115,32,111,102,32,115,111,117,114,99,101,46,0]),Cs=new Uint8Array,_s=new Uint8Array,Ds=new Uint8Array,Fs=new Uint8Array([0]),Ms=new Uint8Array([1]),_e=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ts=new Uint8Array,$s=new Uint8Array,Ls=new Uint8Array,Bs=new Uint8Array,Gs=new Uint8Array([4]),Ut=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),De=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Hs=new Uint8Array,Js=new Uint8Array,Ns=new Uint8Array,Qs=new Uint8Array,Ws=new Uint8Array([4]),Pt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Xs=new Uint8Array([0,0,0,67,0,0,0,0]),Ys=new Uint8Array([27,0]),Zs=new Uint8Array,tr=new Uint8Array,er=new Uint8Array,sr=new Uint8Array;Object.assign(Rt,{slots:{0:ct,1:ut,2:mt,3:yt}});Object.assign(ct,{structure:s,memory:{array:cs},slots:{0:kt}});Object.assign(kt,{structure:j});Object.assign(ut,{structure:g,memory:{array:us},slots:{0:qt}});Object.assign(qt,{structure:d,memory:{array:ms}});Object.assign(mt,{structure:g,memory:{array:ys},slots:{0:vt}});Object.assign(vt,{structure:d,memory:{array:bs}});Object.assign(yt,{structure:g,memory:{array:ls},slots:{0:Et}});Object.assign(Et,{structure:d,memory:{array:gs}});Object.assign(xt,{slots:{0:bt,1:lt,2:gt,3:pt}});Object.assign(bt,{structure:s,memory:{array:ps},slots:{0:Kt}});Object.assign(Kt,{structure:P});Object.assign(lt,{structure:i,memory:{array:fs},slots:{0:Ct}});Object.assign(Ct,{structure:l,memory:{array:Os}});Object.assign(gt,{structure:i,memory:{array:Ss},slots:{0:_t}});Object.assign(_t,{structure:l,memory:{array:hs}});Object.assign(pt,{structure:i,memory:{array:zs},slots:{0:Dt}});Object.assign(Dt,{structure:l,memory:{array:js}});Object.assign(Ft,{slots:{0:ft,1:Ot}});Object.assign(ft,{structure:$,memory:{array:ds},slots:{0:ct,1:ut,2:mt,3:yt}});Object.assign(Ot,{structure:L,memory:{array:ws},slots:{0:bt,1:lt,2:gt,3:pt}});Object.assign(Mt,{slots:{0:X}});Object.assign(X,{structure:i,memory:{array:As},slots:{0:Tt}});Object.assign(Tt,{structure:l,memory:{array:Us}});Object.assign($t,{slots:{0:St}});Object.assign(St,{structure:w,memory:{array:Ps},slots:{0:X}});Object.assign(Lt,{slots:{0:ht}});Object.assign(ht,{structure:w,memory:{array:Vs},slots:{0:X}});Object.assign(Bt,{slots:{0:Gt,1:Jt,2:Qt,3:Xt,4:Zt,5:te,6:ee}});Object.assign(Gt,{structure:z,memory:{array:Is},slots:{0:Ht}});Object.assign(Ht,{structure:R,memory:{array:Rs},reloc:16778490,const:!0});Object.assign(Jt,{structure:z,memory:{array:ks},slots:{0:Nt}});Object.assign(Nt,{structure:R,memory:{array:qs},reloc:16778516,const:!0});Object.assign(Qt,{structure:i,memory:{array:vs},slots:{0:Wt}});Object.assign(Wt,{structure:l,memory:{array:Es}});Object.assign(Xt,{structure:T,memory:{array:xs},slots:{0:Yt}});Object.assign(Yt,{structure:M,memory:{array:Ks},reloc:16778548,const:!0});Object.assign(Zt,{structure:B,memory:{array:Cs},slots:{0:ft,1:Ot}});Object.assign(te,{structure:G,memory:{array:_s},slots:{0:St}});Object.assign(ee,{structure:H,memory:{array:Ds},slots:{0:ht}});Object.assign(se,{slots:{0:re,1:ae}});Object.assign(re,{structure:p,memory:{array:Fs}});Object.assign(ae,{structure:p,memory:{array:Ms}});Object.assign(ne,{memory:{array:_e},slots:{0:ie}});Object.assign(ie,{structure:q,memory:{array:_e,offset:0,length:8},slots:{0:zt}});Object.assign(zt,{structure:J,memory:{array:Ts},reloc:0,const:!0});Object.assign(oe,{slots:{0:ce,1:ue,2:me}});Object.assign(ce,{structure:s,memory:{array:$s},slots:{0:jt}});Object.assign(jt,{structure:k});Object.assign(ue,{structure:s,memory:{array:Ls},slots:{0:dt}});Object.assign(dt,{structure:st});Object.assign(me,{structure:i,memory:{array:Bs},slots:{0:ye}});Object.assign(ye,{structure:l,memory:{array:Gs}});Object.assign(be,{memory:{array:Ut},slots:{0:le}});Object.assign(le,{structure:N,memory:{array:Ut},slots:{0:ge}});Object.assign(ge,{structure:q,memory:{array:Ut,offset:0,length:8},slots:{0:zt}});Object.assign(pe,{memory:{array:De},slots:{0:fe}});Object.assign(fe,{structure:E,memory:{array:De,offset:0,length:8},slots:{0:wt}});Object.assign(wt,{structure:Q,memory:{array:Hs},reloc:0});Object.assign(Oe,{slots:{0:Se,1:he,2:ze}});Object.assign(Se,{structure:s,memory:{array:Js},slots:{0:jt}});Object.assign(he,{structure:s,memory:{array:Ns},slots:{0:dt}});Object.assign(ze,{structure:i,memory:{array:Qs},slots:{0:je}});Object.assign(je,{structure:l,memory:{array:Ws}});Object.assign(de,{memory:{array:Pt},slots:{0:we}});Object.assign(we,{structure:W,memory:{array:Pt},slots:{0:Ae}});Object.assign(Ae,{structure:E,memory:{array:Pt,offset:0,length:8},slots:{0:wt}});Object.assign(Ue,{memory:{array:Xs}});Object.assign(Pe,{slots:{0:At}});Object.assign(At,{structure:I,memory:{array:Ys}});Object.assign(Ve,{slots:{0:At}});Object.assign(Ie,{slots:{0:Re,1:qe,2:Ee,3:Ke}});Object.assign(Re,{structure:s,memory:{array:Zs},slots:{0:ke}});Object.assign(ke,{structure:et});Object.assign(qe,{structure:s,memory:{array:tr},slots:{0:ve}});Object.assign(ve,{structure:v});Object.assign(Ee,{structure:s,memory:{array:er},slots:{0:xe}});Object.assign(xe,{structure:x});Object.assign(Ke,{structure:s,memory:{array:sr},slots:{0:Ce}});Object.assign(Ce,{structure:K});const rr={argStruct:at,thunkId:2,name:"createOutput"},ar={argStruct:it,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(h,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:h}],methods:[]}});Object.assign(R,{...e,type:1,name:"[14:0]u8",length:14,byteSize:15,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:h}],methods:[]}});Object.assign(z,{...e,type:13,name:"*const [14:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:R}],methods:[]}});Object.assign(i,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:i}],methods:[]}});Object.assign(l,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:l}],methods:[]}});Object.assign(M,{...e,type:1,name:"[85:0]u8",length:85,byteSize:86,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:h}],methods:[]}});Object.assign(T,{...e,type:13,name:"*const [85:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(g,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:g}],methods:[]}});Object.assign(j,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:j}],methods:[]}});Object.assign(d,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:d}],methods:[]}});Object.assign($,{...e,type:2,name:"Struct2980816048",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:g},{...t,type:9,slot:2,name:"maxValue",structure:g},{...t,type:9,slot:3,name:"defaultValue",structure:g}],methods:[],template:Rt}});Object.assign(P,{...e,name:"i32",byteSize:4,align:4,instance:{members:[{...t,type:2,bitOffset:0,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(L,{...e,type:2,name:"Struct152411989",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:i},{...t,type:9,slot:2,name:"maxValue",structure:i},{...t,type:9,slot:3,name:"defaultValue",structure:i}],methods:[],template:xt}});Object.assign(B,{...e,type:2,name:"Struct1740039515",align:1,instance:{members:[{...t,type:9,slot:0,name:"threshhold",structure:$},{...t,type:9,slot:1,name:"invert",structure:L}],methods:[],template:Ft}});Object.assign(w,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:i}],methods:[],template:Mt}});Object.assign(G,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:9,slot:0,name:"src",structure:w}],methods:[],template:$t}});Object.assign(H,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:9,slot:0,name:"dst",structure:w}],methods:[],template:Lt}});Object.assign(et,{...e,type:2,name:"high-contrast.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:z},{...t,type:9,slot:1,name:"vendor",structure:z},{...t,type:9,slot:2,name:"version",structure:i},{...t,type:9,slot:3,name:"description",structure:T},{...t,type:9,slot:4,name:"parameters",structure:B},{...t,type:9,slot:5,name:"inputImages",structure:G},{...t,type:9,slot:6,name:"outputImages",structure:H}],methods:[],template:Bt}});Object.assign(k,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:h}],methods:[]}});Object.assign(J,{...e,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(q,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:J}],methods:[]}});Object.assign(m,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[]}});Object.assign(p,{...e,type:11,name:"high-contrast.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:p},{...t,type:9,slot:1,name:"display-p3",structure:p}],methods:[],template:se}});Object.assign(V,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(st,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:j}],methods:[]}});Object.assign(N,{...e,type:2,name:"high-contrast.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:q},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:ne},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:i}],methods:[],template:oe}});Object.assign(v,{...e,type:2,name:"high-contrast.KernelInput(u8,high-contrast.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:N}],methods:[],template:be}});Object.assign(Q,{...e,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(E,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:Q}],methods:[]}});Object.assign(W,{...e,type:2,name:"high-contrast.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:E},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:pe},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:i}],methods:[],template:Oe}});Object.assign(x,{...e,type:2,name:"high-contrast.KernelOutput(u8,high-contrast.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:W}],methods:[],template:de}});Object.assign(K,{...e,type:2,name:"high-contrast.KernelParameters(high-contrast.kernel)",byteSize:8,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"threshhold",structure:j},{...t,type:2,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"invert",structure:P}],methods:[],template:Ue}});Object.assign(I,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(high-contrast.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:I}],methods:[],template:Pe}});Object.assign(rt,{...e,type:9,name:"ErrorSet1273945904!high-contrast.KernelOutput(u8,high-contrast.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:x},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:I}],methods:[]}});Object.assign(at,{...e,type:5,name:"createOutput",byteSize:68,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...t,type:7,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:v},{...t,type:7,isRequired:!0,bitOffset:256,bitSize:64,byteSize:8,slot:1,name:"3",structure:K},{...t,type:7,isRequired:!0,bitOffset:320,bitSize:224,byteSize:28,slot:2,name:"retval",structure:rt}],methods:[]}});Object.assign(F,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(high-contrast.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:F}],methods:[],template:Ve}});Object.assign(nt,{...e,type:9,name:"ErrorSet1286841539!high-contrast.KernelOutput(u8,high-contrast.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:x},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:F}],methods:[]}});Object.assign(it,{...e,type:5,name:"createPartialOutput",byteSize:76,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:m},{...t,type:7,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:v},{...t,type:7,isRequired:!0,bitOffset:320,bitSize:64,byteSize:8,slot:1,name:"5",structure:K},{...t,type:7,isRequired:!0,bitOffset:384,bitSize:224,byteSize:28,slot:2,name:"retval",structure:nt}],methods:[]}});Object.assign(ot,{...e,type:2,name:"high-contrast",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:s},{...t,type:9,slot:1,name:"Input",structure:s},{...t,type:9,slot:2,name:"Output",structure:s},{...t,type:9,slot:3,name:"Parameters",structure:s}],methods:[rr,ar],template:Ie}});const nr=[s,h,R,z,i,l,M,T,g,j,d,$,P,L,B,w,G,H,et,k,J,q,m,p,V,st,N,v,Q,E,W,x,K,I,rt,at,F,nt,it,ot],ir=ot,or={runtimeSafety:!1,littleEndian:!0},Y=is();Y.getControlObject();Y.recreateStructures(nr,or);const cr=(async()=>{const o=new URL("high-contrast-38491439.wasm",import.meta.url).href;return fetch(o)})();Y.loadModule(cr);Y.linkVariables(!0);const{constructor:ur}=ir,{createPartialOutput:mr,Input:yr,kernel:tt}=ur;function br(o,c,a,r,n={},f={}){const O=[];for(const[y]of tt.inputImages)O.push(y);const A=[];for(const[y]of tt.outputImages)A.push(y);if(Array.isArray(n)){const y=n;n={};for(const[b,S]of O.entries())n[S]=y[b]}const u=new yr(void 0),C=[];let U;for(const y of O){let b=n[y];if(b||(O.length===1&&["data","width","height"].every(S=>!!n[S])?b=n:C.push(y)),u[y]=b,U){if(b.colorSpace!==U)throw new Error(`Input images must all use the same color space: ${U}`)}else U=b.colorSpace}if(C.length>0)throw new Error(`Missing input image${C.length>1?"s":""}: ${C.join(", ")}`);const Z=mr(o,c,a,r,u,f),Vt=y=>{const b={};for(const S of A){const{data:{typedArray:_},width:It,height:Me}=y[S];let D;if(typeof ImageData=="function"){const Te=new Uint8ClampedArray(_.buffer,_.byteOffset,_.byteLength);D=new ImageData(Te,It,r,{colorSpace:U})}else D={data:_,width:It,height:Me};if(A.length===1)return D;b[S]=D}return b};return Z[Symbol.toStringTag]==="Promise"?Z.then(Vt):Vt(Z)}function lr(){const o={};for(let[c,a]of tt){if(c==="parameters"){const r={};for(const[n,f]of a){const O=r[n]={};for(let[A,u]of f)typeof u=="object"?"string"in u?u=u.string:u=Fe(u):typeof u=="function"&&(u=gr(u.name)),O[A]=u}a=r}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());o[c]=a}return o}function Fe(o){const c=[];for(let[a,r]of o)typeof r=="object"&&(r=Fe(r)),c[a]=r;return c}function gr(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[c,a,...r]=o.data;pr(c,r).then(([n,f])=>{postMessage([c,a,n],{transfer:f})}).catch(n=>{postMessage(["error",a,n])})};async function pr(o,c){switch(o){case"getKernelInfo":return[lr(...c)];case"createPartialImageData":const r=await br(...c),n=[];if("data"in r&&"width"in r&&"height"in r)n.push(r.data.buffer);else for(const f of Object.entries(r))n.push(r.data.buffer);return[r,n];default:throw new Error(`Unknown function: ${o}`)}}
