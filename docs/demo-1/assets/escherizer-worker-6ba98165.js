import{u as yt,a as lt,b as ct,d as bt,c as pt,e as ft,f as dt,g as St,h as ht,i as gt,j as zt,k as wt,l as At,m as Ut,o as Rt,n as qt,p as Ot,q as jt}from"./index-d64bc850.js";yt();lt();ct();bt();pt();ft();dt();St();ht();gt();zt();wt();At();Ut();Rt();qt();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},c={},de={},Se={},J={},he={},ge={},N={},f={},d={},ze={},we={},Q={},y={},p={},s={},r={},I={},w={},Ae={},W={},Ue={},X={},Re={},qe={},Y={},Oe={},Z={},je={},ee={},Pe={},te={},Ve={},re={},j={},P={},h={},Ce={},se={},x={},v={},A={},ke={},ae={},Ie={},ne={},E={},U={},K={},R={},xe={},ie={},ve={},ue={},Ee={},oe={},D={},F={},q={},Ke={},me={},De={},ye={},Fe={},le={},M={},O={},Me={},ce={},_e={},be={},Qe={},V={},Te={},$e={},l={},Be={},k={},Le={},pe={},_={},Ge={},He={},fe={},T={},$={},We={},Xe={},Ye={},Ze={},et={},tt={},rt={};Object.assign(c,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:5});Object.assign(de,{...t,type:1,name:"[21:0]u8",length:21,byteSize:22,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:4});Object.assign(Se,{...t,type:11,name:"*const [21:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:de}],methods:[],template:null},slot:3});Object.assign(J,{...t,type:11,name:"*const *const [21:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Se}],methods:[],template:null},slot:2});Object.assign(he,{...t,type:1,name:"[16:0]u8",length:16,byteSize:17,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:8});Object.assign(ge,{...t,type:11,name:"*const [16:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:he}],methods:[],template:null},slot:7});Object.assign(N,{...t,type:11,name:"*const *const [16:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ge}],methods:[],template:null},slot:6});Object.assign(f,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:f}],methods:[],template:null},slot:10});Object.assign(d,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:f}],methods:[],template:null},slot:9});Object.assign(ze,{...t,type:1,name:"[42:0]u8",length:42,byteSize:43,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:13});Object.assign(we,{...t,type:11,name:"*const [42:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ze}],methods:[],template:null},slot:12});Object.assign(Q,{...t,type:11,name:"*const *const [42:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:we}],methods:[],template:null},slot:11});Object.assign(y,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:33});Object.assign(p,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:32});Object.assign(s,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:s}],methods:[],template:null},slot:78});Object.assign(r,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:s}],methods:[],template:null},slot:77});const Pt=new Uint8Array,Vt=new Uint8Array([192,247,15,0]),Ct=new Uint8Array([0,0,0,0,0,0,0,0]),kt=new Uint8Array([232,247,15,0]),It=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(I,{...t,type:2,name:"Struct0033",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Pt},slots:{0:{structure:r,memory:{array:Vt},slots:{0:{structure:s,memory:{array:Ct}}}},1:{structure:r,memory:{array:kt},slots:{0:{structure:s,memory:{array:It}}}}}}},slot:60});Object.assign(w,{...t,type:11,name:"Struct0024",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:I}],methods:[],template:null},slot:59});const xt=new Uint8Array,vt=new Uint8Array([56,252,15,0]),Et=new Uint8Array([0,0,0,0,0,0,176,64]),Kt=new Uint8Array([80,252,15,0]),Dt=new Uint8Array([0,0,0,0,0,0,176,64]);Object.assign(Ae,{...t,type:2,name:"Struct0034",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:xt},slots:{0:{structure:r,memory:{array:vt},slots:{0:{structure:s,memory:{array:Et}}}},1:{structure:r,memory:{array:Kt},slots:{0:{structure:s,memory:{array:Dt}}}}}}},slot:62});Object.assign(W,{...t,type:11,name:"Struct0025",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ae}],methods:[],template:null},slot:61});const Ft=new Uint8Array,Mt=new Uint8Array([56,252,15,0]),_t=new Uint8Array([0,0,0,0,0,64,127,64]),Tt=new Uint8Array([80,252,15,0]),$t=new Uint8Array([0,0,0,0,0,64,127,64]);Object.assign(Ue,{...t,type:2,name:"Struct0035",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Ft},slots:{0:{structure:r,memory:{array:Mt},slots:{0:{structure:s,memory:{array:_t}}}},1:{structure:r,memory:{array:Tt},slots:{0:{structure:s,memory:{array:$t}}}}}}},slot:64});Object.assign(X,{...t,type:11,name:"Struct0026",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ue}],methods:[],template:null},slot:63});Object.assign(Re,{...t,type:1,name:"[19:0]u8",length:19,byteSize:20,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:67});Object.assign(qe,{...t,type:11,name:"*const [19:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Re}],methods:[],template:null},slot:66});Object.assign(Y,{...t,type:11,name:"*const *const [19:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:qe}],methods:[],template:null},slot:65});const Bt=new Uint8Array,Lt=new Uint8Array([170,170,170,170]),Gt=new Uint8Array,Ht=new Uint8Array([170,170,170,170]),Jt=new Uint8Array,Nt=new Uint8Array([170,170,170,170]),Qt=new Uint8Array,Wt=new Uint8Array([32,251,15,0]),Xt=new Uint8Array([77,35,16,0]),Yt=new Uint8Array([105,109,97,103,101,32,119,105,100,116,104,47,45,104,101,105,103,104,116,0]);Object.assign(Oe,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:p},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:w},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:W},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:X},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:Y}],methods:[],template:{memory:{array:Bt},slots:{0:{structure:w,memory:{array:Lt},slots:{0:{structure:I,memory:{array:Gt}}}},1:{structure:W,memory:{array:Ht},slots:{0:{structure:Ae,memory:{array:Jt}}}},2:{structure:X,memory:{array:Nt},slots:{0:{structure:Ue,memory:{array:Qt}}}},3:{structure:Y,memory:{array:Wt},slots:{0:{structure:qe,memory:{array:Xt},slots:{0:{structure:Re,memory:{array:Yt}}}}}}}}},slot:39});Object.assign(Z,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Oe}],methods:[],template:null},slot:38});const Zt=new Uint8Array,er=new Uint8Array([56,252,15,0]),tr=new Uint8Array([0,0,0,0,0,64,143,192]),rr=new Uint8Array([80,252,15,0]),sr=new Uint8Array([0,0,0,0,0,64,143,192]);Object.assign(je,{...t,type:2,name:"Struct0036",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Zt},slots:{0:{structure:r,memory:{array:er},slots:{0:{structure:s,memory:{array:tr}}}},1:{structure:r,memory:{array:rr},slots:{0:{structure:s,memory:{array:sr}}}}}}},slot:69});Object.assign(ee,{...t,type:11,name:"Struct0027",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:je}],methods:[],template:null},slot:68});const ar=new Uint8Array,nr=new Uint8Array([56,252,15,0]),ir=new Uint8Array([0,0,0,0,0,64,143,64]),ur=new Uint8Array([80,252,15,0]),or=new Uint8Array([0,0,0,0,0,64,143,64]);Object.assign(Pe,{...t,type:2,name:"Struct0037",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:ar},slots:{0:{structure:r,memory:{array:nr},slots:{0:{structure:s,memory:{array:ir}}}},1:{structure:r,memory:{array:ur},slots:{0:{structure:s,memory:{array:or}}}}}}},slot:71});Object.assign(te,{...t,type:11,name:"Struct0028",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Pe}],methods:[],template:null},slot:70});const mr=new Uint8Array,yr=new Uint8Array([56,252,15,0]),lr=new Uint8Array([0,0,0,0,0,0,73,64]),cr=new Uint8Array([80,252,15,0]),br=new Uint8Array([0,0,0,0,0,192,98,64]);Object.assign(Ve,{...t,type:2,name:"Struct0038",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:mr},slots:{0:{structure:r,memory:{array:yr},slots:{0:{structure:s,memory:{array:lr}}}},1:{structure:r,memory:{array:cr},slots:{0:{structure:s,memory:{array:br}}}}}}},slot:73});Object.assign(re,{...t,type:11,name:"Struct0029",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ve}],methods:[],template:null},slot:72});Object.assign(j,{...t,type:1,name:"[13:0]u8",length:13,byteSize:14,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:76});Object.assign(P,{...t,type:11,name:"*const [13:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:j}],methods:[],template:null},slot:75});Object.assign(h,{...t,type:11,name:"*const *const [13:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:P}],methods:[],template:null},slot:74});const pr=new Uint8Array,fr=new Uint8Array([170,170,170,170]),dr=new Uint8Array,Sr=new Uint8Array([170,170,170,170]),hr=new Uint8Array,gr=new Uint8Array([170,170,170,170]),zr=new Uint8Array,wr=new Uint8Array([28,251,15,0]),Ar=new Uint8Array([63,35,16,0]),Ur=new Uint8Array([115,101,116,117,112,32,114,97,100,105,97,110,115,0]);Object.assign(Ce,{...t,type:2,name:"Struct0016",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:p},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:ee},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:te},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:re},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:h}],methods:[],template:{memory:{array:pr},slots:{0:{structure:ee,memory:{array:fr},slots:{0:{structure:je,memory:{array:dr}}}},1:{structure:te,memory:{array:Sr},slots:{0:{structure:Pe,memory:{array:hr}}}},2:{structure:re,memory:{array:gr},slots:{0:{structure:Ve,memory:{array:zr}}}},3:{structure:h,memory:{array:wr},slots:{0:{structure:P,memory:{array:Ar},slots:{0:{structure:j,memory:{array:Ur}}}}}}}}},slot:41});Object.assign(se,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ce}],methods:[],template:null},slot:40});Object.assign(x,{...t,type:1,name:"[14:0]u8",length:14,byteSize:15,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:81});Object.assign(v,{...t,type:11,name:"*const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:x}],methods:[],template:null},slot:80});Object.assign(A,{...t,type:11,name:"*const *const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:v}],methods:[],template:null},slot:79});const Rr=new Uint8Array,qr=new Uint8Array([56,252,15,0]),Or=new Uint8Array([0,0,0,0,0,0,0,0]),jr=new Uint8Array([80,252,15,0]),Pr=new Uint8Array([0,0,0,0,0,128,118,64]),Vr=new Uint8Array([192,249,15,0]),Cr=new Uint8Array([0,0,0,0,0,0,0,0]),kr=new Uint8Array([168,250,15,0]),Ir=new Uint8Array([48,35,16,0]),xr=new Uint8Array([115,101,116,117,112,32,114,111,116,97,116,105,111,110,0]);Object.assign(ke,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:A}],methods:[],template:{memory:{array:Rr},slots:{0:{structure:r,memory:{array:qr},slots:{0:{structure:s,memory:{array:Or}}}},1:{structure:r,memory:{array:jr},slots:{0:{structure:s,memory:{array:Pr}}}},2:{structure:r,memory:{array:Vr},slots:{0:{structure:s,memory:{array:Cr}}}},3:{structure:A,memory:{array:kr},slots:{0:{structure:v,memory:{array:Ir},slots:{0:{structure:x,memory:{array:xr}}}}}}}}},slot:43});Object.assign(ae,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ke}],methods:[],template:null},slot:42});const vr=new Uint8Array,Er=new Uint8Array([56,252,15,0]),Kr=new Uint8Array([0,0,0,0,0,0,240,63]),Dr=new Uint8Array([80,252,15,0]),Fr=new Uint8Array([0,0,0,0,0,0,89,64]),Mr=new Uint8Array([192,249,15,0]),_r=new Uint8Array([0,0,0,0,0,0,240,63]),Tr=new Uint8Array([168,250,15,0]),$r=new Uint8Array([34,35,16,0]),Br=new Uint8Array([115,101,116,117,112,32,122,111,111,109,105,110,103,0]);Object.assign(Ie,{...t,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:h}],methods:[],template:{memory:{array:vr},slots:{0:{structure:r,memory:{array:Er},slots:{0:{structure:s,memory:{array:Kr}}}},1:{structure:r,memory:{array:Dr},slots:{0:{structure:s,memory:{array:Fr}}}},2:{structure:r,memory:{array:Mr},slots:{0:{structure:s,memory:{array:_r}}}},3:{structure:h,memory:{array:Tr},slots:{0:{structure:P,memory:{array:$r},slots:{0:{structure:j,memory:{array:Br}}}}}}}}},slot:45});Object.assign(ne,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ie}],methods:[],template:null},slot:44});const Lr=new Uint8Array,Gr=new Uint8Array([192,247,15,0]),Hr=new Uint8Array([0,0,0,0,0,104,160,192]),Jr=new Uint8Array([232,247,15,0]),Nr=new Uint8Array([0,0,0,0,0,104,160,192]);Object.assign(E,{...t,type:2,name:"Struct0039",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Lr},slots:{0:{structure:r,memory:{array:Gr},slots:{0:{structure:s,memory:{array:Hr}}}},1:{structure:r,memory:{array:Jr},slots:{0:{structure:s,memory:{array:Nr}}}}}}},slot:83});Object.assign(U,{...t,type:11,name:"Struct0030",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:E}],methods:[],template:null},slot:82});const Qr=new Uint8Array,Wr=new Uint8Array([192,247,15,0]),Xr=new Uint8Array([0,0,0,0,0,104,160,64]),Yr=new Uint8Array([232,247,15,0]),Zr=new Uint8Array([0,0,0,0,0,104,160,64]);Object.assign(K,{...t,type:2,name:"Struct0040",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Qr},slots:{0:{structure:r,memory:{array:Wr},slots:{0:{structure:s,memory:{array:Xr}}}},1:{structure:r,memory:{array:Yr},slots:{0:{structure:s,memory:{array:Zr}}}}}}},slot:85});Object.assign(R,{...t,type:11,name:"Struct0031",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:K}],methods:[],template:null},slot:84});const es=new Uint8Array,ts=new Uint8Array([170,170,170,170]),rs=new Uint8Array,ss=new Uint8Array([170,170,170,170]),as=new Uint8Array,ns=new Uint8Array([170,170,170,170]),is=new Uint8Array,us=new Uint8Array([56,251,15,0]),os=new Uint8Array([19,35,16,0]),ms=new Uint8Array([115,101,116,115,32,120,121,46,99,101,110,116,101,114,0]);Object.assign(xe,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:p},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:U},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:R},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:w},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:A}],methods:[],template:{memory:{array:es},slots:{0:{structure:U,memory:{array:ts},slots:{0:{structure:E,memory:{array:rs}}}},1:{structure:R,memory:{array:ss},slots:{0:{structure:K,memory:{array:as}}}},2:{structure:w,memory:{array:ns},slots:{0:{structure:I,memory:{array:is}}}},3:{structure:A,memory:{array:us},slots:{0:{structure:v,memory:{array:os},slots:{0:{structure:x,memory:{array:ms}}}}}}}}},slot:47});Object.assign(ie,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:xe}],methods:[],template:null},slot:46});const ys=new Uint8Array,ls=new Uint8Array([56,252,15,0]),cs=new Uint8Array([0,0,0,0,0,0,100,64]),bs=new Uint8Array([80,252,15,0]),ps=new Uint8Array([0,0,0,0,0,0,100,64]);Object.assign(ve,{...t,type:2,name:"Struct0041",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:ys},slots:{0:{structure:r,memory:{array:ls},slots:{0:{structure:s,memory:{array:cs}}}},1:{structure:r,memory:{array:bs},slots:{0:{structure:s,memory:{array:ps}}}}}}},slot:87});Object.assign(ue,{...t,type:11,name:"Struct0032",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ve}],methods:[],template:null},slot:86});const fs=new Uint8Array,ds=new Uint8Array([170,170,170,170]),Ss=new Uint8Array,hs=new Uint8Array([170,170,170,170]),gs=new Uint8Array,zs=new Uint8Array([170,170,170,170]),ws=new Uint8Array,As=new Uint8Array([216,250,15,0]),Us=new Uint8Array([5,35,16,0]),Rs=new Uint8Array([115,101,116,115,32,120,121,46,114,97,110,103,101,0]);Object.assign(Ee,{...t,type:2,name:"Struct0020",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:p},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:U},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:R},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:ue},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:h}],methods:[],template:{memory:{array:fs},slots:{0:{structure:U,memory:{array:ds},slots:{0:{structure:E,memory:{array:Ss}}}},1:{structure:R,memory:{array:hs},slots:{0:{structure:K,memory:{array:gs}}}},2:{structure:ue,memory:{array:zs},slots:{0:{structure:ve,memory:{array:ws}}}},3:{structure:h,memory:{array:As},slots:{0:{structure:P,memory:{array:Us},slots:{0:{structure:j,memory:{array:Rs}}}}}}}}},slot:49});Object.assign(oe,{...t,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ee}],methods:[],template:null},slot:48});Object.assign(D,{...t,type:1,name:"[23:0]u8",length:23,byteSize:24,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:90});Object.assign(F,{...t,type:11,name:"*const [23:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:D}],methods:[],template:null},slot:89});Object.assign(q,{...t,type:11,name:"*const *const [23:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[],template:null},slot:88});const qs=new Uint8Array,Os=new Uint8Array([56,252,15,0]),js=new Uint8Array([0,0,0,0,0,104,144,192]),Ps=new Uint8Array([80,252,15,0]),Vs=new Uint8Array([0,0,0,0,0,104,144,64]),Cs=new Uint8Array([192,249,15,0]),ks=new Uint8Array([0,0,0,0,0,0,100,64]),Is=new Uint8Array([168,250,15,0]),xs=new Uint8Array([237,34,16,0]),vs=new Uint8Array([115,101,116,115,32,105,110,105,116,105,97,108,32,120,46,112,111,115,105,116,105,111,110,0]);Object.assign(Ke,{...t,type:2,name:"Struct0021",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:q}],methods:[],template:{memory:{array:qs},slots:{0:{structure:r,memory:{array:Os},slots:{0:{structure:s,memory:{array:js}}}},1:{structure:r,memory:{array:Ps},slots:{0:{structure:s,memory:{array:Vs}}}},2:{structure:r,memory:{array:Cs},slots:{0:{structure:s,memory:{array:ks}}}},3:{structure:q,memory:{array:Is},slots:{0:{structure:F,memory:{array:xs},slots:{0:{structure:D,memory:{array:vs}}}}}}}}},slot:51});Object.assign(me,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ke}],methods:[],template:null},slot:50});const Es=new Uint8Array,Ks=new Uint8Array([56,252,15,0]),Ds=new Uint8Array([0,0,0,0,0,104,144,192]),Fs=new Uint8Array([80,252,15,0]),Ms=new Uint8Array([0,0,0,0,0,104,144,64]),_s=new Uint8Array([192,249,15,0]),Ts=new Uint8Array([0,0,0,0,0,0,100,64]),$s=new Uint8Array([168,250,15,0]),Bs=new Uint8Array([213,34,16,0]),Ls=new Uint8Array([115,101,116,115,32,105,110,105,116,105,97,108,32,121,46,112,111,115,105,116,105,111,110,0]);Object.assign(De,{...t,type:2,name:"Struct0022",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:q}],methods:[],template:{memory:{array:Es},slots:{0:{structure:r,memory:{array:Ks},slots:{0:{structure:s,memory:{array:Ds}}}},1:{structure:r,memory:{array:Fs},slots:{0:{structure:s,memory:{array:Ms}}}},2:{structure:r,memory:{array:_s},slots:{0:{structure:s,memory:{array:Ts}}}},3:{structure:q,memory:{array:$s},slots:{0:{structure:F,memory:{array:Bs},slots:{0:{structure:D,memory:{array:Ls}}}}}}}}},slot:53});Object.assign(ye,{...t,type:11,name:"Struct0013",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:De}],methods:[],template:null},slot:52});const Gs=new Uint8Array,Hs=new Uint8Array([170,170,170,170]),Js=new Uint8Array,Ns=new Uint8Array([170,170,170,170]),Qs=new Uint8Array,Ws=new Uint8Array([170,170,170,170]),Xs=new Uint8Array,Ys=new Uint8Array([170,170,170,170]),Zs=new Uint8Array,ea=new Uint8Array([170,170,170,170]),ta=new Uint8Array,ra=new Uint8Array([170,170,170,170]),sa=new Uint8Array,aa=new Uint8Array([170,170,170,170]),na=new Uint8Array,ia=new Uint8Array([170,170,170,170]),ua=new Uint8Array;Object.assign(Fe,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"size",structure:Z},{...e,type:8,isRequired:!1,slot:1,name:"radians",structure:se},{...e,type:8,isRequired:!1,slot:2,name:"rotate",structure:ae},{...e,type:8,isRequired:!1,slot:3,name:"zoom",structure:ne},{...e,type:8,isRequired:!1,slot:4,name:"center",structure:ie},{...e,type:8,isRequired:!1,slot:5,name:"range",structure:oe},{...e,type:8,isRequired:!1,slot:6,name:"xPos",structure:me},{...e,type:8,isRequired:!1,slot:7,name:"yPos",structure:ye}],methods:[],template:{memory:{array:Gs},slots:{0:{structure:Z,memory:{array:Hs},slots:{0:{structure:Oe,memory:{array:Js}}}},1:{structure:se,memory:{array:Ns},slots:{0:{structure:Ce,memory:{array:Qs}}}},2:{structure:ae,memory:{array:Ws},slots:{0:{structure:ke,memory:{array:Xs}}}},3:{structure:ne,memory:{array:Ys},slots:{0:{structure:Ie,memory:{array:Zs}}}},4:{structure:ie,memory:{array:ea},slots:{0:{structure:xe,memory:{array:ta}}}},5:{structure:oe,memory:{array:ra},slots:{0:{structure:Ee,memory:{array:sa}}}},6:{structure:me,memory:{array:aa},slots:{0:{structure:Ke,memory:{array:na}}}},7:{structure:ye,memory:{array:ia},slots:{0:{structure:De,memory:{array:ua}}}}}}},slot:15});Object.assign(le,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Fe}],methods:[],template:null},slot:14});const oa=new Uint8Array,ma=new Uint8Array([48,252,15,0]),ya=new Uint8Array([4,0,0,0]);Object.assign(M,{...t,type:2,name:"Struct0023",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:d}],methods:[],template:{memory:{array:oa},slots:{0:{structure:d,memory:{array:ma},slots:{0:{structure:f,memory:{array:ya}}}}}}},slot:55});Object.assign(O,{...t,type:11,name:"Struct0014",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[],template:null},slot:54});const la=new Uint8Array,ca=new Uint8Array([170,170,170,170]),ba=new Uint8Array;Object.assign(Me,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:O}],methods:[],template:{memory:{array:la},slots:{0:{structure:O,memory:{array:ca},slots:{0:{structure:M,memory:{array:ba}}}}}}},slot:17});Object.assign(ce,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Me}],methods:[],template:null},slot:16});const pa=new Uint8Array,fa=new Uint8Array([170,170,170,170]),da=new Uint8Array;Object.assign(_e,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:O}],methods:[],template:{memory:{array:pa},slots:{0:{structure:O,memory:{array:fa},slots:{0:{structure:M,memory:{array:da}}}}}}},slot:19});Object.assign(be,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:_e}],methods:[],template:null},slot:18});const Sa=new Uint8Array,ha=new Uint8Array,ga=new Uint8Array([84,39,16,0]),za=new Uint8Array([251,38,16,0]),wa=new Uint8Array([101,115,99,104,101,114,47,45,100,114,111,115,116,101,32,101,102,102,101,99,116,0]),Aa=new Uint8Array([80,39,16,0]),Ua=new Uint8Array([223,38,16,0]),Ra=new Uint8Array([70,114,97,110,107,32,82,101,105,116,98,101,114,103,101,114,0]),qa=new Uint8Array([76,39,16,0]),Oa=new Uint8Array([1,0,0,0]),ja=new Uint8Array([72,39,16,0]),Pa=new Uint8Array([163,38,16,0]),Va=new Uint8Array([101,115,99,104,101,114,105,122,101,114,32,46,46,46,100,105,115,115,101,99,116,101,100,32,102,111,114,32,117,115,101,32,119,105,116,104,32,102,108,97,115,104,0]),Ca=new Uint8Array([170,170,170,170]),ka=new Uint8Array,Ia=new Uint8Array([170,170,170,170]),xa=new Uint8Array,va=new Uint8Array([170,170,170,170]),Ea=new Uint8Array;Object.assign(Qe,{...t,type:2,name:"escherizer.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Sa}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:J},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:N},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:d},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:Q},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:le},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:ce},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:be}],methods:[],template:{memory:{array:ha},slots:{0:{structure:J,memory:{array:ga},slots:{0:{structure:Se,memory:{array:za},slots:{0:{structure:de,memory:{array:wa}}}}}},1:{structure:N,memory:{array:Aa},slots:{0:{structure:ge,memory:{array:Ua},slots:{0:{structure:he,memory:{array:Ra}}}}}},2:{structure:d,memory:{array:qa},slots:{0:{structure:f,memory:{array:Oa}}}},3:{structure:Q,memory:{array:ja},slots:{0:{structure:we,memory:{array:Pa},slots:{0:{structure:ze,memory:{array:Va}}}}}},4:{structure:le,memory:{array:Ca},slots:{0:{structure:Fe,memory:{array:ka}}}},5:{structure:ce,memory:{array:Ia},slots:{0:{structure:Me,memory:{array:xa}}}},6:{structure:be,memory:{array:va},slots:{0:{structure:_e,memory:{array:Ea}}}}}}},slot:1});Object.assign(V,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:24});Object.assign(Te,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:V}],methods:[],template:null},slot:23});Object.assign($e,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Te}],methods:[],template:null},slot:22});Object.assign(l,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:l}],methods:[],template:null},slot:25});const Ka=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(Be,{...t,type:9,name:"escherizer.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:f},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:f}],methods:[],template:{memory:{array:Ka}}},slot:26});Object.assign(k,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:k}],methods:[],template:null},slot:27});Object.assign(Le,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:56});const Da=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Fa=new Uint8Array,Ma=new Uint8Array([120,38,16,0]),_a=new Uint8Array([4,0,0,0]);Object.assign(pe,{...t,type:2,name:"escherizer.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:$e},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Be},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:k}],methods:[],template:{memory:{array:Da}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:V},{...e,type:7,isRequired:!1,name:"FPixel",structure:Le},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:d}],methods:[],template:{memory:{array:Fa},slots:{0:{structure:d,memory:{array:Ma},slots:{0:{structure:f,memory:{array:_a}}}}}}},slot:21});const Ta=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),$a=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),it=new Uint8Array([0,0,0,0,0,0,0,0]),Ba=new Uint8Array;Object.assign(_,{...t,type:2,name:"escherizer.KernelInput(u8,escherizer.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:pe}],methods:[],template:{memory:{array:Ta},slots:{0:{structure:pe,memory:{array:$a},slots:{0:{structure:$e,memory:{array:it},address:1047200,slots:{0:{structure:Te,memory:{array:Ba},address:0}}}}}}}},slot:20});Object.assign(Ge,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:V}],methods:[],template:null},slot:23});Object.assign(He,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Ge}],methods:[],template:null},slot:30});const La=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ga=new Uint8Array,Ha=new Uint8Array([120,38,16,0]),Ja=new Uint8Array([4,0,0,0]);Object.assign(fe,{...t,type:2,name:"escherizer.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:He},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Be},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:k}],methods:[],template:{memory:{array:La}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:V},{...e,type:7,isRequired:!1,name:"FPixel",structure:Le},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:d}],methods:[],template:{memory:{array:Ga},slots:{0:{structure:d,memory:{array:Ha},slots:{0:{structure:f,memory:{array:Ja}}}}}}},slot:29});const Na=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Qa=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Wa=new Uint8Array;Object.assign(T,{...t,type:2,name:"escherizer.KernelOutput(u8,escherizer.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:fe}],methods:[],template:{memory:{array:Na},slots:{0:{structure:fe,memory:{array:Qa},slots:{0:{structure:He,memory:{array:it},address:1047200,slots:{0:{structure:Ge,memory:{array:Wa},address:0}}}}}}}},slot:28});const Xa=new Uint8Array([0,0,250,67,0,0,250,67,0,0,72,66,0,0,22,67,0,0,0,0,0,0,0,0,0,0,32,67,0,0,32,67,0,0,0,0,0,0,128,63,0,0,32,67,0,0,32,67]);Object.assign($,{...t,type:2,name:"escherizer.KernelParameters(escherizer.kernel)",length:1,byteSize:48,align:3,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"size",structure:p},{...e,type:6,isRequired:!1,bitOffset:64,bitSize:64,byteSize:8,slot:1,name:"radians",structure:p},{...e,type:4,isRequired:!1,bitOffset:256,bitSize:32,byteSize:4,slot:2,name:"rotate",structure:y},{...e,type:4,isRequired:!1,bitOffset:288,bitSize:32,byteSize:4,slot:3,name:"zoom",structure:y},{...e,type:6,isRequired:!1,bitOffset:128,bitSize:64,byteSize:8,slot:4,name:"center",structure:p},{...e,type:6,isRequired:!1,bitOffset:192,bitSize:64,byteSize:8,slot:5,name:"range",structure:p},{...e,type:4,isRequired:!1,bitOffset:320,bitSize:32,byteSize:4,slot:6,name:"xPos",structure:y},{...e,type:4,isRequired:!1,bitOffset:352,bitSize:32,byteSize:4,slot:7,name:"yPos",structure:y}],methods:[],template:{memory:{array:Xa}}},slot:31});Object.assign(We,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(escherizer.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:57});Object.assign(Xe,{...t,type:7,name:"ErrorSet0000!escherizer.KernelOutput(u8,escherizer.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:T},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:We}],methods:[],template:null},slot:36});Object.assign(Ye,{...t,type:3,name:"createOutput",length:1,byteSize:112,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:0,name:"0",structure:l},{...e,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:1,name:"1",structure:l},{...e,type:6,bitOffset:448,bitSize:192,byteSize:24,slot:2,name:"2",structure:_},{...e,type:6,bitOffset:0,bitSize:384,byteSize:48,slot:3,name:"3",structure:$},{...e,type:6,bitOffset:640,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Xe}],methods:[],template:null},slot:34});Object.assign(Ze,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(escherizer.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:58});Object.assign(et,{...t,type:7,name:"ErrorSet0001!escherizer.KernelOutput(u8,escherizer.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:T},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Ze}],methods:[],template:null},slot:37});Object.assign(tt,{...t,type:3,name:"createPartialOutput",length:1,byteSize:120,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:0,name:"0",structure:l},{...e,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:1,name:"1",structure:l},{...e,type:3,bitOffset:448,bitSize:32,byteSize:4,slot:2,name:"2",structure:l},{...e,type:3,bitOffset:480,bitSize:32,byteSize:4,slot:3,name:"3",structure:l},{...e,type:6,bitOffset:512,bitSize:192,byteSize:24,slot:4,name:"4",structure:_},{...e,type:6,bitOffset:0,bitSize:384,byteSize:48,slot:5,name:"5",structure:$},{...e,type:6,bitOffset:704,bitSize:224,byteSize:28,slot:6,name:"retval",structure:et}],methods:[],template:null},slot:35});const Ya=new Uint8Array,Za={argStruct:Ye,thunk:7,name:"createOutput"},en={argStruct:tt,thunk:1,name:"createPartialOutput"};Object.assign(rt,{...t,type:2,name:"escherizer",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Ya}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:Qe},{...e,type:7,isRequired:!1,name:"Input",structure:_},{...e,type:7,isRequired:!1,name:"Output",structure:T},{...e,type:7,isRequired:!1,name:"Parameters",structure:$}],methods:[Za,en],template:null},slot:0});const tn=[c,de,Se,J,he,ge,N,f,d,ze,we,Q,y,p,s,r,I,w,Ae,W,Ue,X,Re,qe,Y,Oe,Z,je,ee,Pe,te,Ve,re,j,P,h,Ce,se,x,v,A,ke,ae,Ie,ne,E,U,K,R,xe,ie,ve,ue,Ee,oe,D,F,q,Ke,me,De,ye,Fe,le,M,O,Me,ce,_e,be,Qe,V,Te,$e,l,Be,k,Le,pe,_,Ge,He,fe,T,$,We,Xe,Ye,Ze,et,tt,rt],rn=Ot(tn),sn=rt.constructor,an=(async()=>{const u=new URL("escherizer-1200d096.wasm",import.meta.url).href;return fetch(u)})();jt(an,{...rn,writeBack:!0});const{createOutput:bn,createPartialOutput:nn,kernel:Ne,Input:un,Output:pn,Parameters:fn}=sn;function on(u,m,n,a,i={},g={}){if(Array.isArray(i)){const S=i;i={};for(const[b,z]of Object.keys(Ne.inputImages).entries())i[z]=S[b]}const B=new un(void 0),L=Object.keys(Ne.inputImages),o=[];let C;for(const S of L){let b=i[S];if(b||(L.length===1&&["data","width","height"].every(z=>!!i[z])?b=i:o.push(S)),B[S]=b,C){if(b.colorSpace!==C)throw new Error(`Input images must all use the same color space: ${C}`)}else C=b.colorSpace}if(o.length>0)throw new Error(`Missing input image${o.length>1?"s":""}: ${o.join(", ")}`);const Je=nn(u,m,n,a,B,g),st=S=>{const b=Object.keys(S),z={};for(const at of b){const{data:{typedArray:G},width:nt,height:ot}=S[at];let H;if(typeof ImageData=="function"){const mt=new Uint8ClampedArray(G.buffer,G.byteOffset,G.byteLength);H=new ImageData(mt,nt,a,{colorSpace:C})}else H={data:G,width:nt,height:ot};if(b.length===1)return H;z[at]=H}return z};return Je[Symbol.toStringTag]==="Promise"?Je.then(st):st(Je)}function mn(){const u={};for(let[m,n]of Object.entries(Ne)){if(m==="parameters"){const a={};for(const[i,g]of Object.entries(n)){const B=a[i]={};for(let[L,o]of Object.entries(g))typeof o=="object"?"string"in o?o=o.string:o=ut(o):typeof o=="function"&&(o=yn(o.name)),B[L]=o}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());u[m]=n}return u}function ut(u){const m=[];for(let[n,a]of Object.entries(u))typeof a=="object"&&(a=ut(a)),m[n]=a;return m}function yn(u){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[u]}onmessage=u=>{const[m,n,...a]=u.data;ln(m,a).then(([i,g])=>{postMessage([m,n,i],{transfer:g})}).catch(i=>{postMessage(["error",n,i])})};async function ln(u,m){switch(u){case"getKernelInfo":return[mn(...m)];case"createPartialImageData":const a=await on(...m),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const g of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${u}`)}}
