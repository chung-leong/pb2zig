import{u as Le,a as We,b as Ge,d as Je,c as Ne,e as Qe,f as Xe,g as Ye,h as Ze,i as et,j as tt,k as st,l as rt,m as at,o as nt,n as it,p as ut,q as ot}from"./index-d64bc850.js";Le();We();Ge();Je();Ne();Qe();Xe();Ye();Ze();et();tt();st();rt();at();nt();it();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},c={},R={},q={},g={},te={},se={},D={},b={},p={},f={},z={},a={},s={},re={},F={},ae={},M={},P={},w={},ne={},ie={},_={},ue={},T={},oe={},$={},me={},B={},le={},ye={},H={},ce={},L={},be={},pe={},W={},fe={},G={},de={},Se={},J={},he={},N={},ge={},Q={},V={},O={},ze={},X={},we={},Y={},Ce={},A={},Oe={},Ae={},l={},Ue={},j={},Re={},Z={},C={},qe={},je={},ee={},k={},I={},ke={},Ie={},ve={},xe={},Ee={},Ke={},De={};Object.assign(c,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:5});Object.assign(R,{...t,type:1,name:"[15:0]u8",length:15,byteSize:16,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:4});Object.assign(q,{...t,type:11,name:"*const [15:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:R}],methods:[],template:null},slot:3});Object.assign(g,{...t,type:11,name:"*const *const [15:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:q}],methods:[],template:null},slot:2});Object.assign(te,{...t,type:1,name:"[16:0]u8",length:16,byteSize:17,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:8});Object.assign(se,{...t,type:11,name:"*const [16:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:7});Object.assign(D,{...t,type:11,name:"*const *const [16:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:6});Object.assign(b,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:10});Object.assign(p,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:b}],methods:[],template:null},slot:9});Object.assign(f,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:f}],methods:[],template:null},slot:30});Object.assign(z,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:f}],methods:[],template:null},slot:29});Object.assign(a,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:a}],methods:[],template:null},slot:65});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:a}],methods:[],template:null},slot:64});const mt=new Uint8Array,lt=new Uint8Array([96,251,15,0]),yt=new Uint8Array([0,0,0,0,0,0,240,63]),ct=new Uint8Array([0,252,15,0]),bt=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(re,{...t,type:2,name:"Struct0021",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:mt},slots:{0:{structure:s,memory:{array:lt},slots:{0:{structure:a,memory:{array:yt}}}},1:{structure:s,memory:{array:ct},slots:{0:{structure:a,memory:{array:bt}}}}}}},slot:49});Object.assign(F,{...t,type:11,name:"Struct0016",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:48});const pt=new Uint8Array,ft=new Uint8Array([96,251,15,0]),dt=new Uint8Array([0,0,0,0,0,64,159,64]),St=new Uint8Array([0,252,15,0]),ht=new Uint8Array([0,0,0,0,0,64,159,64]);Object.assign(ae,{...t,type:2,name:"Struct0022",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:pt},slots:{0:{structure:s,memory:{array:ft},slots:{0:{structure:a,memory:{array:dt}}}},1:{structure:s,memory:{array:St},slots:{0:{structure:a,memory:{array:ht}}}}}}},slot:51});Object.assign(M,{...t,type:11,name:"Struct0017",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:50});const gt=new Uint8Array,zt=new Uint8Array([128,248,15,0]),wt=new Uint8Array([0,0,0,0,0,160,118,64]),Ot=new Uint8Array([168,248,15,0]),At=new Uint8Array([0,0,0,0,0,160,118,64]);Object.assign(P,{...t,type:2,name:"Struct0023",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:gt},slots:{0:{structure:s,memory:{array:zt},slots:{0:{structure:a,memory:{array:wt}}}},1:{structure:s,memory:{array:Ot},slots:{0:{structure:a,memory:{array:At}}}}}}},slot:53});Object.assign(w,{...t,type:11,name:"Struct0018",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:P}],methods:[],template:null},slot:52});Object.assign(ne,{...t,type:1,name:"[29:0]u8",length:29,byteSize:30,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:56});Object.assign(ie,{...t,type:11,name:"*const [29:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:55});Object.assign(_,{...t,type:11,name:"*const *const [29:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:54});const Ut=new Uint8Array,Rt=new Uint8Array([170,170,170,170]),qt=new Uint8Array,jt=new Uint8Array([170,170,170,170]),Pt=new Uint8Array,Vt=new Uint8Array([170,170,170,170]),Ct=new Uint8Array,kt=new Uint8Array([20,251,15,0]),It=new Uint8Array([24,34,16,0]),vt=new Uint8Array([105,110,112,117,116,32,105,109,97,103,101,32,119,105,100,116,104,45,32,97,110,100,32,104,101,105,103,104,116,0]);Object.assign(ue,{...t,type:2,name:"Struct0011",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:z},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:F},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:M},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:w},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:_}],methods:[],template:{memory:{array:Ut},slots:{0:{structure:F,memory:{array:Rt},slots:{0:{structure:re,memory:{array:qt}}}},1:{structure:M,memory:{array:jt},slots:{0:{structure:ae,memory:{array:Pt}}}},2:{structure:w,memory:{array:Vt},slots:{0:{structure:P,memory:{array:Ct}}}},3:{structure:_,memory:{array:kt},slots:{0:{structure:ie,memory:{array:It},slots:{0:{structure:ne,memory:{array:vt}}}}}}}}},slot:36});Object.assign(T,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:35});const xt=new Uint8Array,Et=new Uint8Array([96,251,15,0]),Kt=new Uint8Array([0,0,0,0,0,0,89,64]),Dt=new Uint8Array([0,252,15,0]),Ft=new Uint8Array([0,0,0,0,0,0,89,64]);Object.assign(oe,{...t,type:2,name:"Struct0024",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:xt},slots:{0:{structure:s,memory:{array:Et},slots:{0:{structure:a,memory:{array:Kt}}}},1:{structure:s,memory:{array:Dt},slots:{0:{structure:a,memory:{array:Ft}}}}}}},slot:58});Object.assign($,{...t,type:11,name:"Struct0019",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:57});const Mt=new Uint8Array,_t=new Uint8Array([96,251,15,0]),Tt=new Uint8Array([0,0,0,0,0,64,127,64]),$t=new Uint8Array([0,252,15,0]),Bt=new Uint8Array([0,0,0,0,0,64,127,64]);Object.assign(me,{...t,type:2,name:"Struct0025",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Mt},slots:{0:{structure:s,memory:{array:_t},slots:{0:{structure:a,memory:{array:Tt}}}},1:{structure:s,memory:{array:$t},slots:{0:{structure:a,memory:{array:Bt}}}}}}},slot:60});Object.assign(B,{...t,type:11,name:"Struct0020",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:59});Object.assign(le,{...t,type:1,name:"[9:0]u8",length:9,byteSize:10,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:63});Object.assign(ye,{...t,type:11,name:"*const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:62});Object.assign(H,{...t,type:11,name:"*const *const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:61});const Ht=new Uint8Array,Lt=new Uint8Array([170,170,170,170]),Wt=new Uint8Array,Gt=new Uint8Array([170,170,170,170]),Jt=new Uint8Array,Nt=new Uint8Array([170,170,170,170]),Qt=new Uint8Array,Xt=new Uint8Array([20,251,15,0]),Yt=new Uint8Array([14,34,16,0]),Zt=new Uint8Array([114,101,103,105,111,110,40,115,41,0]);Object.assign(ce,{...t,type:2,name:"Struct0012",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:z},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:$},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:B},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:w},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:H}],methods:[],template:{memory:{array:Ht},slots:{0:{structure:$,memory:{array:Lt},slots:{0:{structure:oe,memory:{array:Wt}}}},1:{structure:B,memory:{array:Gt},slots:{0:{structure:me,memory:{array:Jt}}}},2:{structure:w,memory:{array:Nt},slots:{0:{structure:P,memory:{array:Qt}}}},3:{structure:H,memory:{array:Xt},slots:{0:{structure:ye,memory:{array:Yt},slots:{0:{structure:le,memory:{array:Zt}}}}}}}}},slot:38});Object.assign(L,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:37});Object.assign(be,{...t,type:1,name:"[7:0]u8",length:7,byteSize:8,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:68});Object.assign(pe,{...t,type:11,name:"*const [7:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:67});Object.assign(W,{...t,type:11,name:"*const *const [7:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:66});const es=new Uint8Array,ts=new Uint8Array([224,250,15,0]),ss=new Uint8Array([0,0,0,0,0,0,240,63]),rs=new Uint8Array([8,251,15,0]),as=new Uint8Array([0,0,0,0,0,0,89,64]),ns=new Uint8Array([48,251,15,0]),is=new Uint8Array([0,0,0,0,0,0,20,64]),us=new Uint8Array([88,251,15,0]),os=new Uint8Array([6,34,16,0]),ms=new Uint8Array([122,111,111,109,105,110,103,0]);Object.assign(fe,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:f},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:W}],methods:[],template:{memory:{array:es},slots:{0:{structure:s,memory:{array:ts},slots:{0:{structure:a,memory:{array:ss}}}},1:{structure:s,memory:{array:rs},slots:{0:{structure:a,memory:{array:as}}}},2:{structure:s,memory:{array:ns},slots:{0:{structure:a,memory:{array:is}}}},3:{structure:W,memory:{array:us},slots:{0:{structure:pe,memory:{array:os},slots:{0:{structure:be,memory:{array:ms}}}}}}}}},slot:40});Object.assign(G,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:39});Object.assign(de,{...t,type:1,name:"[11:0]u8",length:11,byteSize:12,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:71});Object.assign(Se,{...t,type:11,name:"*const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:de}],methods:[],template:null},slot:70});Object.assign(J,{...t,type:11,name:"*const *const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Se}],methods:[],template:null},slot:69});const ls=new Uint8Array,ys=new Uint8Array([224,250,15,0]),cs=new Uint8Array([0,0,0,0,0,0,0,0]),bs=new Uint8Array([8,251,15,0]),ps=new Uint8Array([31,133,235,81,184,30,25,64]),fs=new Uint8Array([48,251,15,0]),ds=new Uint8Array([0,0,0,0,0,0,0,0]),Ss=new Uint8Array([88,251,15,0]),hs=new Uint8Array([250,33,16,0]),gs=new Uint8Array([114,111,116,97,116,105,111,110,40,115,41,0]);Object.assign(he,{...t,type:2,name:"Struct0014",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:f},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:J}],methods:[],template:{memory:{array:ls},slots:{0:{structure:s,memory:{array:ys},slots:{0:{structure:a,memory:{array:cs}}}},1:{structure:s,memory:{array:bs},slots:{0:{structure:a,memory:{array:ps}}}},2:{structure:s,memory:{array:fs},slots:{0:{structure:a,memory:{array:ds}}}},3:{structure:J,memory:{array:Ss},slots:{0:{structure:Se,memory:{array:hs},slots:{0:{structure:de,memory:{array:gs}}}}}}}}},slot:42});Object.assign(N,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:he}],methods:[],template:null},slot:41});const zs=new Uint8Array,ws=new Uint8Array([170,170,170,170]),Os=new Uint8Array,As=new Uint8Array([170,170,170,170]),Us=new Uint8Array,Rs=new Uint8Array([170,170,170,170]),qs=new Uint8Array,js=new Uint8Array([170,170,170,170]),Ps=new Uint8Array;Object.assign(ge,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"imageWH",structure:T},{...e,type:8,isRequired:!1,slot:1,name:"poi",structure:L},{...e,type:8,isRequired:!1,slot:2,name:"zoom",structure:G},{...e,type:8,isRequired:!1,slot:3,name:"lambda",structure:N}],methods:[],template:{memory:{array:zs},slots:{0:{structure:T,memory:{array:ws},slots:{0:{structure:ue,memory:{array:Os}}}},1:{structure:L,memory:{array:As},slots:{0:{structure:ce,memory:{array:Us}}}},2:{structure:G,memory:{array:Rs},slots:{0:{structure:fe,memory:{array:qs}}}},3:{structure:N,memory:{array:js},slots:{0:{structure:he,memory:{array:Ps}}}}}}},slot:12});Object.assign(Q,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ge}],methods:[],template:null},slot:11});const Vs=new Uint8Array,Cs=new Uint8Array([0,252,15,0]),ks=new Uint8Array([4,0,0,0]);Object.assign(V,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:Vs},slots:{0:{structure:p,memory:{array:Cs},slots:{0:{structure:b,memory:{array:ks}}}}}}},slot:44});Object.assign(O,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:V}],methods:[],template:null},slot:43});const Is=new Uint8Array,vs=new Uint8Array([170,170,170,170]),xs=new Uint8Array;Object.assign(ze,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:O}],methods:[],template:{memory:{array:Is},slots:{0:{structure:O,memory:{array:vs},slots:{0:{structure:V,memory:{array:xs}}}}}}},slot:14});Object.assign(X,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ze}],methods:[],template:null},slot:13});const Es=new Uint8Array,Ks=new Uint8Array([170,170,170,170]),Ds=new Uint8Array;Object.assign(we,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:O}],methods:[],template:{memory:{array:Es},slots:{0:{structure:O,memory:{array:Ks},slots:{0:{structure:V,memory:{array:Ds}}}}}}},slot:16});Object.assign(Y,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:we}],methods:[],template:null},slot:15});const Fs=new Uint8Array,Ms=new Uint8Array,_s=new Uint8Array([124,37,16,0]),Ts=new Uint8Array([56,37,16,0]),$s=new Uint8Array([99,97,115,115,105,110,105,32,112,97,116,116,101,114,110,0]),Bs=new Uint8Array([132,37,16,0]),Hs=new Uint8Array([28,37,16,0]),Ls=new Uint8Array([102,114,97,110,107,32,114,101,105,116,98,101,114,103,101,114,0]),Ws=new Uint8Array([128,37,16,0]),Gs=new Uint8Array([1,0,0,0]),Js=new Uint8Array([124,37,16,0]),Ns=new Uint8Array([56,37,16,0]),Qs=new Uint8Array([99,97,115,115,105,110,105,32,112,97,116,116,101,114,110,0]),Xs=new Uint8Array([170,170,170,170]),Ys=new Uint8Array,Zs=new Uint8Array([170,170,170,170]),er=new Uint8Array,tr=new Uint8Array([170,170,170,170]),sr=new Uint8Array;Object.assign(Ce,{...t,type:2,name:"cassini.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Fs}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:g},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:D},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:p},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:g},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:Q},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:X},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:Y}],methods:[],template:{memory:{array:Ms},slots:{0:{structure:g,memory:{array:_s},slots:{0:{structure:q,memory:{array:Ts},slots:{0:{structure:R,memory:{array:$s}}}}}},1:{structure:D,memory:{array:Bs},slots:{0:{structure:se,memory:{array:Hs},slots:{0:{structure:te,memory:{array:Ls}}}}}},2:{structure:p,memory:{array:Ws},slots:{0:{structure:b,memory:{array:Gs}}}},3:{structure:g,memory:{array:Js},slots:{0:{structure:q,memory:{array:Ns},slots:{0:{structure:R,memory:{array:Qs}}}}}},4:{structure:Q,memory:{array:Xs},slots:{0:{structure:ge,memory:{array:Ys}}}},5:{structure:X,memory:{array:Zs},slots:{0:{structure:ze,memory:{array:er}}}},6:{structure:Y,memory:{array:tr},slots:{0:{structure:we,memory:{array:sr}}}}}}},slot:1});Object.assign(A,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:21});Object.assign(Oe,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:A}],methods:[],template:null},slot:20});Object.assign(Ae,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Oe}],methods:[],template:null},slot:19});Object.assign(l,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:l}],methods:[],template:null},slot:22});const rr=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(Ue,{...t,type:9,name:"cassini.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:b},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:b}],methods:[],template:{memory:{array:rr}}},slot:23});Object.assign(j,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:j}],methods:[],template:null},slot:24});Object.assign(Re,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:f}],methods:[],template:null},slot:45});const ar=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),nr=new Uint8Array,ir=new Uint8Array([224,36,16,0]),ur=new Uint8Array([4,0,0,0]);Object.assign(Z,{...t,type:2,name:"cassini.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Ae},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Ue},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:j}],methods:[],template:{memory:{array:ar}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:A},{...e,type:7,isRequired:!1,name:"FPixel",structure:Re},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:nr},slots:{0:{structure:p,memory:{array:ir},slots:{0:{structure:b,memory:{array:ur}}}}}}},slot:18});const or=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),mr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Te=new Uint8Array([0,0,0,0,0,0,0,0]),lr=new Uint8Array;Object.assign(C,{...t,type:2,name:"cassini.KernelInput(u8,cassini.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:Z}],methods:[],template:{memory:{array:or},slots:{0:{structure:Z,memory:{array:mr},slots:{0:{structure:Ae,memory:{array:Te},address:1047152,slots:{0:{structure:Oe,memory:{array:lr},address:0}}}}}}}},slot:17});Object.assign(qe,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:A}],methods:[],template:null},slot:20});Object.assign(je,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:qe}],methods:[],template:null},slot:27});const yr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),cr=new Uint8Array,br=new Uint8Array([224,36,16,0]),pr=new Uint8Array([4,0,0,0]);Object.assign(ee,{...t,type:2,name:"cassini.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:je},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Ue},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:j}],methods:[],template:{memory:{array:yr}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:A},{...e,type:7,isRequired:!1,name:"FPixel",structure:Re},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:cr},slots:{0:{structure:p,memory:{array:br},slots:{0:{structure:b,memory:{array:pr}}}}}}},slot:26});const fr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),dr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Sr=new Uint8Array;Object.assign(k,{...t,type:2,name:"cassini.KernelOutput(u8,cassini.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:ee}],methods:[],template:{memory:{array:fr},slots:{0:{structure:ee,memory:{array:dr},slots:{0:{structure:je,memory:{array:Te},address:1047152,slots:{0:{structure:qe,memory:{array:Sr},address:0}}}}}}}},slot:25});const hr=new Uint8Array([0,0,181,67,0,0,181,67,0,0,181,67,0,0,181,67,0,0,160,64,0,0,0,0]);Object.assign(I,{...t,type:2,name:"cassini.KernelParameters(cassini.kernel)",length:1,byteSize:24,align:3,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"imageWH",structure:z},{...e,type:6,isRequired:!1,bitOffset:64,bitSize:64,byteSize:8,slot:1,name:"poi",structure:z},{...e,type:4,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:2,name:"zoom",structure:f},{...e,type:4,isRequired:!1,bitOffset:160,bitSize:32,byteSize:4,slot:3,name:"lambda",structure:f}],methods:[],template:{memory:{array:hr}}},slot:28});Object.assign(ke,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(cassini.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:46});Object.assign(Ie,{...t,type:7,name:"ErrorSet0000!cassini.KernelOutput(u8,cassini.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:k},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:ke}],methods:[],template:null},slot:33});Object.assign(ve,{...t,type:3,name:"createOutput",length:1,byteSize:88,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:192,bitSize:32,byteSize:4,slot:0,name:"0",structure:l},{...e,type:3,bitOffset:224,bitSize:32,byteSize:4,slot:1,name:"1",structure:l},{...e,type:6,bitOffset:256,bitSize:192,byteSize:24,slot:2,name:"2",structure:C},{...e,type:6,bitOffset:0,bitSize:192,byteSize:24,slot:3,name:"3",structure:I},{...e,type:6,bitOffset:448,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Ie}],methods:[],template:null},slot:31});Object.assign(xe,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(cassini.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:47});Object.assign(Ee,{...t,type:7,name:"ErrorSet0001!cassini.KernelOutput(u8,cassini.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:k},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:xe}],methods:[],template:null},slot:34});Object.assign(Ke,{...t,type:3,name:"createPartialOutput",length:1,byteSize:96,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:192,bitSize:32,byteSize:4,slot:0,name:"0",structure:l},{...e,type:3,bitOffset:224,bitSize:32,byteSize:4,slot:1,name:"1",structure:l},{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:2,name:"2",structure:l},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:3,name:"3",structure:l},{...e,type:6,bitOffset:320,bitSize:192,byteSize:24,slot:4,name:"4",structure:C},{...e,type:6,bitOffset:0,bitSize:192,byteSize:24,slot:5,name:"5",structure:I},{...e,type:6,bitOffset:512,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Ee}],methods:[],template:null},slot:32});const gr=new Uint8Array,zr={argStruct:ve,thunk:4,name:"createOutput"},wr={argStruct:Ke,thunk:6,name:"createPartialOutput"};Object.assign(De,{...t,type:2,name:"cassini",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:gr}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:Ce},{...e,type:7,isRequired:!1,name:"Input",structure:C},{...e,type:7,isRequired:!1,name:"Output",structure:k},{...e,type:7,isRequired:!1,name:"Parameters",structure:I}],methods:[zr,wr],template:null},slot:0});const Or=[c,R,q,g,te,se,D,b,p,f,z,a,s,re,F,ae,M,P,w,ne,ie,_,ue,T,oe,$,me,B,le,ye,H,ce,L,be,pe,W,fe,G,de,Se,J,he,N,ge,Q,V,O,ze,X,we,Y,Ce,A,Oe,Ae,l,Ue,j,Re,Z,C,qe,je,ee,k,I,ke,Ie,ve,xe,Ee,Ke,De],Ar=ut(Or),Ur=De.constructor,Rr=(async()=>{const u=new URL("cassini-1d999f55.wasm",import.meta.url).href;return fetch(u)})();ot(Rr,{...Ar,writeBack:!0});const{createOutput:vr,createPartialOutput:qr,kernel:Ve,Input:jr,Output:xr,Parameters:Er}=Ur;function Pr(u,m,n,r,i={},S={}){if(Array.isArray(i)){const d=i;i={};for(const[y,h]of Object.keys(Ve.inputImages).entries())i[h]=d[y]}const v=new jr(void 0),x=Object.keys(Ve.inputImages),o=[];let U;for(const d of x){let y=i[d];if(y||(x.length===1&&["data","width","height"].every(h=>!!i[h])?y=i:o.push(d)),v[d]=y,U){if(y.colorSpace!==U)throw new Error(`Input images must all use the same color space: ${U}`)}else U=y.colorSpace}if(o.length>0)throw new Error(`Missing input image${o.length>1?"s":""}: ${o.join(", ")}`);const Pe=qr(u,m,n,r,v,S),Fe=d=>{const y=Object.keys(d),h={};for(const Me of y){const{data:{typedArray:E},width:_e,height:Be}=d[Me];let K;if(typeof ImageData=="function"){const He=new Uint8ClampedArray(E.buffer,E.byteOffset,E.byteLength);K=new ImageData(He,_e,r,{colorSpace:U})}else K={data:E,width:_e,height:Be};if(y.length===1)return K;h[Me]=K}return h};return Pe[Symbol.toStringTag]==="Promise"?Pe.then(Fe):Fe(Pe)}function Vr(){const u={};for(let[m,n]of Object.entries(Ve)){if(m==="parameters"){const r={};for(const[i,S]of Object.entries(n)){const v=r[i]={};for(let[x,o]of Object.entries(S))typeof o=="object"?"string"in o?o=o.string:o=$e(o):typeof o=="function"&&(o=Cr(o.name)),v[x]=o}n=r}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());u[m]=n}return u}function $e(u){const m=[];for(let[n,r]of Object.entries(u))typeof r=="object"&&(r=$e(r)),m[n]=r;return m}function Cr(u){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[u]}onmessage=u=>{const[m,n,...r]=u.data;kr(m,r).then(([i,S])=>{postMessage([m,n,i],{transfer:S})}).catch(i=>{postMessage(["error",n,i])})};async function kr(u,m){switch(u){case"getKernelInfo":return[Vr(...m)];case"createPartialImageData":const r=await Pr(...m),i=[];if("data"in r&&"width"in r&&"height"in r)i.push(r.data.buffer);else for(const S of Object.entries(r))i.push(r.data.buffer);return[r,i];default:throw new Error(`Unknown function: ${u}`)}}
