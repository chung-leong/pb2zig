import{u as St,a as Ot,b as zt,c as ht,d as jt,e as dt,f as wt,g as At,h as Ut,i as Pt,j as xt,k as Rt,l as kt,m as qt,n as It,o as Vt,p as vt,q as Et}from"./index-33238b17.js";St();Rt();kt();Ot();zt();qt();It();Vt();ht();jt();dt();wt();Et();vt();At();Ut();Pt();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},e={type:0,isRequired:!1},s={},p={},K={},C={},M={},D={},b={},g={},T={},F={},$={},j={},_={},L={},Y={},U={},B={},P={},o={},l={},A={},E={},Z={},G={},x={},H={},R={},J={},k={},q={},z={},ee={},te={},h={},se={},re={},ne={},ge={},N={},fe={},Se={},ae={},Oe={},ie={},ze={},he={},je={},de={},we={},Ae={},Ue={},Pe={},xe={},Re={},ke={},qe={},Ie={},Ve={},ve={},Ee={},Ke={},oe={},Ce={},Me={},ue={},De={},ce={},Te={},Fe={},$e={},_e={},Le={},Be={},Ge={},me={},He={},Je={},Ne={},Qe={},We={},Xe={},Ye={},Ze={},et={},tt={},st={},rt={},nt={},at={},it={},ot={},ut={},ct={},mt={},bt={},yt={},Kt=new Uint8Array,Ct=new Uint8Array([4]),Mt=new Uint8Array,Dt=new Uint8Array,Tt=new Uint8Array([2,5,0,1]),Ft=new Uint8Array([65,73,70,0]),$t=new Uint8Array([17,5,0,1]),_t=new Uint8Array([65,100,111,98,101,32,83,121,115,116,101,109,115,0]),Lt=new Uint8Array,Bt=new Uint8Array([2]),Gt=new Uint8Array([48,5,0,1]),Ht=new Uint8Array([65,32,115,105,109,112,108,101,32,102,105,120,101,100,45,115,105,122,101,32,98,111,120,32,98,108,117,114,0]),Jt=new Uint8Array,Nt=new Uint8Array,Qt=new Uint8Array,Wt=new Uint8Array([0]),Xt=new Uint8Array([1]),lt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Yt=new Uint8Array,Zt=new Uint8Array,es=new Uint8Array,ts=new Uint8Array,ss=new Uint8Array([4]),be=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),pt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),rs=new Uint8Array,ns=new Uint8Array,as=new Uint8Array,is=new Uint8Array,os=new Uint8Array([4]),ye=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),us=new Uint8Array([27,0]),cs=new Uint8Array([27,0]),ms=new Uint8Array,bs=new Uint8Array,ys=new Uint8Array,ls=new Uint8Array;Object.assign(ge,{slots:{0:N}});Object.assign(N,{structure:b,memory:{array:Kt},const:!0,slots:{0:fe}});Object.assign(fe,{structure:g,memory:{array:Ct},const:!0});Object.assign(Se,{slots:{0:ae}});Object.assign(ae,{structure:j,memory:{array:Mt},const:!0,slots:{0:N}});Object.assign(Oe,{slots:{0:ie}});Object.assign(ie,{structure:j,memory:{array:Dt},const:!0,slots:{0:N}});Object.assign(ze,{slots:{0:he,1:de,2:Ae,3:Pe,4:Re,5:ke,6:qe}});Object.assign(he,{structure:C,memory:{array:Tt},const:!0,slots:{0:je}});Object.assign(je,{structure:K,memory:{array:Ft},reloc:16778498});Object.assign(de,{structure:D,memory:{array:$t},const:!0,slots:{0:we}});Object.assign(we,{structure:M,memory:{array:_t},reloc:16778513});Object.assign(Ae,{structure:b,memory:{array:Lt},const:!0,slots:{0:Ue}});Object.assign(Ue,{structure:g,memory:{array:Bt},const:!0});Object.assign(Pe,{structure:F,memory:{array:Gt},const:!0,slots:{0:xe}});Object.assign(xe,{structure:T,memory:{array:Ht},reloc:16778544});Object.assign(Re,{structure:$,memory:{array:Jt},const:!0});Object.assign(ke,{structure:_,memory:{array:Nt},const:!0,slots:{0:ae}});Object.assign(qe,{structure:L,memory:{array:Qt},const:!0,slots:{0:ie}});Object.assign(Ie,{slots:{0:Ve,1:ve}});Object.assign(Ve,{structure:l,memory:{array:Wt},const:!0});Object.assign(ve,{structure:l,memory:{array:Xt},const:!0});Object.assign(Ee,{memory:{array:lt},slots:{0:Ke}});Object.assign(Ke,{structure:P,memory:{array:lt,offset:0,length:8},slots:{0:oe}});Object.assign(oe,{structure:B,memory:{array:Yt},reloc:0});Object.assign(Ce,{slots:{0:Me,1:De,2:Te}});Object.assign(Me,{structure:s,memory:{array:Zt},const:!0,slots:{0:ue}});Object.assign(ue,{structure:U});Object.assign(De,{structure:s,memory:{array:es},const:!0,slots:{0:ce}});Object.assign(ce,{structure:Z});Object.assign(Te,{structure:b,memory:{array:ts},const:!0,slots:{0:Fe}});Object.assign(Fe,{structure:g,memory:{array:ss},const:!0});Object.assign($e,{memory:{array:be},slots:{0:_e}});Object.assign(_e,{structure:G,memory:{array:be},slots:{0:Le}});Object.assign(Le,{structure:P,memory:{array:be,offset:0,length:8},slots:{0:oe}});Object.assign(Be,{memory:{array:pt},slots:{0:Ge}});Object.assign(Ge,{structure:R,memory:{array:pt,offset:0,length:8},slots:{0:me}});Object.assign(me,{structure:H,memory:{array:rs},reloc:0});Object.assign(He,{slots:{0:Je,1:Ne,2:Qe}});Object.assign(Je,{structure:s,memory:{array:ns},const:!0,slots:{0:ue}});Object.assign(Ne,{structure:s,memory:{array:as},const:!0,slots:{0:ce}});Object.assign(Qe,{structure:b,memory:{array:is},const:!0,slots:{0:We}});Object.assign(We,{structure:g,memory:{array:os},const:!0});Object.assign(Xe,{memory:{array:ye},slots:{0:Ye}});Object.assign(Ye,{structure:J,memory:{array:ye},slots:{0:Ze}});Object.assign(Ze,{structure:R,memory:{array:ye,offset:0,length:8},slots:{0:me}});Object.assign(et,{slots:{0:tt}});Object.assign(tt,{structure:z,memory:{array:us},const:!0});Object.assign(st,{slots:{0:rt}});Object.assign(rt,{structure:h,memory:{array:cs},const:!0});Object.assign(nt,{slots:{0:at,1:ot,2:ct,3:bt}});Object.assign(at,{structure:s,memory:{array:ms},const:!0,slots:{0:it}});Object.assign(it,{structure:Y});Object.assign(ot,{structure:s,memory:{array:bs},const:!0,slots:{0:ut}});Object.assign(ut,{structure:x});Object.assign(ct,{structure:s,memory:{array:ys},const:!0,slots:{0:mt}});Object.assign(mt,{structure:k});Object.assign(bt,{structure:s,memory:{array:ls},const:!0,slots:{0:yt}});Object.assign(yt,{structure:q});const ps={argStruct:te,thunkId:2,name:"createOutput"},gs={argStruct:re,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...t,name:"type",align:1,instance:{members:[{...e,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(p,{...t,name:"u8",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(K,{...t,type:1,name:"[3:0]u8",length:3,byteSize:4,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(C,{...t,type:13,name:"*const [3:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,slot:0,structure:K}],methods:[]}});Object.assign(M,{...t,type:1,name:"[13:0]u8",length:13,byteSize:14,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(D,{...t,type:13,name:"*const [13:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(b,{...t,name:"comptime_int",align:1,instance:{members:[{...e,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:b}],methods:[]}});Object.assign(g,{...t,name:"i8",byteSize:1,align:1,instance:{members:[{...e,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(T,{...t,type:1,name:"[28:0]u8",length:28,byteSize:29,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(F,{...t,type:13,name:"*const [28:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[]}});Object.assign($,{...t,type:2,name:"@TypeOf(.{})",align:1,isTuple:!0});Object.assign(j,{...t,type:2,name:"Struct3832472641",align:1,instance:{members:[{...e,type:7,slot:0,name:"channels",structure:b}],methods:[],template:ge}});Object.assign(_,{...t,type:2,name:"Struct2242867897",align:1,instance:{members:[{...e,type:7,slot:0,name:"src",structure:j}],methods:[],template:Se}});Object.assign(L,{...t,type:2,name:"Struct172100005",align:1,instance:{members:[{...e,type:7,slot:0,name:"dst",structure:j}],methods:[],template:Oe}});Object.assign(Y,{...t,type:2,name:"simple-box-blur.kernel",align:1,static:{members:[{...e,type:7,slot:0,name:"namespace",structure:C},{...e,type:7,slot:1,name:"vendor",structure:D},{...e,type:7,slot:2,name:"version",structure:b},{...e,type:7,slot:3,name:"description",structure:F},{...e,type:7,slot:4,name:"parameters",structure:$},{...e,type:7,slot:5,name:"inputImages",structure:_},{...e,type:7,slot:6,name:"outputImages",structure:L}],methods:[],template:ze}});Object.assign(U,{...t,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(B,{...t,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,structure:U}],methods:[]}});Object.assign(P,{...t,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:64,byteSize:8,slot:0,structure:B}],methods:[]}});Object.assign(o,{...t,name:"u32",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:o}],methods:[]}});Object.assign(l,{...t,type:11,name:"simple-box-blur.ColorSpace",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:l}],methods:[]},static:{members:[{...e,type:7,slot:0,name:"srgb",structure:l},{...e,type:7,slot:1,name:"display-p3",structure:l}],methods:[],template:Ie}});Object.assign(A,{...t,name:"usize",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:A}],methods:[]}});Object.assign(E,{...t,name:"f32",byteSize:4,align:4,instance:{members:[{...e,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:E}],methods:[]}});Object.assign(Z,{...t,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...e,type:4,bitSize:32,byteSize:4,structure:E}],methods:[]}});Object.assign(G,{...t,type:2,name:"simple-box-blur.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:P},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:o},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:o},{...e,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:l},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:A}],methods:[],template:Ee},static:{members:[{...e,type:7,slot:0,name:"Pixel",structure:s},{...e,type:7,slot:1,name:"FPixel",structure:s},{...e,type:7,slot:2,name:"channels",structure:b}],methods:[],template:Ce}});Object.assign(x,{...t,type:2,name:"simple-box-blur.KernelInput(u8,simple-box-blur.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:G}],methods:[],template:$e}});Object.assign(H,{...t,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,structure:U}],methods:[]}});Object.assign(R,{...t,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:64,byteSize:8,slot:0,structure:H}],methods:[]}});Object.assign(J,{...t,type:2,name:"simple-box-blur.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:R},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:o},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:o},{...e,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:l},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:A}],methods:[],template:Be},static:{members:[{...e,type:7,slot:0,name:"Pixel",structure:s},{...e,type:7,slot:1,name:"FPixel",structure:s},{...e,type:7,slot:2,name:"channels",structure:b}],methods:[],template:He}});Object.assign(k,{...t,type:2,name:"simple-box-blur.KernelOutput(u8,simple-box-blur.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:J}],methods:[],template:Xe}});Object.assign(q,{...t,type:2,name:"simple-box-blur.KernelParameters(simple-box-blur.kernel)",align:1});Object.assign(z,{...t,type:10,name:"ErrorSet2555685685",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:z}],methods:[]},static:{members:[{...e,type:7,slot:0,name:"OutOfMemory",structure:z}],methods:[],template:et}});Object.assign(ee,{...t,type:9,name:"ErrorSet2555685685!simple-box-blur.KernelOutput(u8,simple-box-blur.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:k},{...e,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:z}],methods:[]}});Object.assign(te,{...t,type:5,name:"createOutput",byteSize:60,align:4,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:o},{...e,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:o},{...e,type:5,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:x},{...e,type:5,isRequired:!0,bitOffset:480,bitSize:0,byteSize:0,slot:1,name:"3",structure:q},{...e,type:5,isRequired:!0,bitOffset:256,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ee}],methods:[]}});Object.assign(h,{...t,type:10,name:"ErrorSet2195175974",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:h}],methods:[]},static:{members:[{...e,type:7,slot:0,name:"OutOfMemory",structure:h}],methods:[],template:st}});Object.assign(se,{...t,type:9,name:"ErrorSet2195175974!simple-box-blur.KernelOutput(u8,simple-box-blur.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:k},{...e,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:h}],methods:[]}});Object.assign(re,{...t,type:5,name:"createPartialOutput",byteSize:68,align:4,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:o},{...e,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:o},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:o},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:o},{...e,type:5,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:x},{...e,type:5,isRequired:!0,bitOffset:544,bitSize:0,byteSize:0,slot:1,name:"5",structure:q},{...e,type:5,isRequired:!0,bitOffset:320,bitSize:224,byteSize:28,slot:2,name:"retval",structure:se}],methods:[]}});Object.assign(ne,{...t,type:2,name:"simple-box-blur",align:1,static:{members:[{...e,type:7,slot:0,name:"kernel",structure:s},{...e,type:7,slot:1,name:"Input",structure:s},{...e,type:7,slot:2,name:"Output",structure:s},{...e,type:7,slot:3,name:"Parameters",structure:s}],methods:[ps,gs],template:nt}});const fs=[s,p,K,C,M,D,b,g,T,F,$,j,_,L,Y,U,B,P,o,l,A,E,Z,G,x,H,R,J,k,q,z,ee,te,h,se,re,ne],Ss=ne,Os={runtimeSafety:!1,littleEndian:!0},Q=xt();Q.getSpecialExports();Q.recreateStructures(fs,Os);const zs=(async()=>{const a=new URL("simple-box-blur-b36383c7.wasm",import.meta.url).href;return fetch(a)})();Q.loadModule(zs);Q.linkVariables(!0);const{constructor:hs}=Ss,{createPartialOutput:js,Input:ds,kernel:X}=hs;function ws(a,u,i,n,r={},f={}){const S=[];for(const[m]of X.inputImages)S.push(m);const d=[];for(const[m]of X.outputImages)d.push(m);if(Array.isArray(r)){const m=r;r={};for(const[y,O]of S.entries())r[O]=m[y]}const c=new ds(void 0),I=[];let w;for(const m of S){let y=r[m];if(y||(S.length===1&&["data","width","height"].every(O=>!!r[O])?y=r:I.push(m)),c[m]=y,w){if(y.colorSpace!==w)throw new Error(`Input images must all use the same color space: ${w}`)}else w=y.colorSpace}if(I.length>0)throw new Error(`Missing input image${I.length>1?"s":""}: ${I.join(", ")}`);const W=js(a,u,i,n,c,f),le=m=>{const y={};for(const O of d){const{data:{typedArray:V},width:pe,height:gt}=m[O];let v;if(typeof ImageData=="function"){const ft=new Uint8ClampedArray(V.buffer,V.byteOffset,V.byteLength);v=new ImageData(ft,pe,n,{colorSpace:w})}else v={data:V,width:pe,height:gt};if(d.length===1)return v;y[O]=v}return y};return W[Symbol.toStringTag]==="Promise"?W.then(le):le(W)}function As(){const a={};for(let[u,i]of X){if(u==="parameters"){const n={};for(const[r,f]of i){const S=n[r]={};for(let[d,c]of f)typeof c=="object"?c=c.string??c.valueOf():typeof c=="function"&&(c=Us(c.name)),S[d]=c}i=n}else typeof i=="object"&&(i=i.string??i.valueOf());a[u]=i}return a}function Us(a){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[a]}onmessage=async a=>{if(!Array.isArray(a.data))return;const[u,i,...n]=a.data;try{const[r,f]=await Ps(u,n);postMessage([u,i,r],{transfer:f})}catch(r){postMessage(["error",i,r])}};async function Ps(a,u){switch(a){case"getKernelInfo":return[As(...u)];case"createPartialImageData":const n=await ws(...u),r=[];if("data"in n&&"width"in n&&"height"in n)r.push(n.data.buffer);else for(const f of Object.entries(n))r.push(n.data.buffer);return[n,r];default:throw new Error(`Unknown function: ${a}`)}}postMessage("ready");
