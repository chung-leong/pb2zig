import{u as rs,a as ns,b as as,c as is,d as os,e as cs,f as us,g as ms,h as ys,i as bs,j as ls,k as gs,l as ps,m as fs,n as Os,p as Ss,o as js,q as zs,r as hs,s as ds}from"./index-25a52593.js";rs();ls();gs();ns();as();ps();fs();Os();Ss();is();os();cs();us();js();ds();ms();zs();ys();bs();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},f={},D={},F={},M={},T={},l={},O={},$={},L={},r={},S={},y={},B={},d={},G={},H={},J={},N={},w={},Q={},W={},ct={},I={},X={},R={},m={},p={},P={},ut={},Y={},k={},Z={},q={},tt={},v={},E={},V={},mt={},yt={},_={},bt={},lt={},gt={},Ft={},pt={},Mt={},ft={},Tt={},Ot={},$t={},St={},Lt={},Bt={},et={},Gt={},st={},Ht={},rt={},Jt={},Nt={},jt={},Qt={},zt={},Wt={},ht={},Xt={},Yt={},dt={},Zt={},wt={},At={},Ut={},te={},Pt={},Vt={},ee={},nt={},se={},re={},It={},ne={},Rt={},ae={},ie={},oe={},ce={},ue={},me={},ye={},be={},le={},ge={},pe={},fe={},Oe={},Se={},je={},ze={},he={},kt={},de={},we={},qt={},Ae={},vt={},Ue={},Pe={},Ve={},Ie={},Re={},ke={},qe={},Et={},ve={},Ee={},xe={},Ce={},Ke={},_e={},De={},Fe={},Me={},Te={},xt={},$e={},Le={},Be={},Ge={},He={},Je={},Ne={},Qe={},We={},Xe={},ws=new Uint8Array,As=new Uint8Array,Us=new Uint8Array([0,0,0,0,0,0,240,191]),Ps=new Uint8Array,Vs=new Uint8Array([0,0,0,0,0,0,240,63]),Is=new Uint8Array,Rs=new Uint8Array([0,0,0,0,0,0,0,0]),ks=new Uint8Array,qs=new Uint8Array([0,0,0,0,0,0,0,0]),vs=new Uint8Array,Es=new Uint8Array([0,0,0,0,0,0,0,0]),xs=new Uint8Array,Cs=new Uint8Array([0,0,0,0,0,0,0,0]),Ks=new Uint8Array,_s=new Uint8Array([0,0,0,0,0,0,240,63]),Ds=new Uint8Array,Fs=new Uint8Array([0,0,0,0,0,0,240,63]),Ms=new Uint8Array,Ts=new Uint8Array([0,0,0,0,0,0,240,63]),$s=new Uint8Array,Ls=new Uint8Array,Bs=new Uint8Array,Gs=new Uint8Array,Hs=new Uint8Array,Js=new Uint8Array,Ns=new Uint8Array,Qs=new Uint8Array([4]),Ws=new Uint8Array,Xs=new Uint8Array,Ys=new Uint8Array([232,4,0,1]),Zs=new Uint8Array([65,108,108,101,110,32,67,104,111,117,0]),tr=new Uint8Array([96,37,0,1]),er=new Uint8Array([0]),sr=new Uint8Array,rr=new Uint8Array([1]),nr=new Uint8Array([15,5,0,1]),ar=new Uint8Array([116,105,110,116,32,101,102,102,101,99,116,0]),ir=new Uint8Array,or=new Uint8Array,cr=new Uint8Array,ur=new Uint8Array([0]),mr=new Uint8Array([1]),Ye=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),yr=new Uint8Array,br=new Uint8Array,lr=new Uint8Array,gr=new Uint8Array,pr=new Uint8Array([4]),Ct=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ze=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),fr=new Uint8Array,Or=new Uint8Array,Sr=new Uint8Array,jr=new Uint8Array,zr=new Uint8Array([4]),Kt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),hr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),dr=new Uint8Array([27,0]),wr=new Uint8Array,Ar=new Uint8Array,Ur=new Uint8Array,Pr=new Uint8Array;Object.assign(Ft,{slots:{0:pt,1:ft,2:Ot,3:St}});Object.assign(pt,{structure:s,memory:{array:ws},slots:{0:Mt}});Object.assign(Mt,{structure:S});Object.assign(ft,{structure:r,memory:{array:As},slots:{0:Tt}});Object.assign(Tt,{structure:y,memory:{array:Us}});Object.assign(Ot,{structure:r,memory:{array:Ps},slots:{0:$t}});Object.assign($t,{structure:y,memory:{array:Vs}});Object.assign(St,{structure:r,memory:{array:Is},slots:{0:Lt}});Object.assign(Lt,{structure:y,memory:{array:Rs}});Object.assign(Bt,{slots:{0:et,1:st,2:rt}});Object.assign(et,{structure:r,memory:{array:ks},slots:{0:Gt}});Object.assign(Gt,{structure:y,memory:{array:qs}});Object.assign(st,{structure:r,memory:{array:vs},slots:{0:Ht}});Object.assign(Ht,{structure:y,memory:{array:Es}});Object.assign(rt,{structure:r,memory:{array:xs},slots:{0:Jt}});Object.assign(Jt,{structure:y,memory:{array:Cs}});Object.assign(Nt,{slots:{0:jt,1:zt,2:ht}});Object.assign(jt,{structure:r,memory:{array:Ks},slots:{0:Qt}});Object.assign(Qt,{structure:y,memory:{array:_s}});Object.assign(zt,{structure:r,memory:{array:Ds},slots:{0:Wt}});Object.assign(Wt,{structure:y,memory:{array:Fs}});Object.assign(ht,{structure:r,memory:{array:Ms},slots:{0:Xt}});Object.assign(Xt,{structure:y,memory:{array:Ts}});Object.assign(Yt,{slots:{0:dt,1:wt,2:At,3:Ut}});Object.assign(dt,{structure:s,memory:{array:$s},slots:{0:Zt}});Object.assign(Zt,{structure:H});Object.assign(wt,{structure:d,memory:{array:Ls},slots:{0:et,1:st,2:rt}});Object.assign(At,{structure:G,memory:{array:Bs},slots:{0:jt,1:zt,2:ht}});Object.assign(Ut,{structure:d,memory:{array:Gs},slots:{0:et,1:st,2:rt}});Object.assign(te,{slots:{0:Pt,1:Vt}});Object.assign(Pt,{structure:B,memory:{array:Hs},slots:{0:pt,1:ft,2:Ot,3:St}});Object.assign(Vt,{structure:J,memory:{array:Js},slots:{0:dt,1:wt,2:At,3:Ut}});Object.assign(ee,{slots:{0:nt}});Object.assign(nt,{structure:l,memory:{array:Ns},slots:{0:se}});Object.assign(se,{structure:O,memory:{array:Qs}});Object.assign(re,{slots:{0:It}});Object.assign(It,{structure:w,memory:{array:Ws},slots:{0:nt}});Object.assign(ne,{slots:{0:Rt}});Object.assign(Rt,{structure:w,memory:{array:Xs},slots:{0:nt}});Object.assign(ae,{slots:{0:ie,1:ce,2:me,3:be,4:ge,5:pe,6:fe}});Object.assign(ie,{structure:F,memory:{array:Ys},slots:{0:oe}});Object.assign(oe,{structure:D,memory:{array:Zs},reloc:16778472,const:!0});Object.assign(ce,{structure:T,memory:{array:tr},slots:{0:ue}});Object.assign(ue,{structure:M,memory:{array:er},reloc:16786784,const:!0});Object.assign(me,{structure:l,memory:{array:sr},slots:{0:ye}});Object.assign(ye,{structure:O,memory:{array:rr}});Object.assign(be,{structure:L,memory:{array:nr},slots:{0:le}});Object.assign(le,{structure:$,memory:{array:ar},reloc:16778511,const:!0});Object.assign(ge,{structure:N,memory:{array:ir},slots:{0:Pt,1:Vt}});Object.assign(pe,{structure:Q,memory:{array:or},slots:{0:It}});Object.assign(fe,{structure:W,memory:{array:cr},slots:{0:Rt}});Object.assign(Oe,{slots:{0:Se,1:je}});Object.assign(Se,{structure:p,memory:{array:ur}});Object.assign(je,{structure:p,memory:{array:mr}});Object.assign(ze,{memory:{array:Ye},slots:{0:he}});Object.assign(he,{structure:R,memory:{array:Ye,offset:0,length:8},slots:{0:kt}});Object.assign(kt,{structure:X,memory:{array:yr},reloc:0,const:!0});Object.assign(de,{slots:{0:we,1:Ae,2:Ue}});Object.assign(we,{structure:s,memory:{array:br},slots:{0:qt}});Object.assign(qt,{structure:I});Object.assign(Ae,{structure:s,memory:{array:lr},slots:{0:vt}});Object.assign(vt,{structure:ut});Object.assign(Ue,{structure:l,memory:{array:gr},slots:{0:Pe}});Object.assign(Pe,{structure:O,memory:{array:pr}});Object.assign(Ve,{memory:{array:Ct},slots:{0:Ie}});Object.assign(Ie,{structure:Y,memory:{array:Ct},slots:{0:Re}});Object.assign(Re,{structure:R,memory:{array:Ct,offset:0,length:8},slots:{0:kt}});Object.assign(ke,{memory:{array:Ze},slots:{0:qe}});Object.assign(qe,{structure:q,memory:{array:Ze,offset:0,length:8},slots:{0:Et}});Object.assign(Et,{structure:Z,memory:{array:fr},reloc:0});Object.assign(ve,{slots:{0:Ee,1:xe,2:Ce}});Object.assign(Ee,{structure:s,memory:{array:Or},slots:{0:qt}});Object.assign(xe,{structure:s,memory:{array:Sr},slots:{0:vt}});Object.assign(Ce,{structure:l,memory:{array:jr},slots:{0:Ke}});Object.assign(Ke,{structure:O,memory:{array:zr}});Object.assign(_e,{memory:{array:Kt},slots:{0:De}});Object.assign(De,{structure:tt,memory:{array:Kt},slots:{0:Fe}});Object.assign(Fe,{structure:q,memory:{array:Kt,offset:0,length:8},slots:{0:Et}});Object.assign(Me,{memory:{array:hr}});Object.assign(Te,{slots:{0:xt}});Object.assign(xt,{structure:V,memory:{array:dr}});Object.assign($e,{slots:{0:xt}});Object.assign(Le,{slots:{0:Be,1:He,2:Ne,3:We}});Object.assign(Be,{structure:s,memory:{array:wr},slots:{0:Ge}});Object.assign(Ge,{structure:ct});Object.assign(He,{structure:s,memory:{array:Ar},slots:{0:Je}});Object.assign(Je,{structure:k});Object.assign(Ne,{structure:s,memory:{array:Ur},slots:{0:Qe}});Object.assign(Qe,{structure:v});Object.assign(We,{structure:s,memory:{array:Pr},slots:{0:Xe}});Object.assign(Xe,{structure:E});const Vr={argStruct:yt,thunkId:2,name:"createOutput"},Ir={argStruct:lt,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(f,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(D,{...e,type:1,name:"[10:0]u8",length:10,byteSize:11,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(F,{...e,type:13,name:"*const [10:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:D}],methods:[]}});Object.assign(M,{...e,type:1,name:"[0:0]u8",length:0,byteSize:1,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(T,{...e,type:13,name:"*const [0:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(l,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:l}],methods:[]}});Object.assign(O,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign($,{...e,type:1,name:"[11:0]u8",length:11,byteSize:12,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(L,{...e,type:13,name:"*const [11:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[]}});Object.assign(r,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(S,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(y,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:y}],methods:[]}});Object.assign(B,{...e,type:2,name:"Struct3347425011",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:r},{...t,type:9,slot:2,name:"maxValue",structure:r},{...t,type:9,slot:3,name:"defaultValue",structure:r}],methods:[],template:Ft}});Object.assign(d,{...e,type:2,name:"Struct4174069246",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:r},{...t,type:9,slot:1,name:"1",structure:r},{...t,type:9,slot:2,name:"2",structure:r}],methods:[],template:Bt}});Object.assign(G,{...e,type:2,name:"Struct2060771296",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:r},{...t,type:9,slot:1,name:"1",structure:r},{...t,type:9,slot:2,name:"2",structure:r}],methods:[],template:Nt}});Object.assign(H,{...e,type:15,name:"@Vector(3, f32)",length:3,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(J,{...e,type:2,name:"Struct2565267806",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:d},{...t,type:9,slot:2,name:"maxValue",structure:G},{...t,type:9,slot:3,name:"defaultValue",structure:d}],methods:[],template:Yt}});Object.assign(N,{...e,type:2,name:"Struct1269012212",align:1,instance:{members:[{...t,type:9,slot:0,name:"amount",structure:B},{...t,type:9,slot:1,name:"color",structure:J}],methods:[],template:te}});Object.assign(w,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:l}],methods:[],template:ee}});Object.assign(Q,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:9,slot:0,name:"src",structure:w}],methods:[],template:re}});Object.assign(W,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:9,slot:0,name:"dst",structure:w}],methods:[],template:ne}});Object.assign(ct,{...e,type:2,name:"tint.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:F},{...t,type:9,slot:1,name:"vendor",structure:T},{...t,type:9,slot:2,name:"version",structure:l},{...t,type:9,slot:3,name:"description",structure:L},{...t,type:9,slot:4,name:"parameters",structure:N},{...t,type:9,slot:5,name:"inputImages",structure:Q},{...t,type:9,slot:6,name:"outputImages",structure:W}],methods:[],template:ae}});Object.assign(I,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(X,{...e,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(R,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:X}],methods:[]}});Object.assign(m,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[]}});Object.assign(p,{...e,type:11,name:"tint.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:p},{...t,type:9,slot:1,name:"display-p3",structure:p}],methods:[],template:Oe}});Object.assign(P,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(ut,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(Y,{...e,type:2,name:"tint.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:R},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:ze},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:l}],methods:[],template:de}});Object.assign(k,{...e,type:2,name:"tint.KernelInput(u8,tint.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:Y}],methods:[],template:Ve}});Object.assign(Z,{...e,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(q,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:Z}],methods:[]}});Object.assign(tt,{...e,type:2,name:"tint.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:q},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:ke},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:l}],methods:[],template:ve}});Object.assign(v,{...e,type:2,name:"tint.KernelOutput(u8,tint.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:tt}],methods:[],template:_e}});Object.assign(E,{...e,type:2,name:"tint.KernelParameters(tint.kernel)",byteSize:32,align:16,instance:{members:[{...t,type:4,bitOffset:128,bitSize:32,byteSize:4,slot:1,name:"amount",structure:S},{...t,type:7,bitOffset:0,bitSize:96,byteSize:16,slot:0,name:"color",structure:H}],methods:[],template:Me}});Object.assign(V,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(tint.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:V}],methods:[],template:Te}});Object.assign(mt,{...e,type:9,name:"ErrorSet4244189820!tint.KernelOutput(u8,tint.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:V}],methods:[]}});Object.assign(yt,{...e,type:5,name:"createOutput",byteSize:96,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...t,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...t,type:7,isRequired:!0,bitOffset:320,bitSize:192,byteSize:24,slot:0,name:"2",structure:k},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:256,byteSize:32,slot:1,name:"3",structure:E},{...t,type:7,isRequired:!0,bitOffset:512,bitSize:224,byteSize:28,slot:2,name:"retval",structure:mt}],methods:[]}});Object.assign(_,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(tint.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:_}],methods:[],template:$e}});Object.assign(bt,{...e,type:9,name:"ErrorSet1427609485!tint.KernelOutput(u8,tint.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:_}],methods:[]}});Object.assign(lt,{...e,type:5,name:"createPartialOutput",byteSize:112,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...t,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...t,type:3,isRequired:!0,bitOffset:320,bitSize:32,byteSize:4,slot:5,name:"2",structure:m},{...t,type:3,isRequired:!0,bitOffset:352,bitSize:32,byteSize:4,slot:6,name:"3",structure:m},{...t,type:7,isRequired:!0,bitOffset:384,bitSize:192,byteSize:24,slot:0,name:"4",structure:k},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:256,byteSize:32,slot:1,name:"5",structure:E},{...t,type:7,isRequired:!0,bitOffset:576,bitSize:224,byteSize:28,slot:2,name:"retval",structure:bt}],methods:[]}});Object.assign(gt,{...e,type:2,name:"tint",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:s},{...t,type:9,slot:1,name:"Input",structure:s},{...t,type:9,slot:2,name:"Output",structure:s},{...t,type:9,slot:3,name:"Parameters",structure:s}],methods:[Vr,Ir],template:Le}});const Rr=[s,f,D,F,M,T,l,O,$,L,r,S,y,B,d,G,H,J,N,w,Q,W,ct,I,X,R,m,p,P,ut,Y,k,Z,q,tt,v,E,V,mt,yt,_,bt,lt,gt],kr=gt,qr={runtimeSafety:!1,littleEndian:!0},at=hs();at.getControlObject();at.recreateStructures(Rr,qr);const vr=(async()=>{const o=new URL("tint-f9901a01.wasm",import.meta.url).href;return fetch(o)})();at.loadModule(vr);at.linkVariables(!0);const{constructor:Er}=kr,{createPartialOutput:xr,Input:Cr,kernel:ot}=Er;function Kr(o,c,a,n,i={},j={}){const z=[];for(const[b]of ot.inputImages)z.push(b);const A=[];for(const[b]of ot.outputImages)A.push(b);if(Array.isArray(i)){const b=i;i={};for(const[g,h]of z.entries())i[h]=b[g]}const u=new Cr(void 0),x=[];let U;for(const b of z){let g=i[b];if(g||(z.length===1&&["data","width","height"].every(h=>!!i[h])?g=i:x.push(b)),u[b]=g,U){if(g.colorSpace!==U)throw new Error(`Input images must all use the same color space: ${U}`)}else U=g.colorSpace}if(x.length>0)throw new Error(`Missing input image${x.length>1?"s":""}: ${x.join(", ")}`);const it=xr(o,c,a,n,u,j),_t=b=>{const g={};for(const h of A){const{data:{typedArray:C},width:Dt,height:es}=b[h];let K;if(typeof ImageData=="function"){const ss=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);K=new ImageData(ss,Dt,n,{colorSpace:U})}else K={data:C,width:Dt,height:es};if(A.length===1)return K;g[h]=K}return g};return it[Symbol.toStringTag]==="Promise"?it.then(_t):_t(it)}function _r(){const o={};for(let[c,a]of ot){if(c==="parameters"){const n={};for(const[i,j]of a){const z=n[i]={};for(let[A,u]of j)typeof u=="object"?"string"in u?u=u.string:u=ts(u):typeof u=="function"&&(u=Dr(u.name)),z[A]=u}a=n}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());o[c]=a}return o}function ts(o){const c=[];for(let[a,n]of o)typeof n=="object"&&(n=ts(n)),c[a]=n;return c}function Dr(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[c,a,...n]=o.data;Fr(c,n).then(([i,j])=>{postMessage([c,a,i],{transfer:j})}).catch(i=>{postMessage(["error",a,i])})};async function Fr(o,c){switch(o){case"getKernelInfo":return[_r(...c)];case"createPartialImageData":const n=await Kr(...c),i=[];if("data"in n&&"width"in n&&"height"in n)i.push(n.data.buffer);else for(const j of Object.entries(n))i.push(n.data.buffer);return[n,i];default:throw new Error(`Unknown function: ${o}`)}}
