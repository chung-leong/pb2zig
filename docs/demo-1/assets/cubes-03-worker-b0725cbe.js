import{u as Jr,a as Nr,b as Qr,c as Wr,d as Xr,e as Yr,f as Zr,g as ta,h as ea,i as sa,j as ra,k as aa,l as na,m as oa,n as ia,p as ca,o as ua,q as ma,r as ya,s as ba}from"./index-58d89d46.js";Jr();ra();aa();Nr();Qr();na();oa();ia();ca();Wr();Xr();Yr();Zr();ua();ba();ta();ma();ea();sa();const s={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},a={},S={},_={},F={},M={},T={},b={},j={},$={},L={},e={},r={},B={},p={},f={},G={},H={},J={},N={},Q={},W={},X={},Y={},Z={},tt={},et={},st={},rt={},at={},nt={},ot={},it={},ct={},ut={},mt={},yt={},bt={},wt={},I={},lt={},x={},y={},O={},V={},gt={},R={},pt={},k={},At={},Ot={},q={},v={},P={},Ut={},dt={},K={},ht={},Vt={},Pt={},Be={},It={},Ge={},xt={},He={},Rt={},Je={},Ne={},kt={},U={},qt={},Qe={},vt={},We={},Ct={},Xe={},Et={},Ye={},Ze={},Dt={},Kt={},ts={},_t={},es={},Ft={},ss={},Mt={},rs={},as={},Tt={},$t={},ns={},Lt={},os={},Bt={},is={},cs={},Gt={},us={},Ht={},ms={},ys={},Jt={},bs={},Nt={},ls={},gs={},Qt={},ps={},Wt={},Xt={},Yt={},Os={},Zt={},js={},te={},fs={},ee={},Ss={},zs={},se={},ws={},re={},As={},ae={},Us={},ds={},ne={},hs={},oe={},Vs={},ie={},Ps={},Is={},ce={},ue={},me={},ye={},xs={},be={},jt={},le={},Rs={},ge={},ks={},pe={},qs={},vs={},Oe={},je={},Cs={},fe={},Es={},Se={},Ds={},Ks={},ze={},we={},_s={},Ae={},Fs={},Ue={},Ms={},Ts={},de={},he={},Ve={},Pe={},Ie={},xe={},Re={},ke={},$s={},qe={},Ls={},Bs={},ve={},Gs={},Ce={},Hs={},Js={},Ee={},Ns={},Qs={},Ws={},Xs={},Ys={},Zs={},tr={},er={},sr={},rr={},ar={},nr={},or={},ir={},cr={},ur={},mr={},De={},yr={},br={},Ke={},lr={},gr={},pr={},Or={},jr={},fr={},Sr={},zr={},_e={},wr={},Ar={},Ur={},dr={},hr={},Vr={},Pr={},Ir={},xr={},Rr={},kr={},Fe={},qr={},vr={},Cr={},Er={},Dr={},Kr={},_r={},Fr={},Mr={},Tr={},la=new Uint8Array,ga=new Uint8Array([0,0,0,0,0,0,240,63]),pa=new Uint8Array,Oa=new Uint8Array([51,51,51,51,51,51,211,63]),ja=new Uint8Array,fa=new Uint8Array([154,153,153,153,153,153,217,63]),Sa=new Uint8Array,za=new Uint8Array,wa=new Uint8Array,Aa=new Uint8Array([51,51,51,51,51,51,211,63]),Ua=new Uint8Array,da=new Uint8Array([154,153,153,153,153,153,233,63]),ha=new Uint8Array,Va=new Uint8Array([154,153,153,153,153,153,217,63]),Pa=new Uint8Array,Ia=new Uint8Array,xa=new Uint8Array,Ra=new Uint8Array([154,153,153,153,153,153,185,63]),ka=new Uint8Array,qa=new Uint8Array([51,51,51,51,51,51,211,63]),va=new Uint8Array,Ca=new Uint8Array([0,0,0,0,0,0,240,63]),Ea=new Uint8Array,Da=new Uint8Array,Ka=new Uint8Array,_a=new Uint8Array([0,0,0,0,0,0,0,0]),Fa=new Uint8Array,Ma=new Uint8Array([0,0,0,0,0,0,0,0]),Ta=new Uint8Array,$a=new Uint8Array([0,0,0,0,0,0,137,64]),La=new Uint8Array,Ba=new Uint8Array([0,0,0,0,0,0,137,64]),Ga=new Uint8Array,Ha=new Uint8Array([0,0,0,0,0,192,114,64]),Ja=new Uint8Array,Na=new Uint8Array([0,0,0,0,0,192,114,64]),Qa=new Uint8Array,Wa=new Uint8Array,Xa=new Uint8Array,Ya=new Uint8Array,Za=new Uint8Array,tn=new Uint8Array([0,0,0,0,0,0,36,192]),en=new Uint8Array,sn=new Uint8Array([0,0,0,0,0,0,36,192]),rn=new Uint8Array,an=new Uint8Array([0,0,0,0,0,0,36,192]),nn=new Uint8Array,on=new Uint8Array([0,0,0,0,0,0,36,64]),cn=new Uint8Array,un=new Uint8Array([0,0,0,0,0,0,36,64]),mn=new Uint8Array,yn=new Uint8Array([0,0,0,0,0,0,36,64]),bn=new Uint8Array,ln=new Uint8Array([154,153,153,153,153,153,185,63]),gn=new Uint8Array,pn=new Uint8Array([123,20,174,71,225,122,148,63]),On=new Uint8Array,jn=new Uint8Array([51,51,51,51,51,51,211,63]),fn=new Uint8Array,Sn=new Uint8Array,zn=new Uint8Array,wn=new Uint8Array,An=new Uint8Array,Un=new Uint8Array,dn=new Uint8Array([0,0,0,0,0,0,0,0]),hn=new Uint8Array,Vn=new Uint8Array([0,0,0,0,0,0,52,64]),Pn=new Uint8Array,In=new Uint8Array([0,0,0,0,0,0,0,0]),xn=new Uint8Array,Rn=new Uint8Array,kn=new Uint8Array([123,20,174,71,225,122,116,63]),qn=new Uint8Array,vn=new Uint8Array([154,153,153,153,153,153,185,63]),Cn=new Uint8Array,En=new Uint8Array([184,30,133,235,81,184,158,63]),Dn=new Uint8Array,Kn=new Uint8Array,_n=new Uint8Array([0,0,0,0,0,0,20,64]),Fn=new Uint8Array,Mn=new Uint8Array([0,0,0,0,0,0,105,64]),Tn=new Uint8Array,$n=new Uint8Array([0,0,0,0,0,0,89,64]),Ln=new Uint8Array,Bn=new Uint8Array,Gn=new Uint8Array,Hn=new Uint8Array,Jn=new Uint8Array,Nn=new Uint8Array,Qn=new Uint8Array,Wn=new Uint8Array,Xn=new Uint8Array,Yn=new Uint8Array([3]),Zn=new Uint8Array,to=new Uint8Array,eo=new Uint8Array([4]),so=new Uint8Array,ro=new Uint8Array([8,16,0,1]),ao=new Uint8Array([65,73,70,0]),no=new Uint8Array([23,16,0,1]),oo=new Uint8Array([111,109,105,110,111,46,99,111,109,0]),io=new Uint8Array,co=new Uint8Array([2]),uo=new Uint8Array([50,16,0,1]),mo=new Uint8Array([115,112,104,101,114,101,115,101,99,116,105,111,110,0]),yo=new Uint8Array,bo=new Uint8Array,lo=new Uint8Array,go=new Uint8Array([0]),po=new Uint8Array([1]),$r=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Oo=new Uint8Array,jo=new Uint8Array,fo=new Uint8Array,So=new Uint8Array,zo=new Uint8Array([3]),Me=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Lr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),wo=new Uint8Array,Ao=new Uint8Array,Uo=new Uint8Array,ho=new Uint8Array,Vo=new Uint8Array([4]),Te=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Po=new Uint8Array([0,0,128,63,154,153,153,62,205,204,204,62,0,0,0,0,154,153,153,62,205,204,76,63,205,204,204,62,0,0,0,0,205,204,204,61,154,153,153,62,0,0,128,63,0,0,0,0,205,204,204,61,10,215,163,60,154,153,153,62,0,0,0,0,0,0,150,67,0,0,150,67,0,0,0,0,143,194,245,60,0,0,200,66,0,0,0,0,0,0,0,0,0,0,0,0]),Io=new Uint8Array([27,0]),xo=new Uint8Array,Ro=new Uint8Array,ko=new Uint8Array,qo=new Uint8Array;Object.assign(Be,{slots:{0:It,1:xt,2:Rt}});Object.assign(It,{structure:e,memory:{array:la},slots:{0:Ge}});Object.assign(Ge,{structure:r,memory:{array:ga}});Object.assign(xt,{structure:e,memory:{array:pa},slots:{0:He}});Object.assign(He,{structure:r,memory:{array:Oa}});Object.assign(Rt,{structure:e,memory:{array:ja},slots:{0:Je}});Object.assign(Je,{structure:r,memory:{array:fa}});Object.assign(Ne,{slots:{0:kt,1:qt}});Object.assign(kt,{structure:a,memory:{array:Sa},slots:{0:U}});Object.assign(U,{structure:f});Object.assign(qt,{structure:B,memory:{array:za},slots:{0:It,1:xt,2:Rt}});Object.assign(Qe,{slots:{0:vt,1:Ct,2:Et}});Object.assign(vt,{structure:e,memory:{array:wa},slots:{0:We}});Object.assign(We,{structure:r,memory:{array:Aa}});Object.assign(Ct,{structure:e,memory:{array:Ua},slots:{0:Xe}});Object.assign(Xe,{structure:r,memory:{array:da}});Object.assign(Et,{structure:e,memory:{array:ha},slots:{0:Ye}});Object.assign(Ye,{structure:r,memory:{array:Va}});Object.assign(Ze,{slots:{0:Dt,1:Kt}});Object.assign(Dt,{structure:a,memory:{array:Pa},slots:{0:U}});Object.assign(Kt,{structure:H,memory:{array:Ia},slots:{0:vt,1:Ct,2:Et}});Object.assign(ts,{slots:{0:_t,1:Ft,2:Mt}});Object.assign(_t,{structure:e,memory:{array:xa},slots:{0:es}});Object.assign(es,{structure:r,memory:{array:Ra}});Object.assign(Ft,{structure:e,memory:{array:ka},slots:{0:ss}});Object.assign(ss,{structure:r,memory:{array:qa}});Object.assign(Mt,{structure:e,memory:{array:va},slots:{0:rs}});Object.assign(rs,{structure:r,memory:{array:Ca}});Object.assign(as,{slots:{0:Tt,1:$t}});Object.assign(Tt,{structure:a,memory:{array:Ea},slots:{0:U}});Object.assign($t,{structure:N,memory:{array:Da},slots:{0:_t,1:Ft,2:Mt}});Object.assign(ns,{slots:{0:Lt,1:Bt}});Object.assign(Lt,{structure:e,memory:{array:Ka},slots:{0:os}});Object.assign(os,{structure:r,memory:{array:_a}});Object.assign(Bt,{structure:e,memory:{array:Fa},slots:{0:is}});Object.assign(is,{structure:r,memory:{array:Ma}});Object.assign(cs,{slots:{0:Gt,1:Ht}});Object.assign(Gt,{structure:e,memory:{array:Ta},slots:{0:us}});Object.assign(us,{structure:r,memory:{array:$a}});Object.assign(Ht,{structure:e,memory:{array:La},slots:{0:ms}});Object.assign(ms,{structure:r,memory:{array:Ba}});Object.assign(ys,{slots:{0:Jt,1:Nt}});Object.assign(Jt,{structure:e,memory:{array:Ga},slots:{0:bs}});Object.assign(bs,{structure:r,memory:{array:Ha}});Object.assign(Nt,{structure:e,memory:{array:Ja},slots:{0:ls}});Object.assign(ls,{structure:r,memory:{array:Na}});Object.assign(gs,{slots:{0:Qt,1:Wt,2:Xt,3:Yt}});Object.assign(Qt,{structure:a,memory:{array:Qa},slots:{0:ps}});Object.assign(ps,{structure:Z});Object.assign(Wt,{structure:W,memory:{array:Wa},slots:{0:Lt,1:Bt}});Object.assign(Xt,{structure:X,memory:{array:Xa},slots:{0:Gt,1:Ht}});Object.assign(Yt,{structure:Y,memory:{array:Ya},slots:{0:Jt,1:Nt}});Object.assign(Os,{slots:{0:Zt,1:te,2:ee}});Object.assign(Zt,{structure:e,memory:{array:Za},slots:{0:js}});Object.assign(js,{structure:r,memory:{array:tn}});Object.assign(te,{structure:e,memory:{array:en},slots:{0:fs}});Object.assign(fs,{structure:r,memory:{array:sn}});Object.assign(ee,{structure:e,memory:{array:rn},slots:{0:Ss}});Object.assign(Ss,{structure:r,memory:{array:an}});Object.assign(zs,{slots:{0:se,1:re,2:ae}});Object.assign(se,{structure:e,memory:{array:nn},slots:{0:ws}});Object.assign(ws,{structure:r,memory:{array:on}});Object.assign(re,{structure:e,memory:{array:cn},slots:{0:As}});Object.assign(As,{structure:r,memory:{array:un}});Object.assign(ae,{structure:e,memory:{array:mn},slots:{0:Us}});Object.assign(Us,{structure:r,memory:{array:yn}});Object.assign(ds,{slots:{0:ne,1:oe,2:ie}});Object.assign(ne,{structure:e,memory:{array:bn},slots:{0:hs}});Object.assign(hs,{structure:r,memory:{array:ln}});Object.assign(oe,{structure:e,memory:{array:gn},slots:{0:Vs}});Object.assign(Vs,{structure:r,memory:{array:pn}});Object.assign(ie,{structure:e,memory:{array:On},slots:{0:Ps}});Object.assign(Ps,{structure:r,memory:{array:jn}});Object.assign(Is,{slots:{0:ce,1:ue,2:me,3:ye}});Object.assign(ce,{structure:a,memory:{array:fn},slots:{0:U}});Object.assign(ue,{structure:et,memory:{array:Sn},slots:{0:Zt,1:te,2:ee}});Object.assign(me,{structure:st,memory:{array:zn},slots:{0:se,1:re,2:ae}});Object.assign(ye,{structure:rt,memory:{array:wn},slots:{0:ne,1:oe,2:ie}});Object.assign(xs,{slots:{0:be,1:le,2:ge,3:pe}});Object.assign(be,{structure:a,memory:{array:An},slots:{0:jt}});Object.assign(jt,{structure:p});Object.assign(le,{structure:e,memory:{array:Un},slots:{0:Rs}});Object.assign(Rs,{structure:r,memory:{array:dn}});Object.assign(ge,{structure:e,memory:{array:hn},slots:{0:ks}});Object.assign(ks,{structure:r,memory:{array:Vn}});Object.assign(pe,{structure:e,memory:{array:Pn},slots:{0:qs}});Object.assign(qs,{structure:r,memory:{array:In}});Object.assign(vs,{slots:{0:Oe,1:je,2:fe,3:Se}});Object.assign(Oe,{structure:a,memory:{array:xn},slots:{0:jt}});Object.assign(je,{structure:e,memory:{array:Rn},slots:{0:Cs}});Object.assign(Cs,{structure:r,memory:{array:kn}});Object.assign(fe,{structure:e,memory:{array:qn},slots:{0:Es}});Object.assign(Es,{structure:r,memory:{array:vn}});Object.assign(Se,{structure:e,memory:{array:Cn},slots:{0:Ds}});Object.assign(Ds,{structure:r,memory:{array:En}});Object.assign(Ks,{slots:{0:ze,1:we,2:Ae,3:Ue}});Object.assign(ze,{structure:a,memory:{array:Dn},slots:{0:jt}});Object.assign(we,{structure:e,memory:{array:Kn},slots:{0:_s}});Object.assign(_s,{structure:r,memory:{array:_n}});Object.assign(Ae,{structure:e,memory:{array:Fn},slots:{0:Fs}});Object.assign(Fs,{structure:r,memory:{array:Mn}});Object.assign(Ue,{structure:e,memory:{array:Tn},slots:{0:Ms}});Object.assign(Ms,{structure:r,memory:{array:$n}});Object.assign(Ts,{slots:{0:de,1:he,2:Ve,3:Pe,4:Ie,5:xe,6:Re,7:ke}});Object.assign(de,{structure:G,memory:{array:Ln},slots:{0:kt,1:qt}});Object.assign(he,{structure:J,memory:{array:Bn},slots:{0:Dt,1:Kt}});Object.assign(Ve,{structure:Q,memory:{array:Gn},slots:{0:Tt,1:$t}});Object.assign(Pe,{structure:tt,memory:{array:Hn},slots:{0:Qt,1:Wt,2:Xt,3:Yt}});Object.assign(Ie,{structure:at,memory:{array:Jn},slots:{0:ce,1:ue,2:me,3:ye}});Object.assign(xe,{structure:nt,memory:{array:Nn},slots:{0:be,1:le,2:ge,3:pe}});Object.assign(Re,{structure:ot,memory:{array:Qn},slots:{0:Oe,1:je,2:fe,3:Se}});Object.assign(ke,{structure:it,memory:{array:Wn},slots:{0:ze,1:we,2:Ae,3:Ue}});Object.assign($s,{slots:{0:qe}});Object.assign(qe,{structure:b,memory:{array:Xn},slots:{0:Ls}});Object.assign(Ls,{structure:j,memory:{array:Yn}});Object.assign(Bs,{slots:{0:ve}});Object.assign(ve,{structure:ut,memory:{array:Zn},slots:{0:qe}});Object.assign(Gs,{slots:{0:Ce}});Object.assign(Ce,{structure:b,memory:{array:to},slots:{0:Hs}});Object.assign(Hs,{structure:j,memory:{array:eo}});Object.assign(Js,{slots:{0:Ee}});Object.assign(Ee,{structure:yt,memory:{array:so},slots:{0:Ce}});Object.assign(Ns,{slots:{0:Qs,1:Xs,2:Zs,3:er,4:rr,5:ar,6:nr}});Object.assign(Qs,{structure:F,memory:{array:ro},slots:{0:Ws}});Object.assign(Ws,{structure:_,memory:{array:ao},reloc:16781320,const:!0});Object.assign(Xs,{structure:T,memory:{array:no},slots:{0:Ys}});Object.assign(Ys,{structure:M,memory:{array:oo},reloc:16781335,const:!0});Object.assign(Zs,{structure:b,memory:{array:io},slots:{0:tr}});Object.assign(tr,{structure:j,memory:{array:co}});Object.assign(er,{structure:L,memory:{array:uo},slots:{0:sr}});Object.assign(sr,{structure:$,memory:{array:mo},reloc:16781362,const:!0});Object.assign(rr,{structure:ct,memory:{array:yo},slots:{0:de,1:he,2:Ve,3:Pe,4:Ie,5:xe,6:Re,7:ke}});Object.assign(ar,{structure:mt,memory:{array:bo},slots:{0:ve}});Object.assign(nr,{structure:bt,memory:{array:lo},slots:{0:Ee}});Object.assign(or,{slots:{0:ir,1:cr}});Object.assign(ir,{structure:O,memory:{array:go}});Object.assign(cr,{structure:O,memory:{array:po}});Object.assign(ur,{memory:{array:$r},slots:{0:mr}});Object.assign(mr,{structure:x,memory:{array:$r,offset:0,length:8},slots:{0:De}});Object.assign(De,{structure:lt,memory:{array:Oo},reloc:0,const:!0});Object.assign(yr,{slots:{0:br,1:lr,2:gr}});Object.assign(br,{structure:a,memory:{array:jo},slots:{0:Ke}});Object.assign(Ke,{structure:I});Object.assign(lr,{structure:a,memory:{array:fo},slots:{0:U}});Object.assign(gr,{structure:b,memory:{array:So},slots:{0:pr}});Object.assign(pr,{structure:j,memory:{array:zo}});Object.assign(Or,{memory:{array:Me},slots:{0:jr}});Object.assign(jr,{structure:gt,memory:{array:Me},slots:{0:fr}});Object.assign(fr,{structure:x,memory:{array:Me,offset:0,length:8},slots:{0:De}});Object.assign(Sr,{memory:{array:Lr},slots:{0:zr}});Object.assign(zr,{structure:k,memory:{array:Lr,offset:0,length:8},slots:{0:_e}});Object.assign(_e,{structure:pt,memory:{array:wo},reloc:0});Object.assign(wr,{slots:{0:Ar,1:Ur,2:hr}});Object.assign(Ar,{structure:a,memory:{array:Ao},slots:{0:Ke}});Object.assign(Ur,{structure:a,memory:{array:Uo},slots:{0:dr}});Object.assign(dr,{structure:At});Object.assign(hr,{structure:b,memory:{array:ho},slots:{0:Vr}});Object.assign(Vr,{structure:j,memory:{array:Vo}});Object.assign(Pr,{memory:{array:Te},slots:{0:Ir}});Object.assign(Ir,{structure:Ot,memory:{array:Te},slots:{0:xr}});Object.assign(xr,{structure:k,memory:{array:Te,offset:0,length:8},slots:{0:_e}});Object.assign(Rr,{memory:{array:Po}});Object.assign(kr,{slots:{0:Fe}});Object.assign(Fe,{structure:P,memory:{array:Io}});Object.assign(qr,{slots:{0:Fe}});Object.assign(vr,{slots:{0:Cr,1:Dr,2:_r,3:Mr}});Object.assign(Cr,{structure:a,memory:{array:xo},slots:{0:Er}});Object.assign(Er,{structure:wt});Object.assign(Dr,{structure:a,memory:{array:Ro},slots:{0:Kr}});Object.assign(Kr,{structure:R});Object.assign(_r,{structure:a,memory:{array:ko},slots:{0:Fr}});Object.assign(Fr,{structure:q});Object.assign(Mr,{structure:a,memory:{array:qo},slots:{0:Tr}});Object.assign(Tr,{structure:v});const vo={argStruct:dt,thunkId:2,name:"createOutput"},Co={argStruct:Vt,thunkId:3,name:"createPartialOutput"};Object.assign(a,{...s,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:a}],methods:[]}});Object.assign(S,{...s,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(_,{...s,type:1,name:"[3:0]u8",length:3,byteSize:4,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(F,{...s,type:13,name:"*const [3:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[]}});Object.assign(M,{...s,type:1,name:"[9:0]u8",length:9,byteSize:10,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(T,{...s,type:13,name:"*const [9:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(b,{...s,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:b}],methods:[]}});Object.assign(j,{...s,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:j}],methods:[]}});Object.assign($,{...s,type:1,name:"[13:0]u8",length:13,byteSize:14,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(L,{...s,type:13,name:"*const [13:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[]}});Object.assign(e,{...s,name:"comptime_float",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:e}],methods:[]}});Object.assign(r,{...s,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[]}});Object.assign(B,{...s,type:2,name:"Struct2413995998",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e},{...t,type:9,slot:2,name:"2",structure:e}],methods:[],template:Be}});Object.assign(p,{...s,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[]}});Object.assign(f,{...s,type:15,name:"@Vector(3, f32)",length:3,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:p}],methods:[]}});Object.assign(G,{...s,type:2,name:"Struct3339043447",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"defaultValue",structure:B}],methods:[],template:Ne}});Object.assign(H,{...s,type:2,name:"Struct3364157651",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e},{...t,type:9,slot:2,name:"2",structure:e}],methods:[],template:Qe}});Object.assign(J,{...s,type:2,name:"Struct1790493901",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"defaultValue",structure:H}],methods:[],template:Ze}});Object.assign(N,{...s,type:2,name:"Struct1971247637",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e},{...t,type:9,slot:2,name:"2",structure:e}],methods:[],template:ts}});Object.assign(Q,{...s,type:2,name:"Struct3044932212",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"defaultValue",structure:N}],methods:[],template:as}});Object.assign(W,{...s,type:2,name:"Struct738220547",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:ns}});Object.assign(X,{...s,type:2,name:"Struct3183750520",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:cs}});Object.assign(Y,{...s,type:2,name:"Struct2270904247",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e}],methods:[],template:ys}});Object.assign(Z,{...s,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:p}],methods:[]}});Object.assign(tt,{...s,type:2,name:"Struct2528517832",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"minValue",structure:W},{...t,type:9,slot:2,name:"maxValue",structure:X},{...t,type:9,slot:3,name:"defaultValue",structure:Y}],methods:[],template:gs}});Object.assign(et,{...s,type:2,name:"Struct2278674025",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e},{...t,type:9,slot:2,name:"2",structure:e}],methods:[],template:Os}});Object.assign(st,{...s,type:2,name:"Struct2291667099",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e},{...t,type:9,slot:2,name:"2",structure:e}],methods:[],template:zs}});Object.assign(rt,{...s,type:2,name:"Struct3406025371",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:e},{...t,type:9,slot:1,name:"1",structure:e},{...t,type:9,slot:2,name:"2",structure:e}],methods:[],template:ds}});Object.assign(at,{...s,type:2,name:"Struct3588131750",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"minValue",structure:et},{...t,type:9,slot:2,name:"maxValue",structure:st},{...t,type:9,slot:3,name:"defaultValue",structure:rt}],methods:[],template:Is}});Object.assign(nt,{...s,type:2,name:"Struct1513800185",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"minValue",structure:e},{...t,type:9,slot:2,name:"maxValue",structure:e},{...t,type:9,slot:3,name:"defaultValue",structure:e}],methods:[],template:xs}});Object.assign(ot,{...s,type:2,name:"Struct2526775591",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"minValue",structure:e},{...t,type:9,slot:2,name:"maxValue",structure:e},{...t,type:9,slot:3,name:"defaultValue",structure:e}],methods:[],template:vs}});Object.assign(it,{...s,type:2,name:"Struct1450688458",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:a},{...t,type:9,slot:1,name:"minValue",structure:e},{...t,type:9,slot:2,name:"maxValue",structure:e},{...t,type:9,slot:3,name:"defaultValue",structure:e}],methods:[],template:Ks}});Object.assign(ct,{...s,type:2,name:"Struct583201854",align:1,instance:{members:[{...t,type:9,slot:0,name:"xAxisColor",structure:G},{...t,type:9,slot:1,name:"yAxisColor",structure:J},{...t,type:9,slot:2,name:"zAxisColor",structure:Q},{...t,type:9,slot:3,name:"center",structure:tt},{...t,type:9,slot:4,name:"spin",structure:at},{...t,type:9,slot:5,name:"plunge",structure:nt},{...t,type:9,slot:6,name:"cellDensity",structure:ot},{...t,type:9,slot:7,name:"radius",structure:it}],methods:[],template:Ts}});Object.assign(ut,{...s,type:2,name:"Struct3196272719",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:b}],methods:[],template:$s}});Object.assign(mt,{...s,type:2,name:"Struct412823483",align:1,instance:{members:[{...t,type:9,slot:0,name:"unused",structure:ut}],methods:[],template:Bs}});Object.assign(yt,{...s,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:b}],methods:[],template:Gs}});Object.assign(bt,{...s,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:9,slot:0,name:"dst",structure:yt}],methods:[],template:Js}});Object.assign(wt,{...s,type:2,name:"cubes-03.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:F},{...t,type:9,slot:1,name:"vendor",structure:T},{...t,type:9,slot:2,name:"version",structure:b},{...t,type:9,slot:3,name:"description",structure:L},{...t,type:9,slot:4,name:"parameters",structure:ct},{...t,type:9,slot:5,name:"inputImages",structure:mt},{...t,type:9,slot:6,name:"outputImages",structure:bt}],methods:[],template:Ns}});Object.assign(I,{...s,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(lt,{...s,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(x,{...s,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:lt}],methods:[]}});Object.assign(y,{...s,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[]}});Object.assign(O,{...s,type:11,name:"cubes-03.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:O},{...t,type:9,slot:1,name:"display-p3",structure:O}],methods:[],template:or}});Object.assign(V,{...s,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(gt,{...s,type:2,name:"cubes-03.Image(u8,3,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:x},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:ur},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:a},{...t,type:9,slot:1,name:"FPixel",structure:a},{...t,type:9,slot:2,name:"channels",structure:b}],methods:[],template:yr}});Object.assign(R,{...s,type:2,name:"cubes-03.KernelInput(u8,cubes-03.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"unused",structure:gt}],methods:[],template:Or}});Object.assign(pt,{...s,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(k,{...s,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:pt}],methods:[]}});Object.assign(At,{...s,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:p}],methods:[]}});Object.assign(Ot,{...s,type:2,name:"cubes-03.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:k},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:Sr},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:a},{...t,type:9,slot:1,name:"FPixel",structure:a},{...t,type:9,slot:2,name:"channels",structure:b}],methods:[],template:wr}});Object.assign(q,{...s,type:2,name:"cubes-03.KernelOutput(u8,cubes-03.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:Ot}],methods:[],template:Pr}});Object.assign(v,{...s,type:2,name:"cubes-03.KernelParameters(cubes-03.kernel)",byteSize:96,align:16,instance:{members:[{...t,type:7,bitOffset:0,bitSize:96,byteSize:16,slot:0,name:"xAxisColor",structure:f},{...t,type:7,bitOffset:128,bitSize:96,byteSize:16,slot:1,name:"yAxisColor",structure:f},{...t,type:7,bitOffset:256,bitSize:96,byteSize:16,slot:2,name:"zAxisColor",structure:f},{...t,type:7,bitOffset:512,bitSize:64,byteSize:8,slot:3,name:"center",structure:Z},{...t,type:7,bitOffset:384,bitSize:96,byteSize:16,slot:4,name:"spin",structure:f},{...t,type:4,bitOffset:576,bitSize:32,byteSize:4,slot:5,name:"plunge",structure:p},{...t,type:4,bitOffset:608,bitSize:32,byteSize:4,slot:6,name:"cellDensity",structure:p},{...t,type:4,bitOffset:640,bitSize:32,byteSize:4,slot:7,name:"radius",structure:p}],methods:[],template:Rr}});Object.assign(P,{...s,type:10,name:"@typeInfo(@typeInfo(@TypeOf(cubes-03.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:P}],methods:[],template:kr}});Object.assign(Ut,{...s,type:9,name:"ErrorSet2391670188!cubes-03.KernelOutput(u8,cubes-03.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:q},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:P}],methods:[]}});Object.assign(dt,{...s,type:5,name:"createOutput",byteSize:160,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:768,bitSize:32,byteSize:4,slot:3,name:"0",structure:y},{...t,type:3,isRequired:!0,bitOffset:800,bitSize:32,byteSize:4,slot:4,name:"1",structure:y},{...t,type:7,isRequired:!0,bitOffset:832,bitSize:192,byteSize:24,slot:0,name:"2",structure:R},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:768,byteSize:96,slot:1,name:"3",structure:v},{...t,type:7,isRequired:!0,bitOffset:1024,bitSize:224,byteSize:28,slot:2,name:"retval",structure:Ut}],methods:[]}});Object.assign(K,{...s,type:10,name:"@typeInfo(@typeInfo(@TypeOf(cubes-03.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:K}],methods:[],template:qr}});Object.assign(ht,{...s,type:9,name:"ErrorSet1835158167!cubes-03.KernelOutput(u8,cubes-03.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:q},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:K}],methods:[]}});Object.assign(Vt,{...s,type:5,name:"createPartialOutput",byteSize:176,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:768,bitSize:32,byteSize:4,slot:3,name:"0",structure:y},{...t,type:3,isRequired:!0,bitOffset:800,bitSize:32,byteSize:4,slot:4,name:"1",structure:y},{...t,type:3,isRequired:!0,bitOffset:832,bitSize:32,byteSize:4,slot:5,name:"2",structure:y},{...t,type:3,isRequired:!0,bitOffset:864,bitSize:32,byteSize:4,slot:6,name:"3",structure:y},{...t,type:7,isRequired:!0,bitOffset:896,bitSize:192,byteSize:24,slot:0,name:"4",structure:R},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:768,byteSize:96,slot:1,name:"5",structure:v},{...t,type:7,isRequired:!0,bitOffset:1088,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ht}],methods:[]}});Object.assign(Pt,{...s,type:2,name:"cubes-03",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:a},{...t,type:9,slot:1,name:"Input",structure:a},{...t,type:9,slot:2,name:"Output",structure:a},{...t,type:9,slot:3,name:"Parameters",structure:a}],methods:[vo,Co],template:vr}});const Eo=[a,S,_,F,M,T,b,j,$,L,e,r,B,p,f,G,H,J,N,Q,W,X,Y,Z,tt,et,st,rt,at,nt,ot,it,ct,ut,mt,yt,bt,wt,I,lt,x,y,O,V,gt,R,pt,k,At,Ot,q,v,P,Ut,dt,K,ht,Vt,Pt],Do=Pt,Ko={runtimeSafety:!1,littleEndian:!0},ft=ya();ft.getControlObject();ft.recreateStructures(Eo,Ko);const _o=(async()=>{const c=new URL("cubes-03-345cad48.wasm",import.meta.url).href;return fetch(c)})();ft.loadModule(_o);ft.linkVariables(!0);const{constructor:Fo}=Do,{createPartialOutput:Mo,Input:To,kernel:zt}=Fo;function $o(c,u,o,n,i={},z={}){const w=[];for(const[l]of zt.inputImages)w.push(l);const d=[];for(const[l]of zt.outputImages)d.push(l);if(Array.isArray(i)){const l=i;i={};for(const[g,A]of w.entries())i[A]=l[g]}const m=new To(void 0),C=[];let h;for(const l of w){let g=i[l];if(g||(w.length===1&&["data","width","height"].every(A=>!!i[A])?g=i:C.push(l)),m[l]=g,h){if(g.colorSpace!==h)throw new Error(`Input images must all use the same color space: ${h}`)}else h=g.colorSpace}if(C.length>0)throw new Error(`Missing input image${C.length>1?"s":""}: ${C.join(", ")}`);const St=Mo(c,u,o,n,m,z),$e=l=>{const g={};for(const A of d){const{data:{typedArray:E},width:Le,height:Gr}=l[A];let D;if(typeof ImageData=="function"){const Hr=new Uint8ClampedArray(E.buffer,E.byteOffset,E.byteLength);D=new ImageData(Hr,Le,n,{colorSpace:h})}else D={data:E,width:Le,height:Gr};if(d.length===1)return D;g[A]=D}return g};return St[Symbol.toStringTag]==="Promise"?St.then($e):$e(St)}function Lo(){const c={};for(let[u,o]of zt){if(u==="parameters"){const n={};for(const[i,z]of o){const w=n[i]={};for(let[d,m]of z)typeof m=="object"?"string"in m?m=m.string:m=Br(m):typeof m=="function"&&(m=Bo(m.name)),w[d]=m}o=n}else typeof o=="object"&&("string"in o?o=o.string:o=o.valueOf());c[u]=o}return c}function Br(c){const u=[];for(let[o,n]of c)typeof n=="object"&&(n=Br(n)),u[o]=n;return u}function Bo(c){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[c]}onmessage=c=>{const[u,o,...n]=c.data;Go(u,n).then(([i,z])=>{postMessage([u,o,i],{transfer:z})}).catch(i=>{postMessage(["error",o,i])})};async function Go(c,u){switch(c){case"getKernelInfo":return[Lo(...u)];case"createPartialImageData":const n=await $o(...u),i=[];if("data"in n&&"width"in n&&"height"in n)i.push(n.data.buffer);else for(const z of Object.entries(n))i.push(n.data.buffer);return[n,i];default:throw new Error(`Unknown function: ${c}`)}}
