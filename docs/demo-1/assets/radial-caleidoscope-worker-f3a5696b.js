import{u as ls,a as ps,b as gs,c as Os,d as fs,e as Ss,f as js,g as ds,h as zs,i as hs,j as ws,k as As,l as Us,m as Vs,n as Ps,o as Rs,p as ks,q as qs}from"./index-33238b17.js";ls();As();Us();ps();gs();Vs();Ps();Rs();ks();Os();fs();Ss();js();qs();ds();zs();hs();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},f={},M={},T={},D={},F={},p={},S={},_={},$={},r={},m={},u={},L={},B={},G={},H={},J={},N={},Q={},W={},A={},X={},Y={},ot={},R={},Z={},k={},c={},O={},P={},ct={},tt={},q={},et={},I={},st={},v={},E={},h={},ut={},mt={},w={},yt={},bt={},lt={},Ht={},pt={},gt={},Ot={},Jt={},ft={},St={},Nt={},Qt={},jt={},dt={},Wt={},zt={},ht={},Xt={},Yt={},wt={},Zt={},At={},te={},ee={},Ut={},se={},Vt={},re={},ae={},Pt={},ne={},Rt={},ie={},oe={},kt={},ce={},qt={},It={},vt={},ue={},Et={},xt={},Kt={},me={},rt={},ye={},be={},Ct={},le={},Mt={},pe={},ge={},Oe={},fe={},Se={},je={},de={},ze={},he={},we={},Ae={},Ue={},Ve={},Pe={},Re={},ke={},qe={},Tt={},Ie={},ve={},Dt={},Ee={},Ft={},xe={},Ke={},Ce={},Me={},Te={},De={},Fe={},_t={},_e={},$e={},Le={},Be={},Ge={},He={},Je={},Ne={},Qe={},We={},Xe={},Ye={},Ze={},ts={},es={},ss={},rs={},as={},ns={},is={},os={},cs={},Is=new Uint8Array,vs=new Uint8Array,Es=new Uint8Array([45,67,28,235,226,54,26,63]),xs=new Uint8Array([216,15,73,64]),Ks=new Uint8Array,Cs=new Uint8Array([83,180,195,118,47,27,228,63]),Ms=new Uint8Array,Ts=new Uint8Array,Ds=new Uint8Array([0,0,0,0,0,0,0,0]),Fs=new Uint8Array([219,15,201,64]),_s=new Uint8Array,$s=new Uint8Array([45,67,28,235,226,54,26,63]),Ls=new Uint8Array,Bs=new Uint8Array([123,20,174,71,225,122,132,63]),Gs=new Uint8Array,Hs=new Uint8Array([123,20,174,71,225,122,132,63]),Js=new Uint8Array,Ns=new Uint8Array([92,143,194,245,40,0,127,64]),Qs=new Uint8Array,Ws=new Uint8Array([92,143,194,245,40,0,127,64]),Xs=new Uint8Array,Ys=new Uint8Array([184,30,133,235,81,192,98,64]),Zs=new Uint8Array,tr=new Uint8Array([184,30,133,235,81,192,98,64]),er=new Uint8Array,sr=new Uint8Array,rr=new Uint8Array,ar=new Uint8Array,nr=new Uint8Array,ir=new Uint8Array,or=new Uint8Array,cr=new Uint8Array,ur=new Uint8Array([4]),mr=new Uint8Array,yr=new Uint8Array,br=new Uint8Array([102,16,0,1]),lr=new Uint8Array([82,97,100,105,97,108,67,97,108,101,105,100,111,115,99,111,112,101,0]),pr=new Uint8Array([132,16,0,1]),gr=new Uint8Array([80,101,116,114,105,32,76,101,115,107,105,110,101,110,0]),Or=new Uint8Array,fr=new Uint8Array([1]),Sr=new Uint8Array([164,16,0,1]),jr=new Uint8Array([67,97,108,101,105,100,111,115,99,111,112,101,32,45,101,102,102,101,99,116,32,102,111,114,32,114,97,100,105,97,108,32,114,101,102,108,101,99,116,105,111,110,0]),dr=new Uint8Array,zr=new Uint8Array,hr=new Uint8Array,wr=new Uint8Array([0]),Ar=new Uint8Array([1]),us=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ur=new Uint8Array,Vr=new Uint8Array,Pr=new Uint8Array,Rr=new Uint8Array,kr=new Uint8Array([4]),$t=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ms=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),qr=new Uint8Array,Ir=new Uint8Array,vr=new Uint8Array,Er=new Uint8Array,xr=new Uint8Array([4]),Lt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Kr=new Uint8Array([143,2,22,67,143,2,22,67,124,217,32,63,23,183,209,56]),Cr=new Uint8Array([27,0]),Mr=new Uint8Array([27,0]),Tr=new Uint8Array,Dr=new Uint8Array,Fr=new Uint8Array,_r=new Uint8Array;Object.assign(Ht,{slots:{0:pt,1:Ot,2:ft,3:St}});Object.assign(pt,{structure:s,memory:{array:Is},const:!0,slots:{0:gt}});Object.assign(gt,{structure:m});Object.assign(Ot,{structure:r,memory:{array:vs},const:!0,slots:{0:Jt}});Object.assign(Jt,{structure:u,memory:{array:Es},const:!0});Object.assign(ft,{structure:m,memory:{array:xs},const:!0});Object.assign(St,{structure:r,memory:{array:Ks},const:!0,slots:{0:Nt}});Object.assign(Nt,{structure:u,memory:{array:Cs},const:!0});Object.assign(Qt,{slots:{0:jt,1:dt,2:zt,3:ht}});Object.assign(jt,{structure:s,memory:{array:Ms},const:!0,slots:{0:gt}});Object.assign(dt,{structure:r,memory:{array:Ts},const:!0,slots:{0:Wt}});Object.assign(Wt,{structure:u,memory:{array:Ds},const:!0});Object.assign(zt,{structure:m,memory:{array:Fs},const:!0});Object.assign(ht,{structure:r,memory:{array:_s},const:!0,slots:{0:Xt}});Object.assign(Xt,{structure:u,memory:{array:$s},const:!0});Object.assign(Yt,{slots:{0:wt,1:At}});Object.assign(wt,{structure:r,memory:{array:Ls},const:!0,slots:{0:Zt}});Object.assign(Zt,{structure:u,memory:{array:Bs},const:!0});Object.assign(At,{structure:r,memory:{array:Gs},const:!0,slots:{0:te}});Object.assign(te,{structure:u,memory:{array:Hs},const:!0});Object.assign(ee,{slots:{0:Ut,1:Vt}});Object.assign(Ut,{structure:r,memory:{array:Js},const:!0,slots:{0:se}});Object.assign(se,{structure:u,memory:{array:Ns},const:!0});Object.assign(Vt,{structure:r,memory:{array:Qs},const:!0,slots:{0:re}});Object.assign(re,{structure:u,memory:{array:Ws},const:!0});Object.assign(ae,{slots:{0:Pt,1:Rt}});Object.assign(Pt,{structure:r,memory:{array:Xs},const:!0,slots:{0:ne}});Object.assign(ne,{structure:u,memory:{array:Ys},const:!0});Object.assign(Rt,{structure:r,memory:{array:Zs},const:!0,slots:{0:ie}});Object.assign(ie,{structure:u,memory:{array:tr},const:!0});Object.assign(oe,{slots:{0:kt,1:qt,2:It,3:vt}});Object.assign(kt,{structure:s,memory:{array:er},const:!0,slots:{0:ce}});Object.assign(ce,{structure:N});Object.assign(qt,{structure:G,memory:{array:sr},const:!0,slots:{0:wt,1:At}});Object.assign(It,{structure:H,memory:{array:rr},const:!0,slots:{0:Ut,1:Vt}});Object.assign(vt,{structure:J,memory:{array:ar},const:!0,slots:{0:Pt,1:Rt}});Object.assign(ue,{slots:{0:Et,1:xt,2:Kt}});Object.assign(Et,{structure:L,memory:{array:nr},const:!0,slots:{0:pt,1:Ot,2:ft,3:St}});Object.assign(xt,{structure:B,memory:{array:ir},const:!0,slots:{0:jt,1:dt,2:zt,3:ht}});Object.assign(Kt,{structure:Q,memory:{array:or},const:!0,slots:{0:kt,1:qt,2:It,3:vt}});Object.assign(me,{slots:{0:rt}});Object.assign(rt,{structure:p,memory:{array:cr},const:!0,slots:{0:ye}});Object.assign(ye,{structure:S,memory:{array:ur},const:!0});Object.assign(be,{slots:{0:Ct}});Object.assign(Ct,{structure:A,memory:{array:mr},const:!0,slots:{0:rt}});Object.assign(le,{slots:{0:Mt}});Object.assign(Mt,{structure:A,memory:{array:yr},const:!0,slots:{0:rt}});Object.assign(pe,{slots:{0:ge,1:fe,2:je,3:ze,4:we,5:Ae,6:Ue}});Object.assign(ge,{structure:T,memory:{array:br},const:!0,slots:{0:Oe}});Object.assign(Oe,{structure:M,memory:{array:lr},reloc:16781414});Object.assign(fe,{structure:F,memory:{array:pr},const:!0,slots:{0:Se}});Object.assign(Se,{structure:D,memory:{array:gr},reloc:16781444});Object.assign(je,{structure:p,memory:{array:Or},const:!0,slots:{0:de}});Object.assign(de,{structure:S,memory:{array:fr},const:!0});Object.assign(ze,{structure:$,memory:{array:Sr},const:!0,slots:{0:he}});Object.assign(he,{structure:_,memory:{array:jr},reloc:16781476});Object.assign(we,{structure:W,memory:{array:dr},const:!0,slots:{0:Et,1:xt,2:Kt}});Object.assign(Ae,{structure:X,memory:{array:zr},const:!0,slots:{0:Ct}});Object.assign(Ue,{structure:Y,memory:{array:hr},const:!0,slots:{0:Mt}});Object.assign(Ve,{slots:{0:Pe,1:Re}});Object.assign(Pe,{structure:O,memory:{array:wr},const:!0});Object.assign(Re,{structure:O,memory:{array:Ar},const:!0});Object.assign(ke,{memory:{array:us},slots:{0:qe}});Object.assign(qe,{structure:k,memory:{array:us,offset:0,length:8},slots:{0:Tt}});Object.assign(Tt,{structure:Z,memory:{array:Ur},reloc:0});Object.assign(Ie,{slots:{0:ve,1:Ee,2:xe}});Object.assign(ve,{structure:s,memory:{array:Vr},const:!0,slots:{0:Dt}});Object.assign(Dt,{structure:R});Object.assign(Ee,{structure:s,memory:{array:Pr},const:!0,slots:{0:Ft}});Object.assign(Ft,{structure:ct});Object.assign(xe,{structure:p,memory:{array:Rr},const:!0,slots:{0:Ke}});Object.assign(Ke,{structure:S,memory:{array:kr},const:!0});Object.assign(Ce,{memory:{array:$t},slots:{0:Me}});Object.assign(Me,{structure:tt,memory:{array:$t},slots:{0:Te}});Object.assign(Te,{structure:k,memory:{array:$t,offset:0,length:8},slots:{0:Tt}});Object.assign(De,{memory:{array:ms},slots:{0:Fe}});Object.assign(Fe,{structure:I,memory:{array:ms,offset:0,length:8},slots:{0:_t}});Object.assign(_t,{structure:et,memory:{array:qr},reloc:0});Object.assign(_e,{slots:{0:$e,1:Le,2:Be}});Object.assign($e,{structure:s,memory:{array:Ir},const:!0,slots:{0:Dt}});Object.assign(Le,{structure:s,memory:{array:vr},const:!0,slots:{0:Ft}});Object.assign(Be,{structure:p,memory:{array:Er},const:!0,slots:{0:Ge}});Object.assign(Ge,{structure:S,memory:{array:xr},const:!0});Object.assign(He,{memory:{array:Lt},slots:{0:Je}});Object.assign(Je,{structure:st,memory:{array:Lt},slots:{0:Ne}});Object.assign(Ne,{structure:I,memory:{array:Lt,offset:0,length:8},slots:{0:_t}});Object.assign(Qe,{memory:{array:Kr}});Object.assign(We,{slots:{0:Xe}});Object.assign(Xe,{structure:h,memory:{array:Cr},const:!0});Object.assign(Ye,{slots:{0:Ze}});Object.assign(Ze,{structure:w,memory:{array:Mr},const:!0});Object.assign(ts,{slots:{0:es,1:rs,2:ns,3:os}});Object.assign(es,{structure:s,memory:{array:Tr},const:!0,slots:{0:ss}});Object.assign(ss,{structure:ot});Object.assign(rs,{structure:s,memory:{array:Dr},const:!0,slots:{0:as}});Object.assign(as,{structure:q});Object.assign(ns,{structure:s,memory:{array:Fr},const:!0,slots:{0:is}});Object.assign(is,{structure:v});Object.assign(os,{structure:s,memory:{array:_r},const:!0,slots:{0:cs}});Object.assign(cs,{structure:E});const $r={argStruct:mt,thunkId:2,name:"createOutput"},Lr={argStruct:bt,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(f,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(M,{...e,type:1,name:"[18:0]u8",length:18,byteSize:19,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(T,{...e,type:13,name:"*const [18:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(D,{...e,type:1,name:"[14:0]u8",length:14,byteSize:15,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(F,{...e,type:13,name:"*const [14:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:D}],methods:[]}});Object.assign(p,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:p}],methods:[]}});Object.assign(S,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(_,{...e,type:1,name:"[42:0]u8",length:42,byteSize:43,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign($,{...e,type:13,name:"*const [42:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[]}});Object.assign(r,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(m,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[]}});Object.assign(u,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:u}],methods:[]}});Object.assign(L,{...e,type:2,name:"Struct3463683009",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:r},{...t,type:7,slot:2,name:"maxValue",structure:m},{...t,type:7,slot:3,name:"defaultValue",structure:r}],methods:[],template:Ht}});Object.assign(B,{...e,type:2,name:"Struct577217546",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:r},{...t,type:7,slot:2,name:"maxValue",structure:m},{...t,type:7,slot:3,name:"defaultValue",structure:r}],methods:[],template:Qt}});Object.assign(G,{...e,type:2,name:"Struct3476006596",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:r},{...t,type:7,slot:1,name:"1",structure:r}],methods:[],template:Yt}});Object.assign(H,{...e,type:2,name:"Struct145109186",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:r},{...t,type:7,slot:1,name:"1",structure:r}],methods:[],template:ee}});Object.assign(J,{...e,type:2,name:"Struct4089937064",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:r},{...t,type:7,slot:1,name:"1",structure:r}],methods:[],template:ae}});Object.assign(N,{...e,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:m}],methods:[]}});Object.assign(Q,{...e,type:2,name:"Struct4044811020",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:G},{...t,type:7,slot:2,name:"maxValue",structure:H},{...t,type:7,slot:3,name:"defaultValue",structure:J}],methods:[],template:oe}});Object.assign(W,{...e,type:2,name:"Struct829271195",align:1,instance:{members:[{...t,type:7,slot:0,name:"angle",structure:L},{...t,type:7,slot:1,name:"direction",structure:B},{...t,type:7,slot:2,name:"basepoint",structure:Q}],methods:[],template:ue}});Object.assign(A,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:p}],methods:[],template:me}});Object.assign(X,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:7,slot:0,name:"src",structure:A}],methods:[],template:be}});Object.assign(Y,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:A}],methods:[],template:le}});Object.assign(ot,{...e,type:2,name:"radial-caleidoscope.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:T},{...t,type:7,slot:1,name:"vendor",structure:F},{...t,type:7,slot:2,name:"version",structure:p},{...t,type:7,slot:3,name:"description",structure:$},{...t,type:7,slot:4,name:"parameters",structure:W},{...t,type:7,slot:5,name:"inputImages",structure:X},{...t,type:7,slot:6,name:"outputImages",structure:Y}],methods:[],template:pe}});Object.assign(R,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(Z,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(k,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:Z}],methods:[]}});Object.assign(c,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[]}});Object.assign(O,{...e,type:11,name:"radial-caleidoscope.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:O}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:O},{...t,type:7,slot:1,name:"display-p3",structure:O}],methods:[],template:Ve}});Object.assign(P,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(ct,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:m}],methods:[]}});Object.assign(tt,{...e,type:2,name:"radial-caleidoscope.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:k},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:ke},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:p}],methods:[],template:Ie}});Object.assign(q,{...e,type:2,name:"radial-caleidoscope.KernelInput(u8,radial-caleidoscope.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:tt}],methods:[],template:Ce}});Object.assign(et,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(I,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:et}],methods:[]}});Object.assign(st,{...e,type:2,name:"radial-caleidoscope.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:I},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:De},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:p}],methods:[],template:_e}});Object.assign(v,{...e,type:2,name:"radial-caleidoscope.KernelOutput(u8,radial-caleidoscope.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:st}],methods:[],template:He}});Object.assign(E,{...e,type:2,name:"radial-caleidoscope.KernelParameters(radial-caleidoscope.kernel)",byteSize:16,align:8,instance:{members:[{...t,type:4,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"angle",structure:m},{...t,type:4,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"direction",structure:m},{...t,type:5,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"basepoint",structure:N}],methods:[],template:Qe}});Object.assign(h,{...e,type:10,name:"ErrorSet1683846215",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:h}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:h}],methods:[],template:We}});Object.assign(ut,{...e,type:9,name:"ErrorSet1683846215!radial-caleidoscope.KernelOutput(u8,radial-caleidoscope.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:h}],methods:[]}});Object.assign(mt,{...e,type:5,name:"createOutput",byteSize:80,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"0",structure:c},{...t,type:3,isRequired:!0,bitOffset:160,bitSize:32,byteSize:4,slot:4,name:"1",structure:c},{...t,type:5,isRequired:!0,bitOffset:192,bitSize:192,byteSize:24,slot:0,name:"2",structure:q},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:128,byteSize:16,slot:1,name:"3",structure:E},{...t,type:5,isRequired:!0,bitOffset:384,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ut}],methods:[]}});Object.assign(w,{...e,type:10,name:"ErrorSet539585717",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:w}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:w}],methods:[],template:Ye}});Object.assign(yt,{...e,type:9,name:"ErrorSet539585717!radial-caleidoscope.KernelOutput(u8,radial-caleidoscope.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:w}],methods:[]}});Object.assign(bt,{...e,type:5,name:"createPartialOutput",byteSize:88,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"0",structure:c},{...t,type:3,isRequired:!0,bitOffset:160,bitSize:32,byteSize:4,slot:4,name:"1",structure:c},{...t,type:3,isRequired:!0,bitOffset:192,bitSize:32,byteSize:4,slot:5,name:"2",structure:c},{...t,type:3,isRequired:!0,bitOffset:224,bitSize:32,byteSize:4,slot:6,name:"3",structure:c},{...t,type:5,isRequired:!0,bitOffset:256,bitSize:192,byteSize:24,slot:0,name:"4",structure:q},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:128,byteSize:16,slot:1,name:"5",structure:E},{...t,type:5,isRequired:!0,bitOffset:448,bitSize:224,byteSize:28,slot:2,name:"retval",structure:yt}],methods:[]}});Object.assign(lt,{...e,type:2,name:"radial-caleidoscope",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:s},{...t,type:7,slot:1,name:"Input",structure:s},{...t,type:7,slot:2,name:"Output",structure:s},{...t,type:7,slot:3,name:"Parameters",structure:s}],methods:[$r,Lr],template:ts}});const Br=[s,f,M,T,D,F,p,S,_,$,r,m,u,L,B,G,H,J,N,Q,W,A,X,Y,ot,R,Z,k,c,O,P,ct,tt,q,et,I,st,v,E,h,ut,mt,w,yt,bt,lt],Gr=lt,Hr={runtimeSafety:!1,littleEndian:!0},at=ws();at.getSpecialExports();at.recreateStructures(Br,Hr);const Jr=(async()=>{const i=new URL("radial-caleidoscope-1c5052ef.wasm",import.meta.url).href;return fetch(i)})();at.loadModule(Jr);at.linkVariables(!0);const{constructor:Nr}=Gr,{createPartialOutput:Qr,Input:Wr,kernel:it}=Nr;function Xr(i,y,o,n,a={},j={}){const d=[];for(const[l]of it.inputImages)d.push(l);const U=[];for(const[l]of it.outputImages)U.push(l);if(Array.isArray(a)){const l=a;a={};for(const[g,z]of d.entries())a[z]=l[g]}const b=new Wr(void 0),x=[];let V;for(const l of d){let g=a[l];if(g||(d.length===1&&["data","width","height"].every(z=>!!a[z])?g=a:x.push(l)),b[l]=g,V){if(g.colorSpace!==V)throw new Error(`Input images must all use the same color space: ${V}`)}else V=g.colorSpace}if(x.length>0)throw new Error(`Missing input image${x.length>1?"s":""}: ${x.join(", ")}`);const nt=Qr(i,y,o,n,b,j),Bt=l=>{const g={};for(const z of U){const{data:{typedArray:K},width:Gt,height:ys}=l[z];let C;if(typeof ImageData=="function"){const bs=new Uint8ClampedArray(K.buffer,K.byteOffset,K.byteLength);C=new ImageData(bs,Gt,n,{colorSpace:V})}else C={data:K,width:Gt,height:ys};if(U.length===1)return C;g[z]=C}return g};return nt[Symbol.toStringTag]==="Promise"?nt.then(Bt):Bt(nt)}function Yr(){const i={};for(let[y,o]of it){if(y==="parameters"){const n={};for(const[a,j]of o){const d=n[a]={};for(let[U,b]of j)typeof b=="object"?b=b.string??b.valueOf():typeof b=="function"&&(b=Zr(b.name)),d[U]=b}o=n}else typeof o=="object"&&(o=o.string??o.valueOf());i[y]=o}return i}function Zr(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=async i=>{if(!Array.isArray(i.data))return;const[y,o,...n]=i.data;try{const[a,j]=await ta(y,n);postMessage([y,o,a],{transfer:j})}catch(a){postMessage(["error",o,a])}};async function ta(i,y){switch(i){case"getKernelInfo":return[Yr(...y)];case"createPartialImageData":const n=await Xr(...y),a=[];if("data"in n&&"width"in n&&"height"in n)a.push(n.data.buffer);else for(const j of Object.entries(n))a.push(n.data.buffer);return[n,a];default:throw new Error(`Unknown function: ${i}`)}}postMessage("ready");
