import{u as _e,a as Te,b as $e,c as Be,d as Le,e as Ge,f as He,g as Je,h as Ne,i as Qe,j as We,k as Xe,l as Ye,m as Ze,o as et,n as tt,p as st,q as rt}from"./index-422d9c98.js";_e();Te();$e();Be();Le();Ge();He();Je();Ne();Qe();We();Xe();Ye();Ze();et();tt();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},b={},Q={},W={},I={},X={},Y={},v={},p={},f={},Z={},ee={},x={},d={},i={},s={},te={},se={},E={},re={},K={},ae={},ne={},D={},ie={},F={},ue={},oe={},M={},le={},_={},me={},T={},ce={},ye={},$={},be={},B={},pe={},L={},q={},z={},fe={},G={},de={},H={},Ae={},O={},Se={},he={},m={},ge={},R={},ze={},J={},A={},Oe={},we={},N={},U={},j={},Ue={},je={},Pe={},ke={},Ve={},Ce={},Ie={};Object.assign(b,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:5});Object.assign(Q,{...t,type:1,name:"[13:0]u8",length:13,byteSize:14,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:4});Object.assign(W,{...t,type:11,name:"*const [13:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[],template:null},slot:3});Object.assign(I,{...t,type:11,name:"*const *const [13:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:2});Object.assign(X,{...t,type:1,name:"[14:0]u8",length:14,byteSize:15,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:8});Object.assign(Y,{...t,type:11,name:"*const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:7});Object.assign(v,{...t,type:11,name:"*const *const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[],template:null},slot:6});Object.assign(p,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[],template:null},slot:10});Object.assign(f,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:p}],methods:[],template:null},slot:9});Object.assign(Z,{...t,type:1,name:"[11:0]u8",length:11,byteSize:12,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:13});Object.assign(ee,{...t,type:11,name:"*const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:12});Object.assign(x,{...t,type:11,name:"*const *const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:11});Object.assign(d,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:d}],methods:[],template:null},slot:32});Object.assign(i,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:i}],methods:[],template:null},slot:50});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:i}],methods:[],template:null},slot:49});Object.assign(te,{...t,type:1,name:"[12:0]u8",length:12,byteSize:13,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:53});Object.assign(se,{...t,type:11,name:"*const [12:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:52});Object.assign(E,{...t,type:11,name:"*const *const [12:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:51});const at=new Uint8Array([]),nt=new Uint8Array([24,249,15,0]),it=new Uint8Array([0,0,0,0,0,0,240,63]),ut=new Uint8Array([80,249,15,0]),ot=new Uint8Array([0,0,0,0,0,0,89,64]),lt=new Uint8Array([104,249,15,0]),mt=new Uint8Array([0,0,0,0,0,0,62,64]),ct=new Uint8Array([120,249,15,0]),yt=new Uint8Array([218,33,16,0]),bt=new Uint8Array([80,97,116,116,101,114,110,32,83,105,122,101,0]);Object.assign(re,{...t,type:2,name:"Struct0010",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:d},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:E}],methods:[],template:{memory:{array:at},slots:{0:{structure:s,memory:{array:nt},slots:{0:{structure:i,memory:{array:it}}}},1:{structure:s,memory:{array:ut},slots:{0:{structure:i,memory:{array:ot}}}},2:{structure:s,memory:{array:lt},slots:{0:{structure:i,memory:{array:mt}}}},3:{structure:E,memory:{array:ct},slots:{0:{structure:se,memory:{array:yt},slots:{0:{structure:te,memory:{array:bt},address:1057242}}}}}}}},slot:39});Object.assign(K,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:38});Object.assign(ae,{...t,type:1,name:"[43:0]u8",length:43,byteSize:44,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:56});Object.assign(ne,{...t,type:11,name:"*const [43:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:55});Object.assign(D,{...t,type:11,name:"*const *const [43:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:54});const pt=new Uint8Array([]),ft=new Uint8Array([24,249,15,0]),dt=new Uint8Array([0,0,0,0,0,0,0,0]),St=new Uint8Array([80,249,15,0]),ht=new Uint8Array([0,0,0,0,0,0,240,63]),gt=new Uint8Array([104,249,15,0]),zt=new Uint8Array([225,122,20,174,71,225,218,63]),Ot=new Uint8Array([120,249,15,0]),wt=new Uint8Array([174,33,16,0]),Rt=new Uint8Array([82,97,100,105,117,115,58,32,104,111,119,32,109,117,99,104,32,97,32,100,105,115,107,115,32,102,105,108,108,115,32,117,112,32,105,116,115,32,115,112,97,99,101,0]);Object.assign(ie,{...t,type:2,name:"Struct0011",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:d},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:D}],methods:[],template:{memory:{array:pt},slots:{0:{structure:s,memory:{array:ft},slots:{0:{structure:i,memory:{array:dt}}}},1:{structure:s,memory:{array:St},slots:{0:{structure:i,memory:{array:ht}}}},2:{structure:s,memory:{array:gt},slots:{0:{structure:i,memory:{array:zt}}}},3:{structure:D,memory:{array:Ot},slots:{0:{structure:ne,memory:{array:wt},slots:{0:{structure:ae,memory:{array:Rt},address:1057198}}}}}}}},slot:41});Object.assign(F,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:40});Object.assign(ue,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:d}],methods:[],template:null},slot:33});const qt=new Uint8Array([]),At=new Uint8Array([136,249,15,0]),Ut=new Uint8Array([0,0,0,0,0,0,105,192]),jt=new Uint8Array([48,250,15,0]),Pt=new Uint8Array([0,0,0,0,0,0,105,192]);Object.assign(oe,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:qt},slots:{0:{structure:s,memory:{array:At},slots:{0:{structure:i,memory:{array:Ut}}}},1:{structure:s,memory:{array:jt},slots:{0:{structure:i,memory:{array:Pt}}}}}}},slot:58});Object.assign(M,{...t,type:11,name:"Struct0014",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:57});const kt=new Uint8Array([]),Vt=new Uint8Array([136,249,15,0]),Ct=new Uint8Array([0,0,0,0,0,0,137,64]),It=new Uint8Array([48,250,15,0]),vt=new Uint8Array([0,0,0,0,0,64,127,64]);Object.assign(le,{...t,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:kt},slots:{0:{structure:s,memory:{array:Vt},slots:{0:{structure:i,memory:{array:Ct}}}},1:{structure:s,memory:{array:It},slots:{0:{structure:i,memory:{array:vt}}}}}}},slot:60});Object.assign(_,{...t,type:11,name:"Struct0015",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:59});const xt=new Uint8Array([]),Et=new Uint8Array([136,249,15,0]),Kt=new Uint8Array([51,51,51,51,51,227,117,64]),Dt=new Uint8Array([48,250,15,0]),Ft=new Uint8Array([205,204,204,204,204,12,89,64]);Object.assign(me,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:xt},slots:{0:{structure:s,memory:{array:Et},slots:{0:{structure:i,memory:{array:Kt}}}},1:{structure:s,memory:{array:Dt},slots:{0:{structure:i,memory:{array:Ft}}}}}}},slot:62});Object.assign(T,{...t,type:11,name:"Struct0016",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:61});Object.assign(ce,{...t,type:1,name:"[10:0]u8",length:10,byteSize:11,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:65});Object.assign(ye,{...t,type:11,name:"*const [10:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:64});Object.assign($,{...t,type:11,name:"*const *const [10:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:63});const Mt=new Uint8Array([]),_t=new Uint8Array([170,170,170,170]),c=new Uint8Array([]),Tt=new Uint8Array([170,170,170,170]),$t=new Uint8Array([170,170,170,170]),Bt=new Uint8Array([68,249,15,0]),Lt=new Uint8Array([163,33,16,0]),Gt=new Uint8Array([66,97,115,101,32,80,111,105,110,116,0]);Object.assign(be,{...t,type:2,name:"Struct0012",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:ue},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:M},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:_},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:T},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:$}],methods:[],template:{memory:{array:Mt},slots:{0:{structure:M,memory:{array:_t},slots:{0:{structure:oe,memory:{array:c},address:-1431655766}}},1:{structure:_,memory:{array:Tt},slots:{0:{structure:le,memory:{array:c},address:-1431655766}}},2:{structure:T,memory:{array:$t},slots:{0:{structure:me,memory:{array:c},address:-1431655766}}},3:{structure:$,memory:{array:Bt},slots:{0:{structure:ye,memory:{array:Lt},slots:{0:{structure:ce,memory:{array:Gt},address:1057187}}}}}}}},slot:43});Object.assign(B,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:42});const Ht=new Uint8Array([]),Jt=new Uint8Array([170,170,170,170]),Nt=new Uint8Array([170,170,170,170]),Qt=new Uint8Array([170,170,170,170]);Object.assign(pe,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"size",structure:K},{...e,type:8,isRequired:!1,slot:1,name:"radius",structure:F},{...e,type:8,isRequired:!1,slot:2,name:"base",structure:B}],methods:[],template:{memory:{array:Ht},slots:{0:{structure:K,memory:{array:Jt},slots:{0:{structure:re,memory:{array:c},address:-1431655766}}},1:{structure:F,memory:{array:Nt},slots:{0:{structure:ie,memory:{array:c},address:-1431655766}}},2:{structure:B,memory:{array:Qt},slots:{0:{structure:be,memory:{array:c},address:-1431655766}}}}}},slot:15});Object.assign(L,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:14});const Wt=new Uint8Array([]),Xt=new Uint8Array([48,250,15,0]),Yt=new Uint8Array([4,0,0,0]);Object.assign(q,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:Wt},slots:{0:{structure:f,memory:{array:Xt},slots:{0:{structure:p,memory:{array:Yt}}}}}}},slot:45});Object.assign(z,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:q}],methods:[],template:null},slot:44});const Zt=new Uint8Array([]),es=new Uint8Array([170,170,170,170]);Object.assign(fe,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:z}],methods:[],template:{memory:{array:Zt},slots:{0:{structure:z,memory:{array:es},slots:{0:{structure:q,memory:{array:c},address:-1431655766}}}}}},slot:17});Object.assign(G,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:16});const ts=new Uint8Array([]),ss=new Uint8Array([170,170,170,170]);Object.assign(de,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:z}],methods:[],template:{memory:{array:ts},slots:{0:{structure:z,memory:{array:ss},slots:{0:{structure:q,memory:{array:c},address:-1431655766}}}}}},slot:19});Object.assign(H,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:de}],methods:[],template:null},slot:18});const rs=new Uint8Array([]),as=new Uint8Array([]),ns=new Uint8Array([28,251,15,0]),is=new Uint8Array([162,37,16,0]),us=new Uint8Array([67,105,114,99,117,108,97,114,68,105,115,107,115,0]),os=new Uint8Array([92,251,15,0]),ls=new Uint8Array([147,37,16,0]),ms=new Uint8Array([80,101,116,114,105,32,76,101,115,107,105,110,101,110,0]),cs=new Uint8Array([156,251,15,0]),ys=new Uint8Array([1,0,0,0]),bs=new Uint8Array([244,251,15,0]),ps=new Uint8Array([135,37,16,0]),fs=new Uint8Array([68,105,115,107,32,116,105,108,105,110,103,0]),ds=new Uint8Array([170,170,170,170]),Ss=new Uint8Array([170,170,170,170]),hs=new Uint8Array([170,170,170,170]);Object.assign(Ae,{...t,type:2,name:"circular-disks.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:rs}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:I},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:v},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:f},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:x},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:L},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:G},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:H}],methods:[],template:{memory:{array:as},slots:{0:{structure:I,memory:{array:ns},slots:{0:{structure:W,memory:{array:is},slots:{0:{structure:Q,memory:{array:us},address:1058210}}}}},1:{structure:v,memory:{array:os},slots:{0:{structure:Y,memory:{array:ls},slots:{0:{structure:X,memory:{array:ms},address:1058195}}}}},2:{structure:f,memory:{array:cs},slots:{0:{structure:p,memory:{array:ys}}}},3:{structure:x,memory:{array:bs},slots:{0:{structure:ee,memory:{array:ps},slots:{0:{structure:Z,memory:{array:fs},address:1058183}}}}},4:{structure:L,memory:{array:ds},slots:{0:{structure:pe,memory:{array:c},address:-1431655766}}},5:{structure:G,memory:{array:Ss},slots:{0:{structure:fe,memory:{array:c},address:-1431655766}}},6:{structure:H,memory:{array:hs},slots:{0:{structure:de,memory:{array:c},address:-1431655766}}}}}},slot:1});Object.assign(O,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:24});Object.assign(Se,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:23});Object.assign(he,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Se}],methods:[],template:null},slot:22});Object.assign(m,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[],template:null},slot:25});const gs=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(ge,{...t,type:9,name:"circular-disks.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:p},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:p}],methods:[],template:{memory:{array:gs}}},slot:26});Object.assign(R,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:R}],methods:[],template:null},slot:27});Object.assign(ze,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:d}],methods:[],template:null},slot:46});const zs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Os=new Uint8Array([]),ws=new Uint8Array([216,249,15,0]),Rs=new Uint8Array([4,0,0,0]);Object.assign(J,{...t,type:2,name:"circular-disks.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:he},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ge},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:{memory:{array:zs}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:ze},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:Os},slots:{0:{structure:f,memory:{array:ws},slots:{0:{structure:p,memory:{array:Rs}}}}}}},slot:21});const qs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),As=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Us=new Uint8Array([0,0,0,0,0,0,0,0]),ve=new Uint8Array([]);Object.assign(A,{...t,type:2,name:"circular-disks.KernelInput(u8,circular-disks.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:J}],methods:[],template:{memory:{array:qs},slots:{0:{structure:J,memory:{array:As},slots:{0:{structure:he,memory:{array:Us},slots:{0:{structure:Se,memory:{array:ve}}}}}}}}},slot:20});Object.assign(Oe,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:23});Object.assign(we,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Oe}],methods:[],template:null},slot:30});const js=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ps=new Uint8Array([]),ks=new Uint8Array([216,249,15,0]),Vs=new Uint8Array([4,0,0,0]);Object.assign(N,{...t,type:2,name:"circular-disks.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:we},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ge},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:{memory:{array:js}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:ze},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:Ps},slots:{0:{structure:f,memory:{array:ks},slots:{0:{structure:p,memory:{array:Vs}}}}}}},slot:29});const Cs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Is=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),vs=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(U,{...t,type:2,name:"circular-disks.KernelOutput(u8,circular-disks.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:N}],methods:[],template:{memory:{array:Cs},slots:{0:{structure:N,memory:{array:Is},slots:{0:{structure:we,memory:{array:vs},slots:{0:{structure:Oe,memory:{array:ve}}}}}}}}},slot:28});const xs=new Uint8Array([154,25,175,67,102,102,200,66,0,0,240,65,61,10,215,62]);Object.assign(j,{...t,type:2,name:"circular-disks.KernelParameters(circular-disks.kernel)",length:1,byteSize:16,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:64,bitSize:32,byteSize:4,slot:0,name:"size",structure:d},{...e,type:4,isRequired:!1,bitOffset:96,bitSize:32,byteSize:4,slot:1,name:"radius",structure:d},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,slot:2,name:"base",structure:ue}],methods:[],template:{memory:{array:xs}}},slot:31});Object.assign(Ue,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(circular-disks.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:47});Object.assign(je,{...t,type:7,name:"ErrorSet0000!circular-disks.KernelOutput(u8,circular-disks.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:U},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Ue}],methods:[],template:null},slot:36});Object.assign(Pe,{...t,type:3,name:"createOutput",length:1,byteSize:80,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:0,name:"0",structure:m},{...e,type:3,bitOffset:160,bitSize:32,byteSize:4,slot:1,name:"1",structure:m},{...e,type:6,bitOffset:192,bitSize:192,byteSize:24,slot:2,name:"2",structure:A},{...e,type:6,bitOffset:0,bitSize:128,byteSize:16,slot:3,name:"3",structure:j},{...e,type:6,bitOffset:384,bitSize:224,byteSize:28,slot:4,name:"retval",structure:je}],methods:[],template:null},slot:34});Object.assign(ke,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(circular-disks.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:48});Object.assign(Ve,{...t,type:7,name:"ErrorSet0001!circular-disks.KernelOutput(u8,circular-disks.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:U},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:ke}],methods:[],template:null},slot:37});Object.assign(Ce,{...t,type:3,name:"createPartialOutput",length:1,byteSize:88,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:0,name:"0",structure:m},{...e,type:3,bitOffset:160,bitSize:32,byteSize:4,slot:1,name:"1",structure:m},{...e,type:3,bitOffset:192,bitSize:32,byteSize:4,slot:2,name:"2",structure:m},{...e,type:3,bitOffset:224,bitSize:32,byteSize:4,slot:3,name:"3",structure:m},{...e,type:6,bitOffset:256,bitSize:192,byteSize:24,slot:4,name:"4",structure:A},{...e,type:6,bitOffset:0,bitSize:128,byteSize:16,slot:5,name:"5",structure:j},{...e,type:6,bitOffset:448,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Ve}],methods:[],template:null},slot:35});const Es={argStruct:Pe,thunk:1,name:"createOutput"},Ks={argStruct:Ce,thunk:5,name:"createPartialOutput"};Object.assign(Ie,{...t,type:2,name:"circular-disks",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:ve}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:Ae},{...e,type:7,isRequired:!1,name:"Input",structure:A},{...e,type:7,isRequired:!1,name:"Output",structure:U},{...e,type:7,isRequired:!1,name:"Parameters",structure:j}],methods:[Es,Ks],template:null},slot:0});const Ds=[b,Q,W,I,X,Y,v,p,f,Z,ee,x,d,i,s,te,se,E,re,K,ae,ne,D,ie,F,ue,oe,M,le,_,me,T,ce,ye,$,be,B,pe,L,q,z,fe,G,de,H,Ae,O,Se,he,m,ge,R,ze,J,A,Oe,we,N,U,j,Ue,je,Pe,ke,Ve,Ce,Ie],Fs=st(Ds),Ms=Ie.constructor,_s=(async()=>{const u=new URL("circular-disks-7eeca538.wasm",import.meta.url).href;return fetch(u)})();rt(_s,{...Fs,writeBack:!0});const{createOutput:Ns,createPartialOutput:Ts,kernel:qe,Input:$s,Output:Qs,Parameters:Ws}=Ms;function Bs(u,l,a,r,n={},h={}){if(Array.isArray(n)){const S=n;n={};for(const[y,g]of Object.keys(qe.inputImages).entries())n[g]=S[y]}const P=new $s(void 0),k=Object.keys(qe.inputImages),o=[];let w;for(const S of k){let y=n[S];if(y||(k.length===1&&["data","width","height"].every(g=>!!n[g])?y=n:o.push(S)),P[S]=y,w){if(y.colorSpace!==w)throw new Error(`Input images must all use the same color space: ${w}`)}else w=y.colorSpace}if(o.length>0)throw new Error(`Missing input image${o.length>1?"s":""}: ${o.join(", ")}`);const Re=Ts(u,l,a,r,P,h),xe=S=>{const y=Object.keys(S),g={};for(const Ee of y){const{data:{typedArray:V},width:Ke,height:Fe}=S[Ee];let C;if(typeof ImageData=="function"){const Me=new Uint8ClampedArray(V.buffer,V.byteOffset,V.byteLength);C=new ImageData(Me,Ke,r,{colorSpace:w})}else C={data:V,width:Ke,height:Fe};if(y.length===1)return C;g[Ee]=C}return g};return Re[Symbol.toStringTag]==="Promise"?Re.then(xe):xe(Re)}function Ls(){const u={};for(let[l,a]of Object.entries(qe)){if(l==="parameters"){const r={};for(const[n,h]of Object.entries(a)){const P=r[n]={};for(let[k,o]of Object.entries(h))typeof o=="object"?"string"in o?o=o.string:o=De(o):typeof o=="function"&&(o=Gs(o.name)),P[k]=o}a=r}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());u[l]=a}return u}function De(u){const l=[];for(let[a,r]of Object.entries(u))typeof r=="object"&&(r=De(r)),l[a]=r;return l}function Gs(u){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[u]}onmessage=u=>{const[l,a,...r]=u.data;Hs(l,r).then(([n,h])=>{postMessage([l,a,n],{transfer:h})}).catch(n=>{postMessage(["error",a,n])})};async function Hs(u,l){switch(u){case"getKernelInfo":return[Ls(...l)];case"createPartialImageData":const r=await Bs(...l),n=[];if("data"in r&&"width"in r&&"height"in r)n.push(r.data.buffer);else for(const h of Object.entries(r))n.push(r.data.buffer);return[r,n];default:throw new Error(`Unknown function: ${u}`)}}
