import{u as Ie,a as Ce,b as ve,d as xe,c as Ee,e as Ke,f as De,g as Fe,h as Me,i as _e,j as Te,k as $e,l as Be,m as Le,o as Ge,n as He,p as Je,q as Ne}from"./index-422d9c98.js";Ie();Ce();ve();xe();Ee();Ke();De();Fe();Me();_e();Te();$e();Be();Le();Ge();He();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},h={},Q={},W={},D={},X={},Y={},F={},c={},b={},Z={},ee={},M={},U={},S={},p={},o={},P={},O={},R={},d={},te={},_={},se={},T={},re={},$={},ae={},B={},ne={},L={},V={},q={},ie={},G={},ue={},H={},de={},w={},oe={},le={},m={},me={},j={},ye={},J={},k={},ce={},be={},N={},I={},C={},Se={},he={},ge={},ze={},Oe={},Re={},qe={};Object.assign(h,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:h}],methods:[],template:null},slot:5});Object.assign(Q,{...t,type:1,name:"[4:0]u8",length:4,byteSize:5,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:h}],methods:[],template:null},slot:4});Object.assign(W,{...t,type:11,name:"*const [4:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[],template:null},slot:3});Object.assign(D,{...t,type:11,name:"*const *const [4:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:2});Object.assign(X,{...t,type:1,name:"[7:0]u8",length:7,byteSize:8,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:h}],methods:[],template:null},slot:8});Object.assign(Y,{...t,type:11,name:"*const [7:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:7});Object.assign(F,{...t,type:11,name:"*const *const [7:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[],template:null},slot:6});Object.assign(c,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:10});Object.assign(b,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:c}],methods:[],template:null},slot:9});Object.assign(Z,{...t,type:1,name:"[11:0]u8",length:11,byteSize:12,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:h}],methods:[],template:null},slot:13});Object.assign(ee,{...t,type:11,name:"*const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:12});Object.assign(M,{...t,type:11,name:"*const *const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:11});Object.assign(U,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:U}],methods:[],template:null},slot:46});Object.assign(S,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:U}],methods:[],template:null},slot:32});Object.assign(p,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:p}],methods:[],template:null},slot:56});Object.assign(o,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:p}],methods:[],template:null},slot:55});const Qe=new Uint8Array([]),We=new Uint8Array([64,248,15,0]),Xe=new Uint8Array([0,0,0,0,0,0,0,0]),Ye=new Uint8Array([104,248,15,0]),Ze=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(P,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:o},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:o}],methods:[],template:{memory:{array:Qe},slots:{0:{structure:o,memory:{array:We},slots:{0:{structure:p,memory:{array:Xe}}}},1:{structure:o,memory:{array:Ye},slots:{0:{structure:p,memory:{array:Ze}}}}}}},slot:50});Object.assign(O,{...t,type:11,name:"Struct0014",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:P}],methods:[],template:null},slot:49});const et=new Uint8Array([]),tt=new Uint8Array([64,248,15,0]),st=new Uint8Array([0,0,0,0,0,0,128,64]),rt=new Uint8Array([104,248,15,0]),at=new Uint8Array([0,0,0,0,0,0,128,64]);Object.assign(R,{...t,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:o},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:o}],methods:[],template:{memory:{array:et},slots:{0:{structure:o,memory:{array:tt},slots:{0:{structure:p,memory:{array:st}}}},1:{structure:o,memory:{array:rt},slots:{0:{structure:p,memory:{array:at}}}}}}},slot:52});Object.assign(d,{...t,type:11,name:"Struct0015",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:R}],methods:[],template:null},slot:51});const nt=new Uint8Array([]),it=new Uint8Array([170,170,170,170]),l=new Uint8Array([]),ut=new Uint8Array([170,170,170,170]),ot=new Uint8Array([170,170,170,170]);Object.assign(te,{...t,type:2,name:"Struct0010",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:S},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:O},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:d},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:d}],methods:[],template:{memory:{array:nt},slots:{0:{structure:O,memory:{array:it},slots:{0:{structure:P,memory:{array:l},address:-1431655766}}},1:{structure:d,memory:{array:ut},slots:{0:{structure:R,memory:{array:l},address:-1431655766}}},2:{structure:d,memory:{array:ot},slots:{0:{structure:R,memory:{array:l},address:-1431655766}}}}}},slot:38});Object.assign(_,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:37});const lt=new Uint8Array([]),mt=new Uint8Array([64,253,15,0]),yt=new Uint8Array([0,0,0,0,0,0,112,64]),ct=new Uint8Array([104,253,15,0]),bt=new Uint8Array([0,0,0,0,0,0,112,64]);Object.assign(se,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:o},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:o}],methods:[],template:{memory:{array:lt},slots:{0:{structure:o,memory:{array:mt},slots:{0:{structure:p,memory:{array:yt}}}},1:{structure:o,memory:{array:ct},slots:{0:{structure:p,memory:{array:bt}}}}}}},slot:54});Object.assign(T,{...t,type:11,name:"Struct0016",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:53});const pt=new Uint8Array([]),ft=new Uint8Array([170,170,170,170]),dt=new Uint8Array([170,170,170,170]),St=new Uint8Array([170,170,170,170]);Object.assign(re,{...t,type:2,name:"Struct0011",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:S},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:O},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:d},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:T}],methods:[],template:{memory:{array:pt},slots:{0:{structure:O,memory:{array:ft},slots:{0:{structure:P,memory:{array:l},address:-1431655766}}},1:{structure:d,memory:{array:dt},slots:{0:{structure:R,memory:{array:l},address:-1431655766}}},2:{structure:T,memory:{array:St},slots:{0:{structure:se,memory:{array:l},address:-1431655766}}}}}},slot:40});Object.assign($,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:39});const ht=new Uint8Array([]);Object.assign(ae,{...t,type:2,name:"Struct0012",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:S}],methods:[],template:{memory:{array:ht}}},slot:42});Object.assign(B,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:41});const gt=new Uint8Array([]),zt=new Uint8Array([170,170,170,170]),Ot=new Uint8Array([170,170,170,170]),Rt=new Uint8Array([170,170,170,170]);Object.assign(ne,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"imgSize",structure:_},{...e,type:8,isRequired:!1,slot:1,name:"center",structure:$},{...e,type:8,isRequired:!1,slot:2,name:"offset",structure:B}],methods:[],template:{memory:{array:gt},slots:{0:{structure:_,memory:{array:zt},slots:{0:{structure:te,memory:{array:l},address:-1431655766}}},1:{structure:$,memory:{array:Ot},slots:{0:{structure:re,memory:{array:l},address:-1431655766}}},2:{structure:B,memory:{array:Rt},slots:{0:{structure:ae,memory:{array:l},address:-1431655766}}}}}},slot:15});Object.assign(L,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:14});const qt=new Uint8Array([]),wt=new Uint8Array([96,248,15,0]),At=new Uint8Array([4,0,0,0]);Object.assign(V,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:b}],methods:[],template:{memory:{array:qt},slots:{0:{structure:b,memory:{array:wt},slots:{0:{structure:c,memory:{array:At}}}}}}},slot:44});Object.assign(q,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:V}],methods:[],template:null},slot:43});const Ut=new Uint8Array([]),jt=new Uint8Array([170,170,170,170]);Object.assign(ie,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:q}],methods:[],template:{memory:{array:Ut},slots:{0:{structure:q,memory:{array:jt},slots:{0:{structure:V,memory:{array:l},address:-1431655766}}}}}},slot:17});Object.assign(G,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:16});const Pt=new Uint8Array([]),Vt=new Uint8Array([170,170,170,170]);Object.assign(ue,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:q}],methods:[],template:{memory:{array:Pt},slots:{0:{structure:q,memory:{array:Vt},slots:{0:{structure:V,memory:{array:l},address:-1431655766}}}}}},slot:19});Object.assign(H,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:18});const kt=new Uint8Array([]),It=new Uint8Array([]),Ct=new Uint8Array([148,248,15,0]),vt=new Uint8Array([11,36,16,0]),xt=new Uint8Array([82,97,121,115,0]),Et=new Uint8Array([212,248,15,0]),Kt=new Uint8Array([3,36,16,0]),Dt=new Uint8Array([77,114,46,100,111,111,98,0]),Ft=new Uint8Array([20,249,15,0]),Mt=new Uint8Array([1,0,0,0]),_t=new Uint8Array([108,249,15,0]),Tt=new Uint8Array([247,35,16,0]),$t=new Uint8Array([82,97,121,115,32,101,102,102,101,99,116,0]),Bt=new Uint8Array([170,170,170,170]),Lt=new Uint8Array([170,170,170,170]),Gt=new Uint8Array([170,170,170,170]);Object.assign(de,{...t,type:2,name:"rays.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:kt}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:D},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:F},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:b},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:M},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:L},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:G},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:H}],methods:[],template:{memory:{array:It},slots:{0:{structure:D,memory:{array:Ct},slots:{0:{structure:W,memory:{array:vt},slots:{0:{structure:Q,memory:{array:xt},address:1057803}}}}},1:{structure:F,memory:{array:Et},slots:{0:{structure:Y,memory:{array:Kt},slots:{0:{structure:X,memory:{array:Dt},address:1057795}}}}},2:{structure:b,memory:{array:Ft},slots:{0:{structure:c,memory:{array:Mt}}}},3:{structure:M,memory:{array:_t},slots:{0:{structure:ee,memory:{array:Tt},slots:{0:{structure:Z,memory:{array:$t},address:1057783}}}}},4:{structure:L,memory:{array:Bt},slots:{0:{structure:ne,memory:{array:l},address:-1431655766}}},5:{structure:G,memory:{array:Lt},slots:{0:{structure:ie,memory:{array:l},address:-1431655766}}},6:{structure:H,memory:{array:Gt},slots:{0:{structure:ue,memory:{array:l},address:-1431655766}}}}}},slot:1});Object.assign(w,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:h}],methods:[],template:null},slot:24});Object.assign(oe,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:w}],methods:[],template:null},slot:23});Object.assign(le,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:oe}],methods:[],template:null},slot:22});Object.assign(m,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[],template:null},slot:25});const Ht=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(me,{...t,type:9,name:"rays.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:c},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:c}],methods:[],template:{memory:{array:Ht}}},slot:26});Object.assign(j,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:j}],methods:[],template:null},slot:27});Object.assign(ye,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:U}],methods:[],template:null},slot:45});const Jt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Nt=new Uint8Array([]),Qt=new Uint8Array([72,253,15,0]),Wt=new Uint8Array([4,0,0,0]);Object.assign(J,{...t,type:2,name:"rays.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:le},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:me},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:j}],methods:[],template:{memory:{array:Jt}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:w},{...e,type:7,isRequired:!1,name:"FPixel",structure:ye},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:b}],methods:[],template:{memory:{array:Nt},slots:{0:{structure:b,memory:{array:Qt},slots:{0:{structure:c,memory:{array:Wt}}}}}}},slot:21});const Xt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Yt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Zt=new Uint8Array([0,0,0,0,0,0,0,0]),we=new Uint8Array([]);Object.assign(k,{...t,type:2,name:"rays.KernelInput(u8,rays.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:J}],methods:[],template:{memory:{array:Xt},slots:{0:{structure:J,memory:{array:Yt},slots:{0:{structure:le,memory:{array:Zt},slots:{0:{structure:oe,memory:{array:we}}}}}}}}},slot:20});Object.assign(ce,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:w}],methods:[],template:null},slot:23});Object.assign(be,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:ce}],methods:[],template:null},slot:30});const es=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ts=new Uint8Array([]),ss=new Uint8Array([72,253,15,0]),rs=new Uint8Array([4,0,0,0]);Object.assign(N,{...t,type:2,name:"rays.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:be},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:me},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:j}],methods:[],template:{memory:{array:es}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:w},{...e,type:7,isRequired:!1,name:"FPixel",structure:ye},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:b}],methods:[],template:{memory:{array:ts},slots:{0:{structure:b,memory:{array:ss},slots:{0:{structure:c,memory:{array:rs}}}}}}},slot:29});const as=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ns=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),is=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(I,{...t,type:2,name:"rays.KernelOutput(u8,rays.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:N}],methods:[],template:{memory:{array:as},slots:{0:{structure:N,memory:{array:ns},slots:{0:{structure:be,memory:{array:is},slots:{0:{structure:ce,memory:{array:we}}}}}}}}},slot:28});const us=new Uint8Array([0,0,0,68,0,0,0,68,0,0,128,67,0,0,128,67,0,0,0,0,0,0,0,0]);Object.assign(C,{...t,type:2,name:"rays.KernelParameters(rays.kernel)",length:1,byteSize:24,align:3,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"imgSize",structure:S},{...e,type:6,isRequired:!1,bitOffset:64,bitSize:64,byteSize:8,slot:1,name:"center",structure:S},{...e,type:6,isRequired:!1,bitOffset:128,bitSize:64,byteSize:8,slot:2,name:"offset",structure:S}],methods:[],template:{memory:{array:us}}},slot:31});Object.assign(Se,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(rays.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:47});Object.assign(he,{...t,type:7,name:"ErrorSet0000!rays.KernelOutput(u8,rays.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:I},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Se}],methods:[],template:null},slot:35});Object.assign(ge,{...t,type:3,name:"createOutput",length:1,byteSize:88,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:192,bitSize:32,byteSize:4,slot:0,name:"0",structure:m},{...e,type:3,bitOffset:224,bitSize:32,byteSize:4,slot:1,name:"1",structure:m},{...e,type:6,bitOffset:256,bitSize:192,byteSize:24,slot:2,name:"2",structure:k},{...e,type:6,bitOffset:0,bitSize:192,byteSize:24,slot:3,name:"3",structure:C},{...e,type:6,bitOffset:448,bitSize:224,byteSize:28,slot:4,name:"retval",structure:he}],methods:[],template:null},slot:33});Object.assign(ze,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(rays.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:48});Object.assign(Oe,{...t,type:7,name:"ErrorSet0001!rays.KernelOutput(u8,rays.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:I},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:ze}],methods:[],template:null},slot:36});Object.assign(Re,{...t,type:3,name:"createPartialOutput",length:1,byteSize:96,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:192,bitSize:32,byteSize:4,slot:0,name:"0",structure:m},{...e,type:3,bitOffset:224,bitSize:32,byteSize:4,slot:1,name:"1",structure:m},{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:2,name:"2",structure:m},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:3,name:"3",structure:m},{...e,type:6,bitOffset:320,bitSize:192,byteSize:24,slot:4,name:"4",structure:k},{...e,type:6,bitOffset:0,bitSize:192,byteSize:24,slot:5,name:"5",structure:C},{...e,type:6,bitOffset:512,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Oe}],methods:[],template:null},slot:34});const os={argStruct:ge,thunk:6,name:"createOutput"},ls={argStruct:Re,thunk:2,name:"createPartialOutput"};Object.assign(qe,{...t,type:2,name:"rays",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:we}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:de},{...e,type:7,isRequired:!1,name:"Input",structure:k},{...e,type:7,isRequired:!1,name:"Output",structure:I},{...e,type:7,isRequired:!1,name:"Parameters",structure:C}],methods:[os,ls],template:null},slot:0});const ms=[h,Q,W,D,X,Y,F,c,b,Z,ee,M,U,S,p,o,P,O,R,d,te,_,se,T,re,$,ae,B,ne,L,V,q,ie,G,ue,H,de,w,oe,le,m,me,j,ye,J,k,ce,be,N,I,C,Se,he,ge,ze,Oe,Re,qe],ys=Je(ms),cs=qe.constructor,bs=(async()=>{const n=new URL("rays-80cb7777.wasm",import.meta.url).href;return fetch(n)})();Ne(bs,{...ys,writeBack:!0});const{createOutput:Os,createPartialOutput:ps,kernel:fe,Input:fs,Output:Rs,Parameters:qs}=cs;function ds(n,u,r,s,a={},g={}){if(Array.isArray(a)){const f=a;a={};for(const[y,z]of Object.keys(fe.inputImages).entries())a[z]=f[y]}const v=new fs(void 0),x=Object.keys(fe.inputImages),i=[];let A;for(const f of x){let y=a[f];if(y||(x.length===1&&["data","width","height"].every(z=>!!a[z])?y=a:i.push(f)),v[f]=y,A){if(y.colorSpace!==A)throw new Error(`Input images must all use the same color space: ${A}`)}else A=y.colorSpace}if(i.length>0)throw new Error(`Missing input image${i.length>1?"s":""}: ${i.join(", ")}`);const pe=ps(n,u,r,s,v,g),Ae=f=>{const y=Object.keys(f),z={};for(const Ue of y){const{data:{typedArray:E},width:je,height:Ve}=f[Ue];let K;if(typeof ImageData=="function"){const ke=new Uint8ClampedArray(E.buffer,E.byteOffset,E.byteLength);K=new ImageData(ke,je,s,{colorSpace:A})}else K={data:E,width:je,height:Ve};if(y.length===1)return K;z[Ue]=K}return z};return pe[Symbol.toStringTag]==="Promise"?pe.then(Ae):Ae(pe)}function Ss(){const n={};for(let[u,r]of Object.entries(fe)){if(u==="parameters"){const s={};for(const[a,g]of Object.entries(r)){const v=s[a]={};for(let[x,i]of Object.entries(g))typeof i=="object"?"string"in i?i=i.string:i=Pe(i):typeof i=="function"&&(i=hs(i.name)),v[x]=i}r=s}else typeof r=="object"&&("string"in r?r=r.string:r=r.valueOf());n[u]=r}return n}function Pe(n){const u=[];for(let[r,s]of Object.entries(n))typeof s=="object"&&(s=Pe(s)),u[r]=s;return u}function hs(n){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[n]}onmessage=n=>{const[u,r,...s]=n.data;gs(u,s).then(([a,g])=>{postMessage([u,r,a],{transfer:g})}).catch(a=>{postMessage(["error",r,a])})};async function gs(n,u){switch(n){case"getKernelInfo":return[Ss(...u)];case"createPartialImageData":const s=await ds(...u),a=[];if("data"in s&&"width"in s&&"height"in s)a.push(s.data.buffer);else for(const g of Object.entries(s))a.push(s.data.buffer);return[s,a];default:throw new Error(`Unknown function: ${n}`)}}
