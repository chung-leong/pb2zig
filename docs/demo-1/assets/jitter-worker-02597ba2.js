import{u as Ze,a as ts,b as es,c as ss,d as rs,e as as,f as ns,g as is,h as os,i as cs,j as us,k as ms,l as ys,m as bs,n as ls,p as ps,o as gs,q as fs,r as Os,s as Ss}from"./index-58d89d46.js";Ze();us();ms();ts();es();ys();bs();ls();ps();ss();rs();as();ns();gs();Ss();is();fs();os();cs();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},f={},D={},F={},M={},T={},b={},O={},$={},L={},i={},p={},d={},B={},S={},G={},H={},J={},N={},w={},Q={},W={},ot={},I={},X={},R={},m={},g={},P={},ct={},Y={},k={},Z={},q={},tt={},v={},E={},V={},ut={},mt={},_={},yt={},bt={},lt={},_t={},et={},Dt={},st={},Ft={},Mt={},pt={},Tt={},gt={},$t={},Lt={},ft={},Bt={},Ot={},St={},jt={},Gt={},zt={},Ht={},ht={},Jt={},dt={},Nt={},wt={},Qt={},Wt={},At={},Ut={},Xt={},rt={},Yt={},Zt={},Pt={},te={},Vt={},ee={},se={},re={},ae={},ne={},ie={},oe={},ce={},ue={},me={},ye={},be={},le={},pe={},ge={},fe={},Oe={},It={},Se={},je={},Rt={},ze={},kt={},he={},de={},we={},Ae={},Ue={},Pe={},Ve={},qt={},Ie={},Re={},ke={},qe={},ve={},Ee={},xe={},Ce={},Ke={},_e={},vt={},De={},Fe={},Me={},Te={},$e={},Le={},Be={},Ge={},He={},Je={},js=new Uint8Array,zs=new Uint8Array([0,0,0,0,0,0,0,0]),hs=new Uint8Array,ds=new Uint8Array([0,0,0,0,0,0,0,0]),ws=new Uint8Array,As=new Uint8Array([0,0,0,0,0,0,176,64]),Us=new Uint8Array,Ps=new Uint8Array([0,0,0,0,0,0,176,64]),Vs=new Uint8Array,Is=new Uint8Array,Rs=new Uint8Array,ks=new Uint8Array,qs=new Uint8Array,vs=new Uint8Array,Es=new Uint8Array([123,20,174,71,225,122,132,63]),xs=new Uint8Array,Cs=new Uint8Array([0,0,0,0,0,0,0,64]),Ks=new Uint8Array,_s=new Uint8Array([154,153,153,153,153,153,185,63]),Ds=new Uint8Array,Fs=new Uint8Array,Ms=new Uint8Array,Ts=new Uint8Array([4]),$s=new Uint8Array,Ls=new Uint8Array,Bs=new Uint8Array([68,16,0,1]),Gs=new Uint8Array([110,101,116,46,110,105,99,111,112,116,101,114,101,46,102,105,108,116,101,114,115,0]),Hs=new Uint8Array([101,16,0,1]),Js=new Uint8Array([110,105,99,111,112,116,101,114,101,0]),Ns=new Uint8Array,Qs=new Uint8Array([1]),Ws=new Uint8Array([128,16,0,1]),Xs=new Uint8Array([106,105,116,116,101,114,0]),Ys=new Uint8Array,Zs=new Uint8Array,tr=new Uint8Array,er=new Uint8Array([0]),sr=new Uint8Array([1]),Ne=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),rr=new Uint8Array,ar=new Uint8Array,nr=new Uint8Array,ir=new Uint8Array,or=new Uint8Array([4]),Et=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Qe=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),cr=new Uint8Array,ur=new Uint8Array,mr=new Uint8Array,yr=new Uint8Array,br=new Uint8Array([4]),xt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),lr=new Uint8Array([0,0,0,0,0,0,0,0,205,204,204,61,0,0,0,0]),pr=new Uint8Array([27,0]),gr=new Uint8Array,fr=new Uint8Array,Or=new Uint8Array,Sr=new Uint8Array;Object.assign(_t,{slots:{0:et,1:st}});Object.assign(et,{structure:i,memory:{array:js},slots:{0:Dt}});Object.assign(Dt,{structure:p,memory:{array:zs}});Object.assign(st,{structure:i,memory:{array:hs},slots:{0:Ft}});Object.assign(Ft,{structure:p,memory:{array:ds}});Object.assign(Mt,{slots:{0:pt,1:gt}});Object.assign(pt,{structure:i,memory:{array:ws},slots:{0:Tt}});Object.assign(Tt,{structure:p,memory:{array:As}});Object.assign(gt,{structure:i,memory:{array:Us},slots:{0:$t}});Object.assign($t,{structure:p,memory:{array:Ps}});Object.assign(Lt,{slots:{0:ft,1:Ot,2:St,3:jt}});Object.assign(ft,{structure:s,memory:{array:Vs},slots:{0:Bt}});Object.assign(Bt,{structure:G});Object.assign(Ot,{structure:d,memory:{array:Is},slots:{0:et,1:st}});Object.assign(St,{structure:B,memory:{array:Rs},slots:{0:pt,1:gt}});Object.assign(jt,{structure:d,memory:{array:ks},slots:{0:et,1:st}});Object.assign(Gt,{slots:{0:zt,1:ht,2:dt,3:wt}});Object.assign(zt,{structure:s,memory:{array:qs},slots:{0:Ht}});Object.assign(Ht,{structure:S});Object.assign(ht,{structure:i,memory:{array:vs},slots:{0:Jt}});Object.assign(Jt,{structure:p,memory:{array:Es}});Object.assign(dt,{structure:i,memory:{array:xs},slots:{0:Nt}});Object.assign(Nt,{structure:p,memory:{array:Cs}});Object.assign(wt,{structure:i,memory:{array:Ks},slots:{0:Qt}});Object.assign(Qt,{structure:p,memory:{array:_s}});Object.assign(Wt,{slots:{0:At,1:Ut}});Object.assign(At,{structure:H,memory:{array:Ds},slots:{0:ft,1:Ot,2:St,3:jt}});Object.assign(Ut,{structure:J,memory:{array:Fs},slots:{0:zt,1:ht,2:dt,3:wt}});Object.assign(Xt,{slots:{0:rt}});Object.assign(rt,{structure:b,memory:{array:Ms},slots:{0:Yt}});Object.assign(Yt,{structure:O,memory:{array:Ts}});Object.assign(Zt,{slots:{0:Pt}});Object.assign(Pt,{structure:w,memory:{array:$s},slots:{0:rt}});Object.assign(te,{slots:{0:Vt}});Object.assign(Vt,{structure:w,memory:{array:Ls},slots:{0:rt}});Object.assign(ee,{slots:{0:se,1:ae,2:ie,3:ce,4:me,5:ye,6:be}});Object.assign(se,{structure:F,memory:{array:Bs},slots:{0:re}});Object.assign(re,{structure:D,memory:{array:Gs},reloc:16781380,const:!0});Object.assign(ae,{structure:T,memory:{array:Hs},slots:{0:ne}});Object.assign(ne,{structure:M,memory:{array:Js},reloc:16781413,const:!0});Object.assign(ie,{structure:b,memory:{array:Ns},slots:{0:oe}});Object.assign(oe,{structure:O,memory:{array:Qs}});Object.assign(ce,{structure:L,memory:{array:Ws},slots:{0:ue}});Object.assign(ue,{structure:$,memory:{array:Xs},reloc:16781440,const:!0});Object.assign(me,{structure:N,memory:{array:Ys},slots:{0:At,1:Ut}});Object.assign(ye,{structure:Q,memory:{array:Zs},slots:{0:Pt}});Object.assign(be,{structure:W,memory:{array:tr},slots:{0:Vt}});Object.assign(le,{slots:{0:pe,1:ge}});Object.assign(pe,{structure:g,memory:{array:er}});Object.assign(ge,{structure:g,memory:{array:sr}});Object.assign(fe,{memory:{array:Ne},slots:{0:Oe}});Object.assign(Oe,{structure:R,memory:{array:Ne,offset:0,length:8},slots:{0:It}});Object.assign(It,{structure:X,memory:{array:rr},reloc:0,const:!0});Object.assign(Se,{slots:{0:je,1:ze,2:he}});Object.assign(je,{structure:s,memory:{array:ar},slots:{0:Rt}});Object.assign(Rt,{structure:I});Object.assign(ze,{structure:s,memory:{array:nr},slots:{0:kt}});Object.assign(kt,{structure:ct});Object.assign(he,{structure:b,memory:{array:ir},slots:{0:de}});Object.assign(de,{structure:O,memory:{array:or}});Object.assign(we,{memory:{array:Et},slots:{0:Ae}});Object.assign(Ae,{structure:Y,memory:{array:Et},slots:{0:Ue}});Object.assign(Ue,{structure:R,memory:{array:Et,offset:0,length:8},slots:{0:It}});Object.assign(Pe,{memory:{array:Qe},slots:{0:Ve}});Object.assign(Ve,{structure:q,memory:{array:Qe,offset:0,length:8},slots:{0:qt}});Object.assign(qt,{structure:Z,memory:{array:cr},reloc:0});Object.assign(Ie,{slots:{0:Re,1:ke,2:qe}});Object.assign(Re,{structure:s,memory:{array:ur},slots:{0:Rt}});Object.assign(ke,{structure:s,memory:{array:mr},slots:{0:kt}});Object.assign(qe,{structure:b,memory:{array:yr},slots:{0:ve}});Object.assign(ve,{structure:O,memory:{array:br}});Object.assign(Ee,{memory:{array:xt},slots:{0:xe}});Object.assign(xe,{structure:tt,memory:{array:xt},slots:{0:Ce}});Object.assign(Ce,{structure:q,memory:{array:xt,offset:0,length:8},slots:{0:qt}});Object.assign(Ke,{memory:{array:lr}});Object.assign(_e,{slots:{0:vt}});Object.assign(vt,{structure:V,memory:{array:pr}});Object.assign(De,{slots:{0:vt}});Object.assign(Fe,{slots:{0:Me,1:$e,2:Be,3:He}});Object.assign(Me,{structure:s,memory:{array:gr},slots:{0:Te}});Object.assign(Te,{structure:ot});Object.assign($e,{structure:s,memory:{array:fr},slots:{0:Le}});Object.assign(Le,{structure:k});Object.assign(Be,{structure:s,memory:{array:Or},slots:{0:Ge}});Object.assign(Ge,{structure:v});Object.assign(He,{structure:s,memory:{array:Sr},slots:{0:Je}});Object.assign(Je,{structure:E});const jr={argStruct:mt,thunkId:2,name:"createOutput"},zr={argStruct:bt,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(f,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(D,{...e,type:1,name:"[21:0]u8",length:21,byteSize:22,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(F,{...e,type:13,name:"*const [21:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:D}],methods:[]}});Object.assign(M,{...e,type:1,name:"[9:0]u8",length:9,byteSize:10,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(T,{...e,type:13,name:"*const [9:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(b,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:b}],methods:[]}});Object.assign(O,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign($,{...e,type:1,name:"[6:0]u8",length:6,byteSize:7,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(L,{...e,type:13,name:"*const [6:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[]}});Object.assign(i,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:i}],methods:[]}});Object.assign(p,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:p}],methods:[]}});Object.assign(d,{...e,type:2,name:"Struct738220547",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:i},{...t,type:9,slot:1,name:"1",structure:i}],methods:[],template:_t}});Object.assign(B,{...e,type:2,name:"Struct2662133551",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:i},{...t,type:9,slot:1,name:"1",structure:i}],methods:[],template:Mt}});Object.assign(S,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(G,{...e,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(H,{...e,type:2,name:"Struct2812903031",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:d},{...t,type:9,slot:2,name:"maxValue",structure:B},{...t,type:9,slot:3,name:"defaultValue",structure:d}],methods:[],template:Lt}});Object.assign(J,{...e,type:2,name:"Struct1648557512",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:i},{...t,type:9,slot:2,name:"maxValue",structure:i},{...t,type:9,slot:3,name:"defaultValue",structure:i}],methods:[],template:Gt}});Object.assign(N,{...e,type:2,name:"Struct1532877655",align:1,instance:{members:[{...t,type:9,slot:0,name:"center",structure:H},{...t,type:9,slot:1,name:"amplitude",structure:J}],methods:[],template:Wt}});Object.assign(w,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:b}],methods:[],template:Xt}});Object.assign(Q,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:9,slot:0,name:"src",structure:w}],methods:[],template:Zt}});Object.assign(W,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:9,slot:0,name:"dst",structure:w}],methods:[],template:te}});Object.assign(ot,{...e,type:2,name:"jitter.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:F},{...t,type:9,slot:1,name:"vendor",structure:T},{...t,type:9,slot:2,name:"version",structure:b},{...t,type:9,slot:3,name:"description",structure:L},{...t,type:9,slot:4,name:"parameters",structure:N},{...t,type:9,slot:5,name:"inputImages",structure:Q},{...t,type:9,slot:6,name:"outputImages",structure:W}],methods:[],template:ee}});Object.assign(I,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(X,{...e,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(R,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:X}],methods:[]}});Object.assign(m,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[]}});Object.assign(g,{...e,type:11,name:"jitter.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:g},{...t,type:9,slot:1,name:"display-p3",structure:g}],methods:[],template:le}});Object.assign(P,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(ct,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(Y,{...e,type:2,name:"jitter.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:R},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:g},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:fe},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:b}],methods:[],template:Se}});Object.assign(k,{...e,type:2,name:"jitter.KernelInput(u8,jitter.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:Y}],methods:[],template:we}});Object.assign(Z,{...e,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(q,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:Z}],methods:[]}});Object.assign(tt,{...e,type:2,name:"jitter.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:q},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:g},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:Pe},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:b}],methods:[],template:Ie}});Object.assign(v,{...e,type:2,name:"jitter.KernelOutput(u8,jitter.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:tt}],methods:[],template:Ee}});Object.assign(E,{...e,type:2,name:"jitter.KernelParameters(jitter.kernel)",byteSize:16,align:8,instance:{members:[{...t,type:7,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"center",structure:G},{...t,type:4,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"amplitude",structure:S}],methods:[],template:Ke}});Object.assign(V,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(jitter.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:V}],methods:[],template:_e}});Object.assign(ut,{...e,type:9,name:"ErrorSet555559574!jitter.KernelOutput(u8,jitter.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:V}],methods:[]}});Object.assign(mt,{...e,type:5,name:"createOutput",byteSize:80,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...t,type:3,isRequired:!0,bitOffset:160,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...t,type:7,isRequired:!0,bitOffset:192,bitSize:192,byteSize:24,slot:0,name:"2",structure:k},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:128,byteSize:16,slot:1,name:"3",structure:E},{...t,type:7,isRequired:!0,bitOffset:384,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ut}],methods:[]}});Object.assign(_,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(jitter.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:_}],methods:[],template:De}});Object.assign(yt,{...e,type:9,name:"ErrorSet1725766987!jitter.KernelOutput(u8,jitter.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:_}],methods:[]}});Object.assign(bt,{...e,type:5,name:"createPartialOutput",byteSize:88,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...t,type:3,isRequired:!0,bitOffset:160,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...t,type:3,isRequired:!0,bitOffset:192,bitSize:32,byteSize:4,slot:5,name:"2",structure:m},{...t,type:3,isRequired:!0,bitOffset:224,bitSize:32,byteSize:4,slot:6,name:"3",structure:m},{...t,type:7,isRequired:!0,bitOffset:256,bitSize:192,byteSize:24,slot:0,name:"4",structure:k},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:128,byteSize:16,slot:1,name:"5",structure:E},{...t,type:7,isRequired:!0,bitOffset:448,bitSize:224,byteSize:28,slot:2,name:"retval",structure:yt}],methods:[]}});Object.assign(lt,{...e,type:2,name:"jitter",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:s},{...t,type:9,slot:1,name:"Input",structure:s},{...t,type:9,slot:2,name:"Output",structure:s},{...t,type:9,slot:3,name:"Parameters",structure:s}],methods:[jr,zr],template:Fe}});const hr=[s,f,D,F,M,T,b,O,$,L,i,p,d,B,S,G,H,J,N,w,Q,W,ot,I,X,R,m,g,P,ct,Y,k,Z,q,tt,v,E,V,ut,mt,_,yt,bt,lt],dr=lt,wr={runtimeSafety:!1,littleEndian:!0},at=Os();at.getControlObject();at.recreateStructures(hr,wr);const Ar=(async()=>{const o=new URL("jitter-96deffa1.wasm",import.meta.url).href;return fetch(o)})();at.loadModule(Ar);at.linkVariables(!0);const{constructor:Ur}=dr,{createPartialOutput:Pr,Input:Vr,kernel:it}=Ur;function Ir(o,c,a,r,n={},j={}){const z=[];for(const[y]of it.inputImages)z.push(y);const A=[];for(const[y]of it.outputImages)A.push(y);if(Array.isArray(n)){const y=n;n={};for(const[l,h]of z.entries())n[h]=y[l]}const u=new Vr(void 0),x=[];let U;for(const y of z){let l=n[y];if(l||(z.length===1&&["data","width","height"].every(h=>!!n[h])?l=n:x.push(y)),u[y]=l,U){if(l.colorSpace!==U)throw new Error(`Input images must all use the same color space: ${U}`)}else U=l.colorSpace}if(x.length>0)throw new Error(`Missing input image${x.length>1?"s":""}: ${x.join(", ")}`);const nt=Pr(o,c,a,r,u,j),Ct=y=>{const l={};for(const h of A){const{data:{typedArray:C},width:Kt,height:Xe}=y[h];let K;if(typeof ImageData=="function"){const Ye=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);K=new ImageData(Ye,Kt,r,{colorSpace:U})}else K={data:C,width:Kt,height:Xe};if(A.length===1)return K;l[h]=K}return l};return nt[Symbol.toStringTag]==="Promise"?nt.then(Ct):Ct(nt)}function Rr(){const o={};for(let[c,a]of it){if(c==="parameters"){const r={};for(const[n,j]of a){const z=r[n]={};for(let[A,u]of j)typeof u=="object"?"string"in u?u=u.string:u=We(u):typeof u=="function"&&(u=kr(u.name)),z[A]=u}a=r}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());o[c]=a}return o}function We(o){const c=[];for(let[a,r]of o)typeof r=="object"&&(r=We(r)),c[a]=r;return c}function kr(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[c,a,...r]=o.data;qr(c,r).then(([n,j])=>{postMessage([c,a,n],{transfer:j})}).catch(n=>{postMessage(["error",a,n])})};async function qr(o,c){switch(o){case"getKernelInfo":return[Rr(...c)];case"createPartialImageData":const r=await Ir(...c),n=[];if("data"in r&&"width"in r&&"height"in r)n.push(r.data.buffer);else for(const j of Object.entries(r))n.push(r.data.buffer);return[r,n];default:throw new Error(`Unknown function: ${o}`)}}
