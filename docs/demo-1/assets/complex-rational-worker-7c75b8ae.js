import{u as Jr,a as Nr,b as Qr,c as Wr,d as Xr,e as Yr,f as Zr,g as ta,h as ea,i as sa,j as ra,k as aa,l as na,m as oa,n as ca,o as ia,p as ua,q as ma}from"./index-33238b17.js";Jr();aa();na();Nr();Qr();oa();ca();ia();ua();Wr();Xr();Yr();Zr();ma();ta();ea();sa();const s={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},a={},f={},L={},B={},G={},H={},b={},S={},J={},N={},e={},r={},Q={},W={},X={},k={},p={},Y={},Z={},tt={},et={},st={},rt={},j={},at={},nt={},ot={},ct={},it={},ut={},V={},mt={},yt={},lt={},bt={},gt={},x={},pt={},Ot={},xt={},I={},jt={},T={},u={},O={},q={},Pt={},ft={},v={},St={},E={},zt={},K={},C={},U={},Rt={},kt={},h={},qt={},It={},Tt={},He={},vt={},Je={},Et={},Ne={},Qe={},Kt={},We={},Ct={},Xe={},Ye={},Mt={},Ze={},Dt={},ts={},es={},Ft={},z={},_t={},$t={},Lt={},ss={},Bt={},rs={},Gt={},as={},ns={},Ht={},os={},Jt={},cs={},is={},Nt={},us={},Qt={},ms={},ys={},Wt={},Xt={},Yt={},Zt={},ls={},te={},bs={},ee={},gs={},ps={},M={},Os={},D={},js={},fs={},se={},Ss={},re={},zs={},ws={},ae={},ne={},oe={},ce={},As={},ie={},ds={},ue={},Us={},hs={},me={},Vs={},ye={},xs={},Ps={},le={},Rs={},be={},ks={},qs={},ge={},pe={},Oe={},je={},Is={},wt={},Ts={},At={},vs={},Es={},fe={},Ks={},Se={},Cs={},Ms={},ze={},we={},Ae={},de={},Ds={},Ue={},Fs={},he={},_s={},$s={},Ve={},xe={},Pe={},Re={},Ls={},ke={},qe={},Ie={},Te={},ve={},Ee={},Bs={},dt={},Gs={},Hs={},Ke={},Js={},Ce={},Ns={},Qs={},Ws={},Xs={},Ys={},Zs={},tr={},er={},sr={},rr={},ar={},nr={},or={},cr={},ir={},ur={},mr={},Me={},yr={},lr={},De={},br={},Fe={},gr={},pr={},Or={},jr={},fr={},Sr={},zr={},_e={},wr={},Ar={},dr={},Ur={},hr={},Vr={},xr={},Pr={},Rr={},kr={},qr={},Ir={},Tr={},vr={},Er={},Kr={},Cr={},Mr={},Dr={},Fr={},_r={},$r={},ya=new Uint8Array,la=new Uint8Array([0,0,0,0,0,0,36,192]),ba=new Uint8Array,ga=new Uint8Array([0,0,0,0,0,0,36,192]),pa=new Uint8Array,Oa=new Uint8Array([0,0,0,0,0,0,36,64]),ja=new Uint8Array,fa=new Uint8Array([0,0,0,0,0,0,36,64]),Sa=new Uint8Array,za=new Uint8Array([0,0,0,0,0,0,240,63]),wa=new Uint8Array,Aa=new Uint8Array([215,163,112,61,10,215,227,63]),da=new Uint8Array,Ua=new Uint8Array,ha=new Uint8Array,Va=new Uint8Array,xa=new Uint8Array,Pa=new Uint8Array([0,0,0,0,0,64,127,192]),Ra=new Uint8Array,ka=new Uint8Array([0,0,0,0,0,64,127,192]),qa=new Uint8Array,Ia=new Uint8Array([0,0,0,0,0,64,127,64]),Ta=new Uint8Array,va=new Uint8Array([0,0,0,0,0,64,127,64]),Ea=new Uint8Array,Ka=new Uint8Array([0,0,0,0,0,128,85,192]),Ca=new Uint8Array,Ma=new Uint8Array([0,0,0,0,0,0,54,64]),Da=new Uint8Array,Fa=new Uint8Array,_a=new Uint8Array,$a=new Uint8Array,La=new Uint8Array,Ba=new Uint8Array([0,0,0,0,0,0,240,191]),Ga=new Uint8Array,Ha=new Uint8Array([0,0,0,0,0,0,240,191]),Ja=new Uint8Array,Na=new Uint8Array([0,0,0,0,0,0,240,63]),Qa=new Uint8Array,Wa=new Uint8Array([0,0,0,0,0,0,240,63]),Xa=new Uint8Array,Ya=new Uint8Array([123,20,174,71,225,122,148,191]),Za=new Uint8Array,tn=new Uint8Array([123,20,174,71,225,122,148,191]),en=new Uint8Array,sn=new Uint8Array,rn=new Uint8Array,an=new Uint8Array,nn=new Uint8Array,on=new Uint8Array([0,0,0,0,0,0,89,192]),cn=new Uint8Array,un=new Uint8Array([0,0,0,0,0,0,89,192]),mn=new Uint8Array,yn=new Uint8Array([0,0,0,0,0,0,89,64]),ln=new Uint8Array,bn=new Uint8Array([0,0,0,0,0,0,89,64]),gn=new Uint8Array,pn=new Uint8Array([0,0,0,0,0,0,0,192]),On=new Uint8Array,jn=new Uint8Array([0,0,0,0,0,0,36,64]),fn=new Uint8Array,Sn=new Uint8Array,zn=new Uint8Array,wn=new Uint8Array,An=new Uint8Array,dn=new Uint8Array([0,0,0,0,0,64,143,64]),Un=new Uint8Array,hn=new Uint8Array([0,0,0,0,0,64,143,64]),Vn=new Uint8Array,xn=new Uint8Array([0,0,0,0,0,0,119,64]),Pn=new Uint8Array,Rn=new Uint8Array([0,0,0,0,0,208,113,64]),kn=new Uint8Array,qn=new Uint8Array,In=new Uint8Array,Tn=new Uint8Array,vn=new Uint8Array,En=new Uint8Array([0,0,0,0,0,0,101,64]),Kn=new Uint8Array,Cn=new Uint8Array([0,0,0,0,0,32,103,64]),Mn=new Uint8Array,Dn=new Uint8Array,Fn=new Uint8Array,_n=new Uint8Array,$n=new Uint8Array,Ln=new Uint8Array,Bn=new Uint8Array,Gn=new Uint8Array,Hn=new Uint8Array,Jn=new Uint8Array,Nn=new Uint8Array,Qn=new Uint8Array([4]),Wn=new Uint8Array,Xn=new Uint8Array,Yn=new Uint8Array([8,5,0,1]),Zn=new Uint8Array([99,111,109,112,108,101,120,32,114,97,116,105,111,110,97,108,0]),to=new Uint8Array([36,5,0,1]),eo=new Uint8Array([112,105,120,101,108,101,114,111,0]),so=new Uint8Array,ro=new Uint8Array([1]),ao=new Uint8Array([62,5,0,1]),no=new Uint8Array([99,111,109,112,108,101,120,32,109,97,112,112,105,110,103,32,102,40,122,41,61,32,40,97,122,50,43,98,41,47,40,99,122,50,43,100,41,0]),oo=new Uint8Array,co=new Uint8Array,io=new Uint8Array,uo=new Uint8Array([0]),mo=new Uint8Array([1]),Lr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),yo=new Uint8Array,lo=new Uint8Array,bo=new Uint8Array,go=new Uint8Array,po=new Uint8Array([4]),$e=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Br=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Oo=new Uint8Array,jo=new Uint8Array,fo=new Uint8Array,So=new Uint8Array,zo=new Uint8Array([4]),Le=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),wo=new Uint8Array([0,0,128,63,82,184,30,63,0,0,172,194,0,0,176,65,10,215,163,188,10,215,163,188,0,0,0,192,0,0,32,65,0,0,184,67,0,128,142,67,0,0,40,67,0,0,57,67]),Ao=new Uint8Array([27,0]),Uo=new Uint8Array([27,0]),ho=new Uint8Array,Vo=new Uint8Array,xo=new Uint8Array,Po=new Uint8Array;Object.assign(He,{slots:{0:vt,1:Et}});Object.assign(vt,{structure:e,memory:{array:ya},const:!0,slots:{0:Je}});Object.assign(Je,{structure:r,memory:{array:la},const:!0});Object.assign(Et,{structure:e,memory:{array:ba},const:!0,slots:{0:Ne}});Object.assign(Ne,{structure:r,memory:{array:ga},const:!0});Object.assign(Qe,{slots:{0:Kt,1:Ct}});Object.assign(Kt,{structure:e,memory:{array:pa},const:!0,slots:{0:We}});Object.assign(We,{structure:r,memory:{array:Oa},const:!0});Object.assign(Ct,{structure:e,memory:{array:ja},const:!0,slots:{0:Xe}});Object.assign(Xe,{structure:r,memory:{array:fa},const:!0});Object.assign(Ye,{slots:{0:Mt,1:Dt}});Object.assign(Mt,{structure:e,memory:{array:Sa},const:!0,slots:{0:Ze}});Object.assign(Ze,{structure:r,memory:{array:za},const:!0});Object.assign(Dt,{structure:e,memory:{array:wa},const:!0,slots:{0:ts}});Object.assign(ts,{structure:r,memory:{array:Aa},const:!0});Object.assign(es,{slots:{0:Ft,1:_t,2:$t,3:Lt}});Object.assign(Ft,{structure:a,memory:{array:da},const:!0,slots:{0:z}});Object.assign(z,{structure:p});Object.assign(_t,{structure:Q,memory:{array:Ua},const:!0,slots:{0:vt,1:Et}});Object.assign($t,{structure:W,memory:{array:ha},const:!0,slots:{0:Kt,1:Ct}});Object.assign(Lt,{structure:X,memory:{array:Va},const:!0,slots:{0:Mt,1:Dt}});Object.assign(ss,{slots:{0:Bt,1:Gt}});Object.assign(Bt,{structure:e,memory:{array:xa},const:!0,slots:{0:rs}});Object.assign(rs,{structure:r,memory:{array:Pa},const:!0});Object.assign(Gt,{structure:e,memory:{array:Ra},const:!0,slots:{0:as}});Object.assign(as,{structure:r,memory:{array:ka},const:!0});Object.assign(ns,{slots:{0:Ht,1:Jt}});Object.assign(Ht,{structure:e,memory:{array:qa},const:!0,slots:{0:os}});Object.assign(os,{structure:r,memory:{array:Ia},const:!0});Object.assign(Jt,{structure:e,memory:{array:Ta},const:!0,slots:{0:cs}});Object.assign(cs,{structure:r,memory:{array:va},const:!0});Object.assign(is,{slots:{0:Nt,1:Qt}});Object.assign(Nt,{structure:e,memory:{array:Ea},const:!0,slots:{0:us}});Object.assign(us,{structure:r,memory:{array:Ka},const:!0});Object.assign(Qt,{structure:e,memory:{array:Ca},const:!0,slots:{0:ms}});Object.assign(ms,{structure:r,memory:{array:Ma},const:!0});Object.assign(ys,{slots:{0:Wt,1:Xt,2:Yt,3:Zt}});Object.assign(Wt,{structure:a,memory:{array:Da},const:!0,slots:{0:z}});Object.assign(Xt,{structure:Z,memory:{array:Fa},const:!0,slots:{0:Bt,1:Gt}});Object.assign(Yt,{structure:tt,memory:{array:_a},const:!0,slots:{0:Ht,1:Jt}});Object.assign(Zt,{structure:et,memory:{array:$a},const:!0,slots:{0:Nt,1:Qt}});Object.assign(ls,{slots:{0:te,1:ee}});Object.assign(te,{structure:e,memory:{array:La},const:!0,slots:{0:bs}});Object.assign(bs,{structure:r,memory:{array:Ba},const:!0});Object.assign(ee,{structure:e,memory:{array:Ga},const:!0,slots:{0:gs}});Object.assign(gs,{structure:r,memory:{array:Ha},const:!0});Object.assign(ps,{slots:{0:M,1:D}});Object.assign(M,{structure:e,memory:{array:Ja},const:!0,slots:{0:Os}});Object.assign(Os,{structure:r,memory:{array:Na},const:!0});Object.assign(D,{structure:e,memory:{array:Qa},const:!0,slots:{0:js}});Object.assign(js,{structure:r,memory:{array:Wa},const:!0});Object.assign(fs,{slots:{0:se,1:re}});Object.assign(se,{structure:e,memory:{array:Xa},const:!0,slots:{0:Ss}});Object.assign(Ss,{structure:r,memory:{array:Ya},const:!0});Object.assign(re,{structure:e,memory:{array:Za},const:!0,slots:{0:zs}});Object.assign(zs,{structure:r,memory:{array:tn},const:!0});Object.assign(ws,{slots:{0:ae,1:ne,2:oe,3:ce}});Object.assign(ae,{structure:a,memory:{array:en},const:!0,slots:{0:z}});Object.assign(ne,{structure:rt,memory:{array:sn},const:!0,slots:{0:te,1:ee}});Object.assign(oe,{structure:j,memory:{array:rn},const:!0,slots:{0:M,1:D}});Object.assign(ce,{structure:at,memory:{array:an},const:!0,slots:{0:se,1:re}});Object.assign(As,{slots:{0:ie,1:ue}});Object.assign(ie,{structure:e,memory:{array:nn},const:!0,slots:{0:ds}});Object.assign(ds,{structure:r,memory:{array:on},const:!0});Object.assign(ue,{structure:e,memory:{array:cn},const:!0,slots:{0:Us}});Object.assign(Us,{structure:r,memory:{array:un},const:!0});Object.assign(hs,{slots:{0:me,1:ye}});Object.assign(me,{structure:e,memory:{array:mn},const:!0,slots:{0:Vs}});Object.assign(Vs,{structure:r,memory:{array:yn},const:!0});Object.assign(ye,{structure:e,memory:{array:ln},const:!0,slots:{0:xs}});Object.assign(xs,{structure:r,memory:{array:bn},const:!0});Object.assign(Ps,{slots:{0:le,1:be}});Object.assign(le,{structure:e,memory:{array:gn},const:!0,slots:{0:Rs}});Object.assign(Rs,{structure:r,memory:{array:pn},const:!0});Object.assign(be,{structure:e,memory:{array:On},const:!0,slots:{0:ks}});Object.assign(ks,{structure:r,memory:{array:jn},const:!0});Object.assign(qs,{slots:{0:ge,1:pe,2:Oe,3:je}});Object.assign(ge,{structure:a,memory:{array:fn},const:!0,slots:{0:z}});Object.assign(pe,{structure:ot,memory:{array:Sn},const:!0,slots:{0:ie,1:ue}});Object.assign(Oe,{structure:ct,memory:{array:zn},const:!0,slots:{0:me,1:ye}});Object.assign(je,{structure:it,memory:{array:wn},const:!0,slots:{0:le,1:be}});Object.assign(Is,{slots:{0:wt,1:At}});Object.assign(wt,{structure:e,memory:{array:An},const:!0,slots:{0:Ts}});Object.assign(Ts,{structure:r,memory:{array:dn},const:!0});Object.assign(At,{structure:e,memory:{array:Un},const:!0,slots:{0:vs}});Object.assign(vs,{structure:r,memory:{array:hn},const:!0});Object.assign(Es,{slots:{0:fe,1:Se}});Object.assign(fe,{structure:e,memory:{array:Vn},const:!0,slots:{0:Ks}});Object.assign(Ks,{structure:r,memory:{array:xn},const:!0});Object.assign(Se,{structure:e,memory:{array:Pn},const:!0,slots:{0:Cs}});Object.assign(Cs,{structure:r,memory:{array:Rn},const:!0});Object.assign(Ms,{slots:{0:ze,1:we,2:Ae,3:de}});Object.assign(ze,{structure:a,memory:{array:kn},const:!0,slots:{0:z}});Object.assign(we,{structure:j,memory:{array:qn},const:!0,slots:{0:M,1:D}});Object.assign(Ae,{structure:V,memory:{array:In},const:!0,slots:{0:wt,1:At}});Object.assign(de,{structure:mt,memory:{array:Tn},const:!0,slots:{0:fe,1:Se}});Object.assign(Ds,{slots:{0:Ue,1:he}});Object.assign(Ue,{structure:e,memory:{array:vn},const:!0,slots:{0:Fs}});Object.assign(Fs,{structure:r,memory:{array:En},const:!0});Object.assign(he,{structure:e,memory:{array:Kn},const:!0,slots:{0:_s}});Object.assign(_s,{structure:r,memory:{array:Cn},const:!0});Object.assign($s,{slots:{0:Ve,1:xe,2:Pe,3:Re}});Object.assign(Ve,{structure:a,memory:{array:Mn},const:!0,slots:{0:z}});Object.assign(xe,{structure:j,memory:{array:Dn},const:!0,slots:{0:M,1:D}});Object.assign(Pe,{structure:V,memory:{array:Fn},const:!0,slots:{0:wt,1:At}});Object.assign(Re,{structure:lt,memory:{array:_n},const:!0,slots:{0:Ue,1:he}});Object.assign(Ls,{slots:{0:ke,1:qe,2:Ie,3:Te,4:ve,5:Ee}});Object.assign(ke,{structure:Y,memory:{array:$n},const:!0,slots:{0:Ft,1:_t,2:$t,3:Lt}});Object.assign(qe,{structure:st,memory:{array:Ln},const:!0,slots:{0:Wt,1:Xt,2:Yt,3:Zt}});Object.assign(Ie,{structure:nt,memory:{array:Bn},const:!0,slots:{0:ae,1:ne,2:oe,3:ce}});Object.assign(Te,{structure:ut,memory:{array:Gn},const:!0,slots:{0:ge,1:pe,2:Oe,3:je}});Object.assign(ve,{structure:yt,memory:{array:Hn},const:!0,slots:{0:ze,1:we,2:Ae,3:de}});Object.assign(Ee,{structure:bt,memory:{array:Jn},const:!0,slots:{0:Ve,1:xe,2:Pe,3:Re}});Object.assign(Bs,{slots:{0:dt}});Object.assign(dt,{structure:b,memory:{array:Nn},const:!0,slots:{0:Gs}});Object.assign(Gs,{structure:S,memory:{array:Qn},const:!0});Object.assign(Hs,{slots:{0:Ke}});Object.assign(Ke,{structure:x,memory:{array:Wn},const:!0,slots:{0:dt}});Object.assign(Js,{slots:{0:Ce}});Object.assign(Ce,{structure:x,memory:{array:Xn},const:!0,slots:{0:dt}});Object.assign(Ns,{slots:{0:Qs,1:Xs,2:Zs,3:er,4:rr,5:ar,6:nr}});Object.assign(Qs,{structure:B,memory:{array:Yn},const:!0,slots:{0:Ws}});Object.assign(Ws,{structure:L,memory:{array:Zn},reloc:16778504});Object.assign(Xs,{structure:H,memory:{array:to},const:!0,slots:{0:Ys}});Object.assign(Ys,{structure:G,memory:{array:eo},reloc:16778532});Object.assign(Zs,{structure:b,memory:{array:so},const:!0,slots:{0:tr}});Object.assign(tr,{structure:S,memory:{array:ro},const:!0});Object.assign(er,{structure:N,memory:{array:ao},const:!0,slots:{0:sr}});Object.assign(sr,{structure:J,memory:{array:no},reloc:16778558});Object.assign(rr,{structure:gt,memory:{array:oo},const:!0,slots:{0:ke,1:qe,2:Ie,3:Te,4:ve,5:Ee}});Object.assign(ar,{structure:pt,memory:{array:co},const:!0,slots:{0:Ke}});Object.assign(nr,{structure:Ot,memory:{array:io},const:!0,slots:{0:Ce}});Object.assign(or,{slots:{0:cr,1:ir}});Object.assign(cr,{structure:O,memory:{array:uo},const:!0});Object.assign(ir,{structure:O,memory:{array:mo},const:!0});Object.assign(ur,{memory:{array:Lr},slots:{0:mr}});Object.assign(mr,{structure:T,memory:{array:Lr,offset:0,length:8},slots:{0:Me}});Object.assign(Me,{structure:jt,memory:{array:yo},reloc:0});Object.assign(yr,{slots:{0:lr,1:br,2:gr}});Object.assign(lr,{structure:a,memory:{array:lo},const:!0,slots:{0:De}});Object.assign(De,{structure:I});Object.assign(br,{structure:a,memory:{array:bo},const:!0,slots:{0:Fe}});Object.assign(Fe,{structure:Pt});Object.assign(gr,{structure:b,memory:{array:go},const:!0,slots:{0:pr}});Object.assign(pr,{structure:S,memory:{array:po},const:!0});Object.assign(Or,{memory:{array:$e},slots:{0:jr}});Object.assign(jr,{structure:ft,memory:{array:$e},slots:{0:fr}});Object.assign(fr,{structure:T,memory:{array:$e,offset:0,length:8},slots:{0:Me}});Object.assign(Sr,{memory:{array:Br},slots:{0:zr}});Object.assign(zr,{structure:E,memory:{array:Br,offset:0,length:8},slots:{0:_e}});Object.assign(_e,{structure:St,memory:{array:Oo},reloc:0});Object.assign(wr,{slots:{0:Ar,1:dr,2:Ur}});Object.assign(Ar,{structure:a,memory:{array:jo},const:!0,slots:{0:De}});Object.assign(dr,{structure:a,memory:{array:fo},const:!0,slots:{0:Fe}});Object.assign(Ur,{structure:b,memory:{array:So},const:!0,slots:{0:hr}});Object.assign(hr,{structure:S,memory:{array:zo},const:!0});Object.assign(Vr,{memory:{array:Le},slots:{0:xr}});Object.assign(xr,{structure:zt,memory:{array:Le},slots:{0:Pr}});Object.assign(Pr,{structure:E,memory:{array:Le,offset:0,length:8},slots:{0:_e}});Object.assign(Rr,{memory:{array:wo}});Object.assign(kr,{slots:{0:qr}});Object.assign(qr,{structure:U,memory:{array:Ao},const:!0});Object.assign(Ir,{slots:{0:Tr}});Object.assign(Tr,{structure:h,memory:{array:Uo},const:!0});Object.assign(vr,{slots:{0:Er,1:Cr,2:Dr,3:_r}});Object.assign(Er,{structure:a,memory:{array:ho},const:!0,slots:{0:Kr}});Object.assign(Kr,{structure:xt});Object.assign(Cr,{structure:a,memory:{array:Vo},const:!0,slots:{0:Mr}});Object.assign(Mr,{structure:v});Object.assign(Dr,{structure:a,memory:{array:xo},const:!0,slots:{0:Fr}});Object.assign(Fr,{structure:K});Object.assign(_r,{structure:a,memory:{array:Po},const:!0,slots:{0:$r}});Object.assign($r,{structure:C});const Ro={argStruct:kt,thunkId:2,name:"createOutput"},ko={argStruct:It,thunkId:3,name:"createPartialOutput"};Object.assign(a,{...s,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:a}],methods:[]}});Object.assign(f,{...s,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(L,{...s,type:1,name:"[16:0]u8",length:16,byteSize:17,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(B,{...s,type:13,name:"*const [16:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[]}});Object.assign(G,{...s,type:1,name:"[8:0]u8",length:8,byteSize:9,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(H,{...s,type:13,name:"*const [8:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:G}],methods:[]}});Object.assign(b,{...s,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:b}],methods:[]}});Object.assign(S,{...s,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(J,{...s,type:1,name:"[37:0]u8",length:37,byteSize:38,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(N,{...s,type:13,name:"*const [37:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:J}],methods:[]}});Object.assign(e,{...s,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:e}],methods:[]}});Object.assign(r,{...s,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[]}});Object.assign(Q,{...s,type:2,name:"Struct2010658752",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:He}});Object.assign(W,{...s,type:2,name:"Struct1464340365",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:Qe}});Object.assign(X,{...s,type:2,name:"Struct2556760447",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:Ye}});Object.assign(k,{...s,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(p,{...s,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(Y,{...s,type:2,name:"Struct1234170353",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:a},{...t,type:7,slot:1,name:"minValue",structure:Q},{...t,type:7,slot:2,name:"maxValue",structure:W},{...t,type:7,slot:3,name:"defaultValue",structure:X}],methods:[],template:es}});Object.assign(Z,{...s,type:2,name:"Struct2891036612",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:ss}});Object.assign(tt,{...s,type:2,name:"Struct2324270226",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:ns}});Object.assign(et,{...s,type:2,name:"Struct2440688355",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:is}});Object.assign(st,{...s,type:2,name:"Struct2687980129",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:a},{...t,type:7,slot:1,name:"minValue",structure:Z},{...t,type:7,slot:2,name:"maxValue",structure:tt},{...t,type:7,slot:3,name:"defaultValue",structure:et}],methods:[],template:ys}});Object.assign(rt,{...s,type:2,name:"Struct2009719738",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:ls}});Object.assign(j,{...s,type:2,name:"Struct2999377579",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:ps}});Object.assign(at,{...s,type:2,name:"Struct1674980473",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:fs}});Object.assign(nt,{...s,type:2,name:"Struct988821803",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:a},{...t,type:7,slot:1,name:"minValue",structure:rt},{...t,type:7,slot:2,name:"maxValue",structure:j},{...t,type:7,slot:3,name:"defaultValue",structure:at}],methods:[],template:ws}});Object.assign(ot,{...s,type:2,name:"Struct909833941",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:As}});Object.assign(ct,{...s,type:2,name:"Struct2155520631",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:hs}});Object.assign(it,{...s,type:2,name:"Struct1147135485",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:Ps}});Object.assign(ut,{...s,type:2,name:"Struct3837692994",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:a},{...t,type:7,slot:1,name:"minValue",structure:ot},{...t,type:7,slot:2,name:"maxValue",structure:ct},{...t,type:7,slot:3,name:"defaultValue",structure:it}],methods:[],template:qs}});Object.assign(V,{...s,type:2,name:"Struct830517164",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:Is}});Object.assign(mt,{...s,type:2,name:"Struct3127283304",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:Es}});Object.assign(yt,{...s,type:2,name:"Struct3732162626",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:a},{...t,type:7,slot:1,name:"minValue",structure:j},{...t,type:7,slot:2,name:"maxValue",structure:V},{...t,type:7,slot:3,name:"defaultValue",structure:mt}],methods:[],template:Ms}});Object.assign(lt,{...s,type:2,name:"Struct424252010",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:Ds}});Object.assign(bt,{...s,type:2,name:"Struct594465059",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:a},{...t,type:7,slot:1,name:"minValue",structure:j},{...t,type:7,slot:2,name:"maxValue",structure:V},{...t,type:7,slot:3,name:"defaultValue",structure:lt}],methods:[],template:$s}});Object.assign(gt,{...s,type:2,name:"Struct4189830687",align:1,instance:{members:[{...t,type:7,slot:0,name:"a",structure:Y},{...t,type:7,slot:1,name:"b",structure:st},{...t,type:7,slot:2,name:"c",structure:nt},{...t,type:7,slot:3,name:"d",structure:ut},{...t,type:7,slot:4,name:"size",structure:yt},{...t,type:7,slot:5,name:"center",structure:bt}],methods:[],template:Ls}});Object.assign(x,{...s,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:b}],methods:[],template:Bs}});Object.assign(pt,{...s,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:7,slot:0,name:"src",structure:x}],methods:[],template:Hs}});Object.assign(Ot,{...s,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:x}],methods:[],template:Js}});Object.assign(xt,{...s,type:2,name:"complex-rational.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:B},{...t,type:7,slot:1,name:"vendor",structure:H},{...t,type:7,slot:2,name:"version",structure:b},{...t,type:7,slot:3,name:"description",structure:N},{...t,type:7,slot:4,name:"parameters",structure:gt},{...t,type:7,slot:5,name:"inputImages",structure:pt},{...t,type:7,slot:6,name:"outputImages",structure:Ot}],methods:[],template:Ns}});Object.assign(I,{...s,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(jt,{...s,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(T,{...s,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:jt}],methods:[]}});Object.assign(u,{...s,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:u}],methods:[]}});Object.assign(O,{...s,type:11,name:"complex-rational.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:O}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:O},{...t,type:7,slot:1,name:"display-p3",structure:O}],methods:[],template:or}});Object.assign(q,{...s,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:q}],methods:[]}});Object.assign(Pt,{...s,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(ft,{...s,type:2,name:"complex-rational.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:T},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:q}],methods:[],template:ur},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:a},{...t,type:7,slot:1,name:"FPixel",structure:a},{...t,type:7,slot:2,name:"channels",structure:b}],methods:[],template:yr}});Object.assign(v,{...s,type:2,name:"complex-rational.KernelInput(u8,complex-rational.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:ft}],methods:[],template:Or}});Object.assign(St,{...s,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(E,{...s,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:St}],methods:[]}});Object.assign(zt,{...s,type:2,name:"complex-rational.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:E},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:q}],methods:[],template:Sr},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:a},{...t,type:7,slot:1,name:"FPixel",structure:a},{...t,type:7,slot:2,name:"channels",structure:b}],methods:[],template:wr}});Object.assign(K,{...s,type:2,name:"complex-rational.KernelOutput(u8,complex-rational.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:zt}],methods:[],template:Vr}});Object.assign(C,{...s,type:2,name:"complex-rational.KernelParameters(complex-rational.kernel)",byteSize:48,align:8,instance:{members:[{...t,type:5,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"a",structure:p},{...t,type:5,bitOffset:64,bitSize:64,byteSize:8,slot:1,name:"b",structure:p},{...t,type:5,bitOffset:128,bitSize:64,byteSize:8,slot:2,name:"c",structure:p},{...t,type:5,bitOffset:192,bitSize:64,byteSize:8,slot:3,name:"d",structure:p},{...t,type:5,bitOffset:256,bitSize:64,byteSize:8,slot:4,name:"size",structure:p},{...t,type:5,bitOffset:320,bitSize:64,byteSize:8,slot:5,name:"center",structure:p}],methods:[],template:Rr}});Object.assign(U,{...s,type:10,name:"ErrorSet4228535764",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:U}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:U}],methods:[],template:kr}});Object.assign(Rt,{...s,type:9,name:"ErrorSet4228535764!complex-rational.KernelOutput(u8,complex-rational.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:K},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:U}],methods:[]}});Object.assign(kt,{...s,type:5,name:"createOutput",byteSize:112,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:384,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...t,type:3,isRequired:!0,bitOffset:416,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...t,type:5,isRequired:!0,bitOffset:448,bitSize:192,byteSize:24,slot:0,name:"2",structure:v},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:384,byteSize:48,slot:1,name:"3",structure:C},{...t,type:5,isRequired:!0,bitOffset:640,bitSize:224,byteSize:28,slot:2,name:"retval",structure:Rt}],methods:[]}});Object.assign(h,{...s,type:10,name:"ErrorSet476474417",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:h}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:h}],methods:[],template:Ir}});Object.assign(qt,{...s,type:9,name:"ErrorSet476474417!complex-rational.KernelOutput(u8,complex-rational.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:K},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:h}],methods:[]}});Object.assign(It,{...s,type:5,name:"createPartialOutput",byteSize:120,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:384,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...t,type:3,isRequired:!0,bitOffset:416,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...t,type:3,isRequired:!0,bitOffset:448,bitSize:32,byteSize:4,slot:5,name:"2",structure:u},{...t,type:3,isRequired:!0,bitOffset:480,bitSize:32,byteSize:4,slot:6,name:"3",structure:u},{...t,type:5,isRequired:!0,bitOffset:512,bitSize:192,byteSize:24,slot:0,name:"4",structure:v},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:384,byteSize:48,slot:1,name:"5",structure:C},{...t,type:5,isRequired:!0,bitOffset:704,bitSize:224,byteSize:28,slot:2,name:"retval",structure:qt}],methods:[]}});Object.assign(Tt,{...s,type:2,name:"complex-rational",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:a},{...t,type:7,slot:1,name:"Input",structure:a},{...t,type:7,slot:2,name:"Output",structure:a},{...t,type:7,slot:3,name:"Parameters",structure:a}],methods:[Ro,ko],template:vr}});const qo=[a,f,L,B,G,H,b,S,J,N,e,r,Q,W,X,k,p,Y,Z,tt,et,st,rt,j,at,nt,ot,ct,it,ut,V,mt,yt,lt,bt,gt,x,pt,Ot,xt,I,jt,T,u,O,q,Pt,ft,v,St,E,zt,K,C,U,Rt,kt,h,qt,It,Tt],Io=Tt,To={runtimeSafety:!1,littleEndian:!0},Ut=ra();Ut.getSpecialExports();Ut.recreateStructures(qo,To);const vo=(async()=>{const c=new URL("complex-rational-6997daf9.wasm",import.meta.url).href;return fetch(c)})();Ut.loadModule(vo);Ut.linkVariables(!0);const{constructor:Eo}=Io,{createPartialOutput:Ko,Input:Co,kernel:Vt}=Eo;function Mo(c,m,i,o,n={},w={}){const A=[];for(const[l]of Vt.inputImages)A.push(l);const P=[];for(const[l]of Vt.outputImages)P.push(l);if(Array.isArray(n)){const l=n;n={};for(const[g,d]of A.entries())n[d]=l[g]}const y=new Co(void 0),F=[];let R;for(const l of A){let g=n[l];if(g||(A.length===1&&["data","width","height"].every(d=>!!n[d])?g=n:F.push(l)),y[l]=g,R){if(g.colorSpace!==R)throw new Error(`Input images must all use the same color space: ${R}`)}else R=g.colorSpace}if(F.length>0)throw new Error(`Missing input image${F.length>1?"s":""}: ${F.join(", ")}`);const ht=Ko(c,m,i,o,y,w),Be=l=>{const g={};for(const d of P){const{data:{typedArray:_},width:Ge,height:Gr}=l[d];let $;if(typeof ImageData=="function"){const Hr=new Uint8ClampedArray(_.buffer,_.byteOffset,_.byteLength);$=new ImageData(Hr,Ge,o,{colorSpace:R})}else $={data:_,width:Ge,height:Gr};if(P.length===1)return $;g[d]=$}return g};return ht[Symbol.toStringTag]==="Promise"?ht.then(Be):Be(ht)}function Do(){const c={};for(let[m,i]of Vt){if(m==="parameters"){const o={};for(const[n,w]of i){const A=o[n]={};for(let[P,y]of w)typeof y=="object"?y=y.string??y.valueOf():typeof y=="function"&&(y=Fo(y.name)),A[P]=y}i=o}else typeof i=="object"&&(i=i.string??i.valueOf());c[m]=i}return c}function Fo(c){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[c]}onmessage=async c=>{if(!Array.isArray(c.data))return;const[m,i,...o]=c.data;try{const[n,w]=await _o(m,o);postMessage([m,i,n],{transfer:w})}catch(n){postMessage(["error",i,n])}};async function _o(c,m){switch(c){case"getKernelInfo":return[Do(...m)];case"createPartialImageData":const o=await Mo(...m),n=[];if("data"in o&&"width"in o&&"height"in o)n.push(o.data.buffer);else for(const w of Object.entries(o))n.push(o.data.buffer);return[o,n];default:throw new Error(`Unknown function: ${c}`)}}postMessage("ready");
