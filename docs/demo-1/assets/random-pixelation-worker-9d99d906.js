import{u as $s,a as Ls,b as Bs,c as Gs,d as Hs,e as Js,f as Ns,g as Qs,h as Ws,i as Xs,j as Ys,k as Zs,l as tr,m as er,n as sr,o as rr,p as nr,q as ar}from"./index-33238b17.js";$s();Zs();tr();Ls();Bs();er();sr();rr();nr();Gs();Hs();Js();Ns();ar();Qs();Ws();Xs();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},r={},w={},D={},A={},F={},_={},p={},f={},s={},l={},n={},$={},L={},B={},G={},H={},J={},N={},Q={},W={},X={},Y={},U={},Z={},tt={},ut={},k={},et={},q={},u={},O={},R={},mt={},st={},I={},rt={},v={},nt={},E={},K={},d={},yt={},bt={},h={},lt={},pt={},gt={},ue={},Ot={},V={},ft={},me={},jt={},ye={},St={},be={},le={},zt={},dt={},pe={},ht={},ge={},wt={},Oe={},fe={},At={},Ut={},je={},Vt={},Se={},xt={},ze={},de={},Pt={},Rt={},he={},kt={},we={},qt={},Ae={},Ue={},It={},vt={},Ve={},Et={},xe={},Kt={},Pe={},Re={},Ct={},ke={},Mt={},qe={},Ie={},Tt={},ve={},Dt={},Ee={},Ke={},Ft={},Ce={},_t={},Me={},Te={},$t={},De={},Lt={},Bt={},Gt={},Fe={},Ht={},Jt={},Nt={},Qt={},Wt={},Xt={},_e={},at={},$e={},Le={},Yt={},Be={},Zt={},Ge={},He={},te={},Je={},Ne={},Qe={},We={},Xe={},Ye={},Ze={},ts={},es={},ss={},rs={},ns={},as={},ee={},os={},is={},se={},cs={},re={},us={},ms={},ys={},bs={},ls={},ps={},gs={},ne={},Os={},fs={},js={},Ss={},zs={},ds={},hs={},ws={},As={},Us={},Vs={},xs={},Ps={},Rs={},ks={},qs={},Is={},vs={},Es={},Ks={},Cs={},Ms={},or=new Uint8Array,ir=new Uint8Array,cr=new Uint8Array([0,0,0,0,0,0,240,63]),ur=new Uint8Array,mr=new Uint8Array([0,0,0,0,0,0,89,64]),yr=new Uint8Array,br=new Uint8Array([0,0,0,0,0,0,42,64]),lr=new Uint8Array,pr=new Uint8Array,gr=new Uint8Array([0,0,0,0,0,0,240,63]),Or=new Uint8Array,fr=new Uint8Array([0,0,0,0,0,0,89,64]),jr=new Uint8Array,Sr=new Uint8Array([0,0,0,0,0,0,49,64]),zr=new Uint8Array,dr=new Uint8Array,hr=new Uint8Array([0,0,0,0,0,0,240,63]),wr=new Uint8Array,Ar=new Uint8Array([0,0,0,0,0,0,89,64]),Ur=new Uint8Array,Vr=new Uint8Array([0,0,0,0,0,0,51,64]),xr=new Uint8Array,Pr=new Uint8Array,Rr=new Uint8Array([0,0,0,0,0,0,240,63]),kr=new Uint8Array,qr=new Uint8Array([0,0,0,0,0,0,89,64]),Ir=new Uint8Array,vr=new Uint8Array([0,0,0,0,0,0,53,64]),Er=new Uint8Array,Kr=new Uint8Array,Cr=new Uint8Array([0,0,0,0,0,0,240,63]),Mr=new Uint8Array,Tr=new Uint8Array([0,0,0,0,0,0,89,64]),Dr=new Uint8Array,Fr=new Uint8Array([0,0,0,0,0,0,55,64]),_r=new Uint8Array,$r=new Uint8Array([0,0,0,0,0,0,89,192]),Lr=new Uint8Array,Br=new Uint8Array([0,0,0,0,0,0,89,192]),Gr=new Uint8Array,Hr=new Uint8Array([0,0,0,0,0,64,143,64]),Jr=new Uint8Array,Nr=new Uint8Array([0,0,0,0,0,64,143,64]),Qr=new Uint8Array,Wr=new Uint8Array([0,0,0,0,0,48,107,64]),Xr=new Uint8Array,Yr=new Uint8Array([205,204,204,204,204,108,136,64]),Zr=new Uint8Array,tn=new Uint8Array,en=new Uint8Array,sn=new Uint8Array,rn=new Uint8Array,nn=new Uint8Array,an=new Uint8Array,on=new Uint8Array,cn=new Uint8Array,un=new Uint8Array,mn=new Uint8Array,yn=new Uint8Array([4]),bn=new Uint8Array,ln=new Uint8Array,pn=new Uint8Array([2,5,0,1]),gn=new Uint8Array([114,97,110,100,111,109,32,115,105,122,101,32,112,105,120,101,108,97,116,105,111,110,0]),On=new Uint8Array([36,5,0,1]),fn=new Uint8Array([112,105,120,101,108,101,114,111,0]),jn=new Uint8Array,Sn=new Uint8Array([1]),zn=new Uint8Array([2,5,0,1]),dn=new Uint8Array,hn=new Uint8Array,wn=new Uint8Array,An=new Uint8Array([0]),Un=new Uint8Array([1]),Ts=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Vn=new Uint8Array,xn=new Uint8Array,Pn=new Uint8Array,Rn=new Uint8Array,kn=new Uint8Array([4]),ae=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ds=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),qn=new Uint8Array,In=new Uint8Array,vn=new Uint8Array,En=new Uint8Array,Kn=new Uint8Array([4]),oe=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Cn=new Uint8Array([0,128,89,67,102,102,67,68,0,0,80,65,0,0,136,65,0,0,152,65,0,0,168,65,0,0,184,65,0,0,0,0]),Mn=new Uint8Array([27,0]),Tn=new Uint8Array([27,0]),Dn=new Uint8Array,Fn=new Uint8Array,_n=new Uint8Array,$n=new Uint8Array;Object.assign(ue,{slots:{0:Ot,1:ft,2:jt,3:St}});Object.assign(Ot,{structure:r,memory:{array:or},const:!0,slots:{0:V}});Object.assign(V,{structure:l});Object.assign(ft,{structure:s,memory:{array:ir},const:!0,slots:{0:me}});Object.assign(me,{structure:n,memory:{array:cr},const:!0});Object.assign(jt,{structure:s,memory:{array:ur},const:!0,slots:{0:ye}});Object.assign(ye,{structure:n,memory:{array:mr},const:!0});Object.assign(St,{structure:s,memory:{array:yr},const:!0,slots:{0:be}});Object.assign(be,{structure:n,memory:{array:br},const:!0});Object.assign(le,{slots:{0:zt,1:dt,2:ht,3:wt}});Object.assign(zt,{structure:r,memory:{array:lr},const:!0,slots:{0:V}});Object.assign(dt,{structure:s,memory:{array:pr},const:!0,slots:{0:pe}});Object.assign(pe,{structure:n,memory:{array:gr},const:!0});Object.assign(ht,{structure:s,memory:{array:Or},const:!0,slots:{0:ge}});Object.assign(ge,{structure:n,memory:{array:fr},const:!0});Object.assign(wt,{structure:s,memory:{array:jr},const:!0,slots:{0:Oe}});Object.assign(Oe,{structure:n,memory:{array:Sr},const:!0});Object.assign(fe,{slots:{0:At,1:Ut,2:Vt,3:xt}});Object.assign(At,{structure:r,memory:{array:zr},const:!0,slots:{0:V}});Object.assign(Ut,{structure:s,memory:{array:dr},const:!0,slots:{0:je}});Object.assign(je,{structure:n,memory:{array:hr},const:!0});Object.assign(Vt,{structure:s,memory:{array:wr},const:!0,slots:{0:Se}});Object.assign(Se,{structure:n,memory:{array:Ar},const:!0});Object.assign(xt,{structure:s,memory:{array:Ur},const:!0,slots:{0:ze}});Object.assign(ze,{structure:n,memory:{array:Vr},const:!0});Object.assign(de,{slots:{0:Pt,1:Rt,2:kt,3:qt}});Object.assign(Pt,{structure:r,memory:{array:xr},const:!0,slots:{0:V}});Object.assign(Rt,{structure:s,memory:{array:Pr},const:!0,slots:{0:he}});Object.assign(he,{structure:n,memory:{array:Rr},const:!0});Object.assign(kt,{structure:s,memory:{array:kr},const:!0,slots:{0:we}});Object.assign(we,{structure:n,memory:{array:qr},const:!0});Object.assign(qt,{structure:s,memory:{array:Ir},const:!0,slots:{0:Ae}});Object.assign(Ae,{structure:n,memory:{array:vr},const:!0});Object.assign(Ue,{slots:{0:It,1:vt,2:Et,3:Kt}});Object.assign(It,{structure:r,memory:{array:Er},const:!0,slots:{0:V}});Object.assign(vt,{structure:s,memory:{array:Kr},const:!0,slots:{0:Ve}});Object.assign(Ve,{structure:n,memory:{array:Cr},const:!0});Object.assign(Et,{structure:s,memory:{array:Mr},const:!0,slots:{0:xe}});Object.assign(xe,{structure:n,memory:{array:Tr},const:!0});Object.assign(Kt,{structure:s,memory:{array:Dr},const:!0,slots:{0:Pe}});Object.assign(Pe,{structure:n,memory:{array:Fr},const:!0});Object.assign(Re,{slots:{0:Ct,1:Mt}});Object.assign(Ct,{structure:s,memory:{array:_r},const:!0,slots:{0:ke}});Object.assign(ke,{structure:n,memory:{array:$r},const:!0});Object.assign(Mt,{structure:s,memory:{array:Lr},const:!0,slots:{0:qe}});Object.assign(qe,{structure:n,memory:{array:Br},const:!0});Object.assign(Ie,{slots:{0:Tt,1:Dt}});Object.assign(Tt,{structure:s,memory:{array:Gr},const:!0,slots:{0:ve}});Object.assign(ve,{structure:n,memory:{array:Hr},const:!0});Object.assign(Dt,{structure:s,memory:{array:Jr},const:!0,slots:{0:Ee}});Object.assign(Ee,{structure:n,memory:{array:Nr},const:!0});Object.assign(Ke,{slots:{0:Ft,1:_t}});Object.assign(Ft,{structure:s,memory:{array:Qr},const:!0,slots:{0:Ce}});Object.assign(Ce,{structure:n,memory:{array:Wr},const:!0});Object.assign(_t,{structure:s,memory:{array:Xr},const:!0,slots:{0:Me}});Object.assign(Me,{structure:n,memory:{array:Yr},const:!0});Object.assign(Te,{slots:{0:$t,1:Lt,2:Bt,3:Gt}});Object.assign($t,{structure:r,memory:{array:Zr},const:!0,slots:{0:De}});Object.assign(De,{structure:W});Object.assign(Lt,{structure:J,memory:{array:tn},const:!0,slots:{0:Ct,1:Mt}});Object.assign(Bt,{structure:N,memory:{array:en},const:!0,slots:{0:Tt,1:Dt}});Object.assign(Gt,{structure:Q,memory:{array:sn},const:!0,slots:{0:Ft,1:_t}});Object.assign(Fe,{slots:{0:Ht,1:Jt,2:Nt,3:Qt,4:Wt,5:Xt}});Object.assign(Ht,{structure:$,memory:{array:rn},const:!0,slots:{0:Ot,1:ft,2:jt,3:St}});Object.assign(Jt,{structure:L,memory:{array:nn},const:!0,slots:{0:zt,1:dt,2:ht,3:wt}});Object.assign(Nt,{structure:B,memory:{array:an},const:!0,slots:{0:At,1:Ut,2:Vt,3:xt}});Object.assign(Qt,{structure:G,memory:{array:on},const:!0,slots:{0:Pt,1:Rt,2:kt,3:qt}});Object.assign(Wt,{structure:H,memory:{array:cn},const:!0,slots:{0:It,1:vt,2:Et,3:Kt}});Object.assign(Xt,{structure:X,memory:{array:un},const:!0,slots:{0:$t,1:Lt,2:Bt,3:Gt}});Object.assign(_e,{slots:{0:at}});Object.assign(at,{structure:p,memory:{array:mn},const:!0,slots:{0:$e}});Object.assign($e,{structure:f,memory:{array:yn},const:!0});Object.assign(Le,{slots:{0:Yt}});Object.assign(Yt,{structure:U,memory:{array:bn},const:!0,slots:{0:at}});Object.assign(Be,{slots:{0:Zt}});Object.assign(Zt,{structure:U,memory:{array:ln},const:!0,slots:{0:at}});Object.assign(Ge,{slots:{0:He,1:Je,2:Qe,3:Xe,4:Ye,5:Ze,6:ts}});Object.assign(He,{structure:A,memory:{array:pn},const:!0,slots:{0:te}});Object.assign(te,{structure:D,memory:{array:gn},reloc:16778498});Object.assign(Je,{structure:_,memory:{array:On},const:!0,slots:{0:Ne}});Object.assign(Ne,{structure:F,memory:{array:fn},reloc:16778532});Object.assign(Qe,{structure:p,memory:{array:jn},const:!0,slots:{0:We}});Object.assign(We,{structure:f,memory:{array:Sn},const:!0});Object.assign(Xe,{structure:A,memory:{array:zn},const:!0,slots:{0:te}});Object.assign(Ye,{structure:Y,memory:{array:dn},const:!0,slots:{0:Ht,1:Jt,2:Nt,3:Qt,4:Wt,5:Xt}});Object.assign(Ze,{structure:Z,memory:{array:hn},const:!0,slots:{0:Yt}});Object.assign(ts,{structure:tt,memory:{array:wn},const:!0,slots:{0:Zt}});Object.assign(es,{slots:{0:ss,1:rs}});Object.assign(ss,{structure:O,memory:{array:An},const:!0});Object.assign(rs,{structure:O,memory:{array:Un},const:!0});Object.assign(ns,{memory:{array:Ts},slots:{0:as}});Object.assign(as,{structure:q,memory:{array:Ts,offset:0,length:8},slots:{0:ee}});Object.assign(ee,{structure:et,memory:{array:Vn},reloc:0});Object.assign(os,{slots:{0:is,1:cs,2:us}});Object.assign(is,{structure:r,memory:{array:xn},const:!0,slots:{0:se}});Object.assign(se,{structure:k});Object.assign(cs,{structure:r,memory:{array:Pn},const:!0,slots:{0:re}});Object.assign(re,{structure:mt});Object.assign(us,{structure:p,memory:{array:Rn},const:!0,slots:{0:ms}});Object.assign(ms,{structure:f,memory:{array:kn},const:!0});Object.assign(ys,{memory:{array:ae},slots:{0:bs}});Object.assign(bs,{structure:st,memory:{array:ae},slots:{0:ls}});Object.assign(ls,{structure:q,memory:{array:ae,offset:0,length:8},slots:{0:ee}});Object.assign(ps,{memory:{array:Ds},slots:{0:gs}});Object.assign(gs,{structure:v,memory:{array:Ds,offset:0,length:8},slots:{0:ne}});Object.assign(ne,{structure:rt,memory:{array:qn},reloc:0});Object.assign(Os,{slots:{0:fs,1:js,2:Ss}});Object.assign(fs,{structure:r,memory:{array:In},const:!0,slots:{0:se}});Object.assign(js,{structure:r,memory:{array:vn},const:!0,slots:{0:re}});Object.assign(Ss,{structure:p,memory:{array:En},const:!0,slots:{0:zs}});Object.assign(zs,{structure:f,memory:{array:Kn},const:!0});Object.assign(ds,{memory:{array:oe},slots:{0:hs}});Object.assign(hs,{structure:nt,memory:{array:oe},slots:{0:ws}});Object.assign(ws,{structure:v,memory:{array:oe,offset:0,length:8},slots:{0:ne}});Object.assign(As,{memory:{array:Cn}});Object.assign(Us,{slots:{0:Vs}});Object.assign(Vs,{structure:d,memory:{array:Mn},const:!0});Object.assign(xs,{slots:{0:Ps}});Object.assign(Ps,{structure:h,memory:{array:Tn},const:!0});Object.assign(Rs,{slots:{0:ks,1:Is,2:Es,3:Cs}});Object.assign(ks,{structure:r,memory:{array:Dn},const:!0,slots:{0:qs}});Object.assign(qs,{structure:ut});Object.assign(Is,{structure:r,memory:{array:Fn},const:!0,slots:{0:vs}});Object.assign(vs,{structure:I});Object.assign(Es,{structure:r,memory:{array:_n},const:!0,slots:{0:Ks}});Object.assign(Ks,{structure:E});Object.assign(Cs,{structure:r,memory:{array:$n},const:!0,slots:{0:Ms}});Object.assign(Ms,{structure:K});const Ln={argStruct:bt,thunkId:2,name:"createOutput"},Bn={argStruct:pt,thunkId:3,name:"createPartialOutput"};Object.assign(r,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(w,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:w}],methods:[]}});Object.assign(D,{...e,type:1,name:"[22:0]u8",length:22,byteSize:23,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:w}],methods:[]}});Object.assign(A,{...e,type:13,name:"*const [22:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:D}],methods:[]}});Object.assign(F,{...e,type:1,name:"[8:0]u8",length:8,byteSize:9,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:w}],methods:[]}});Object.assign(_,{...e,type:13,name:"*const [8:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(p,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:p}],methods:[]}});Object.assign(f,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(s,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(l,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:l}],methods:[]}});Object.assign(n,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:n}],methods:[]}});Object.assign($,{...e,type:2,name:"Struct2780422015",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:s},{...t,type:7,slot:2,name:"maxValue",structure:s},{...t,type:7,slot:3,name:"defaultValue",structure:s}],methods:[],template:ue}});Object.assign(L,{...e,type:2,name:"Struct2348132645",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:s},{...t,type:7,slot:2,name:"maxValue",structure:s},{...t,type:7,slot:3,name:"defaultValue",structure:s}],methods:[],template:le}});Object.assign(B,{...e,type:2,name:"Struct2549803269",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:s},{...t,type:7,slot:2,name:"maxValue",structure:s},{...t,type:7,slot:3,name:"defaultValue",structure:s}],methods:[],template:fe}});Object.assign(G,{...e,type:2,name:"Struct3210716366",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:s},{...t,type:7,slot:2,name:"maxValue",structure:s},{...t,type:7,slot:3,name:"defaultValue",structure:s}],methods:[],template:de}});Object.assign(H,{...e,type:2,name:"Struct1826530908",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:s},{...t,type:7,slot:2,name:"maxValue",structure:s},{...t,type:7,slot:3,name:"defaultValue",structure:s}],methods:[],template:Ue}});Object.assign(J,{...e,type:2,name:"Struct909833941",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s}],methods:[],template:Re}});Object.assign(N,{...e,type:2,name:"Struct830517164",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s}],methods:[],template:Ie}});Object.assign(Q,{...e,type:2,name:"Struct195828006",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s}],methods:[],template:Ke}});Object.assign(W,{...e,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:l}],methods:[]}});Object.assign(X,{...e,type:2,name:"Struct1517967210",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:J},{...t,type:7,slot:2,name:"maxValue",structure:N},{...t,type:7,slot:3,name:"defaultValue",structure:Q}],methods:[],template:Te}});Object.assign(Y,{...e,type:2,name:"Struct513595021",align:1,instance:{members:[{...t,type:7,slot:0,name:"n0",structure:$},{...t,type:7,slot:1,name:"n1",structure:L},{...t,type:7,slot:2,name:"n2",structure:B},{...t,type:7,slot:3,name:"n3",structure:G},{...t,type:7,slot:4,name:"n4",structure:H},{...t,type:7,slot:5,name:"randomPoint",structure:X}],methods:[],template:Fe}});Object.assign(U,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:p}],methods:[],template:_e}});Object.assign(Z,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:7,slot:0,name:"src",structure:U}],methods:[],template:Le}});Object.assign(tt,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:U}],methods:[],template:Be}});Object.assign(ut,{...e,type:2,name:"random-pixelation.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:A},{...t,type:7,slot:1,name:"vendor",structure:_},{...t,type:7,slot:2,name:"version",structure:p},{...t,type:7,slot:3,name:"description",structure:A},{...t,type:7,slot:4,name:"parameters",structure:Y},{...t,type:7,slot:5,name:"inputImages",structure:Z},{...t,type:7,slot:6,name:"outputImages",structure:tt}],methods:[],template:Ge}});Object.assign(k,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:w}],methods:[]}});Object.assign(et,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(q,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:et}],methods:[]}});Object.assign(u,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:u}],methods:[]}});Object.assign(O,{...e,type:11,name:"random-pixelation.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:O}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:O},{...t,type:7,slot:1,name:"display-p3",structure:O}],methods:[],template:es}});Object.assign(R,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(mt,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:l}],methods:[]}});Object.assign(st,{...e,type:2,name:"random-pixelation.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:q},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:ns},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:r},{...t,type:7,slot:1,name:"FPixel",structure:r},{...t,type:7,slot:2,name:"channels",structure:p}],methods:[],template:os}});Object.assign(I,{...e,type:2,name:"random-pixelation.KernelInput(u8,random-pixelation.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:st}],methods:[],template:ys}});Object.assign(rt,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(v,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:rt}],methods:[]}});Object.assign(nt,{...e,type:2,name:"random-pixelation.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:v},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:ps},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:r},{...t,type:7,slot:1,name:"FPixel",structure:r},{...t,type:7,slot:2,name:"channels",structure:p}],methods:[],template:Os}});Object.assign(E,{...e,type:2,name:"random-pixelation.KernelOutput(u8,random-pixelation.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:nt}],methods:[],template:ds}});Object.assign(K,{...e,type:2,name:"random-pixelation.KernelParameters(random-pixelation.kernel)",byteSize:32,align:8,instance:{members:[{...t,type:4,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"n0",structure:l},{...t,type:4,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"n1",structure:l},{...t,type:4,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"n2",structure:l},{...t,type:4,bitOffset:160,bitSize:32,byteSize:4,slot:4,name:"n3",structure:l},{...t,type:4,bitOffset:192,bitSize:32,byteSize:4,slot:5,name:"n4",structure:l},{...t,type:5,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"randomPoint",structure:W}],methods:[],template:As}});Object.assign(d,{...e,type:10,name:"ErrorSet2178770297",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:d}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:d}],methods:[],template:Us}});Object.assign(yt,{...e,type:9,name:"ErrorSet2178770297!random-pixelation.KernelOutput(u8,random-pixelation.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:E},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:d}],methods:[]}});Object.assign(bt,{...e,type:5,name:"createOutput",byteSize:96,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...t,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...t,type:5,isRequired:!0,bitOffset:320,bitSize:192,byteSize:24,slot:0,name:"2",structure:I},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:256,byteSize:32,slot:1,name:"3",structure:K},{...t,type:5,isRequired:!0,bitOffset:512,bitSize:224,byteSize:28,slot:2,name:"retval",structure:yt}],methods:[]}});Object.assign(h,{...e,type:10,name:"ErrorSet2010036116",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:h}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:h}],methods:[],template:xs}});Object.assign(lt,{...e,type:9,name:"ErrorSet2010036116!random-pixelation.KernelOutput(u8,random-pixelation.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:E},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:h}],methods:[]}});Object.assign(pt,{...e,type:5,name:"createPartialOutput",byteSize:104,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...t,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...t,type:3,isRequired:!0,bitOffset:320,bitSize:32,byteSize:4,slot:5,name:"2",structure:u},{...t,type:3,isRequired:!0,bitOffset:352,bitSize:32,byteSize:4,slot:6,name:"3",structure:u},{...t,type:5,isRequired:!0,bitOffset:384,bitSize:192,byteSize:24,slot:0,name:"4",structure:I},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:256,byteSize:32,slot:1,name:"5",structure:K},{...t,type:5,isRequired:!0,bitOffset:576,bitSize:224,byteSize:28,slot:2,name:"retval",structure:lt}],methods:[]}});Object.assign(gt,{...e,type:2,name:"random-pixelation",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:r},{...t,type:7,slot:1,name:"Input",structure:r},{...t,type:7,slot:2,name:"Output",structure:r},{...t,type:7,slot:3,name:"Parameters",structure:r}],methods:[Ln,Bn],template:Rs}});const Gn=[r,w,D,A,F,_,p,f,s,l,n,$,L,B,G,H,J,N,Q,W,X,Y,U,Z,tt,ut,k,et,q,u,O,R,mt,st,I,rt,v,nt,E,K,d,yt,bt,h,lt,pt,gt],Hn=gt,Jn={runtimeSafety:!1,littleEndian:!0},ot=Ys();ot.getSpecialExports();ot.recreateStructures(Gn,Jn);const Nn=(async()=>{const i=new URL("random-pixelation-849a84bf.wasm",import.meta.url).href;return fetch(i)})();ot.loadModule(Nn);ot.linkVariables(!0);const{constructor:Qn}=Hn,{createPartialOutput:Wn,Input:Xn,kernel:ct}=Qn;function Yn(i,m,c,o,a={},j={}){const S=[];for(const[b]of ct.inputImages)S.push(b);const x=[];for(const[b]of ct.outputImages)x.push(b);if(Array.isArray(a)){const b=a;a={};for(const[g,z]of S.entries())a[z]=b[g]}const y=new Xn(void 0),C=[];let P;for(const b of S){let g=a[b];if(g||(S.length===1&&["data","width","height"].every(z=>!!a[z])?g=a:C.push(b)),y[b]=g,P){if(g.colorSpace!==P)throw new Error(`Input images must all use the same color space: ${P}`)}else P=g.colorSpace}if(C.length>0)throw new Error(`Missing input image${C.length>1?"s":""}: ${C.join(", ")}`);const it=Wn(i,m,c,o,y,j),ie=b=>{const g={};for(const z of x){const{data:{typedArray:M},width:ce,height:Fs}=b[z];let T;if(typeof ImageData=="function"){const _s=new Uint8ClampedArray(M.buffer,M.byteOffset,M.byteLength);T=new ImageData(_s,ce,o,{colorSpace:P})}else T={data:M,width:ce,height:Fs};if(x.length===1)return T;g[z]=T}return g};return it[Symbol.toStringTag]==="Promise"?it.then(ie):ie(it)}function Zn(){const i={};for(let[m,c]of ct){if(m==="parameters"){const o={};for(const[a,j]of c){const S=o[a]={};for(let[x,y]of j)typeof y=="object"?y=y.string??y.valueOf():typeof y=="function"&&(y=ta(y.name)),S[x]=y}c=o}else typeof c=="object"&&(c=c.string??c.valueOf());i[m]=c}return i}function ta(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=async i=>{if(!Array.isArray(i.data))return;const[m,c,...o]=i.data;try{const[a,j]=await ea(m,o);postMessage([m,c,a],{transfer:j})}catch(a){postMessage(["error",c,a])}};async function ea(i,m){switch(i){case"getKernelInfo":return[Zn(...m)];case"createPartialImageData":const o=await Yn(...m),a=[];if("data"in o&&"width"in o&&"height"in o)a.push(o.data.buffer);else for(const j of Object.entries(o))a.push(o.data.buffer);return[o,a];default:throw new Error(`Unknown function: ${i}`)}}postMessage("ready");
