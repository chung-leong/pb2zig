import{u as Ee,a as xe,b as Ke,d as De,c as Fe,e as Me,f as _e,g as Te,h as $e,i as Be,j as Le,k as Ge,l as He,m as Je,o as Ne,n as Qe,p as We,q as Xe}from"./index-422d9c98.js";Ee();xe();Ke();De();Fe();Me();_e();Te();$e();Be();Le();Ge();He();Je();Ne();Qe();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},w={},X={},Y={},K={},Z={},ee={},D={},b={},p={},F={},j={},te={},a={},s={},z={},d={},se={},M={},O={},S={},re={},_={},ae={},T={},ne={},$={},ie={},B={},ue={},L={},oe={},G={},me={},H={},P={},A={},le={},J={},ye={},N={},ge={},R={},ce={},be={},y={},pe={},U={},Q={},k={},fe={},de={},W={},C={},I={},ze={},Oe={},we={},Ae={},Re={},qe={},Ue={};Object.assign(w,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:w}],methods:[],template:null},slot:5});Object.assign(X,{...t,type:1,name:"[14:0]u8",length:14,byteSize:15,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:w}],methods:[],template:null},slot:4});Object.assign(Y,{...t,type:11,name:"*const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:3});Object.assign(K,{...t,type:11,name:"*const *const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[],template:null},slot:2});Object.assign(Z,{...t,type:1,name:"[11:0]u8",length:11,byteSize:12,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:w}],methods:[],template:null},slot:8});Object.assign(ee,{...t,type:11,name:"*const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:7});Object.assign(D,{...t,type:11,name:"*const *const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:6});Object.assign(b,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:10});Object.assign(p,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:b}],methods:[],template:null},slot:9});Object.assign(F,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:F}],methods:[],template:null},slot:41});Object.assign(j,{...t,type:13,name:"@Vector(3, f32)",length:3,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:F}],methods:[],template:null},slot:30});Object.assign(te,{...t,type:1,name:"[3]@Vector(3, f32)",length:3,byteSize:48,align:4,instance:{members:[{...e,type:6,isRequired:!1,bitSize:96,byteSize:16,structure:j}],methods:[],template:null},slot:29});Object.assign(a,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:a}],methods:[],template:null},slot:59});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:a}],methods:[],template:null},slot:58});const Ye=new Uint8Array([]),Ze=new Uint8Array([200,248,15,0]),et=new Uint8Array([0,0,0,0,0,0,240,191]),tt=new Uint8Array([240,248,15,0]),st=new Uint8Array([0,0,0,0,0,0,240,191]),rt=new Uint8Array([24,249,15,0]),at=new Uint8Array([0,0,0,0,0,0,240,191]);Object.assign(z,{...t,type:2,name:"Struct0021",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:Ye},slots:{0:{structure:s,memory:{array:Ze},slots:{0:{structure:a,memory:{array:et}}}},1:{structure:s,memory:{array:tt},slots:{0:{structure:a,memory:{array:st}}}},2:{structure:s,memory:{array:rt},slots:{0:{structure:a,memory:{array:at}}}}}}},slot:49});Object.assign(d,{...t,type:11,name:"Struct0016",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:z}],methods:[],template:null},slot:48});const nt=new Uint8Array([]),it=new Uint8Array([170,170,170,170]),n=new Uint8Array([]),ut=new Uint8Array([170,170,170,170]),ot=new Uint8Array([170,170,170,170]);Object.assign(se,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:d},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:d},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:d}],methods:[],template:{memory:{array:nt},slots:{0:{structure:d,memory:{array:it},slots:{0:{structure:z,memory:{array:n},address:-1431655766}}},1:{structure:d,memory:{array:ut},slots:{0:{structure:z,memory:{array:n},address:-1431655766}}},2:{structure:d,memory:{array:ot},slots:{0:{structure:z,memory:{array:n},address:-1431655766}}}}}},slot:43});Object.assign(M,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:42});const mt=new Uint8Array([]),lt=new Uint8Array([200,248,15,0]),yt=new Uint8Array([0,0,0,0,0,0,240,63]),ct=new Uint8Array([240,248,15,0]),bt=new Uint8Array([0,0,0,0,0,0,240,63]),pt=new Uint8Array([24,249,15,0]),ft=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(O,{...t,type:2,name:"Struct0022",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:mt},slots:{0:{structure:s,memory:{array:lt},slots:{0:{structure:a,memory:{array:yt}}}},1:{structure:s,memory:{array:ct},slots:{0:{structure:a,memory:{array:bt}}}},2:{structure:s,memory:{array:pt},slots:{0:{structure:a,memory:{array:ft}}}}}}},slot:51});Object.assign(S,{...t,type:11,name:"Struct0017",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:O}],methods:[],template:null},slot:50});const dt=new Uint8Array([]),St=new Uint8Array([170,170,170,170]),ht=new Uint8Array([170,170,170,170]),gt=new Uint8Array([170,170,170,170]);Object.assign(re,{...t,type:2,name:"Struct0014",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:S},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:S},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:S}],methods:[],template:{memory:{array:dt},slots:{0:{structure:S,memory:{array:St},slots:{0:{structure:O,memory:{array:n},address:-1431655766}}},1:{structure:S,memory:{array:ht},slots:{0:{structure:O,memory:{array:n},address:-1431655766}}},2:{structure:S,memory:{array:gt},slots:{0:{structure:O,memory:{array:n},address:-1431655766}}}}}},slot:45});Object.assign(_,{...t,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:44});const zt=new Uint8Array([]),Ot=new Uint8Array([248,251,15,0]),wt=new Uint8Array([0,0,0,0,0,0,224,63]),At=new Uint8Array([32,252,15,0]),Rt=new Uint8Array([0,0,0,0,0,0,0,0]),qt=new Uint8Array([72,252,15,0]),Ut=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(ae,{...t,type:2,name:"Struct0023",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:zt},slots:{0:{structure:s,memory:{array:Ot},slots:{0:{structure:a,memory:{array:wt}}}},1:{structure:s,memory:{array:At},slots:{0:{structure:a,memory:{array:Rt}}}},2:{structure:s,memory:{array:qt},slots:{0:{structure:a,memory:{array:Ut}}}}}}},slot:53});Object.assign(T,{...t,type:11,name:"Struct0018",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:52});const jt=new Uint8Array([]),Pt=new Uint8Array([248,251,15,0]),kt=new Uint8Array([51,51,51,51,51,51,211,63]),Ct=new Uint8Array([32,252,15,0]),It=new Uint8Array([0,0,0,0,0,0,240,63]),Vt=new Uint8Array([72,252,15,0]),vt=new Uint8Array([102,102,102,102,102,102,230,63]);Object.assign(ne,{...t,type:2,name:"Struct0024",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:jt},slots:{0:{structure:s,memory:{array:Pt},slots:{0:{structure:a,memory:{array:kt}}}},1:{structure:s,memory:{array:Ct},slots:{0:{structure:a,memory:{array:It}}}},2:{structure:s,memory:{array:Vt},slots:{0:{structure:a,memory:{array:vt}}}}}}},slot:55});Object.assign($,{...t,type:11,name:"Struct0019",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:54});const Et=new Uint8Array([]),xt=new Uint8Array([248,251,15,0]),Kt=new Uint8Array([154,153,153,153,153,153,185,63]),Dt=new Uint8Array([32,252,15,0]),Ft=new Uint8Array([51,51,51,51,51,51,211,63]),Mt=new Uint8Array([72,252,15,0]),_t=new Uint8Array([154,153,153,153,153,153,233,63]);Object.assign(ie,{...t,type:2,name:"Struct0025",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:Et},slots:{0:{structure:s,memory:{array:xt},slots:{0:{structure:a,memory:{array:Kt}}}},1:{structure:s,memory:{array:Dt},slots:{0:{structure:a,memory:{array:Ft}}}},2:{structure:s,memory:{array:Mt},slots:{0:{structure:a,memory:{array:_t}}}}}}},slot:57});Object.assign(B,{...t,type:11,name:"Struct0020",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:56});const Tt=new Uint8Array([]),$t=new Uint8Array([170,170,170,170]),Bt=new Uint8Array([170,170,170,170]),Lt=new Uint8Array([170,170,170,170]);Object.assign(ue,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:T},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:$},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:B}],methods:[],template:{memory:{array:Tt},slots:{0:{structure:T,memory:{array:$t},slots:{0:{structure:ae,memory:{array:n},address:-1431655766}}},1:{structure:$,memory:{array:Bt},slots:{0:{structure:ne,memory:{array:n},address:-1431655766}}},2:{structure:B,memory:{array:Lt},slots:{0:{structure:ie,memory:{array:n},address:-1431655766}}}}}},slot:47});Object.assign(L,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:46});const Gt=new Uint8Array([]),Ht=new Uint8Array([170,170,170,170]),Jt=new Uint8Array([170,170,170,170]),Nt=new Uint8Array([170,170,170,170]);Object.assign(oe,{...t,type:2,name:"Struct0008",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:te},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:M},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:_},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:L}],methods:[],template:{memory:{array:Gt},slots:{0:{structure:M,memory:{array:Ht},slots:{0:{structure:se,memory:{array:n},address:-1431655766}}},1:{structure:_,memory:{array:Jt},slots:{0:{structure:re,memory:{array:n},address:-1431655766}}},2:{structure:L,memory:{array:Nt},slots:{0:{structure:ue,memory:{array:n},address:-1431655766}}}}}},slot:36});Object.assign(G,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:35});const Qt=new Uint8Array([]),Wt=new Uint8Array([170,170,170,170]);Object.assign(me,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"transform",structure:G}],methods:[],template:{memory:{array:Qt},slots:{0:{structure:G,memory:{array:Wt},slots:{0:{structure:oe,memory:{array:n},address:-1431655766}}}}}},slot:12});Object.assign(H,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:11});const Xt=new Uint8Array([]),Yt=new Uint8Array([64,252,15,0]),Zt=new Uint8Array([3,0,0,0]);Object.assign(P,{...t,type:2,name:"Struct0009",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:Xt},slots:{0:{structure:p,memory:{array:Yt},slots:{0:{structure:b,memory:{array:Zt}}}}}}},slot:38});Object.assign(A,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:P}],methods:[],template:null},slot:37});const es=new Uint8Array([]),ts=new Uint8Array([170,170,170,170]);Object.assign(le,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:A}],methods:[],template:{memory:{array:es},slots:{0:{structure:A,memory:{array:ts},slots:{0:{structure:P,memory:{array:n},address:-1431655766}}}}}},slot:14});Object.assign(J,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:13});const ss=new Uint8Array([]),rs=new Uint8Array([170,170,170,170]);Object.assign(ye,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:A}],methods:[],template:{memory:{array:ss},slots:{0:{structure:A,memory:{array:rs},slots:{0:{structure:P,memory:{array:n},address:-1431655766}}}}}},slot:16});Object.assign(N,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:15});const as=new Uint8Array([]),ns=new Uint8Array([]),is=new Uint8Array([52,253,15,0]),us=new Uint8Array([35,36,16,0]),os=new Uint8Array([89,111,117,114,32,78,97,109,101,115,112,97,99,101,0]),ms=new Uint8Array([84,253,15,0]),ls=new Uint8Array([23,36,16,0]),ys=new Uint8Array([89,111,117,114,32,86,101,110,100,111,114,0]),cs=new Uint8Array([116,253,15,0]),bs=new Uint8Array([1,0,0,0]),ps=new Uint8Array([170,170,170,170]),fs=new Uint8Array([170,170,170,170]),ds=new Uint8Array([170,170,170,170]);Object.assign(ge,{...t,type:2,name:"simple.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:as}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:K},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:D},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:p},{...e,type:6,isRequired:!1,slot:3,name:"parameters",structure:H},{...e,type:6,isRequired:!1,slot:4,name:"inputImages",structure:J},{...e,type:6,isRequired:!1,slot:5,name:"outputImages",structure:N}],methods:[],template:{memory:{array:ns},slots:{0:{structure:K,memory:{array:is},slots:{0:{structure:Y,memory:{array:us},slots:{0:{structure:X,memory:{array:os},address:1057827}}}}},1:{structure:D,memory:{array:ms},slots:{0:{structure:ee,memory:{array:ls},slots:{0:{structure:Z,memory:{array:ys},address:1057815}}}}},2:{structure:p,memory:{array:cs},slots:{0:{structure:b,memory:{array:bs}}}},3:{structure:H,memory:{array:ps},slots:{0:{structure:me,memory:{array:n},address:-1431655766}}},4:{structure:J,memory:{array:fs},slots:{0:{structure:le,memory:{array:n},address:-1431655766}}},5:{structure:N,memory:{array:ds},slots:{0:{structure:ye,memory:{array:n},address:-1431655766}}}}}},slot:1});Object.assign(R,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:w}],methods:[],template:null},slot:21});Object.assign(ce,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:R}],methods:[],template:null},slot:20});Object.assign(be,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:ce}],methods:[],template:null},slot:19});Object.assign(y,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:22});const Ss=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(pe,{...t,type:9,name:"simple.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:b},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:b}],methods:[],template:{memory:{array:Ss}}},slot:23});Object.assign(U,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:U}],methods:[],template:null},slot:24});const hs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),gs=new Uint8Array([]),zs=new Uint8Array([232,251,15,0]),Os=new Uint8Array([3,0,0,0]);Object.assign(Q,{...t,type:2,name:"simple.Image(u8,3,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:be},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:pe},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:{memory:{array:hs}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:R},{...e,type:7,isRequired:!1,name:"FPixel",structure:j},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:gs},slots:{0:{structure:p,memory:{array:zs},slots:{0:{structure:b,memory:{array:Os}}}}}}},slot:18});const ws=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),As=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Rs=new Uint8Array([0,0,0,0,0,0,0,0]),je=new Uint8Array([]);Object.assign(k,{...t,type:2,name:"simple.KernelInput(u8,simple.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:Q}],methods:[],template:{memory:{array:ws},slots:{0:{structure:Q,memory:{array:As},slots:{0:{structure:be,memory:{array:Rs},slots:{0:{structure:ce,memory:{array:je}}}}}}}}},slot:17});Object.assign(fe,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:R}],methods:[],template:null},slot:20});Object.assign(de,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:fe}],methods:[],template:null},slot:27});const qs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Us=new Uint8Array([]),js=new Uint8Array([232,251,15,0]),Ps=new Uint8Array([3,0,0,0]);Object.assign(W,{...t,type:2,name:"simple.Image(u8,3,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:de},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:pe},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:{memory:{array:qs}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:R},{...e,type:7,isRequired:!1,name:"FPixel",structure:j},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:Us},slots:{0:{structure:p,memory:{array:js},slots:{0:{structure:b,memory:{array:Ps}}}}}}},slot:26});const ks=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Cs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Is=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(C,{...t,type:2,name:"simple.KernelOutput(u8,simple.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:W}],methods:[],template:{memory:{array:ks},slots:{0:{structure:W,memory:{array:Cs},slots:{0:{structure:de,memory:{array:Is},slots:{0:{structure:fe,memory:{array:je}}}}}}}}},slot:25});const Vs=new Uint8Array([0,0,0,63,0,0,0,0,0,0,0,0,0,0,0,0,154,153,153,62,0,0,128,63,51,51,51,63,0,0,0,0,205,204,204,61,154,153,153,62,205,204,76,63,0,0,0,0]);Object.assign(I,{...t,type:2,name:"simple.KernelParameters(simple.kernel)",length:1,byteSize:48,align:4,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:352,byteSize:48,slot:0,name:"transform",structure:te}],methods:[],template:{memory:{array:Vs}}},slot:28});Object.assign(ze,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(simple.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:39});Object.assign(Oe,{...t,type:7,name:"ErrorSet0000!simple.KernelOutput(u8,simple.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:C},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:ze}],methods:[],template:null},slot:33});Object.assign(we,{...t,type:3,name:"createOutput",length:1,byteSize:112,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:6,bitOffset:448,bitSize:192,byteSize:24,slot:2,name:"2",structure:k},{...e,type:6,bitOffset:0,bitSize:384,byteSize:48,slot:3,name:"3",structure:I},{...e,type:6,bitOffset:640,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Oe}],methods:[],template:null},slot:31});Object.assign(Ae,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(simple.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:40});Object.assign(Re,{...t,type:7,name:"ErrorSet0001!simple.KernelOutput(u8,simple.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:C},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Ae}],methods:[],template:null},slot:34});Object.assign(qe,{...t,type:3,name:"createPartialOutput",length:1,byteSize:128,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:3,bitOffset:448,bitSize:32,byteSize:4,slot:2,name:"2",structure:y},{...e,type:3,bitOffset:480,bitSize:32,byteSize:4,slot:3,name:"3",structure:y},{...e,type:6,bitOffset:512,bitSize:192,byteSize:24,slot:4,name:"4",structure:k},{...e,type:6,bitOffset:0,bitSize:384,byteSize:48,slot:5,name:"5",structure:I},{...e,type:6,bitOffset:704,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Re}],methods:[],template:null},slot:32});const vs={argStruct:we,thunk:3,name:"createOutput"},Es={argStruct:qe,thunk:1,name:"createPartialOutput"};Object.assign(Ue,{...t,type:2,name:"simple",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:je}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:ge},{...e,type:7,isRequired:!1,name:"Input",structure:k},{...e,type:7,isRequired:!1,name:"Output",structure:C},{...e,type:7,isRequired:!1,name:"Parameters",structure:I}],methods:[vs,Es],template:null},slot:0});const xs=[w,X,Y,K,Z,ee,D,b,p,F,j,te,a,s,z,d,se,M,O,S,re,_,ae,T,ne,$,ie,B,ue,L,oe,G,me,H,P,A,le,J,ye,N,ge,R,ce,be,y,pe,U,Q,k,fe,de,W,C,I,ze,Oe,we,Ae,Re,qe,Ue],Ks=We(xs),Ds=Ue.constructor,Fs=(async()=>{const o=new URL("simple-bbad1a89.wasm",import.meta.url).href;return fetch(o)})();Xe(Fs,{...Ks,writeBack:!0});const{createOutput:Hs,createPartialOutput:Ms,kernel:he,Input:_s,Output:Js,Parameters:Ns}=Ds;function Ts(o,l,i,r,u={},h={}){if(Array.isArray(u)){const f=u;u={};for(const[c,g]of Object.keys(he.inputImages).entries())u[g]=f[c]}const V=new _s(void 0),v=Object.keys(he.inputImages),m=[];let q;for(const f of v){let c=u[f];if(c||(v.length===1&&["data","width","height"].every(g=>!!u[g])?c=u:m.push(f)),V[f]=c,q){if(c.colorSpace!==q)throw new Error(`Input images must all use the same color space: ${q}`)}else q=c.colorSpace}if(m.length>0)throw new Error(`Missing input image${m.length>1?"s":""}: ${m.join(", ")}`);const Se=Ms(o,l,i,r,V,h),Pe=f=>{const c=Object.keys(f),g={};for(const ke of c){const{data:{typedArray:E},width:Ce,height:Ve}=f[ke];let x;if(typeof ImageData=="function"){const ve=new Uint8ClampedArray(E.buffer,E.byteOffset,E.byteLength);x=new ImageData(ve,Ce,r,{colorSpace:q})}else x={data:E,width:Ce,height:Ve};if(c.length===1)return x;g[ke]=x}return g};return Se[Symbol.toStringTag]==="Promise"?Se.then(Pe):Pe(Se)}function $s(){const o={};for(let[l,i]of Object.entries(he)){if(l==="parameters"){const r={};for(const[u,h]of Object.entries(i)){const V=r[u]={};for(let[v,m]of Object.entries(h))typeof m=="object"?"string"in m?m=m.string:m=Ie(m):typeof m=="function"&&(m=Bs(m.name)),V[v]=m}i=r}else typeof i=="object"&&("string"in i?i=i.string:i=i.valueOf());o[l]=i}return o}function Ie(o){const l=[];for(let[i,r]of Object.entries(o))typeof r=="object"&&(r=Ie(r)),l[i]=r;return l}function Bs(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[l,i,...r]=o.data;Ls(l,r).then(([u,h])=>{postMessage([l,i,u],{transfer:h})}).catch(u=>{postMessage(["error",i,u])})};async function Ls(o,l){switch(o){case"getKernelInfo":return[$s(...l)];case"createPartialImageData":const r=await Ts(...l),u=[];if("data"in r&&"width"in r&&"height"in r)u.push(r.data.buffer);else for(const h of Object.entries(r))u.push(r.data.buffer);return[r,u];default:throw new Error(`Unknown function: ${o}`)}}
