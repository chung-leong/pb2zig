import{u as Pe,a as Ve,b as ke,d as Ie,c as Ce,e as ve,f as Ee,g as xe,h as Ke,i as De,j as Fe,k as Me,l as _e,m as Te,o as $e,n as Be,p as Le,q as Ge}from"./index-d64bc850.js";Pe();Ve();ke();Ie();Ce();ve();Ee();xe();Ke();De();Fe();Me();_e();Te();$e();Be();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},S={},G={},H={},v={},J={},N={},E={},c={},b={},Q={},W={},x={},f={},X={},i={},s={},Y={},K={},Z={},D={},ee={},F={},te={},M={},A={},g={},se={},_={},q={},z={},re={},T={},ae={},$={},be={},O={},ne={},ie={},m={},ue={},U={},oe={},B={},R={},le={},me={},L={},j={},P={},pe={},fe={},Se={},de={},he={},ge={},ze={};Object.assign(S,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:5});Object.assign(G,{...t,type:1,name:"[18:0]u8",length:18,byteSize:19,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:4});Object.assign(H,{...t,type:11,name:"*const [18:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:G}],methods:[],template:null},slot:3});Object.assign(v,{...t,type:11,name:"*const *const [18:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[],template:null},slot:2});Object.assign(J,{...t,type:1,name:"[14:0]u8",length:14,byteSize:15,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:8});Object.assign(N,{...t,type:11,name:"*const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:J}],methods:[],template:null},slot:7});Object.assign(E,{...t,type:11,name:"*const *const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:N}],methods:[],template:null},slot:6});Object.assign(c,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:10});Object.assign(b,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:c}],methods:[],template:null},slot:9});Object.assign(Q,{...t,type:1,name:"[30:0]u8",length:30,byteSize:31,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:13});Object.assign(W,{...t,type:11,name:"*const [30:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[],template:null},slot:12});Object.assign(x,{...t,type:11,name:"*const *const [30:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:11});Object.assign(f,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:f}],methods:[],template:null},slot:33});Object.assign(X,{...t,type:13,name:"@Vector(3, f32)",length:3,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:f}],methods:[],template:null},slot:32});Object.assign(i,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:i}],methods:[],template:null},slot:54});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:i}],methods:[],template:null},slot:53});const He=new Uint8Array,Je=new Uint8Array([24,253,15,0]),Ne=new Uint8Array([0,0,0,0,0,0,240,191]),Qe=new Uint8Array([64,253,15,0]),We=new Uint8Array([0,0,0,0,0,0,240,191]),Xe=new Uint8Array([104,253,15,0]),Ye=new Uint8Array([0,0,0,0,0,0,89,192]);Object.assign(Y,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:He},slots:{0:{structure:s,memory:{array:Je},slots:{0:{structure:i,memory:{array:Ne}}}},1:{structure:s,memory:{array:Qe},slots:{0:{structure:i,memory:{array:We}}}},2:{structure:s,memory:{array:Xe},slots:{0:{structure:i,memory:{array:Ye}}}}}}},slot:48});Object.assign(K,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[],template:null},slot:47});const Ze=new Uint8Array,et=new Uint8Array([24,253,15,0]),tt=new Uint8Array([0,0,0,0,0,0,240,63]),st=new Uint8Array([64,253,15,0]),rt=new Uint8Array([0,0,0,0,0,0,240,63]),at=new Uint8Array([104,253,15,0]),nt=new Uint8Array([0,0,0,0,0,0,89,64]);Object.assign(Z,{...t,type:2,name:"Struct0016",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:Ze},slots:{0:{structure:s,memory:{array:et},slots:{0:{structure:i,memory:{array:tt}}}},1:{structure:s,memory:{array:st},slots:{0:{structure:i,memory:{array:rt}}}},2:{structure:s,memory:{array:at},slots:{0:{structure:i,memory:{array:nt}}}}}}},slot:50});Object.assign(D,{...t,type:11,name:"Struct0013",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:49});const it=new Uint8Array,ut=new Uint8Array([24,253,15,0]),ot=new Uint8Array([57,180,200,118,190,159,230,63]),lt=new Uint8Array([64,253,15,0]),mt=new Uint8Array([57,180,200,118,190,159,230,191]),yt=new Uint8Array([104,253,15,0]),ct=new Uint8Array([0,0,0,0,0,0,62,64]);Object.assign(ee,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:it},slots:{0:{structure:s,memory:{array:ut},slots:{0:{structure:i,memory:{array:ot}}}},1:{structure:s,memory:{array:lt},slots:{0:{structure:i,memory:{array:mt}}}},2:{structure:s,memory:{array:yt},slots:{0:{structure:i,memory:{array:ct}}}}}}},slot:52});Object.assign(F,{...t,type:11,name:"Struct0014",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:51});const bt=new Uint8Array,pt=new Uint8Array([170,170,170,170]),ft=new Uint8Array,St=new Uint8Array([170,170,170,170]),dt=new Uint8Array,ht=new Uint8Array([170,170,170,170]),gt=new Uint8Array;Object.assign(te,{...t,type:2,name:"Struct0009",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:X},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:K},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:D},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:F}],methods:[],template:{memory:{array:bt},slots:{0:{structure:K,memory:{array:pt},slots:{0:{structure:Y,memory:{array:ft}}}},1:{structure:D,memory:{array:St},slots:{0:{structure:Z,memory:{array:dt}}}},2:{structure:F,memory:{array:ht},slots:{0:{structure:ee,memory:{array:gt}}}}}}},slot:39});Object.assign(M,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:38});const zt=new Uint8Array,Ot=new Uint8Array([200,247,15,0]),wt=new Uint8Array([0,0,0,0,0,0,0,0]),At=new Uint8Array([240,247,15,0]),Ut=new Uint8Array([0,0,0,0,0,0,36,64]),qt=new Uint8Array([24,248,15,0]),Rt=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(A,{...t,type:2,name:"Struct0010",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:f},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:zt},slots:{0:{structure:s,memory:{array:Ot},slots:{0:{structure:i,memory:{array:wt}}}},1:{structure:s,memory:{array:At},slots:{0:{structure:i,memory:{array:Ut}}}},2:{structure:s,memory:{array:qt},slots:{0:{structure:i,memory:{array:Rt}}}}}}},slot:41});Object.assign(g,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:A}],methods:[],template:null},slot:40});const jt=new Uint8Array,Pt=new Uint8Array([170,170,170,170]),Vt=new Uint8Array,kt=new Uint8Array([170,170,170,170]),It=new Uint8Array,Ct=new Uint8Array([170,170,170,170]),vt=new Uint8Array;Object.assign(se,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"lineEquation",structure:M},{...e,type:8,isRequired:!1,slot:1,name:"uScale",structure:g},{...e,type:8,isRequired:!1,slot:2,name:"vScale",structure:g}],methods:[],template:{memory:{array:jt},slots:{0:{structure:M,memory:{array:Pt},slots:{0:{structure:te,memory:{array:Vt}}}},1:{structure:g,memory:{array:kt},slots:{0:{structure:A,memory:{array:It}}}},2:{structure:g,memory:{array:Ct},slots:{0:{structure:A,memory:{array:vt}}}}}}},slot:15});Object.assign(_,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:14});const Et=new Uint8Array,xt=new Uint8Array([16,248,15,0]),Kt=new Uint8Array([4,0,0,0]);Object.assign(q,{...t,type:2,name:"Struct0011",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:b}],methods:[],template:{memory:{array:Et},slots:{0:{structure:b,memory:{array:xt},slots:{0:{structure:c,memory:{array:Kt}}}}}}},slot:43});Object.assign(z,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:q}],methods:[],template:null},slot:42});const Dt=new Uint8Array,Ft=new Uint8Array([170,170,170,170]),Mt=new Uint8Array;Object.assign(re,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:z}],methods:[],template:{memory:{array:Dt},slots:{0:{structure:z,memory:{array:Ft},slots:{0:{structure:q,memory:{array:Mt}}}}}}},slot:17});Object.assign(T,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:16});const _t=new Uint8Array,Tt=new Uint8Array([170,170,170,170]),$t=new Uint8Array;Object.assign(ae,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:z}],methods:[],template:{memory:{array:_t},slots:{0:{structure:z,memory:{array:Tt},slots:{0:{structure:q,memory:{array:$t}}}}}}},slot:19});Object.assign($,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:18});const Bt=new Uint8Array,Lt=new Uint8Array,Gt=new Uint8Array([48,9,16,0]),Ht=new Uint8Array([214,8,16,0]),Jt=new Uint8Array([70,111,99,117,115,105,110,103,76,105,110,101,97,114,66,108,117,114,0]),Nt=new Uint8Array([44,9,16,0]),Qt=new Uint8Array([188,8,16,0]),Wt=new Uint8Array([80,101,116,114,105,32,76,101,115,107,105,110,101,110,0]),Xt=new Uint8Array([40,9,16,0]),Yt=new Uint8Array([1,0,0,0]),Zt=new Uint8Array([36,9,16,0]),es=new Uint8Array([140,8,16,0]),ts=new Uint8Array([108,105,110,101,97,114,32,98,108,117,114,32,98,121,32,97,32,108,105,110,101,32,101,113,117,97,116,105,111,110,0]),ss=new Uint8Array([170,170,170,170]),rs=new Uint8Array,as=new Uint8Array([170,170,170,170]),ns=new Uint8Array,is=new Uint8Array([170,170,170,170]),us=new Uint8Array;Object.assign(be,{...t,type:2,name:"focus-linear-blur.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Bt}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:v},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:E},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:b},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:x},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:_},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:T},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:$}],methods:[],template:{memory:{array:Lt},slots:{0:{structure:v,memory:{array:Gt},slots:{0:{structure:H,memory:{array:Ht},slots:{0:{structure:G,memory:{array:Jt}}}}}},1:{structure:E,memory:{array:Nt},slots:{0:{structure:N,memory:{array:Qt},slots:{0:{structure:J,memory:{array:Wt}}}}}},2:{structure:b,memory:{array:Xt},slots:{0:{structure:c,memory:{array:Yt}}}},3:{structure:x,memory:{array:Zt},slots:{0:{structure:W,memory:{array:es},slots:{0:{structure:Q,memory:{array:ts}}}}}},4:{structure:_,memory:{array:ss},slots:{0:{structure:se,memory:{array:rs}}}},5:{structure:T,memory:{array:as},slots:{0:{structure:re,memory:{array:ns}}}},6:{structure:$,memory:{array:is},slots:{0:{structure:ae,memory:{array:us}}}}}}},slot:1});Object.assign(O,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:24});Object.assign(ne,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:23});Object.assign(ie,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:ne}],methods:[],template:null},slot:22});Object.assign(m,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[],template:null},slot:25});const os=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(ue,{...t,type:9,name:"focus-linear-blur.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:c},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:c}],methods:[],template:{memory:{array:os}}},slot:26});Object.assign(U,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:U}],methods:[],template:null},slot:27});Object.assign(oe,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:f}],methods:[],template:null},slot:44});const ls=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ms=new Uint8Array,ys=new Uint8Array([84,8,16,0]),cs=new Uint8Array([4,0,0,0]);Object.assign(B,{...t,type:2,name:"focus-linear-blur.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:ie},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ue},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:{memory:{array:ls}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:oe},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:b}],methods:[],template:{memory:{array:ms},slots:{0:{structure:b,memory:{array:ys},slots:{0:{structure:c,memory:{array:cs}}}}}}},slot:21});const bs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ps=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ue=new Uint8Array([0,0,0,0,0,0,0,0]),fs=new Uint8Array;Object.assign(R,{...t,type:2,name:"focus-linear-blur.KernelInput(u8,focus-linear-blur.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:B}],methods:[],template:{memory:{array:bs},slots:{0:{structure:B,memory:{array:ps},slots:{0:{structure:ie,memory:{array:Ue},address:1047568,slots:{0:{structure:ne,memory:{array:fs},address:0}}}}}}}},slot:20});Object.assign(le,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:23});Object.assign(me,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:le}],methods:[],template:null},slot:30});const Ss=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ds=new Uint8Array,hs=new Uint8Array([84,8,16,0]),gs=new Uint8Array([4,0,0,0]);Object.assign(L,{...t,type:2,name:"focus-linear-blur.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:me},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ue},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:{memory:{array:Ss}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:oe},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:b}],methods:[],template:{memory:{array:ds},slots:{0:{structure:b,memory:{array:hs},slots:{0:{structure:c,memory:{array:gs}}}}}}},slot:29});const zs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Os=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ws=new Uint8Array;Object.assign(j,{...t,type:2,name:"focus-linear-blur.KernelOutput(u8,focus-linear-blur.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:L}],methods:[],template:{memory:{array:zs},slots:{0:{structure:L,memory:{array:Os},slots:{0:{structure:me,memory:{array:Ue},address:1047568,slots:{0:{structure:le,memory:{array:ws},address:0}}}}}}}},slot:28});const As=new Uint8Array([244,253,52,63,244,253,52,191,0,0,240,65,0,0,0,0,0,0,128,63,0,0,128,63,0,0,0,0,0,0,0,0]);Object.assign(P,{...t,type:2,name:"focus-linear-blur.KernelParameters(focus-linear-blur.kernel)",length:1,byteSize:32,align:4,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:96,byteSize:16,slot:0,name:"lineEquation",structure:X},{...e,type:4,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:1,name:"uScale",structure:f},{...e,type:4,isRequired:!1,bitOffset:160,bitSize:32,byteSize:4,slot:2,name:"vScale",structure:f}],methods:[],template:{memory:{array:As}}},slot:31});Object.assign(pe,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(focus-linear-blur.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:45});Object.assign(fe,{...t,type:7,name:"ErrorSet0000!focus-linear-blur.KernelOutput(u8,focus-linear-blur.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:j},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:pe}],methods:[],template:null},slot:36});Object.assign(Se,{...t,type:3,name:"createOutput",length:1,byteSize:96,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:m},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:m},{...e,type:6,bitOffset:320,bitSize:192,byteSize:24,slot:2,name:"2",structure:R},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:3,name:"3",structure:P},{...e,type:6,bitOffset:512,bitSize:224,byteSize:28,slot:4,name:"retval",structure:fe}],methods:[],template:null},slot:34});Object.assign(de,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(focus-linear-blur.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:46});Object.assign(he,{...t,type:7,name:"ErrorSet0001!focus-linear-blur.KernelOutput(u8,focus-linear-blur.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:j},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:de}],methods:[],template:null},slot:37});Object.assign(ge,{...t,type:3,name:"createPartialOutput",length:1,byteSize:112,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:m},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:m},{...e,type:3,bitOffset:320,bitSize:32,byteSize:4,slot:2,name:"2",structure:m},{...e,type:3,bitOffset:352,bitSize:32,byteSize:4,slot:3,name:"3",structure:m},{...e,type:6,bitOffset:384,bitSize:192,byteSize:24,slot:4,name:"4",structure:R},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:5,name:"5",structure:P},{...e,type:6,bitOffset:576,bitSize:224,byteSize:28,slot:6,name:"retval",structure:he}],methods:[],template:null},slot:35});const Us=new Uint8Array,qs={argStruct:Se,thunk:7,name:"createOutput"},Rs={argStruct:ge,thunk:2,name:"createPartialOutput"};Object.assign(ze,{...t,type:2,name:"focus-linear-blur",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Us}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:be},{...e,type:7,isRequired:!1,name:"Input",structure:R},{...e,type:7,isRequired:!1,name:"Output",structure:j},{...e,type:7,isRequired:!1,name:"Parameters",structure:P}],methods:[qs,Rs],template:null},slot:0});const js=[S,G,H,v,J,N,E,c,b,Q,W,x,f,X,i,s,Y,K,Z,D,ee,F,te,M,A,g,se,_,q,z,re,T,ae,$,be,O,ne,ie,m,ue,U,oe,B,R,le,me,L,j,P,pe,fe,Se,de,he,ge,ze],Ps=Le(js),Vs=ze.constructor,ks=(async()=>{const u=new URL("focus-linear-blur-70071536.wasm",import.meta.url).href;return fetch(u)})();Ge(ks,{...Ps,writeBack:!0});const{createOutput:Fs,createPartialOutput:Is,kernel:ce,Input:Cs,Output:Ms,Parameters:_s}=Vs;function vs(u,l,a,r,n={},d={}){if(Array.isArray(n)){const p=n;n={};for(const[y,h]of Object.keys(ce.inputImages).entries())n[h]=p[y]}const V=new Cs(void 0),k=Object.keys(ce.inputImages),o=[];let w;for(const p of k){let y=n[p];if(y||(k.length===1&&["data","width","height"].every(h=>!!n[h])?y=n:o.push(p)),V[p]=y,w){if(y.colorSpace!==w)throw new Error(`Input images must all use the same color space: ${w}`)}else w=y.colorSpace}if(o.length>0)throw new Error(`Missing input image${o.length>1?"s":""}: ${o.join(", ")}`);const ye=Is(u,l,a,r,V,d),Oe=p=>{const y=Object.keys(p),h={};for(const we of y){const{data:{typedArray:I},width:Ae,height:Re}=p[we];let C;if(typeof ImageData=="function"){const je=new Uint8ClampedArray(I.buffer,I.byteOffset,I.byteLength);C=new ImageData(je,Ae,r,{colorSpace:w})}else C={data:I,width:Ae,height:Re};if(y.length===1)return C;h[we]=C}return h};return ye[Symbol.toStringTag]==="Promise"?ye.then(Oe):Oe(ye)}function Es(){const u={};for(let[l,a]of Object.entries(ce)){if(l==="parameters"){const r={};for(const[n,d]of Object.entries(a)){const V=r[n]={};for(let[k,o]of Object.entries(d))typeof o=="object"?"string"in o?o=o.string:o=qe(o):typeof o=="function"&&(o=xs(o.name)),V[k]=o}a=r}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());u[l]=a}return u}function qe(u){const l=[];for(let[a,r]of Object.entries(u))typeof r=="object"&&(r=qe(r)),l[a]=r;return l}function xs(u){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[u]}onmessage=u=>{const[l,a,...r]=u.data;Ks(l,r).then(([n,d])=>{postMessage([l,a,n],{transfer:d})}).catch(n=>{postMessage(["error",a,n])})};async function Ks(u,l){switch(u){case"getKernelInfo":return[Es(...l)];case"createPartialImageData":const r=await vs(...l),n=[];if("data"in r&&"width"in r&&"height"in r)n.push(r.data.buffer);else for(const d of Object.entries(r))n.push(r.data.buffer);return[r,n];default:throw new Error(`Unknown function: ${u}`)}}
