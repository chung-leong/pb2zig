import{u as Ps,a as Vs,b as Is,c as Rs,d as qs,e as vs,f as Es,g as xs,h as Cs,i as Ks,j as _s,k as Ds,l as Fs,m as Ms,n as Ts,p as $s,o as Ls,q as Bs,r as Gs,s as Hs}from"./index-58d89d46.js";Ps();_s();Ds();Vs();Is();Fs();Ms();Ts();$s();Rs();qs();vs();Es();Ls();Hs();xs();Bs();Cs();Ks();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},r={},p={},_={},D={},F={},M={},l={},S={},T={},$={},s={},L={},B={},f={},c={},G={},H={},J={},N={},Q={},W={},X={},Y={},Z={},tt={},et={},st={},h={},rt={},at={},lt={},P={},nt={},V={},y={},O={},U={},gt={},it={},I={},ot={},R={},ct={},q={},v={},k={},pt={},Ot={},K={},ft={},St={},jt={},se={},zt={},dt={},ht={},re={},wt={},ae={},At={},ne={},Ut={},ie={},oe={},kt={},Pt={},ce={},Vt={},ue={},It={},me={},Rt={},ye={},be={},qt={},le={},vt={},ge={},pe={},Et={},Oe={},xt={},fe={},Se={},Ct={},je={},Kt={},ze={},de={},_t={},he={},Dt={},Ft={},Mt={},Tt={},we={},Ae={},$t={},Lt={},Bt={},Ue={},ut={},ke={},Pe={},Gt={},Ve={},Ht={},Ie={},Re={},qe={},ve={},Ee={},xe={},Ce={},Ke={},_e={},De={},Fe={},Me={},Te={},$e={},Le={},Be={},Ge={},Jt={},He={},Je={},Nt={},Ne={},Qt={},Qe={},We={},Xe={},Ye={},Ze={},ts={},es={},Wt={},ss={},rs={},as={},ns={},is={},os={},cs={},us={},ms={},ys={},Xt={},bs={},ls={},gs={},ps={},Os={},fs={},Ss={},js={},zs={},ds={},Js=new Uint8Array,Ns=new Uint8Array,Qs=new Uint8Array([0,0,0,0,0,0,240,63]),Ws=new Uint8Array,Xs=new Uint8Array([0,0,0,0,0,0,89,64]),Ys=new Uint8Array,Zs=new Uint8Array([0,0,0,0,0,0,62,64]),tr=new Uint8Array([52,18,0,1]),er=new Uint8Array([80,97,116,116,101,114,110,32,83,105,122,101,0]),sr=new Uint8Array,rr=new Uint8Array,ar=new Uint8Array([0,0,0,0,0,0,0,0]),nr=new Uint8Array,ir=new Uint8Array([0,0,0,0,0,0,240,63]),or=new Uint8Array,cr=new Uint8Array([225,122,20,174,71,225,218,63]),ur=new Uint8Array([84,18,0,1]),mr=new Uint8Array([82,97,100,105,117,115,58,32,104,111,119,32,109,117,99,104,32,97,32,100,105,115,107,115,32,102,105,108,108,115,32,117,112,32,105,116,115,32,115,112,97,99,101,0]),yr=new Uint8Array,br=new Uint8Array([0,0,0,0,0,0,105,192]),lr=new Uint8Array,gr=new Uint8Array([0,0,0,0,0,0,105,192]),pr=new Uint8Array,Or=new Uint8Array([0,0,0,0,0,0,137,64]),fr=new Uint8Array,Sr=new Uint8Array([0,0,0,0,0,64,127,64]),jr=new Uint8Array,zr=new Uint8Array([51,51,51,51,51,227,117,64]),dr=new Uint8Array,hr=new Uint8Array([205,204,204,204,204,12,89,64]),wr=new Uint8Array,Ar=new Uint8Array,Ur=new Uint8Array,kr=new Uint8Array,Pr=new Uint8Array([132,18,0,1]),Vr=new Uint8Array([66,97,115,101,32,80,111,105,110,116,0]),Ir=new Uint8Array,Rr=new Uint8Array,qr=new Uint8Array,vr=new Uint8Array,Er=new Uint8Array([4]),xr=new Uint8Array,Cr=new Uint8Array,Kr=new Uint8Array([84,16,0,1]),_r=new Uint8Array([67,105,114,99,117,108,97,114,68,105,115,107,115,0]),Dr=new Uint8Array([109,16,0,1]),Fr=new Uint8Array([80,101,116,114,105,32,76,101,115,107,105,110,101,110,0]),Mr=new Uint8Array,Tr=new Uint8Array([1]),$r=new Uint8Array([141,16,0,1]),Lr=new Uint8Array([68,105,115,107,32,116,105,108,105,110,103,0]),Br=new Uint8Array,Gr=new Uint8Array,Hr=new Uint8Array,Jr=new Uint8Array([0]),Nr=new Uint8Array([1]),hs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Qr=new Uint8Array,Wr=new Uint8Array,Xr=new Uint8Array,Yr=new Uint8Array,Zr=new Uint8Array([4]),Yt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ws=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ta=new Uint8Array,ea=new Uint8Array,sa=new Uint8Array,ra=new Uint8Array,aa=new Uint8Array([4]),Zt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),na=new Uint8Array([154,25,175,67,102,102,200,66,0,0,240,65,61,10,215,62]),ia=new Uint8Array([27,0]),oa=new Uint8Array,ca=new Uint8Array,ua=new Uint8Array,ma=new Uint8Array;Object.assign(se,{slots:{0:zt,1:ht,2:wt,3:At,4:Ut}});Object.assign(zt,{structure:r,memory:{array:Js},slots:{0:dt}});Object.assign(dt,{structure:f});Object.assign(ht,{structure:s,memory:{array:Ns},slots:{0:re}});Object.assign(re,{structure:c,memory:{array:Qs}});Object.assign(wt,{structure:s,memory:{array:Ws},slots:{0:ae}});Object.assign(ae,{structure:c,memory:{array:Xs}});Object.assign(At,{structure:s,memory:{array:Ys},slots:{0:ne}});Object.assign(ne,{structure:c,memory:{array:Zs}});Object.assign(Ut,{structure:B,memory:{array:tr},slots:{0:ie}});Object.assign(ie,{structure:L,memory:{array:er},reloc:16781876,const:!0});Object.assign(oe,{slots:{0:kt,1:Pt,2:Vt,3:It,4:Rt}});Object.assign(kt,{structure:r,memory:{array:sr},slots:{0:dt}});Object.assign(Pt,{structure:s,memory:{array:rr},slots:{0:ce}});Object.assign(ce,{structure:c,memory:{array:ar}});Object.assign(Vt,{structure:s,memory:{array:nr},slots:{0:ue}});Object.assign(ue,{structure:c,memory:{array:ir}});Object.assign(It,{structure:s,memory:{array:or},slots:{0:me}});Object.assign(me,{structure:c,memory:{array:cr}});Object.assign(Rt,{structure:J,memory:{array:ur},slots:{0:ye}});Object.assign(ye,{structure:H,memory:{array:mr},reloc:16781908,const:!0});Object.assign(be,{slots:{0:qt,1:vt}});Object.assign(qt,{structure:s,memory:{array:yr},slots:{0:le}});Object.assign(le,{structure:c,memory:{array:br}});Object.assign(vt,{structure:s,memory:{array:lr},slots:{0:ge}});Object.assign(ge,{structure:c,memory:{array:gr}});Object.assign(pe,{slots:{0:Et,1:xt}});Object.assign(Et,{structure:s,memory:{array:pr},slots:{0:Oe}});Object.assign(Oe,{structure:c,memory:{array:Or}});Object.assign(xt,{structure:s,memory:{array:fr},slots:{0:fe}});Object.assign(fe,{structure:c,memory:{array:Sr}});Object.assign(Se,{slots:{0:Ct,1:Kt}});Object.assign(Ct,{structure:s,memory:{array:jr},slots:{0:je}});Object.assign(je,{structure:c,memory:{array:zr}});Object.assign(Kt,{structure:s,memory:{array:dr},slots:{0:ze}});Object.assign(ze,{structure:c,memory:{array:hr}});Object.assign(de,{slots:{0:_t,1:Dt,2:Ft,3:Mt,4:Tt}});Object.assign(_t,{structure:r,memory:{array:wr},slots:{0:he}});Object.assign(he,{structure:tt});Object.assign(Dt,{structure:Q,memory:{array:Ar},slots:{0:qt,1:vt}});Object.assign(Ft,{structure:W,memory:{array:Ur},slots:{0:Et,1:xt}});Object.assign(Mt,{structure:X,memory:{array:kr},slots:{0:Ct,1:Kt}});Object.assign(Tt,{structure:Z,memory:{array:Pr},slots:{0:we}});Object.assign(we,{structure:Y,memory:{array:Vr},reloc:16781956,const:!0});Object.assign(Ae,{slots:{0:$t,1:Lt,2:Bt}});Object.assign($t,{structure:G,memory:{array:Ir},slots:{0:zt,1:ht,2:wt,3:At,4:Ut}});Object.assign(Lt,{structure:N,memory:{array:Rr},slots:{0:kt,1:Pt,2:Vt,3:It,4:Rt}});Object.assign(Bt,{structure:et,memory:{array:qr},slots:{0:_t,1:Dt,2:Ft,3:Mt,4:Tt}});Object.assign(Ue,{slots:{0:ut}});Object.assign(ut,{structure:l,memory:{array:vr},slots:{0:ke}});Object.assign(ke,{structure:S,memory:{array:Er}});Object.assign(Pe,{slots:{0:Gt}});Object.assign(Gt,{structure:h,memory:{array:xr},slots:{0:ut}});Object.assign(Ve,{slots:{0:Ht}});Object.assign(Ht,{structure:h,memory:{array:Cr},slots:{0:ut}});Object.assign(Ie,{slots:{0:Re,1:ve,2:xe,3:Ke,4:De,5:Fe,6:Me}});Object.assign(Re,{structure:D,memory:{array:Kr},slots:{0:qe}});Object.assign(qe,{structure:_,memory:{array:_r},reloc:16781396,const:!0});Object.assign(ve,{structure:M,memory:{array:Dr},slots:{0:Ee}});Object.assign(Ee,{structure:F,memory:{array:Fr},reloc:16781421,const:!0});Object.assign(xe,{structure:l,memory:{array:Mr},slots:{0:Ce}});Object.assign(Ce,{structure:S,memory:{array:Tr}});Object.assign(Ke,{structure:$,memory:{array:$r},slots:{0:_e}});Object.assign(_e,{structure:T,memory:{array:Lr},reloc:16781453,const:!0});Object.assign(De,{structure:st,memory:{array:Br},slots:{0:$t,1:Lt,2:Bt}});Object.assign(Fe,{structure:rt,memory:{array:Gr},slots:{0:Gt}});Object.assign(Me,{structure:at,memory:{array:Hr},slots:{0:Ht}});Object.assign(Te,{slots:{0:$e,1:Le}});Object.assign($e,{structure:O,memory:{array:Jr}});Object.assign(Le,{structure:O,memory:{array:Nr}});Object.assign(Be,{memory:{array:hs},slots:{0:Ge}});Object.assign(Ge,{structure:V,memory:{array:hs,offset:0,length:8},slots:{0:Jt}});Object.assign(Jt,{structure:nt,memory:{array:Qr},reloc:0,const:!0});Object.assign(He,{slots:{0:Je,1:Ne,2:Qe}});Object.assign(Je,{structure:r,memory:{array:Wr},slots:{0:Nt}});Object.assign(Nt,{structure:P});Object.assign(Ne,{structure:r,memory:{array:Xr},slots:{0:Qt}});Object.assign(Qt,{structure:gt});Object.assign(Qe,{structure:l,memory:{array:Yr},slots:{0:We}});Object.assign(We,{structure:S,memory:{array:Zr}});Object.assign(Xe,{memory:{array:Yt},slots:{0:Ye}});Object.assign(Ye,{structure:it,memory:{array:Yt},slots:{0:Ze}});Object.assign(Ze,{structure:V,memory:{array:Yt,offset:0,length:8},slots:{0:Jt}});Object.assign(ts,{memory:{array:ws},slots:{0:es}});Object.assign(es,{structure:R,memory:{array:ws,offset:0,length:8},slots:{0:Wt}});Object.assign(Wt,{structure:ot,memory:{array:ta},reloc:0});Object.assign(ss,{slots:{0:rs,1:as,2:ns}});Object.assign(rs,{structure:r,memory:{array:ea},slots:{0:Nt}});Object.assign(as,{structure:r,memory:{array:sa},slots:{0:Qt}});Object.assign(ns,{structure:l,memory:{array:ra},slots:{0:is}});Object.assign(is,{structure:S,memory:{array:aa}});Object.assign(os,{memory:{array:Zt},slots:{0:cs}});Object.assign(cs,{structure:ct,memory:{array:Zt},slots:{0:us}});Object.assign(us,{structure:R,memory:{array:Zt,offset:0,length:8},slots:{0:Wt}});Object.assign(ms,{memory:{array:na}});Object.assign(ys,{slots:{0:Xt}});Object.assign(Xt,{structure:k,memory:{array:ia}});Object.assign(bs,{slots:{0:Xt}});Object.assign(ls,{slots:{0:gs,1:Os,2:Ss,3:zs}});Object.assign(gs,{structure:r,memory:{array:oa},slots:{0:ps}});Object.assign(ps,{structure:lt});Object.assign(Os,{structure:r,memory:{array:ca},slots:{0:fs}});Object.assign(fs,{structure:I});Object.assign(Ss,{structure:r,memory:{array:ua},slots:{0:js}});Object.assign(js,{structure:q});Object.assign(zs,{structure:r,memory:{array:ma},slots:{0:ds}});Object.assign(ds,{structure:v});const ya={argStruct:Ot,thunkId:2,name:"createOutput"},ba={argStruct:St,thunkId:3,name:"createPartialOutput"};Object.assign(r,{...e,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(p,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(_,{...e,type:1,name:"[13:0]u8",length:13,byteSize:14,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(D,{...e,type:13,name:"*const [13:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[]}});Object.assign(F,{...e,type:1,name:"[14:0]u8",length:14,byteSize:15,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(M,{...e,type:13,name:"*const [14:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(l,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:l}],methods:[]}});Object.assign(S,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(T,{...e,type:1,name:"[11:0]u8",length:11,byteSize:12,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign($,{...e,type:13,name:"*const [11:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[]}});Object.assign(s,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(L,{...e,type:1,name:"[12:0]u8",length:12,byteSize:13,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(B,{...e,type:13,name:"*const [12:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[]}});Object.assign(f,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:f}],methods:[]}});Object.assign(c,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:c}],methods:[]}});Object.assign(G,{...e,type:2,name:"Struct2983709326",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:s},{...t,type:9,slot:2,name:"maxValue",structure:s},{...t,type:9,slot:3,name:"defaultValue",structure:s},{...t,type:9,slot:4,name:"description",structure:B}],methods:[],template:se}});Object.assign(H,{...e,type:1,name:"[43:0]u8",length:43,byteSize:44,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(J,{...e,type:13,name:"*const [43:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[]}});Object.assign(N,{...e,type:2,name:"Struct1050616952",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:s},{...t,type:9,slot:2,name:"maxValue",structure:s},{...t,type:9,slot:3,name:"defaultValue",structure:s},{...t,type:9,slot:4,name:"description",structure:J}],methods:[],template:oe}});Object.assign(Q,{...e,type:2,name:"Struct761432325",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:s},{...t,type:9,slot:1,name:"1",structure:s}],methods:[],template:be}});Object.assign(W,{...e,type:2,name:"Struct4139784567",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:s},{...t,type:9,slot:1,name:"1",structure:s}],methods:[],template:pe}});Object.assign(X,{...e,type:2,name:"Struct1774147102",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:s},{...t,type:9,slot:1,name:"1",structure:s}],methods:[],template:Se}});Object.assign(Y,{...e,type:1,name:"[10:0]u8",length:10,byteSize:11,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(Z,{...e,type:13,name:"*const [10:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[]}});Object.assign(tt,{...e,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:f}],methods:[]}});Object.assign(et,{...e,type:2,name:"Struct3356244885",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:Q},{...t,type:9,slot:2,name:"maxValue",structure:W},{...t,type:9,slot:3,name:"defaultValue",structure:X},{...t,type:9,slot:4,name:"description",structure:Z}],methods:[],template:de}});Object.assign(st,{...e,type:2,name:"Struct1970795987",align:1,instance:{members:[{...t,type:9,slot:0,name:"size",structure:G},{...t,type:9,slot:1,name:"radius",structure:N},{...t,type:9,slot:2,name:"base",structure:et}],methods:[],template:Ae}});Object.assign(h,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:l}],methods:[],template:Ue}});Object.assign(rt,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:9,slot:0,name:"src",structure:h}],methods:[],template:Pe}});Object.assign(at,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:9,slot:0,name:"dst",structure:h}],methods:[],template:Ve}});Object.assign(lt,{...e,type:2,name:"circular-disks.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:D},{...t,type:9,slot:1,name:"vendor",structure:M},{...t,type:9,slot:2,name:"version",structure:l},{...t,type:9,slot:3,name:"description",structure:$},{...t,type:9,slot:4,name:"parameters",structure:st},{...t,type:9,slot:5,name:"inputImages",structure:rt},{...t,type:9,slot:6,name:"outputImages",structure:at}],methods:[],template:Ie}});Object.assign(P,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(nt,{...e,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(V,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:nt}],methods:[]}});Object.assign(y,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[]}});Object.assign(O,{...e,type:11,name:"circular-disks.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:O},{...t,type:9,slot:1,name:"display-p3",structure:O}],methods:[],template:Te}});Object.assign(U,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:U}],methods:[]}});Object.assign(gt,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:f}],methods:[]}});Object.assign(it,{...e,type:2,name:"circular-disks.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:V},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:Be},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:r},{...t,type:9,slot:1,name:"FPixel",structure:r},{...t,type:9,slot:2,name:"channels",structure:l}],methods:[],template:He}});Object.assign(I,{...e,type:2,name:"circular-disks.KernelInput(u8,circular-disks.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:it}],methods:[],template:Xe}});Object.assign(ot,{...e,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(R,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:ot}],methods:[]}});Object.assign(ct,{...e,type:2,name:"circular-disks.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:R},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:ts},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:r},{...t,type:9,slot:1,name:"FPixel",structure:r},{...t,type:9,slot:2,name:"channels",structure:l}],methods:[],template:ss}});Object.assign(q,{...e,type:2,name:"circular-disks.KernelOutput(u8,circular-disks.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:ct}],methods:[],template:os}});Object.assign(v,{...e,type:2,name:"circular-disks.KernelParameters(circular-disks.kernel)",byteSize:16,align:8,instance:{members:[{...t,type:4,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"size",structure:f},{...t,type:4,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"radius",structure:f},{...t,type:7,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"base",structure:tt}],methods:[],template:ms}});Object.assign(k,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(circular-disks.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:k}],methods:[],template:ys}});Object.assign(pt,{...e,type:9,name:"ErrorSet2308878325!circular-disks.KernelOutput(u8,circular-disks.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:q},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:k}],methods:[]}});Object.assign(Ot,{...e,type:5,name:"createOutput",byteSize:80,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"0",structure:y},{...t,type:3,isRequired:!0,bitOffset:160,bitSize:32,byteSize:4,slot:4,name:"1",structure:y},{...t,type:7,isRequired:!0,bitOffset:192,bitSize:192,byteSize:24,slot:0,name:"2",structure:I},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:128,byteSize:16,slot:1,name:"3",structure:v},{...t,type:7,isRequired:!0,bitOffset:384,bitSize:224,byteSize:28,slot:2,name:"retval",structure:pt}],methods:[]}});Object.assign(K,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(circular-disks.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:K}],methods:[],template:bs}});Object.assign(ft,{...e,type:9,name:"ErrorSet138125471!circular-disks.KernelOutput(u8,circular-disks.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:q},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:K}],methods:[]}});Object.assign(St,{...e,type:5,name:"createPartialOutput",byteSize:88,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"0",structure:y},{...t,type:3,isRequired:!0,bitOffset:160,bitSize:32,byteSize:4,slot:4,name:"1",structure:y},{...t,type:3,isRequired:!0,bitOffset:192,bitSize:32,byteSize:4,slot:5,name:"2",structure:y},{...t,type:3,isRequired:!0,bitOffset:224,bitSize:32,byteSize:4,slot:6,name:"3",structure:y},{...t,type:7,isRequired:!0,bitOffset:256,bitSize:192,byteSize:24,slot:0,name:"4",structure:I},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:128,byteSize:16,slot:1,name:"5",structure:v},{...t,type:7,isRequired:!0,bitOffset:448,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ft}],methods:[]}});Object.assign(jt,{...e,type:2,name:"circular-disks",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:r},{...t,type:9,slot:1,name:"Input",structure:r},{...t,type:9,slot:2,name:"Output",structure:r},{...t,type:9,slot:3,name:"Parameters",structure:r}],methods:[ya,ba],template:ls}});const la=[r,p,_,D,F,M,l,S,T,$,s,L,B,f,c,G,H,J,N,Q,W,X,Y,Z,tt,et,st,h,rt,at,lt,P,nt,V,y,O,U,gt,it,I,ot,R,ct,q,v,k,pt,Ot,K,ft,St,jt],ga=jt,pa={runtimeSafety:!1,littleEndian:!0},mt=Gs();mt.getControlObject();mt.recreateStructures(la,pa);const Oa=(async()=>{const o=new URL("circular-disks-5bf1bb54.wasm",import.meta.url).href;return fetch(o)})();mt.loadModule(Oa);mt.linkVariables(!0);const{constructor:fa}=ga,{createPartialOutput:Sa,Input:ja,kernel:bt}=fa;function za(o,u,n,a,i={},j={}){const z=[];for(const[b]of bt.inputImages)z.push(b);const w=[];for(const[b]of bt.outputImages)w.push(b);if(Array.isArray(i)){const b=i;i={};for(const[g,d]of z.entries())i[d]=b[g]}const m=new ja(void 0),E=[];let A;for(const b of z){let g=i[b];if(g||(z.length===1&&["data","width","height"].every(d=>!!i[d])?g=i:E.push(b)),m[b]=g,A){if(g.colorSpace!==A)throw new Error(`Input images must all use the same color space: ${A}`)}else A=g.colorSpace}if(E.length>0)throw new Error(`Missing input image${E.length>1?"s":""}: ${E.join(", ")}`);const yt=Sa(o,u,n,a,m,j),te=b=>{const g={};for(const d of w){const{data:{typedArray:x},width:ee,height:Us}=b[d];let C;if(typeof ImageData=="function"){const ks=new Uint8ClampedArray(x.buffer,x.byteOffset,x.byteLength);C=new ImageData(ks,ee,a,{colorSpace:A})}else C={data:x,width:ee,height:Us};if(w.length===1)return C;g[d]=C}return g};return yt[Symbol.toStringTag]==="Promise"?yt.then(te):te(yt)}function da(){const o={};for(let[u,n]of bt){if(u==="parameters"){const a={};for(const[i,j]of n){const z=a[i]={};for(let[w,m]of j)typeof m=="object"?"string"in m?m=m.string:m=As(m):typeof m=="function"&&(m=ha(m.name)),z[w]=m}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());o[u]=n}return o}function As(o){const u=[];for(let[n,a]of o)typeof a=="object"&&(a=As(a)),u[n]=a;return u}function ha(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[u,n,...a]=o.data;wa(u,a).then(([i,j])=>{postMessage([u,n,i],{transfer:j})}).catch(i=>{postMessage(["error",n,i])})};async function wa(o,u){switch(o){case"getKernelInfo":return[da(...u)];case"createPartialImageData":const a=await za(...u),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const j of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${o}`)}}
