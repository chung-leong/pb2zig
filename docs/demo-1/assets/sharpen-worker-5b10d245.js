import{u as Te,a as _e,b as $e,c as Le,d as Be,e as Ge,f as He,g as Je,h as Ne,i as Qe,j as We,k as Xe,l as Ye,m as Ze,n as ts,o as es,p as ss,q as rs}from"./index-67c7daa1.js";Te();Xe();Ye();_e();$e();Ze();ts();es();ss();Le();Be();Ge();He();rs();Je();Ne();Qe();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},w={},k={},A={},b={},f={},F={},T={},n={},O={},g={},_={},$={},L={},U={},B={},G={},tt={},q={},H={},I={},c={},p={},R={},et={},J={},v={},N={},E={},Q={},x={},K={},h={},st={},rt={},d={},at={},nt={},it={},Rt={},ot={},ct={},ut={},kt={},mt={},qt={},yt={},It={},vt={},bt={},lt={},Et={},pt={},xt={},gt={},Kt={},Ct={},ft={},Ot={},Mt={},W={},Dt={},Ft={},St={},Tt={},zt={},_t={},$t={},Lt={},Bt={},Gt={},Ht={},Jt={},Nt={},Qt={},Wt={},Xt={},Yt={},Zt={},te={},ee={},se={},re={},jt={},ae={},ne={},ht={},ie={},dt={},oe={},ce={},ue={},me={},ye={},be={},le={},wt={},pe={},ge={},fe={},Oe={},Se={},ze={},je={},he={},de={},we={},Ae={},Ue={},Pe={},Ve={},Re={},ke={},qe={},Ie={},ve={},Ee={},xe={},Ke={},as=new Uint8Array,ns=new Uint8Array,is=new Uint8Array([0,0,0,0,0,0,0,0]),os=new Uint8Array,cs=new Uint8Array([0,0,0,0,0,0,52,64]),us=new Uint8Array,ms=new Uint8Array([0,0,0,0,0,0,240,63]),ys=new Uint8Array,bs=new Uint8Array,ls=new Uint8Array([0,0,0,0,0,0,0,0]),ps=new Uint8Array,gs=new Uint8Array([0,0,0,0,0,0,240,63]),fs=new Uint8Array,Os=new Uint8Array([154,153,153,153,153,153,185,63]),Ss=new Uint8Array,zs=new Uint8Array,js=new Uint8Array,hs=new Uint8Array([4]),ds=new Uint8Array,ws=new Uint8Array,As=new Uint8Array([246,4,0,1]),Us=new Uint8Array([99,111,109,46,114,112,104,101,108,97,110,0]),Ps=new Uint8Array([13,5,0,1]),Vs=new Uint8Array([82,121,97,110,32,80,104,101,108,97,110,0]),Rs=new Uint8Array,ks=new Uint8Array([1]),qs=new Uint8Array([42,5,0,1]),Is=new Uint8Array([65,112,112,108,105,101,115,32,97,32,115,104,97,114,112,101,110,32,101,102,102,101,99,116,32,116,111,32,97,110,32,105,109,97,103,101,46,0]),vs=new Uint8Array,Es=new Uint8Array,xs=new Uint8Array,Ks=new Uint8Array([0]),Cs=new Uint8Array([1]),Ce=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ms=new Uint8Array,Ds=new Uint8Array,Fs=new Uint8Array,Ts=new Uint8Array,_s=new Uint8Array([4]),At=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Me=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),$s=new Uint8Array,Ls=new Uint8Array,Bs=new Uint8Array,Gs=new Uint8Array,Hs=new Uint8Array([4]),Ut=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Js=new Uint8Array([0,0,128,63,205,204,204,61]),Ns=new Uint8Array([27,0]),Qs=new Uint8Array([27,0]),Ws=new Uint8Array,Xs=new Uint8Array,Ys=new Uint8Array,Zs=new Uint8Array;Object.assign(Rt,{slots:{0:ot,1:ut,2:mt,3:yt}});Object.assign(ot,{structure:s,memory:{array:as},const:!0,slots:{0:ct}});Object.assign(ct,{structure:O});Object.assign(ut,{structure:n,memory:{array:ns},const:!0,slots:{0:kt}});Object.assign(kt,{structure:g,memory:{array:is},const:!0});Object.assign(mt,{structure:n,memory:{array:os},const:!0,slots:{0:qt}});Object.assign(qt,{structure:g,memory:{array:cs},const:!0});Object.assign(yt,{structure:n,memory:{array:us},const:!0,slots:{0:It}});Object.assign(It,{structure:g,memory:{array:ms},const:!0});Object.assign(vt,{slots:{0:bt,1:lt,2:pt,3:gt}});Object.assign(bt,{structure:s,memory:{array:ys},const:!0,slots:{0:ct}});Object.assign(lt,{structure:n,memory:{array:bs},const:!0,slots:{0:Et}});Object.assign(Et,{structure:g,memory:{array:ls},const:!0});Object.assign(pt,{structure:n,memory:{array:ps},const:!0,slots:{0:xt}});Object.assign(xt,{structure:g,memory:{array:gs},const:!0});Object.assign(gt,{structure:n,memory:{array:fs},const:!0,slots:{0:Kt}});Object.assign(Kt,{structure:g,memory:{array:Os},const:!0});Object.assign(Ct,{slots:{0:ft,1:Ot}});Object.assign(ft,{structure:_,memory:{array:Ss},const:!0,slots:{0:ot,1:ut,2:mt,3:yt}});Object.assign(Ot,{structure:$,memory:{array:zs},const:!0,slots:{0:bt,1:lt,2:pt,3:gt}});Object.assign(Mt,{slots:{0:W}});Object.assign(W,{structure:b,memory:{array:js},const:!0,slots:{0:Dt}});Object.assign(Dt,{structure:f,memory:{array:hs},const:!0});Object.assign(Ft,{slots:{0:St}});Object.assign(St,{structure:U,memory:{array:ds},const:!0,slots:{0:W}});Object.assign(Tt,{slots:{0:zt}});Object.assign(zt,{structure:U,memory:{array:ws},const:!0,slots:{0:W}});Object.assign(_t,{slots:{0:$t,1:Bt,2:Ht,3:Nt,4:Wt,5:Xt,6:Yt}});Object.assign($t,{structure:A,memory:{array:As},const:!0,slots:{0:Lt}});Object.assign(Lt,{structure:k,memory:{array:Us},reloc:16778486});Object.assign(Bt,{structure:A,memory:{array:Ps},const:!0,slots:{0:Gt}});Object.assign(Gt,{structure:k,memory:{array:Vs},reloc:16778509});Object.assign(Ht,{structure:b,memory:{array:Rs},const:!0,slots:{0:Jt}});Object.assign(Jt,{structure:f,memory:{array:ks},const:!0});Object.assign(Nt,{structure:T,memory:{array:qs},const:!0,slots:{0:Qt}});Object.assign(Qt,{structure:F,memory:{array:Is},reloc:16778538});Object.assign(Wt,{structure:L,memory:{array:vs},const:!0,slots:{0:ft,1:Ot}});Object.assign(Xt,{structure:B,memory:{array:Es},const:!0,slots:{0:St}});Object.assign(Yt,{structure:G,memory:{array:xs},const:!0,slots:{0:zt}});Object.assign(Zt,{slots:{0:te,1:ee}});Object.assign(te,{structure:p,memory:{array:Ks},const:!0});Object.assign(ee,{structure:p,memory:{array:Cs},const:!0});Object.assign(se,{memory:{array:Ce},slots:{0:re}});Object.assign(re,{structure:I,memory:{array:Ce,offset:0,length:8},slots:{0:jt}});Object.assign(jt,{structure:H,memory:{array:Ms},reloc:0});Object.assign(ae,{slots:{0:ne,1:ie,2:oe}});Object.assign(ne,{structure:s,memory:{array:Ds},const:!0,slots:{0:ht}});Object.assign(ht,{structure:q});Object.assign(ie,{structure:s,memory:{array:Fs},const:!0,slots:{0:dt}});Object.assign(dt,{structure:et});Object.assign(oe,{structure:b,memory:{array:Ts},const:!0,slots:{0:ce}});Object.assign(ce,{structure:f,memory:{array:_s},const:!0});Object.assign(ue,{memory:{array:At},slots:{0:me}});Object.assign(me,{structure:J,memory:{array:At},slots:{0:ye}});Object.assign(ye,{structure:I,memory:{array:At,offset:0,length:8},slots:{0:jt}});Object.assign(be,{memory:{array:Me},slots:{0:le}});Object.assign(le,{structure:E,memory:{array:Me,offset:0,length:8},slots:{0:wt}});Object.assign(wt,{structure:N,memory:{array:$s},reloc:0});Object.assign(pe,{slots:{0:ge,1:fe,2:Oe}});Object.assign(ge,{structure:s,memory:{array:Ls},const:!0,slots:{0:ht}});Object.assign(fe,{structure:s,memory:{array:Bs},const:!0,slots:{0:dt}});Object.assign(Oe,{structure:b,memory:{array:Gs},const:!0,slots:{0:Se}});Object.assign(Se,{structure:f,memory:{array:Hs},const:!0});Object.assign(ze,{memory:{array:Ut},slots:{0:je}});Object.assign(je,{structure:Q,memory:{array:Ut},slots:{0:he}});Object.assign(he,{structure:E,memory:{array:Ut,offset:0,length:8},slots:{0:wt}});Object.assign(de,{memory:{array:Js}});Object.assign(we,{slots:{0:Ae}});Object.assign(Ae,{structure:h,memory:{array:Ns},const:!0});Object.assign(Ue,{slots:{0:Pe}});Object.assign(Pe,{structure:d,memory:{array:Qs},const:!0});Object.assign(Ve,{slots:{0:Re,1:qe,2:ve,3:xe}});Object.assign(Re,{structure:s,memory:{array:Ws},const:!0,slots:{0:ke}});Object.assign(ke,{structure:tt});Object.assign(qe,{structure:s,memory:{array:Xs},const:!0,slots:{0:Ie}});Object.assign(Ie,{structure:v});Object.assign(ve,{structure:s,memory:{array:Ys},const:!0,slots:{0:Ee}});Object.assign(Ee,{structure:x});Object.assign(xe,{structure:s,memory:{array:Zs},const:!0,slots:{0:Ke}});Object.assign(Ke,{structure:K});const tr={argStruct:rt,thunkId:2,name:"createOutput"},er={argStruct:nt,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(w,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:w}],methods:[]}});Object.assign(k,{...e,type:1,name:"[11:0]u8",length:11,byteSize:12,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:w}],methods:[]}});Object.assign(A,{...e,type:13,name:"*const [11:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:k}],methods:[]}});Object.assign(b,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:b}],methods:[]}});Object.assign(f,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(F,{...e,type:1,name:"[37:0]u8",length:37,byteSize:38,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:w}],methods:[]}});Object.assign(T,{...e,type:13,name:"*const [37:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(n,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:n}],methods:[]}});Object.assign(O,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:O}],methods:[]}});Object.assign(g,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:g}],methods:[]}});Object.assign(_,{...e,type:2,name:"Struct1335891619",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:n},{...t,type:7,slot:2,name:"maxValue",structure:n},{...t,type:7,slot:3,name:"defaultValue",structure:n}],methods:[],template:Rt}});Object.assign($,{...e,type:2,name:"Struct721877853",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:n},{...t,type:7,slot:2,name:"maxValue",structure:n},{...t,type:7,slot:3,name:"defaultValue",structure:n}],methods:[],template:vt}});Object.assign(L,{...e,type:2,name:"Struct454583292",align:1,instance:{members:[{...t,type:7,slot:0,name:"amount",structure:_},{...t,type:7,slot:1,name:"radius",structure:$}],methods:[],template:Ct}});Object.assign(U,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:b}],methods:[],template:Mt}});Object.assign(B,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:7,slot:0,name:"src",structure:U}],methods:[],template:Ft}});Object.assign(G,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:U}],methods:[],template:Tt}});Object.assign(tt,{...e,type:2,name:"sharpen.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:A},{...t,type:7,slot:1,name:"vendor",structure:A},{...t,type:7,slot:2,name:"version",structure:b},{...t,type:7,slot:3,name:"description",structure:T},{...t,type:7,slot:4,name:"parameters",structure:L},{...t,type:7,slot:5,name:"inputImages",structure:B},{...t,type:7,slot:6,name:"outputImages",structure:G}],methods:[],template:_t}});Object.assign(q,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:w}],methods:[]}});Object.assign(H,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:q}],methods:[]}});Object.assign(I,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:H}],methods:[]}});Object.assign(c,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[]}});Object.assign(p,{...e,type:11,name:"sharpen.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:p}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:p},{...t,type:7,slot:1,name:"display-p3",structure:p}],methods:[],template:Zt}});Object.assign(R,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(et,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:O}],methods:[]}});Object.assign(J,{...e,type:2,name:"sharpen.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:I},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:se},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:b}],methods:[],template:ae}});Object.assign(v,{...e,type:2,name:"sharpen.KernelInput(u8,sharpen.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:J}],methods:[],template:ue}});Object.assign(N,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:q}],methods:[]}});Object.assign(E,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:N}],methods:[]}});Object.assign(Q,{...e,type:2,name:"sharpen.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:E},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:be},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:b}],methods:[],template:pe}});Object.assign(x,{...e,type:2,name:"sharpen.KernelOutput(u8,sharpen.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:Q}],methods:[],template:ze}});Object.assign(K,{...e,type:2,name:"sharpen.KernelParameters(sharpen.kernel)",byteSize:8,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"amount",structure:O},{...t,type:4,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"radius",structure:O}],methods:[],template:de}});Object.assign(h,{...e,type:10,name:"ErrorSet3394225048",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:h}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:h}],methods:[],template:we}});Object.assign(st,{...e,type:9,name:"ErrorSet3394225048!sharpen.KernelOutput(u8,sharpen.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:x},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:h}],methods:[]}});Object.assign(rt,{...e,type:5,name:"createOutput",byteSize:68,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:c},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:c},{...t,type:5,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:v},{...t,type:5,isRequired:!0,bitOffset:256,bitSize:64,byteSize:8,slot:1,name:"3",structure:K},{...t,type:5,isRequired:!0,bitOffset:320,bitSize:224,byteSize:28,slot:2,name:"retval",structure:st}],methods:[]}});Object.assign(d,{...e,type:10,name:"ErrorSet923534995",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:d}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:d}],methods:[],template:Ue}});Object.assign(at,{...e,type:9,name:"ErrorSet923534995!sharpen.KernelOutput(u8,sharpen.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:x},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:d}],methods:[]}});Object.assign(nt,{...e,type:5,name:"createPartialOutput",byteSize:76,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:c},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:c},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:c},{...t,type:5,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:v},{...t,type:5,isRequired:!0,bitOffset:320,bitSize:64,byteSize:8,slot:1,name:"5",structure:K},{...t,type:5,isRequired:!0,bitOffset:384,bitSize:224,byteSize:28,slot:2,name:"retval",structure:at}],methods:[]}});Object.assign(it,{...e,type:2,name:"sharpen",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:s},{...t,type:7,slot:1,name:"Input",structure:s},{...t,type:7,slot:2,name:"Output",structure:s},{...t,type:7,slot:3,name:"Parameters",structure:s}],methods:[tr,er],template:Ve}});const sr=[s,w,k,A,b,f,F,T,n,O,g,_,$,L,U,B,G,tt,q,H,I,c,p,R,et,J,v,N,E,Q,x,K,h,st,rt,d,at,nt,it],rr=it,ar={runtimeSafety:!1,littleEndian:!0},X=We();X.getSpecialExports();X.recreateStructures(sr,ar);const nr=(async()=>{const i=new URL("sharpen-f73767c4.wasm",import.meta.url).href;return fetch(i)})();X.loadModule(nr);X.linkVariables(!0);const{constructor:ir}=rr,{createPartialOutput:or,Input:cr,kernel:Z}=ir;function ur(i,u,o,a,r={},S={}){const z=[];for(const[y]of Z.inputImages)z.push(y);const P=[];for(const[y]of Z.outputImages)P.push(y);if(Array.isArray(r)){const y=r;r={};for(const[l,j]of z.entries())r[j]=y[l]}const m=new cr(void 0),C=[];let V;for(const y of z){let l=r[y];if(l||(z.length===1&&["data","width","height"].every(j=>!!r[j])?l=r:C.push(y)),m[y]=l,V){if(l.colorSpace!==V)throw new Error(`Input images must all use the same color space: ${V}`)}else V=l.colorSpace}if(C.length>0)throw new Error(`Missing input image${C.length>1?"s":""}: ${C.join(", ")}`);const Y=or(i,u,o,a,m,S),Pt=y=>{const l={};for(const j of P){const{data:{typedArray:M},width:Vt,height:De}=y[j];let D;if(typeof ImageData=="function"){const Fe=new Uint8ClampedArray(M.buffer,M.byteOffset,M.byteLength);D=new ImageData(Fe,Vt,a,{colorSpace:V})}else D={data:M,width:Vt,height:De};if(P.length===1)return D;l[j]=D}return l};return Y[Symbol.toStringTag]==="Promise"?Y.then(Pt):Pt(Y)}function mr(){const i={};for(let[u,o]of Z){if(u==="parameters"){const a={};for(const[r,S]of o){const z=a[r]={};for(let[P,m]of S)typeof m=="object"?m=m.string??m.valueOf():typeof m=="function"&&(m=yr(m.name)),z[P]=m}o=a}else typeof o=="object"&&(o=o.string??o.valueOf());i[u]=o}return i}function yr(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=async i=>{if(!Array.isArray(i.data))return;const[u,o,...a]=i.data;try{const[r,S]=await br(u,a);postMessage([u,o,r],{transfer:S})}catch(r){postMessage(["error",o,r])}};async function br(i,u){switch(i){case"getKernelInfo":return[mr(...u)];case"createPartialImageData":const a=await ur(...u),r=[];if("data"in a&&"width"in a&&"height"in a)r.push(a.data.buffer);else for(const S of Object.entries(a))r.push(a.data.buffer);return[a,r];default:throw new Error(`Unknown function: ${i}`)}}postMessage("ready");
