import{u as Ee,a as Ke,b as De,c as Fe,d as Me,e as _e,f as Te,g as $e,h as Be,i as Le,j as Ge,k as He,l as Je,m as Ne,o as Qe,n as We,p as Xe,q as Ye}from"./index-422d9c98.js";Ee();Ke();De();Fe();Me();_e();Te();$e();Be();Le();Ge();He();Je();Ne();Qe();We();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},f={},J={},N={},k={},Q={},W={},I={},b={},p={},X={},Y={},v={},h={},m={},r={},Z={},ee={},E={},te={},K={},se={},re={},D={},ae={},F={},ne={},M={},ie={},ue={},_={},le={},T={},oe={},$={},q={},z={},me={},B={},ye={},L={},ze={},O={},ce={},be={},o={},pe={},R={},fe={},G={},A={},de={},he={},H={},U={},j={},Oe={},we={},Re={},qe={},Ae={},Ue={},je={};Object.assign(f,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[],template:null},slot:5});Object.assign(J,{...t,type:1,name:"[29:0]u8",length:29,byteSize:30,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:f}],methods:[],template:null},slot:4});Object.assign(N,{...t,type:11,name:"*const [29:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:J}],methods:[],template:null},slot:3});Object.assign(k,{...t,type:11,name:"*const *const [29:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:N}],methods:[],template:null},slot:2});Object.assign(Q,{...t,type:1,name:"[14:0]u8",length:14,byteSize:15,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:f}],methods:[],template:null},slot:8});Object.assign(W,{...t,type:11,name:"*const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[],template:null},slot:7});Object.assign(I,{...t,type:11,name:"*const *const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:6});Object.assign(b,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:10});Object.assign(p,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:b}],methods:[],template:null},slot:9});Object.assign(X,{...t,type:1,name:"[16:0]u8",length:16,byteSize:17,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:f}],methods:[],template:null},slot:13});Object.assign(Y,{...t,type:11,name:"*const [16:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:12});Object.assign(v,{...t,type:11,name:"*const *const [16:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[],template:null},slot:11});Object.assign(h,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:h}],methods:[],template:null},slot:32});Object.assign(m,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:m}],methods:[],template:null},slot:48});Object.assign(r,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:m}],methods:[],template:null},slot:47});Object.assign(Z,{...t,type:1,name:"[12:0]u8",length:12,byteSize:13,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:f}],methods:[],template:null},slot:51});Object.assign(ee,{...t,type:11,name:"*const [12:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:50});Object.assign(E,{...t,type:11,name:"*const *const [12:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:49});const Ze=new Uint8Array([]),et=new Uint8Array([24,249,15,0]),tt=new Uint8Array([0,0,0,0,0,0,240,63]),st=new Uint8Array([80,249,15,0]),rt=new Uint8Array([0,0,0,0,0,0,105,64]),at=new Uint8Array([104,249,15,0]),nt=new Uint8Array([0,0,0,0,0,0,73,64]),it=new Uint8Array([120,249,15,0]),ut=new Uint8Array([100,5,16,0]),lt=new Uint8Array([72,101,120,97,103,111,110,32,83,105,122,101,0]);Object.assign(te,{...t,type:2,name:"Struct0009",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:h},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:E}],methods:[],template:{memory:{array:Ze},slots:{0:{structure:r,memory:{array:et},slots:{0:{structure:m,memory:{array:tt}}}},1:{structure:r,memory:{array:st},slots:{0:{structure:m,memory:{array:rt}}}},2:{structure:r,memory:{array:at},slots:{0:{structure:m,memory:{array:nt}}}},3:{structure:E,memory:{array:it},slots:{0:{structure:ee,memory:{array:ut},slots:{0:{structure:Z,memory:{array:lt},address:1049956}}}}}}}},slot:39});Object.assign(K,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:38});Object.assign(se,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:h}],methods:[],template:null},slot:33});const ot=new Uint8Array([]),mt=new Uint8Array([136,249,15,0]),yt=new Uint8Array([0,0,0,0,0,0,105,192]),ct=new Uint8Array([48,250,15,0]),bt=new Uint8Array([0,0,0,0,0,0,105,192]);Object.assign(re,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:ot},slots:{0:{structure:r,memory:{array:mt},slots:{0:{structure:m,memory:{array:yt}}}},1:{structure:r,memory:{array:ct},slots:{0:{structure:m,memory:{array:bt}}}}}}},slot:53});Object.assign(D,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:52});const pt=new Uint8Array([]),ft=new Uint8Array([136,249,15,0]),dt=new Uint8Array([0,0,0,0,0,0,137,64]),ht=new Uint8Array([48,250,15,0]),St=new Uint8Array([0,0,0,0,0,64,127,64]);Object.assign(ae,{...t,type:2,name:"Struct0016",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:pt},slots:{0:{structure:r,memory:{array:ft},slots:{0:{structure:m,memory:{array:dt}}}},1:{structure:r,memory:{array:ht},slots:{0:{structure:m,memory:{array:St}}}}}}},slot:55});Object.assign(F,{...t,type:11,name:"Struct0013",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:54});const gt=new Uint8Array([]),zt=new Uint8Array([136,249,15,0]),Ot=new Uint8Array([0,0,0,0,0,0,121,64]),wt=new Uint8Array([48,250,15,0]),Rt=new Uint8Array([0,0,0,0,0,64,111,64]);Object.assign(ne,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:gt},slots:{0:{structure:r,memory:{array:zt},slots:{0:{structure:m,memory:{array:Ot}}}},1:{structure:r,memory:{array:wt},slots:{0:{structure:m,memory:{array:Rt}}}}}}},slot:57});Object.assign(M,{...t,type:11,name:"Struct0014",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:56});Object.assign(ie,{...t,type:1,name:"[10:0]u8",length:10,byteSize:11,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:f}],methods:[],template:null},slot:60});Object.assign(ue,{...t,type:11,name:"*const [10:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:59});Object.assign(_,{...t,type:11,name:"*const *const [10:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:58});const qt=new Uint8Array([]),At=new Uint8Array([170,170,170,170]),c=new Uint8Array([]),Ut=new Uint8Array([170,170,170,170]),jt=new Uint8Array([170,170,170,170]),Pt=new Uint8Array([68,249,15,0]),xt=new Uint8Array([89,5,16,0]),Vt=new Uint8Array([98,97,115,101,32,112,111,105,110,116,0]);Object.assign(le,{...t,type:2,name:"Struct0010",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:se},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:D},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:F},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:M},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:_}],methods:[],template:{memory:{array:qt},slots:{0:{structure:D,memory:{array:At},slots:{0:{structure:re,memory:{array:c},address:-1431655766}}},1:{structure:F,memory:{array:Ut},slots:{0:{structure:ae,memory:{array:c},address:-1431655766}}},2:{structure:M,memory:{array:jt},slots:{0:{structure:ne,memory:{array:c},address:-1431655766}}},3:{structure:_,memory:{array:Pt},slots:{0:{structure:ue,memory:{array:xt},slots:{0:{structure:ie,memory:{array:Vt},address:1049945}}}}}}}},slot:41});Object.assign(T,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:40});const Ct=new Uint8Array([]),kt=new Uint8Array([170,170,170,170]),It=new Uint8Array([170,170,170,170]);Object.assign(oe,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"size",structure:K},{...e,type:8,isRequired:!1,slot:1,name:"base",structure:T}],methods:[],template:{memory:{array:Ct},slots:{0:{structure:K,memory:{array:kt},slots:{0:{structure:te,memory:{array:c},address:-1431655766}}},1:{structure:T,memory:{array:It},slots:{0:{structure:le,memory:{array:c},address:-1431655766}}}}}},slot:15});Object.assign($,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:14});const vt=new Uint8Array([]),Et=new Uint8Array([48,250,15,0]),Kt=new Uint8Array([4,0,0,0]);Object.assign(q,{...t,type:2,name:"Struct0011",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:vt},slots:{0:{structure:p,memory:{array:Et},slots:{0:{structure:b,memory:{array:Kt}}}}}}},slot:43});Object.assign(z,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:q}],methods:[],template:null},slot:42});const Dt=new Uint8Array([]),Ft=new Uint8Array([170,170,170,170]);Object.assign(me,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"img",structure:z}],methods:[],template:{memory:{array:Dt},slots:{0:{structure:z,memory:{array:Ft},slots:{0:{structure:q,memory:{array:c},address:-1431655766}}}}}},slot:17});Object.assign(B,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:16});const Mt=new Uint8Array([]),_t=new Uint8Array([170,170,170,170]);Object.assign(ye,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"pxl",structure:z}],methods:[],template:{memory:{array:Mt},slots:{0:{structure:z,memory:{array:_t},slots:{0:{structure:q,memory:{array:c},address:-1431655766}}}}}},slot:19});Object.assign(L,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:18});const Tt=new Uint8Array([]),$t=new Uint8Array([]),Bt=new Uint8Array([28,251,15,0]),Lt=new Uint8Array([227,8,16,0]),Gt=new Uint8Array([72,101,120,32,99,101,108,108,115,32,239,191,189,32,110,111,116,32,106,117,115,116,32,112,105,120,101,108,115,0]),Ht=new Uint8Array([92,251,15,0]),Jt=new Uint8Array([212,8,16,0]),Nt=new Uint8Array([80,101,116,114,105,32,76,101,115,107,105,110,101,110,0]),Qt=new Uint8Array([156,251,15,0]),Wt=new Uint8Array([1,0,0,0]),Xt=new Uint8Array([244,251,15,0]),Yt=new Uint8Array([195,8,16,0]),Zt=new Uint8Array([72,101,120,97,103,111,110,97,108,32,84,105,108,105,110,103,0]),es=new Uint8Array([170,170,170,170]),ts=new Uint8Array([170,170,170,170]),ss=new Uint8Array([170,170,170,170]);Object.assign(ze,{...t,type:2,name:"hex-cells.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Tt}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:k},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:I},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:p},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:v},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:$},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:B},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:L}],methods:[],template:{memory:{array:$t},slots:{0:{structure:k,memory:{array:Bt},slots:{0:{structure:N,memory:{array:Lt},slots:{0:{structure:J,memory:{array:Gt},address:1050851}}}}},1:{structure:I,memory:{array:Ht},slots:{0:{structure:W,memory:{array:Jt},slots:{0:{structure:Q,memory:{array:Nt},address:1050836}}}}},2:{structure:p,memory:{array:Qt},slots:{0:{structure:b,memory:{array:Wt}}}},3:{structure:v,memory:{array:Xt},slots:{0:{structure:Y,memory:{array:Yt},slots:{0:{structure:X,memory:{array:Zt},address:1050819}}}}},4:{structure:$,memory:{array:es},slots:{0:{structure:oe,memory:{array:c},address:-1431655766}}},5:{structure:B,memory:{array:ts},slots:{0:{structure:me,memory:{array:c},address:-1431655766}}},6:{structure:L,memory:{array:ss},slots:{0:{structure:ye,memory:{array:c},address:-1431655766}}}}}},slot:1});Object.assign(O,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:f}],methods:[],template:null},slot:24});Object.assign(ce,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:23});Object.assign(be,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:ce}],methods:[],template:null},slot:22});Object.assign(o,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:o}],methods:[],template:null},slot:25});const rs=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(pe,{...t,type:9,name:"hex-cells.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:b},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:b}],methods:[],template:{memory:{array:rs}}},slot:26});Object.assign(R,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:R}],methods:[],template:null},slot:27});Object.assign(fe,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:h}],methods:[],template:null},slot:44});const as=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ns=new Uint8Array([]),is=new Uint8Array([216,249,15,0]),us=new Uint8Array([4,0,0,0]);Object.assign(G,{...t,type:2,name:"hex-cells.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:be},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:o},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:o},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:pe},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:{memory:{array:as}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:fe},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:ns},slots:{0:{structure:p,memory:{array:is},slots:{0:{structure:b,memory:{array:us}}}}}}},slot:21});const ls=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),os=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ms=new Uint8Array([0,0,0,0,0,0,0,0]),Pe=new Uint8Array([]);Object.assign(A,{...t,type:2,name:"hex-cells.KernelInput(u8,hex-cells.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"img",structure:G}],methods:[],template:{memory:{array:ls},slots:{0:{structure:G,memory:{array:os},slots:{0:{structure:be,memory:{array:ms},slots:{0:{structure:ce,memory:{array:Pe}}}}}}}}},slot:20});Object.assign(de,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:23});Object.assign(he,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:de}],methods:[],template:null},slot:30});const ys=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),cs=new Uint8Array([]),bs=new Uint8Array([216,249,15,0]),ps=new Uint8Array([4,0,0,0]);Object.assign(H,{...t,type:2,name:"hex-cells.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:he},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:o},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:o},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:pe},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:{memory:{array:ys}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:fe},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:cs},slots:{0:{structure:p,memory:{array:bs},slots:{0:{structure:b,memory:{array:ps}}}}}}},slot:29});const fs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ds=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),hs=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(U,{...t,type:2,name:"hex-cells.KernelOutput(u8,hex-cells.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"pxl",structure:H}],methods:[],template:{memory:{array:fs},slots:{0:{structure:H,memory:{array:ds},slots:{0:{structure:he,memory:{array:hs},slots:{0:{structure:de,memory:{array:Pe}}}}}}}}},slot:28});const Ss=new Uint8Array([0,0,200,67,0,0,122,67,0,0,72,66,0,0,0,0]);Object.assign(j,{...t,type:2,name:"hex-cells.KernelParameters(hex-cells.kernel)",length:1,byteSize:16,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:64,bitSize:32,byteSize:4,slot:0,name:"size",structure:h},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,slot:1,name:"base",structure:se}],methods:[],template:{memory:{array:Ss}}},slot:31});Object.assign(Oe,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(hex-cells.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:45});Object.assign(we,{...t,type:7,name:"ErrorSet0000!hex-cells.KernelOutput(u8,hex-cells.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:U},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Oe}],methods:[],template:null},slot:36});Object.assign(Re,{...t,type:3,name:"createOutput",length:1,byteSize:80,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:0,name:"0",structure:o},{...e,type:3,bitOffset:160,bitSize:32,byteSize:4,slot:1,name:"1",structure:o},{...e,type:6,bitOffset:192,bitSize:192,byteSize:24,slot:2,name:"2",structure:A},{...e,type:6,bitOffset:0,bitSize:128,byteSize:16,slot:3,name:"3",structure:j},{...e,type:6,bitOffset:384,bitSize:224,byteSize:28,slot:4,name:"retval",structure:we}],methods:[],template:null},slot:34});Object.assign(qe,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(hex-cells.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:46});Object.assign(Ae,{...t,type:7,name:"ErrorSet0001!hex-cells.KernelOutput(u8,hex-cells.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:U},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:qe}],methods:[],template:null},slot:37});Object.assign(Ue,{...t,type:3,name:"createPartialOutput",length:1,byteSize:88,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:0,name:"0",structure:o},{...e,type:3,bitOffset:160,bitSize:32,byteSize:4,slot:1,name:"1",structure:o},{...e,type:3,bitOffset:192,bitSize:32,byteSize:4,slot:2,name:"2",structure:o},{...e,type:3,bitOffset:224,bitSize:32,byteSize:4,slot:3,name:"3",structure:o},{...e,type:6,bitOffset:256,bitSize:192,byteSize:24,slot:4,name:"4",structure:A},{...e,type:6,bitOffset:0,bitSize:128,byteSize:16,slot:5,name:"5",structure:j},{...e,type:6,bitOffset:448,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Ae}],methods:[],template:null},slot:35});const gs={argStruct:Re,thunk:1,name:"createOutput"},zs={argStruct:Ue,thunk:5,name:"createPartialOutput"};Object.assign(je,{...t,type:2,name:"hex-cells",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Pe}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:ze},{...e,type:7,isRequired:!1,name:"Input",structure:A},{...e,type:7,isRequired:!1,name:"Output",structure:U},{...e,type:7,isRequired:!1,name:"Parameters",structure:j}],methods:[gs,zs],template:null},slot:0});const Os=[f,J,N,k,Q,W,I,b,p,X,Y,v,h,m,r,Z,ee,E,te,K,se,re,D,ae,F,ne,M,ie,ue,_,le,T,oe,$,q,z,me,B,ye,L,ze,O,ce,be,o,pe,R,fe,G,A,de,he,H,U,j,Oe,we,Re,qe,Ae,Ue,je],ws=Xe(Os),Rs=je.constructor,qs=(async()=>{const i=new URL("hex-cells-82c8b2ab.wasm",import.meta.url).href;return fetch(i)})();Ye(qs,{...ws,writeBack:!0});const{createOutput:ks,createPartialOutput:As,kernel:ge,Input:Us,Output:Is,Parameters:vs}=Rs;function js(i,l,a,s,n={},S={}){if(Array.isArray(n)){const d=n;n={};for(const[y,g]of Object.keys(ge.inputImages).entries())n[g]=d[y]}const P=new Us(void 0),x=Object.keys(ge.inputImages),u=[];let w;for(const d of x){let y=n[d];if(y||(x.length===1&&["data","width","height"].every(g=>!!n[g])?y=n:u.push(d)),P[d]=y,w){if(y.colorSpace!==w)throw new Error(`Input images must all use the same color space: ${w}`)}else w=y.colorSpace}if(u.length>0)throw new Error(`Missing input image${u.length>1?"s":""}: ${u.join(", ")}`);const Se=As(i,l,a,s,P,S),xe=d=>{const y=Object.keys(d),g={};for(const Ve of y){const{data:{typedArray:V},width:Ce,height:Ie}=d[Ve];let C;if(typeof ImageData=="function"){const ve=new Uint8ClampedArray(V.buffer,V.byteOffset,V.byteLength);C=new ImageData(ve,Ce,s,{colorSpace:w})}else C={data:V,width:Ce,height:Ie};if(y.length===1)return C;g[Ve]=C}return g};return Se[Symbol.toStringTag]==="Promise"?Se.then(xe):xe(Se)}function Ps(){const i={};for(let[l,a]of Object.entries(ge)){if(l==="parameters"){const s={};for(const[n,S]of Object.entries(a)){const P=s[n]={};for(let[x,u]of Object.entries(S))typeof u=="object"?"string"in u?u=u.string:u=ke(u):typeof u=="function"&&(u=xs(u.name)),P[x]=u}a=s}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());i[l]=a}return i}function ke(i){const l=[];for(let[a,s]of Object.entries(i))typeof s=="object"&&(s=ke(s)),l[a]=s;return l}function xs(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[l,a,...s]=i.data;Vs(l,s).then(([n,S])=>{postMessage([l,a,n],{transfer:S})}).catch(n=>{postMessage(["error",a,n])})};async function Vs(i,l){switch(i){case"getKernelInfo":return[Ps(...l)];case"createPartialImageData":const s=await js(...l),n=[];if("data"in s&&"width"in s&&"height"in s)n.push(s.data.buffer);else for(const S of Object.entries(s))n.push(s.data.buffer);return[s,n];default:throw new Error(`Unknown function: ${i}`)}}
