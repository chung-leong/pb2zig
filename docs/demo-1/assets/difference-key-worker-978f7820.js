import{u as je,a as Pe,b as ke,d as Ve,c as Ie,e as Ce,f as ve,g as xe,h as Ee,i as Ke,j as De,k as Fe,l as Me,m as _e,o as Te,n as $e,p as Be,q as Le}from"./index-422d9c98.js";je();Pe();ke();Ve();Ie();Ce();ve();xe();Ee();Ke();De();Fe();Me();_e();Te();$e();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},S={},L={},G={},C={},H={},J={},v={},b={},f={},N={},Q={},x={},y={},W={},X={},E={},m={},r={},Y={},K={},Z={},D={},ee={},F={},te={},M={},w={},z={},se={},_={},re={},T={},ce={},O={},ae={},ne={},l={},ie={},q={},ue={},$={},A={},oe={},le={},B={},U={},j={},be={},fe={},pe={},de={},Se={},he={},ge={};Object.assign(S,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:5});Object.assign(L,{...t,type:1,name:"[14:0]u8",length:14,byteSize:15,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:4});Object.assign(G,{...t,type:11,name:"*const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[],template:null},slot:3});Object.assign(C,{...t,type:11,name:"*const *const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:G}],methods:[],template:null},slot:2});Object.assign(H,{...t,type:1,name:"[10:0]u8",length:10,byteSize:11,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:8});Object.assign(J,{...t,type:11,name:"*const [10:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[],template:null},slot:7});Object.assign(v,{...t,type:11,name:"*const *const [10:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:J}],methods:[],template:null},slot:6});Object.assign(b,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:10});Object.assign(f,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:b}],methods:[],template:null},slot:9});Object.assign(N,{...t,type:1,name:"[41:0]u8",length:41,byteSize:42,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:13});Object.assign(Q,{...t,type:11,name:"*const [41:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:N}],methods:[],template:null},slot:12});Object.assign(x,{...t,type:11,name:"*const *const [41:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[],template:null},slot:11});Object.assign(y,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:33});Object.assign(W,{...t,type:13,name:"@Vector(3, f32)",length:3,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:32});const Ge=new Uint8Array([]);Object.assign(X,{...t,type:2,name:"Struct0011",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:W}],methods:[],template:{memory:{array:Ge}}},slot:39});Object.assign(E,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:38});Object.assign(m,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:m}],methods:[],template:null},slot:52});Object.assign(r,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:m}],methods:[],template:null},slot:51});const He=new Uint8Array([]),Je=new Uint8Array([24,253,15,0]),Ne=new Uint8Array([0,0,0,0,0,0,0,0]),Qe=new Uint8Array([64,253,15,0]),We=new Uint8Array([0,0,0,0,0,0,8,64]),Xe=new Uint8Array([104,253,15,0]),Ye=new Uint8Array([123,20,174,71,225,122,148,63]);Object.assign(Y,{...t,type:2,name:"Struct0012",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:He},slots:{0:{structure:r,memory:{array:Je},slots:{0:{structure:m,memory:{array:Ne}}}},1:{structure:r,memory:{array:Qe},slots:{0:{structure:m,memory:{array:We}}}},2:{structure:r,memory:{array:Xe},slots:{0:{structure:m,memory:{array:Ye}}}}}}},slot:41});Object.assign(K,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[],template:null},slot:40});const Ze=new Uint8Array([]),et=new Uint8Array([24,253,15,0]),tt=new Uint8Array([0,0,0,0,0,0,0,0]),st=new Uint8Array([64,253,15,0]),rt=new Uint8Array([0,0,0,0,0,0,240,63]),at=new Uint8Array([104,253,15,0]),nt=new Uint8Array([123,20,174,71,225,122,116,63]);Object.assign(Z,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:Ze},slots:{0:{structure:r,memory:{array:et},slots:{0:{structure:m,memory:{array:tt}}}},1:{structure:r,memory:{array:st},slots:{0:{structure:m,memory:{array:rt}}}},2:{structure:r,memory:{array:at},slots:{0:{structure:m,memory:{array:nt}}}}}}},slot:43});Object.assign(D,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:42});const it=new Uint8Array([]),ut=new Uint8Array([24,253,15,0]),ot=new Uint8Array([0,0,0,0,0,0,0,0]),lt=new Uint8Array([64,253,15,0]),mt=new Uint8Array([0,0,0,0,0,0,36,64]),yt=new Uint8Array([104,253,15,0]),ct=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(ee,{...t,type:2,name:"Struct0014",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:it},slots:{0:{structure:r,memory:{array:ut},slots:{0:{structure:m,memory:{array:ot}}}},1:{structure:r,memory:{array:lt},slots:{0:{structure:m,memory:{array:mt}}}},2:{structure:r,memory:{array:yt},slots:{0:{structure:m,memory:{array:ct}}}}}}},slot:45});Object.assign(F,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:44});const bt=new Uint8Array([]),ft=new Uint8Array([170,170,170,170]),p=new Uint8Array([]),pt=new Uint8Array([170,170,170,170]),dt=new Uint8Array([170,170,170,170]),St=new Uint8Array([170,170,170,170]);Object.assign(te,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"keyColor",structure:E},{...e,type:8,isRequired:!1,slot:1,name:"tolerance",structure:K},{...e,type:8,isRequired:!1,slot:2,name:"ramp",structure:D},{...e,type:8,isRequired:!1,slot:3,name:"gamma",structure:F}],methods:[],template:{memory:{array:bt},slots:{0:{structure:E,memory:{array:ft},slots:{0:{structure:X,memory:{array:p},address:-1431655766}}},1:{structure:K,memory:{array:pt},slots:{0:{structure:Y,memory:{array:p},address:-1431655766}}},2:{structure:D,memory:{array:dt},slots:{0:{structure:Z,memory:{array:p},address:-1431655766}}},3:{structure:F,memory:{array:St},slots:{0:{structure:ee,memory:{array:p},address:-1431655766}}}}}},slot:15});Object.assign(M,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:14});const ht=new Uint8Array([]),gt=new Uint8Array([16,249,15,0]),zt=new Uint8Array([4,0,0,0]);Object.assign(w,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:ht},slots:{0:{structure:f,memory:{array:gt},slots:{0:{structure:b,memory:{array:zt}}}}}}},slot:47});Object.assign(z,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:w}],methods:[],template:null},slot:46});const Ot=new Uint8Array([]),Rt=new Uint8Array([170,170,170,170]);Object.assign(se,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:z}],methods:[],template:{memory:{array:Ot},slots:{0:{structure:z,memory:{array:Rt},slots:{0:{structure:w,memory:{array:p},address:-1431655766}}}}}},slot:17});Object.assign(_,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:16});const qt=new Uint8Array([]),wt=new Uint8Array([170,170,170,170]);Object.assign(re,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:z}],methods:[],template:{memory:{array:qt},slots:{0:{structure:z,memory:{array:wt},slots:{0:{structure:w,memory:{array:p},address:-1431655766}}}}}},slot:19});Object.assign(T,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:18});const At=new Uint8Array([]),Ut=new Uint8Array([]),jt=new Uint8Array([68,249,15,0]),Pt=new Uint8Array([124,36,16,0]),kt=new Uint8Array([99,111,109,46,113,117,97,115,105,109,111,110,100,111,0]),Vt=new Uint8Array([132,249,15,0]),It=new Uint8Array([113,36,16,0]),Ct=new Uint8Array([81,117,97,115,105,109,111,110,100,111,0]),vt=new Uint8Array([196,249,15,0]),xt=new Uint8Array([1,0,0,0]),Et=new Uint8Array([28,250,15,0]),Kt=new Uint8Array([71,36,16,0]),Dt=new Uint8Array([65,32,115,105,109,112,108,101,32,100,105,102,102,101,114,101,110,99,101,32,107,101,121,32,102,111,114,32,99,104,114,111,109,97,32,107,101,121,105,110,103,0]),Ft=new Uint8Array([170,170,170,170]),Mt=new Uint8Array([170,170,170,170]),_t=new Uint8Array([170,170,170,170]);Object.assign(ce,{...t,type:2,name:"difference-key.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:At}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:C},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:v},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:f},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:x},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:M},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:_},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:T}],methods:[],template:{memory:{array:Ut},slots:{0:{structure:C,memory:{array:jt},slots:{0:{structure:G,memory:{array:Pt},slots:{0:{structure:L,memory:{array:kt},address:1057916}}}}},1:{structure:v,memory:{array:Vt},slots:{0:{structure:J,memory:{array:It},slots:{0:{structure:H,memory:{array:Ct},address:1057905}}}}},2:{structure:f,memory:{array:vt},slots:{0:{structure:b,memory:{array:xt}}}},3:{structure:x,memory:{array:Et},slots:{0:{structure:Q,memory:{array:Kt},slots:{0:{structure:N,memory:{array:Dt},address:1057863}}}}},4:{structure:M,memory:{array:Ft},slots:{0:{structure:te,memory:{array:p},address:-1431655766}}},5:{structure:_,memory:{array:Mt},slots:{0:{structure:se,memory:{array:p},address:-1431655766}}},6:{structure:T,memory:{array:_t},slots:{0:{structure:re,memory:{array:p},address:-1431655766}}}}}},slot:1});Object.assign(O,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:24});Object.assign(ae,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:23});Object.assign(ne,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:ae}],methods:[],template:null},slot:22});Object.assign(l,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:l}],methods:[],template:null},slot:25});const Tt=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(ie,{...t,type:9,name:"difference-key.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:b},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:b}],methods:[],template:{memory:{array:Tt}}},slot:26});Object.assign(q,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:27});Object.assign(ue,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:48});const $t=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Bt=new Uint8Array([]),Lt=new Uint8Array([72,253,15,0]),Gt=new Uint8Array([4,0,0,0]);Object.assign($,{...t,type:2,name:"difference-key.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:ne},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ie},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:q}],methods:[],template:{memory:{array:$t}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:ue},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:Bt},slots:{0:{structure:f,memory:{array:Lt},slots:{0:{structure:b,memory:{array:Gt}}}}}}},slot:21});const Ht=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Jt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Nt=new Uint8Array([0,0,0,0,0,0,0,0]),ze=new Uint8Array([]);Object.assign(A,{...t,type:2,name:"difference-key.KernelInput(u8,difference-key.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:$}],methods:[],template:{memory:{array:Ht},slots:{0:{structure:$,memory:{array:Jt},slots:{0:{structure:ne,memory:{array:Nt},slots:{0:{structure:ae,memory:{array:ze}}}}}}}}},slot:20});Object.assign(oe,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:23});Object.assign(le,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:oe}],methods:[],template:null},slot:30});const Qt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Wt=new Uint8Array([]),Xt=new Uint8Array([72,253,15,0]),Yt=new Uint8Array([4,0,0,0]);Object.assign(B,{...t,type:2,name:"difference-key.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:le},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ie},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:q}],methods:[],template:{memory:{array:Qt}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:ue},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:Wt},slots:{0:{structure:f,memory:{array:Xt},slots:{0:{structure:b,memory:{array:Yt}}}}}}},slot:29});const Zt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),es=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ts=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(U,{...t,type:2,name:"difference-key.KernelOutput(u8,difference-key.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:B}],methods:[],template:{memory:{array:Zt},slots:{0:{structure:B,memory:{array:es},slots:{0:{structure:le,memory:{array:ts},slots:{0:{structure:oe,memory:{array:ze}}}}}}}}},slot:28});const ss=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,215,163,60,10,215,163,59,0,0,128,63,0,0,0,0]);Object.assign(j,{...t,type:2,name:"difference-key.KernelParameters(difference-key.kernel)",length:1,byteSize:32,align:4,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:96,byteSize:16,slot:0,name:"keyColor",structure:W},{...e,type:4,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:1,name:"tolerance",structure:y},{...e,type:4,isRequired:!1,bitOffset:160,bitSize:32,byteSize:4,slot:2,name:"ramp",structure:y},{...e,type:4,isRequired:!1,bitOffset:192,bitSize:32,byteSize:4,slot:3,name:"gamma",structure:y}],methods:[],template:{memory:{array:ss}}},slot:31});Object.assign(be,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(difference-key.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:49});Object.assign(fe,{...t,type:7,name:"ErrorSet0000!difference-key.KernelOutput(u8,difference-key.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:U},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:be}],methods:[],template:null},slot:36});Object.assign(pe,{...t,type:3,name:"createOutput",length:1,byteSize:96,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:l},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:l},{...e,type:6,bitOffset:320,bitSize:192,byteSize:24,slot:2,name:"2",structure:A},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:3,name:"3",structure:j},{...e,type:6,bitOffset:512,bitSize:224,byteSize:28,slot:4,name:"retval",structure:fe}],methods:[],template:null},slot:34});Object.assign(de,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(difference-key.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:50});Object.assign(Se,{...t,type:7,name:"ErrorSet0001!difference-key.KernelOutput(u8,difference-key.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:U},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:de}],methods:[],template:null},slot:37});Object.assign(he,{...t,type:3,name:"createPartialOutput",length:1,byteSize:112,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:l},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:l},{...e,type:3,bitOffset:320,bitSize:32,byteSize:4,slot:2,name:"2",structure:l},{...e,type:3,bitOffset:352,bitSize:32,byteSize:4,slot:3,name:"3",structure:l},{...e,type:6,bitOffset:384,bitSize:192,byteSize:24,slot:4,name:"4",structure:A},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:5,name:"5",structure:j},{...e,type:6,bitOffset:576,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Se}],methods:[],template:null},slot:35});const rs={argStruct:pe,thunk:7,name:"createOutput"},as={argStruct:he,thunk:2,name:"createPartialOutput"};Object.assign(ge,{...t,type:2,name:"difference-key",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:ze}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:ce},{...e,type:7,isRequired:!1,name:"Input",structure:A},{...e,type:7,isRequired:!1,name:"Output",structure:U},{...e,type:7,isRequired:!1,name:"Parameters",structure:j}],methods:[rs,as],template:null},slot:0});const ns=[S,L,G,C,H,J,v,b,f,N,Q,x,y,W,X,E,m,r,Y,K,Z,D,ee,F,te,M,w,z,se,_,re,T,ce,O,ae,ne,l,ie,q,ue,$,A,oe,le,B,U,j,be,fe,pe,de,Se,he,ge],is=Be(ns),us=ge.constructor,os=(async()=>{const i=new URL("difference-key-ce51aee8.wasm",import.meta.url).href;return fetch(i)})();Le(os,{...is,writeBack:!0});const{createOutput:ds,createPartialOutput:ls,kernel:ye,Input:ms,Output:Ss,Parameters:hs}=us;function ys(i,o,a,s,n={},h={}){if(Array.isArray(n)){const d=n;n={};for(const[c,g]of Object.keys(ye.inputImages).entries())n[g]=d[c]}const P=new ms(void 0),k=Object.keys(ye.inputImages),u=[];let R;for(const d of k){let c=n[d];if(c||(k.length===1&&["data","width","height"].every(g=>!!n[g])?c=n:u.push(d)),P[d]=c,R){if(c.colorSpace!==R)throw new Error(`Input images must all use the same color space: ${R}`)}else R=c.colorSpace}if(u.length>0)throw new Error(`Missing input image${u.length>1?"s":""}: ${u.join(", ")}`);const me=ls(i,o,a,s,P,h),Oe=d=>{const c=Object.keys(d),g={};for(const Re of c){const{data:{typedArray:V},width:qe,height:Ae}=d[Re];let I;if(typeof ImageData=="function"){const Ue=new Uint8ClampedArray(V.buffer,V.byteOffset,V.byteLength);I=new ImageData(Ue,qe,s,{colorSpace:R})}else I={data:V,width:qe,height:Ae};if(c.length===1)return I;g[Re]=I}return g};return me[Symbol.toStringTag]==="Promise"?me.then(Oe):Oe(me)}function cs(){const i={};for(let[o,a]of Object.entries(ye)){if(o==="parameters"){const s={};for(const[n,h]of Object.entries(a)){const P=s[n]={};for(let[k,u]of Object.entries(h))typeof u=="object"?"string"in u?u=u.string:u=we(u):typeof u=="function"&&(u=bs(u.name)),P[k]=u}a=s}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());i[o]=a}return i}function we(i){const o=[];for(let[a,s]of Object.entries(i))typeof s=="object"&&(s=we(s)),o[a]=s;return o}function bs(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[o,a,...s]=i.data;fs(o,s).then(([n,h])=>{postMessage([o,a,n],{transfer:h})}).catch(n=>{postMessage(["error",a,n])})};async function fs(i,o){switch(i){case"getKernelInfo":return[cs(...o)];case"createPartialImageData":const s=await ys(...o),n=[];if("data"in s&&"width"in s&&"height"in s)n.push(s.data.buffer);else for(const h of Object.entries(s))n.push(s.data.buffer);return[s,n];default:throw new Error(`Unknown function: ${i}`)}}
