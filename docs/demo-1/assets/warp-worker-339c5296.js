import{u as Fs,a as $s,b as Ls,c as Bs,d as Gs,e as Hs,f as Js,g as Ns,h as Qs,i as Ws,j as Xs,k as Ys,l as Zs,m as tr,n as er,o as sr,p as rr,q as nr}from"./index-270629a1.js";Fs();Ys();Zs();$s();Ls();tr();er();sr();rr();Bs();Gs();Hs();Js();nr();Ns();Qs();Ws();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},r={},l={},D={},T={},M={},_={},p={},f={},F={},$={},s={},L={},B={},S={},n={},G={},H={},J={},N={},Q={},W={},X={},Y={},Z={},tt={},et={},st={},rt={},nt={},at={},A={},ot={},it={},St={},k={},ct={},R={},u={},O={},V={},ft={},ut={},q={},mt={},I={},yt={},v={},x={},d={},jt={},zt={},w={},ht={},dt={},wt={},me={},At={},bt={},Ut={},ye={},Pt={},be={},Vt={},le={},kt={},pe={},ge={},Rt={},Oe={},qt={},Se={},fe={},It={},je={},vt={},ze={},he={},xt={},de={},Et={},we={},Ae={},Ct={},Ue={},Kt={},Dt={},Tt={},Mt={},Pe={},Ve={},_t={},Ft={},ke={},$t={},Re={},Lt={},qe={},Bt={},Ie={},ve={},Gt={},Ht={},xe={},Jt={},Ee={},Nt={},Ce={},Qt={},Ke={},De={},Wt={},Xt={},Yt={},Zt={},Te={},lt={},Me={},_e={},te={},Fe={},ee={},$e={},Le={},Be={},Ge={},He={},Je={},Ne={},Qe={},We={},Xe={},Ye={},Ze={},ts={},es={},ss={},rs={},ns={},se={},as={},os={},re={},is={},ne={},cs={},us={},ms={},ys={},bs={},ls={},ps={},ae={},gs={},Os={},Ss={},fs={},js={},zs={},hs={},ds={},ws={},As={},Us={},Ps={},Vs={},ks={},Rs={},qs={},Is={},vs={},xs={},Es={},Cs={},Ks={},ar=new Uint8Array,or=new Uint8Array,ir=new Uint8Array([0,0,0,0,0,0,240,63]),cr=new Uint8Array,ur=new Uint8Array([0,0,0,0,0,64,159,64]),mr=new Uint8Array,yr=new Uint8Array([0,0,0,0,0,160,118,64]),br=new Uint8Array([244,17,0,1]),lr=new Uint8Array([105,110,112,117,116,32,105,109,97,103,101,32,104,101,105,103,104,116,0]),pr=new Uint8Array,gr=new Uint8Array([0,0,0,0,0,0,0,0]),Or=new Uint8Array,Sr=new Uint8Array([0,0,0,0,0,0,0,0]),fr=new Uint8Array,jr=new Uint8Array([0,0,0,0,0,64,159,64]),zr=new Uint8Array,hr=new Uint8Array([0,0,0,0,0,64,159,64]),dr=new Uint8Array,wr=new Uint8Array([0,0,0,0,0,160,102,64]),Ar=new Uint8Array,Ur=new Uint8Array([0,0,0,0,0,160,102,64]),Pr=new Uint8Array,Vr=new Uint8Array,kr=new Uint8Array,Rr=new Uint8Array,qr=new Uint8Array([12,18,0,1]),Ir=new Uint8Array([104,97,108,102,32,119,105,100,116,104,32,105,109,97,103,101,32,105,110,112,117,116,32,119,105,100,116,104,47,45,104,101,105,103,104,116,0]),vr=new Uint8Array,xr=new Uint8Array,Er=new Uint8Array([45,67,28,235,226,54,26,63]),Cr=new Uint8Array,Kr=new Uint8Array([0,0,0,0,0,0,0,64]),Dr=new Uint8Array,Tr=new Uint8Array([226,88,23,183,209,0,224,63]),Mr=new Uint8Array([84,18,0,1]),_r=new Uint8Array([109,111,118,101,109,101,110,116,32,109,111,109,101,110,116,117,109,0]),Fr=new Uint8Array,$r=new Uint8Array,Lr=new Uint8Array([0,0,0,0,0,0,0,0]),Br=new Uint8Array,Gr=new Uint8Array([0,0,0,0,0,64,143,64]),Hr=new Uint8Array,Jr=new Uint8Array([0,0,0,0,0,192,114,64]),Nr=new Uint8Array([124,18,0,1]),Qr=new Uint8Array([119,114,97,112,32,101,120,112,97,110,115,105,111,110,0]),Wr=new Uint8Array,Xr=new Uint8Array,Yr=new Uint8Array,Zr=new Uint8Array,tn=new Uint8Array,en=new Uint8Array([4]),sn=new Uint8Array,rn=new Uint8Array,nn=new Uint8Array([8,16,0,1]),an=new Uint8Array([119,97,114,112,32,102,105,108,116,101,114,0]),on=new Uint8Array([31,16,0,1]),cn=new Uint8Array([102,114,97,110,107,32,114,101,105,116,98,101,114,103,101,114,0]),un=new Uint8Array,mn=new Uint8Array([1]),yn=new Uint8Array([65,16,0,1]),bn=new Uint8Array([119,97,114,112,115,32,105,109,97,103,101,32,118,105,99,101,32,118,101,114,115,97,32,97,110,100,32,98,97,99,107,0]),ln=new Uint8Array,pn=new Uint8Array,gn=new Uint8Array,On=new Uint8Array([0]),Sn=new Uint8Array([1]),Ds=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),fn=new Uint8Array,jn=new Uint8Array,zn=new Uint8Array,hn=new Uint8Array,dn=new Uint8Array([4]),oe=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ts=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),wn=new Uint8Array,An=new Uint8Array,Un=new Uint8Array,Pn=new Uint8Array,Vn=new Uint8Array([4]),ie=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),kn=new Uint8Array([0,0,53,67,0,0,53,67,0,0,181,67,142,6,0,63,0,0,150,67,0,0,0,0]),Rn=new Uint8Array([27,0]),qn=new Uint8Array([27,0]),In=new Uint8Array,vn=new Uint8Array,xn=new Uint8Array,En=new Uint8Array;Object.assign(me,{slots:{0:At,1:Ut,2:Pt,3:Vt,4:kt}});Object.assign(At,{structure:r,memory:{array:ar},const:!0,slots:{0:bt}});Object.assign(bt,{structure:S});Object.assign(Ut,{structure:s,memory:{array:or},const:!0,slots:{0:ye}});Object.assign(ye,{structure:n,memory:{array:ir},const:!0});Object.assign(Pt,{structure:s,memory:{array:cr},const:!0,slots:{0:be}});Object.assign(be,{structure:n,memory:{array:ur},const:!0});Object.assign(Vt,{structure:s,memory:{array:mr},const:!0,slots:{0:le}});Object.assign(le,{structure:n,memory:{array:yr},const:!0});Object.assign(kt,{structure:B,memory:{array:br},const:!0,slots:{0:pe}});Object.assign(pe,{structure:L,memory:{array:lr},reloc:16781812});Object.assign(ge,{slots:{0:Rt,1:qt}});Object.assign(Rt,{structure:s,memory:{array:pr},const:!0,slots:{0:Oe}});Object.assign(Oe,{structure:n,memory:{array:gr},const:!0});Object.assign(qt,{structure:s,memory:{array:Or},const:!0,slots:{0:Se}});Object.assign(Se,{structure:n,memory:{array:Sr},const:!0});Object.assign(fe,{slots:{0:It,1:vt}});Object.assign(It,{structure:s,memory:{array:fr},const:!0,slots:{0:je}});Object.assign(je,{structure:n,memory:{array:jr},const:!0});Object.assign(vt,{structure:s,memory:{array:zr},const:!0,slots:{0:ze}});Object.assign(ze,{structure:n,memory:{array:hr},const:!0});Object.assign(he,{slots:{0:xt,1:Et}});Object.assign(xt,{structure:s,memory:{array:dr},const:!0,slots:{0:de}});Object.assign(de,{structure:n,memory:{array:wr},const:!0});Object.assign(Et,{structure:s,memory:{array:Ar},const:!0,slots:{0:we}});Object.assign(we,{structure:n,memory:{array:Ur},const:!0});Object.assign(Ae,{slots:{0:Ct,1:Kt,2:Dt,3:Tt,4:Mt}});Object.assign(Ct,{structure:r,memory:{array:Pr},const:!0,slots:{0:Ue}});Object.assign(Ue,{structure:X});Object.assign(Kt,{structure:H,memory:{array:Vr},const:!0,slots:{0:Rt,1:qt}});Object.assign(Dt,{structure:J,memory:{array:kr},const:!0,slots:{0:It,1:vt}});Object.assign(Tt,{structure:N,memory:{array:Rr},const:!0,slots:{0:xt,1:Et}});Object.assign(Mt,{structure:W,memory:{array:qr},const:!0,slots:{0:Pe}});Object.assign(Pe,{structure:Q,memory:{array:Ir},reloc:16781836});Object.assign(Ve,{slots:{0:_t,1:Ft,2:$t,3:Lt,4:Bt}});Object.assign(_t,{structure:r,memory:{array:vr},const:!0,slots:{0:bt}});Object.assign(Ft,{structure:s,memory:{array:xr},const:!0,slots:{0:ke}});Object.assign(ke,{structure:n,memory:{array:Er},const:!0});Object.assign($t,{structure:s,memory:{array:Cr},const:!0,slots:{0:Re}});Object.assign(Re,{structure:n,memory:{array:Kr},const:!0});Object.assign(Lt,{structure:s,memory:{array:Dr},const:!0,slots:{0:qe}});Object.assign(qe,{structure:n,memory:{array:Tr},const:!0});Object.assign(Bt,{structure:tt,memory:{array:Mr},const:!0,slots:{0:Ie}});Object.assign(Ie,{structure:Z,memory:{array:_r},reloc:16781908});Object.assign(ve,{slots:{0:Gt,1:Ht,2:Jt,3:Nt,4:Qt}});Object.assign(Gt,{structure:r,memory:{array:Fr},const:!0,slots:{0:bt}});Object.assign(Ht,{structure:s,memory:{array:$r},const:!0,slots:{0:xe}});Object.assign(xe,{structure:n,memory:{array:Lr},const:!0});Object.assign(Jt,{structure:s,memory:{array:Br},const:!0,slots:{0:Ee}});Object.assign(Ee,{structure:n,memory:{array:Gr},const:!0});Object.assign(Nt,{structure:s,memory:{array:Hr},const:!0,slots:{0:Ce}});Object.assign(Ce,{structure:n,memory:{array:Jr},const:!0});Object.assign(Qt,{structure:rt,memory:{array:Nr},const:!0,slots:{0:Ke}});Object.assign(Ke,{structure:st,memory:{array:Qr},reloc:16781948});Object.assign(De,{slots:{0:Wt,1:Xt,2:Yt,3:Zt}});Object.assign(Wt,{structure:G,memory:{array:Wr},const:!0,slots:{0:At,1:Ut,2:Pt,3:Vt,4:kt}});Object.assign(Xt,{structure:Y,memory:{array:Xr},const:!0,slots:{0:Ct,1:Kt,2:Dt,3:Tt,4:Mt}});Object.assign(Yt,{structure:et,memory:{array:Yr},const:!0,slots:{0:_t,1:Ft,2:$t,3:Lt,4:Bt}});Object.assign(Zt,{structure:nt,memory:{array:Zr},const:!0,slots:{0:Gt,1:Ht,2:Jt,3:Nt,4:Qt}});Object.assign(Te,{slots:{0:lt}});Object.assign(lt,{structure:p,memory:{array:tn},const:!0,slots:{0:Me}});Object.assign(Me,{structure:f,memory:{array:en},const:!0});Object.assign(_e,{slots:{0:te}});Object.assign(te,{structure:A,memory:{array:sn},const:!0,slots:{0:lt}});Object.assign(Fe,{slots:{0:ee}});Object.assign(ee,{structure:A,memory:{array:rn},const:!0,slots:{0:lt}});Object.assign($e,{slots:{0:Le,1:Ge,2:Je,3:Qe,4:Xe,5:Ye,6:Ze}});Object.assign(Le,{structure:T,memory:{array:nn},const:!0,slots:{0:Be}});Object.assign(Be,{structure:D,memory:{array:an},reloc:16781320});Object.assign(Ge,{structure:_,memory:{array:on},const:!0,slots:{0:He}});Object.assign(He,{structure:M,memory:{array:cn},reloc:16781343});Object.assign(Je,{structure:p,memory:{array:un},const:!0,slots:{0:Ne}});Object.assign(Ne,{structure:f,memory:{array:mn},const:!0});Object.assign(Qe,{structure:$,memory:{array:yn},const:!0,slots:{0:We}});Object.assign(We,{structure:F,memory:{array:bn},reloc:16781377});Object.assign(Xe,{structure:at,memory:{array:ln},const:!0,slots:{0:Wt,1:Xt,2:Yt,3:Zt}});Object.assign(Ye,{structure:ot,memory:{array:pn},const:!0,slots:{0:te}});Object.assign(Ze,{structure:it,memory:{array:gn},const:!0,slots:{0:ee}});Object.assign(ts,{slots:{0:es,1:ss}});Object.assign(es,{structure:O,memory:{array:On},const:!0});Object.assign(ss,{structure:O,memory:{array:Sn},const:!0});Object.assign(rs,{memory:{array:Ds},slots:{0:ns}});Object.assign(ns,{structure:R,memory:{array:Ds,offset:0,length:8},slots:{0:se}});Object.assign(se,{structure:ct,memory:{array:fn},reloc:0});Object.assign(as,{slots:{0:os,1:is,2:cs}});Object.assign(os,{structure:r,memory:{array:jn},const:!0,slots:{0:re}});Object.assign(re,{structure:k});Object.assign(is,{structure:r,memory:{array:zn},const:!0,slots:{0:ne}});Object.assign(ne,{structure:ft});Object.assign(cs,{structure:p,memory:{array:hn},const:!0,slots:{0:us}});Object.assign(us,{structure:f,memory:{array:dn},const:!0});Object.assign(ms,{memory:{array:oe},slots:{0:ys}});Object.assign(ys,{structure:ut,memory:{array:oe},slots:{0:bs}});Object.assign(bs,{structure:R,memory:{array:oe,offset:0,length:8},slots:{0:se}});Object.assign(ls,{memory:{array:Ts},slots:{0:ps}});Object.assign(ps,{structure:I,memory:{array:Ts,offset:0,length:8},slots:{0:ae}});Object.assign(ae,{structure:mt,memory:{array:wn},reloc:0});Object.assign(gs,{slots:{0:Os,1:Ss,2:fs}});Object.assign(Os,{structure:r,memory:{array:An},const:!0,slots:{0:re}});Object.assign(Ss,{structure:r,memory:{array:Un},const:!0,slots:{0:ne}});Object.assign(fs,{structure:p,memory:{array:Pn},const:!0,slots:{0:js}});Object.assign(js,{structure:f,memory:{array:Vn},const:!0});Object.assign(zs,{memory:{array:ie},slots:{0:hs}});Object.assign(hs,{structure:yt,memory:{array:ie},slots:{0:ds}});Object.assign(ds,{structure:I,memory:{array:ie,offset:0,length:8},slots:{0:ae}});Object.assign(ws,{memory:{array:kn}});Object.assign(As,{slots:{0:Us}});Object.assign(Us,{structure:d,memory:{array:Rn},const:!0});Object.assign(Ps,{slots:{0:Vs}});Object.assign(Vs,{structure:w,memory:{array:qn},const:!0});Object.assign(ks,{slots:{0:Rs,1:Is,2:xs,3:Cs}});Object.assign(Rs,{structure:r,memory:{array:In},const:!0,slots:{0:qs}});Object.assign(qs,{structure:St});Object.assign(Is,{structure:r,memory:{array:vn},const:!0,slots:{0:vs}});Object.assign(vs,{structure:q});Object.assign(xs,{structure:r,memory:{array:xn},const:!0,slots:{0:Es}});Object.assign(Es,{structure:v});Object.assign(Cs,{structure:r,memory:{array:En},const:!0,slots:{0:Ks}});Object.assign(Ks,{structure:x});const Cn={argStruct:zt,thunkId:2,name:"createOutput"},Kn={argStruct:dt,thunkId:3,name:"createPartialOutput"};Object.assign(r,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(l,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:l}],methods:[]}});Object.assign(D,{...e,type:1,name:"[11:0]u8",length:11,byteSize:12,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:l}],methods:[]}});Object.assign(T,{...e,type:13,name:"*const [11:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:D}],methods:[]}});Object.assign(M,{...e,type:1,name:"[16:0]u8",length:16,byteSize:17,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:l}],methods:[]}});Object.assign(_,{...e,type:13,name:"*const [16:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(p,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:p}],methods:[]}});Object.assign(f,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(F,{...e,type:1,name:"[31:0]u8",length:31,byteSize:32,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:l}],methods:[]}});Object.assign($,{...e,type:13,name:"*const [31:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(s,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(L,{...e,type:1,name:"[18:0]u8",length:18,byteSize:19,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:l}],methods:[]}});Object.assign(B,{...e,type:13,name:"*const [18:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[]}});Object.assign(S,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(n,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:n}],methods:[]}});Object.assign(G,{...e,type:2,name:"Struct403185421",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:s},{...t,type:7,slot:2,name:"maxValue",structure:s},{...t,type:7,slot:3,name:"defaultValue",structure:s},{...t,type:7,slot:4,name:"description",structure:B}],methods:[],template:me}});Object.assign(H,{...e,type:2,name:"Struct738220547",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s}],methods:[],template:ge}});Object.assign(J,{...e,type:2,name:"Struct2636898688",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s}],methods:[],template:fe}});Object.assign(N,{...e,type:2,name:"Struct3582063705",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s}],methods:[],template:he}});Object.assign(Q,{...e,type:1,name:"[36:0]u8",length:36,byteSize:37,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:l}],methods:[]}});Object.assign(W,{...e,type:13,name:"*const [36:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[]}});Object.assign(X,{...e,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(Y,{...e,type:2,name:"Struct2662823505",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:H},{...t,type:7,slot:2,name:"maxValue",structure:J},{...t,type:7,slot:3,name:"defaultValue",structure:N},{...t,type:7,slot:4,name:"description",structure:W}],methods:[],template:Ae}});Object.assign(Z,{...e,type:1,name:"[17:0]u8",length:17,byteSize:18,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:l}],methods:[]}});Object.assign(tt,{...e,type:13,name:"*const [17:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[]}});Object.assign(et,{...e,type:2,name:"Struct2578653932",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:s},{...t,type:7,slot:2,name:"maxValue",structure:s},{...t,type:7,slot:3,name:"defaultValue",structure:s},{...t,type:7,slot:4,name:"description",structure:tt}],methods:[],template:Ve}});Object.assign(st,{...e,type:1,name:"[14:0]u8",length:14,byteSize:15,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:l}],methods:[]}});Object.assign(rt,{...e,type:13,name:"*const [14:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:st}],methods:[]}});Object.assign(nt,{...e,type:2,name:"Struct2211805177",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:s},{...t,type:7,slot:2,name:"maxValue",structure:s},{...t,type:7,slot:3,name:"defaultValue",structure:s},{...t,type:7,slot:4,name:"description",structure:rt}],methods:[],template:ve}});Object.assign(at,{...e,type:2,name:"Struct3015196578",align:1,instance:{members:[{...t,type:7,slot:0,name:"image_h",structure:G},{...t,type:7,slot:1,name:"center",structure:Y},{...t,type:7,slot:2,name:"tick",structure:et},{...t,type:7,slot:3,name:"spread",structure:nt}],methods:[],template:De}});Object.assign(A,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:p}],methods:[],template:Te}});Object.assign(ot,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:7,slot:0,name:"src",structure:A}],methods:[],template:_e}});Object.assign(it,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:A}],methods:[],template:Fe}});Object.assign(St,{...e,type:2,name:"warp.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:T},{...t,type:7,slot:1,name:"vendor",structure:_},{...t,type:7,slot:2,name:"version",structure:p},{...t,type:7,slot:3,name:"description",structure:$},{...t,type:7,slot:4,name:"parameters",structure:at},{...t,type:7,slot:5,name:"inputImages",structure:ot},{...t,type:7,slot:6,name:"outputImages",structure:it}],methods:[],template:$e}});Object.assign(k,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:l}],methods:[]}});Object.assign(ct,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(R,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:ct}],methods:[]}});Object.assign(u,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:u}],methods:[]}});Object.assign(O,{...e,type:11,name:"warp.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:O}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:O},{...t,type:7,slot:1,name:"display-p3",structure:O}],methods:[],template:ts}});Object.assign(V,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(ft,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(ut,{...e,type:2,name:"warp.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:R},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:rs},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:r},{...t,type:7,slot:1,name:"FPixel",structure:r},{...t,type:7,slot:2,name:"channels",structure:p}],methods:[],template:as}});Object.assign(q,{...e,type:2,name:"warp.KernelInput(u8,warp.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:ut}],methods:[],template:ms}});Object.assign(mt,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(I,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:mt}],methods:[]}});Object.assign(yt,{...e,type:2,name:"warp.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:I},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:ls},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:r},{...t,type:7,slot:1,name:"FPixel",structure:r},{...t,type:7,slot:2,name:"channels",structure:p}],methods:[],template:gs}});Object.assign(v,{...e,type:2,name:"warp.KernelOutput(u8,warp.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:yt}],methods:[],template:zs}});Object.assign(x,{...e,type:2,name:"warp.KernelParameters(warp.kernel)",byteSize:24,align:8,instance:{members:[{...t,type:4,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"image_h",structure:S},{...t,type:5,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"center",structure:X},{...t,type:4,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"tick",structure:S},{...t,type:4,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"spread",structure:S}],methods:[],template:ws}});Object.assign(d,{...e,type:10,name:"ErrorSet1988986288",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:d}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:d}],methods:[],template:As}});Object.assign(jt,{...e,type:9,name:"ErrorSet1988986288!warp.KernelOutput(u8,warp.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:d}],methods:[]}});Object.assign(zt,{...e,type:5,name:"createOutput",byteSize:88,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:192,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...t,type:3,isRequired:!0,bitOffset:224,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...t,type:5,isRequired:!0,bitOffset:256,bitSize:192,byteSize:24,slot:0,name:"2",structure:q},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:192,byteSize:24,slot:1,name:"3",structure:x},{...t,type:5,isRequired:!0,bitOffset:448,bitSize:224,byteSize:28,slot:2,name:"retval",structure:jt}],methods:[]}});Object.assign(w,{...e,type:10,name:"ErrorSet2089587705",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:w}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:w}],methods:[],template:Ps}});Object.assign(ht,{...e,type:9,name:"ErrorSet2089587705!warp.KernelOutput(u8,warp.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:w}],methods:[]}});Object.assign(dt,{...e,type:5,name:"createPartialOutput",byteSize:96,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:192,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...t,type:3,isRequired:!0,bitOffset:224,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...t,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:5,name:"2",structure:u},{...t,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:6,name:"3",structure:u},{...t,type:5,isRequired:!0,bitOffset:320,bitSize:192,byteSize:24,slot:0,name:"4",structure:q},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:192,byteSize:24,slot:1,name:"5",structure:x},{...t,type:5,isRequired:!0,bitOffset:512,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ht}],methods:[]}});Object.assign(wt,{...e,type:2,name:"warp",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:r},{...t,type:7,slot:1,name:"Input",structure:r},{...t,type:7,slot:2,name:"Output",structure:r},{...t,type:7,slot:3,name:"Parameters",structure:r}],methods:[Cn,Kn],template:ks}});const Dn=[r,l,D,T,M,_,p,f,F,$,s,L,B,S,n,G,H,J,N,Q,W,X,Y,Z,tt,et,st,rt,nt,at,A,ot,it,St,k,ct,R,u,O,V,ft,ut,q,mt,I,yt,v,x,d,jt,zt,w,ht,dt,wt],Tn=wt,Mn={runtimeSafety:!1,littleEndian:!0},pt=Xs();pt.getSpecialExports();pt.recreateStructures(Dn,Mn);const _n=(async()=>{const i=new URL("warp-42865574.wasm",import.meta.url).href;return fetch(i)})();pt.loadModule(_n);pt.linkVariables(!0);const{constructor:Fn}=Tn,{createPartialOutput:$n,Input:Ln,kernel:Ot}=Fn;function Bn(i,m,c,o,a={},j={}){const z=[];for(const[b]of Ot.inputImages)z.push(b);const U=[];for(const[b]of Ot.outputImages)U.push(b);if(Array.isArray(a)){const b=a;a={};for(const[g,h]of z.entries())a[h]=b[g]}const y=new Ln(void 0),E=[];let P;for(const b of z){let g=a[b];if(g||(z.length===1&&["data","width","height"].every(h=>!!a[h])?g=a:E.push(b)),y[b]=g,P){if(g.colorSpace!==P)throw new Error(`Input images must all use the same color space: ${P}`)}else P=g.colorSpace}if(E.length>0)throw new Error(`Missing input image${E.length>1?"s":""}: ${E.join(", ")}`);const gt=$n(i,m,c,o,y,j),ce=b=>{const g={};for(const h of U){const{data:{typedArray:C},width:ue,height:Ms}=b[h];let K;if(typeof ImageData=="function"){const _s=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);K=new ImageData(_s,ue,o,{colorSpace:P})}else K={data:C,width:ue,height:Ms};if(U.length===1)return K;g[h]=K}return g};return gt[Symbol.toStringTag]==="Promise"?gt.then(ce):ce(gt)}function Gn(){const i={};for(let[m,c]of Ot){if(m==="parameters"){const o={};for(const[a,j]of c){const z=o[a]={};for(let[U,y]of j)typeof y=="object"?y=y.string??y.valueOf():typeof y=="function"&&(y=Hn(y.name)),z[U]=y}c=o}else typeof c=="object"&&(c=c.string??c.valueOf());i[m]=c}return i}function Hn(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[m,c,...o]=i.data;Jn(m,o).then(([a,j])=>{postMessage([m,c,a],{transfer:j})}).catch(a=>{postMessage(["error",c,a])})};async function Jn(i,m){switch(i){case"getKernelInfo":return[Gn(...m)];case"createPartialImageData":const o=await Bn(...m),a=[];if("data"in o&&"width"in o&&"height"in o)a.push(o.data.buffer);else for(const j of Object.entries(o))a.push(o.data.buffer);return[o,a];default:throw new Error(`Unknown function: ${i}`)}}
