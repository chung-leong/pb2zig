import{u as Le,a as Ge,b as He,c as Je,d as Ne,e as Qe,f as We,g as Xe,h as Ye,i as Ze,j as ts,k as es,l as ss,m as rs,n as ns,o as as,p as is,q as os}from"./index-270629a1.js";Le();es();ss();Ge();He();rs();ns();as();is();Je();Ne();Qe();We();os();Xe();Ye();Ze();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},r={},f={},K={},T={},C={},D={},g={},d={},M={},$={},s={},w={},i={},B={},F={},k={},_={},L={},G={},H={},J={},N={},Q={},rt={},P={},W={},X={},V={},b={},p={},x={},Y={},I={},R={},z={},nt={},at={},h={},it={},ot={},ct={},xt={},ut={},Kt={},mt={},Tt={},yt={},Ct={},bt={},Dt={},Mt={},lt={},$t={},gt={},Bt={},pt={},Ft={},ft={},_t={},Lt={},Ot={},Z={},St={},Gt={},jt={},Ht={},zt={},Jt={},ht={},Nt={},dt={},Qt={},Wt={},wt={},At={},Xt={},Ut={},kt={},Pt={},Yt={},Vt={},Zt={},te={},It={},ee={},se={},re={},ne={},ae={},ie={},oe={},ce={},ue={},me={},ye={},be={},le={},ge={},pe={},fe={},Oe={},Rt={},Se={},je={},ze={},he={},de={},we={},Ae={},Ue={},ke={},Pe={},Ve={},Ie={},Re={},qe={},ve={},Ee={},xe={},Ke={},Te={},Ce={},De={},Me={},$e={},cs=new Uint8Array,us=new Uint8Array,ms=new Uint8Array([0,0,0,0,0,0,240,63]),ys=new Uint8Array,bs=new Uint8Array([0,0,0,0,0,192,82,64]),ls=new Uint8Array,gs=new Uint8Array([0,0,0,0,0,0,36,64]),ps=new Uint8Array,fs=new Uint8Array([0,0,0,0,0,0,0,0]),Os=new Uint8Array,Ss=new Uint8Array([0,0,0,0,0,0,240,63]),js=new Uint8Array,zs=new Uint8Array([0,0,0,0,0,0,240,63]),hs=new Uint8Array,ds=new Uint8Array([0,0,0,0,0,0,240,63]),ws=new Uint8Array,As=new Uint8Array,Us=new Uint8Array,ks=new Uint8Array([0,0,0,0,0,0,0,0]),Ps=new Uint8Array,Vs=new Uint8Array([0,0,0,0,0,0,0,0]),Is=new Uint8Array,Rs=new Uint8Array([0,0,0,0,0,0,0,0]),qs=new Uint8Array,vs=new Uint8Array([0,0,0,0,0,0,240,63]),Es=new Uint8Array,xs=new Uint8Array,Ks=new Uint8Array,Ts=new Uint8Array,Cs=new Uint8Array,Ds=new Uint8Array,Ms=new Uint8Array([4]),$s=new Uint8Array,Bs=new Uint8Array([0,5,0,1]),Fs=new Uint8Array([99,111,109,46,97,100,111,98,101,46,101,120,97,109,112,108,101,0]),_s=new Uint8Array([29,5,0,1]),Ls=new Uint8Array([65,100,111,98,101,32,83,121,115,116,101,109,115,32,73,110,99,46,0]),Gs=new Uint8Array,Hs=new Uint8Array([1]),Js=new Uint8Array([65,5,0,1]),Ns=new Uint8Array([65,32,99,104,101,99,107,101,114,101,100,32,102,105,101,108,100,32,103,101,110,101,114,97,116,111,114,0]),Qs=new Uint8Array,Ws=new Uint8Array,Xs=new Uint8Array,Ys=new Uint8Array([0]),Zs=new Uint8Array([1]),Be=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),tr=new Uint8Array,er=new Uint8Array,sr=new Uint8Array,rr=new Uint8Array,nr=new Uint8Array([4]),qt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ar=new Uint8Array([0,0,0,0,0,0,128,63,0,0,128,63,0,0,128,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,32,65,0,0,0,0,0,0,0,0,0,0,0,0]),ir=new Uint8Array([27,0]),or=new Uint8Array([27,0]),cr=new Uint8Array,ur=new Uint8Array,mr=new Uint8Array,yr=new Uint8Array;Object.assign(xt,{slots:{0:ut,1:mt,2:yt,3:bt}});Object.assign(ut,{structure:r,memory:{array:cs},const:!0,slots:{0:Kt}});Object.assign(Kt,{structure:w});Object.assign(mt,{structure:s,memory:{array:us},const:!0,slots:{0:Tt}});Object.assign(Tt,{structure:i,memory:{array:ms},const:!0});Object.assign(yt,{structure:s,memory:{array:ys},const:!0,slots:{0:Ct}});Object.assign(Ct,{structure:i,memory:{array:bs},const:!0});Object.assign(bt,{structure:s,memory:{array:ls},const:!0,slots:{0:Dt}});Object.assign(Dt,{structure:i,memory:{array:gs},const:!0});Object.assign(Mt,{slots:{0:lt,1:gt,2:pt,3:ft}});Object.assign(lt,{structure:s,memory:{array:ps},const:!0,slots:{0:$t}});Object.assign($t,{structure:i,memory:{array:fs},const:!0});Object.assign(gt,{structure:s,memory:{array:Os},const:!0,slots:{0:Bt}});Object.assign(Bt,{structure:i,memory:{array:Ss},const:!0});Object.assign(pt,{structure:s,memory:{array:js},const:!0,slots:{0:Ft}});Object.assign(Ft,{structure:i,memory:{array:zs},const:!0});Object.assign(ft,{structure:s,memory:{array:hs},const:!0,slots:{0:_t}});Object.assign(_t,{structure:i,memory:{array:ds},const:!0});Object.assign(Lt,{slots:{0:Ot,1:St}});Object.assign(Ot,{structure:r,memory:{array:ws},const:!0,slots:{0:Z}});Object.assign(Z,{structure:k});Object.assign(St,{structure:F,memory:{array:As},const:!0,slots:{0:lt,1:gt,2:pt,3:ft}});Object.assign(Gt,{slots:{0:jt,1:zt,2:ht,3:dt}});Object.assign(jt,{structure:s,memory:{array:Us},const:!0,slots:{0:Ht}});Object.assign(Ht,{structure:i,memory:{array:ks},const:!0});Object.assign(zt,{structure:s,memory:{array:Ps},const:!0,slots:{0:Jt}});Object.assign(Jt,{structure:i,memory:{array:Vs},const:!0});Object.assign(ht,{structure:s,memory:{array:Is},const:!0,slots:{0:Nt}});Object.assign(Nt,{structure:i,memory:{array:Rs},const:!0});Object.assign(dt,{structure:s,memory:{array:qs},const:!0,slots:{0:Qt}});Object.assign(Qt,{structure:i,memory:{array:vs},const:!0});Object.assign(Wt,{slots:{0:wt,1:At}});Object.assign(wt,{structure:r,memory:{array:Es},const:!0,slots:{0:Z}});Object.assign(At,{structure:L,memory:{array:xs},const:!0,slots:{0:jt,1:zt,2:ht,3:dt}});Object.assign(Xt,{slots:{0:Ut,1:kt,2:Pt}});Object.assign(Ut,{structure:B,memory:{array:Ks},const:!0,slots:{0:ut,1:mt,2:yt,3:bt}});Object.assign(kt,{structure:_,memory:{array:Ts},const:!0,slots:{0:Ot,1:St}});Object.assign(Pt,{structure:G,memory:{array:Cs},const:!0,slots:{0:wt,1:At}});Object.assign(Yt,{slots:{0:Vt}});Object.assign(Vt,{structure:g,memory:{array:Ds},const:!0,slots:{0:Zt}});Object.assign(Zt,{structure:d,memory:{array:Ms},const:!0});Object.assign(te,{slots:{0:It}});Object.assign(It,{structure:N,memory:{array:$s},const:!0,slots:{0:Vt}});Object.assign(ee,{slots:{0:se,1:ne,2:ie,3:ce,4:me,5:ye,6:be}});Object.assign(se,{structure:T,memory:{array:Bs},const:!0,slots:{0:re}});Object.assign(re,{structure:K,memory:{array:Fs},reloc:16778496});Object.assign(ne,{structure:D,memory:{array:_s},const:!0,slots:{0:ae}});Object.assign(ae,{structure:C,memory:{array:Ls},reloc:16778525});Object.assign(ie,{structure:g,memory:{array:Gs},const:!0,slots:{0:oe}});Object.assign(oe,{structure:d,memory:{array:Hs},const:!0});Object.assign(ce,{structure:$,memory:{array:Js},const:!0,slots:{0:ue}});Object.assign(ue,{structure:M,memory:{array:Ns},reloc:16778561});Object.assign(me,{structure:H,memory:{array:Qs},const:!0,slots:{0:Ut,1:kt,2:Pt}});Object.assign(ye,{structure:J,memory:{array:Ws},const:!0});Object.assign(be,{structure:Q,memory:{array:Xs},const:!0,slots:{0:It}});Object.assign(le,{slots:{0:ge,1:pe}});Object.assign(ge,{structure:p,memory:{array:Ys},const:!0});Object.assign(pe,{structure:p,memory:{array:Zs},const:!0});Object.assign(fe,{memory:{array:Be},slots:{0:Oe}});Object.assign(Oe,{structure:V,memory:{array:Be,offset:0,length:8},slots:{0:Rt}});Object.assign(Rt,{structure:X,memory:{array:tr},reloc:0});Object.assign(Se,{slots:{0:je,1:he,2:de}});Object.assign(je,{structure:r,memory:{array:er},const:!0,slots:{0:ze}});Object.assign(ze,{structure:W});Object.assign(he,{structure:r,memory:{array:sr},const:!0,slots:{0:Z}});Object.assign(de,{structure:g,memory:{array:rr},const:!0,slots:{0:we}});Object.assign(we,{structure:d,memory:{array:nr},const:!0});Object.assign(Ae,{memory:{array:qt},slots:{0:Ue}});Object.assign(Ue,{structure:Y,memory:{array:qt},slots:{0:ke}});Object.assign(ke,{structure:V,memory:{array:qt,offset:0,length:8},slots:{0:Rt}});Object.assign(Pe,{memory:{array:ar}});Object.assign(Ve,{slots:{0:Ie}});Object.assign(Ie,{structure:z,memory:{array:ir},const:!0});Object.assign(Re,{slots:{0:qe}});Object.assign(qe,{structure:h,memory:{array:or},const:!0});Object.assign(ve,{slots:{0:Ee,1:Ke,2:Ce,3:Me}});Object.assign(Ee,{structure:r,memory:{array:cr},const:!0,slots:{0:xe}});Object.assign(xe,{structure:rt});Object.assign(Ke,{structure:r,memory:{array:ur},const:!0,slots:{0:Te}});Object.assign(Te,{structure:P});Object.assign(Ce,{structure:r,memory:{array:mr},const:!0,slots:{0:De}});Object.assign(De,{structure:I});Object.assign(Me,{structure:r,memory:{array:yr},const:!0,slots:{0:$e}});Object.assign($e,{structure:R});const br={argStruct:at,thunkId:2,name:"createOutput"},lr={argStruct:ot,thunkId:3,name:"createPartialOutput"};Object.assign(r,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(f,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(K,{...e,type:1,name:"[17:0]u8",length:17,byteSize:18,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(T,{...e,type:13,name:"*const [17:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:K}],methods:[]}});Object.assign(C,{...e,type:1,name:"[18:0]u8",length:18,byteSize:19,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(D,{...e,type:13,name:"*const [18:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:C}],methods:[]}});Object.assign(g,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:g}],methods:[]}});Object.assign(d,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:d}],methods:[]}});Object.assign(M,{...e,type:1,name:"[27:0]u8",length:27,byteSize:28,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign($,{...e,type:13,name:"*const [27:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(s,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(w,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:w}],methods:[]}});Object.assign(i,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:i}],methods:[]}});Object.assign(B,{...e,type:2,name:"Struct3531062864",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:s},{...t,type:7,slot:2,name:"maxValue",structure:s},{...t,type:7,slot:3,name:"defaultValue",structure:s}],methods:[],template:xt}});Object.assign(F,{...e,type:2,name:"Struct1988309366",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s},{...t,type:7,slot:2,name:"2",structure:s},{...t,type:7,slot:3,name:"3",structure:s}],methods:[],template:Mt}});Object.assign(k,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:w}],methods:[]}});Object.assign(_,{...e,type:2,name:"Struct2979890628",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"defaultValue",structure:F}],methods:[],template:Lt}});Object.assign(L,{...e,type:2,name:"Struct2874091690",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s},{...t,type:7,slot:2,name:"2",structure:s},{...t,type:7,slot:3,name:"3",structure:s}],methods:[],template:Gt}});Object.assign(G,{...e,type:2,name:"Struct3132836412",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"defaultValue",structure:L}],methods:[],template:Wt}});Object.assign(H,{...e,type:2,name:"Struct2102669365",align:1,instance:{members:[{...t,type:7,slot:0,name:"checkerSize",structure:B},{...t,type:7,slot:1,name:"colorA",structure:_},{...t,type:7,slot:2,name:"colorB",structure:G}],methods:[],template:Xt}});Object.assign(J,{...e,type:2,name:"@TypeOf(.{})",align:1,isTuple:!0});Object.assign(N,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:g}],methods:[],template:Yt}});Object.assign(Q,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:N}],methods:[],template:te}});Object.assign(rt,{...e,type:2,name:"checker-fill.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:T},{...t,type:7,slot:1,name:"vendor",structure:D},{...t,type:7,slot:2,name:"version",structure:g},{...t,type:7,slot:3,name:"description",structure:$},{...t,type:7,slot:4,name:"parameters",structure:H},{...t,type:7,slot:5,name:"inputImages",structure:J},{...t,type:7,slot:6,name:"outputImages",structure:Q}],methods:[],template:ee}});Object.assign(P,{...e,type:2,name:"checker-fill.KernelInput(u8,checker-fill.kernel)",align:1});Object.assign(W,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(X,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:W}],methods:[]}});Object.assign(V,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:X}],methods:[]}});Object.assign(b,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[]}});Object.assign(p,{...e,type:11,name:"checker-fill.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:p}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:p},{...t,type:7,slot:1,name:"display-p3",structure:p}],methods:[],template:le}});Object.assign(x,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:x}],methods:[]}});Object.assign(Y,{...e,type:2,name:"checker-fill.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:V},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:b},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:b},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:x}],methods:[],template:fe},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:r},{...t,type:7,slot:1,name:"FPixel",structure:r},{...t,type:7,slot:2,name:"channels",structure:g}],methods:[],template:Se}});Object.assign(I,{...e,type:2,name:"checker-fill.KernelOutput(u8,checker-fill.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:Y}],methods:[],template:Ae}});Object.assign(R,{...e,type:2,name:"checker-fill.KernelParameters(checker-fill.kernel)",byteSize:48,align:16,instance:{members:[{...t,type:4,bitOffset:256,bitSize:32,byteSize:4,slot:2,name:"checkerSize",structure:w},{...t,type:5,bitOffset:0,bitSize:128,byteSize:16,slot:0,name:"colorA",structure:k},{...t,type:5,bitOffset:128,bitSize:128,byteSize:16,slot:1,name:"colorB",structure:k}],methods:[],template:Pe}});Object.assign(z,{...e,type:10,name:"ErrorSet1785462741",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:z}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:z}],methods:[],template:Ve}});Object.assign(nt,{...e,type:9,name:"ErrorSet1785462741!checker-fill.KernelOutput(u8,checker-fill.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:I},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:z}],methods:[]}});Object.assign(at,{...e,type:5,name:"createOutput",byteSize:96,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:384,bitSize:32,byteSize:4,slot:3,name:"0",structure:b},{...t,type:3,isRequired:!0,bitOffset:416,bitSize:32,byteSize:4,slot:4,name:"1",structure:b},{...t,type:5,isRequired:!0,bitOffset:672,bitSize:0,byteSize:0,slot:0,name:"2",structure:P},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:384,byteSize:48,slot:1,name:"3",structure:R},{...t,type:5,isRequired:!0,bitOffset:448,bitSize:224,byteSize:28,slot:2,name:"retval",structure:nt}],methods:[]}});Object.assign(h,{...e,type:10,name:"ErrorSet3115672964",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:h}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:h}],methods:[],template:Re}});Object.assign(it,{...e,type:9,name:"ErrorSet3115672964!checker-fill.KernelOutput(u8,checker-fill.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:I},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:h}],methods:[]}});Object.assign(ot,{...e,type:5,name:"createPartialOutput",byteSize:96,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:384,bitSize:32,byteSize:4,slot:3,name:"0",structure:b},{...t,type:3,isRequired:!0,bitOffset:416,bitSize:32,byteSize:4,slot:4,name:"1",structure:b},{...t,type:3,isRequired:!0,bitOffset:448,bitSize:32,byteSize:4,slot:5,name:"2",structure:b},{...t,type:3,isRequired:!0,bitOffset:480,bitSize:32,byteSize:4,slot:6,name:"3",structure:b},{...t,type:5,isRequired:!0,bitOffset:736,bitSize:0,byteSize:0,slot:0,name:"4",structure:P},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:384,byteSize:48,slot:1,name:"5",structure:R},{...t,type:5,isRequired:!0,bitOffset:512,bitSize:224,byteSize:28,slot:2,name:"retval",structure:it}],methods:[]}});Object.assign(ct,{...e,type:2,name:"checker-fill",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:r},{...t,type:7,slot:1,name:"Input",structure:r},{...t,type:7,slot:2,name:"Output",structure:r},{...t,type:7,slot:3,name:"Parameters",structure:r}],methods:[br,lr],template:ve}});const gr=[r,f,K,T,C,D,g,d,M,$,s,w,i,B,F,k,_,L,G,H,J,N,Q,rt,P,W,X,V,b,p,x,Y,I,R,z,nt,at,h,it,ot,ct],pr=ct,fr={runtimeSafety:!1,littleEndian:!0},tt=ts();tt.getSpecialExports();tt.recreateStructures(gr,fr);const Or=(async()=>{const o=new URL("checker-fill-33e8249d.wasm",import.meta.url).href;return fetch(o)})();tt.loadModule(Or);tt.linkVariables(!0);const{constructor:Sr}=pr,{createPartialOutput:jr,Input:zr,kernel:st}=Sr;function hr(o,u,c,a,n={},O={}){const S=[];for(const[y]of st.inputImages)S.push(y);const A=[];for(const[y]of st.outputImages)A.push(y);if(Array.isArray(n)){const y=n;n={};for(const[l,j]of S.entries())n[j]=y[l]}const m=new zr(void 0),q=[];let U;for(const y of S){let l=n[y];if(l||(S.length===1&&["data","width","height"].every(j=>!!n[j])?l=n:q.push(y)),m[y]=l,U){if(l.colorSpace!==U)throw new Error(`Input images must all use the same color space: ${U}`)}else U=l.colorSpace}if(q.length>0)throw new Error(`Missing input image${q.length>1?"s":""}: ${q.join(", ")}`);const et=jr(o,u,c,a,m,O),vt=y=>{const l={};for(const j of A){const{data:{typedArray:v},width:Et,height:Fe}=y[j];let E;if(typeof ImageData=="function"){const _e=new Uint8ClampedArray(v.buffer,v.byteOffset,v.byteLength);E=new ImageData(_e,Et,a,{colorSpace:U})}else E={data:v,width:Et,height:Fe};if(A.length===1)return E;l[j]=E}return l};return et[Symbol.toStringTag]==="Promise"?et.then(vt):vt(et)}function dr(){const o={};for(let[u,c]of st){if(u==="parameters"){const a={};for(const[n,O]of c){const S=a[n]={};for(let[A,m]of O)typeof m=="object"?m=m.string??m.valueOf():typeof m=="function"&&(m=wr(m.name)),S[A]=m}c=a}else typeof c=="object"&&(c=c.string??c.valueOf());o[u]=c}return o}function wr(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[u,c,...a]=o.data;Ar(u,a).then(([n,O])=>{postMessage([u,c,n],{transfer:O})}).catch(n=>{postMessage(["error",c,n])})};async function Ar(o,u){switch(o){case"getKernelInfo":return[dr(...u)];case"createPartialImageData":const a=await hr(...u),n=[];if("data"in a&&"width"in a&&"height"in a)n.push(a.data.buffer);else for(const O of Object.entries(a))n.push(a.data.buffer);return[a,n];default:throw new Error(`Unknown function: ${o}`)}}
