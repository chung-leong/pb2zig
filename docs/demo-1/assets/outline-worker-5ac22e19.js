import{u as Ns,a as Qs,b as Ws,c as Xs,d as Ys,e as Zs,f as tr,g as er,h as sr,i as rr,j as nr,k as ar,l as or,m as ir,n as cr,o as ur,p as mr,q as yr}from"./index-67c7daa1.js";Ns();ar();or();Qs();Ws();ir();cr();ur();mr();Xs();Ys();Zs();tr();yr();er();sr();rr();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},r={},O={},J={},N={},Q={},W={},l={},S={},X={},Y={},s={},n={},Z={},tt={},et={},st={},rt={},k={},nt={},at={},A={},f={},ot={},v={},U={},q={},it={},ct={},ut={},P={},mt={},yt={},At={},E={},bt={},x={},u={},p={},I={},lt={},C={},gt={},T={},pt={},K={},M={},h={},Ut={},Pt={},w={},Vt={},Rt={},kt={},le={},qt={},ge={},It={},pe={},Oe={},vt={},fe={},Et={},Se={},je={},xt={},ze={},Ct={},de={},he={},Tt={},we={},Kt={},Mt={},Dt={},Ft={},Ae={},Ue={},Ot={},Pe={},ft={},Ve={},St={},Re={},jt={},ke={},qe={},D={},Ie={},F={},ve={},_={},Ee={},$={},xe={},Ce={},_t={},Te={},$t={},Ke={},Lt={},Me={},Bt={},De={},Fe={},Gt={},L={},Ht={},Jt={},Nt={},Qt={},_e={},$e={},Wt={},Xt={},Yt={},Zt={},te={},Le={},Be={},ee={},se={},re={},Ge={},zt={},He={},Je={},ne={},Ne={},ae={},Qe={},We={},Xe={},Ye={},Ze={},ts={},es={},ss={},rs={},ns={},as={},os={},is={},cs={},us={},ms={},ys={},oe={},bs={},ls={},ie={},gs={},ps={},Os={},fs={},Ss={},js={},zs={},ds={},ce={},hs={},ws={},As={},Us={},Ps={},Vs={},Rs={},ks={},qs={},Is={},vs={},Es={},xs={},Cs={},Ts={},Ks={},Ms={},Ds={},Fs={},_s={},$s={},Ls={},br=new Uint8Array,lr=new Uint8Array([0,0,0,0,0,0,0,0]),gr=new Uint8Array,pr=new Uint8Array([0,0,0,0,0,0,0,0]),Or=new Uint8Array,fr=new Uint8Array([0,0,0,0,0,0,240,63]),Sr=new Uint8Array,jr=new Uint8Array([0,0,0,0,0,0,240,63]),zr=new Uint8Array,dr=new Uint8Array([154,153,153,153,153,153,185,63]),hr=new Uint8Array,wr=new Uint8Array([123,20,174,71,225,122,132,63]),Ar=new Uint8Array,Ur=new Uint8Array,Pr=new Uint8Array,Vr=new Uint8Array,Rr=new Uint8Array([164,6,0,1]),kr=new Uint8Array([49,58,109,97,120,32,100,105,102,102,101,114,101,110,99,101,32,50,58,109,105,110,32,100,105,102,102,101,114,101,110,99,101,0]),qr=new Uint8Array,Ir=new Uint8Array([0,0,0,0,0,0,0,0]),vr=new Uint8Array,Er=new Uint8Array([0,0,0,0,0,0,0,0]),xr=new Uint8Array,Cr=new Uint8Array([0,0,0,0,0,0,0,0]),Tr=new Uint8Array,Kr=new Uint8Array([0,0,0,0,0,0,0,0]),Mr=new Uint8Array,Dr=new Uint8Array([0,0,0,0,0,0,240,63]),Fr=new Uint8Array,_r=new Uint8Array([0,0,0,0,0,0,240,63]),$r=new Uint8Array,Lr=new Uint8Array([0,0,0,0,0,0,240,63]),Br=new Uint8Array,Gr=new Uint8Array([0,0,0,0,0,0,240,63]),Hr=new Uint8Array,Jr=new Uint8Array([0,0,0,0,0,0,0,0]),Nr=new Uint8Array,Qr=new Uint8Array([0,0,0,0,0,0,0,0]),Wr=new Uint8Array,Xr=new Uint8Array([0,0,0,0,0,0,0,0]),Yr=new Uint8Array,Zr=new Uint8Array([0,0,0,0,0,0,240,63]),tn=new Uint8Array,en=new Uint8Array,sn=new Uint8Array,rn=new Uint8Array,nn=new Uint8Array([204,6,0,1]),an=new Uint8Array([102,111,114,101,103,114,111,117,110,100,32,99,111,108,111,114,0]),on=new Uint8Array,cn=new Uint8Array,un=new Uint8Array,mn=new Uint8Array,yn=new Uint8Array([228,6,0,1]),bn=new Uint8Array([98,97,99,107,103,114,111,117,110,100,32,99,111,108,111,114,0]),ln=new Uint8Array,gn=new Uint8Array,pn=new Uint8Array,On=new Uint8Array,fn=new Uint8Array([4]),Sn=new Uint8Array,jn=new Uint8Array,zn=new Uint8Array([246,4,0,1]),dn=new Uint8Array([111,117,116,108,105,110,101,0]),hn=new Uint8Array([9,5,0,1]),wn=new Uint8Array([83,104,111,103,111,32,75,105,109,117,114,97,0]),An=new Uint8Array,Un=new Uint8Array([1]),Pn=new Uint8Array([112,65,0,1]),Vn=new Uint8Array([0]),Rn=new Uint8Array,kn=new Uint8Array,qn=new Uint8Array,In=new Uint8Array([0]),vn=new Uint8Array([1]),Bs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),En=new Uint8Array,xn=new Uint8Array,Cn=new Uint8Array,Tn=new Uint8Array,Kn=new Uint8Array([4]),ue=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Gs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Mn=new Uint8Array,Dn=new Uint8Array,Fn=new Uint8Array,_n=new Uint8Array,$n=new Uint8Array([4]),me=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ln=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,205,204,204,61,10,215,35,60,0,0,0,0,0,0,0,0]),Bn=new Uint8Array([27,0]),Gn=new Uint8Array([27,0]),Hn=new Uint8Array,Jn=new Uint8Array,Nn=new Uint8Array,Qn=new Uint8Array;Object.assign(le,{slots:{0:qt,1:It}});Object.assign(qt,{structure:s,memory:{array:br},const:!0,slots:{0:ge}});Object.assign(ge,{structure:n,memory:{array:lr},const:!0});Object.assign(It,{structure:s,memory:{array:gr},const:!0,slots:{0:pe}});Object.assign(pe,{structure:n,memory:{array:pr},const:!0});Object.assign(Oe,{slots:{0:vt,1:Et}});Object.assign(vt,{structure:s,memory:{array:Or},const:!0,slots:{0:fe}});Object.assign(fe,{structure:n,memory:{array:fr},const:!0});Object.assign(Et,{structure:s,memory:{array:Sr},const:!0,slots:{0:Se}});Object.assign(Se,{structure:n,memory:{array:jr},const:!0});Object.assign(je,{slots:{0:xt,1:Ct}});Object.assign(xt,{structure:s,memory:{array:zr},const:!0,slots:{0:ze}});Object.assign(ze,{structure:n,memory:{array:dr},const:!0});Object.assign(Ct,{structure:s,memory:{array:hr},const:!0,slots:{0:de}});Object.assign(de,{structure:n,memory:{array:wr},const:!0});Object.assign(he,{slots:{0:Tt,1:Kt,2:Mt,3:Dt,4:Ft}});Object.assign(Tt,{structure:r,memory:{array:Ar},const:!0,slots:{0:we}});Object.assign(we,{structure:nt});Object.assign(Kt,{structure:Z,memory:{array:Ur},const:!0,slots:{0:qt,1:It}});Object.assign(Mt,{structure:tt,memory:{array:Pr},const:!0,slots:{0:vt,1:Et}});Object.assign(Dt,{structure:et,memory:{array:Vr},const:!0,slots:{0:xt,1:Ct}});Object.assign(Ft,{structure:rt,memory:{array:Rr},const:!0,slots:{0:Ae}});Object.assign(Ae,{structure:st,memory:{array:kr},reloc:16778916});Object.assign(Ue,{slots:{0:Ot,1:ft,2:St,3:jt}});Object.assign(Ot,{structure:s,memory:{array:qr},const:!0,slots:{0:Pe}});Object.assign(Pe,{structure:n,memory:{array:Ir},const:!0});Object.assign(ft,{structure:s,memory:{array:vr},const:!0,slots:{0:Ve}});Object.assign(Ve,{structure:n,memory:{array:Er},const:!0});Object.assign(St,{structure:s,memory:{array:xr},const:!0,slots:{0:Re}});Object.assign(Re,{structure:n,memory:{array:Cr},const:!0});Object.assign(jt,{structure:s,memory:{array:Tr},const:!0,slots:{0:ke}});Object.assign(ke,{structure:n,memory:{array:Kr},const:!0});Object.assign(qe,{slots:{0:D,1:F,2:_,3:$}});Object.assign(D,{structure:s,memory:{array:Mr},const:!0,slots:{0:Ie}});Object.assign(Ie,{structure:n,memory:{array:Dr},const:!0});Object.assign(F,{structure:s,memory:{array:Fr},const:!0,slots:{0:ve}});Object.assign(ve,{structure:n,memory:{array:_r},const:!0});Object.assign(_,{structure:s,memory:{array:$r},const:!0,slots:{0:Ee}});Object.assign(Ee,{structure:n,memory:{array:Lr},const:!0});Object.assign($,{structure:s,memory:{array:Br},const:!0,slots:{0:xe}});Object.assign(xe,{structure:n,memory:{array:Gr},const:!0});Object.assign(Ce,{slots:{0:_t,1:$t,2:Lt,3:Bt}});Object.assign(_t,{structure:s,memory:{array:Hr},const:!0,slots:{0:Te}});Object.assign(Te,{structure:n,memory:{array:Jr},const:!0});Object.assign($t,{structure:s,memory:{array:Nr},const:!0,slots:{0:Ke}});Object.assign(Ke,{structure:n,memory:{array:Qr},const:!0});Object.assign(Lt,{structure:s,memory:{array:Wr},const:!0,slots:{0:Me}});Object.assign(Me,{structure:n,memory:{array:Xr},const:!0});Object.assign(Bt,{structure:s,memory:{array:Yr},const:!0,slots:{0:De}});Object.assign(De,{structure:n,memory:{array:Zr},const:!0});Object.assign(Fe,{slots:{0:Gt,1:Ht,2:Jt,3:Nt,4:Qt}});Object.assign(Gt,{structure:r,memory:{array:tn},const:!0,slots:{0:L}});Object.assign(L,{structure:q});Object.assign(Ht,{structure:A,memory:{array:en},const:!0,slots:{0:Ot,1:ft,2:St,3:jt}});Object.assign(Jt,{structure:f,memory:{array:sn},const:!0,slots:{0:D,1:F,2:_,3:$}});Object.assign(Nt,{structure:ot,memory:{array:rn},const:!0,slots:{0:_t,1:$t,2:Lt,3:Bt}});Object.assign(Qt,{structure:U,memory:{array:nn},const:!0,slots:{0:_e}});Object.assign(_e,{structure:v,memory:{array:an},reloc:16778956});Object.assign($e,{slots:{0:Wt,1:Xt,2:Yt,3:Zt,4:te}});Object.assign(Wt,{structure:r,memory:{array:on},const:!0,slots:{0:L}});Object.assign(Xt,{structure:A,memory:{array:cn},const:!0,slots:{0:Ot,1:ft,2:St,3:jt}});Object.assign(Yt,{structure:f,memory:{array:un},const:!0,slots:{0:D,1:F,2:_,3:$}});Object.assign(Zt,{structure:f,memory:{array:mn},const:!0,slots:{0:D,1:F,2:_,3:$}});Object.assign(te,{structure:U,memory:{array:yn},const:!0,slots:{0:Le}});Object.assign(Le,{structure:v,memory:{array:bn},reloc:16778980});Object.assign(Be,{slots:{0:ee,1:se,2:re}});Object.assign(ee,{structure:at,memory:{array:ln},const:!0,slots:{0:Tt,1:Kt,2:Mt,3:Dt,4:Ft}});Object.assign(se,{structure:it,memory:{array:gn},const:!0,slots:{0:Gt,1:Ht,2:Jt,3:Nt,4:Qt}});Object.assign(re,{structure:ct,memory:{array:pn},const:!0,slots:{0:Wt,1:Xt,2:Yt,3:Zt,4:te}});Object.assign(Ge,{slots:{0:zt}});Object.assign(zt,{structure:l,memory:{array:On},const:!0,slots:{0:He}});Object.assign(He,{structure:S,memory:{array:fn},const:!0});Object.assign(Je,{slots:{0:ne}});Object.assign(ne,{structure:P,memory:{array:Sn},const:!0,slots:{0:zt}});Object.assign(Ne,{slots:{0:ae}});Object.assign(ae,{structure:P,memory:{array:jn},const:!0,slots:{0:zt}});Object.assign(Qe,{slots:{0:We,1:Ye,2:ts,3:ss,4:ns,5:as,6:os}});Object.assign(We,{structure:N,memory:{array:zn},const:!0,slots:{0:Xe}});Object.assign(Xe,{structure:J,memory:{array:dn},reloc:16778486});Object.assign(Ye,{structure:W,memory:{array:hn},const:!0,slots:{0:Ze}});Object.assign(Ze,{structure:Q,memory:{array:wn},reloc:16778505});Object.assign(ts,{structure:l,memory:{array:An},const:!0,slots:{0:es}});Object.assign(es,{structure:S,memory:{array:Un},const:!0});Object.assign(ss,{structure:Y,memory:{array:Pn},const:!0,slots:{0:rs}});Object.assign(rs,{structure:X,memory:{array:Vn},reloc:16793968});Object.assign(ns,{structure:ut,memory:{array:Rn},const:!0,slots:{0:ee,1:se,2:re}});Object.assign(as,{structure:mt,memory:{array:kn},const:!0,slots:{0:ne}});Object.assign(os,{structure:yt,memory:{array:qn},const:!0,slots:{0:ae}});Object.assign(is,{slots:{0:cs,1:us}});Object.assign(cs,{structure:p,memory:{array:In},const:!0});Object.assign(us,{structure:p,memory:{array:vn},const:!0});Object.assign(ms,{memory:{array:Bs},slots:{0:ys}});Object.assign(ys,{structure:x,memory:{array:Bs,offset:0,length:8},slots:{0:oe}});Object.assign(oe,{structure:bt,memory:{array:En},reloc:0});Object.assign(bs,{slots:{0:ls,1:gs,2:ps}});Object.assign(ls,{structure:r,memory:{array:xn},const:!0,slots:{0:ie}});Object.assign(ie,{structure:E});Object.assign(gs,{structure:r,memory:{array:Cn},const:!0,slots:{0:L}});Object.assign(ps,{structure:l,memory:{array:Tn},const:!0,slots:{0:Os}});Object.assign(Os,{structure:S,memory:{array:Kn},const:!0});Object.assign(fs,{memory:{array:ue},slots:{0:Ss}});Object.assign(Ss,{structure:lt,memory:{array:ue},slots:{0:js}});Object.assign(js,{structure:x,memory:{array:ue,offset:0,length:8},slots:{0:oe}});Object.assign(zs,{memory:{array:Gs},slots:{0:ds}});Object.assign(ds,{structure:T,memory:{array:Gs,offset:0,length:8},slots:{0:ce}});Object.assign(ce,{structure:gt,memory:{array:Mn},reloc:0});Object.assign(hs,{slots:{0:ws,1:As,2:Us}});Object.assign(ws,{structure:r,memory:{array:Dn},const:!0,slots:{0:ie}});Object.assign(As,{structure:r,memory:{array:Fn},const:!0,slots:{0:L}});Object.assign(Us,{structure:l,memory:{array:_n},const:!0,slots:{0:Ps}});Object.assign(Ps,{structure:S,memory:{array:$n},const:!0});Object.assign(Vs,{memory:{array:me},slots:{0:Rs}});Object.assign(Rs,{structure:pt,memory:{array:me},slots:{0:ks}});Object.assign(ks,{structure:T,memory:{array:me,offset:0,length:8},slots:{0:ce}});Object.assign(qs,{memory:{array:Ln}});Object.assign(Is,{slots:{0:vs}});Object.assign(vs,{structure:h,memory:{array:Bn},const:!0});Object.assign(Es,{slots:{0:xs}});Object.assign(xs,{structure:w,memory:{array:Gn},const:!0});Object.assign(Cs,{slots:{0:Ts,1:Ms,2:Fs,3:$s}});Object.assign(Ts,{structure:r,memory:{array:Hn},const:!0,slots:{0:Ks}});Object.assign(Ks,{structure:At});Object.assign(Ms,{structure:r,memory:{array:Jn},const:!0,slots:{0:Ds}});Object.assign(Ds,{structure:C});Object.assign(Fs,{structure:r,memory:{array:Nn},const:!0,slots:{0:_s}});Object.assign(_s,{structure:K});Object.assign($s,{structure:r,memory:{array:Qn},const:!0,slots:{0:Ls}});Object.assign(Ls,{structure:M});const Wn={argStruct:Pt,thunkId:2,name:"createOutput"},Xn={argStruct:Rt,thunkId:3,name:"createPartialOutput"};Object.assign(r,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(O,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(J,{...e,type:1,name:"[7:0]u8",length:7,byteSize:8,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(N,{...e,type:13,name:"*const [7:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:J}],methods:[]}});Object.assign(Q,{...e,type:1,name:"[12:0]u8",length:12,byteSize:13,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(W,{...e,type:13,name:"*const [12:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[]}});Object.assign(l,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:l}],methods:[]}});Object.assign(S,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(X,{...e,type:1,name:"[0:0]u8",length:0,byteSize:1,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(Y,{...e,type:13,name:"*const [0:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[]}});Object.assign(s,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(n,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:n}],methods:[]}});Object.assign(Z,{...e,type:2,name:"Struct738220547",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s}],methods:[],template:le}});Object.assign(tt,{...e,type:2,name:"Struct2999377579",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s}],methods:[],template:Oe}});Object.assign(et,{...e,type:2,name:"Struct2341631510",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s}],methods:[],template:je}});Object.assign(st,{...e,type:1,name:"[33:0]u8",length:33,byteSize:34,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(rt,{...e,type:13,name:"*const [33:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:st}],methods:[]}});Object.assign(k,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(nt,{...e,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(at,{...e,type:2,name:"Struct385139905",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:Z},{...t,type:7,slot:2,name:"maxValue",structure:tt},{...t,type:7,slot:3,name:"defaultValue",structure:et},{...t,type:7,slot:4,name:"description",structure:rt}],methods:[],template:he}});Object.assign(A,{...e,type:2,name:"Struct142040656",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s},{...t,type:7,slot:2,name:"2",structure:s},{...t,type:7,slot:3,name:"3",structure:s}],methods:[],template:Ue}});Object.assign(f,{...e,type:2,name:"Struct2121898850",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s},{...t,type:7,slot:2,name:"2",structure:s},{...t,type:7,slot:3,name:"3",structure:s}],methods:[],template:qe}});Object.assign(ot,{...e,type:2,name:"Struct2874091690",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s},{...t,type:7,slot:2,name:"2",structure:s},{...t,type:7,slot:3,name:"3",structure:s}],methods:[],template:Ce}});Object.assign(v,{...e,type:1,name:"[16:0]u8",length:16,byteSize:17,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(U,{...e,type:13,name:"*const [16:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:v}],methods:[]}});Object.assign(q,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(it,{...e,type:2,name:"Struct2773053280",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:A},{...t,type:7,slot:2,name:"maxValue",structure:f},{...t,type:7,slot:3,name:"defaultValue",structure:ot},{...t,type:7,slot:4,name:"description",structure:U}],methods:[],template:Fe}});Object.assign(ct,{...e,type:2,name:"Struct4060765526",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:A},{...t,type:7,slot:2,name:"maxValue",structure:f},{...t,type:7,slot:3,name:"defaultValue",structure:f},{...t,type:7,slot:4,name:"description",structure:U}],methods:[],template:$e}});Object.assign(ut,{...e,type:2,name:"Struct787785590",align:1,instance:{members:[{...t,type:7,slot:0,name:"difference",structure:at},{...t,type:7,slot:1,name:"color",structure:it},{...t,type:7,slot:2,name:"bgcolor",structure:ct}],methods:[],template:Be}});Object.assign(P,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:l}],methods:[],template:Ge}});Object.assign(mt,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:7,slot:0,name:"src",structure:P}],methods:[],template:Je}});Object.assign(yt,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:P}],methods:[],template:Ne}});Object.assign(At,{...e,type:2,name:"outline.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:N},{...t,type:7,slot:1,name:"vendor",structure:W},{...t,type:7,slot:2,name:"version",structure:l},{...t,type:7,slot:3,name:"description",structure:Y},{...t,type:7,slot:4,name:"parameters",structure:ut},{...t,type:7,slot:5,name:"inputImages",structure:mt},{...t,type:7,slot:6,name:"outputImages",structure:yt}],methods:[],template:Qe}});Object.assign(E,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(bt,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:E}],methods:[]}});Object.assign(x,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:bt}],methods:[]}});Object.assign(u,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:u}],methods:[]}});Object.assign(p,{...e,type:11,name:"outline.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:p}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:p},{...t,type:7,slot:1,name:"display-p3",structure:p}],methods:[],template:is}});Object.assign(I,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(lt,{...e,type:2,name:"outline.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:x},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:I}],methods:[],template:ms},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:r},{...t,type:7,slot:1,name:"FPixel",structure:r},{...t,type:7,slot:2,name:"channels",structure:l}],methods:[],template:bs}});Object.assign(C,{...e,type:2,name:"outline.KernelInput(u8,outline.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:lt}],methods:[],template:fs}});Object.assign(gt,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:E}],methods:[]}});Object.assign(T,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:gt}],methods:[]}});Object.assign(pt,{...e,type:2,name:"outline.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:T},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:I}],methods:[],template:zs},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:r},{...t,type:7,slot:1,name:"FPixel",structure:r},{...t,type:7,slot:2,name:"channels",structure:l}],methods:[],template:hs}});Object.assign(K,{...e,type:2,name:"outline.KernelOutput(u8,outline.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:pt}],methods:[],template:Vs}});Object.assign(M,{...e,type:2,name:"outline.KernelParameters(outline.kernel)",byteSize:48,align:16,instance:{members:[{...t,type:5,bitOffset:256,bitSize:64,byteSize:8,slot:0,name:"difference",structure:nt},{...t,type:5,bitOffset:0,bitSize:128,byteSize:16,slot:1,name:"color",structure:q},{...t,type:5,bitOffset:128,bitSize:128,byteSize:16,slot:2,name:"bgcolor",structure:q}],methods:[],template:qs}});Object.assign(h,{...e,type:10,name:"ErrorSet3093882231",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:h}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:h}],methods:[],template:Is}});Object.assign(Ut,{...e,type:9,name:"ErrorSet3093882231!outline.KernelOutput(u8,outline.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:K},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:h}],methods:[]}});Object.assign(Pt,{...e,type:5,name:"createOutput",byteSize:112,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:384,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...t,type:3,isRequired:!0,bitOffset:416,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...t,type:5,isRequired:!0,bitOffset:448,bitSize:192,byteSize:24,slot:0,name:"2",structure:C},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:384,byteSize:48,slot:1,name:"3",structure:M},{...t,type:5,isRequired:!0,bitOffset:640,bitSize:224,byteSize:28,slot:2,name:"retval",structure:Ut}],methods:[]}});Object.assign(w,{...e,type:10,name:"ErrorSet805370618",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:w}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:w}],methods:[],template:Es}});Object.assign(Vt,{...e,type:9,name:"ErrorSet805370618!outline.KernelOutput(u8,outline.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:K},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:w}],methods:[]}});Object.assign(Rt,{...e,type:5,name:"createPartialOutput",byteSize:128,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:384,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...t,type:3,isRequired:!0,bitOffset:416,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...t,type:3,isRequired:!0,bitOffset:448,bitSize:32,byteSize:4,slot:5,name:"2",structure:u},{...t,type:3,isRequired:!0,bitOffset:480,bitSize:32,byteSize:4,slot:6,name:"3",structure:u},{...t,type:5,isRequired:!0,bitOffset:512,bitSize:192,byteSize:24,slot:0,name:"4",structure:C},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:384,byteSize:48,slot:1,name:"5",structure:M},{...t,type:5,isRequired:!0,bitOffset:704,bitSize:224,byteSize:28,slot:2,name:"retval",structure:Vt}],methods:[]}});Object.assign(kt,{...e,type:2,name:"outline",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:r},{...t,type:7,slot:1,name:"Input",structure:r},{...t,type:7,slot:2,name:"Output",structure:r},{...t,type:7,slot:3,name:"Parameters",structure:r}],methods:[Wn,Xn],template:Cs}});const Yn=[r,O,J,N,Q,W,l,S,X,Y,s,n,Z,tt,et,st,rt,k,nt,at,A,f,ot,v,U,q,it,ct,ut,P,mt,yt,At,E,bt,x,u,p,I,lt,C,gt,T,pt,K,M,h,Ut,Pt,w,Vt,Rt,kt],Zn=kt,ta={runtimeSafety:!1,littleEndian:!0},dt=nr();dt.getSpecialExports();dt.recreateStructures(Yn,ta);const ea=(async()=>{const i=new URL("outline-fa6c976d.wasm",import.meta.url).href;return fetch(i)})();dt.loadModule(ea);dt.linkVariables(!0);const{constructor:sa}=Zn,{createPartialOutput:ra,Input:na,kernel:wt}=sa;function aa(i,m,c,o,a={},j={}){const z=[];for(const[b]of wt.inputImages)z.push(b);const V=[];for(const[b]of wt.outputImages)V.push(b);if(Array.isArray(a)){const b=a;a={};for(const[g,d]of z.entries())a[d]=b[g]}const y=new na(void 0),B=[];let R;for(const b of z){let g=a[b];if(g||(z.length===1&&["data","width","height"].every(d=>!!a[d])?g=a:B.push(b)),y[b]=g,R){if(g.colorSpace!==R)throw new Error(`Input images must all use the same color space: ${R}`)}else R=g.colorSpace}if(B.length>0)throw new Error(`Missing input image${B.length>1?"s":""}: ${B.join(", ")}`);const ht=ra(i,m,c,o,y,j),ye=b=>{const g={};for(const d of V){const{data:{typedArray:G},width:be,height:Hs}=b[d];let H;if(typeof ImageData=="function"){const Js=new Uint8ClampedArray(G.buffer,G.byteOffset,G.byteLength);H=new ImageData(Js,be,o,{colorSpace:R})}else H={data:G,width:be,height:Hs};if(V.length===1)return H;g[d]=H}return g};return ht[Symbol.toStringTag]==="Promise"?ht.then(ye):ye(ht)}function oa(){const i={};for(let[m,c]of wt){if(m==="parameters"){const o={};for(const[a,j]of c){const z=o[a]={};for(let[V,y]of j)typeof y=="object"?y=y.string??y.valueOf():typeof y=="function"&&(y=ia(y.name)),z[V]=y}c=o}else typeof c=="object"&&(c=c.string??c.valueOf());i[m]=c}return i}function ia(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=async i=>{if(!Array.isArray(i.data))return;const[m,c,...o]=i.data;try{const[a,j]=await ca(m,o);postMessage([m,c,a],{transfer:j})}catch(a){postMessage(["error",c,a])}};async function ca(i,m){switch(i){case"getKernelInfo":return[oa(...m)];case"createPartialImageData":const o=await aa(...m),a=[];if("data"in o&&"width"in o&&"height"in o)a.push(o.data.buffer);else for(const j of Object.entries(o))a.push(o.data.buffer);return[o,a];default:throw new Error(`Unknown function: ${i}`)}}postMessage("ready");
