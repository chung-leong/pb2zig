import{u as Qe,a as We,b as Xe,c as Ye,d as Ze,e as ts,f as es,g as ss,h as rs,i as ns,j as as,k as is,l as os,m as cs,n as us,o as ms,p as ys,q as bs}from"./index-33238b17.js";Qe();is();os();We();Xe();cs();us();ms();ys();Ye();Ze();ts();es();bs();ss();rs();ns();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},w={},D={},F={},T={},_={},l={},O={},r={},p={},u={},A={},$={},L={},B={},U={},G={},H={},it={},k={},J={},q={},c={},f={},R={},ot={},N={},I={},Q={},v={},W={},E={},x={},h={},ct={},ut={},d={},mt={},yt={},bt={},Kt={},X={},Y={},Z={},Ct={},tt={},Mt={},et={},Dt={},Ft={},lt={},gt={},Tt={},pt={},_t={},ft={},$t={},Lt={},Ot={},St={},Bt={},zt={},Gt={},jt={},Ht={},Jt={},ht={},dt={},wt={},At={},Nt={},st={},Qt={},Wt={},Ut={},Xt={},Vt={},Yt={},Zt={},te={},ee={},se={},re={},ne={},ae={},ie={},oe={},ce={},ue={},me={},ye={},be={},Pt={},le={},ge={},Rt={},pe={},kt={},fe={},Oe={},Se={},ze={},je={},he={},de={},qt={},we={},Ae={},Ue={},Ve={},Pe={},Re={},ke={},qe={},Ie={},ve={},Ee={},xe={},Ke={},Ce={},Me={},De={},Fe={},Te={},_e={},$e={},Le={},Be={},ls=new Uint8Array,gs=new Uint8Array,ps=new Uint8Array([0,0,0,0,0,0,0,0]),fs=new Uint8Array,Os=new Uint8Array([0,0,0,0,0,0,240,63]),Ss=new Uint8Array,zs=new Uint8Array([0,0,0,0,0,0,0,0]),js=new Uint8Array,hs=new Uint8Array,ds=new Uint8Array([0,0,0,0,0,0,0,0]),ws=new Uint8Array,As=new Uint8Array([0,0,0,0,0,0,36,64]),Us=new Uint8Array,Vs=new Uint8Array([0,0,0,0,0,0,240,63]),Ps=new Uint8Array,Rs=new Uint8Array,ks=new Uint8Array([0,0,0,0,0,0,0,0]),qs=new Uint8Array,Is=new Uint8Array([0,0,0,0,0,0,52,64]),vs=new Uint8Array,Es=new Uint8Array([0,0,0,0,0,0,240,63]),xs=new Uint8Array,Ks=new Uint8Array,Cs=new Uint8Array,Ms=new Uint8Array,Ds=new Uint8Array,Fs=new Uint8Array([4]),Ts=new Uint8Array,_s=new Uint8Array,$s=new Uint8Array([250,4,0,1]),Ls=new Uint8Array([99,111,109,46,113,117,97,115,105,109,111,110,100,111,0]),Bs=new Uint8Array([20,5,0,1]),Gs=new Uint8Array([77,97,114,105,111,32,75,108,105,110,103,101,109,97,110,110,0]),Hs=new Uint8Array,Js=new Uint8Array([1]),Ns=new Uint8Array,Qs=new Uint8Array,Ws=new Uint8Array,Xs=new Uint8Array([0]),Ys=new Uint8Array([1]),Ge=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Zs=new Uint8Array,tr=new Uint8Array,er=new Uint8Array,sr=new Uint8Array,rr=new Uint8Array([4]),It=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),He=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),nr=new Uint8Array,ar=new Uint8Array,ir=new Uint8Array,or=new Uint8Array,cr=new Uint8Array([4]),vt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ur=new Uint8Array([0,0,0,0,0,0,128,63,0,0,128,63,0,0,0,0]),mr=new Uint8Array([27,0]),yr=new Uint8Array([27,0]),br=new Uint8Array,lr=new Uint8Array,gr=new Uint8Array,pr=new Uint8Array;Object.assign(Kt,{slots:{0:X,1:Z,2:tt,3:et}});Object.assign(X,{structure:s,memory:{array:ls},const:!0,slots:{0:Y}});Object.assign(Y,{structure:p});Object.assign(Z,{structure:r,memory:{array:gs},const:!0,slots:{0:Ct}});Object.assign(Ct,{structure:u,memory:{array:ps},const:!0});Object.assign(tt,{structure:r,memory:{array:fs},const:!0,slots:{0:Mt}});Object.assign(Mt,{structure:u,memory:{array:Os},const:!0});Object.assign(et,{structure:r,memory:{array:Ss},const:!0,slots:{0:Dt}});Object.assign(Dt,{structure:u,memory:{array:zs},const:!0});Object.assign(Ft,{slots:{0:lt,1:gt,2:pt,3:ft}});Object.assign(lt,{structure:s,memory:{array:js},const:!0,slots:{0:Y}});Object.assign(gt,{structure:r,memory:{array:hs},const:!0,slots:{0:Tt}});Object.assign(Tt,{structure:u,memory:{array:ds},const:!0});Object.assign(pt,{structure:r,memory:{array:ws},const:!0,slots:{0:_t}});Object.assign(_t,{structure:u,memory:{array:As},const:!0});Object.assign(ft,{structure:r,memory:{array:Us},const:!0,slots:{0:$t}});Object.assign($t,{structure:u,memory:{array:Vs},const:!0});Object.assign(Lt,{slots:{0:Ot,1:St,2:zt,3:jt}});Object.assign(Ot,{structure:s,memory:{array:Ps},const:!0,slots:{0:Y}});Object.assign(St,{structure:r,memory:{array:Rs},const:!0,slots:{0:Bt}});Object.assign(Bt,{structure:u,memory:{array:ks},const:!0});Object.assign(zt,{structure:r,memory:{array:qs},const:!0,slots:{0:Gt}});Object.assign(Gt,{structure:u,memory:{array:Is},const:!0});Object.assign(jt,{structure:r,memory:{array:vs},const:!0,slots:{0:Ht}});Object.assign(Ht,{structure:u,memory:{array:Es},const:!0});Object.assign(Jt,{slots:{0:ht,1:dt,2:wt,3:At}});Object.assign(ht,{structure:A,memory:{array:xs},const:!0,slots:{0:X,1:Z,2:tt,3:et}});Object.assign(dt,{structure:$,memory:{array:Ks},const:!0,slots:{0:lt,1:gt,2:pt,3:ft}});Object.assign(wt,{structure:L,memory:{array:Cs},const:!0,slots:{0:Ot,1:St,2:zt,3:jt}});Object.assign(At,{structure:A,memory:{array:Ms},const:!0,slots:{0:X,1:Z,2:tt,3:et}});Object.assign(Nt,{slots:{0:st}});Object.assign(st,{structure:l,memory:{array:Ds},const:!0,slots:{0:Qt}});Object.assign(Qt,{structure:O,memory:{array:Fs},const:!0});Object.assign(Wt,{slots:{0:Ut}});Object.assign(Ut,{structure:U,memory:{array:Ts},const:!0,slots:{0:st}});Object.assign(Xt,{slots:{0:Vt}});Object.assign(Vt,{structure:U,memory:{array:_s},const:!0,slots:{0:st}});Object.assign(Yt,{slots:{0:Zt,1:ee,2:re,3:ae,4:ie,5:oe}});Object.assign(Zt,{structure:F,memory:{array:$s},const:!0,slots:{0:te}});Object.assign(te,{structure:D,memory:{array:Ls},reloc:16778490});Object.assign(ee,{structure:_,memory:{array:Bs},const:!0,slots:{0:se}});Object.assign(se,{structure:T,memory:{array:Gs},reloc:16778516});Object.assign(re,{structure:l,memory:{array:Hs},const:!0,slots:{0:ne}});Object.assign(ne,{structure:O,memory:{array:Js},const:!0});Object.assign(ae,{structure:B,memory:{array:Ns},const:!0,slots:{0:ht,1:dt,2:wt,3:At}});Object.assign(ie,{structure:G,memory:{array:Qs},const:!0,slots:{0:Ut}});Object.assign(oe,{structure:H,memory:{array:Ws},const:!0,slots:{0:Vt}});Object.assign(ce,{slots:{0:ue,1:me}});Object.assign(ue,{structure:f,memory:{array:Xs},const:!0});Object.assign(me,{structure:f,memory:{array:Ys},const:!0});Object.assign(ye,{memory:{array:Ge},slots:{0:be}});Object.assign(be,{structure:q,memory:{array:Ge,offset:0,length:8},slots:{0:Pt}});Object.assign(Pt,{structure:J,memory:{array:Zs},reloc:0});Object.assign(le,{slots:{0:ge,1:pe,2:fe}});Object.assign(ge,{structure:s,memory:{array:tr},const:!0,slots:{0:Rt}});Object.assign(Rt,{structure:k});Object.assign(pe,{structure:s,memory:{array:er},const:!0,slots:{0:kt}});Object.assign(kt,{structure:ot});Object.assign(fe,{structure:l,memory:{array:sr},const:!0,slots:{0:Oe}});Object.assign(Oe,{structure:O,memory:{array:rr},const:!0});Object.assign(Se,{memory:{array:It},slots:{0:ze}});Object.assign(ze,{structure:N,memory:{array:It},slots:{0:je}});Object.assign(je,{structure:q,memory:{array:It,offset:0,length:8},slots:{0:Pt}});Object.assign(he,{memory:{array:He},slots:{0:de}});Object.assign(de,{structure:v,memory:{array:He,offset:0,length:8},slots:{0:qt}});Object.assign(qt,{structure:Q,memory:{array:nr},reloc:0});Object.assign(we,{slots:{0:Ae,1:Ue,2:Ve}});Object.assign(Ae,{structure:s,memory:{array:ar},const:!0,slots:{0:Rt}});Object.assign(Ue,{structure:s,memory:{array:ir},const:!0,slots:{0:kt}});Object.assign(Ve,{structure:l,memory:{array:or},const:!0,slots:{0:Pe}});Object.assign(Pe,{structure:O,memory:{array:cr},const:!0});Object.assign(Re,{memory:{array:vt},slots:{0:ke}});Object.assign(ke,{structure:W,memory:{array:vt},slots:{0:qe}});Object.assign(qe,{structure:v,memory:{array:vt,offset:0,length:8},slots:{0:qt}});Object.assign(Ie,{memory:{array:ur}});Object.assign(ve,{slots:{0:Ee}});Object.assign(Ee,{structure:h,memory:{array:mr},const:!0});Object.assign(xe,{slots:{0:Ke}});Object.assign(Ke,{structure:d,memory:{array:yr},const:!0});Object.assign(Ce,{slots:{0:Me,1:Fe,2:_e,3:Le}});Object.assign(Me,{structure:s,memory:{array:br},const:!0,slots:{0:De}});Object.assign(De,{structure:it});Object.assign(Fe,{structure:s,memory:{array:lr},const:!0,slots:{0:Te}});Object.assign(Te,{structure:I});Object.assign(_e,{structure:s,memory:{array:gr},const:!0,slots:{0:$e}});Object.assign($e,{structure:E});Object.assign(Le,{structure:s,memory:{array:pr},const:!0,slots:{0:Be}});Object.assign(Be,{structure:x});const fr={argStruct:ut,thunkId:2,name:"createOutput"},Or={argStruct:yt,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(w,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:w}],methods:[]}});Object.assign(D,{...e,type:1,name:"[14:0]u8",length:14,byteSize:15,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:w}],methods:[]}});Object.assign(F,{...e,type:13,name:"*const [14:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:D}],methods:[]}});Object.assign(T,{...e,type:1,name:"[16:0]u8",length:16,byteSize:17,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:w}],methods:[]}});Object.assign(_,{...e,type:13,name:"*const [16:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[]}});Object.assign(l,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:l}],methods:[]}});Object.assign(O,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(r,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(p,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[]}});Object.assign(u,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:u}],methods:[]}});Object.assign(A,{...e,type:2,name:"Struct2890073165",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:r},{...t,type:7,slot:2,name:"maxValue",structure:r},{...t,type:7,slot:3,name:"defaultValue",structure:r}],methods:[],template:Kt}});Object.assign($,{...e,type:2,name:"Struct2255363975",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:r},{...t,type:7,slot:2,name:"maxValue",structure:r},{...t,type:7,slot:3,name:"defaultValue",structure:r}],methods:[],template:Ft}});Object.assign(L,{...e,type:2,name:"Struct1335891619",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:r},{...t,type:7,slot:2,name:"maxValue",structure:r},{...t,type:7,slot:3,name:"defaultValue",structure:r}],methods:[],template:Lt}});Object.assign(B,{...e,type:2,name:"Struct3791586666",align:1,instance:{members:[{...t,type:7,slot:0,name:"threshold",structure:A},{...t,type:7,slot:1,name:"factor",structure:$},{...t,type:7,slot:2,name:"gamma",structure:L},{...t,type:7,slot:3,name:"invert",structure:A}],methods:[],template:Jt}});Object.assign(U,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:l}],methods:[],template:Nt}});Object.assign(G,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:7,slot:0,name:"src",structure:U}],methods:[],template:Wt}});Object.assign(H,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:U}],methods:[],template:Xt}});Object.assign(it,{...e,type:2,name:"frei-chen.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:F},{...t,type:7,slot:1,name:"vendor",structure:_},{...t,type:7,slot:2,name:"version",structure:l},{...t,type:7,slot:3,name:"parameters",structure:B},{...t,type:7,slot:4,name:"inputImages",structure:G},{...t,type:7,slot:5,name:"outputImages",structure:H}],methods:[],template:Yt}});Object.assign(k,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:w}],methods:[]}});Object.assign(J,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(q,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:J}],methods:[]}});Object.assign(c,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[]}});Object.assign(f,{...e,type:11,name:"frei-chen.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:f}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:f},{...t,type:7,slot:1,name:"display-p3",structure:f}],methods:[],template:ce}});Object.assign(R,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(ot,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:p}],methods:[]}});Object.assign(N,{...e,type:2,name:"frei-chen.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:q},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:f},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:ye},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:l}],methods:[],template:le}});Object.assign(I,{...e,type:2,name:"frei-chen.KernelInput(u8,frei-chen.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:N}],methods:[],template:Se}});Object.assign(Q,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(v,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:Q}],methods:[]}});Object.assign(W,{...e,type:2,name:"frei-chen.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:v},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:f},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:he},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:l}],methods:[],template:we}});Object.assign(E,{...e,type:2,name:"frei-chen.KernelOutput(u8,frei-chen.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:W}],methods:[],template:Re}});Object.assign(x,{...e,type:2,name:"frei-chen.KernelParameters(frei-chen.kernel)",byteSize:16,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"threshold",structure:p},{...t,type:4,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"factor",structure:p},{...t,type:4,bitOffset:64,bitSize:32,byteSize:4,slot:2,name:"gamma",structure:p},{...t,type:4,bitOffset:96,bitSize:32,byteSize:4,slot:3,name:"invert",structure:p}],methods:[],template:Ie}});Object.assign(h,{...e,type:10,name:"ErrorSet119899532",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:h}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:h}],methods:[],template:ve}});Object.assign(ct,{...e,type:9,name:"ErrorSet119899532!frei-chen.KernelOutput(u8,frei-chen.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:E},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:h}],methods:[]}});Object.assign(ut,{...e,type:5,name:"createOutput",byteSize:76,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:c},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:c},{...t,type:5,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:I},{...t,type:5,isRequired:!0,bitOffset:256,bitSize:128,byteSize:16,slot:1,name:"3",structure:x},{...t,type:5,isRequired:!0,bitOffset:384,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ct}],methods:[]}});Object.assign(d,{...e,type:10,name:"ErrorSet3595692400",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:d}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:d}],methods:[],template:xe}});Object.assign(mt,{...e,type:9,name:"ErrorSet3595692400!frei-chen.KernelOutput(u8,frei-chen.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:E},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:d}],methods:[]}});Object.assign(yt,{...e,type:5,name:"createPartialOutput",byteSize:84,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:c},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:c},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:c},{...t,type:5,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:I},{...t,type:5,isRequired:!0,bitOffset:320,bitSize:128,byteSize:16,slot:1,name:"5",structure:x},{...t,type:5,isRequired:!0,bitOffset:448,bitSize:224,byteSize:28,slot:2,name:"retval",structure:mt}],methods:[]}});Object.assign(bt,{...e,type:2,name:"frei-chen",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:s},{...t,type:7,slot:1,name:"Input",structure:s},{...t,type:7,slot:2,name:"Output",structure:s},{...t,type:7,slot:3,name:"Parameters",structure:s}],methods:[fr,Or],template:Ce}});const Sr=[s,w,D,F,T,_,l,O,r,p,u,A,$,L,B,U,G,H,it,k,J,q,c,f,R,ot,N,I,Q,v,W,E,x,h,ct,ut,d,mt,yt,bt],zr=bt,jr={runtimeSafety:!1,littleEndian:!0},rt=as();rt.getSpecialExports();rt.recreateStructures(Sr,jr);const hr=(async()=>{const i=new URL("frei-chen-32bd7db7.wasm",import.meta.url).href;return fetch(i)})();rt.loadModule(hr);rt.linkVariables(!0);const{constructor:dr}=zr,{createPartialOutput:wr,Input:Ar,kernel:at}=dr;function Ur(i,m,o,a,n={},S={}){const z=[];for(const[b]of at.inputImages)z.push(b);const V=[];for(const[b]of at.outputImages)V.push(b);if(Array.isArray(n)){const b=n;n={};for(const[g,j]of z.entries())n[j]=b[g]}const y=new Ar(void 0),K=[];let P;for(const b of z){let g=n[b];if(g||(z.length===1&&["data","width","height"].every(j=>!!n[j])?g=n:K.push(b)),y[b]=g,P){if(g.colorSpace!==P)throw new Error(`Input images must all use the same color space: ${P}`)}else P=g.colorSpace}if(K.length>0)throw new Error(`Missing input image${K.length>1?"s":""}: ${K.join(", ")}`);const nt=wr(i,m,o,a,y,S),Et=b=>{const g={};for(const j of V){const{data:{typedArray:C},width:xt,height:Je}=b[j];let M;if(typeof ImageData=="function"){const Ne=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);M=new ImageData(Ne,xt,a,{colorSpace:P})}else M={data:C,width:xt,height:Je};if(V.length===1)return M;g[j]=M}return g};return nt[Symbol.toStringTag]==="Promise"?nt.then(Et):Et(nt)}function Vr(){const i={};for(let[m,o]of at){if(m==="parameters"){const a={};for(const[n,S]of o){const z=a[n]={};for(let[V,y]of S)typeof y=="object"?y=y.string??y.valueOf():typeof y=="function"&&(y=Pr(y.name)),z[V]=y}o=a}else typeof o=="object"&&(o=o.string??o.valueOf());i[m]=o}return i}function Pr(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=async i=>{if(!Array.isArray(i.data))return;const[m,o,...a]=i.data;try{const[n,S]=await Rr(m,a);postMessage([m,o,n],{transfer:S})}catch(n){postMessage(["error",o,n])}};async function Rr(i,m){switch(i){case"getKernelInfo":return[Vr(...m)];case"createPartialImageData":const a=await Ur(...m),n=[];if("data"in a&&"width"in a&&"height"in a)n.push(a.data.buffer);else for(const S of Object.entries(a))n.push(a.data.buffer);return[a,n];default:throw new Error(`Unknown function: ${i}`)}}postMessage("ready");
