import{u as Lt,a as Gt,b as Ht,c as Jt,d as Nt,e as Qt,f as Wt,g as Xt,h as Yt,i as Zt,j as es,k as ts,l as ss,m as rs,n as as,p as ns,o as is,q as os,r as cs,s as us}from"./index-25a52593.js";Lt();es();ts();Gt();Ht();ss();rs();as();ns();Jt();Nt();Qt();Wt();is();us();Xt();os();Yt();Zt();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},e={type:0,isRequired:!1},r={},f={},K={},C={},D={},_={},p={},z={},M={},F={},s={},h={},u={},T={},$={},A={},B={},L={},G={},H={},J={},N={},Q={},re={},k={},W={},X={},P={},b={},g={},E={},Y={},I={},V={},U={},ae={},ne={},x={},ie={},oe={},ce={},Ke={},ue={},Ce={},me={},De={},ye={},_e={},be={},Me={},Fe={},le={},Te={},pe={},$e={},ge={},Be={},fe={},Le={},Ge={},Oe={},Z={},Se={},He={},je={},Je={},ze={},Ne={},he={},Qe={},de={},We={},Xe={},we={},Ae={},Ye={},Ue={},ke={},Pe={},Ze={},Ie={},et={},tt={},Ve={},st={},rt={},at={},nt={},it={},ot={},ct={},ut={},mt={},yt={},bt={},lt={},pt={},gt={},ft={},Ot={},St={},Re={},jt={},zt={},ht={},dt={},wt={},At={},Ut={},kt={},Pt={},It={},Vt={},qe={},Rt={},qt={},vt={},Et={},xt={},Kt={},Ct={},Dt={},_t={},Mt={},ms=new Uint8Array,ys=new Uint8Array,bs=new Uint8Array([0,0,0,0,0,0,240,63]),ls=new Uint8Array,ps=new Uint8Array([0,0,0,0,0,192,82,64]),gs=new Uint8Array,fs=new Uint8Array([0,0,0,0,0,0,36,64]),Os=new Uint8Array,Ss=new Uint8Array([0,0,0,0,0,0,0,0]),js=new Uint8Array,zs=new Uint8Array([0,0,0,0,0,0,240,63]),hs=new Uint8Array,ds=new Uint8Array([0,0,0,0,0,0,240,63]),ws=new Uint8Array,As=new Uint8Array([0,0,0,0,0,0,240,63]),Us=new Uint8Array,ks=new Uint8Array,Ps=new Uint8Array,Is=new Uint8Array([0,0,0,0,0,0,0,0]),Vs=new Uint8Array,Rs=new Uint8Array([0,0,0,0,0,0,0,0]),qs=new Uint8Array,vs=new Uint8Array([0,0,0,0,0,0,0,0]),Es=new Uint8Array,xs=new Uint8Array([0,0,0,0,0,0,240,63]),Ks=new Uint8Array,Cs=new Uint8Array,Ds=new Uint8Array,_s=new Uint8Array,Ms=new Uint8Array,Fs=new Uint8Array,Ts=new Uint8Array([4]),$s=new Uint8Array,Bs=new Uint8Array([248,4,0,1]),Ls=new Uint8Array([99,111,109,46,97,100,111,98,101,46,101,120,97,109,112,108,101,0]),Gs=new Uint8Array([21,5,0,1]),Hs=new Uint8Array([65,100,111,98,101,32,83,121,115,116,101,109,115,32,73,110,99,46,0]),Js=new Uint8Array,Ns=new Uint8Array([1]),Qs=new Uint8Array([57,5,0,1]),Ws=new Uint8Array([65,32,99,104,101,99,107,101,114,101,100,32,102,105,101,108,100,32,103,101,110,101,114,97,116,111,114,0]),Xs=new Uint8Array,Ys=new Uint8Array,Zs=new Uint8Array,er=new Uint8Array([0]),tr=new Uint8Array([1]),Ft=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),sr=new Uint8Array,rr=new Uint8Array,ar=new Uint8Array,nr=new Uint8Array,ir=new Uint8Array([4]),ve=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),or=new Uint8Array([0,0,0,0,0,0,128,63,0,0,128,63,0,0,128,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,32,65,0,0,0,0,0,0,0,0,0,0,0,0]),cr=new Uint8Array([27,0]),ur=new Uint8Array,mr=new Uint8Array,yr=new Uint8Array,br=new Uint8Array;Object.assign(Ke,{slots:{0:ue,1:me,2:ye,3:be}});Object.assign(ue,{structure:r,memory:{array:ms},slots:{0:Ce}});Object.assign(Ce,{structure:h});Object.assign(me,{structure:s,memory:{array:ys},slots:{0:De}});Object.assign(De,{structure:u,memory:{array:bs}});Object.assign(ye,{structure:s,memory:{array:ls},slots:{0:_e}});Object.assign(_e,{structure:u,memory:{array:ps}});Object.assign(be,{structure:s,memory:{array:gs},slots:{0:Me}});Object.assign(Me,{structure:u,memory:{array:fs}});Object.assign(Fe,{slots:{0:le,1:pe,2:ge,3:fe}});Object.assign(le,{structure:s,memory:{array:Os},slots:{0:Te}});Object.assign(Te,{structure:u,memory:{array:Ss}});Object.assign(pe,{structure:s,memory:{array:js},slots:{0:$e}});Object.assign($e,{structure:u,memory:{array:zs}});Object.assign(ge,{structure:s,memory:{array:hs},slots:{0:Be}});Object.assign(Be,{structure:u,memory:{array:ds}});Object.assign(fe,{structure:s,memory:{array:ws},slots:{0:Le}});Object.assign(Le,{structure:u,memory:{array:As}});Object.assign(Ge,{slots:{0:Oe,1:Se}});Object.assign(Oe,{structure:r,memory:{array:Us},slots:{0:Z}});Object.assign(Z,{structure:A});Object.assign(Se,{structure:$,memory:{array:ks},slots:{0:le,1:pe,2:ge,3:fe}});Object.assign(He,{slots:{0:je,1:ze,2:he,3:de}});Object.assign(je,{structure:s,memory:{array:Ps},slots:{0:Je}});Object.assign(Je,{structure:u,memory:{array:Is}});Object.assign(ze,{structure:s,memory:{array:Vs},slots:{0:Ne}});Object.assign(Ne,{structure:u,memory:{array:Rs}});Object.assign(he,{structure:s,memory:{array:qs},slots:{0:Qe}});Object.assign(Qe,{structure:u,memory:{array:vs}});Object.assign(de,{structure:s,memory:{array:Es},slots:{0:We}});Object.assign(We,{structure:u,memory:{array:xs}});Object.assign(Xe,{slots:{0:we,1:Ae}});Object.assign(we,{structure:r,memory:{array:Ks},slots:{0:Z}});Object.assign(Ae,{structure:L,memory:{array:Cs},slots:{0:je,1:ze,2:he,3:de}});Object.assign(Ye,{slots:{0:Ue,1:ke,2:Pe}});Object.assign(Ue,{structure:T,memory:{array:Ds},slots:{0:ue,1:me,2:ye,3:be}});Object.assign(ke,{structure:B,memory:{array:_s},slots:{0:Oe,1:Se}});Object.assign(Pe,{structure:G,memory:{array:Ms},slots:{0:we,1:Ae}});Object.assign(Ze,{slots:{0:Ie}});Object.assign(Ie,{structure:p,memory:{array:Fs},slots:{0:et}});Object.assign(et,{structure:z,memory:{array:Ts}});Object.assign(tt,{slots:{0:Ve}});Object.assign(Ve,{structure:N,memory:{array:$s},slots:{0:Ie}});Object.assign(st,{slots:{0:rt,1:nt,2:ot,3:ut,4:yt,5:bt,6:lt}});Object.assign(rt,{structure:C,memory:{array:Bs},slots:{0:at}});Object.assign(at,{structure:K,memory:{array:Ls},reloc:16778488,const:!0});Object.assign(nt,{structure:_,memory:{array:Gs},slots:{0:it}});Object.assign(it,{structure:D,memory:{array:Hs},reloc:16778517,const:!0});Object.assign(ot,{structure:p,memory:{array:Js},slots:{0:ct}});Object.assign(ct,{structure:z,memory:{array:Ns}});Object.assign(ut,{structure:F,memory:{array:Qs},slots:{0:mt}});Object.assign(mt,{structure:M,memory:{array:Ws},reloc:16778553,const:!0});Object.assign(yt,{structure:H,memory:{array:Xs},slots:{0:Ue,1:ke,2:Pe}});Object.assign(bt,{structure:J,memory:{array:Ys}});Object.assign(lt,{structure:Q,memory:{array:Zs},slots:{0:Ve}});Object.assign(pt,{slots:{0:gt,1:ft}});Object.assign(gt,{structure:g,memory:{array:er}});Object.assign(ft,{structure:g,memory:{array:tr}});Object.assign(Ot,{memory:{array:Ft},slots:{0:St}});Object.assign(St,{structure:P,memory:{array:Ft,offset:0,length:8},slots:{0:Re}});Object.assign(Re,{structure:X,memory:{array:sr},reloc:0});Object.assign(jt,{slots:{0:zt,1:dt,2:wt}});Object.assign(zt,{structure:r,memory:{array:rr},slots:{0:ht}});Object.assign(ht,{structure:W});Object.assign(dt,{structure:r,memory:{array:ar},slots:{0:Z}});Object.assign(wt,{structure:p,memory:{array:nr},slots:{0:At}});Object.assign(At,{structure:z,memory:{array:ir}});Object.assign(Ut,{memory:{array:ve},slots:{0:kt}});Object.assign(kt,{structure:Y,memory:{array:ve},slots:{0:Pt}});Object.assign(Pt,{structure:P,memory:{array:ve,offset:0,length:8},slots:{0:Re}});Object.assign(It,{memory:{array:or}});Object.assign(Vt,{slots:{0:qe}});Object.assign(qe,{structure:U,memory:{array:cr}});Object.assign(Rt,{slots:{0:qe}});Object.assign(qt,{slots:{0:vt,1:xt,2:Ct,3:_t}});Object.assign(vt,{structure:r,memory:{array:ur},slots:{0:Et}});Object.assign(Et,{structure:re});Object.assign(xt,{structure:r,memory:{array:mr},slots:{0:Kt}});Object.assign(Kt,{structure:k});Object.assign(Ct,{structure:r,memory:{array:yr},slots:{0:Dt}});Object.assign(Dt,{structure:I});Object.assign(_t,{structure:r,memory:{array:br},slots:{0:Mt}});Object.assign(Mt,{structure:V});const lr={argStruct:ne,thunkId:2,name:"createOutput"},pr={argStruct:oe,thunkId:3,name:"createPartialOutput"};Object.assign(r,{...t,name:"type",align:1,instance:{members:[{...e,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(f,{...t,name:"u8",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(K,{...t,type:1,name:"[17:0]u8",length:17,byteSize:18,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(C,{...t,type:13,name:"*const [17:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:K}],methods:[]}});Object.assign(D,{...t,type:1,name:"[18:0]u8",length:18,byteSize:19,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(_,{...t,type:13,name:"*const [18:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:D}],methods:[]}});Object.assign(p,{...t,name:"comptime_int",align:1,instance:{members:[{...e,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:p}],methods:[]}});Object.assign(z,{...t,name:"i8",byteSize:1,align:1,instance:{members:[{...e,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:z}],methods:[]}});Object.assign(M,{...t,type:1,name:"[27:0]u8",length:27,byteSize:28,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(F,{...t,type:13,name:"*const [27:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(s,{...t,name:"comptime_float",align:1,instance:{members:[{...e,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(h,{...t,name:"f32",byteSize:4,align:4,instance:{members:[{...e,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:h}],methods:[]}});Object.assign(u,{...t,name:"f64",byteSize:8,align:8,instance:{members:[{...e,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:u}],methods:[]}});Object.assign(T,{...t,type:2,name:"Struct3531062864",align:1,instance:{members:[{...e,type:9,slot:0,name:"type",structure:r},{...e,type:9,slot:1,name:"minValue",structure:s},{...e,type:9,slot:2,name:"maxValue",structure:s},{...e,type:9,slot:3,name:"defaultValue",structure:s}],methods:[],template:Ke}});Object.assign($,{...t,type:2,name:"Struct1988309366",align:1,instance:{members:[{...e,type:9,slot:0,name:"0",structure:s},{...e,type:9,slot:1,name:"1",structure:s},{...e,type:9,slot:2,name:"2",structure:s},{...e,type:9,slot:3,name:"3",structure:s}],methods:[],template:Fe}});Object.assign(A,{...t,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...e,type:4,bitSize:32,byteSize:4,structure:h}],methods:[]}});Object.assign(B,{...t,type:2,name:"Struct2979890628",align:1,instance:{members:[{...e,type:9,slot:0,name:"type",structure:r},{...e,type:9,slot:1,name:"defaultValue",structure:$}],methods:[],template:Ge}});Object.assign(L,{...t,type:2,name:"Struct2874091690",align:1,instance:{members:[{...e,type:9,slot:0,name:"0",structure:s},{...e,type:9,slot:1,name:"1",structure:s},{...e,type:9,slot:2,name:"2",structure:s},{...e,type:9,slot:3,name:"3",structure:s}],methods:[],template:He}});Object.assign(G,{...t,type:2,name:"Struct3132836412",align:1,instance:{members:[{...e,type:9,slot:0,name:"type",structure:r},{...e,type:9,slot:1,name:"defaultValue",structure:L}],methods:[],template:Xe}});Object.assign(H,{...t,type:2,name:"Struct2102669365",align:1,instance:{members:[{...e,type:9,slot:0,name:"checkerSize",structure:T},{...e,type:9,slot:1,name:"colorA",structure:B},{...e,type:9,slot:2,name:"colorB",structure:G}],methods:[],template:Ye}});Object.assign(J,{...t,type:2,name:"Struct2871943947",align:1});Object.assign(N,{...t,type:2,name:"Struct3832472641",align:1,instance:{members:[{...e,type:9,slot:0,name:"channels",structure:p}],methods:[],template:Ze}});Object.assign(Q,{...t,type:2,name:"Struct172100005",align:1,instance:{members:[{...e,type:9,slot:0,name:"dst",structure:N}],methods:[],template:tt}});Object.assign(re,{...t,type:2,name:"checker-fill.kernel",align:1,static:{members:[{...e,type:9,slot:0,name:"namespace",structure:C},{...e,type:9,slot:1,name:"vendor",structure:_},{...e,type:9,slot:2,name:"version",structure:p},{...e,type:9,slot:3,name:"description",structure:F},{...e,type:9,slot:4,name:"parameters",structure:H},{...e,type:9,slot:5,name:"inputImages",structure:J},{...e,type:9,slot:6,name:"outputImages",structure:Q}],methods:[],template:st}});Object.assign(k,{...t,type:2,name:"checker-fill.KernelInput(u8,checker-fill.kernel)",align:1});Object.assign(W,{...t,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(X,{...t,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,structure:W}],methods:[]}});Object.assign(P,{...t,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:64,byteSize:8,slot:0,structure:X}],methods:[]}});Object.assign(b,{...t,name:"u32",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[]}});Object.assign(g,{...t,type:11,name:"checker-fill.ColorSpace",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"srgb",structure:g},{...e,type:9,slot:1,name:"display-p3",structure:g}],methods:[],template:pt}});Object.assign(E,{...t,name:"usize",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:E}],methods:[]}});Object.assign(Y,{...t,type:2,name:"checker-fill.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:P},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:b},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:b},{...e,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:g},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:E}],methods:[],template:Ot},static:{members:[{...e,type:9,slot:0,name:"Pixel",structure:r},{...e,type:9,slot:1,name:"FPixel",structure:r},{...e,type:9,slot:2,name:"channels",structure:p}],methods:[],template:jt}});Object.assign(I,{...t,type:2,name:"checker-fill.KernelOutput(u8,checker-fill.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:Y}],methods:[],template:Ut}});Object.assign(V,{...t,type:2,name:"checker-fill.KernelParameters(checker-fill.kernel)",byteSize:48,align:16,instance:{members:[{...e,type:4,bitOffset:256,bitSize:32,byteSize:4,slot:2,name:"checkerSize",structure:h},{...e,type:7,bitOffset:0,bitSize:128,byteSize:16,slot:0,name:"colorA",structure:A},{...e,type:7,bitOffset:128,bitSize:128,byteSize:16,slot:1,name:"colorB",structure:A}],methods:[],template:It}});Object.assign(U,{...t,type:10,name:"@typeInfo(@typeInfo(@TypeOf(checker-fill.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"OutOfMemory",structure:U}],methods:[],template:Vt}});Object.assign(ae,{...t,type:9,name:"ErrorSet1785462741!checker-fill.KernelOutput(u8,checker-fill.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:I},{...e,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:U}],methods:[]}});Object.assign(ne,{...t,type:5,name:"createOutput",byteSize:96,align:16,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:384,bitSize:32,byteSize:4,slot:3,name:"0",structure:b},{...e,type:3,isRequired:!0,bitOffset:416,bitSize:32,byteSize:4,slot:4,name:"1",structure:b},{...e,type:7,isRequired:!0,bitOffset:672,bitSize:0,byteSize:0,slot:0,name:"2",structure:k},{...e,type:7,isRequired:!0,bitOffset:0,bitSize:384,byteSize:48,slot:1,name:"3",structure:V},{...e,type:7,isRequired:!0,bitOffset:448,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ae}],methods:[]}});Object.assign(x,{...t,type:10,name:"@typeInfo(@typeInfo(@TypeOf(checker-fill.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"OutOfMemory",structure:x}],methods:[],template:Rt}});Object.assign(ie,{...t,type:9,name:"ErrorSet3115672964!checker-fill.KernelOutput(u8,checker-fill.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:I},{...e,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:x}],methods:[]}});Object.assign(oe,{...t,type:5,name:"createPartialOutput",byteSize:96,align:16,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:384,bitSize:32,byteSize:4,slot:3,name:"0",structure:b},{...e,type:3,isRequired:!0,bitOffset:416,bitSize:32,byteSize:4,slot:4,name:"1",structure:b},{...e,type:3,isRequired:!0,bitOffset:448,bitSize:32,byteSize:4,slot:5,name:"2",structure:b},{...e,type:3,isRequired:!0,bitOffset:480,bitSize:32,byteSize:4,slot:6,name:"3",structure:b},{...e,type:7,isRequired:!0,bitOffset:736,bitSize:0,byteSize:0,slot:0,name:"4",structure:k},{...e,type:7,isRequired:!0,bitOffset:0,bitSize:384,byteSize:48,slot:1,name:"5",structure:V},{...e,type:7,isRequired:!0,bitOffset:512,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ie}],methods:[]}});Object.assign(ce,{...t,type:2,name:"checker-fill",align:1,static:{members:[{...e,type:9,slot:0,name:"kernel",structure:r},{...e,type:9,slot:1,name:"Input",structure:r},{...e,type:9,slot:2,name:"Output",structure:r},{...e,type:9,slot:3,name:"Parameters",structure:r}],methods:[lr,pr],template:qt}});const gr=[r,f,K,C,D,_,p,z,M,F,s,h,u,T,$,A,B,L,G,H,J,N,Q,re,k,W,X,P,b,g,E,Y,I,V,U,ae,ne,x,ie,oe,ce],fr=ce,Or={runtimeSafety:!1,littleEndian:!0},ee=cs();ee.getControlObject();ee.recreateStructures(gr,Or);const Sr=(async()=>{const o=new URL("checker-fill-a9bf02d7.wasm",import.meta.url).href;return fetch(o)})();ee.loadModule(Sr);ee.linkVariables(!0);const{constructor:jr}=fr,{createPartialOutput:zr,Input:hr,kernel:se}=jr;function dr(o,c,n,a,i={},O={}){const S=[];for(const[y]of se.inputImages)S.push(y);const d=[];for(const[y]of se.outputImages)d.push(y);if(Array.isArray(i)){const y=i;i={};for(const[l,j]of S.entries())i[j]=y[l]}const m=new hr(void 0),R=[];let w;for(const y of S){let l=i[y];if(l||(S.length===1&&["data","width","height"].every(j=>!!i[j])?l=i:R.push(y)),m[y]=l,w){if(l.colorSpace!==w)throw new Error(`Input images must all use the same color space: ${w}`)}else w=l.colorSpace}if(R.length>0)throw new Error(`Missing input image${R.length>1?"s":""}: ${R.join(", ")}`);const te=zr(o,c,n,a,m,O),Ee=y=>{const l={};for(const j of d){const{data:{typedArray:q},width:xe,height:$t}=y[j];let v;if(typeof ImageData=="function"){const Bt=new Uint8ClampedArray(q.buffer,q.byteOffset,q.byteLength);v=new ImageData(Bt,xe,a,{colorSpace:w})}else v={data:q,width:xe,height:$t};if(d.length===1)return v;l[j]=v}return l};return te[Symbol.toStringTag]==="Promise"?te.then(Ee):Ee(te)}function wr(){const o={};for(let[c,n]of se){if(c==="parameters"){const a={};for(const[i,O]of n){const S=a[i]={};for(let[d,m]of O)typeof m=="object"?"string"in m?m=m.string:m=Tt(m):typeof m=="function"&&(m=Ar(m.name)),S[d]=m}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());o[c]=n}return o}function Tt(o){const c=[];for(let[n,a]of o)typeof a=="object"&&(a=Tt(a)),c[n]=a;return c}function Ar(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[c,n,...a]=o.data;Ur(c,a).then(([i,O])=>{postMessage([c,n,i],{transfer:O})}).catch(i=>{postMessage(["error",n,i])})};async function Ur(o,c){switch(o){case"getKernelInfo":return[wr(...c)];case"createPartialImageData":const a=await dr(...c),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const O of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${o}`)}}
