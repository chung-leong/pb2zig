import{u as Ee,a as Ke,b as De,c as Fe,d as Me,e as _e,f as Te,g as $e,h as Be,i as Le,j as Ge,k as He,l as Je,m as Ne,o as Qe,n as We,p as Xe,q as Ye}from"./index-422d9c98.js";Ee();Ke();De();Fe();Me();_e();Te();$e();Be();Le();Ge();He();Je();Ne();Qe();We();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},z={},q={},A={},g={},W={},X={},E={},p={},f={},m={},r={},s={},Y={},K={},Z={},D={},ee={},F={},te={},M={},se={},_={},re={},ae={},T={},ne={},$={},ie={},B={},ue={},L={},oe={},G={},j={},O={},me={},H={},le={},J={},ge={},w={},ye={},ce={},c={},be={},U={},pe={},N={},P={},fe={},de={},Q={},V={},x={},ze={},Oe={},we={},Re={},qe={},Ae={},Ue={};Object.assign(z,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:z}],methods:[],template:null},slot:5});Object.assign(q,{...t,type:1,name:"[22:0]u8",length:22,byteSize:23,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:z}],methods:[],template:null},slot:4});Object.assign(A,{...t,type:11,name:"*const [22:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:q}],methods:[],template:null},slot:3});Object.assign(g,{...t,type:11,name:"*const *const [22:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:A}],methods:[],template:null},slot:2});Object.assign(W,{...t,type:1,name:"[8:0]u8",length:8,byteSize:9,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:z}],methods:[],template:null},slot:8});Object.assign(X,{...t,type:11,name:"*const [8:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:7});Object.assign(E,{...t,type:11,name:"*const *const [8:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:6});Object.assign(p,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[],template:null},slot:10});Object.assign(f,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:p}],methods:[],template:null},slot:9});Object.assign(m,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[],template:null},slot:29});Object.assign(r,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[],template:null},slot:53});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:r}],methods:[],template:null},slot:52});const Ze=new Uint8Array([]),et=new Uint8Array([0,252,15,0]),tt=new Uint8Array([0,0,0,0,0,0,240,63]),st=new Uint8Array([40,252,15,0]),rt=new Uint8Array([0,0,0,0,0,0,89,64]),at=new Uint8Array([32,251,15,0]),nt=new Uint8Array([0,0,0,0,0,0,42,64]);Object.assign(Y,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:Ze},slots:{0:{structure:s,memory:{array:et},slots:{0:{structure:r,memory:{array:tt}}}},1:{structure:s,memory:{array:st},slots:{0:{structure:r,memory:{array:rt}}}},2:{structure:s,memory:{array:at},slots:{0:{structure:r,memory:{array:nt}}}}}}},slot:36});Object.assign(K,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[],template:null},slot:35});const it=new Uint8Array([]),ut=new Uint8Array([0,252,15,0]),ot=new Uint8Array([0,0,0,0,0,0,240,63]),mt=new Uint8Array([40,252,15,0]),lt=new Uint8Array([0,0,0,0,0,0,89,64]),yt=new Uint8Array([32,251,15,0]),ct=new Uint8Array([0,0,0,0,0,0,49,64]);Object.assign(Z,{...t,type:2,name:"Struct0014",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:it},slots:{0:{structure:s,memory:{array:ut},slots:{0:{structure:r,memory:{array:ot}}}},1:{structure:s,memory:{array:mt},slots:{0:{structure:r,memory:{array:lt}}}},2:{structure:s,memory:{array:yt},slots:{0:{structure:r,memory:{array:ct}}}}}}},slot:38});Object.assign(D,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:37});const bt=new Uint8Array([]),pt=new Uint8Array([0,252,15,0]),ft=new Uint8Array([0,0,0,0,0,0,240,63]),dt=new Uint8Array([40,252,15,0]),St=new Uint8Array([0,0,0,0,0,0,89,64]),ht=new Uint8Array([32,251,15,0]),gt=new Uint8Array([0,0,0,0,0,0,51,64]);Object.assign(ee,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:bt},slots:{0:{structure:s,memory:{array:pt},slots:{0:{structure:r,memory:{array:ft}}}},1:{structure:s,memory:{array:dt},slots:{0:{structure:r,memory:{array:St}}}},2:{structure:s,memory:{array:ht},slots:{0:{structure:r,memory:{array:gt}}}}}}},slot:40});Object.assign(F,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:39});const zt=new Uint8Array([]),Ot=new Uint8Array([0,252,15,0]),wt=new Uint8Array([0,0,0,0,0,0,240,63]),Rt=new Uint8Array([40,252,15,0]),qt=new Uint8Array([0,0,0,0,0,0,89,64]),At=new Uint8Array([32,251,15,0]),Ut=new Uint8Array([0,0,0,0,0,0,53,64]);Object.assign(te,{...t,type:2,name:"Struct0016",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:zt},slots:{0:{structure:s,memory:{array:Ot},slots:{0:{structure:r,memory:{array:wt}}}},1:{structure:s,memory:{array:Rt},slots:{0:{structure:r,memory:{array:qt}}}},2:{structure:s,memory:{array:At},slots:{0:{structure:r,memory:{array:Ut}}}}}}},slot:42});Object.assign(M,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:41});const jt=new Uint8Array([]),Pt=new Uint8Array([0,252,15,0]),Vt=new Uint8Array([0,0,0,0,0,0,240,63]),xt=new Uint8Array([40,252,15,0]),kt=new Uint8Array([0,0,0,0,0,0,89,64]),Ct=new Uint8Array([32,251,15,0]),It=new Uint8Array([0,0,0,0,0,0,55,64]);Object.assign(se,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:jt},slots:{0:{structure:s,memory:{array:Pt},slots:{0:{structure:r,memory:{array:Vt}}}},1:{structure:s,memory:{array:xt},slots:{0:{structure:r,memory:{array:kt}}}},2:{structure:s,memory:{array:Ct},slots:{0:{structure:r,memory:{array:It}}}}}}},slot:44});Object.assign(_,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:43});Object.assign(re,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:m}],methods:[],template:null},slot:30});const vt=new Uint8Array([]),Et=new Uint8Array([224,251,15,0]),Kt=new Uint8Array([0,0,0,0,0,0,89,192]),Dt=new Uint8Array([8,252,15,0]),Ft=new Uint8Array([0,0,0,0,0,0,89,192]);Object.assign(ae,{...t,type:2,name:"Struct0023",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:vt},slots:{0:{structure:s,memory:{array:Et},slots:{0:{structure:r,memory:{array:Kt}}}},1:{structure:s,memory:{array:Dt},slots:{0:{structure:r,memory:{array:Ft}}}}}}},slot:55});Object.assign(T,{...t,type:11,name:"Struct0020",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:54});const Mt=new Uint8Array([]),_t=new Uint8Array([224,251,15,0]),Tt=new Uint8Array([0,0,0,0,0,64,143,64]),$t=new Uint8Array([8,252,15,0]),Bt=new Uint8Array([0,0,0,0,0,64,143,64]);Object.assign(ne,{...t,type:2,name:"Struct0024",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Mt},slots:{0:{structure:s,memory:{array:_t},slots:{0:{structure:r,memory:{array:Tt}}}},1:{structure:s,memory:{array:$t},slots:{0:{structure:r,memory:{array:Bt}}}}}}},slot:57});Object.assign($,{...t,type:11,name:"Struct0021",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:56});const Lt=new Uint8Array([]),Gt=new Uint8Array([224,251,15,0]),Ht=new Uint8Array([0,0,0,0,0,48,107,64]),Jt=new Uint8Array([8,252,15,0]),Nt=new Uint8Array([205,204,204,204,204,108,136,64]);Object.assign(ie,{...t,type:2,name:"Struct0025",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Lt},slots:{0:{structure:s,memory:{array:Gt},slots:{0:{structure:r,memory:{array:Ht}}}},1:{structure:s,memory:{array:Jt},slots:{0:{structure:r,memory:{array:Nt}}}}}}},slot:59});Object.assign(B,{...t,type:11,name:"Struct0022",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:58});const Qt=new Uint8Array([]),Wt=new Uint8Array([170,170,170,170]),y=new Uint8Array([]),Xt=new Uint8Array([170,170,170,170]),Yt=new Uint8Array([170,170,170,170]);Object.assign(ue,{...t,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:re},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:T},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:$},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:B}],methods:[],template:{memory:{array:Qt},slots:{0:{structure:T,memory:{array:Wt},slots:{0:{structure:ae,memory:{array:y},address:-1431655766}}},1:{structure:$,memory:{array:Xt},slots:{0:{structure:ne,memory:{array:y},address:-1431655766}}},2:{structure:B,memory:{array:Yt},slots:{0:{structure:ie,memory:{array:y},address:-1431655766}}}}}},slot:46});Object.assign(L,{...t,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:45});const Zt=new Uint8Array([]),es=new Uint8Array([170,170,170,170]),ts=new Uint8Array([170,170,170,170]),ss=new Uint8Array([170,170,170,170]),rs=new Uint8Array([170,170,170,170]),as=new Uint8Array([170,170,170,170]),ns=new Uint8Array([170,170,170,170]);Object.assign(oe,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"n0",structure:K},{...e,type:8,isRequired:!1,slot:1,name:"n1",structure:D},{...e,type:8,isRequired:!1,slot:2,name:"n2",structure:F},{...e,type:8,isRequired:!1,slot:3,name:"n3",structure:M},{...e,type:8,isRequired:!1,slot:4,name:"n4",structure:_},{...e,type:8,isRequired:!1,slot:5,name:"randomPoint",structure:L}],methods:[],template:{memory:{array:Zt},slots:{0:{structure:K,memory:{array:es},slots:{0:{structure:Y,memory:{array:y},address:-1431655766}}},1:{structure:D,memory:{array:ts},slots:{0:{structure:Z,memory:{array:y},address:-1431655766}}},2:{structure:F,memory:{array:ss},slots:{0:{structure:ee,memory:{array:y},address:-1431655766}}},3:{structure:M,memory:{array:rs},slots:{0:{structure:te,memory:{array:y},address:-1431655766}}},4:{structure:_,memory:{array:as},slots:{0:{structure:se,memory:{array:y},address:-1431655766}}},5:{structure:L,memory:{array:ns},slots:{0:{structure:ue,memory:{array:y},address:-1431655766}}}}}},slot:12});Object.assign(G,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:11});const is=new Uint8Array([]),us=new Uint8Array([0,252,15,0]),os=new Uint8Array([4,0,0,0]);Object.assign(j,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:is},slots:{0:{structure:f,memory:{array:us},slots:{0:{structure:p,memory:{array:os}}}}}}},slot:48});Object.assign(O,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:j}],methods:[],template:null},slot:47});const ms=new Uint8Array([]),ls=new Uint8Array([170,170,170,170]);Object.assign(me,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:O}],methods:[],template:{memory:{array:ms},slots:{0:{structure:O,memory:{array:ls},slots:{0:{structure:j,memory:{array:y},address:-1431655766}}}}}},slot:14});Object.assign(H,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:13});const ys=new Uint8Array([]),cs=new Uint8Array([170,170,170,170]);Object.assign(le,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:O}],methods:[],template:{memory:{array:ys},slots:{0:{structure:O,memory:{array:cs},slots:{0:{structure:j,memory:{array:y},address:-1431655766}}}}}},slot:16});Object.assign(J,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:15});const bs=new Uint8Array([]),ps=new Uint8Array([]),fs=new Uint8Array([12,253,15,0]),ds=new Uint8Array([196,36,16,0]),ke=new Uint8Array([114,97,110,100,111,109,32,115,105,122,101,32,112,105,120,101,108,97,116,105,111,110,0]),Ss=new Uint8Array([68,253,15,0]),hs=new Uint8Array([187,36,16,0]),gs=new Uint8Array([112,105,120,101,108,101,114,111,0]),zs=new Uint8Array([100,253,15,0]),Os=new Uint8Array([1,0,0,0]),ws=new Uint8Array([156,253,15,0]),Rs=new Uint8Array([196,36,16,0]),qs=new Uint8Array([170,170,170,170]),As=new Uint8Array([170,170,170,170]),Us=new Uint8Array([170,170,170,170]);Object.assign(ge,{...t,type:2,name:"random-pixelation.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:bs}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:g},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:E},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:f},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:g},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:G},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:H},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:J}],methods:[],template:{memory:{array:ps},slots:{0:{structure:g,memory:{array:fs},slots:{0:{structure:A,memory:{array:ds},slots:{0:{structure:q,memory:{array:ke},address:1057988}}}}},1:{structure:E,memory:{array:Ss},slots:{0:{structure:X,memory:{array:hs},slots:{0:{structure:W,memory:{array:gs},address:1057979}}}}},2:{structure:f,memory:{array:zs},slots:{0:{structure:p,memory:{array:Os}}}},3:{structure:g,memory:{array:ws},slots:{0:{structure:A,memory:{array:Rs},slots:{0:{structure:q,memory:{array:ke},address:1057988}}}}},4:{structure:G,memory:{array:qs},slots:{0:{structure:oe,memory:{array:y},address:-1431655766}}},5:{structure:H,memory:{array:As},slots:{0:{structure:me,memory:{array:y},address:-1431655766}}},6:{structure:J,memory:{array:Us},slots:{0:{structure:le,memory:{array:y},address:-1431655766}}}}}},slot:1});Object.assign(w,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:z}],methods:[],template:null},slot:21});Object.assign(ye,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:w}],methods:[],template:null},slot:20});Object.assign(ce,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:ye}],methods:[],template:null},slot:19});Object.assign(c,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:22});const js=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(be,{...t,type:9,name:"random-pixelation.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:p},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:p}],methods:[],template:{memory:{array:js}}},slot:23});Object.assign(U,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:U}],methods:[],template:null},slot:24});Object.assign(pe,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:m}],methods:[],template:null},slot:49});const Ps=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Vs=new Uint8Array([]),xs=new Uint8Array([168,251,15,0]),ks=new Uint8Array([4,0,0,0]);Object.assign(N,{...t,type:2,name:"random-pixelation.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:ce},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:be},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:{memory:{array:Ps}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:w},{...e,type:7,isRequired:!1,name:"FPixel",structure:pe},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:Vs},slots:{0:{structure:f,memory:{array:xs},slots:{0:{structure:p,memory:{array:ks}}}}}}},slot:18});const Cs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Is=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),vs=new Uint8Array([0,0,0,0,0,0,0,0]),je=new Uint8Array([]);Object.assign(P,{...t,type:2,name:"random-pixelation.KernelInput(u8,random-pixelation.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:N}],methods:[],template:{memory:{array:Cs},slots:{0:{structure:N,memory:{array:Is},slots:{0:{structure:ce,memory:{array:vs},slots:{0:{structure:ye,memory:{array:je}}}}}}}}},slot:17});Object.assign(fe,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:w}],methods:[],template:null},slot:20});Object.assign(de,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:fe}],methods:[],template:null},slot:27});const Es=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ks=new Uint8Array([]),Ds=new Uint8Array([168,251,15,0]),Fs=new Uint8Array([4,0,0,0]);Object.assign(Q,{...t,type:2,name:"random-pixelation.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:de},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:be},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:{memory:{array:Es}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:w},{...e,type:7,isRequired:!1,name:"FPixel",structure:pe},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:Ks},slots:{0:{structure:f,memory:{array:Ds},slots:{0:{structure:p,memory:{array:Fs}}}}}}},slot:26});const Ms=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),_s=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ts=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(V,{...t,type:2,name:"random-pixelation.KernelOutput(u8,random-pixelation.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:Q}],methods:[],template:{memory:{array:Ms},slots:{0:{structure:Q,memory:{array:_s},slots:{0:{structure:de,memory:{array:Ts},slots:{0:{structure:fe,memory:{array:je}}}}}}}}},slot:25});const $s=new Uint8Array([0,128,89,67,102,102,67,68,0,0,80,65,0,0,136,65,0,0,152,65,0,0,168,65,0,0,184,65,0,0,0,0]);Object.assign(x,{...t,type:2,name:"random-pixelation.KernelParameters(random-pixelation.kernel)",length:1,byteSize:32,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:64,bitSize:32,byteSize:4,slot:0,name:"n0",structure:m},{...e,type:4,isRequired:!1,bitOffset:96,bitSize:32,byteSize:4,slot:1,name:"n1",structure:m},{...e,type:4,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:2,name:"n2",structure:m},{...e,type:4,isRequired:!1,bitOffset:160,bitSize:32,byteSize:4,slot:3,name:"n3",structure:m},{...e,type:4,isRequired:!1,bitOffset:192,bitSize:32,byteSize:4,slot:4,name:"n4",structure:m},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,slot:5,name:"randomPoint",structure:re}],methods:[],template:{memory:{array:$s}}},slot:28});Object.assign(ze,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(random-pixelation.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:50});Object.assign(Oe,{...t,type:7,name:"ErrorSet0000!random-pixelation.KernelOutput(u8,random-pixelation.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:V},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:ze}],methods:[],template:null},slot:33});Object.assign(we,{...t,type:3,name:"createOutput",length:1,byteSize:96,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:c},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:c},{...e,type:6,bitOffset:320,bitSize:192,byteSize:24,slot:2,name:"2",structure:P},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:3,name:"3",structure:x},{...e,type:6,bitOffset:512,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Oe}],methods:[],template:null},slot:31});Object.assign(Re,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(random-pixelation.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:51});Object.assign(qe,{...t,type:7,name:"ErrorSet0001!random-pixelation.KernelOutput(u8,random-pixelation.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:V},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Re}],methods:[],template:null},slot:34});Object.assign(Ae,{...t,type:3,name:"createPartialOutput",length:1,byteSize:104,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:c},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:c},{...e,type:3,bitOffset:320,bitSize:32,byteSize:4,slot:2,name:"2",structure:c},{...e,type:3,bitOffset:352,bitSize:32,byteSize:4,slot:3,name:"3",structure:c},{...e,type:6,bitOffset:384,bitSize:192,byteSize:24,slot:4,name:"4",structure:P},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:5,name:"5",structure:x},{...e,type:6,bitOffset:576,bitSize:224,byteSize:28,slot:6,name:"retval",structure:qe}],methods:[],template:null},slot:32});const Bs={argStruct:we,thunk:4,name:"createOutput"},Ls={argStruct:Ae,thunk:6,name:"createPartialOutput"};Object.assign(Ue,{...t,type:2,name:"random-pixelation",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:je}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:ge},{...e,type:7,isRequired:!1,name:"Input",structure:P},{...e,type:7,isRequired:!1,name:"Output",structure:V},{...e,type:7,isRequired:!1,name:"Parameters",structure:x}],methods:[Bs,Ls],template:null},slot:0});const Gs=[z,q,A,g,W,X,E,p,f,m,r,s,Y,K,Z,D,ee,F,te,M,se,_,re,ae,T,ne,$,ie,B,ue,L,oe,G,j,O,me,H,le,J,ge,w,ye,ce,c,be,U,pe,N,P,fe,de,Q,V,x,ze,Oe,we,Re,qe,Ae,Ue],Hs=Xe(Gs),Js=Ue.constructor,Ns=(async()=>{const u=new URL("random-pixelation-200c66e1.wasm",import.meta.url).href;return fetch(u)})();Ye(Ns,{...Hs,writeBack:!0});const{createOutput:sr,createPartialOutput:Qs,kernel:he,Input:Ws,Output:rr,Parameters:ar}=Js;function Xs(u,l,n,a,i={},S={}){if(Array.isArray(i)){const d=i;i={};for(const[b,h]of Object.keys(he.inputImages).entries())i[h]=d[b]}const k=new Ws(void 0),C=Object.keys(he.inputImages),o=[];let R;for(const d of C){let b=i[d];if(b||(C.length===1&&["data","width","height"].every(h=>!!i[h])?b=i:o.push(d)),k[d]=b,R){if(b.colorSpace!==R)throw new Error(`Input images must all use the same color space: ${R}`)}else R=b.colorSpace}if(o.length>0)throw new Error(`Missing input image${o.length>1?"s":""}: ${o.join(", ")}`);const Se=Qs(u,l,n,a,k,S),Pe=d=>{const b=Object.keys(d),h={};for(const Ve of b){const{data:{typedArray:I},width:xe,height:Ie}=d[Ve];let v;if(typeof ImageData=="function"){const ve=new Uint8ClampedArray(I.buffer,I.byteOffset,I.byteLength);v=new ImageData(ve,xe,a,{colorSpace:R})}else v={data:I,width:xe,height:Ie};if(b.length===1)return v;h[Ve]=v}return h};return Se[Symbol.toStringTag]==="Promise"?Se.then(Pe):Pe(Se)}function Ys(){const u={};for(let[l,n]of Object.entries(he)){if(l==="parameters"){const a={};for(const[i,S]of Object.entries(n)){const k=a[i]={};for(let[C,o]of Object.entries(S))typeof o=="object"?"string"in o?o=o.string:o=Ce(o):typeof o=="function"&&(o=Zs(o.name)),k[C]=o}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());u[l]=n}return u}function Ce(u){const l=[];for(let[n,a]of Object.entries(u))typeof a=="object"&&(a=Ce(a)),l[n]=a;return l}function Zs(u){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[u]}onmessage=u=>{const[l,n,...a]=u.data;er(l,a).then(([i,S])=>{postMessage([l,n,i],{transfer:S})}).catch(i=>{postMessage(["error",n,i])})};async function er(u,l){switch(u){case"getKernelInfo":return[Ys(...l)];case"createPartialImageData":const a=await Xs(...l),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const S of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${u}`)}}
