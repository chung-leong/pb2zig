import{u as ms,a as ys,b as bs,c as ls,d as ps,e as gs,f as fs,g as Os,h as Ss,i as js,j as zs,k as hs,l as ds,m as ws,n as As,p as Us,o as Ps,q as Vs,r as Is,s as Rs}from"./index-58d89d46.js";ms();zs();hs();ys();bs();ds();ws();As();Us();ls();ps();gs();fs();Ps();Rs();Os();Vs();Ss();js();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},O={},F={},M={},T={},$={},l={},S={},L={},B={},r={},y={},d={},G={},g={},H={},J={},N={},w={},Q={},A={},W={},X={},bt={},R={},Y={},k={},m={},f={},V={},lt={},Z={},q={},tt={},v={},et={},E={},x={},I={},pt={},gt={},_={},ft={},Ot={},St={},Gt={},st={},Ht={},rt={},Jt={},Nt={},jt={},Qt={},zt={},Wt={},Xt={},ht={},Yt={},dt={},wt={},At={},Zt={},Ut={},Pt={},Vt={},te={},It={},ee={},Rt={},se={},re={},at={},nt={},ae={},it={},ne={},ot={},ie={},oe={},kt={},qt={},vt={},Et={},ce={},ct={},ue={},me={},xt={},ye={},Dt={},be={},le={},pe={},ge={},fe={},Oe={},Se={},je={},ze={},he={},de={},we={},Ae={},Ue={},Pe={},Ve={},Ie={},Ct={},Re={},ke={},Kt={},qe={},_t={},ve={},Ee={},xe={},De={},Ce={},Ke={},_e={},Ft={},Fe={},Me={},Te={},$e={},Le={},Be={},Ge={},He={},Je={},Ne={},Mt={},Qe={},We={},Xe={},Ye={},Ze={},ts={},es={},ss={},rs={},as={},ks=new Uint8Array,qs=new Uint8Array([0,0,0,0,0,0,0,0]),vs=new Uint8Array,Es=new Uint8Array([0,0,0,0,0,0,0,0]),xs=new Uint8Array,Ds=new Uint8Array([0,0,0,0,0,0,176,64]),Cs=new Uint8Array,Ks=new Uint8Array([0,0,0,0,0,0,176,64]),_s=new Uint8Array,Fs=new Uint8Array,Ms=new Uint8Array,Ts=new Uint8Array,$s=new Uint8Array,Ls=new Uint8Array,Bs=new Uint8Array([0,0,0,0,0,0,0,0]),Gs=new Uint8Array,Hs=new Uint8Array([0,0,0,0,0,64,159,64]),Js=new Uint8Array,Ns=new Uint8Array([0,0,0,0,0,224,101,64]),Qs=new Uint8Array,Ws=new Uint8Array,Xs=new Uint8Array([0,0,0,0,0,0,0,0]),Ys=new Uint8Array,Zs=new Uint8Array([0,0,0,0,0,0,0,64]),tr=new Uint8Array,er=new Uint8Array([0,0,0,0,0,0,240,63]),sr=new Uint8Array,rr=new Uint8Array,ar=new Uint8Array,nr=new Uint8Array,ir=new Uint8Array,or=new Uint8Array([4]),cr=new Uint8Array,ur=new Uint8Array,mr=new Uint8Array([11,5,0,1]),yr=new Uint8Array([110,97,118,104,97,108,105,0]),br=new Uint8Array([30,5,0,1]),lr=new Uint8Array([74,111,104,110,32,69,110,103,108,101,114,0]),pr=new Uint8Array,gr=new Uint8Array([0]),fr=new Uint8Array([59,5,0,1]),Or=new Uint8Array([83,105,109,112,108,101,32,112,111,105,110,116,32,108,105,103,104,116,45,45,112,108,97,121,105,110,103,32,119,105,116,104,32,80,105,120,101,108,66,101,110,100,101,114,0]),Sr=new Uint8Array,jr=new Uint8Array,zr=new Uint8Array,hr=new Uint8Array([0]),dr=new Uint8Array([1]),ns=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),wr=new Uint8Array,Ar=new Uint8Array,Ur=new Uint8Array,Pr=new Uint8Array,Vr=new Uint8Array([4]),Tt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),is=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ir=new Uint8Array,Rr=new Uint8Array,kr=new Uint8Array,qr=new Uint8Array,vr=new Uint8Array([4]),$t=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Er=new Uint8Array([0,0,0,0,0,0,0,0,0,0,47,67,0,0,128,63,0,0,128,63,0,0,0,0]),xr=new Uint8Array([27,0]),Dr=new Uint8Array,Cr=new Uint8Array,Kr=new Uint8Array,_r=new Uint8Array;Object.assign(Gt,{slots:{0:st,1:rt}});Object.assign(st,{structure:r,memory:{array:ks},slots:{0:Ht}});Object.assign(Ht,{structure:y,memory:{array:qs}});Object.assign(rt,{structure:r,memory:{array:vs},slots:{0:Jt}});Object.assign(Jt,{structure:y,memory:{array:Es}});Object.assign(Nt,{slots:{0:jt,1:zt}});Object.assign(jt,{structure:r,memory:{array:xs},slots:{0:Qt}});Object.assign(Qt,{structure:y,memory:{array:Ds}});Object.assign(zt,{structure:r,memory:{array:Cs},slots:{0:Wt}});Object.assign(Wt,{structure:y,memory:{array:Ks}});Object.assign(Xt,{slots:{0:ht,1:dt,2:wt,3:At}});Object.assign(ht,{structure:s,memory:{array:_s},slots:{0:Yt}});Object.assign(Yt,{structure:H});Object.assign(dt,{structure:d,memory:{array:Fs},slots:{0:st,1:rt}});Object.assign(wt,{structure:G,memory:{array:Ms},slots:{0:jt,1:zt}});Object.assign(At,{structure:d,memory:{array:Ts},slots:{0:st,1:rt}});Object.assign(Zt,{slots:{0:Ut,1:Vt,2:It,3:Rt}});Object.assign(Ut,{structure:s,memory:{array:$s},slots:{0:Pt}});Object.assign(Pt,{structure:g});Object.assign(Vt,{structure:r,memory:{array:Ls},slots:{0:te}});Object.assign(te,{structure:y,memory:{array:Bs}});Object.assign(It,{structure:r,memory:{array:Gs},slots:{0:ee}});Object.assign(ee,{structure:y,memory:{array:Hs}});Object.assign(Rt,{structure:r,memory:{array:Js},slots:{0:se}});Object.assign(se,{structure:y,memory:{array:Ns}});Object.assign(re,{slots:{0:at,1:nt,2:it,3:ot}});Object.assign(at,{structure:s,memory:{array:Qs},slots:{0:Pt}});Object.assign(nt,{structure:r,memory:{array:Ws},slots:{0:ae}});Object.assign(ae,{structure:y,memory:{array:Xs}});Object.assign(it,{structure:r,memory:{array:Ys},slots:{0:ne}});Object.assign(ne,{structure:y,memory:{array:Zs}});Object.assign(ot,{structure:r,memory:{array:tr},slots:{0:ie}});Object.assign(ie,{structure:y,memory:{array:er}});Object.assign(oe,{slots:{0:kt,1:qt,2:vt,3:Et}});Object.assign(kt,{structure:J,memory:{array:sr},slots:{0:ht,1:dt,2:wt,3:At}});Object.assign(qt,{structure:N,memory:{array:rr},slots:{0:Ut,1:Vt,2:It,3:Rt}});Object.assign(vt,{structure:w,memory:{array:ar},slots:{0:at,1:nt,2:it,3:ot}});Object.assign(Et,{structure:w,memory:{array:nr},slots:{0:at,1:nt,2:it,3:ot}});Object.assign(ce,{slots:{0:ct}});Object.assign(ct,{structure:l,memory:{array:ir},slots:{0:ue}});Object.assign(ue,{structure:S,memory:{array:or}});Object.assign(me,{slots:{0:xt}});Object.assign(xt,{structure:A,memory:{array:cr},slots:{0:ct}});Object.assign(ye,{slots:{0:Dt}});Object.assign(Dt,{structure:A,memory:{array:ur},slots:{0:ct}});Object.assign(be,{slots:{0:le,1:ge,2:Oe,3:je,4:he,5:de,6:we}});Object.assign(le,{structure:M,memory:{array:mr},slots:{0:pe}});Object.assign(pe,{structure:F,memory:{array:yr},reloc:16778507,const:!0});Object.assign(ge,{structure:$,memory:{array:br},slots:{0:fe}});Object.assign(fe,{structure:T,memory:{array:lr},reloc:16778526,const:!0});Object.assign(Oe,{structure:l,memory:{array:pr},slots:{0:Se}});Object.assign(Se,{structure:S,memory:{array:gr}});Object.assign(je,{structure:B,memory:{array:fr},slots:{0:ze}});Object.assign(ze,{structure:L,memory:{array:Or},reloc:16778555,const:!0});Object.assign(he,{structure:Q,memory:{array:Sr},slots:{0:kt,1:qt,2:vt,3:Et}});Object.assign(de,{structure:W,memory:{array:jr},slots:{0:xt}});Object.assign(we,{structure:X,memory:{array:zr},slots:{0:Dt}});Object.assign(Ae,{slots:{0:Ue,1:Pe}});Object.assign(Ue,{structure:f,memory:{array:hr}});Object.assign(Pe,{structure:f,memory:{array:dr}});Object.assign(Ve,{memory:{array:ns},slots:{0:Ie}});Object.assign(Ie,{structure:k,memory:{array:ns,offset:0,length:8},slots:{0:Ct}});Object.assign(Ct,{structure:Y,memory:{array:wr},reloc:0,const:!0});Object.assign(Re,{slots:{0:ke,1:qe,2:ve}});Object.assign(ke,{structure:s,memory:{array:Ar},slots:{0:Kt}});Object.assign(Kt,{structure:R});Object.assign(qe,{structure:s,memory:{array:Ur},slots:{0:_t}});Object.assign(_t,{structure:lt});Object.assign(ve,{structure:l,memory:{array:Pr},slots:{0:Ee}});Object.assign(Ee,{structure:S,memory:{array:Vr}});Object.assign(xe,{memory:{array:Tt},slots:{0:De}});Object.assign(De,{structure:Z,memory:{array:Tt},slots:{0:Ce}});Object.assign(Ce,{structure:k,memory:{array:Tt,offset:0,length:8},slots:{0:Ct}});Object.assign(Ke,{memory:{array:is},slots:{0:_e}});Object.assign(_e,{structure:v,memory:{array:is,offset:0,length:8},slots:{0:Ft}});Object.assign(Ft,{structure:tt,memory:{array:Ir},reloc:0});Object.assign(Fe,{slots:{0:Me,1:Te,2:$e}});Object.assign(Me,{structure:s,memory:{array:Rr},slots:{0:Kt}});Object.assign(Te,{structure:s,memory:{array:kr},slots:{0:_t}});Object.assign($e,{structure:l,memory:{array:qr},slots:{0:Le}});Object.assign(Le,{structure:S,memory:{array:vr}});Object.assign(Be,{memory:{array:$t},slots:{0:Ge}});Object.assign(Ge,{structure:et,memory:{array:$t},slots:{0:He}});Object.assign(He,{structure:v,memory:{array:$t,offset:0,length:8},slots:{0:Ft}});Object.assign(Je,{memory:{array:Er}});Object.assign(Ne,{slots:{0:Mt}});Object.assign(Mt,{structure:I,memory:{array:xr}});Object.assign(Qe,{slots:{0:Mt}});Object.assign(We,{slots:{0:Xe,1:Ze,2:es,3:rs}});Object.assign(Xe,{structure:s,memory:{array:Dr},slots:{0:Ye}});Object.assign(Ye,{structure:bt});Object.assign(Ze,{structure:s,memory:{array:Cr},slots:{0:ts}});Object.assign(ts,{structure:q});Object.assign(es,{structure:s,memory:{array:Kr},slots:{0:ss}});Object.assign(ss,{structure:E});Object.assign(rs,{structure:s,memory:{array:_r},slots:{0:as}});Object.assign(as,{structure:x});const Fr={argStruct:gt,thunkId:2,name:"createOutput"},Mr={argStruct:Ot,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(O,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(F,{...e,type:1,name:"[7:0]u8",length:7,byteSize:8,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(M,{...e,type:13,name:"*const [7:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(T,{...e,type:1,name:"[11:0]u8",length:11,byteSize:12,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign($,{...e,type:13,name:"*const [11:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[]}});Object.assign(l,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:l}],methods:[]}});Object.assign(S,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(L,{...e,type:1,name:"[44:0]u8",length:44,byteSize:45,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(B,{...e,type:13,name:"*const [44:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[]}});Object.assign(r,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(y,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:y}],methods:[]}});Object.assign(d,{...e,type:2,name:"Struct738220547",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:r},{...t,type:9,slot:1,name:"1",structure:r}],methods:[],template:Gt}});Object.assign(G,{...e,type:2,name:"Struct2662133551",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:r},{...t,type:9,slot:1,name:"1",structure:r}],methods:[],template:Nt}});Object.assign(g,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:g}],methods:[]}});Object.assign(H,{...e,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:g}],methods:[]}});Object.assign(J,{...e,type:2,name:"Struct2812903031",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:d},{...t,type:9,slot:2,name:"maxValue",structure:G},{...t,type:9,slot:3,name:"defaultValue",structure:d}],methods:[],template:Xt}});Object.assign(N,{...e,type:2,name:"Struct3601255964",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:r},{...t,type:9,slot:2,name:"maxValue",structure:r},{...t,type:9,slot:3,name:"defaultValue",structure:r}],methods:[],template:Zt}});Object.assign(w,{...e,type:2,name:"Struct530191728",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:r},{...t,type:9,slot:2,name:"maxValue",structure:r},{...t,type:9,slot:3,name:"defaultValue",structure:r}],methods:[],template:re}});Object.assign(Q,{...e,type:2,name:"Struct3067271501",align:1,instance:{members:[{...t,type:9,slot:0,name:"center",structure:J},{...t,type:9,slot:1,name:"attenuationDelta",structure:N},{...t,type:9,slot:2,name:"attenuationSpeed",structure:w},{...t,type:9,slot:3,name:"attenuationDecay",structure:w}],methods:[],template:oe}});Object.assign(A,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:l}],methods:[],template:ce}});Object.assign(W,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:9,slot:0,name:"src",structure:A}],methods:[],template:me}});Object.assign(X,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:9,slot:0,name:"dst",structure:A}],methods:[],template:ye}});Object.assign(bt,{...e,type:2,name:"simple-point-light.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:M},{...t,type:9,slot:1,name:"vendor",structure:$},{...t,type:9,slot:2,name:"version",structure:l},{...t,type:9,slot:3,name:"description",structure:B},{...t,type:9,slot:4,name:"parameters",structure:Q},{...t,type:9,slot:5,name:"inputImages",structure:W},{...t,type:9,slot:6,name:"outputImages",structure:X}],methods:[],template:be}});Object.assign(R,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(Y,{...e,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(k,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:Y}],methods:[]}});Object.assign(m,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[]}});Object.assign(f,{...e,type:11,name:"simple-point-light.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:f},{...t,type:9,slot:1,name:"display-p3",structure:f}],methods:[],template:Ae}});Object.assign(V,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(lt,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:g}],methods:[]}});Object.assign(Z,{...e,type:2,name:"simple-point-light.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:k},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:f},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:Ve},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:l}],methods:[],template:Re}});Object.assign(q,{...e,type:2,name:"simple-point-light.KernelInput(u8,simple-point-light.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:Z}],methods:[],template:xe}});Object.assign(tt,{...e,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(v,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:tt}],methods:[]}});Object.assign(et,{...e,type:2,name:"simple-point-light.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:v},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:f},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:Ke},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:l}],methods:[],template:Fe}});Object.assign(E,{...e,type:2,name:"simple-point-light.KernelOutput(u8,simple-point-light.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:et}],methods:[],template:Be}});Object.assign(x,{...e,type:2,name:"simple-point-light.KernelParameters(simple-point-light.kernel)",byteSize:24,align:8,instance:{members:[{...t,type:7,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"center",structure:H},{...t,type:4,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"attenuationDelta",structure:g},{...t,type:4,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"attenuationSpeed",structure:g},{...t,type:4,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"attenuationDecay",structure:g}],methods:[],template:Je}});Object.assign(I,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(simple-point-light.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:I}],methods:[],template:Ne}});Object.assign(pt,{...e,type:9,name:"ErrorSet4257104108!simple-point-light.KernelOutput(u8,simple-point-light.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:E},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:I}],methods:[]}});Object.assign(gt,{...e,type:5,name:"createOutput",byteSize:88,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:192,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...t,type:3,isRequired:!0,bitOffset:224,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...t,type:7,isRequired:!0,bitOffset:256,bitSize:192,byteSize:24,slot:0,name:"2",structure:q},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:192,byteSize:24,slot:1,name:"3",structure:x},{...t,type:7,isRequired:!0,bitOffset:448,bitSize:224,byteSize:28,slot:2,name:"retval",structure:pt}],methods:[]}});Object.assign(_,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(simple-point-light.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:_}],methods:[],template:Qe}});Object.assign(ft,{...e,type:9,name:"ErrorSet3399899828!simple-point-light.KernelOutput(u8,simple-point-light.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:E},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:_}],methods:[]}});Object.assign(Ot,{...e,type:5,name:"createPartialOutput",byteSize:96,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:192,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...t,type:3,isRequired:!0,bitOffset:224,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...t,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:5,name:"2",structure:m},{...t,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:6,name:"3",structure:m},{...t,type:7,isRequired:!0,bitOffset:320,bitSize:192,byteSize:24,slot:0,name:"4",structure:q},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:192,byteSize:24,slot:1,name:"5",structure:x},{...t,type:7,isRequired:!0,bitOffset:512,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ft}],methods:[]}});Object.assign(St,{...e,type:2,name:"simple-point-light",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:s},{...t,type:9,slot:1,name:"Input",structure:s},{...t,type:9,slot:2,name:"Output",structure:s},{...t,type:9,slot:3,name:"Parameters",structure:s}],methods:[Fr,Mr],template:We}});const Tr=[s,O,F,M,T,$,l,S,L,B,r,y,d,G,g,H,J,N,w,Q,A,W,X,bt,R,Y,k,m,f,V,lt,Z,q,tt,v,et,E,x,I,pt,gt,_,ft,Ot,St],$r=St,Lr={runtimeSafety:!1,littleEndian:!0},ut=Is();ut.getControlObject();ut.recreateStructures(Tr,Lr);const Br=(async()=>{const o=new URL("simple-point-light-38c1013e.wasm",import.meta.url).href;return fetch(o)})();ut.loadModule(Br);ut.linkVariables(!0);const{constructor:Gr}=$r,{createPartialOutput:Hr,Input:Jr,kernel:yt}=Gr;function Nr(o,c,n,a,i={},j={}){const z=[];for(const[b]of yt.inputImages)z.push(b);const U=[];for(const[b]of yt.outputImages)U.push(b);if(Array.isArray(i)){const b=i;i={};for(const[p,h]of z.entries())i[h]=b[p]}const u=new Jr(void 0),D=[];let P;for(const b of z){let p=i[b];if(p||(z.length===1&&["data","width","height"].every(h=>!!i[h])?p=i:D.push(b)),u[b]=p,P){if(p.colorSpace!==P)throw new Error(`Input images must all use the same color space: ${P}`)}else P=p.colorSpace}if(D.length>0)throw new Error(`Missing input image${D.length>1?"s":""}: ${D.join(", ")}`);const mt=Hr(o,c,n,a,u,j),Lt=b=>{const p={};for(const h of U){const{data:{typedArray:C},width:Bt,height:cs}=b[h];let K;if(typeof ImageData=="function"){const us=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);K=new ImageData(us,Bt,a,{colorSpace:P})}else K={data:C,width:Bt,height:cs};if(U.length===1)return K;p[h]=K}return p};return mt[Symbol.toStringTag]==="Promise"?mt.then(Lt):Lt(mt)}function Qr(){const o={};for(let[c,n]of yt){if(c==="parameters"){const a={};for(const[i,j]of n){const z=a[i]={};for(let[U,u]of j)typeof u=="object"?"string"in u?u=u.string:u=os(u):typeof u=="function"&&(u=Wr(u.name)),z[U]=u}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());o[c]=n}return o}function os(o){const c=[];for(let[n,a]of o)typeof a=="object"&&(a=os(a)),c[n]=a;return c}function Wr(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[c,n,...a]=o.data;Xr(c,a).then(([i,j])=>{postMessage([c,n,i],{transfer:j})}).catch(i=>{postMessage(["error",n,i])})};async function Xr(o,c){switch(o){case"getKernelInfo":return[Qr(...c)];case"createPartialImageData":const a=await Nr(...c),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const j of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${o}`)}}
