import{u as zr,a as dr,b as hr,c as wr,d as Ar,e as Ur,f as kr,g as Vr,h as Pr,i as Ir,j as Rr,k as qr,l as xr,m as vr,n as Er,p as Cr,o as Kr,q as _r,r as Dr,s as Fr}from"./index-58d89d46.js";zr();Rr();qr();dr();hr();xr();vr();Er();Cr();wr();Ar();Ur();kr();Kr();Fr();Vr();_r();Pr();Ir();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},r={},p={},$={},L={},B={},G={},l={},f={},R={},A={},s={},j={},a={},H={},J={},N={},Q={},W={},X={},Y={},Z={},tt={},q={},et={},h={},st={},w={},rt={},at={},nt={},it={},ot={},ct={},ut={},mt={},yt={},U={},bt={},lt={},kt={},x={},gt={},v={},y={},O={},P={},Vt={},pt={},E={},Ot={},C={},jt={},K={},_={},I={},Pt={},It={},T={},Rt={},qt={},xt={},qe={},vt={},Et={},Ct={},xe={},Kt={},ve={},_t={},Ee={},Dt={},Ce={},Ke={},Ft={},Mt={},_e={},Tt={},De={},$t={},Fe={},Lt={},Me={},Te={},Bt={},$e={},Gt={},Le={},Be={},Ht={},Ge={},Jt={},He={},Je={},Nt={},Ne={},Qt={},Qe={},We={},Wt={},Xe={},Xt={},Yt={},Zt={},te={},Ye={},Ze={},ft={},ts={},St={},es={},ss={},ee={},se={},rs={},zt={},as={},dt={},ns={},is={},re={},ae={},os={},ne={},cs={},ie={},us={},ms={},oe={},ys={},ce={},bs={},ls={},ue={},me={},gs={},ye={},ps={},be={},le={},ge={},pe={},Os={},js={},Oe={},je={},fe={},Se={},fs={},ht={},Ss={},zs={},ze={},ds={},de={},hs={},ws={},As={},Us={},ks={},Vs={},Ps={},Is={},Rs={},qs={},xs={},vs={},Es={},Cs={},Ks={},_s={},Ds={},he={},Fs={},Ms={},we={},Ts={},Ae={},$s={},Ls={},Bs={},Gs={},Hs={},Js={},Ns={},Ue={},Qs={},Ws={},Xs={},Ys={},Zs={},tr={},er={},sr={},rr={},ar={},ke={},nr={},ir={},or={},cr={},ur={},mr={},yr={},br={},lr={},gr={},Mr=new Uint8Array,Tr=new Uint8Array,$r=new Uint8Array([0,0,0,0,0,0,240,63]),Lr=new Uint8Array,Br=new Uint8Array([0,0,0,0,0,0,105,64]),Gr=new Uint8Array,Hr=new Uint8Array([0,0,0,0,0,0,64,64]),Jr=new Uint8Array([228,6,0,1]),Nr=new Uint8Array([80,97,116,116,101,114,110,32,83,105,122,101,0]),Qr=new Uint8Array,Wr=new Uint8Array,Xr=new Uint8Array([154,153,153,153,153,153,185,63]),Yr=new Uint8Array,Zr=new Uint8Array([154,153,153,153,153,153,17,64]),ta=new Uint8Array,ea=new Uint8Array([113,61,10,215,163,112,229,63]),sa=new Uint8Array([20,7,0,1]),ra=new Uint8Array([114,97,100,105,117,115,58,32,104,111,119,32,109,117,99,104,32,97,32,100,105,115,107,115,32,102,105,108,108,115,32,117,112,32,105,116,115,32,115,112,97,99,101,0]),aa=new Uint8Array,na=new Uint8Array([0,0,0,0,0,0,105,192]),ia=new Uint8Array,oa=new Uint8Array([0,0,0,0,0,0,105,192]),ca=new Uint8Array,ua=new Uint8Array([0,0,0,0,0,0,137,64]),ma=new Uint8Array,ya=new Uint8Array([0,0,0,0,0,64,127,64]),ba=new Uint8Array,la=new Uint8Array([0,0,0,0,0,0,0,0]),ga=new Uint8Array,pa=new Uint8Array([0,0,0,0,0,0,0,0]),Oa=new Uint8Array,ja=new Uint8Array,fa=new Uint8Array,Sa=new Uint8Array,za=new Uint8Array([68,7,0,1]),da=new Uint8Array([66,97,115,101,32,80,111,105,110,116,0]),ha=new Uint8Array,wa=new Uint8Array([0,0,0,0,0,0,240,191]),Aa=new Uint8Array,Ua=new Uint8Array([0,0,0,0,0,0,240,191]),ka=new Uint8Array,Va=new Uint8Array,Pa=new Uint8Array,Ia=new Uint8Array([0,0,0,0,0,0,240,63]),Ra=new Uint8Array,qa=new Uint8Array([0,0,0,0,0,0,240,63]),xa=new Uint8Array,va=new Uint8Array,Ea=new Uint8Array,Ca=new Uint8Array([0,0,0,0,0,0,240,63]),Ka=new Uint8Array,_a=new Uint8Array([0,0,0,0,0,0,0,0]),Da=new Uint8Array,Fa=new Uint8Array([0,0,0,0,0,0,0,0]),Ma=new Uint8Array,Ta=new Uint8Array([0,0,0,0,0,0,240,63]),$a=new Uint8Array,La=new Uint8Array,Ba=new Uint8Array,Ga=new Uint8Array,Ha=new Uint8Array,Ja=new Uint8Array,Na=new Uint8Array([84,7,0,1]),Qa=new Uint8Array([82,111,116,97,116,105,111,110,32,97,114,111,117,110,100,32,66,97,115,101,32,80,111,105,110,116,0]),Wa=new Uint8Array,Xa=new Uint8Array,Ya=new Uint8Array,Za=new Uint8Array,tn=new Uint8Array,en=new Uint8Array([4]),sn=new Uint8Array,rn=new Uint8Array,an=new Uint8Array([10,5,0,1]),nn=new Uint8Array([68,105,115,107,115,0]),on=new Uint8Array([27,5,0,1]),cn=new Uint8Array([80,101,116,114,105,32,76,101,115,107,105,110,101,110,0]),un=new Uint8Array,mn=new Uint8Array([1]),yn=new Uint8Array([59,5,0,1]),bn=new Uint8Array([68,105,115,107,32,116,105,108,105,110,103,32,0]),ln=new Uint8Array,gn=new Uint8Array,pn=new Uint8Array,On=new Uint8Array([0]),jn=new Uint8Array([1]),pr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),fn=new Uint8Array,Sn=new Uint8Array,zn=new Uint8Array,dn=new Uint8Array,hn=new Uint8Array([4]),Ve=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Or=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),wn=new Uint8Array,An=new Uint8Array,Un=new Uint8Array,kn=new Uint8Array,Vn=new Uint8Array([4]),Pe=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Pn=new Uint8Array([0,0,0,0,0,0,0,0,0,0,128,63,0,0,0,0,0,0,0,0,0,0,128,63,0,0,0,66,31,133,43,63]),In=new Uint8Array([27,0]),Rn=new Uint8Array,qn=new Uint8Array,xn=new Uint8Array,vn=new Uint8Array;Object.assign(qe,{slots:{0:vt,1:Ct,2:Kt,3:_t,4:Dt}});Object.assign(vt,{structure:r,memory:{array:Mr},slots:{0:Et}});Object.assign(Et,{structure:j});Object.assign(Ct,{structure:s,memory:{array:Tr},slots:{0:xe}});Object.assign(xe,{structure:a,memory:{array:$r}});Object.assign(Kt,{structure:s,memory:{array:Lr},slots:{0:ve}});Object.assign(ve,{structure:a,memory:{array:Br}});Object.assign(_t,{structure:s,memory:{array:Gr},slots:{0:Ee}});Object.assign(Ee,{structure:a,memory:{array:Hr}});Object.assign(Dt,{structure:A,memory:{array:Jr},slots:{0:Ce}});Object.assign(Ce,{structure:R,memory:{array:Nr},reloc:16778980,const:!0});Object.assign(Ke,{slots:{0:Ft,1:Mt,2:Tt,3:$t,4:Lt}});Object.assign(Ft,{structure:r,memory:{array:Qr},slots:{0:Et}});Object.assign(Mt,{structure:s,memory:{array:Wr},slots:{0:_e}});Object.assign(_e,{structure:a,memory:{array:Xr}});Object.assign(Tt,{structure:s,memory:{array:Yr},slots:{0:De}});Object.assign(De,{structure:a,memory:{array:Zr}});Object.assign($t,{structure:s,memory:{array:ta},slots:{0:Fe}});Object.assign(Fe,{structure:a,memory:{array:ea}});Object.assign(Lt,{structure:N,memory:{array:sa},slots:{0:Me}});Object.assign(Me,{structure:J,memory:{array:ra},reloc:16779028,const:!0});Object.assign(Te,{slots:{0:Bt,1:Gt}});Object.assign(Bt,{structure:s,memory:{array:aa},slots:{0:$e}});Object.assign($e,{structure:a,memory:{array:na}});Object.assign(Gt,{structure:s,memory:{array:ia},slots:{0:Le}});Object.assign(Le,{structure:a,memory:{array:oa}});Object.assign(Be,{slots:{0:Ht,1:Jt}});Object.assign(Ht,{structure:s,memory:{array:ca},slots:{0:Ge}});Object.assign(Ge,{structure:a,memory:{array:ua}});Object.assign(Jt,{structure:s,memory:{array:ma},slots:{0:He}});Object.assign(He,{structure:a,memory:{array:ya}});Object.assign(Je,{slots:{0:Nt,1:Qt}});Object.assign(Nt,{structure:s,memory:{array:ba},slots:{0:Ne}});Object.assign(Ne,{structure:a,memory:{array:la}});Object.assign(Qt,{structure:s,memory:{array:ga},slots:{0:Qe}});Object.assign(Qe,{structure:a,memory:{array:pa}});Object.assign(We,{slots:{0:Wt,1:Xt,2:Yt,3:Zt,4:te}});Object.assign(Wt,{structure:r,memory:{array:Oa},slots:{0:Xe}});Object.assign(Xe,{structure:q});Object.assign(Xt,{structure:W,memory:{array:ja},slots:{0:Bt,1:Gt}});Object.assign(Yt,{structure:X,memory:{array:fa},slots:{0:Ht,1:Jt}});Object.assign(Zt,{structure:Y,memory:{array:Sa},slots:{0:Nt,1:Qt}});Object.assign(te,{structure:tt,memory:{array:za},slots:{0:Ye}});Object.assign(Ye,{structure:Z,memory:{array:da},reloc:16779076,const:!0});Object.assign(Ze,{slots:{0:ft,1:St}});Object.assign(ft,{structure:s,memory:{array:ha},slots:{0:ts}});Object.assign(ts,{structure:a,memory:{array:wa}});Object.assign(St,{structure:s,memory:{array:Aa},slots:{0:es}});Object.assign(es,{structure:a,memory:{array:Ua}});Object.assign(ss,{slots:{0:ee,1:se}});Object.assign(ee,{structure:h,memory:{array:ka},slots:{0:ft,1:St}});Object.assign(se,{structure:h,memory:{array:Va},slots:{0:ft,1:St}});Object.assign(rs,{slots:{0:zt,1:dt}});Object.assign(zt,{structure:s,memory:{array:Pa},slots:{0:as}});Object.assign(as,{structure:a,memory:{array:Ia}});Object.assign(dt,{structure:s,memory:{array:Ra},slots:{0:ns}});Object.assign(ns,{structure:a,memory:{array:qa}});Object.assign(is,{slots:{0:re,1:ae}});Object.assign(re,{structure:w,memory:{array:xa},slots:{0:zt,1:dt}});Object.assign(ae,{structure:w,memory:{array:va},slots:{0:zt,1:dt}});Object.assign(os,{slots:{0:ne,1:ie}});Object.assign(ne,{structure:s,memory:{array:Ea},slots:{0:cs}});Object.assign(cs,{structure:a,memory:{array:Ca}});Object.assign(ie,{structure:s,memory:{array:Ka},slots:{0:us}});Object.assign(us,{structure:a,memory:{array:_a}});Object.assign(ms,{slots:{0:oe,1:ce}});Object.assign(oe,{structure:s,memory:{array:Da},slots:{0:ys}});Object.assign(ys,{structure:a,memory:{array:Fa}});Object.assign(ce,{structure:s,memory:{array:Ma},slots:{0:bs}});Object.assign(bs,{structure:a,memory:{array:Ta}});Object.assign(ls,{slots:{0:ue,1:me}});Object.assign(ue,{structure:at,memory:{array:$a},slots:{0:ne,1:ie}});Object.assign(me,{structure:nt,memory:{array:La},slots:{0:oe,1:ce}});Object.assign(gs,{slots:{0:ye,1:be,2:le,3:ge,4:pe}});Object.assign(ye,{structure:r,memory:{array:Ba},slots:{0:ps}});Object.assign(ps,{structure:ut});Object.assign(be,{structure:st,memory:{array:Ga},slots:{0:ee,1:se}});Object.assign(le,{structure:rt,memory:{array:Ha},slots:{0:re,1:ae}});Object.assign(ge,{structure:it,memory:{array:Ja},slots:{0:ue,1:me}});Object.assign(pe,{structure:ct,memory:{array:Na},slots:{0:Os}});Object.assign(Os,{structure:ot,memory:{array:Qa},reloc:16779092,const:!0});Object.assign(js,{slots:{0:Oe,1:je,2:fe,3:Se}});Object.assign(Oe,{structure:H,memory:{array:Wa},slots:{0:vt,1:Ct,2:Kt,3:_t,4:Dt}});Object.assign(je,{structure:Q,memory:{array:Xa},slots:{0:Ft,1:Mt,2:Tt,3:$t,4:Lt}});Object.assign(fe,{structure:et,memory:{array:Ya},slots:{0:Wt,1:Xt,2:Yt,3:Zt,4:te}});Object.assign(Se,{structure:mt,memory:{array:Za},slots:{0:ye,1:be,2:le,3:ge,4:pe}});Object.assign(fs,{slots:{0:ht}});Object.assign(ht,{structure:l,memory:{array:tn},slots:{0:Ss}});Object.assign(Ss,{structure:f,memory:{array:en}});Object.assign(zs,{slots:{0:ze}});Object.assign(ze,{structure:U,memory:{array:sn},slots:{0:ht}});Object.assign(ds,{slots:{0:de}});Object.assign(de,{structure:U,memory:{array:rn},slots:{0:ht}});Object.assign(hs,{slots:{0:ws,1:Us,2:Vs,3:Is,4:qs,5:xs,6:vs}});Object.assign(ws,{structure:L,memory:{array:an},slots:{0:As}});Object.assign(As,{structure:$,memory:{array:nn},reloc:16778506,const:!0});Object.assign(Us,{structure:G,memory:{array:on},slots:{0:ks}});Object.assign(ks,{structure:B,memory:{array:cn},reloc:16778523,const:!0});Object.assign(Vs,{structure:l,memory:{array:un},slots:{0:Ps}});Object.assign(Ps,{structure:f,memory:{array:mn}});Object.assign(Is,{structure:A,memory:{array:yn},slots:{0:Rs}});Object.assign(Rs,{structure:R,memory:{array:bn},reloc:16778555,const:!0});Object.assign(qs,{structure:yt,memory:{array:ln},slots:{0:Oe,1:je,2:fe,3:Se}});Object.assign(xs,{structure:bt,memory:{array:gn},slots:{0:ze}});Object.assign(vs,{structure:lt,memory:{array:pn},slots:{0:de}});Object.assign(Es,{slots:{0:Cs,1:Ks}});Object.assign(Cs,{structure:O,memory:{array:On}});Object.assign(Ks,{structure:O,memory:{array:jn}});Object.assign(_s,{memory:{array:pr},slots:{0:Ds}});Object.assign(Ds,{structure:v,memory:{array:pr,offset:0,length:8},slots:{0:he}});Object.assign(he,{structure:gt,memory:{array:fn},reloc:0,const:!0});Object.assign(Fs,{slots:{0:Ms,1:Ts,2:$s}});Object.assign(Ms,{structure:r,memory:{array:Sn},slots:{0:we}});Object.assign(we,{structure:x});Object.assign(Ts,{structure:r,memory:{array:zn},slots:{0:Ae}});Object.assign(Ae,{structure:Vt});Object.assign($s,{structure:l,memory:{array:dn},slots:{0:Ls}});Object.assign(Ls,{structure:f,memory:{array:hn}});Object.assign(Bs,{memory:{array:Ve},slots:{0:Gs}});Object.assign(Gs,{structure:pt,memory:{array:Ve},slots:{0:Hs}});Object.assign(Hs,{structure:v,memory:{array:Ve,offset:0,length:8},slots:{0:he}});Object.assign(Js,{memory:{array:Or},slots:{0:Ns}});Object.assign(Ns,{structure:C,memory:{array:Or,offset:0,length:8},slots:{0:Ue}});Object.assign(Ue,{structure:Ot,memory:{array:wn},reloc:0});Object.assign(Qs,{slots:{0:Ws,1:Xs,2:Ys}});Object.assign(Ws,{structure:r,memory:{array:An},slots:{0:we}});Object.assign(Xs,{structure:r,memory:{array:Un},slots:{0:Ae}});Object.assign(Ys,{structure:l,memory:{array:kn},slots:{0:Zs}});Object.assign(Zs,{structure:f,memory:{array:Vn}});Object.assign(tr,{memory:{array:Pe},slots:{0:er}});Object.assign(er,{structure:jt,memory:{array:Pe},slots:{0:sr}});Object.assign(sr,{structure:C,memory:{array:Pe,offset:0,length:8},slots:{0:Ue}});Object.assign(rr,{memory:{array:Pn}});Object.assign(ar,{slots:{0:ke}});Object.assign(ke,{structure:I,memory:{array:In}});Object.assign(nr,{slots:{0:ke}});Object.assign(ir,{slots:{0:or,1:ur,2:yr,3:lr}});Object.assign(or,{structure:r,memory:{array:Rn},slots:{0:cr}});Object.assign(cr,{structure:kt});Object.assign(ur,{structure:r,memory:{array:qn},slots:{0:mr}});Object.assign(mr,{structure:E});Object.assign(yr,{structure:r,memory:{array:xn},slots:{0:br}});Object.assign(br,{structure:K});Object.assign(lr,{structure:r,memory:{array:vn},slots:{0:gr}});Object.assign(gr,{structure:_});const En={argStruct:It,thunkId:2,name:"createOutput"},Cn={argStruct:qt,thunkId:3,name:"createPartialOutput"};Object.assign(r,{...e,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(p,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign($,{...e,type:1,name:"[5:0]u8",length:5,byteSize:6,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(L,{...e,type:13,name:"*const [5:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[]}});Object.assign(B,{...e,type:1,name:"[14:0]u8",length:14,byteSize:15,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(G,{...e,type:13,name:"*const [14:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:B}],methods:[]}});Object.assign(l,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:l}],methods:[]}});Object.assign(f,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(R,{...e,type:1,name:"[12:0]u8",length:12,byteSize:13,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(A,{...e,type:13,name:"*const [12:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:R}],methods:[]}});Object.assign(s,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(j,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:j}],methods:[]}});Object.assign(a,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:a}],methods:[]}});Object.assign(H,{...e,type:2,name:"Struct1598523420",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:s},{...t,type:9,slot:2,name:"maxValue",structure:s},{...t,type:9,slot:3,name:"defaultValue",structure:s},{...t,type:9,slot:4,name:"description",structure:A}],methods:[],template:qe}});Object.assign(J,{...e,type:1,name:"[43:0]u8",length:43,byteSize:44,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(N,{...e,type:13,name:"*const [43:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:J}],methods:[]}});Object.assign(Q,{...e,type:2,name:"Struct2434125318",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:s},{...t,type:9,slot:2,name:"maxValue",structure:s},{...t,type:9,slot:3,name:"defaultValue",structure:s},{...t,type:9,slot:4,name:"description",structure:N}],methods:[],template:Ke}});Object.assign(W,{...e,type:2,name:"Struct761432325",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:s},{...t,type:9,slot:1,name:"1",structure:s}],methods:[],template:Te}});Object.assign(X,{...e,type:2,name:"Struct4139784567",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:s},{...t,type:9,slot:1,name:"1",structure:s}],methods:[],template:Be}});Object.assign(Y,{...e,type:2,name:"Struct738220547",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:s},{...t,type:9,slot:1,name:"1",structure:s}],methods:[],template:Je}});Object.assign(Z,{...e,type:1,name:"[10:0]u8",length:10,byteSize:11,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(tt,{...e,type:13,name:"*const [10:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[]}});Object.assign(q,{...e,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:j}],methods:[]}});Object.assign(et,{...e,type:2,name:"Struct2272851198",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:W},{...t,type:9,slot:2,name:"maxValue",structure:X},{...t,type:9,slot:3,name:"defaultValue",structure:Y},{...t,type:9,slot:4,name:"description",structure:tt}],methods:[],template:We}});Object.assign(h,{...e,type:2,name:"Struct2009719738",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:s},{...t,type:9,slot:1,name:"1",structure:s}],methods:[],template:Ze}});Object.assign(st,{...e,type:2,name:"Struct846284749",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:h},{...t,type:9,slot:1,name:"1",structure:h}],methods:[],template:ss}});Object.assign(w,{...e,type:2,name:"Struct2999377579",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:s},{...t,type:9,slot:1,name:"1",structure:s}],methods:[],template:rs}});Object.assign(rt,{...e,type:2,name:"Struct3751031584",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:w},{...t,type:9,slot:1,name:"1",structure:w}],methods:[],template:is}});Object.assign(at,{...e,type:2,name:"Struct514312347",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:s},{...t,type:9,slot:1,name:"1",structure:s}],methods:[],template:os}});Object.assign(nt,{...e,type:2,name:"Struct3223285779",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:s},{...t,type:9,slot:1,name:"1",structure:s}],methods:[],template:ms}});Object.assign(it,{...e,type:2,name:"Struct1799669077",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:at},{...t,type:9,slot:1,name:"1",structure:nt}],methods:[],template:ls}});Object.assign(ot,{...e,type:1,name:"[26:0]u8",length:26,byteSize:27,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(ct,{...e,type:13,name:"*const [26:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:ot}],methods:[]}});Object.assign(ut,{...e,type:1,name:"[2]@Vector(2, f32)",length:2,byteSize:16,align:8,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,structure:q}],methods:[]}});Object.assign(mt,{...e,type:2,name:"Struct1253220007",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:st},{...t,type:9,slot:2,name:"maxValue",structure:rt},{...t,type:9,slot:3,name:"defaultValue",structure:it},{...t,type:9,slot:4,name:"description",structure:ct}],methods:[],template:gs}});Object.assign(yt,{...e,type:2,name:"Struct1240680892",align:1,instance:{members:[{...t,type:9,slot:0,name:"size",structure:H},{...t,type:9,slot:1,name:"radius",structure:Q},{...t,type:9,slot:2,name:"base",structure:et},{...t,type:9,slot:3,name:"rotation",structure:mt}],methods:[],template:js}});Object.assign(U,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:l}],methods:[],template:fs}});Object.assign(bt,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:9,slot:0,name:"src",structure:U}],methods:[],template:zs}});Object.assign(lt,{...e,type:2,name:"Struct3519374731",align:1,instance:{members:[{...t,type:9,slot:0,name:"pxlOut",structure:U}],methods:[],template:ds}});Object.assign(kt,{...e,type:2,name:"disks.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:L},{...t,type:9,slot:1,name:"vendor",structure:G},{...t,type:9,slot:2,name:"version",structure:l},{...t,type:9,slot:3,name:"description",structure:A},{...t,type:9,slot:4,name:"parameters",structure:yt},{...t,type:9,slot:5,name:"inputImages",structure:bt},{...t,type:9,slot:6,name:"outputImages",structure:lt}],methods:[],template:hs}});Object.assign(x,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(gt,{...e,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:x}],methods:[]}});Object.assign(v,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:gt}],methods:[]}});Object.assign(y,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[]}});Object.assign(O,{...e,type:11,name:"disks.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:O},{...t,type:9,slot:1,name:"display-p3",structure:O}],methods:[],template:Es}});Object.assign(P,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(Vt,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:j}],methods:[]}});Object.assign(pt,{...e,type:2,name:"disks.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:v},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:_s},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:r},{...t,type:9,slot:1,name:"FPixel",structure:r},{...t,type:9,slot:2,name:"channels",structure:l}],methods:[],template:Fs}});Object.assign(E,{...e,type:2,name:"disks.KernelInput(u8,disks.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:pt}],methods:[],template:Bs}});Object.assign(Ot,{...e,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:x}],methods:[]}});Object.assign(C,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:Ot}],methods:[]}});Object.assign(jt,{...e,type:2,name:"disks.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:C},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:Js},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:r},{...t,type:9,slot:1,name:"FPixel",structure:r},{...t,type:9,slot:2,name:"channels",structure:l}],methods:[],template:Qs}});Object.assign(K,{...e,type:2,name:"disks.KernelOutput(u8,disks.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"pxlOut",structure:jt}],methods:[],template:tr}});Object.assign(_,{...e,type:2,name:"disks.KernelParameters(disks.kernel)",byteSize:32,align:8,instance:{members:[{...t,type:4,bitOffset:192,bitSize:32,byteSize:4,slot:2,name:"size",structure:j},{...t,type:4,bitOffset:224,bitSize:32,byteSize:4,slot:3,name:"radius",structure:j},{...t,type:7,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"base",structure:q},{...t,type:7,bitOffset:64,bitSize:128,byteSize:16,slot:1,name:"rotation",structure:ut}],methods:[],template:rr}});Object.assign(I,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(disks.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:I}],methods:[],template:ar}});Object.assign(Pt,{...e,type:9,name:"ErrorSet650832593!disks.KernelOutput(u8,disks.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:K},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:I}],methods:[]}});Object.assign(It,{...e,type:5,name:"createOutput",byteSize:96,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:3,name:"0",structure:y},{...t,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:4,name:"1",structure:y},{...t,type:7,isRequired:!0,bitOffset:320,bitSize:192,byteSize:24,slot:0,name:"2",structure:E},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:256,byteSize:32,slot:1,name:"3",structure:_},{...t,type:7,isRequired:!0,bitOffset:512,bitSize:224,byteSize:28,slot:2,name:"retval",structure:Pt}],methods:[]}});Object.assign(T,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(disks.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:T}],methods:[],template:nr}});Object.assign(Rt,{...e,type:9,name:"ErrorSet3624567137!disks.KernelOutput(u8,disks.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:K},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:T}],methods:[]}});Object.assign(qt,{...e,type:5,name:"createPartialOutput",byteSize:104,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:3,name:"0",structure:y},{...t,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:4,name:"1",structure:y},{...t,type:3,isRequired:!0,bitOffset:320,bitSize:32,byteSize:4,slot:5,name:"2",structure:y},{...t,type:3,isRequired:!0,bitOffset:352,bitSize:32,byteSize:4,slot:6,name:"3",structure:y},{...t,type:7,isRequired:!0,bitOffset:384,bitSize:192,byteSize:24,slot:0,name:"4",structure:E},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:256,byteSize:32,slot:1,name:"5",structure:_},{...t,type:7,isRequired:!0,bitOffset:576,bitSize:224,byteSize:28,slot:2,name:"retval",structure:Rt}],methods:[]}});Object.assign(xt,{...e,type:2,name:"disks",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:r},{...t,type:9,slot:1,name:"Input",structure:r},{...t,type:9,slot:2,name:"Output",structure:r},{...t,type:9,slot:3,name:"Parameters",structure:r}],methods:[En,Cn],template:ir}});const Kn=[r,p,$,L,B,G,l,f,R,A,s,j,a,H,J,N,Q,W,X,Y,Z,tt,q,et,h,st,w,rt,at,nt,it,ot,ct,ut,mt,yt,U,bt,lt,kt,x,gt,v,y,O,P,Vt,pt,E,Ot,C,jt,K,_,I,Pt,It,T,Rt,qt,xt],_n=xt,Dn={runtimeSafety:!1,littleEndian:!0},wt=Dr();wt.getControlObject();wt.recreateStructures(Kn,Dn);const Fn=(async()=>{const c=new URL("disks-28ddaa95.wasm",import.meta.url).href;return fetch(c)})();wt.loadModule(Fn);wt.linkVariables(!0);const{constructor:Mn}=_n,{createPartialOutput:Tn,Input:$n,kernel:Ut}=Mn;function Ln(c,u,i,n,o={},S={}){const z=[];for(const[b]of Ut.inputImages)z.push(b);const k=[];for(const[b]of Ut.outputImages)k.push(b);if(Array.isArray(o)){const b=o;o={};for(const[g,d]of z.entries())o[d]=b[g]}const m=new $n(void 0),D=[];let V;for(const b of z){let g=o[b];if(g||(z.length===1&&["data","width","height"].every(d=>!!o[d])?g=o:D.push(b)),m[b]=g,V){if(g.colorSpace!==V)throw new Error(`Input images must all use the same color space: ${V}`)}else V=g.colorSpace}if(D.length>0)throw new Error(`Missing input image${D.length>1?"s":""}: ${D.join(", ")}`);const At=Tn(c,u,i,n,m,S),Ie=b=>{const g={};for(const d of k){const{data:{typedArray:F},width:Re,height:fr}=b[d];let M;if(typeof ImageData=="function"){const Sr=new Uint8ClampedArray(F.buffer,F.byteOffset,F.byteLength);M=new ImageData(Sr,Re,n,{colorSpace:V})}else M={data:F,width:Re,height:fr};if(k.length===1)return M;g[d]=M}return g};return At[Symbol.toStringTag]==="Promise"?At.then(Ie):Ie(At)}function Bn(){const c={};for(let[u,i]of Ut){if(u==="parameters"){const n={};for(const[o,S]of i){const z=n[o]={};for(let[k,m]of S)typeof m=="object"?"string"in m?m=m.string:m=jr(m):typeof m=="function"&&(m=Gn(m.name)),z[k]=m}i=n}else typeof i=="object"&&("string"in i?i=i.string:i=i.valueOf());c[u]=i}return c}function jr(c){const u=[];for(let[i,n]of c)typeof n=="object"&&(n=jr(n)),u[i]=n;return u}function Gn(c){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[c]}onmessage=c=>{const[u,i,...n]=c.data;Hn(u,n).then(([o,S])=>{postMessage([u,i,o],{transfer:S})}).catch(o=>{postMessage(["error",i,o])})};async function Hn(c,u){switch(c){case"getKernelInfo":return[Bn(...u)];case"createPartialImageData":const n=await Ln(...u),o=[];if("data"in n&&"width"in n&&"height"in n)o.push(n.data.buffer);else for(const S of Object.entries(n))o.push(n.data.buffer);return[n,o];default:throw new Error(`Unknown function: ${c}`)}}
