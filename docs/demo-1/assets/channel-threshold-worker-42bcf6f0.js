import{u as Js,a as Ns,b as Qs,c as Ws,d as Xs,e as Ys,f as Zs,g as tr,h as er,i as sr,j as rr,k as nr,l as ar,m as or,n as ir,o as cr,p as ur,q as mr}from"./index-67c7daa1.js";Js();nr();ar();Ns();Qs();or();ir();cr();ur();Ws();Xs();Ys();Zs();mr();tr();er();sr();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},m={},H={},J={},N={},Q={},g={},h={},W={},X={},r={},u={},O={},Y={},Z={},I={},f={},tt={},E={},U={},et={},st={},rt={},nt={},at={},ot={},it={},ct={},C={},ut={},mt={},yt={},bt={},lt={},gt={},P={},pt={},Ot={},Ut={},x={},St={},K={},c={},S={},v={},ft={},M={},ht={},T={},jt={},D={},F={},w={},Pt={},Vt={},A={},Rt={},kt={},qt={},fe={},V={},he={},R={},je={},ze={},It={},_={},Ct={},vt={},de={},we={},Et={},xt={},Kt={},Ae={},Ue={},Mt={},Tt={},Dt={},Pe={},Ve={},Ft={},_t={},$t={},Re={},ke={},Lt={},qe={},Bt={},Ie={},Gt={},Ce={},Ht={},ve={},Ee={},Jt={},$={},Nt={},Qt={},xe={},Ke={},Wt={},Me={},Xt={},Te={},Yt={},De={},Zt={},Fe={},_e={},te={},ee={},se={},$e={},Le={},re={},ne={},ae={},oe={},ie={},ce={},Be={},zt={},Ge={},He={},ue={},Je={},me={},Ne={},Qe={},We={},Xe={},Ye={},Ze={},ts={},es={},ss={},rs={},ns={},as={},os={},is={},cs={},us={},ms={},ye={},ys={},bs={},be={},ls={},gs={},ps={},Os={},Ss={},fs={},hs={},js={},le={},zs={},ds={},ws={},As={},Us={},Ps={},Vs={},Rs={},ks={},qs={},Is={},Cs={},vs={},Es={},xs={},Ks={},Ms={},Ts={},Ds={},Fs={},_s={},$s={},yr=new Uint8Array,br=new Uint8Array([0,0,0,0,0,0,0,0]),lr=new Uint8Array,gr=new Uint8Array([0,0,0,0,0,0,240,63]),pr=new Uint8Array,Or=new Uint8Array,Sr=new Uint8Array([128,7,0,1]),fr=new Uint8Array([70,111,114,32,114,101,100,32,99,104,97,110,110,101,108,46,0]),hr=new Uint8Array,jr=new Uint8Array,zr=new Uint8Array([152,7,0,1]),dr=new Uint8Array([70,111,114,32,103,114,101,101,110,32,99,104,97,110,110,101,108,46,0]),wr=new Uint8Array,Ar=new Uint8Array,Ur=new Uint8Array([176,7,0,1]),Pr=new Uint8Array([70,111,114,32,98,108,117,101,32,99,104,97,110,110,101,108,46,0]),Vr=new Uint8Array,Rr=new Uint8Array,kr=new Uint8Array([200,7,0,1]),qr=new Uint8Array([70,111,114,32,97,108,112,104,97,32,99,104,97,110,110,101,108,46,0]),Ir=new Uint8Array,Cr=new Uint8Array([0,0,0,0,0,0,0,0]),vr=new Uint8Array,Er=new Uint8Array([0,0,0,0,0,0,0,0]),xr=new Uint8Array,Kr=new Uint8Array([0,0,0,0,0,0,0,0]),Mr=new Uint8Array,Tr=new Uint8Array([0,0,0,0,0,0,240,63]),Dr=new Uint8Array,Fr=new Uint8Array,_r=new Uint8Array([224,7,0,1]),$r=new Uint8Array([67,111,108,111,114,32,102,111,114,32,116,104,114,101,115,104,111,108,100,101,100,32,97,114,101,97,46,99,111,108,111,114,70,111,114,65,108,108,80,97,115,115,101,100,65,114,101,97,0]),Lr=new Uint8Array,Br=new Uint8Array([0,0,0,0,0,0,240,63]),Gr=new Uint8Array,Hr=new Uint8Array([0,0,0,0,0,0,240,63]),Jr=new Uint8Array,Nr=new Uint8Array([0,0,0,0,0,0,240,63]),Qr=new Uint8Array,Wr=new Uint8Array([0,0,0,0,0,0,240,63]),Xr=new Uint8Array,Yr=new Uint8Array,Zr=new Uint8Array([24,8,0,1]),tn=new Uint8Array([67,111,108,111,114,32,102,111,114,32,97,108,108,32,112,97,115,115,101,100,32,97,114,101,97,0]),en=new Uint8Array,sn=new Uint8Array,rn=new Uint8Array,nn=new Uint8Array,an=new Uint8Array,on=new Uint8Array,cn=new Uint8Array,un=new Uint8Array([4]),mn=new Uint8Array,yn=new Uint8Array,bn=new Uint8Array([10,5,0,1]),ln=new Uint8Array([110,101,116,46,111,110,116,104,101,119,105,110,103,115,46,102,105,108,116,101,114,115,0]),gn=new Uint8Array([44,5,0,1]),pn=new Uint8Array([65,110,100,121,32,76,105,0]),On=new Uint8Array,Sn=new Uint8Array([1]),fn=new Uint8Array([69,5,0,1]),hn=new Uint8Array([84,104,114,101,115,104,111,108,100,105,110,103,32,98,97,115,101,115,32,111,110,32,116,104,101,32,99,104,97,110,110,101,108,115,46,32,79,110,108,121,32,116,104,101,32,112,105,120,101,108,115,32,112,97,115,115,101,100,32,65,76,76,32,116,104,114,101,115,104,111,108,100,115,32,119,105,108,108,32,98,101,32,119,104,105,116,101,32,40,111,114,32,99,111,108,111,114,32,121,111,117,32,99,111,110,102,105,103,101,100,41,46,0]),jn=new Uint8Array,zn=new Uint8Array,dn=new Uint8Array,wn=new Uint8Array([0]),An=new Uint8Array([1]),Ls=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Un=new Uint8Array,Pn=new Uint8Array,Vn=new Uint8Array,Rn=new Uint8Array,kn=new Uint8Array([4]),ge=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Bs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),qn=new Uint8Array,In=new Uint8Array,Cn=new Uint8Array,vn=new Uint8Array,En=new Uint8Array([4]),pe=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),xn=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,0,0,0,0,128,63,0,0,0,0,0,0,128,63,0,0,0,0,0,0,128,63,0,0,0,0,0,0,128,63]),Kn=new Uint8Array([27,0]),Mn=new Uint8Array([27,0]),Tn=new Uint8Array,Dn=new Uint8Array,Fn=new Uint8Array,_n=new Uint8Array;Object.assign(fe,{slots:{0:V,1:R}});Object.assign(V,{structure:r,memory:{array:yr},const:!0,slots:{0:he}});Object.assign(he,{structure:u,memory:{array:br},const:!0});Object.assign(R,{structure:r,memory:{array:lr},const:!0,slots:{0:je}});Object.assign(je,{structure:u,memory:{array:gr},const:!0});Object.assign(ze,{slots:{0:It,1:Ct,2:vt}});Object.assign(It,{structure:s,memory:{array:pr},const:!0,slots:{0:_}});Object.assign(_,{structure:f});Object.assign(Ct,{structure:O,memory:{array:Or},const:!0,slots:{0:V,1:R}});Object.assign(vt,{structure:Z,memory:{array:Sr},const:!0,slots:{0:de}});Object.assign(de,{structure:Y,memory:{array:fr},reloc:16779136});Object.assign(we,{slots:{0:Et,1:xt,2:Kt}});Object.assign(Et,{structure:s,memory:{array:hr},const:!0,slots:{0:_}});Object.assign(xt,{structure:O,memory:{array:jr},const:!0,slots:{0:V,1:R}});Object.assign(Kt,{structure:U,memory:{array:zr},const:!0,slots:{0:Ae}});Object.assign(Ae,{structure:E,memory:{array:dr},reloc:16779160});Object.assign(Ue,{slots:{0:Mt,1:Tt,2:Dt}});Object.assign(Mt,{structure:s,memory:{array:wr},const:!0,slots:{0:_}});Object.assign(Tt,{structure:O,memory:{array:Ar},const:!0,slots:{0:V,1:R}});Object.assign(Dt,{structure:rt,memory:{array:Ur},const:!0,slots:{0:Pe}});Object.assign(Pe,{structure:st,memory:{array:Pr},reloc:16779184});Object.assign(Ve,{slots:{0:Ft,1:_t,2:$t}});Object.assign(Ft,{structure:s,memory:{array:Vr},const:!0,slots:{0:_}});Object.assign(_t,{structure:O,memory:{array:Rr},const:!0,slots:{0:V,1:R}});Object.assign($t,{structure:U,memory:{array:kr},const:!0,slots:{0:Re}});Object.assign(Re,{structure:E,memory:{array:qr},reloc:16779208});Object.assign(ke,{slots:{0:Lt,1:Bt,2:Gt,3:Ht}});Object.assign(Lt,{structure:r,memory:{array:Ir},const:!0,slots:{0:qe}});Object.assign(qe,{structure:u,memory:{array:Cr},const:!0});Object.assign(Bt,{structure:r,memory:{array:vr},const:!0,slots:{0:Ie}});Object.assign(Ie,{structure:u,memory:{array:Er},const:!0});Object.assign(Gt,{structure:r,memory:{array:xr},const:!0,slots:{0:Ce}});Object.assign(Ce,{structure:u,memory:{array:Kr},const:!0});Object.assign(Ht,{structure:r,memory:{array:Mr},const:!0,slots:{0:ve}});Object.assign(ve,{structure:u,memory:{array:Tr},const:!0});Object.assign(Ee,{slots:{0:Jt,1:Nt,2:Qt}});Object.assign(Jt,{structure:s,memory:{array:Dr},const:!0,slots:{0:$}});Object.assign($,{structure:C});Object.assign(Nt,{structure:ot,memory:{array:Fr},const:!0,slots:{0:Lt,1:Bt,2:Gt,3:Ht}});Object.assign(Qt,{structure:ct,memory:{array:_r},const:!0,slots:{0:xe}});Object.assign(xe,{structure:it,memory:{array:$r},reloc:16779232});Object.assign(Ke,{slots:{0:Wt,1:Xt,2:Yt,3:Zt}});Object.assign(Wt,{structure:r,memory:{array:Lr},const:!0,slots:{0:Me}});Object.assign(Me,{structure:u,memory:{array:Br},const:!0});Object.assign(Xt,{structure:r,memory:{array:Gr},const:!0,slots:{0:Te}});Object.assign(Te,{structure:u,memory:{array:Hr},const:!0});Object.assign(Yt,{structure:r,memory:{array:Jr},const:!0,slots:{0:De}});Object.assign(De,{structure:u,memory:{array:Nr},const:!0});Object.assign(Zt,{structure:r,memory:{array:Qr},const:!0,slots:{0:Fe}});Object.assign(Fe,{structure:u,memory:{array:Wr},const:!0});Object.assign(_e,{slots:{0:te,1:ee,2:se}});Object.assign(te,{structure:s,memory:{array:Xr},const:!0,slots:{0:$}});Object.assign(ee,{structure:mt,memory:{array:Yr},const:!0,slots:{0:Wt,1:Xt,2:Yt,3:Zt}});Object.assign(se,{structure:bt,memory:{array:Zr},const:!0,slots:{0:$e}});Object.assign($e,{structure:yt,memory:{array:tn},reloc:16779288});Object.assign(Le,{slots:{0:re,1:ne,2:ae,3:oe,4:ie,5:ce}});Object.assign(re,{structure:tt,memory:{array:en},const:!0,slots:{0:It,1:Ct,2:vt}});Object.assign(ne,{structure:et,memory:{array:sn},const:!0,slots:{0:Et,1:xt,2:Kt}});Object.assign(ae,{structure:nt,memory:{array:rn},const:!0,slots:{0:Mt,1:Tt,2:Dt}});Object.assign(oe,{structure:at,memory:{array:nn},const:!0,slots:{0:Ft,1:_t,2:$t}});Object.assign(ie,{structure:ut,memory:{array:an},const:!0,slots:{0:Jt,1:Nt,2:Qt}});Object.assign(ce,{structure:lt,memory:{array:on},const:!0,slots:{0:te,1:ee,2:se}});Object.assign(Be,{slots:{0:zt}});Object.assign(zt,{structure:g,memory:{array:cn},const:!0,slots:{0:Ge}});Object.assign(Ge,{structure:h,memory:{array:un},const:!0});Object.assign(He,{slots:{0:ue}});Object.assign(ue,{structure:P,memory:{array:mn},const:!0,slots:{0:zt}});Object.assign(Je,{slots:{0:me}});Object.assign(me,{structure:P,memory:{array:yn},const:!0,slots:{0:zt}});Object.assign(Ne,{slots:{0:Qe,1:Xe,2:Ze,3:es,4:rs,5:ns,6:as}});Object.assign(Qe,{structure:J,memory:{array:bn},const:!0,slots:{0:We}});Object.assign(We,{structure:H,memory:{array:ln},reloc:16778506});Object.assign(Xe,{structure:Q,memory:{array:gn},const:!0,slots:{0:Ye}});Object.assign(Ye,{structure:N,memory:{array:pn},reloc:16778540});Object.assign(Ze,{structure:g,memory:{array:On},const:!0,slots:{0:ts}});Object.assign(ts,{structure:h,memory:{array:Sn},const:!0});Object.assign(es,{structure:X,memory:{array:fn},const:!0,slots:{0:ss}});Object.assign(ss,{structure:W,memory:{array:hn},reloc:16778565});Object.assign(rs,{structure:gt,memory:{array:jn},const:!0,slots:{0:re,1:ne,2:ae,3:oe,4:ie,5:ce}});Object.assign(ns,{structure:pt,memory:{array:zn},const:!0,slots:{0:ue}});Object.assign(as,{structure:Ot,memory:{array:dn},const:!0,slots:{0:me}});Object.assign(os,{slots:{0:is,1:cs}});Object.assign(is,{structure:S,memory:{array:wn},const:!0});Object.assign(cs,{structure:S,memory:{array:An},const:!0});Object.assign(us,{memory:{array:Ls},slots:{0:ms}});Object.assign(ms,{structure:K,memory:{array:Ls,offset:0,length:8},slots:{0:ye}});Object.assign(ye,{structure:St,memory:{array:Un},reloc:0});Object.assign(ys,{slots:{0:bs,1:ls,2:gs}});Object.assign(bs,{structure:s,memory:{array:Pn},const:!0,slots:{0:be}});Object.assign(be,{structure:x});Object.assign(ls,{structure:s,memory:{array:Vn},const:!0,slots:{0:$}});Object.assign(gs,{structure:g,memory:{array:Rn},const:!0,slots:{0:ps}});Object.assign(ps,{structure:h,memory:{array:kn},const:!0});Object.assign(Os,{memory:{array:ge},slots:{0:Ss}});Object.assign(Ss,{structure:ft,memory:{array:ge},slots:{0:fs}});Object.assign(fs,{structure:K,memory:{array:ge,offset:0,length:8},slots:{0:ye}});Object.assign(hs,{memory:{array:Bs},slots:{0:js}});Object.assign(js,{structure:T,memory:{array:Bs,offset:0,length:8},slots:{0:le}});Object.assign(le,{structure:ht,memory:{array:qn},reloc:0});Object.assign(zs,{slots:{0:ds,1:ws,2:As}});Object.assign(ds,{structure:s,memory:{array:In},const:!0,slots:{0:be}});Object.assign(ws,{structure:s,memory:{array:Cn},const:!0,slots:{0:$}});Object.assign(As,{structure:g,memory:{array:vn},const:!0,slots:{0:Us}});Object.assign(Us,{structure:h,memory:{array:En},const:!0});Object.assign(Ps,{memory:{array:pe},slots:{0:Vs}});Object.assign(Vs,{structure:jt,memory:{array:pe},slots:{0:Rs}});Object.assign(Rs,{structure:T,memory:{array:pe,offset:0,length:8},slots:{0:le}});Object.assign(ks,{memory:{array:xn}});Object.assign(qs,{slots:{0:Is}});Object.assign(Is,{structure:w,memory:{array:Kn},const:!0});Object.assign(Cs,{slots:{0:vs}});Object.assign(vs,{structure:A,memory:{array:Mn},const:!0});Object.assign(Es,{slots:{0:xs,1:Ms,2:Ds,3:_s}});Object.assign(xs,{structure:s,memory:{array:Tn},const:!0,slots:{0:Ks}});Object.assign(Ks,{structure:Ut});Object.assign(Ms,{structure:s,memory:{array:Dn},const:!0,slots:{0:Ts}});Object.assign(Ts,{structure:M});Object.assign(Ds,{structure:s,memory:{array:Fn},const:!0,slots:{0:Fs}});Object.assign(Fs,{structure:D});Object.assign(_s,{structure:s,memory:{array:_n},const:!0,slots:{0:$s}});Object.assign($s,{structure:F});const $n={argStruct:Vt,thunkId:2,name:"createOutput"},Ln={argStruct:kt,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(m,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:m}],methods:[]}});Object.assign(H,{...e,type:1,name:"[22:0]u8",length:22,byteSize:23,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:m}],methods:[]}});Object.assign(J,{...e,type:13,name:"*const [22:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[]}});Object.assign(N,{...e,type:1,name:"[7:0]u8",length:7,byteSize:8,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:m}],methods:[]}});Object.assign(Q,{...e,type:13,name:"*const [7:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:N}],methods:[]}});Object.assign(g,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:g}],methods:[]}});Object.assign(h,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:h}],methods:[]}});Object.assign(W,{...e,type:1,name:"[112:0]u8",length:112,byteSize:113,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:m}],methods:[]}});Object.assign(X,{...e,type:13,name:"*const [112:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[]}});Object.assign(r,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(u,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:u}],methods:[]}});Object.assign(O,{...e,type:2,name:"Struct3223285779",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:r},{...t,type:7,slot:1,name:"1",structure:r}],methods:[],template:fe}});Object.assign(Y,{...e,type:1,name:"[16:0]u8",length:16,byteSize:17,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:m}],methods:[]}});Object.assign(Z,{...e,type:13,name:"*const [16:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[]}});Object.assign(I,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(f,{...e,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(tt,{...e,type:2,name:"Struct2503484956",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"defaultValue",structure:O},{...t,type:7,slot:2,name:"description",structure:Z}],methods:[],template:ze}});Object.assign(E,{...e,type:1,name:"[18:0]u8",length:18,byteSize:19,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:m}],methods:[]}});Object.assign(U,{...e,type:13,name:"*const [18:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:E}],methods:[]}});Object.assign(et,{...e,type:2,name:"Struct1651952313",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"defaultValue",structure:O},{...t,type:7,slot:2,name:"description",structure:U}],methods:[],template:we}});Object.assign(st,{...e,type:1,name:"[17:0]u8",length:17,byteSize:18,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:m}],methods:[]}});Object.assign(rt,{...e,type:13,name:"*const [17:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:st}],methods:[]}});Object.assign(nt,{...e,type:2,name:"Struct1396365298",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"defaultValue",structure:O},{...t,type:7,slot:2,name:"description",structure:rt}],methods:[],template:Ue}});Object.assign(at,{...e,type:2,name:"Struct3662467759",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"defaultValue",structure:O},{...t,type:7,slot:2,name:"description",structure:U}],methods:[],template:Ve}});Object.assign(ot,{...e,type:2,name:"Struct2874091690",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:r},{...t,type:7,slot:1,name:"1",structure:r},{...t,type:7,slot:2,name:"2",structure:r},{...t,type:7,slot:3,name:"3",structure:r}],methods:[],template:ke}});Object.assign(it,{...e,type:1,name:"[48:0]u8",length:48,byteSize:49,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:m}],methods:[]}});Object.assign(ct,{...e,type:13,name:"*const [48:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:it}],methods:[]}});Object.assign(C,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(ut,{...e,type:2,name:"Struct617544428",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"defaultValue",structure:ot},{...t,type:7,slot:2,name:"description",structure:ct}],methods:[],template:Ee}});Object.assign(mt,{...e,type:2,name:"Struct2121898850",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:r},{...t,type:7,slot:1,name:"1",structure:r},{...t,type:7,slot:2,name:"2",structure:r},{...t,type:7,slot:3,name:"3",structure:r}],methods:[],template:Ke}});Object.assign(yt,{...e,type:1,name:"[25:0]u8",length:25,byteSize:26,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:m}],methods:[]}});Object.assign(bt,{...e,type:13,name:"*const [25:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:yt}],methods:[]}});Object.assign(lt,{...e,type:2,name:"Struct1022917282",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"defaultValue",structure:mt},{...t,type:7,slot:2,name:"description",structure:bt}],methods:[],template:_e}});Object.assign(gt,{...e,type:2,name:"Struct362801558",align:1,instance:{members:[{...t,type:7,slot:0,name:"threshold0",structure:tt},{...t,type:7,slot:1,name:"threshold1",structure:et},{...t,type:7,slot:2,name:"threshold2",structure:nt},{...t,type:7,slot:3,name:"threshold3",structure:at},{...t,type:7,slot:4,name:"outputColor1",structure:ut},{...t,type:7,slot:5,name:"outputColor2",structure:lt}],methods:[],template:Le}});Object.assign(P,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:g}],methods:[],template:Be}});Object.assign(pt,{...e,type:2,name:"Struct4227900966",align:1,instance:{members:[{...t,type:7,slot:0,name:"source",structure:P}],methods:[],template:He}});Object.assign(Ot,{...e,type:2,name:"Struct1665656598",align:1,instance:{members:[{...t,type:7,slot:0,name:"target",structure:P}],methods:[],template:Je}});Object.assign(Ut,{...e,type:2,name:"channel-threshold.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:J},{...t,type:7,slot:1,name:"vendor",structure:Q},{...t,type:7,slot:2,name:"version",structure:g},{...t,type:7,slot:3,name:"description",structure:X},{...t,type:7,slot:4,name:"parameters",structure:gt},{...t,type:7,slot:5,name:"inputImages",structure:pt},{...t,type:7,slot:6,name:"outputImages",structure:Ot}],methods:[],template:Ne}});Object.assign(x,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:m}],methods:[]}});Object.assign(St,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:x}],methods:[]}});Object.assign(K,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:St}],methods:[]}});Object.assign(c,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[]}});Object.assign(S,{...e,type:11,name:"channel-threshold.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:S}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:S},{...t,type:7,slot:1,name:"display-p3",structure:S}],methods:[],template:os}});Object.assign(v,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:v}],methods:[]}});Object.assign(ft,{...e,type:2,name:"channel-threshold.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:K},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:S},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:v}],methods:[],template:us},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:g}],methods:[],template:ys}});Object.assign(M,{...e,type:2,name:"channel-threshold.KernelInput(u8,channel-threshold.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"source",structure:ft}],methods:[],template:Os}});Object.assign(ht,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:x}],methods:[]}});Object.assign(T,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:ht}],methods:[]}});Object.assign(jt,{...e,type:2,name:"channel-threshold.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:T},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:S},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:v}],methods:[],template:hs},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:g}],methods:[],template:zs}});Object.assign(D,{...e,type:2,name:"channel-threshold.KernelOutput(u8,channel-threshold.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"target",structure:jt}],methods:[],template:Ps}});Object.assign(F,{...e,type:2,name:"channel-threshold.KernelParameters(channel-threshold.kernel)",byteSize:64,align:16,instance:{members:[{...t,type:5,bitOffset:256,bitSize:64,byteSize:8,slot:0,name:"threshold0",structure:f},{...t,type:5,bitOffset:320,bitSize:64,byteSize:8,slot:1,name:"threshold1",structure:f},{...t,type:5,bitOffset:384,bitSize:64,byteSize:8,slot:2,name:"threshold2",structure:f},{...t,type:5,bitOffset:448,bitSize:64,byteSize:8,slot:3,name:"threshold3",structure:f},{...t,type:5,bitOffset:0,bitSize:128,byteSize:16,slot:4,name:"outputColor1",structure:C},{...t,type:5,bitOffset:128,bitSize:128,byteSize:16,slot:5,name:"outputColor2",structure:C}],methods:[],template:ks}});Object.assign(w,{...e,type:10,name:"ErrorSet2390801309",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:w}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:w}],methods:[],template:qs}});Object.assign(Pt,{...e,type:9,name:"ErrorSet2390801309!channel-threshold.KernelOutput(u8,channel-threshold.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:D},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:w}],methods:[]}});Object.assign(Vt,{...e,type:5,name:"createOutput",byteSize:128,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:512,bitSize:32,byteSize:4,slot:3,name:"0",structure:c},{...t,type:3,isRequired:!0,bitOffset:544,bitSize:32,byteSize:4,slot:4,name:"1",structure:c},{...t,type:5,isRequired:!0,bitOffset:576,bitSize:192,byteSize:24,slot:0,name:"2",structure:M},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:512,byteSize:64,slot:1,name:"3",structure:F},{...t,type:5,isRequired:!0,bitOffset:768,bitSize:224,byteSize:28,slot:2,name:"retval",structure:Pt}],methods:[]}});Object.assign(A,{...e,type:10,name:"ErrorSet659590885",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:A}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:A}],methods:[],template:Cs}});Object.assign(Rt,{...e,type:9,name:"ErrorSet659590885!channel-threshold.KernelOutput(u8,channel-threshold.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:D},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:A}],methods:[]}});Object.assign(kt,{...e,type:5,name:"createPartialOutput",byteSize:144,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:512,bitSize:32,byteSize:4,slot:3,name:"0",structure:c},{...t,type:3,isRequired:!0,bitOffset:544,bitSize:32,byteSize:4,slot:4,name:"1",structure:c},{...t,type:3,isRequired:!0,bitOffset:576,bitSize:32,byteSize:4,slot:5,name:"2",structure:c},{...t,type:3,isRequired:!0,bitOffset:608,bitSize:32,byteSize:4,slot:6,name:"3",structure:c},{...t,type:5,isRequired:!0,bitOffset:640,bitSize:192,byteSize:24,slot:0,name:"4",structure:M},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:512,byteSize:64,slot:1,name:"5",structure:F},{...t,type:5,isRequired:!0,bitOffset:832,bitSize:224,byteSize:28,slot:2,name:"retval",structure:Rt}],methods:[]}});Object.assign(qt,{...e,type:2,name:"channel-threshold",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:s},{...t,type:7,slot:1,name:"Input",structure:s},{...t,type:7,slot:2,name:"Output",structure:s},{...t,type:7,slot:3,name:"Parameters",structure:s}],methods:[$n,Ln],template:Es}});const Bn=[s,m,H,J,N,Q,g,h,W,X,r,u,O,Y,Z,I,f,tt,E,U,et,st,rt,nt,at,ot,it,ct,C,ut,mt,yt,bt,lt,gt,P,pt,Ot,Ut,x,St,K,c,S,v,ft,M,ht,T,jt,D,F,w,Pt,Vt,A,Rt,kt,qt],Gn=qt,Hn={runtimeSafety:!1,littleEndian:!0},dt=rr();dt.getSpecialExports();dt.recreateStructures(Bn,Hn);const Jn=(async()=>{const o=new URL("channel-threshold-a03a992f.wasm",import.meta.url).href;return fetch(o)})();dt.loadModule(Jn);dt.linkVariables(!0);const{constructor:Nn}=Gn,{createPartialOutput:Qn,Input:Wn,kernel:At}=Nn;function Xn(o,y,i,a,n={},j={}){const z=[];for(const[l]of At.inputImages)z.push(l);const k=[];for(const[l]of At.outputImages)k.push(l);if(Array.isArray(n)){const l=n;n={};for(const[p,d]of z.entries())n[d]=l[p]}const b=new Wn(void 0),L=[];let q;for(const l of z){let p=n[l];if(p||(z.length===1&&["data","width","height"].every(d=>!!n[d])?p=n:L.push(l)),b[l]=p,q){if(p.colorSpace!==q)throw new Error(`Input images must all use the same color space: ${q}`)}else q=p.colorSpace}if(L.length>0)throw new Error(`Missing input image${L.length>1?"s":""}: ${L.join(", ")}`);const wt=Qn(o,y,i,a,b,j),Oe=l=>{const p={};for(const d of k){const{data:{typedArray:B},width:Se,height:Gs}=l[d];let G;if(typeof ImageData=="function"){const Hs=new Uint8ClampedArray(B.buffer,B.byteOffset,B.byteLength);G=new ImageData(Hs,Se,a,{colorSpace:q})}else G={data:B,width:Se,height:Gs};if(k.length===1)return G;p[d]=G}return p};return wt[Symbol.toStringTag]==="Promise"?wt.then(Oe):Oe(wt)}function Yn(){const o={};for(let[y,i]of At){if(y==="parameters"){const a={};for(const[n,j]of i){const z=a[n]={};for(let[k,b]of j)typeof b=="object"?b=b.string??b.valueOf():typeof b=="function"&&(b=Zn(b.name)),z[k]=b}i=a}else typeof i=="object"&&(i=i.string??i.valueOf());o[y]=i}return o}function Zn(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=async o=>{if(!Array.isArray(o.data))return;const[y,i,...a]=o.data;try{const[n,j]=await ta(y,a);postMessage([y,i,n],{transfer:j})}catch(n){postMessage(["error",i,n])}};async function ta(o,y){switch(o){case"getKernelInfo":return[Yn(...y)];case"createPartialImageData":const a=await Xn(...y),n=[];if("data"in a&&"width"in a&&"height"in a)n.push(a.data.buffer);else for(const j of Object.entries(a))n.push(a.data.buffer);return[a,n];default:throw new Error(`Unknown function: ${o}`)}}postMessage("ready");
