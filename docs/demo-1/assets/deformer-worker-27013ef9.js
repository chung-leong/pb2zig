import{u as hs,a as ws,b as As,c as Us,d as Vs,e as Ps,f as Rs,g as ks,h as qs,i as Is,j as xs,k as vs,l as Es,m as Cs,n as Ks,o as _s,p as Ds,q as Ms}from"./index-270629a1.js";hs();vs();Es();ws();As();Cs();Ks();_s();Ds();Us();Vs();Ps();Rs();Ms();ks();qs();Is();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},f={},$={},H={},I={},A={},a={},p={},L={},B={},r={},x={},U={},S={},m={},G={},J={},N={},Q={},W={},k={},X={},Y={},V={},Z={},tt={},mt={},v={},et={},E={},u={},O={},q={},yt={},st={},C={},rt={},K={},nt={},_={},D={},h={},bt={},lt={},w={},gt={},pt={},Ot={},Xt={},ft={},at={},St={},Yt={},jt={},Zt={},zt={},te={},dt={},ee={},se={},ht={},wt={},re={},At={},ne={},Ut={},ae={},Vt={},oe={},ie={},Pt={},Rt={},ce={},kt={},ue={},qt={},me={},It={},ye={},be={},xt={},le={},vt={},ge={},Et={},pe={},Ct={},Oe={},Kt={},fe={},Se={},_t={},Dt={},Mt={},Ft={},je={},ot={},ze={},de={},Tt={},he={},$t={},we={},Ae={},Ue={},Ve={},Pe={},Re={},ke={},qe={},Ie={},xe={},ve={},Ee={},Ce={},Ke={},_e={},De={},Me={},Ht={},Fe={},Te={},Lt={},$e={},Bt={},He={},Le={},Be={},Ge={},Je={},Ne={},Qe={},Gt={},We={},Xe={},Ye={},Ze={},ts={},es={},ss={},rs={},ns={},as={},os={},is={},cs={},us={},ms={},ys={},bs={},ls={},gs={},ps={},Os={},fs={},Fs=new Uint8Array,Ts=new Uint8Array,$s=new Uint8Array([0,0,0,0,0,192,102,64]),Hs=new Uint8Array,Ls=new Uint8Array([0,0,0,0,0,32,111,64]),Bs=new Uint8Array,Gs=new Uint8Array([20,174,71,225,122,148,105,64]),Js=new Uint8Array([52,18,0,1]),Ns=new Uint8Array([99,101,110,116,101,114,32,112,111,105,110,116,32,120,0]),Qs=new Uint8Array,Ws=new Uint8Array,Xs=new Uint8Array([0,0,0,0,0,192,99,64]),Ys=new Uint8Array,Zs=new Uint8Array([0,0,0,0,0,32,111,64]),tr=new Uint8Array,er=new Uint8Array([133,235,81,184,30,197,102,64]),sr=new Uint8Array([92,18,0,1]),rr=new Uint8Array([99,101,110,116,101,114,32,112,111,105,110,116,32,121,0]),nr=new Uint8Array,ar=new Uint8Array,or=new Uint8Array([0,0,0,0,0,0,240,63]),ir=new Uint8Array,cr=new Uint8Array([0,0,0,0,0,160,159,64]),ur=new Uint8Array,mr=new Uint8Array([0,0,0,0,0,48,116,64]),yr=new Uint8Array([140,18,0,1]),br=new Uint8Array([115,101,116,32,105,109,97,103,101,32,104,101,105,103,104,116,0]),lr=new Uint8Array,gr=new Uint8Array,pr=new Uint8Array([1]),Or=new Uint8Array,fr=new Uint8Array([3]),Sr=new Uint8Array,jr=new Uint8Array([2]),zr=new Uint8Array([164,18,0,1]),dr=new Uint8Array([99,97,108,99,117,108,97,116,101,32,115,116,114,101,116,99,104,40,101,115,41,0]),hr=new Uint8Array,wr=new Uint8Array,Ar=new Uint8Array,Ur=new Uint8Array,Vr=new Uint8Array,Pr=new Uint8Array([4]),Rr=new Uint8Array,kr=new Uint8Array,qr=new Uint8Array([48,16,0,1]),Ir=new Uint8Array([100,101,102,111,114,109,101,114,0]),xr=new Uint8Array([68,16,0,1]),vr=new Uint8Array([70,114,97,110,107,32,82,101,105,116,98,101,114,103,101,114,0]),Er=new Uint8Array,Cr=new Uint8Array([1]),Kr=new Uint8Array([102,16,0,1]),_r=new Uint8Array([100,101,102,111,114,109,115,32,119,104,97,116,101,118,101,114,32,103,101,116,239,191,189,115,32,105,110,32,116,104,101,32,119,97,121,46,0]),Dr=new Uint8Array,Mr=new Uint8Array,Fr=new Uint8Array,Tr=new Uint8Array([0]),$r=new Uint8Array([1]),Ss=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Hr=new Uint8Array,Lr=new Uint8Array,Br=new Uint8Array,Gr=new Uint8Array,Jr=new Uint8Array([4]),Jt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),js=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Nr=new Uint8Array,Qr=new Uint8Array,Wr=new Uint8Array,Xr=new Uint8Array,Yr=new Uint8Array([4]),Nt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Zr=new Uint8Array([215,163,76,67,246,40,54,67,0,128,161,67,2,0,0,0]),tn=new Uint8Array([27,0]),en=new Uint8Array([27,0]),sn=new Uint8Array,rn=new Uint8Array,nn=new Uint8Array,an=new Uint8Array;Object.assign(Xt,{slots:{0:ft,1:St,2:jt,3:zt,4:dt}});Object.assign(ft,{structure:s,memory:{array:Fs},const:!0,slots:{0:at}});Object.assign(at,{structure:S});Object.assign(St,{structure:r,memory:{array:Ts},const:!0,slots:{0:Yt}});Object.assign(Yt,{structure:m,memory:{array:$s},const:!0});Object.assign(jt,{structure:r,memory:{array:Hs},const:!0,slots:{0:Zt}});Object.assign(Zt,{structure:m,memory:{array:Ls},const:!0});Object.assign(zt,{structure:r,memory:{array:Bs},const:!0,slots:{0:te}});Object.assign(te,{structure:m,memory:{array:Gs},const:!0});Object.assign(dt,{structure:U,memory:{array:Js},const:!0,slots:{0:ee}});Object.assign(ee,{structure:x,memory:{array:Ns},reloc:16781876});Object.assign(se,{slots:{0:ht,1:wt,2:At,3:Ut,4:Vt}});Object.assign(ht,{structure:s,memory:{array:Qs},const:!0,slots:{0:at}});Object.assign(wt,{structure:r,memory:{array:Ws},const:!0,slots:{0:re}});Object.assign(re,{structure:m,memory:{array:Xs},const:!0});Object.assign(At,{structure:r,memory:{array:Ys},const:!0,slots:{0:ne}});Object.assign(ne,{structure:m,memory:{array:Zs},const:!0});Object.assign(Ut,{structure:r,memory:{array:tr},const:!0,slots:{0:ae}});Object.assign(ae,{structure:m,memory:{array:er},const:!0});Object.assign(Vt,{structure:U,memory:{array:sr},const:!0,slots:{0:oe}});Object.assign(oe,{structure:x,memory:{array:rr},reloc:16781916});Object.assign(ie,{slots:{0:Pt,1:Rt,2:kt,3:qt,4:It}});Object.assign(Pt,{structure:s,memory:{array:nr},const:!0,slots:{0:at}});Object.assign(Rt,{structure:r,memory:{array:ar},const:!0,slots:{0:ce}});Object.assign(ce,{structure:m,memory:{array:or},const:!0});Object.assign(kt,{structure:r,memory:{array:ir},const:!0,slots:{0:ue}});Object.assign(ue,{structure:m,memory:{array:cr},const:!0});Object.assign(qt,{structure:r,memory:{array:ur},const:!0,slots:{0:me}});Object.assign(me,{structure:m,memory:{array:mr},const:!0});Object.assign(It,{structure:A,memory:{array:yr},const:!0,slots:{0:ye}});Object.assign(ye,{structure:I,memory:{array:br},reloc:16781964});Object.assign(be,{slots:{0:xt,1:vt,2:Et,3:Ct,4:Kt}});Object.assign(xt,{structure:s,memory:{array:lr},const:!0,slots:{0:le}});Object.assign(le,{structure:k});Object.assign(vt,{structure:a,memory:{array:gr},const:!0,slots:{0:ge}});Object.assign(ge,{structure:p,memory:{array:pr},const:!0});Object.assign(Et,{structure:a,memory:{array:Or},const:!0,slots:{0:pe}});Object.assign(pe,{structure:p,memory:{array:fr},const:!0});Object.assign(Ct,{structure:a,memory:{array:Sr},const:!0,slots:{0:Oe}});Object.assign(Oe,{structure:p,memory:{array:jr},const:!0});Object.assign(Kt,{structure:W,memory:{array:zr},const:!0,slots:{0:fe}});Object.assign(fe,{structure:Q,memory:{array:dr},reloc:16781988});Object.assign(Se,{slots:{0:_t,1:Dt,2:Mt,3:Ft}});Object.assign(_t,{structure:G,memory:{array:hr},const:!0,slots:{0:ft,1:St,2:jt,3:zt,4:dt}});Object.assign(Dt,{structure:J,memory:{array:wr},const:!0,slots:{0:ht,1:wt,2:At,3:Ut,4:Vt}});Object.assign(Mt,{structure:N,memory:{array:Ar},const:!0,slots:{0:Pt,1:Rt,2:kt,3:qt,4:It}});Object.assign(Ft,{structure:X,memory:{array:Ur},const:!0,slots:{0:xt,1:vt,2:Et,3:Ct,4:Kt}});Object.assign(je,{slots:{0:ot}});Object.assign(ot,{structure:a,memory:{array:Vr},const:!0,slots:{0:ze}});Object.assign(ze,{structure:p,memory:{array:Pr},const:!0});Object.assign(de,{slots:{0:Tt}});Object.assign(Tt,{structure:V,memory:{array:Rr},const:!0,slots:{0:ot}});Object.assign(he,{slots:{0:$t}});Object.assign($t,{structure:V,memory:{array:kr},const:!0,slots:{0:ot}});Object.assign(we,{slots:{0:Ae,1:Ve,2:Re,3:qe,4:xe,5:ve,6:Ee}});Object.assign(Ae,{structure:H,memory:{array:qr},const:!0,slots:{0:Ue}});Object.assign(Ue,{structure:$,memory:{array:Ir},reloc:16781360});Object.assign(Ve,{structure:A,memory:{array:xr},const:!0,slots:{0:Pe}});Object.assign(Pe,{structure:I,memory:{array:vr},reloc:16781380});Object.assign(Re,{structure:a,memory:{array:Er},const:!0,slots:{0:ke}});Object.assign(ke,{structure:p,memory:{array:Cr},const:!0});Object.assign(qe,{structure:B,memory:{array:Kr},const:!0,slots:{0:Ie}});Object.assign(Ie,{structure:L,memory:{array:_r},reloc:16781414});Object.assign(xe,{structure:Y,memory:{array:Dr},const:!0,slots:{0:_t,1:Dt,2:Mt,3:Ft}});Object.assign(ve,{structure:Z,memory:{array:Mr},const:!0,slots:{0:Tt}});Object.assign(Ee,{structure:tt,memory:{array:Fr},const:!0,slots:{0:$t}});Object.assign(Ce,{slots:{0:Ke,1:_e}});Object.assign(Ke,{structure:O,memory:{array:Tr},const:!0});Object.assign(_e,{structure:O,memory:{array:$r},const:!0});Object.assign(De,{memory:{array:Ss},slots:{0:Me}});Object.assign(Me,{structure:E,memory:{array:Ss,offset:0,length:8},slots:{0:Ht}});Object.assign(Ht,{structure:et,memory:{array:Hr},reloc:0});Object.assign(Fe,{slots:{0:Te,1:$e,2:He}});Object.assign(Te,{structure:s,memory:{array:Lr},const:!0,slots:{0:Lt}});Object.assign(Lt,{structure:v});Object.assign($e,{structure:s,memory:{array:Br},const:!0,slots:{0:Bt}});Object.assign(Bt,{structure:yt});Object.assign(He,{structure:a,memory:{array:Gr},const:!0,slots:{0:Le}});Object.assign(Le,{structure:p,memory:{array:Jr},const:!0});Object.assign(Be,{memory:{array:Jt},slots:{0:Ge}});Object.assign(Ge,{structure:st,memory:{array:Jt},slots:{0:Je}});Object.assign(Je,{structure:E,memory:{array:Jt,offset:0,length:8},slots:{0:Ht}});Object.assign(Ne,{memory:{array:js},slots:{0:Qe}});Object.assign(Qe,{structure:K,memory:{array:js,offset:0,length:8},slots:{0:Gt}});Object.assign(Gt,{structure:rt,memory:{array:Nr},reloc:0});Object.assign(We,{slots:{0:Xe,1:Ye,2:Ze}});Object.assign(Xe,{structure:s,memory:{array:Qr},const:!0,slots:{0:Lt}});Object.assign(Ye,{structure:s,memory:{array:Wr},const:!0,slots:{0:Bt}});Object.assign(Ze,{structure:a,memory:{array:Xr},const:!0,slots:{0:ts}});Object.assign(ts,{structure:p,memory:{array:Yr},const:!0});Object.assign(es,{memory:{array:Nt},slots:{0:ss}});Object.assign(ss,{structure:nt,memory:{array:Nt},slots:{0:rs}});Object.assign(rs,{structure:K,memory:{array:Nt,offset:0,length:8},slots:{0:Gt}});Object.assign(ns,{memory:{array:Zr}});Object.assign(as,{slots:{0:os}});Object.assign(os,{structure:h,memory:{array:tn},const:!0});Object.assign(is,{slots:{0:cs}});Object.assign(cs,{structure:w,memory:{array:en},const:!0});Object.assign(us,{slots:{0:ms,1:bs,2:gs,3:Os}});Object.assign(ms,{structure:s,memory:{array:sn},const:!0,slots:{0:ys}});Object.assign(ys,{structure:mt});Object.assign(bs,{structure:s,memory:{array:rn},const:!0,slots:{0:ls}});Object.assign(ls,{structure:C});Object.assign(gs,{structure:s,memory:{array:nn},const:!0,slots:{0:ps}});Object.assign(ps,{structure:_});Object.assign(Os,{structure:s,memory:{array:an},const:!0,slots:{0:fs}});Object.assign(fs,{structure:D});const on={argStruct:lt,thunkId:2,name:"createOutput"},cn={argStruct:pt,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(f,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign($,{...e,type:1,name:"[8:0]u8",length:8,byteSize:9,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(H,{...e,type:13,name:"*const [8:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[]}});Object.assign(I,{...e,type:1,name:"[16:0]u8",length:16,byteSize:17,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(A,{...e,type:13,name:"*const [16:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:I}],methods:[]}});Object.assign(a,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:a}],methods:[]}});Object.assign(p,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(L,{...e,type:1,name:"[36:0]u8",length:36,byteSize:37,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(B,{...e,type:13,name:"*const [36:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[]}});Object.assign(r,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(x,{...e,type:1,name:"[14:0]u8",length:14,byteSize:15,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(U,{...e,type:13,name:"*const [14:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:x}],methods:[]}});Object.assign(S,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(m,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:m}],methods:[]}});Object.assign(G,{...e,type:2,name:"Struct3634399580",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:r},{...t,type:7,slot:2,name:"maxValue",structure:r},{...t,type:7,slot:3,name:"defaultValue",structure:r},{...t,type:7,slot:4,name:"description",structure:U}],methods:[],template:Xt}});Object.assign(J,{...e,type:2,name:"Struct3192383015",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:r},{...t,type:7,slot:2,name:"maxValue",structure:r},{...t,type:7,slot:3,name:"defaultValue",structure:r},{...t,type:7,slot:4,name:"description",structure:U}],methods:[],template:se}});Object.assign(N,{...e,type:2,name:"Struct159051341",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:r},{...t,type:7,slot:2,name:"maxValue",structure:r},{...t,type:7,slot:3,name:"defaultValue",structure:r},{...t,type:7,slot:4,name:"description",structure:A}],methods:[],template:ie}});Object.assign(Q,{...e,type:1,name:"[21:0]u8",length:21,byteSize:22,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(W,{...e,type:13,name:"*const [21:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[]}});Object.assign(k,{...e,name:"i32",byteSize:4,align:4,instance:{members:[{...t,type:2,bitOffset:0,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(X,{...e,type:2,name:"Struct2458889317",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:a},{...t,type:7,slot:2,name:"maxValue",structure:a},{...t,type:7,slot:3,name:"defaultValue",structure:a},{...t,type:7,slot:4,name:"description",structure:W}],methods:[],template:be}});Object.assign(Y,{...e,type:2,name:"Struct4255862122",align:1,instance:{members:[{...t,type:7,slot:0,name:"center_x",structure:G},{...t,type:7,slot:1,name:"center_y",structure:J},{...t,type:7,slot:2,name:"imageHeight",structure:N},{...t,type:7,slot:3,name:"stretch",structure:X}],methods:[],template:Se}});Object.assign(V,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:a}],methods:[],template:je}});Object.assign(Z,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:7,slot:0,name:"src",structure:V}],methods:[],template:de}});Object.assign(tt,{...e,type:2,name:"Struct199712073",align:1,instance:{members:[{...t,type:7,slot:0,name:"pxl",structure:V}],methods:[],template:he}});Object.assign(mt,{...e,type:2,name:"deformer.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:H},{...t,type:7,slot:1,name:"vendor",structure:A},{...t,type:7,slot:2,name:"version",structure:a},{...t,type:7,slot:3,name:"description",structure:B},{...t,type:7,slot:4,name:"parameters",structure:Y},{...t,type:7,slot:5,name:"inputImages",structure:Z},{...t,type:7,slot:6,name:"outputImages",structure:tt}],methods:[],template:we}});Object.assign(v,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(et,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:v}],methods:[]}});Object.assign(E,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:et}],methods:[]}});Object.assign(u,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:u}],methods:[]}});Object.assign(O,{...e,type:11,name:"deformer.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:O}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:O},{...t,type:7,slot:1,name:"display-p3",structure:O}],methods:[],template:Ce}});Object.assign(q,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:q}],methods:[]}});Object.assign(yt,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(st,{...e,type:2,name:"deformer.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:E},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:q}],methods:[],template:De},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:a}],methods:[],template:Fe}});Object.assign(C,{...e,type:2,name:"deformer.KernelInput(u8,deformer.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:st}],methods:[],template:Be}});Object.assign(rt,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:v}],methods:[]}});Object.assign(K,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:rt}],methods:[]}});Object.assign(nt,{...e,type:2,name:"deformer.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:K},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:q}],methods:[],template:Ne},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:a}],methods:[],template:We}});Object.assign(_,{...e,type:2,name:"deformer.KernelOutput(u8,deformer.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"pxl",structure:nt}],methods:[],template:es}});Object.assign(D,{...e,type:2,name:"deformer.KernelParameters(deformer.kernel)",byteSize:16,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"center_x",structure:S},{...t,type:4,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"center_y",structure:S},{...t,type:4,bitOffset:64,bitSize:32,byteSize:4,slot:2,name:"imageHeight",structure:S},{...t,type:2,bitOffset:96,bitSize:32,byteSize:4,slot:3,name:"stretch",structure:k}],methods:[],template:ns}});Object.assign(h,{...e,type:10,name:"ErrorSet155116655",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:h}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:h}],methods:[],template:as}});Object.assign(bt,{...e,type:9,name:"ErrorSet155116655!deformer.KernelOutput(u8,deformer.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:_},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:h}],methods:[]}});Object.assign(lt,{...e,type:5,name:"createOutput",byteSize:76,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...t,type:5,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:C},{...t,type:5,isRequired:!0,bitOffset:256,bitSize:128,byteSize:16,slot:1,name:"3",structure:D},{...t,type:5,isRequired:!0,bitOffset:384,bitSize:224,byteSize:28,slot:2,name:"retval",structure:bt}],methods:[]}});Object.assign(w,{...e,type:10,name:"ErrorSet2921334905",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:w}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:w}],methods:[],template:is}});Object.assign(gt,{...e,type:9,name:"ErrorSet2921334905!deformer.KernelOutput(u8,deformer.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:_},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:w}],methods:[]}});Object.assign(pt,{...e,type:5,name:"createPartialOutput",byteSize:84,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:u},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:u},{...t,type:5,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:C},{...t,type:5,isRequired:!0,bitOffset:320,bitSize:128,byteSize:16,slot:1,name:"5",structure:D},{...t,type:5,isRequired:!0,bitOffset:448,bitSize:224,byteSize:28,slot:2,name:"retval",structure:gt}],methods:[]}});Object.assign(Ot,{...e,type:2,name:"deformer",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:s},{...t,type:7,slot:1,name:"Input",structure:s},{...t,type:7,slot:2,name:"Output",structure:s},{...t,type:7,slot:3,name:"Parameters",structure:s}],methods:[on,cn],template:us}});const un=[s,f,$,H,I,A,a,p,L,B,r,x,U,S,m,G,J,N,Q,W,k,X,Y,V,Z,tt,mt,v,et,E,u,O,q,yt,st,C,rt,K,nt,_,D,h,bt,lt,w,gt,pt,Ot],mn=Ot,yn={runtimeSafety:!1,littleEndian:!0},it=xs();it.getSpecialExports();it.recreateStructures(un,yn);const bn=(async()=>{const i=new URL("deformer-87b58200.wasm",import.meta.url).href;return fetch(i)})();it.loadModule(bn);it.linkVariables(!0);const{constructor:ln}=mn,{createPartialOutput:gn,Input:pn,kernel:ut}=ln;function On(i,y,c,o,n={},j={}){const z=[];for(const[l]of ut.inputImages)z.push(l);const P=[];for(const[l]of ut.outputImages)P.push(l);if(Array.isArray(n)){const l=n;n={};for(const[g,d]of z.entries())n[d]=l[g]}const b=new pn(void 0),M=[];let R;for(const l of z){let g=n[l];if(g||(z.length===1&&["data","width","height"].every(d=>!!n[d])?g=n:M.push(l)),b[l]=g,R){if(g.colorSpace!==R)throw new Error(`Input images must all use the same color space: ${R}`)}else R=g.colorSpace}if(M.length>0)throw new Error(`Missing input image${M.length>1?"s":""}: ${M.join(", ")}`);const ct=gn(i,y,c,o,b,j),Qt=l=>{const g={};for(const d of P){const{data:{typedArray:F},width:Wt,height:zs}=l[d];let T;if(typeof ImageData=="function"){const ds=new Uint8ClampedArray(F.buffer,F.byteOffset,F.byteLength);T=new ImageData(ds,Wt,o,{colorSpace:R})}else T={data:F,width:Wt,height:zs};if(P.length===1)return T;g[d]=T}return g};return ct[Symbol.toStringTag]==="Promise"?ct.then(Qt):Qt(ct)}function fn(){const i={};for(let[y,c]of ut){if(y==="parameters"){const o={};for(const[n,j]of c){const z=o[n]={};for(let[P,b]of j)typeof b=="object"?b=b.string??b.valueOf():typeof b=="function"&&(b=Sn(b.name)),z[P]=b}c=o}else typeof c=="object"&&(c=c.string??c.valueOf());i[y]=c}return i}function Sn(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[y,c,...o]=i.data;jn(y,o).then(([n,j])=>{postMessage([y,c,n],{transfer:j})}).catch(n=>{postMessage(["error",c,n])})};async function jn(i,y){switch(i){case"getKernelInfo":return[fn(...y)];case"createPartialImageData":const o=await On(...y),n=[];if("data"in o&&"width"in o&&"height"in o)n.push(o.data.buffer);else for(const j of Object.entries(o))n.push(o.data.buffer);return[o,n];default:throw new Error(`Unknown function: ${i}`)}}
