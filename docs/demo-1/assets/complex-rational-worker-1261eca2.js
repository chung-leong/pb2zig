import{u as it,a as ut,b as ot,d as mt,c as lt,e as yt,f as ct,g as bt,h as pt,i as ft,j as dt,k as St,l as ht,m as gt,o as zt,n as wt,p as At,q as Ut}from"./index-d64bc850.js";it();ut();ot();mt();lt();yt();ct();bt();pt();ft();dt();St();ht();gt();zt();wt();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},S={},me={},le={},K={},ye={},ce={},D={},b={},p={},be={},pe={},F={},R={},l={},s={},r={},fe={},M={},de={},_={},Se={},T={},he={},$={},ge={},B={},ze={},L={},we={},G={},Ae={},H={},Ue={},J={},A={},d={},Oe={},N={},Re={},Q={},qe={},W={},je={},X={},Pe={},Y={},Ve={},Z={},j={},z={},Ce={},ee={},xe={},te={},ke={},re={},Ie={},se={},ve={},ae={},P={},w={},Ee={},ne={},Ke={},ie={},Ge={},U={},De={},Fe={},y={},Me={},q={},_e={},ue={},V={},Te={},$e={},oe={},C={},x={},He={},Je={},Ne={},Qe={},We={},Xe={},Ye={};Object.assign(S,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:5});Object.assign(me,{...t,type:1,name:"[16:0]u8",length:16,byteSize:17,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:4});Object.assign(le,{...t,type:11,name:"*const [16:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:3});Object.assign(K,{...t,type:11,name:"*const *const [16:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:2});Object.assign(ye,{...t,type:1,name:"[8:0]u8",length:8,byteSize:9,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:8});Object.assign(ce,{...t,type:11,name:"*const [8:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:7});Object.assign(D,{...t,type:11,name:"*const *const [8:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:6});Object.assign(b,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:10});Object.assign(p,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:b}],methods:[],template:null},slot:9});Object.assign(be,{...t,type:1,name:"[37:0]u8",length:37,byteSize:38,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:13});Object.assign(pe,{...t,type:11,name:"*const [37:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:12});Object.assign(F,{...t,type:11,name:"*const *const [37:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:11});Object.assign(R,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:R}],methods:[],template:null},slot:52});Object.assign(l,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:R}],methods:[],template:null},slot:32});Object.assign(s,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:s}],methods:[],template:null},slot:86});Object.assign(r,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:s}],methods:[],template:null},slot:85});const Ot=new Uint8Array,Rt=new Uint8Array([16,252,15,0]),qt=new Uint8Array([0,0,0,0,0,0,36,192]),jt=new Uint8Array([56,252,15,0]),Pt=new Uint8Array([0,0,0,0,0,0,36,192]);Object.assign(fe,{...t,type:2,name:"Struct0035",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Ot},slots:{0:{structure:r,memory:{array:Rt},slots:{0:{structure:s,memory:{array:qt}}}},1:{structure:r,memory:{array:jt},slots:{0:{structure:s,memory:{array:Pt}}}}}}},slot:56});Object.assign(M,{...t,type:11,name:"Struct0020",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:55});const Vt=new Uint8Array,Ct=new Uint8Array([16,252,15,0]),xt=new Uint8Array([0,0,0,0,0,0,36,64]),kt=new Uint8Array([56,252,15,0]),It=new Uint8Array([0,0,0,0,0,0,36,64]);Object.assign(de,{...t,type:2,name:"Struct0036",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Vt},slots:{0:{structure:r,memory:{array:Ct},slots:{0:{structure:s,memory:{array:xt}}}},1:{structure:r,memory:{array:kt},slots:{0:{structure:s,memory:{array:It}}}}}}},slot:58});Object.assign(_,{...t,type:11,name:"Struct0021",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:de}],methods:[],template:null},slot:57});const vt=new Uint8Array,Et=new Uint8Array([16,252,15,0]),Kt=new Uint8Array([0,0,0,0,0,0,240,63]),Dt=new Uint8Array([56,252,15,0]),Ft=new Uint8Array([215,163,112,61,10,215,227,63]);Object.assign(Se,{...t,type:2,name:"Struct0037",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:vt},slots:{0:{structure:r,memory:{array:Et},slots:{0:{structure:s,memory:{array:Kt}}}},1:{structure:r,memory:{array:Dt},slots:{0:{structure:s,memory:{array:Ft}}}}}}},slot:60});Object.assign(T,{...t,type:11,name:"Struct0022",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Se}],methods:[],template:null},slot:59});const Mt=new Uint8Array,_t=new Uint8Array([170,170,170,170]),Tt=new Uint8Array,$t=new Uint8Array([170,170,170,170]),Bt=new Uint8Array,Lt=new Uint8Array([170,170,170,170]),Gt=new Uint8Array;Object.assign(he,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:l},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:M},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:_},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:T}],methods:[],template:{memory:{array:Mt},slots:{0:{structure:M,memory:{array:_t},slots:{0:{structure:fe,memory:{array:Tt}}}},1:{structure:_,memory:{array:$t},slots:{0:{structure:de,memory:{array:Bt}}}},2:{structure:T,memory:{array:Lt},slots:{0:{structure:Se,memory:{array:Gt}}}}}}},slot:38});Object.assign($,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:he}],methods:[],template:null},slot:37});const Ht=new Uint8Array,Jt=new Uint8Array([16,252,15,0]),Nt=new Uint8Array([0,0,0,0,0,64,127,192]),Qt=new Uint8Array([56,252,15,0]),Wt=new Uint8Array([0,0,0,0,0,64,127,192]);Object.assign(ge,{...t,type:2,name:"Struct0038",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Ht},slots:{0:{structure:r,memory:{array:Jt},slots:{0:{structure:s,memory:{array:Nt}}}},1:{structure:r,memory:{array:Qt},slots:{0:{structure:s,memory:{array:Wt}}}}}}},slot:62});Object.assign(B,{...t,type:11,name:"Struct0023",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ge}],methods:[],template:null},slot:61});const Xt=new Uint8Array,Yt=new Uint8Array([16,252,15,0]),Zt=new Uint8Array([0,0,0,0,0,64,127,64]),er=new Uint8Array([56,252,15,0]),tr=new Uint8Array([0,0,0,0,0,64,127,64]);Object.assign(ze,{...t,type:2,name:"Struct0039",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Xt},slots:{0:{structure:r,memory:{array:Yt},slots:{0:{structure:s,memory:{array:Zt}}}},1:{structure:r,memory:{array:er},slots:{0:{structure:s,memory:{array:tr}}}}}}},slot:64});Object.assign(L,{...t,type:11,name:"Struct0024",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ze}],methods:[],template:null},slot:63});const rr=new Uint8Array,sr=new Uint8Array([16,252,15,0]),ar=new Uint8Array([0,0,0,0,0,128,85,192]),nr=new Uint8Array([56,252,15,0]),ir=new Uint8Array([0,0,0,0,0,0,54,64]);Object.assign(we,{...t,type:2,name:"Struct0040",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:rr},slots:{0:{structure:r,memory:{array:sr},slots:{0:{structure:s,memory:{array:ar}}}},1:{structure:r,memory:{array:nr},slots:{0:{structure:s,memory:{array:ir}}}}}}},slot:66});Object.assign(G,{...t,type:11,name:"Struct0025",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:we}],methods:[],template:null},slot:65});const ur=new Uint8Array,or=new Uint8Array([170,170,170,170]),mr=new Uint8Array,lr=new Uint8Array([170,170,170,170]),yr=new Uint8Array,cr=new Uint8Array([170,170,170,170]),br=new Uint8Array;Object.assign(Ae,{...t,type:2,name:"Struct0014",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:l},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:B},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:L},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:G}],methods:[],template:{memory:{array:ur},slots:{0:{structure:B,memory:{array:or},slots:{0:{structure:ge,memory:{array:mr}}}},1:{structure:L,memory:{array:lr},slots:{0:{structure:ze,memory:{array:yr}}}},2:{structure:G,memory:{array:cr},slots:{0:{structure:we,memory:{array:br}}}}}}},slot:40});Object.assign(H,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ae}],methods:[],template:null},slot:39});const pr=new Uint8Array,fr=new Uint8Array([16,252,15,0]),dr=new Uint8Array([0,0,0,0,0,0,240,191]),Sr=new Uint8Array([56,252,15,0]),hr=new Uint8Array([0,0,0,0,0,0,240,191]);Object.assign(Ue,{...t,type:2,name:"Struct0041",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:pr},slots:{0:{structure:r,memory:{array:fr},slots:{0:{structure:s,memory:{array:dr}}}},1:{structure:r,memory:{array:Sr},slots:{0:{structure:s,memory:{array:hr}}}}}}},slot:68});Object.assign(J,{...t,type:11,name:"Struct0026",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ue}],methods:[],template:null},slot:67});const gr=new Uint8Array,zr=new Uint8Array([112,248,15,0]),wr=new Uint8Array([0,0,0,0,0,0,240,63]),Ar=new Uint8Array([152,248,15,0]),Ur=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(A,{...t,type:2,name:"Struct0042",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:gr},slots:{0:{structure:r,memory:{array:zr},slots:{0:{structure:s,memory:{array:wr}}}},1:{structure:r,memory:{array:Ar},slots:{0:{structure:s,memory:{array:Ur}}}}}}},slot:70});Object.assign(d,{...t,type:11,name:"Struct0027",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:A}],methods:[],template:null},slot:69});const Or=new Uint8Array,Rr=new Uint8Array([16,252,15,0]),qr=new Uint8Array([123,20,174,71,225,122,148,191]),jr=new Uint8Array([56,252,15,0]),Pr=new Uint8Array([123,20,174,71,225,122,148,191]);Object.assign(Oe,{...t,type:2,name:"Struct0043",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Or},slots:{0:{structure:r,memory:{array:Rr},slots:{0:{structure:s,memory:{array:qr}}}},1:{structure:r,memory:{array:jr},slots:{0:{structure:s,memory:{array:Pr}}}}}}},slot:72});Object.assign(N,{...t,type:11,name:"Struct0028",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Oe}],methods:[],template:null},slot:71});const Vr=new Uint8Array,Cr=new Uint8Array([170,170,170,170]),xr=new Uint8Array,kr=new Uint8Array([170,170,170,170]),Ir=new Uint8Array,vr=new Uint8Array([170,170,170,170]),Er=new Uint8Array;Object.assign(Re,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:l},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:J},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:d},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:N}],methods:[],template:{memory:{array:Vr},slots:{0:{structure:J,memory:{array:Cr},slots:{0:{structure:Ue,memory:{array:xr}}}},1:{structure:d,memory:{array:kr},slots:{0:{structure:A,memory:{array:Ir}}}},2:{structure:N,memory:{array:vr},slots:{0:{structure:Oe,memory:{array:Er}}}}}}},slot:42});Object.assign(Q,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Re}],methods:[],template:null},slot:41});const Kr=new Uint8Array,Dr=new Uint8Array([16,252,15,0]),Fr=new Uint8Array([0,0,0,0,0,0,89,192]),Mr=new Uint8Array([56,252,15,0]),_r=new Uint8Array([0,0,0,0,0,0,89,192]);Object.assign(qe,{...t,type:2,name:"Struct0044",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Kr},slots:{0:{structure:r,memory:{array:Dr},slots:{0:{structure:s,memory:{array:Fr}}}},1:{structure:r,memory:{array:Mr},slots:{0:{structure:s,memory:{array:_r}}}}}}},slot:74});Object.assign(W,{...t,type:11,name:"Struct0029",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:qe}],methods:[],template:null},slot:73});const Tr=new Uint8Array,$r=new Uint8Array([16,252,15,0]),Br=new Uint8Array([0,0,0,0,0,0,89,64]),Lr=new Uint8Array([56,252,15,0]),Gr=new Uint8Array([0,0,0,0,0,0,89,64]);Object.assign(je,{...t,type:2,name:"Struct0045",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Tr},slots:{0:{structure:r,memory:{array:$r},slots:{0:{structure:s,memory:{array:Br}}}},1:{structure:r,memory:{array:Lr},slots:{0:{structure:s,memory:{array:Gr}}}}}}},slot:76});Object.assign(X,{...t,type:11,name:"Struct0030",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:je}],methods:[],template:null},slot:75});const Hr=new Uint8Array,Jr=new Uint8Array([16,252,15,0]),Nr=new Uint8Array([0,0,0,0,0,0,0,192]),Qr=new Uint8Array([56,252,15,0]),Wr=new Uint8Array([0,0,0,0,0,0,36,64]);Object.assign(Pe,{...t,type:2,name:"Struct0046",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Hr},slots:{0:{structure:r,memory:{array:Jr},slots:{0:{structure:s,memory:{array:Nr}}}},1:{structure:r,memory:{array:Qr},slots:{0:{structure:s,memory:{array:Wr}}}}}}},slot:78});Object.assign(Y,{...t,type:11,name:"Struct0031",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Pe}],methods:[],template:null},slot:77});const Xr=new Uint8Array,Yr=new Uint8Array([170,170,170,170]),Zr=new Uint8Array,es=new Uint8Array([170,170,170,170]),ts=new Uint8Array,rs=new Uint8Array([170,170,170,170]),ss=new Uint8Array;Object.assign(Ve,{...t,type:2,name:"Struct0016",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:l},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:W},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:X},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:Y}],methods:[],template:{memory:{array:Xr},slots:{0:{structure:W,memory:{array:Yr},slots:{0:{structure:qe,memory:{array:Zr}}}},1:{structure:X,memory:{array:es},slots:{0:{structure:je,memory:{array:ts}}}},2:{structure:Y,memory:{array:rs},slots:{0:{structure:Pe,memory:{array:ss}}}}}}},slot:44});Object.assign(Z,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ve}],methods:[],template:null},slot:43});const as=new Uint8Array,ns=new Uint8Array([112,248,15,0]),is=new Uint8Array([0,0,0,0,0,64,143,64]),us=new Uint8Array([152,248,15,0]),os=new Uint8Array([0,0,0,0,0,64,143,64]);Object.assign(j,{...t,type:2,name:"Struct0047",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:as},slots:{0:{structure:r,memory:{array:ns},slots:{0:{structure:s,memory:{array:is}}}},1:{structure:r,memory:{array:us},slots:{0:{structure:s,memory:{array:os}}}}}}},slot:80});Object.assign(z,{...t,type:11,name:"Struct0032",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:j}],methods:[],template:null},slot:79});const ms=new Uint8Array,ls=new Uint8Array([16,252,15,0]),ys=new Uint8Array([0,0,0,0,0,0,119,64]),cs=new Uint8Array([56,252,15,0]),bs=new Uint8Array([0,0,0,0,0,208,113,64]);Object.assign(Ce,{...t,type:2,name:"Struct0048",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:ms},slots:{0:{structure:r,memory:{array:ls},slots:{0:{structure:s,memory:{array:ys}}}},1:{structure:r,memory:{array:cs},slots:{0:{structure:s,memory:{array:bs}}}}}}},slot:82});Object.assign(ee,{...t,type:11,name:"Struct0033",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ce}],methods:[],template:null},slot:81});const ps=new Uint8Array,fs=new Uint8Array([170,170,170,170]),ds=new Uint8Array,Ss=new Uint8Array([170,170,170,170]),hs=new Uint8Array,gs=new Uint8Array([170,170,170,170]),zs=new Uint8Array;Object.assign(xe,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:l},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:d},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:z},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:ee}],methods:[],template:{memory:{array:ps},slots:{0:{structure:d,memory:{array:fs},slots:{0:{structure:A,memory:{array:ds}}}},1:{structure:z,memory:{array:Ss},slots:{0:{structure:j,memory:{array:hs}}}},2:{structure:ee,memory:{array:gs},slots:{0:{structure:Ce,memory:{array:zs}}}}}}},slot:46});Object.assign(te,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:xe}],methods:[],template:null},slot:45});const ws=new Uint8Array,As=new Uint8Array([16,252,15,0]),Us=new Uint8Array([0,0,0,0,0,0,101,64]),Os=new Uint8Array([56,252,15,0]),Rs=new Uint8Array([0,0,0,0,0,32,103,64]);Object.assign(ke,{...t,type:2,name:"Struct0049",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:ws},slots:{0:{structure:r,memory:{array:As},slots:{0:{structure:s,memory:{array:Us}}}},1:{structure:r,memory:{array:Os},slots:{0:{structure:s,memory:{array:Rs}}}}}}},slot:84});Object.assign(re,{...t,type:11,name:"Struct0034",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ke}],methods:[],template:null},slot:83});const qs=new Uint8Array,js=new Uint8Array([170,170,170,170]),Ps=new Uint8Array,Vs=new Uint8Array([170,170,170,170]),Cs=new Uint8Array,xs=new Uint8Array([170,170,170,170]),ks=new Uint8Array;Object.assign(Ie,{...t,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:l},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:d},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:z},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:re}],methods:[],template:{memory:{array:qs},slots:{0:{structure:d,memory:{array:js},slots:{0:{structure:A,memory:{array:Ps}}}},1:{structure:z,memory:{array:Vs},slots:{0:{structure:j,memory:{array:Cs}}}},2:{structure:re,memory:{array:xs},slots:{0:{structure:ke,memory:{array:ks}}}}}}},slot:48});Object.assign(se,{...t,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ie}],methods:[],template:null},slot:47});const Is=new Uint8Array,vs=new Uint8Array([170,170,170,170]),Es=new Uint8Array,Ks=new Uint8Array([170,170,170,170]),Ds=new Uint8Array,Fs=new Uint8Array([170,170,170,170]),Ms=new Uint8Array,_s=new Uint8Array([170,170,170,170]),Ts=new Uint8Array,$s=new Uint8Array([170,170,170,170]),Bs=new Uint8Array,Ls=new Uint8Array([170,170,170,170]),Gs=new Uint8Array;Object.assign(ve,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"a",structure:$},{...e,type:8,isRequired:!1,slot:1,name:"b",structure:H},{...e,type:8,isRequired:!1,slot:2,name:"c",structure:Q},{...e,type:8,isRequired:!1,slot:3,name:"d",structure:Z},{...e,type:8,isRequired:!1,slot:4,name:"size",structure:te},{...e,type:8,isRequired:!1,slot:5,name:"center",structure:se}],methods:[],template:{memory:{array:Is},slots:{0:{structure:$,memory:{array:vs},slots:{0:{structure:he,memory:{array:Es}}}},1:{structure:H,memory:{array:Ks},slots:{0:{structure:Ae,memory:{array:Ds}}}},2:{structure:Q,memory:{array:Fs},slots:{0:{structure:Re,memory:{array:Ms}}}},3:{structure:Z,memory:{array:_s},slots:{0:{structure:Ve,memory:{array:Ts}}}},4:{structure:te,memory:{array:$s},slots:{0:{structure:xe,memory:{array:Bs}}}},5:{structure:se,memory:{array:Ls},slots:{0:{structure:Ie,memory:{array:Gs}}}}}}},slot:15});Object.assign(ae,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ve}],methods:[],template:null},slot:14});const Hs=new Uint8Array,Js=new Uint8Array([48,252,15,0]),Ns=new Uint8Array([4,0,0,0]);Object.assign(P,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:Hs},slots:{0:{structure:p,memory:{array:Js},slots:{0:{structure:b,memory:{array:Ns}}}}}}},slot:50});Object.assign(w,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:P}],methods:[],template:null},slot:49});const Qs=new Uint8Array,Ws=new Uint8Array([170,170,170,170]),Xs=new Uint8Array;Object.assign(Ee,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:w}],methods:[],template:{memory:{array:Qs},slots:{0:{structure:w,memory:{array:Ws},slots:{0:{structure:P,memory:{array:Xs}}}}}}},slot:17});Object.assign(ne,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ee}],methods:[],template:null},slot:16});const Ys=new Uint8Array,Zs=new Uint8Array([170,170,170,170]),ea=new Uint8Array;Object.assign(Ke,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:w}],methods:[],template:{memory:{array:Ys},slots:{0:{structure:w,memory:{array:Zs},slots:{0:{structure:P,memory:{array:ea}}}}}}},slot:19});Object.assign(ie,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ke}],methods:[],template:null},slot:18});const ta=new Uint8Array,ra=new Uint8Array,sa=new Uint8Array([72,38,16,0]),aa=new Uint8Array([239,37,16,0]),na=new Uint8Array([99,111,109,112,108,101,120,32,114,97,116,105,111,110,97,108,0]),ia=new Uint8Array([68,38,16,0]),ua=new Uint8Array([219,37,16,0]),oa=new Uint8Array([112,105,120,101,108,101,114,111,0]),ma=new Uint8Array([64,38,16,0]),la=new Uint8Array([1,0,0,0]),ya=new Uint8Array([60,38,16,0]),ca=new Uint8Array([164,37,16,0]),ba=new Uint8Array([99,111,109,112,108,101,120,32,109,97,112,112,105,110,103,32,102,40,122,41,61,32,40,97,122,50,43,98,41,47,40,99,122,50,43,100,41,0]),pa=new Uint8Array([170,170,170,170]),fa=new Uint8Array,da=new Uint8Array([170,170,170,170]),Sa=new Uint8Array,ha=new Uint8Array([170,170,170,170]),ga=new Uint8Array;Object.assign(Ge,{...t,type:2,name:"complex-rational.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:ta}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:K},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:D},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:p},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:F},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:ae},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:ne},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:ie}],methods:[],template:{memory:{array:ra},slots:{0:{structure:K,memory:{array:sa},slots:{0:{structure:le,memory:{array:aa},slots:{0:{structure:me,memory:{array:na}}}}}},1:{structure:D,memory:{array:ia},slots:{0:{structure:ce,memory:{array:ua},slots:{0:{structure:ye,memory:{array:oa}}}}}},2:{structure:p,memory:{array:ma},slots:{0:{structure:b,memory:{array:la}}}},3:{structure:F,memory:{array:ya},slots:{0:{structure:pe,memory:{array:ca},slots:{0:{structure:be,memory:{array:ba}}}}}},4:{structure:ae,memory:{array:pa},slots:{0:{structure:ve,memory:{array:fa}}}},5:{structure:ne,memory:{array:da},slots:{0:{structure:Ee,memory:{array:Sa}}}},6:{structure:ie,memory:{array:ha},slots:{0:{structure:Ke,memory:{array:ga}}}}}}},slot:1});Object.assign(U,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:24});Object.assign(De,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:U}],methods:[],template:null},slot:23});Object.assign(Fe,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:De}],methods:[],template:null},slot:22});Object.assign(y,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:25});const za=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(Me,{...t,type:9,name:"complex-rational.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:b},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:b}],methods:[],template:{memory:{array:za}}},slot:26});Object.assign(q,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:27});Object.assign(_e,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:R}],methods:[],template:null},slot:51});const wa=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Aa=new Uint8Array,Ua=new Uint8Array([108,37,16,0]),Oa=new Uint8Array([4,0,0,0]);Object.assign(ue,{...t,type:2,name:"complex-rational.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Fe},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Me},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:q}],methods:[],template:{memory:{array:wa}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:U},{...e,type:7,isRequired:!1,name:"FPixel",structure:_e},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:Aa},slots:{0:{structure:p,memory:{array:Ua},slots:{0:{structure:b,memory:{array:Oa}}}}}}},slot:21});const Ra=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),qa=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),rt=new Uint8Array([0,0,0,0,0,0,0,0]),ja=new Uint8Array;Object.assign(V,{...t,type:2,name:"complex-rational.KernelInput(u8,complex-rational.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:ue}],methods:[],template:{memory:{array:Ra},slots:{0:{structure:ue,memory:{array:qa},slots:{0:{structure:Fe,memory:{array:rt},address:1047200,slots:{0:{structure:De,memory:{array:ja},address:0}}}}}}}},slot:20});Object.assign(Te,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:U}],methods:[],template:null},slot:23});Object.assign($e,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Te}],methods:[],template:null},slot:30});const Pa=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Va=new Uint8Array,Ca=new Uint8Array([108,37,16,0]),xa=new Uint8Array([4,0,0,0]);Object.assign(oe,{...t,type:2,name:"complex-rational.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:$e},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Me},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:q}],methods:[],template:{memory:{array:Pa}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:U},{...e,type:7,isRequired:!1,name:"FPixel",structure:_e},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:Va},slots:{0:{structure:p,memory:{array:Ca},slots:{0:{structure:b,memory:{array:xa}}}}}}},slot:29});const ka=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ia=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),va=new Uint8Array;Object.assign(C,{...t,type:2,name:"complex-rational.KernelOutput(u8,complex-rational.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:oe}],methods:[],template:{memory:{array:ka},slots:{0:{structure:oe,memory:{array:Ia},slots:{0:{structure:$e,memory:{array:rt},address:1047200,slots:{0:{structure:Te,memory:{array:va},address:0}}}}}}}},slot:28});const Ea=new Uint8Array([0,0,128,63,82,184,30,63,0,0,172,194,0,0,176,65,10,215,163,188,10,215,163,188,0,0,0,192,0,0,32,65,0,0,184,67,0,128,142,67,0,0,40,67,0,0,57,67]);Object.assign(x,{...t,type:2,name:"complex-rational.KernelParameters(complex-rational.kernel)",length:1,byteSize:48,align:3,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"a",structure:l},{...e,type:6,isRequired:!1,bitOffset:64,bitSize:64,byteSize:8,slot:1,name:"b",structure:l},{...e,type:6,isRequired:!1,bitOffset:128,bitSize:64,byteSize:8,slot:2,name:"c",structure:l},{...e,type:6,isRequired:!1,bitOffset:192,bitSize:64,byteSize:8,slot:3,name:"d",structure:l},{...e,type:6,isRequired:!1,bitOffset:256,bitSize:64,byteSize:8,slot:4,name:"size",structure:l},{...e,type:6,isRequired:!1,bitOffset:320,bitSize:64,byteSize:8,slot:5,name:"center",structure:l}],methods:[],template:{memory:{array:Ea}}},slot:31});Object.assign(He,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(complex-rational.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:53});Object.assign(Je,{...t,type:7,name:"ErrorSet0000!complex-rational.KernelOutput(u8,complex-rational.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:C},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:He}],methods:[],template:null},slot:35});Object.assign(Ne,{...t,type:3,name:"createOutput",length:1,byteSize:112,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:6,bitOffset:448,bitSize:192,byteSize:24,slot:2,name:"2",structure:V},{...e,type:6,bitOffset:0,bitSize:384,byteSize:48,slot:3,name:"3",structure:x},{...e,type:6,bitOffset:640,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Je}],methods:[],template:null},slot:33});Object.assign(Qe,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(complex-rational.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:54});Object.assign(We,{...t,type:7,name:"ErrorSet0001!complex-rational.KernelOutput(u8,complex-rational.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:C},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Qe}],methods:[],template:null},slot:36});Object.assign(Xe,{...t,type:3,name:"createPartialOutput",length:1,byteSize:120,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:3,bitOffset:448,bitSize:32,byteSize:4,slot:2,name:"2",structure:y},{...e,type:3,bitOffset:480,bitSize:32,byteSize:4,slot:3,name:"3",structure:y},{...e,type:6,bitOffset:512,bitSize:192,byteSize:24,slot:4,name:"4",structure:V},{...e,type:6,bitOffset:0,bitSize:384,byteSize:48,slot:5,name:"5",structure:x},{...e,type:6,bitOffset:704,bitSize:224,byteSize:28,slot:6,name:"retval",structure:We}],methods:[],template:null},slot:34});const Ka=new Uint8Array,Da={argStruct:Ne,thunk:7,name:"createOutput"},Fa={argStruct:Xe,thunk:1,name:"createPartialOutput"};Object.assign(Ye,{...t,type:2,name:"complex-rational",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Ka}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:Ge},{...e,type:7,isRequired:!1,name:"Input",structure:V},{...e,type:7,isRequired:!1,name:"Output",structure:C},{...e,type:7,isRequired:!1,name:"Parameters",structure:x}],methods:[Da,Fa],template:null},slot:0});const Ma=[S,me,le,K,ye,ce,D,b,p,be,pe,F,R,l,s,r,fe,M,de,_,Se,T,he,$,ge,B,ze,L,we,G,Ae,H,Ue,J,A,d,Oe,N,Re,Q,qe,W,je,X,Pe,Y,Ve,Z,j,z,Ce,ee,xe,te,ke,re,Ie,se,ve,ae,P,w,Ee,ne,Ke,ie,Ge,U,De,Fe,y,Me,q,_e,ue,V,Te,$e,oe,C,x,He,Je,Ne,Qe,We,Xe,Ye],_a=At(Ma),Ta=Ye.constructor,$a=(async()=>{const u=new URL("complex-rational-7e8786aa.wasm",import.meta.url).href;return fetch(u)})();Ut($a,{..._a,writeBack:!0});const{createOutput:Wa,createPartialOutput:Ba,kernel:Le,Input:La,Output:Xa,Parameters:Ya}=Ta;function Ga(u,m,n,a,i={},h={}){if(Array.isArray(i)){const f=i;i={};for(const[c,g]of Object.keys(Le.inputImages).entries())i[g]=f[c]}const k=new La(void 0),I=Object.keys(Le.inputImages),o=[];let O;for(const f of I){let c=i[f];if(c||(I.length===1&&["data","width","height"].every(g=>!!i[g])?c=i:o.push(f)),k[f]=c,O){if(c.colorSpace!==O)throw new Error(`Input images must all use the same color space: ${O}`)}else O=c.colorSpace}if(o.length>0)throw new Error(`Missing input image${o.length>1?"s":""}: ${o.join(", ")}`);const Be=Ba(u,m,n,a,k,h),Ze=f=>{const c=Object.keys(f),g={};for(const et of c){const{data:{typedArray:v},width:tt,height:at}=f[et];let E;if(typeof ImageData=="function"){const nt=new Uint8ClampedArray(v.buffer,v.byteOffset,v.byteLength);E=new ImageData(nt,tt,a,{colorSpace:O})}else E={data:v,width:tt,height:at};if(c.length===1)return E;g[et]=E}return g};return Be[Symbol.toStringTag]==="Promise"?Be.then(Ze):Ze(Be)}function Ha(){const u={};for(let[m,n]of Object.entries(Le)){if(m==="parameters"){const a={};for(const[i,h]of Object.entries(n)){const k=a[i]={};for(let[I,o]of Object.entries(h))typeof o=="object"?"string"in o?o=o.string:o=st(o):typeof o=="function"&&(o=Ja(o.name)),k[I]=o}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());u[m]=n}return u}function st(u){const m=[];for(let[n,a]of Object.entries(u))typeof a=="object"&&(a=st(a)),m[n]=a;return m}function Ja(u){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[u]}onmessage=u=>{const[m,n,...a]=u.data;Na(m,a).then(([i,h])=>{postMessage([m,n,i],{transfer:h})}).catch(i=>{postMessage(["error",n,i])})};async function Na(u,m){switch(u){case"getKernelInfo":return[Ha(...m)];case"createPartialImageData":const a=await Ga(...m),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const h of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${u}`)}}
