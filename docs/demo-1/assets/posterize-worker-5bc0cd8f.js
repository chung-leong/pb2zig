import{u as it,a as ut,b as ot,d as yt,c as mt,e as lt,f as ct,g as pt,h as bt,i as ft,j as dt,k as St,l as wt,m as ht,o as gt,n as At,p as Ut,q as zt}from"./index-d64bc850.js";it();ut();ot();yt();mt();lt();ct();pt();bt();ft();dt();St();wt();ht();gt();At();const r={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},z={},le={},ce={},F={},pe={},be={},M={},b={},l={},fe={},de={},_={},O={},n={},s={},t={},S={},i={},w={},u={},Se={},$={},h={},g={},o={},we={},B={},he={},L={},ge={},G={},Ae={},H={},Ue={},J={},ze={},N={},Re={},Q={},qe={},W={},Oe={},X={},je={},Y={},Pe={},Z={},Ve={},ee={},Ce={},te={},ke={},re={},Ie={},se={},xe={},ae={},ve={},ne={},Te={},ie={},k={},j={},Ee={},ue={},Ke={},oe={},Ge={},P={},De={},Fe={},d={},Me={},C={},ye={},I={},_e={},$e={},me={},x={},v={},He={},Je={},Ne={},Qe={},We={},Xe={},Ye={};Object.assign(z,{...r,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:z}],methods:[],template:null},slot:5});Object.assign(le,{...r,type:1,name:"[10:0]u8",length:10,byteSize:11,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:z}],methods:[],template:null},slot:4});Object.assign(ce,{...r,type:11,name:"*const [10:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:3});Object.assign(F,{...r,type:11,name:"*const *const [10:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:2});Object.assign(pe,{...r,type:1,name:"[14:0]u8",length:14,byteSize:15,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:z}],methods:[],template:null},slot:8});Object.assign(be,{...r,type:11,name:"*const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:7});Object.assign(M,{...r,type:11,name:"*const *const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:6});Object.assign(b,{...r,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:10});Object.assign(l,{...r,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:b}],methods:[],template:null},slot:9});Object.assign(fe,{...r,type:1,name:"[49:0]u8",length:49,byteSize:50,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:z}],methods:[],template:null},slot:13});Object.assign(de,{...r,type:11,name:"*const [49:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:12});Object.assign(_,{...r,type:11,name:"*const *const [49:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:de}],methods:[],template:null},slot:11});Object.assign(O,{...r,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:33});Object.assign(n,{...r,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:32});Object.assign(s,{...r,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:s}],methods:[],template:null},slot:86});Object.assign(t,{...r,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:s}],methods:[],template:null},slot:85});const Rt=new Uint8Array,qt=new Uint8Array([144,246,15,0]),Ot=new Uint8Array([0,0,0,0,0,0,0,0]),jt=new Uint8Array([184,246,15,0]),Pt=new Uint8Array([0,0,0,0,0,0,0,0]),Vt=new Uint8Array([224,246,15,0]),Ct=new Uint8Array([0,0,0,0,0,0,0,0]),kt=new Uint8Array([8,247,15,0]),It=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(S,{...r,type:2,name:"Struct0038",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:t}],methods:[],template:{memory:{array:Rt},slots:{0:{structure:t,memory:{array:qt},slots:{0:{structure:s,memory:{array:Ot}}}},1:{structure:t,memory:{array:jt},slots:{0:{structure:s,memory:{array:Pt}}}},2:{structure:t,memory:{array:Vt},slots:{0:{structure:s,memory:{array:Ct}}}},3:{structure:t,memory:{array:kt},slots:{0:{structure:s,memory:{array:It}}}}}}},slot:63});Object.assign(i,{...r,type:11,name:"Struct0028",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:S}],methods:[],template:null},slot:62});const xt=new Uint8Array,vt=new Uint8Array([144,246,15,0]),Tt=new Uint8Array([0,0,0,0,0,0,240,63]),Et=new Uint8Array([184,246,15,0]),Kt=new Uint8Array([0,0,0,0,0,0,240,63]),Dt=new Uint8Array([224,246,15,0]),Ft=new Uint8Array([0,0,0,0,0,0,240,63]),Mt=new Uint8Array([8,247,15,0]),_t=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(w,{...r,type:2,name:"Struct0039",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:t}],methods:[],template:{memory:{array:xt},slots:{0:{structure:t,memory:{array:vt},slots:{0:{structure:s,memory:{array:Tt}}}},1:{structure:t,memory:{array:Et},slots:{0:{structure:s,memory:{array:Kt}}}},2:{structure:t,memory:{array:Dt},slots:{0:{structure:s,memory:{array:Ft}}}},3:{structure:t,memory:{array:Mt},slots:{0:{structure:s,memory:{array:_t}}}}}}},slot:65});Object.assign(u,{...r,type:11,name:"Struct0029",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:w}],methods:[],template:null},slot:64});const $t=new Uint8Array,Bt=new Uint8Array([48,251,15,0]),Lt=new Uint8Array([211,77,98,16,88,57,220,63]),Gt=new Uint8Array([88,251,15,0]),Ht=new Uint8Array([0,0,0,0,0,192,226,63]),Jt=new Uint8Array([176,251,15,0]),Nt=new Uint8Array([0,0,0,0,0,224,227,63]),Qt=new Uint8Array([40,252,15,0]),Wt=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(Se,{...r,type:2,name:"Struct0040",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:t}],methods:[],template:{memory:{array:$t},slots:{0:{structure:t,memory:{array:Bt},slots:{0:{structure:s,memory:{array:Lt}}}},1:{structure:t,memory:{array:Gt},slots:{0:{structure:s,memory:{array:Ht}}}},2:{structure:t,memory:{array:Jt},slots:{0:{structure:s,memory:{array:Nt}}}},3:{structure:t,memory:{array:Qt},slots:{0:{structure:s,memory:{array:Wt}}}}}}},slot:67});Object.assign($,{...r,type:11,name:"Struct0030",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Se}],methods:[],template:null},slot:66});Object.assign(h,{...r,type:1,name:"[9:0]u8",length:9,byteSize:10,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:z}],methods:[],template:null},slot:70});Object.assign(g,{...r,type:11,name:"*const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:h}],methods:[],template:null},slot:69});Object.assign(o,{...r,type:11,name:"*const *const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:g}],methods:[],template:null},slot:68});const Xt=new Uint8Array,Yt=new Uint8Array([170,170,170,170]),Zt=new Uint8Array,er=new Uint8Array([170,170,170,170]),tr=new Uint8Array,rr=new Uint8Array([170,170,170,170]),sr=new Uint8Array,ar=new Uint8Array([160,250,15,0]),nr=new Uint8Array([50,34,16,0]),ir=new Uint8Array([99,111,108,111,114,82,71,66,65,0]);Object.assign(we,{...r,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:n},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:i},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:u},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:$},{...e,type:8,isRequired:!1,slot:3,name:"parameterType",structure:o}],methods:[],template:{memory:{array:Xt},slots:{0:{structure:i,memory:{array:Yt},slots:{0:{structure:S,memory:{array:Zt}}}},1:{structure:u,memory:{array:er},slots:{0:{structure:w,memory:{array:tr}}}},2:{structure:$,memory:{array:rr},slots:{0:{structure:Se,memory:{array:sr}}}},3:{structure:o,memory:{array:ar},slots:{0:{structure:g,memory:{array:nr},slots:{0:{structure:h,memory:{array:ir}}}}}}}}},slot:39});Object.assign(B,{...r,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:we}],methods:[],template:null},slot:38});const ur=new Uint8Array,or=new Uint8Array([48,251,15,0]),yr=new Uint8Array([12,2,43,135,22,217,234,63]),mr=new Uint8Array([88,251,15,0]),lr=new Uint8Array([66,96,229,208,34,219,185,63]),cr=new Uint8Array([176,251,15,0]),pr=new Uint8Array([199,41,58,146,203,127,192,63]),br=new Uint8Array([40,252,15,0]),fr=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(he,{...r,type:2,name:"Struct0041",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:t}],methods:[],template:{memory:{array:ur},slots:{0:{structure:t,memory:{array:or},slots:{0:{structure:s,memory:{array:yr}}}},1:{structure:t,memory:{array:mr},slots:{0:{structure:s,memory:{array:lr}}}},2:{structure:t,memory:{array:cr},slots:{0:{structure:s,memory:{array:pr}}}},3:{structure:t,memory:{array:br},slots:{0:{structure:s,memory:{array:fr}}}}}}},slot:72});Object.assign(L,{...r,type:11,name:"Struct0031",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:he}],methods:[],template:null},slot:71});const dr=new Uint8Array,Sr=new Uint8Array([170,170,170,170]),wr=new Uint8Array,hr=new Uint8Array([170,170,170,170]),gr=new Uint8Array,Ar=new Uint8Array([170,170,170,170]),Ur=new Uint8Array,zr=new Uint8Array([160,250,15,0]),Rr=new Uint8Array([50,34,16,0]),qr=new Uint8Array([99,111,108,111,114,82,71,66,65,0]);Object.assign(ge,{...r,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:n},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:i},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:u},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:L},{...e,type:8,isRequired:!1,slot:3,name:"parameterType",structure:o}],methods:[],template:{memory:{array:dr},slots:{0:{structure:i,memory:{array:Sr},slots:{0:{structure:S,memory:{array:wr}}}},1:{structure:u,memory:{array:hr},slots:{0:{structure:w,memory:{array:gr}}}},2:{structure:L,memory:{array:Ar},slots:{0:{structure:he,memory:{array:Ur}}}},3:{structure:o,memory:{array:zr},slots:{0:{structure:g,memory:{array:Rr},slots:{0:{structure:h,memory:{array:qr}}}}}}}}},slot:41});Object.assign(G,{...r,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ge}],methods:[],template:null},slot:40});const Or=new Uint8Array,jr=new Uint8Array([48,251,15,0]),Pr=new Uint8Array([0,0,0,0,0,0,0,0]),Vr=new Uint8Array([88,251,15,0]),Cr=new Uint8Array([246,40,92,143,194,245,200,63]),kr=new Uint8Array([176,251,15,0]),Ir=new Uint8Array([51,51,51,51,51,51,211,63]),xr=new Uint8Array([40,252,15,0]),vr=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(Ae,{...r,type:2,name:"Struct0042",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:t}],methods:[],template:{memory:{array:Or},slots:{0:{structure:t,memory:{array:jr},slots:{0:{structure:s,memory:{array:Pr}}}},1:{structure:t,memory:{array:Vr},slots:{0:{structure:s,memory:{array:Cr}}}},2:{structure:t,memory:{array:kr},slots:{0:{structure:s,memory:{array:Ir}}}},3:{structure:t,memory:{array:xr},slots:{0:{structure:s,memory:{array:vr}}}}}}},slot:74});Object.assign(H,{...r,type:11,name:"Struct0032",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ae}],methods:[],template:null},slot:73});const Tr=new Uint8Array,Er=new Uint8Array([170,170,170,170]),Kr=new Uint8Array,Dr=new Uint8Array([170,170,170,170]),Fr=new Uint8Array,Mr=new Uint8Array([170,170,170,170]),_r=new Uint8Array,$r=new Uint8Array([160,250,15,0]),Br=new Uint8Array([50,34,16,0]),Lr=new Uint8Array([99,111,108,111,114,82,71,66,65,0]);Object.assign(Ue,{...r,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:n},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:i},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:u},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:H},{...e,type:8,isRequired:!1,slot:3,name:"parameterType",structure:o}],methods:[],template:{memory:{array:Tr},slots:{0:{structure:i,memory:{array:Er},slots:{0:{structure:S,memory:{array:Kr}}}},1:{structure:u,memory:{array:Dr},slots:{0:{structure:w,memory:{array:Fr}}}},2:{structure:H,memory:{array:Mr},slots:{0:{structure:Ae,memory:{array:_r}}}},3:{structure:o,memory:{array:$r},slots:{0:{structure:g,memory:{array:Br},slots:{0:{structure:h,memory:{array:Lr}}}}}}}}},slot:43});Object.assign(J,{...r,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ue}],methods:[],template:null},slot:42});const Gr=new Uint8Array,Hr=new Uint8Array([48,251,15,0]),Jr=new Uint8Array([219,249,126,106,188,116,239,63]),Nr=new Uint8Array([88,251,15,0]),Qr=new Uint8Array([123,20,174,71,225,122,236,63]),Wr=new Uint8Array([176,251,15,0]),Xr=new Uint8Array([203,161,69,182,243,253,228,63]),Yr=new Uint8Array([40,252,15,0]),Zr=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(ze,{...r,type:2,name:"Struct0043",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:t}],methods:[],template:{memory:{array:Gr},slots:{0:{structure:t,memory:{array:Hr},slots:{0:{structure:s,memory:{array:Jr}}}},1:{structure:t,memory:{array:Nr},slots:{0:{structure:s,memory:{array:Qr}}}},2:{structure:t,memory:{array:Wr},slots:{0:{structure:s,memory:{array:Xr}}}},3:{structure:t,memory:{array:Yr},slots:{0:{structure:s,memory:{array:Zr}}}}}}},slot:76});Object.assign(N,{...r,type:11,name:"Struct0033",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ze}],methods:[],template:null},slot:75});const es=new Uint8Array,ts=new Uint8Array([170,170,170,170]),rs=new Uint8Array,ss=new Uint8Array([170,170,170,170]),as=new Uint8Array,ns=new Uint8Array([170,170,170,170]),is=new Uint8Array,us=new Uint8Array([160,250,15,0]),os=new Uint8Array([50,34,16,0]),ys=new Uint8Array([99,111,108,111,114,82,71,66,65,0]);Object.assign(Re,{...r,type:2,name:"Struct0020",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:n},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:i},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:u},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:N},{...e,type:8,isRequired:!1,slot:3,name:"parameterType",structure:o}],methods:[],template:{memory:{array:es},slots:{0:{structure:i,memory:{array:ts},slots:{0:{structure:S,memory:{array:rs}}}},1:{structure:u,memory:{array:ss},slots:{0:{structure:w,memory:{array:as}}}},2:{structure:N,memory:{array:ns},slots:{0:{structure:ze,memory:{array:is}}}},3:{structure:o,memory:{array:us},slots:{0:{structure:g,memory:{array:os},slots:{0:{structure:h,memory:{array:ys}}}}}}}}},slot:45});Object.assign(Q,{...r,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Re}],methods:[],template:null},slot:44});const ms=new Uint8Array,ls=new Uint8Array([48,251,15,0]),cs=new Uint8Array([0,0,0,0,0,0,0,0]),ps=new Uint8Array([88,251,15,0]),bs=new Uint8Array([0,0,0,0,0,0,0,0]),fs=new Uint8Array([176,251,15,0]),ds=new Uint8Array([0,0,0,0,0,0,0,0]),Ss=new Uint8Array([40,252,15,0]),ws=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(qe,{...r,type:2,name:"Struct0044",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:t}],methods:[],template:{memory:{array:ms},slots:{0:{structure:t,memory:{array:ls},slots:{0:{structure:s,memory:{array:cs}}}},1:{structure:t,memory:{array:ps},slots:{0:{structure:s,memory:{array:bs}}}},2:{structure:t,memory:{array:fs},slots:{0:{structure:s,memory:{array:ds}}}},3:{structure:t,memory:{array:Ss},slots:{0:{structure:s,memory:{array:ws}}}}}}},slot:78});Object.assign(W,{...r,type:11,name:"Struct0034",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:qe}],methods:[],template:null},slot:77});const hs=new Uint8Array,gs=new Uint8Array([170,170,170,170]),As=new Uint8Array,Us=new Uint8Array([170,170,170,170]),zs=new Uint8Array,Rs=new Uint8Array([170,170,170,170]),qs=new Uint8Array,Os=new Uint8Array([160,250,15,0]),js=new Uint8Array([50,34,16,0]),Ps=new Uint8Array([99,111,108,111,114,82,71,66,65,0]);Object.assign(Oe,{...r,type:2,name:"Struct0021",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:n},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:i},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:u},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:W},{...e,type:8,isRequired:!1,slot:3,name:"parameterType",structure:o}],methods:[],template:{memory:{array:hs},slots:{0:{structure:i,memory:{array:gs},slots:{0:{structure:S,memory:{array:As}}}},1:{structure:u,memory:{array:Us},slots:{0:{structure:w,memory:{array:zs}}}},2:{structure:W,memory:{array:Rs},slots:{0:{structure:qe,memory:{array:qs}}}},3:{structure:o,memory:{array:Os},slots:{0:{structure:g,memory:{array:js},slots:{0:{structure:h,memory:{array:Ps}}}}}}}}},slot:47});Object.assign(X,{...r,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Oe}],methods:[],template:null},slot:46});const Vs=new Uint8Array,Cs=new Uint8Array([48,251,15,0]),ks=new Uint8Array([0,0,0,0,0,0,240,63]),Is=new Uint8Array([88,251,15,0]),xs=new Uint8Array([0,0,0,0,0,0,0,0]),vs=new Uint8Array([176,251,15,0]),Ts=new Uint8Array([0,0,0,0,0,0,0,0]),Es=new Uint8Array([40,252,15,0]),Ks=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(je,{...r,type:2,name:"Struct0045",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:t}],methods:[],template:{memory:{array:Vs},slots:{0:{structure:t,memory:{array:Cs},slots:{0:{structure:s,memory:{array:ks}}}},1:{structure:t,memory:{array:Is},slots:{0:{structure:s,memory:{array:xs}}}},2:{structure:t,memory:{array:vs},slots:{0:{structure:s,memory:{array:Ts}}}},3:{structure:t,memory:{array:Es},slots:{0:{structure:s,memory:{array:Ks}}}}}}},slot:80});Object.assign(Y,{...r,type:11,name:"Struct0035",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:je}],methods:[],template:null},slot:79});const Ds=new Uint8Array,Fs=new Uint8Array([170,170,170,170]),Ms=new Uint8Array,_s=new Uint8Array([170,170,170,170]),$s=new Uint8Array,Bs=new Uint8Array([170,170,170,170]),Ls=new Uint8Array,Gs=new Uint8Array([160,250,15,0]),Hs=new Uint8Array([50,34,16,0]),Js=new Uint8Array([99,111,108,111,114,82,71,66,65,0]);Object.assign(Pe,{...r,type:2,name:"Struct0022",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:n},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:i},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:u},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:Y},{...e,type:8,isRequired:!1,slot:3,name:"parameterType",structure:o}],methods:[],template:{memory:{array:Ds},slots:{0:{structure:i,memory:{array:Fs},slots:{0:{structure:S,memory:{array:Ms}}}},1:{structure:u,memory:{array:_s},slots:{0:{structure:w,memory:{array:$s}}}},2:{structure:Y,memory:{array:Bs},slots:{0:{structure:je,memory:{array:Ls}}}},3:{structure:o,memory:{array:Gs},slots:{0:{structure:g,memory:{array:Hs},slots:{0:{structure:h,memory:{array:Js}}}}}}}}},slot:49});Object.assign(Z,{...r,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Pe}],methods:[],template:null},slot:48});const Ns=new Uint8Array,Qs=new Uint8Array([48,251,15,0]),Ws=new Uint8Array([0,0,0,0,0,0,0,0]),Xs=new Uint8Array([88,251,15,0]),Ys=new Uint8Array([0,0,0,0,0,0,240,63]),Zs=new Uint8Array([176,251,15,0]),ea=new Uint8Array([0,0,0,0,0,0,0,0]),ta=new Uint8Array([40,252,15,0]),ra=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(Ve,{...r,type:2,name:"Struct0046",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:t}],methods:[],template:{memory:{array:Ns},slots:{0:{structure:t,memory:{array:Qs},slots:{0:{structure:s,memory:{array:Ws}}}},1:{structure:t,memory:{array:Xs},slots:{0:{structure:s,memory:{array:Ys}}}},2:{structure:t,memory:{array:Zs},slots:{0:{structure:s,memory:{array:ea}}}},3:{structure:t,memory:{array:ta},slots:{0:{structure:s,memory:{array:ra}}}}}}},slot:82});Object.assign(ee,{...r,type:11,name:"Struct0036",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ve}],methods:[],template:null},slot:81});const sa=new Uint8Array,aa=new Uint8Array([170,170,170,170]),na=new Uint8Array,ia=new Uint8Array([170,170,170,170]),ua=new Uint8Array,oa=new Uint8Array([170,170,170,170]),ya=new Uint8Array,ma=new Uint8Array([160,250,15,0]),la=new Uint8Array([50,34,16,0]),ca=new Uint8Array([99,111,108,111,114,82,71,66,65,0]);Object.assign(Ce,{...r,type:2,name:"Struct0023",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:n},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:i},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:u},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:ee},{...e,type:8,isRequired:!1,slot:3,name:"parameterType",structure:o}],methods:[],template:{memory:{array:sa},slots:{0:{structure:i,memory:{array:aa},slots:{0:{structure:S,memory:{array:na}}}},1:{structure:u,memory:{array:ia},slots:{0:{structure:w,memory:{array:ua}}}},2:{structure:ee,memory:{array:oa},slots:{0:{structure:Ve,memory:{array:ya}}}},3:{structure:o,memory:{array:ma},slots:{0:{structure:g,memory:{array:la},slots:{0:{structure:h,memory:{array:ca}}}}}}}}},slot:51});Object.assign(te,{...r,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ce}],methods:[],template:null},slot:50});const pa=new Uint8Array,ba=new Uint8Array([48,251,15,0]),fa=new Uint8Array([0,0,0,0,0,0,0,0]),da=new Uint8Array([88,251,15,0]),Sa=new Uint8Array([0,0,0,0,0,0,0,0]),wa=new Uint8Array([176,251,15,0]),ha=new Uint8Array([0,0,0,0,0,0,240,63]),ga=new Uint8Array([40,252,15,0]),Aa=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(ke,{...r,type:2,name:"Struct0047",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:t},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:t}],methods:[],template:{memory:{array:pa},slots:{0:{structure:t,memory:{array:ba},slots:{0:{structure:s,memory:{array:fa}}}},1:{structure:t,memory:{array:da},slots:{0:{structure:s,memory:{array:Sa}}}},2:{structure:t,memory:{array:wa},slots:{0:{structure:s,memory:{array:ha}}}},3:{structure:t,memory:{array:ga},slots:{0:{structure:s,memory:{array:Aa}}}}}}},slot:84});Object.assign(re,{...r,type:11,name:"Struct0037",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ke}],methods:[],template:null},slot:83});const Ua=new Uint8Array,za=new Uint8Array([170,170,170,170]),Ra=new Uint8Array,qa=new Uint8Array([170,170,170,170]),Oa=new Uint8Array,ja=new Uint8Array([170,170,170,170]),Pa=new Uint8Array,Va=new Uint8Array([160,250,15,0]),Ca=new Uint8Array([50,34,16,0]),ka=new Uint8Array([99,111,108,111,114,82,71,66,65,0]);Object.assign(Ie,{...r,type:2,name:"Struct0024",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:n},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:i},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:u},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:re},{...e,type:8,isRequired:!1,slot:3,name:"parameterType",structure:o}],methods:[],template:{memory:{array:Ua},slots:{0:{structure:i,memory:{array:za},slots:{0:{structure:S,memory:{array:Ra}}}},1:{structure:u,memory:{array:qa},slots:{0:{structure:w,memory:{array:Oa}}}},2:{structure:re,memory:{array:ja},slots:{0:{structure:ke,memory:{array:Pa}}}},3:{structure:o,memory:{array:Va},slots:{0:{structure:g,memory:{array:Ca},slots:{0:{structure:h,memory:{array:ka}}}}}}}}},slot:53});Object.assign(se,{...r,type:11,name:"Struct0013",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ie}],methods:[],template:null},slot:52});const Ia=new Uint8Array,xa=new Uint8Array([24,251,15,0]),va=new Uint8Array([2,0,0,0]),Ta=new Uint8Array([64,251,15,0]),Ea=new Uint8Array([8,0,0,0]),Ka=new Uint8Array([128,251,15,0]),Da=new Uint8Array([4,0,0,0]);Object.assign(xe,{...r,type:2,name:"Struct0025",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:b},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:l},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:l},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:l}],methods:[],template:{memory:{array:Ia},slots:{0:{structure:l,memory:{array:xa},slots:{0:{structure:b,memory:{array:va}}}},1:{structure:l,memory:{array:Ta},slots:{0:{structure:b,memory:{array:Ea}}}},2:{structure:l,memory:{array:Ka},slots:{0:{structure:b,memory:{array:Da}}}}}}},slot:55});Object.assign(ae,{...r,type:11,name:"Struct0014",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:xe}],methods:[],template:null},slot:54});const Fa=new Uint8Array,Ma=new Uint8Array([88,252,15,0]),_a=new Uint8Array([0,0,0,0,0,0,0,0]),$a=new Uint8Array([192,250,15,0]),Ba=new Uint8Array([0,0,0,0,0,0,16,64]),La=new Uint8Array([136,249,15,0]),Ga=new Uint8Array([0,0,0,0,0,0,224,63]);Object.assign(ve,{...r,type:2,name:"Struct0026",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:O},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:t},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:t},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:t}],methods:[],template:{memory:{array:Fa},slots:{0:{structure:t,memory:{array:Ma},slots:{0:{structure:s,memory:{array:_a}}}},1:{structure:t,memory:{array:$a},slots:{0:{structure:s,memory:{array:Ba}}}},2:{structure:t,memory:{array:La},slots:{0:{structure:s,memory:{array:Ga}}}}}}},slot:57});Object.assign(ne,{...r,type:11,name:"Struct0015",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ve}],methods:[],template:null},slot:56});const Ha=new Uint8Array,Ja=new Uint8Array([170,170,170,170]),Na=new Uint8Array,Qa=new Uint8Array([170,170,170,170]),Wa=new Uint8Array,Xa=new Uint8Array([170,170,170,170]),Ya=new Uint8Array,Za=new Uint8Array([170,170,170,170]),en=new Uint8Array,tn=new Uint8Array([170,170,170,170]),rn=new Uint8Array,sn=new Uint8Array([170,170,170,170]),an=new Uint8Array,nn=new Uint8Array([170,170,170,170]),un=new Uint8Array,on=new Uint8Array([170,170,170,170]),yn=new Uint8Array,mn=new Uint8Array([170,170,170,170]),ln=new Uint8Array,cn=new Uint8Array([170,170,170,170]),pn=new Uint8Array;Object.assign(Te,{...r,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"color1",structure:B},{...e,type:8,isRequired:!1,slot:1,name:"color2",structure:G},{...e,type:8,isRequired:!1,slot:2,name:"color3",structure:J},{...e,type:8,isRequired:!1,slot:3,name:"color4",structure:Q},{...e,type:8,isRequired:!1,slot:4,name:"color5",structure:X},{...e,type:8,isRequired:!1,slot:5,name:"color6",structure:Z},{...e,type:8,isRequired:!1,slot:6,name:"color7",structure:te},{...e,type:8,isRequired:!1,slot:7,name:"color8",structure:se},{...e,type:8,isRequired:!1,slot:8,name:"numColors",structure:ae},{...e,type:8,isRequired:!1,slot:9,name:"blur",structure:ne}],methods:[],template:{memory:{array:Ha},slots:{0:{structure:B,memory:{array:Ja},slots:{0:{structure:we,memory:{array:Na}}}},1:{structure:G,memory:{array:Qa},slots:{0:{structure:ge,memory:{array:Wa}}}},2:{structure:J,memory:{array:Xa},slots:{0:{structure:Ue,memory:{array:Ya}}}},3:{structure:Q,memory:{array:Za},slots:{0:{structure:Re,memory:{array:en}}}},4:{structure:X,memory:{array:tn},slots:{0:{structure:Oe,memory:{array:rn}}}},5:{structure:Z,memory:{array:sn},slots:{0:{structure:Pe,memory:{array:an}}}},6:{structure:te,memory:{array:nn},slots:{0:{structure:Ce,memory:{array:un}}}},7:{structure:se,memory:{array:on},slots:{0:{structure:Ie,memory:{array:yn}}}},8:{structure:ae,memory:{array:mn},slots:{0:{structure:xe,memory:{array:ln}}}},9:{structure:ne,memory:{array:cn},slots:{0:{structure:ve,memory:{array:pn}}}}}}},slot:15});Object.assign(ie,{...r,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Te}],methods:[],template:null},slot:14});const bn=new Uint8Array,fn=new Uint8Array([64,252,15,0]),dn=new Uint8Array([4,0,0,0]);Object.assign(k,{...r,type:2,name:"Struct0027",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:l}],methods:[],template:{memory:{array:bn},slots:{0:{structure:l,memory:{array:fn},slots:{0:{structure:b,memory:{array:dn}}}}}}},slot:59});Object.assign(j,{...r,type:11,name:"Struct0016",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:k}],methods:[],template:null},slot:58});const Sn=new Uint8Array,wn=new Uint8Array([170,170,170,170]),hn=new Uint8Array;Object.assign(Ee,{...r,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:j}],methods:[],template:{memory:{array:Sn},slots:{0:{structure:j,memory:{array:wn},slots:{0:{structure:k,memory:{array:hn}}}}}}},slot:17});Object.assign(ue,{...r,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ee}],methods:[],template:null},slot:16});const gn=new Uint8Array,An=new Uint8Array([170,170,170,170]),Un=new Uint8Array;Object.assign(Ke,{...r,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:j}],methods:[],template:{memory:{array:gn},slots:{0:{structure:j,memory:{array:An},slots:{0:{structure:k,memory:{array:Un}}}}}}},slot:19});Object.assign(oe,{...r,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ke}],methods:[],template:null},slot:18});const zn=new Uint8Array,Rn=new Uint8Array,qn=new Uint8Array([56,38,16,0]),On=new Uint8Array([237,37,16,0]),jn=new Uint8Array([80,111,115,116,101,114,105,122,101,114,0]),Pn=new Uint8Array([52,38,16,0]),Vn=new Uint8Array([211,37,16,0]),Cn=new Uint8Array([80,101,116,114,105,32,76,101,115,107,105,110,101,110,0]),kn=new Uint8Array([48,38,16,0]),In=new Uint8Array([1,0,0,0]),xn=new Uint8Array([44,38,16,0]),vn=new Uint8Array([144,37,16,0]),Tn=new Uint8Array([80,111,115,116,101,114,105,122,101,115,32,97,110,32,105,109,97,103,101,32,117,115,105,110,103,32,50,32,116,111,32,56,32,115,112,101,99,105,102,105,101,100,32,99,111,108,111,114,115,0]),En=new Uint8Array([170,170,170,170]),Kn=new Uint8Array,Dn=new Uint8Array([170,170,170,170]),Fn=new Uint8Array,Mn=new Uint8Array([170,170,170,170]),_n=new Uint8Array;Object.assign(Ge,{...r,type:2,name:"posterize.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:zn}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:F},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:M},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:l},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:_},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:ie},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:ue},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:oe}],methods:[],template:{memory:{array:Rn},slots:{0:{structure:F,memory:{array:qn},slots:{0:{structure:ce,memory:{array:On},slots:{0:{structure:le,memory:{array:jn}}}}}},1:{structure:M,memory:{array:Pn},slots:{0:{structure:be,memory:{array:Vn},slots:{0:{structure:pe,memory:{array:Cn}}}}}},2:{structure:l,memory:{array:kn},slots:{0:{structure:b,memory:{array:In}}}},3:{structure:_,memory:{array:xn},slots:{0:{structure:de,memory:{array:vn},slots:{0:{structure:fe,memory:{array:Tn}}}}}},4:{structure:ie,memory:{array:En},slots:{0:{structure:Te,memory:{array:Kn}}}},5:{structure:ue,memory:{array:Dn},slots:{0:{structure:Ee,memory:{array:Fn}}}},6:{structure:oe,memory:{array:Mn},slots:{0:{structure:Ke,memory:{array:_n}}}}}}},slot:1});Object.assign(P,{...r,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:z}],methods:[],template:null},slot:24});Object.assign(De,{...r,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:P}],methods:[],template:null},slot:23});Object.assign(Fe,{...r,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:De}],methods:[],template:null},slot:22});Object.assign(d,{...r,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:d}],methods:[],template:null},slot:25});const $n=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(Me,{...r,type:9,name:"posterize.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:b},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:b}],methods:[],template:{memory:{array:$n}}},slot:26});Object.assign(C,{...r,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:C}],methods:[],template:null},slot:27});const Bn=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ln=new Uint8Array,Gn=new Uint8Array([88,37,16,0]),Hn=new Uint8Array([4,0,0,0]);Object.assign(ye,{...r,type:2,name:"posterize.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Fe},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:d},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:d},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Me},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:C}],methods:[],template:{memory:{array:Bn}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:P},{...e,type:7,isRequired:!1,name:"FPixel",structure:n},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:l}],methods:[],template:{memory:{array:Ln},slots:{0:{structure:l,memory:{array:Gn},slots:{0:{structure:b,memory:{array:Hn}}}}}}},slot:21});const Jn=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Nn=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),rt=new Uint8Array([0,0,0,0,0,0,0,0]),Qn=new Uint8Array;Object.assign(I,{...r,type:2,name:"posterize.KernelInput(u8,posterize.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:ye}],methods:[],template:{memory:{array:Jn},slots:{0:{structure:ye,memory:{array:Nn},slots:{0:{structure:Fe,memory:{array:rt},address:1047200,slots:{0:{structure:De,memory:{array:Qn},address:0}}}}}}}},slot:20});Object.assign(_e,{...r,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:P}],methods:[],template:null},slot:23});Object.assign($e,{...r,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:_e}],methods:[],template:null},slot:30});const Wn=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Xn=new Uint8Array,Yn=new Uint8Array([88,37,16,0]),Zn=new Uint8Array([4,0,0,0]);Object.assign(me,{...r,type:2,name:"posterize.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:$e},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:d},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:d},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Me},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:C}],methods:[],template:{memory:{array:Wn}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:P},{...e,type:7,isRequired:!1,name:"FPixel",structure:n},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:l}],methods:[],template:{memory:{array:Xn},slots:{0:{structure:l,memory:{array:Yn},slots:{0:{structure:b,memory:{array:Zn}}}}}}},slot:29});const ei=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ti=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ri=new Uint8Array;Object.assign(x,{...r,type:2,name:"posterize.KernelOutput(u8,posterize.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:me}],methods:[],template:{memory:{array:ei},slots:{0:{structure:me,memory:{array:ti},slots:{0:{structure:$e,memory:{array:rt},address:1047200,slots:{0:{structure:_e,memory:{array:ri},address:0}}}}}}}},slot:28});const si=new Uint8Array([193,202,225,62,0,0,22,63,0,0,31,63,0,0,128,63,180,200,86,63,23,217,206,61,93,254,3,62,0,0,128,63,0,0,0,0,20,174,71,62,154,153,153,62,0,0,128,63,227,165,123,63,10,215,99,63,158,239,39,63,0,0,128,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,128,63,0,0,0,0,0,0,0,0,0,0,128,63,0,0,0,0,0,0,128,63,0,0,0,0,0,0,128,63,0,0,0,0,0,0,0,0,0,0,128,63,0,0,128,63,4,0,0,0,0,0,0,63,0,0,0,0,0,0,0,0]);Object.assign(v,{...r,type:2,name:"posterize.KernelParameters(posterize.kernel)",length:1,byteSize:144,align:4,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:128,byteSize:16,slot:0,name:"color1",structure:n},{...e,type:6,isRequired:!1,bitOffset:128,bitSize:128,byteSize:16,slot:1,name:"color2",structure:n},{...e,type:6,isRequired:!1,bitOffset:256,bitSize:128,byteSize:16,slot:2,name:"color3",structure:n},{...e,type:6,isRequired:!1,bitOffset:384,bitSize:128,byteSize:16,slot:3,name:"color4",structure:n},{...e,type:6,isRequired:!1,bitOffset:512,bitSize:128,byteSize:16,slot:4,name:"color5",structure:n},{...e,type:6,isRequired:!1,bitOffset:640,bitSize:128,byteSize:16,slot:5,name:"color6",structure:n},{...e,type:6,isRequired:!1,bitOffset:768,bitSize:128,byteSize:16,slot:6,name:"color7",structure:n},{...e,type:6,isRequired:!1,bitOffset:896,bitSize:128,byteSize:16,slot:7,name:"color8",structure:n},{...e,type:2,isRequired:!1,bitOffset:1024,bitSize:32,byteSize:4,slot:8,name:"numColors",structure:b},{...e,type:4,isRequired:!1,bitOffset:1056,bitSize:32,byteSize:4,slot:9,name:"blur",structure:O}],methods:[],template:{memory:{array:si}}},slot:31});Object.assign(He,{...r,type:8,name:"@typeInfo(@typeInfo(@TypeOf(posterize.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:60});Object.assign(Je,{...r,type:7,name:"ErrorSet0000!posterize.KernelOutput(u8,posterize.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:x},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:He}],methods:[],template:null},slot:36});Object.assign(Ne,{...r,type:3,name:"createOutput",length:1,byteSize:208,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:1152,bitSize:32,byteSize:4,slot:0,name:"0",structure:d},{...e,type:3,bitOffset:1184,bitSize:32,byteSize:4,slot:1,name:"1",structure:d},{...e,type:6,bitOffset:1216,bitSize:192,byteSize:24,slot:2,name:"2",structure:I},{...e,type:6,bitOffset:0,bitSize:1152,byteSize:144,slot:3,name:"3",structure:v},{...e,type:6,bitOffset:1408,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Je}],methods:[],template:null},slot:34});Object.assign(Qe,{...r,type:8,name:"@typeInfo(@typeInfo(@TypeOf(posterize.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:61});Object.assign(We,{...r,type:7,name:"ErrorSet0001!posterize.KernelOutput(u8,posterize.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:x},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Qe}],methods:[],template:null},slot:37});Object.assign(Xe,{...r,type:3,name:"createPartialOutput",length:1,byteSize:224,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:1152,bitSize:32,byteSize:4,slot:0,name:"0",structure:d},{...e,type:3,bitOffset:1184,bitSize:32,byteSize:4,slot:1,name:"1",structure:d},{...e,type:3,bitOffset:1216,bitSize:32,byteSize:4,slot:2,name:"2",structure:d},{...e,type:3,bitOffset:1248,bitSize:32,byteSize:4,slot:3,name:"3",structure:d},{...e,type:6,bitOffset:1280,bitSize:192,byteSize:24,slot:4,name:"4",structure:I},{...e,type:6,bitOffset:0,bitSize:1152,byteSize:144,slot:5,name:"5",structure:v},{...e,type:6,bitOffset:1472,bitSize:224,byteSize:28,slot:6,name:"retval",structure:We}],methods:[],template:null},slot:35});const ai=new Uint8Array,ni={argStruct:Ne,thunk:7,name:"createOutput"},ii={argStruct:Xe,thunk:1,name:"createPartialOutput"};Object.assign(Ye,{...r,type:2,name:"posterize",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:ai}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:Ge},{...e,type:7,isRequired:!1,name:"Input",structure:I},{...e,type:7,isRequired:!1,name:"Output",structure:x},{...e,type:7,isRequired:!1,name:"Parameters",structure:v}],methods:[ni,ii],template:null},slot:0});const ui=[z,le,ce,F,pe,be,M,b,l,fe,de,_,O,n,s,t,S,i,w,u,Se,$,h,g,o,we,B,he,L,ge,G,Ae,H,Ue,J,ze,N,Re,Q,qe,W,Oe,X,je,Y,Pe,Z,Ve,ee,Ce,te,ke,re,Ie,se,xe,ae,ve,ne,Te,ie,k,j,Ee,ue,Ke,oe,Ge,P,De,Fe,d,Me,C,ye,I,_e,$e,me,x,v,He,Je,Ne,Qe,We,Xe,Ye],oi=Ut(ui),yi=Ye.constructor,mi=(async()=>{const c=new URL("posterize-fe7229c5.wasm",import.meta.url).href;return fetch(c)})();zt(mi,{...oi,writeBack:!0});const{createOutput:wi,createPartialOutput:li,kernel:Le,Input:ci,Output:hi,Parameters:gi}=yi;function pi(c,f,y,a,m={},R={}){if(Array.isArray(m)){const U=m;m={};for(const[A,q]of Object.keys(Le.inputImages).entries())m[q]=U[A]}const T=new ci(void 0),E=Object.keys(Le.inputImages),p=[];let V;for(const U of E){let A=m[U];if(A||(E.length===1&&["data","width","height"].every(q=>!!m[q])?A=m:p.push(U)),T[U]=A,V){if(A.colorSpace!==V)throw new Error(`Input images must all use the same color space: ${V}`)}else V=A.colorSpace}if(p.length>0)throw new Error(`Missing input image${p.length>1?"s":""}: ${p.join(", ")}`);const Be=li(c,f,y,a,T,R),Ze=U=>{const A=Object.keys(U),q={};for(const et of A){const{data:{typedArray:K},width:tt,height:at}=U[et];let D;if(typeof ImageData=="function"){const nt=new Uint8ClampedArray(K.buffer,K.byteOffset,K.byteLength);D=new ImageData(nt,tt,a,{colorSpace:V})}else D={data:K,width:tt,height:at};if(A.length===1)return D;q[et]=D}return q};return Be[Symbol.toStringTag]==="Promise"?Be.then(Ze):Ze(Be)}function bi(){const c={};for(let[f,y]of Object.entries(Le)){if(f==="parameters"){const a={};for(const[m,R]of Object.entries(y)){const T=a[m]={};for(let[E,p]of Object.entries(R))typeof p=="object"?"string"in p?p=p.string:p=st(p):typeof p=="function"&&(p=fi(p.name)),T[E]=p}y=a}else typeof y=="object"&&("string"in y?y=y.string:y=y.valueOf());c[f]=y}return c}function st(c){const f=[];for(let[y,a]of Object.entries(c))typeof a=="object"&&(a=st(a)),f[y]=a;return f}function fi(c){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[c]}onmessage=c=>{const[f,y,...a]=c.data;di(f,a).then(([m,R])=>{postMessage([f,y,m],{transfer:R})}).catch(m=>{postMessage(["error",y,m])})};async function di(c,f){switch(c){case"getKernelInfo":return[bi(...f)];case"createPartialImageData":const a=await pi(...f),m=[];if("data"in a&&"width"in a&&"height"in a)m.push(a.data.buffer);else for(const R of Object.entries(a))m.push(a.data.buffer);return[a,m];default:throw new Error(`Unknown function: ${c}`)}}
