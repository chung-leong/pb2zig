import{u as us,a as ms,b as ys,c as bs,d as ls,e as gs,f as ps,g as fs,h as Os,i as Ss,j as js,k as zs,l as hs,m as ds,n as ws,p as As,o as Us,q as vs,r as Ps,s as Vs}from"./index-58d89d46.js";us();js();zs();ms();ys();hs();ds();ws();As();bs();ls();gs();ps();Us();Vs();fs();vs();Os();Ss();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},O={},D={},F={},M={},T={},l={},S={},$={},L={},r={},y={},d={},B={},f={},G={},H={},J={},N={},Q={},w={},W={},X={},ct={},V={},Y={},I={},m={},p={},v={},ut={},Z={},q={},tt={},R={},et={},k={},E={},P={},mt={},yt={},_={},bt={},lt={},gt={},Bt={},st={},Gt={},rt={},Ht={},Jt={},pt={},Nt={},ft={},Qt={},Wt={},Ot={},Xt={},St={},jt={},zt={},Yt={},ht={},dt={},wt={},Zt={},At={},te={},Ut={},ee={},se={},vt={},Pt={},re={},Vt={},ae={},It={},ne={},ie={},qt={},Rt={},kt={},oe={},at={},ce={},ue={},Et={},me={},xt={},ye={},be={},le={},ge={},pe={},fe={},Oe={},Se={},je={},ze={},he={},de={},we={},Ae={},Ue={},ve={},Pe={},Ct={},Ve={},Ie={},Kt={},qe={},_t={},Re={},ke={},Ee={},xe={},Ce={},Ke={},_e={},Dt={},De={},Fe={},Me={},Te={},$e={},Le={},Be={},Ge={},He={},Je={},Ft={},Ne={},Qe={},We={},Xe={},Ye={},Ze={},ts={},es={},ss={},rs={},Is=new Uint8Array,qs=new Uint8Array([0,0,0,0,0,0,0,0]),Rs=new Uint8Array,ks=new Uint8Array([0,0,0,0,0,0,0,0]),Es=new Uint8Array,xs=new Uint8Array([0,0,0,0,0,0,176,64]),Cs=new Uint8Array,Ks=new Uint8Array([0,0,0,0,0,0,176,64]),_s=new Uint8Array,Ds=new Uint8Array,Fs=new Uint8Array,Ms=new Uint8Array,Ts=new Uint8Array,$s=new Uint8Array,Ls=new Uint8Array([0,0,0,0,0,0,0,0]),Bs=new Uint8Array,Gs=new Uint8Array([0,0,0,0,0,0,89,64]),Hs=new Uint8Array,Js=new Uint8Array([0,0,0,0,0,0,36,64]),Ns=new Uint8Array,Qs=new Uint8Array,Ws=new Uint8Array([0,0,0,0,0,0,0,0]),Xs=new Uint8Array,Ys=new Uint8Array([0,0,0,0,0,0,89,64]),Zs=new Uint8Array,tr=new Uint8Array([0,0,0,0,0,0,20,64]),er=new Uint8Array,sr=new Uint8Array,rr=new Uint8Array,ar=new Uint8Array,nr=new Uint8Array([4]),ir=new Uint8Array,or=new Uint8Array,cr=new Uint8Array([64,16,0,1]),ur=new Uint8Array([110,101,116,46,110,105,99,111,112,116,101,114,101,46,102,105,108,116,101,114,115,0]),mr=new Uint8Array([97,16,0,1]),yr=new Uint8Array([110,105,99,111,112,116,101,114,101,0]),br=new Uint8Array,lr=new Uint8Array([1]),gr=new Uint8Array([124,16,0,1]),pr=new Uint8Array([119,97,118,101,0]),fr=new Uint8Array,Or=new Uint8Array,Sr=new Uint8Array,jr=new Uint8Array([0]),zr=new Uint8Array([1]),as=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),hr=new Uint8Array,dr=new Uint8Array,wr=new Uint8Array,Ar=new Uint8Array,Ur=new Uint8Array([4]),Mt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ns=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),vr=new Uint8Array,Pr=new Uint8Array,Vr=new Uint8Array,Ir=new Uint8Array,qr=new Uint8Array([4]),Tt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Rr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,32,65,0,0,160,64]),kr=new Uint8Array([27,0]),Er=new Uint8Array,xr=new Uint8Array,Cr=new Uint8Array,Kr=new Uint8Array;Object.assign(Bt,{slots:{0:st,1:rt}});Object.assign(st,{structure:r,memory:{array:Is},slots:{0:Gt}});Object.assign(Gt,{structure:y,memory:{array:qs}});Object.assign(rt,{structure:r,memory:{array:Rs},slots:{0:Ht}});Object.assign(Ht,{structure:y,memory:{array:ks}});Object.assign(Jt,{slots:{0:pt,1:ft}});Object.assign(pt,{structure:r,memory:{array:Es},slots:{0:Nt}});Object.assign(Nt,{structure:y,memory:{array:xs}});Object.assign(ft,{structure:r,memory:{array:Cs},slots:{0:Qt}});Object.assign(Qt,{structure:y,memory:{array:Ks}});Object.assign(Wt,{slots:{0:Ot,1:St,2:jt,3:zt}});Object.assign(Ot,{structure:s,memory:{array:_s},slots:{0:Xt}});Object.assign(Xt,{structure:G});Object.assign(St,{structure:d,memory:{array:Ds},slots:{0:st,1:rt}});Object.assign(jt,{structure:B,memory:{array:Fs},slots:{0:pt,1:ft}});Object.assign(zt,{structure:d,memory:{array:Ms},slots:{0:st,1:rt}});Object.assign(Yt,{slots:{0:ht,1:wt,2:At,3:Ut}});Object.assign(ht,{structure:s,memory:{array:Ts},slots:{0:dt}});Object.assign(dt,{structure:f});Object.assign(wt,{structure:r,memory:{array:$s},slots:{0:Zt}});Object.assign(Zt,{structure:y,memory:{array:Ls}});Object.assign(At,{structure:r,memory:{array:Bs},slots:{0:te}});Object.assign(te,{structure:y,memory:{array:Gs}});Object.assign(Ut,{structure:r,memory:{array:Hs},slots:{0:ee}});Object.assign(ee,{structure:y,memory:{array:Js}});Object.assign(se,{slots:{0:vt,1:Pt,2:Vt,3:It}});Object.assign(vt,{structure:s,memory:{array:Ns},slots:{0:dt}});Object.assign(Pt,{structure:r,memory:{array:Qs},slots:{0:re}});Object.assign(re,{structure:y,memory:{array:Ws}});Object.assign(Vt,{structure:r,memory:{array:Xs},slots:{0:ae}});Object.assign(ae,{structure:y,memory:{array:Ys}});Object.assign(It,{structure:r,memory:{array:Zs},slots:{0:ne}});Object.assign(ne,{structure:y,memory:{array:tr}});Object.assign(ie,{slots:{0:qt,1:Rt,2:kt}});Object.assign(qt,{structure:H,memory:{array:er},slots:{0:Ot,1:St,2:jt,3:zt}});Object.assign(Rt,{structure:J,memory:{array:sr},slots:{0:ht,1:wt,2:At,3:Ut}});Object.assign(kt,{structure:N,memory:{array:rr},slots:{0:vt,1:Pt,2:Vt,3:It}});Object.assign(oe,{slots:{0:at}});Object.assign(at,{structure:l,memory:{array:ar},slots:{0:ce}});Object.assign(ce,{structure:S,memory:{array:nr}});Object.assign(ue,{slots:{0:Et}});Object.assign(Et,{structure:w,memory:{array:ir},slots:{0:at}});Object.assign(me,{slots:{0:xt}});Object.assign(xt,{structure:w,memory:{array:or},slots:{0:at}});Object.assign(ye,{slots:{0:be,1:ge,2:fe,3:Se,4:ze,5:he,6:de}});Object.assign(be,{structure:F,memory:{array:cr},slots:{0:le}});Object.assign(le,{structure:D,memory:{array:ur},reloc:16781376,const:!0});Object.assign(ge,{structure:T,memory:{array:mr},slots:{0:pe}});Object.assign(pe,{structure:M,memory:{array:yr},reloc:16781409,const:!0});Object.assign(fe,{structure:l,memory:{array:br},slots:{0:Oe}});Object.assign(Oe,{structure:S,memory:{array:lr}});Object.assign(Se,{structure:L,memory:{array:gr},slots:{0:je}});Object.assign(je,{structure:$,memory:{array:pr},reloc:16781436,const:!0});Object.assign(ze,{structure:Q,memory:{array:fr},slots:{0:qt,1:Rt,2:kt}});Object.assign(he,{structure:W,memory:{array:Or},slots:{0:Et}});Object.assign(de,{structure:X,memory:{array:Sr},slots:{0:xt}});Object.assign(we,{slots:{0:Ae,1:Ue}});Object.assign(Ae,{structure:p,memory:{array:jr}});Object.assign(Ue,{structure:p,memory:{array:zr}});Object.assign(ve,{memory:{array:as},slots:{0:Pe}});Object.assign(Pe,{structure:I,memory:{array:as,offset:0,length:8},slots:{0:Ct}});Object.assign(Ct,{structure:Y,memory:{array:hr},reloc:0,const:!0});Object.assign(Ve,{slots:{0:Ie,1:qe,2:Re}});Object.assign(Ie,{structure:s,memory:{array:dr},slots:{0:Kt}});Object.assign(Kt,{structure:V});Object.assign(qe,{structure:s,memory:{array:wr},slots:{0:_t}});Object.assign(_t,{structure:ut});Object.assign(Re,{structure:l,memory:{array:Ar},slots:{0:ke}});Object.assign(ke,{structure:S,memory:{array:Ur}});Object.assign(Ee,{memory:{array:Mt},slots:{0:xe}});Object.assign(xe,{structure:Z,memory:{array:Mt},slots:{0:Ce}});Object.assign(Ce,{structure:I,memory:{array:Mt,offset:0,length:8},slots:{0:Ct}});Object.assign(Ke,{memory:{array:ns},slots:{0:_e}});Object.assign(_e,{structure:R,memory:{array:ns,offset:0,length:8},slots:{0:Dt}});Object.assign(Dt,{structure:tt,memory:{array:vr},reloc:0});Object.assign(De,{slots:{0:Fe,1:Me,2:Te}});Object.assign(Fe,{structure:s,memory:{array:Pr},slots:{0:Kt}});Object.assign(Me,{structure:s,memory:{array:Vr},slots:{0:_t}});Object.assign(Te,{structure:l,memory:{array:Ir},slots:{0:$e}});Object.assign($e,{structure:S,memory:{array:qr}});Object.assign(Le,{memory:{array:Tt},slots:{0:Be}});Object.assign(Be,{structure:et,memory:{array:Tt},slots:{0:Ge}});Object.assign(Ge,{structure:R,memory:{array:Tt,offset:0,length:8},slots:{0:Dt}});Object.assign(He,{memory:{array:Rr}});Object.assign(Je,{slots:{0:Ft}});Object.assign(Ft,{structure:P,memory:{array:kr}});Object.assign(Ne,{slots:{0:Ft}});Object.assign(Qe,{slots:{0:We,1:Ye,2:ts,3:ss}});Object.assign(We,{structure:s,memory:{array:Er},slots:{0:Xe}});Object.assign(Xe,{structure:ct});Object.assign(Ye,{structure:s,memory:{array:xr},slots:{0:Ze}});Object.assign(Ze,{structure:q});Object.assign(ts,{structure:s,memory:{array:Cr},slots:{0:es}});Object.assign(es,{structure:k});Object.assign(ss,{structure:s,memory:{array:Kr},slots:{0:rs}});Object.assign(rs,{structure:E});const _r={argStruct:yt,thunkId:2,name:"createOutput"},Dr={argStruct:lt,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(O,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(D,{...e,type:1,name:"[21:0]u8",length:21,byteSize:22,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(F,{...e,type:13,name:"*const [21:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:D}],methods:[]}});Object.assign(M,{...e,type:1,name:"[9:0]u8",length:9,byteSize:10,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(T,{...e,type:13,name:"*const [9:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(l,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:l}],methods:[]}});Object.assign(S,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign($,{...e,type:1,name:"[4:0]u8",length:4,byteSize:5,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(L,{...e,type:13,name:"*const [4:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[]}});Object.assign(r,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(y,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:y}],methods:[]}});Object.assign(d,{...e,type:2,name:"Struct738220547",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:r},{...t,type:9,slot:1,name:"1",structure:r}],methods:[],template:Bt}});Object.assign(B,{...e,type:2,name:"Struct2662133551",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:r},{...t,type:9,slot:1,name:"1",structure:r}],methods:[],template:Jt}});Object.assign(f,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:f}],methods:[]}});Object.assign(G,{...e,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:f}],methods:[]}});Object.assign(H,{...e,type:2,name:"Struct2812903031",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:d},{...t,type:9,slot:2,name:"maxValue",structure:B},{...t,type:9,slot:3,name:"defaultValue",structure:d}],methods:[],template:Wt}});Object.assign(J,{...e,type:2,name:"Struct2233039273",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:r},{...t,type:9,slot:2,name:"maxValue",structure:r},{...t,type:9,slot:3,name:"defaultValue",structure:r}],methods:[],template:Yt}});Object.assign(N,{...e,type:2,name:"Struct2806498133",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:r},{...t,type:9,slot:2,name:"maxValue",structure:r},{...t,type:9,slot:3,name:"defaultValue",structure:r}],methods:[],template:se}});Object.assign(Q,{...e,type:2,name:"Struct1601438196",align:1,instance:{members:[{...t,type:9,slot:0,name:"center",structure:H},{...t,type:9,slot:1,name:"amplitude",structure:J},{...t,type:9,slot:2,name:"frequency",structure:N}],methods:[],template:ie}});Object.assign(w,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:l}],methods:[],template:oe}});Object.assign(W,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:9,slot:0,name:"src",structure:w}],methods:[],template:ue}});Object.assign(X,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:9,slot:0,name:"dst",structure:w}],methods:[],template:me}});Object.assign(ct,{...e,type:2,name:"wave.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:F},{...t,type:9,slot:1,name:"vendor",structure:T},{...t,type:9,slot:2,name:"version",structure:l},{...t,type:9,slot:3,name:"description",structure:L},{...t,type:9,slot:4,name:"parameters",structure:Q},{...t,type:9,slot:5,name:"inputImages",structure:W},{...t,type:9,slot:6,name:"outputImages",structure:X}],methods:[],template:ye}});Object.assign(V,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(Y,{...e,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(I,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:Y}],methods:[]}});Object.assign(m,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[]}});Object.assign(p,{...e,type:11,name:"wave.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:p},{...t,type:9,slot:1,name:"display-p3",structure:p}],methods:[],template:we}});Object.assign(v,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:v}],methods:[]}});Object.assign(ut,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:f}],methods:[]}});Object.assign(Z,{...e,type:2,name:"wave.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:I},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:v}],methods:[],template:ve},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:l}],methods:[],template:Ve}});Object.assign(q,{...e,type:2,name:"wave.KernelInput(u8,wave.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:Z}],methods:[],template:Ee}});Object.assign(tt,{...e,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(R,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:tt}],methods:[]}});Object.assign(et,{...e,type:2,name:"wave.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:R},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:v}],methods:[],template:Ke},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:l}],methods:[],template:De}});Object.assign(k,{...e,type:2,name:"wave.KernelOutput(u8,wave.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:et}],methods:[],template:Le}});Object.assign(E,{...e,type:2,name:"wave.KernelParameters(wave.kernel)",byteSize:16,align:8,instance:{members:[{...t,type:7,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"center",structure:G},{...t,type:4,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"amplitude",structure:f},{...t,type:4,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"frequency",structure:f}],methods:[],template:He}});Object.assign(P,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(wave.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:P}],methods:[],template:Je}});Object.assign(mt,{...e,type:9,name:"ErrorSet1314185718!wave.KernelOutput(u8,wave.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:k},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:P}],methods:[]}});Object.assign(yt,{...e,type:5,name:"createOutput",byteSize:80,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...t,type:3,isRequired:!0,bitOffset:160,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...t,type:7,isRequired:!0,bitOffset:192,bitSize:192,byteSize:24,slot:0,name:"2",structure:q},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:128,byteSize:16,slot:1,name:"3",structure:E},{...t,type:7,isRequired:!0,bitOffset:384,bitSize:224,byteSize:28,slot:2,name:"retval",structure:mt}],methods:[]}});Object.assign(_,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(wave.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:_}],methods:[],template:Ne}});Object.assign(bt,{...e,type:9,name:"ErrorSet796355719!wave.KernelOutput(u8,wave.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:k},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:_}],methods:[]}});Object.assign(lt,{...e,type:5,name:"createPartialOutput",byteSize:88,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...t,type:3,isRequired:!0,bitOffset:160,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...t,type:3,isRequired:!0,bitOffset:192,bitSize:32,byteSize:4,slot:5,name:"2",structure:m},{...t,type:3,isRequired:!0,bitOffset:224,bitSize:32,byteSize:4,slot:6,name:"3",structure:m},{...t,type:7,isRequired:!0,bitOffset:256,bitSize:192,byteSize:24,slot:0,name:"4",structure:q},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:128,byteSize:16,slot:1,name:"5",structure:E},{...t,type:7,isRequired:!0,bitOffset:448,bitSize:224,byteSize:28,slot:2,name:"retval",structure:bt}],methods:[]}});Object.assign(gt,{...e,type:2,name:"wave",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:s},{...t,type:9,slot:1,name:"Input",structure:s},{...t,type:9,slot:2,name:"Output",structure:s},{...t,type:9,slot:3,name:"Parameters",structure:s}],methods:[_r,Dr],template:Qe}});const Fr=[s,O,D,F,M,T,l,S,$,L,r,y,d,B,f,G,H,J,N,Q,w,W,X,ct,V,Y,I,m,p,v,ut,Z,q,tt,R,et,k,E,P,mt,yt,_,bt,lt,gt],Mr=gt,Tr={runtimeSafety:!1,littleEndian:!0},nt=Ps();nt.getControlObject();nt.recreateStructures(Fr,Tr);const $r=(async()=>{const o=new URL("wave-aee09f02.wasm",import.meta.url).href;return fetch(o)})();nt.loadModule($r);nt.linkVariables(!0);const{constructor:Lr}=Mr,{createPartialOutput:Br,Input:Gr,kernel:ot}=Lr;function Hr(o,c,n,a,i={},j={}){const z=[];for(const[b]of ot.inputImages)z.push(b);const A=[];for(const[b]of ot.outputImages)A.push(b);if(Array.isArray(i)){const b=i;i={};for(const[g,h]of z.entries())i[h]=b[g]}const u=new Gr(void 0),x=[];let U;for(const b of z){let g=i[b];if(g||(z.length===1&&["data","width","height"].every(h=>!!i[h])?g=i:x.push(b)),u[b]=g,U){if(g.colorSpace!==U)throw new Error(`Input images must all use the same color space: ${U}`)}else U=g.colorSpace}if(x.length>0)throw new Error(`Missing input image${x.length>1?"s":""}: ${x.join(", ")}`);const it=Br(o,c,n,a,u,j),$t=b=>{const g={};for(const h of A){const{data:{typedArray:C},width:Lt,height:os}=b[h];let K;if(typeof ImageData=="function"){const cs=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);K=new ImageData(cs,Lt,a,{colorSpace:U})}else K={data:C,width:Lt,height:os};if(A.length===1)return K;g[h]=K}return g};return it[Symbol.toStringTag]==="Promise"?it.then($t):$t(it)}function Jr(){const o={};for(let[c,n]of ot){if(c==="parameters"){const a={};for(const[i,j]of n){const z=a[i]={};for(let[A,u]of j)typeof u=="object"?"string"in u?u=u.string:u=is(u):typeof u=="function"&&(u=Nr(u.name)),z[A]=u}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());o[c]=n}return o}function is(o){const c=[];for(let[n,a]of o)typeof a=="object"&&(a=is(a)),c[n]=a;return c}function Nr(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[c,n,...a]=o.data;Qr(c,a).then(([i,j])=>{postMessage([c,n,i],{transfer:j})}).catch(i=>{postMessage(["error",n,i])})};async function Qr(o,c){switch(o){case"getKernelInfo":return[Jr(...c)];case"createPartialImageData":const a=await Hr(...c),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const j of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${o}`)}}
