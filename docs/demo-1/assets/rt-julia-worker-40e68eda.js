import{u as Fe,a as Me,b as _e,c as $e,d as Be,e as Le,f as Ye,g as Ge,h as He,i as Je,j as Ne,k as Qe,l as We,m as Xe,o as Ze,n as et,p as tt,q as st}from"./index-422d9c98.js";Fe();Me();_e();$e();Be();Le();Ye();Ge();He();Je();Ne();Qe();We();Xe();Ze();et();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},S={},Q={},W={},k={},X={},Z={},I={},p={},b={},ee={},te={},v={},l={},r={},s={},se={},x={},re={},E={},R={},ae={},D={},ne={},K={},ie={},T={},ue={},F={},oe={},M={},le={},_={},me={},$={},ye={},B={},ce={},L={},be={},Y={},pe={},G={},fe={},H={},Re={},z={},de={},Se={},c={},he={},w={},qe={},J={},q={},ge={},ze={},N={},A={},U={},Ae={},Ue={},je={},Pe={},Ve={},Ce={},ke={};Object.assign(S,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:5});Object.assign(Q,{...t,type:1,name:"[14:0]u8",length:14,byteSize:15,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:4});Object.assign(W,{...t,type:11,name:"*const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[],template:null},slot:3});Object.assign(k,{...t,type:11,name:"*const *const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:2});Object.assign(X,{...t,type:1,name:"[11:0]u8",length:11,byteSize:12,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:8});Object.assign(Z,{...t,type:11,name:"*const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:7});Object.assign(I,{...t,type:11,name:"*const *const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:6});Object.assign(p,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[],template:null},slot:10});Object.assign(b,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:p}],methods:[],template:null},slot:9});Object.assign(ee,{...t,type:1,name:"[32:0]u8",length:32,byteSize:33,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:13});Object.assign(te,{...t,type:11,name:"*const [32:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:12});Object.assign(v,{...t,type:11,name:"*const *const [32:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:11});Object.assign(l,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:l}],methods:[],template:null},slot:32});Object.assign(r,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[],template:null},slot:58});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:r}],methods:[],template:null},slot:57});const rt=new Uint8Array([]),at=new Uint8Array([96,248,15,0]),nt=new Uint8Array([0,0,0,0,0,0,137,64]);Object.assign(se,{...t,type:2,name:"Struct0014",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:l},{...e,type:8,isRequired:!1,slot:0,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:rt},slots:{0:{structure:s,memory:{array:at},slots:{0:{structure:r,memory:{array:nt}}}}}}},slot:39});Object.assign(x,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:38});const it=new Uint8Array([]),ut=new Uint8Array([96,248,15,0]),ot=new Uint8Array([0,0,0,0,0,192,130,64]);Object.assign(re,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:l},{...e,type:8,isRequired:!1,slot:0,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:it},slots:{0:{structure:s,memory:{array:ut},slots:{0:{structure:r,memory:{array:ot}}}}}}},slot:41});Object.assign(E,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:40});Object.assign(R,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:l}],methods:[],template:null},slot:33});const lt=new Uint8Array([]),mt=new Uint8Array([112,249,15,0]),yt=new Uint8Array([0,0,0,0,0,0,240,191]),ct=new Uint8Array([184,249,15,0]),bt=new Uint8Array([0,0,0,0,0,0,240,191]),pt=new Uint8Array([16,250,15,0]),ft=new Uint8Array([0,0,0,0,0,0,0,192]),dt=new Uint8Array([136,250,15,0]),St=new Uint8Array([0,0,0,0,0,0,224,191]);Object.assign(ae,{...t,type:2,name:"Struct0025",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:s}],methods:[],template:{memory:{array:lt},slots:{0:{structure:s,memory:{array:mt},slots:{0:{structure:r,memory:{array:yt}}}},1:{structure:s,memory:{array:ct},slots:{0:{structure:r,memory:{array:bt}}}},2:{structure:s,memory:{array:pt},slots:{0:{structure:r,memory:{array:ft}}}},3:{structure:s,memory:{array:dt},slots:{0:{structure:r,memory:{array:St}}}}}}},slot:60});Object.assign(D,{...t,type:11,name:"Struct0022",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:59});const ht=new Uint8Array([]),gt=new Uint8Array([112,249,15,0]),zt=new Uint8Array([0,0,0,0,0,0,240,63]),Ot=new Uint8Array([184,249,15,0]),wt=new Uint8Array([0,0,0,0,0,0,240,63]),Rt=new Uint8Array([16,250,15,0]),qt=new Uint8Array([0,0,0,0,0,0,0,64]),At=new Uint8Array([136,250,15,0]),Ut=new Uint8Array([0,0,0,0,0,0,224,63]);Object.assign(ne,{...t,type:2,name:"Struct0026",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:s}],methods:[],template:{memory:{array:ht},slots:{0:{structure:s,memory:{array:gt},slots:{0:{structure:r,memory:{array:zt}}}},1:{structure:s,memory:{array:Ot},slots:{0:{structure:r,memory:{array:wt}}}},2:{structure:s,memory:{array:Rt},slots:{0:{structure:r,memory:{array:qt}}}},3:{structure:s,memory:{array:At},slots:{0:{structure:r,memory:{array:Ut}}}}}}},slot:62});Object.assign(K,{...t,type:11,name:"Struct0023",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:61});const jt=new Uint8Array([]),Pt=new Uint8Array([112,249,15,0]),Vt=new Uint8Array([154,153,153,153,153,153,217,191]),Ct=new Uint8Array([184,249,15,0]),kt=new Uint8Array([195,245,40,92,143,194,229,191]),It=new Uint8Array([16,250,15,0]),vt=new Uint8Array([10,215,163,112,61,10,215,191]),xt=new Uint8Array([136,250,15,0]),Et=new Uint8Array([123,20,174,71,225,122,164,191]);Object.assign(ie,{...t,type:2,name:"Struct0027",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:s}],methods:[],template:{memory:{array:jt},slots:{0:{structure:s,memory:{array:Pt},slots:{0:{structure:r,memory:{array:Vt}}}},1:{structure:s,memory:{array:Ct},slots:{0:{structure:r,memory:{array:kt}}}},2:{structure:s,memory:{array:It},slots:{0:{structure:r,memory:{array:vt}}}},3:{structure:s,memory:{array:xt},slots:{0:{structure:r,memory:{array:Et}}}}}}},slot:64});Object.assign(T,{...t,type:11,name:"Struct0024",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:63});const Dt=new Uint8Array([]),Kt=new Uint8Array([170,170,170,170]),y=new Uint8Array([]),Tt=new Uint8Array([170,170,170,170]),Ft=new Uint8Array([170,170,170,170]);Object.assign(ue,{...t,type:2,name:"Struct0016",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:R},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:D},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:K},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:T}],methods:[],template:{memory:{array:Dt},slots:{0:{structure:D,memory:{array:Kt},slots:{0:{structure:ae,memory:{array:y},address:-1431655766}}},1:{structure:K,memory:{array:Tt},slots:{0:{structure:ne,memory:{array:y},address:-1431655766}}},2:{structure:T,memory:{array:Ft},slots:{0:{structure:ie,memory:{array:y},address:-1431655766}}}}}},slot:43});Object.assign(F,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:42});const Mt=new Uint8Array([]),_t=new Uint8Array([144,250,15,0]),$t=new Uint8Array([0,0,0,0,0,0,240,191]),Bt=new Uint8Array([24,248,15,0]),Lt=new Uint8Array([0,0,0,0,0,0,240,63]),Yt=new Uint8Array([248,247,15,0]),Gt=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(oe,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:l},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:Mt},slots:{0:{structure:s,memory:{array:_t},slots:{0:{structure:r,memory:{array:$t}}}},1:{structure:s,memory:{array:Bt},slots:{0:{structure:r,memory:{array:Lt}}}},2:{structure:s,memory:{array:Yt},slots:{0:{structure:r,memory:{array:Gt}}}}}}},slot:45});Object.assign(M,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:44});const Ht=new Uint8Array([]),Jt=new Uint8Array([144,250,15,0]),Nt=new Uint8Array([0,0,0,0,0,0,0,0]),Qt=new Uint8Array([24,248,15,0]),Wt=new Uint8Array([0,0,0,0,0,0,36,64]),Xt=new Uint8Array([248,247,15,0]),Zt=new Uint8Array([0,0,0,0,0,0,8,64]);Object.assign(le,{...t,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:l},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:Ht},slots:{0:{structure:s,memory:{array:Jt},slots:{0:{structure:r,memory:{array:Nt}}}},1:{structure:s,memory:{array:Qt},slots:{0:{structure:r,memory:{array:Wt}}}},2:{structure:s,memory:{array:Xt},slots:{0:{structure:r,memory:{array:Zt}}}}}}},slot:47});Object.assign(_,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:46});const es=new Uint8Array([]),ts=new Uint8Array([144,250,15,0]),ss=new Uint8Array([0,0,0,0,0,0,20,192]),rs=new Uint8Array([24,248,15,0]),as=new Uint8Array([0,0,0,0,0,0,20,64]),ns=new Uint8Array([248,247,15,0]),is=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(me,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:l},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:es},slots:{0:{structure:s,memory:{array:ts},slots:{0:{structure:r,memory:{array:ss}}}},1:{structure:s,memory:{array:rs},slots:{0:{structure:r,memory:{array:as}}}},2:{structure:s,memory:{array:ns},slots:{0:{structure:r,memory:{array:is}}}}}}},slot:49});Object.assign($,{...t,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:48});const us=new Uint8Array([]),os=new Uint8Array([170,170,170,170]),ls=new Uint8Array([170,170,170,170]),ms=new Uint8Array([170,170,170,170]),ys=new Uint8Array([170,170,170,170]),cs=new Uint8Array([170,170,170,170]),bs=new Uint8Array([170,170,170,170]);Object.assign(ye,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"width",structure:x},{...e,type:8,isRequired:!1,slot:1,name:"height",structure:E},{...e,type:8,isRequired:!1,slot:2,name:"c",structure:F},{...e,type:8,isRequired:!1,slot:3,name:"w",structure:M},{...e,type:8,isRequired:!1,slot:4,name:"camDistance",structure:_},{...e,type:8,isRequired:!1,slot:5,name:"rotationY",structure:$}],methods:[],template:{memory:{array:us},slots:{0:{structure:x,memory:{array:os},slots:{0:{structure:se,memory:{array:y},address:-1431655766}}},1:{structure:E,memory:{array:ls},slots:{0:{structure:re,memory:{array:y},address:-1431655766}}},2:{structure:F,memory:{array:ms},slots:{0:{structure:ue,memory:{array:y},address:-1431655766}}},3:{structure:M,memory:{array:ys},slots:{0:{structure:oe,memory:{array:y},address:-1431655766}}},4:{structure:_,memory:{array:cs},slots:{0:{structure:le,memory:{array:y},address:-1431655766}}},5:{structure:$,memory:{array:bs},slots:{0:{structure:me,memory:{array:y},address:-1431655766}}}}}},slot:15});Object.assign(B,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:14});const ps=new Uint8Array([]),fs=new Uint8Array([176,253,15,0]),ds=new Uint8Array([3,0,0,0]);Object.assign(ce,{...t,type:2,name:"Struct0020",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:b}],methods:[],template:{memory:{array:ps},slots:{0:{structure:b,memory:{array:fs},slots:{0:{structure:p,memory:{array:ds}}}}}}},slot:51});Object.assign(L,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:50});const Ss=new Uint8Array([]),hs=new Uint8Array([170,170,170,170]);Object.assign(be,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"inputUsedToTest",structure:L}],methods:[],template:{memory:{array:Ss},slots:{0:{structure:L,memory:{array:hs},slots:{0:{structure:ce,memory:{array:y},address:-1431655766}}}}}},slot:17});Object.assign(Y,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:16});const gs=new Uint8Array([]),zs=new Uint8Array([176,253,15,0]),Os=new Uint8Array([4,0,0,0]);Object.assign(pe,{...t,type:2,name:"Struct0021",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:b}],methods:[],template:{memory:{array:gs},slots:{0:{structure:b,memory:{array:zs},slots:{0:{structure:p,memory:{array:Os}}}}}}},slot:53});Object.assign(G,{...t,type:11,name:"Struct0013",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:52});const ws=new Uint8Array([]),Rs=new Uint8Array([170,170,170,170]);Object.assign(fe,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:G}],methods:[],template:{memory:{array:ws},slots:{0:{structure:G,memory:{array:Rs},slots:{0:{structure:pe,memory:{array:y},address:-1431655766}}}}}},slot:19});Object.assign(H,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:18});const qs=new Uint8Array([]),As=new Uint8Array([]),Us=new Uint8Array([164,250,15,0]),js=new Uint8Array([168,36,16,0]),Ps=new Uint8Array([100,101,114,115,99,104,109,97,108,101,46,99,111,109,0]),Vs=new Uint8Array([228,250,15,0]),Cs=new Uint8Array([156,36,16,0]),ks=new Uint8Array([68,101,114,32,83,99,104,109,97,108,101,0]),Is=new Uint8Array([36,251,15,0]),vs=new Uint8Array([1,0,0,0]),xs=new Uint8Array([124,251,15,0]),Es=new Uint8Array([123,36,16,0]),Ds=new Uint8Array([82,97,121,116,114,97,99,101,115,32,97,32,81,117,97,116,101,114,110,105,111,110,32,74,117,108,105,97,32,115,101,116,0]),Ks=new Uint8Array([170,170,170,170]),Ts=new Uint8Array([170,170,170,170]),Fs=new Uint8Array([170,170,170,170]);Object.assign(Re,{...t,type:2,name:"rt-julia.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:qs}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:k},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:I},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:b},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:v},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:B},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:Y},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:H}],methods:[],template:{memory:{array:As},slots:{0:{structure:k,memory:{array:Us},slots:{0:{structure:W,memory:{array:js},slots:{0:{structure:Q,memory:{array:Ps},address:1057960}}}}},1:{structure:I,memory:{array:Vs},slots:{0:{structure:Z,memory:{array:Cs},slots:{0:{structure:X,memory:{array:ks},address:1057948}}}}},2:{structure:b,memory:{array:Is},slots:{0:{structure:p,memory:{array:vs}}}},3:{structure:v,memory:{array:xs},slots:{0:{structure:te,memory:{array:Es},slots:{0:{structure:ee,memory:{array:Ds},address:1057915}}}}},4:{structure:B,memory:{array:Ks},slots:{0:{structure:ye,memory:{array:y},address:-1431655766}}},5:{structure:Y,memory:{array:Ts},slots:{0:{structure:be,memory:{array:y},address:-1431655766}}},6:{structure:H,memory:{array:Fs},slots:{0:{structure:fe,memory:{array:y},address:-1431655766}}}}}},slot:1});Object.assign(z,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:24});Object.assign(de,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:z}],methods:[],template:null},slot:23});Object.assign(Se,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:de}],methods:[],template:null},slot:22});Object.assign(c,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:25});const Ms=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(he,{...t,type:9,name:"rt-julia.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:p},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:p}],methods:[],template:{memory:{array:Ms}}},slot:26});Object.assign(w,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:w}],methods:[],template:null},slot:27});Object.assign(qe,{...t,type:13,name:"@Vector(3, f32)",length:3,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:l}],methods:[],template:null},slot:54});const _s=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),$s=new Uint8Array([]),Bs=new Uint8Array([216,252,15,0]),Ls=new Uint8Array([3,0,0,0]);Object.assign(J,{...t,type:2,name:"rt-julia.Image(u8,3,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Se},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:he},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:w}],methods:[],template:{memory:{array:_s}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:z},{...e,type:7,isRequired:!1,name:"FPixel",structure:qe},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:b}],methods:[],template:{memory:{array:$s},slots:{0:{structure:b,memory:{array:Bs},slots:{0:{structure:p,memory:{array:Ls}}}}}}},slot:21});const Ys=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Gs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Hs=new Uint8Array([0,0,0,0,0,0,0,0]),Ie=new Uint8Array([]);Object.assign(q,{...t,type:2,name:"rt-julia.KernelInput(u8,rt-julia.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"inputUsedToTest",structure:J}],methods:[],template:{memory:{array:Ys},slots:{0:{structure:J,memory:{array:Gs},slots:{0:{structure:Se,memory:{array:Hs},slots:{0:{structure:de,memory:{array:Ie}}}}}}}}},slot:20});Object.assign(ge,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:z}],methods:[],template:null},slot:23});Object.assign(ze,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:ge}],methods:[],template:null},slot:30});const Js=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ns=new Uint8Array([]),Qs=new Uint8Array([72,253,15,0]),Ws=new Uint8Array([4,0,0,0]);Object.assign(N,{...t,type:2,name:"rt-julia.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:ze},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:he},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:w}],methods:[],template:{memory:{array:Js}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:z},{...e,type:7,isRequired:!1,name:"FPixel",structure:R},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:b}],methods:[],template:{memory:{array:Ns},slots:{0:{structure:b,memory:{array:Qs},slots:{0:{structure:p,memory:{array:Ws}}}}}}},slot:29});const Xs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Zs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),er=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(A,{...t,type:2,name:"rt-julia.KernelOutput(u8,rt-julia.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:N}],methods:[],template:{memory:{array:Xs},slots:{0:{structure:N,memory:{array:Zs},slots:{0:{structure:ze,memory:{array:er},slots:{0:{structure:ge,memory:{array:Ie}}}}}}}}},slot:28});const tr=new Uint8Array([205,204,204,190,123,20,46,191,236,81,184,190,10,215,35,189,0,0,72,68,0,0,22,68,0,0,0,0,0,0,64,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);Object.assign(U,{...t,type:2,name:"rt-julia.KernelParameters(rt-julia.kernel)",length:1,byteSize:48,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:0,name:"width",structure:l},{...e,type:4,isRequired:!1,bitOffset:160,bitSize:32,byteSize:4,slot:1,name:"height",structure:l},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:128,byteSize:16,slot:2,name:"c",structure:R},{...e,type:4,isRequired:!1,bitOffset:192,bitSize:32,byteSize:4,slot:3,name:"w",structure:l},{...e,type:4,isRequired:!1,bitOffset:224,bitSize:32,byteSize:4,slot:4,name:"camDistance",structure:l},{...e,type:4,isRequired:!1,bitOffset:256,bitSize:32,byteSize:4,slot:5,name:"rotationY",structure:l}],methods:[],template:{memory:{array:tr}}},slot:31});Object.assign(Ae,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(rt-julia.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:55});Object.assign(Ue,{...t,type:7,name:"ErrorSet0000!rt-julia.KernelOutput(u8,rt-julia.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:A},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Ae}],methods:[],template:null},slot:36});Object.assign(je,{...t,type:3,name:"createOutput",length:1,byteSize:112,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:0,name:"0",structure:c},{...e,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:1,name:"1",structure:c},{...e,type:6,bitOffset:448,bitSize:192,byteSize:24,slot:2,name:"2",structure:q},{...e,type:6,bitOffset:0,bitSize:384,byteSize:48,slot:3,name:"3",structure:U},{...e,type:6,bitOffset:640,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Ue}],methods:[],template:null},slot:34});Object.assign(Pe,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(rt-julia.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:56});Object.assign(Ve,{...t,type:7,name:"ErrorSet0001!rt-julia.KernelOutput(u8,rt-julia.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:A},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Pe}],methods:[],template:null},slot:37});Object.assign(Ce,{...t,type:3,name:"createPartialOutput",length:1,byteSize:128,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:0,name:"0",structure:c},{...e,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:1,name:"1",structure:c},{...e,type:3,bitOffset:448,bitSize:32,byteSize:4,slot:2,name:"2",structure:c},{...e,type:3,bitOffset:480,bitSize:32,byteSize:4,slot:3,name:"3",structure:c},{...e,type:6,bitOffset:512,bitSize:192,byteSize:24,slot:4,name:"4",structure:q},{...e,type:6,bitOffset:0,bitSize:384,byteSize:48,slot:5,name:"5",structure:U},{...e,type:6,bitOffset:704,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Ve}],methods:[],template:null},slot:35});const sr={argStruct:je,thunk:7,name:"createOutput"},rr={argStruct:Ce,thunk:2,name:"createPartialOutput"};Object.assign(ke,{...t,type:2,name:"rt-julia",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Ie}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:Re},{...e,type:7,isRequired:!1,name:"Input",structure:q},{...e,type:7,isRequired:!1,name:"Output",structure:A},{...e,type:7,isRequired:!1,name:"Parameters",structure:U}],methods:[sr,rr],template:null},slot:0});const ar=[S,Q,W,k,X,Z,I,p,b,ee,te,v,l,r,s,se,x,re,E,R,ae,D,ne,K,ie,T,ue,F,oe,M,le,_,me,$,ye,B,ce,L,be,Y,pe,G,fe,H,Re,z,de,Se,c,he,w,qe,J,q,ge,ze,N,A,U,Ae,Ue,je,Pe,Ve,Ce,ke],nr=tt(ar),ir=ke.constructor,ur=(async()=>{const u=new URL("rt-julia-63e9688d.wasm",import.meta.url).href;return fetch(u)})();st(ur,{...nr,writeBack:!0});const{createOutput:fr,createPartialOutput:or,kernel:we,Input:lr,Output:dr,Parameters:Sr}=ir;function mr(u,m,n,a,i={},h={}){if(Array.isArray(i)){const d=i;i={};for(const[f,g]of Object.keys(we.inputImages).entries())i[g]=d[f]}const j=new lr(void 0),P=Object.keys(we.inputImages),o=[];let O;for(const d of P){let f=i[d];if(f||(P.length===1&&["data","width","height"].every(g=>!!i[g])?f=i:o.push(d)),j[d]=f,O){if(f.colorSpace!==O)throw new Error(`Input images must all use the same color space: ${O}`)}else O=f.colorSpace}if(o.length>0)throw new Error(`Missing input image${o.length>1?"s":""}: ${o.join(", ")}`);const Oe=or(u,m,n,a,j,h),ve=d=>{const f=Object.keys(d),g={};for(const xe of f){const{data:{typedArray:V},width:Ee,height:Ke}=d[xe];let C;if(typeof ImageData=="function"){const Te=new Uint8ClampedArray(V.buffer,V.byteOffset,V.byteLength);C=new ImageData(Te,Ee,a,{colorSpace:O})}else C={data:V,width:Ee,height:Ke};if(f.length===1)return C;g[xe]=C}return g};return Oe[Symbol.toStringTag]==="Promise"?Oe.then(ve):ve(Oe)}function yr(){const u={};for(let[m,n]of Object.entries(we)){if(m==="parameters"){const a={};for(const[i,h]of Object.entries(n)){const j=a[i]={};for(let[P,o]of Object.entries(h))typeof o=="object"?"string"in o?o=o.string:o=De(o):typeof o=="function"&&(o=cr(o.name)),j[P]=o}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());u[m]=n}return u}function De(u){const m=[];for(let[n,a]of Object.entries(u))typeof a=="object"&&(a=De(a)),m[n]=a;return m}function cr(u){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[u]}onmessage=u=>{const[m,n,...a]=u.data;br(m,a).then(([i,h])=>{postMessage([m,n,i],{transfer:h})}).catch(i=>{postMessage(["error",n,i])})};async function br(u,m){switch(u){case"getKernelInfo":return[yr(...m)];case"createPartialImageData":const a=await mr(...m),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const h of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${u}`)}}
