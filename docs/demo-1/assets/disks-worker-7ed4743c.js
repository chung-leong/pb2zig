import{u as zr,a as dr,b as hr,c as wr,d as Ar,e as Ur,f as kr,g as Vr,h as Pr,i as Rr,j as qr,k as Ir,l as xr,m as vr,n as Er,o as Tr,p as Cr,q as Kr}from"./index-270629a1.js";zr();Ir();xr();dr();hr();vr();Er();Tr();Cr();wr();Ar();Ur();kr();Kr();Vr();Pr();Rr();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},r={},p={},$={},L={},B={},G={},l={},S={},I={},k={},s={},j={},n={},H={},J={},N={},Q={},W={},X={},Y={},Z={},tt={},x={},et={},A={},st={},U={},rt={},nt={},at={},ot={},it={},ct={},ut={},mt={},yt={},V={},bt={},lt={},kt={},v={},gt={},E={},u={},O={},q={},Vt={},pt={},T={},Ot={},C={},jt={},K={},D={},h={},Pt={},Rt={},w={},qt={},It={},xt={},qe={},vt={},Et={},Tt={},Ie={},Ct={},xe={},Kt={},ve={},Dt={},Ee={},Te={},Mt={},Ft={},Ce={},_t={},Ke={},$t={},De={},Lt={},Me={},Fe={},Bt={},_e={},Gt={},$e={},Le={},Ht={},Be={},Jt={},Ge={},He={},Nt={},Je={},Qt={},Ne={},Qe={},Wt={},We={},Xt={},Yt={},Zt={},te={},Xe={},Ye={},St={},Ze={},ft={},ts={},es={},ee={},se={},ss={},zt={},rs={},dt={},ns={},as={},re={},ne={},os={},ae={},is={},oe={},cs={},us={},ie={},ms={},ce={},ys={},bs={},ue={},me={},ls={},ye={},gs={},be={},le={},ge={},pe={},ps={},Os={},Oe={},je={},Se={},fe={},js={},ht={},Ss={},fs={},ze={},zs={},de={},ds={},hs={},ws={},As={},Us={},ks={},Vs={},Ps={},Rs={},qs={},Is={},xs={},vs={},Es={},Ts={},Cs={},Ks={},he={},Ds={},Ms={},we={},Fs={},Ae={},_s={},$s={},Ls={},Bs={},Gs={},Hs={},Js={},Ue={},Ns={},Qs={},Ws={},Xs={},Ys={},Zs={},tr={},er={},sr={},rr={},nr={},ar={},or={},ir={},cr={},ur={},mr={},yr={},br={},lr={},gr={},pr={},Dr=new Uint8Array,Mr=new Uint8Array,Fr=new Uint8Array([0,0,0,0,0,0,240,63]),_r=new Uint8Array,$r=new Uint8Array([0,0,0,0,0,0,105,64]),Lr=new Uint8Array,Br=new Uint8Array([0,0,0,0,0,0,64,64]),Gr=new Uint8Array([236,6,0,1]),Hr=new Uint8Array([80,97,116,116,101,114,110,32,83,105,122,101,0]),Jr=new Uint8Array,Nr=new Uint8Array,Qr=new Uint8Array([154,153,153,153,153,153,185,63]),Wr=new Uint8Array,Xr=new Uint8Array([154,153,153,153,153,153,17,64]),Yr=new Uint8Array,Zr=new Uint8Array([113,61,10,215,163,112,229,63]),tn=new Uint8Array([28,7,0,1]),en=new Uint8Array([114,97,100,105,117,115,58,32,104,111,119,32,109,117,99,104,32,97,32,100,105,115,107,115,32,102,105,108,108,115,32,117,112,32,105,116,115,32,115,112,97,99,101,0]),sn=new Uint8Array,rn=new Uint8Array([0,0,0,0,0,0,105,192]),nn=new Uint8Array,an=new Uint8Array([0,0,0,0,0,0,105,192]),on=new Uint8Array,cn=new Uint8Array([0,0,0,0,0,0,137,64]),un=new Uint8Array,mn=new Uint8Array([0,0,0,0,0,64,127,64]),yn=new Uint8Array,bn=new Uint8Array([0,0,0,0,0,0,0,0]),ln=new Uint8Array,gn=new Uint8Array([0,0,0,0,0,0,0,0]),pn=new Uint8Array,On=new Uint8Array,jn=new Uint8Array,Sn=new Uint8Array,fn=new Uint8Array([76,7,0,1]),zn=new Uint8Array([66,97,115,101,32,80,111,105,110,116,0]),dn=new Uint8Array,hn=new Uint8Array([0,0,0,0,0,0,240,191]),wn=new Uint8Array,An=new Uint8Array([0,0,0,0,0,0,240,191]),Un=new Uint8Array,kn=new Uint8Array,Vn=new Uint8Array,Pn=new Uint8Array([0,0,0,0,0,0,240,63]),Rn=new Uint8Array,qn=new Uint8Array([0,0,0,0,0,0,240,63]),In=new Uint8Array,xn=new Uint8Array,vn=new Uint8Array,En=new Uint8Array([0,0,0,0,0,0,240,63]),Tn=new Uint8Array,Cn=new Uint8Array([0,0,0,0,0,0,0,0]),Kn=new Uint8Array,Dn=new Uint8Array([0,0,0,0,0,0,0,0]),Mn=new Uint8Array,Fn=new Uint8Array([0,0,0,0,0,0,240,63]),_n=new Uint8Array,$n=new Uint8Array,Ln=new Uint8Array,Bn=new Uint8Array,Gn=new Uint8Array,Hn=new Uint8Array,Jn=new Uint8Array([92,7,0,1]),Nn=new Uint8Array([82,111,116,97,116,105,111,110,32,97,114,111,117,110,100,32,66,97,115,101,32,80,111,105,110,116,0]),Qn=new Uint8Array,Wn=new Uint8Array,Xn=new Uint8Array,Yn=new Uint8Array,Zn=new Uint8Array,ta=new Uint8Array([4]),ea=new Uint8Array,sa=new Uint8Array,ra=new Uint8Array([18,5,0,1]),na=new Uint8Array([68,105,115,107,115,0]),aa=new Uint8Array([35,5,0,1]),oa=new Uint8Array([80,101,116,114,105,32,76,101,115,107,105,110,101,110,0]),ia=new Uint8Array,ca=new Uint8Array([1]),ua=new Uint8Array([67,5,0,1]),ma=new Uint8Array([68,105,115,107,32,116,105,108,105,110,103,32,0]),ya=new Uint8Array,ba=new Uint8Array,la=new Uint8Array,ga=new Uint8Array([0]),pa=new Uint8Array([1]),Or=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Oa=new Uint8Array,ja=new Uint8Array,Sa=new Uint8Array,fa=new Uint8Array,za=new Uint8Array([4]),ke=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),jr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),da=new Uint8Array,ha=new Uint8Array,wa=new Uint8Array,Aa=new Uint8Array,Ua=new Uint8Array([4]),Ve=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ka=new Uint8Array([0,0,0,0,0,0,0,0,0,0,128,63,0,0,0,0,0,0,0,0,0,0,128,63,0,0,0,66,31,133,43,63]),Va=new Uint8Array([27,0]),Pa=new Uint8Array([27,0]),Ra=new Uint8Array,qa=new Uint8Array,Ia=new Uint8Array,xa=new Uint8Array;Object.assign(qe,{slots:{0:vt,1:Tt,2:Ct,3:Kt,4:Dt}});Object.assign(vt,{structure:r,memory:{array:Dr},const:!0,slots:{0:Et}});Object.assign(Et,{structure:j});Object.assign(Tt,{structure:s,memory:{array:Mr},const:!0,slots:{0:Ie}});Object.assign(Ie,{structure:n,memory:{array:Fr},const:!0});Object.assign(Ct,{structure:s,memory:{array:_r},const:!0,slots:{0:xe}});Object.assign(xe,{structure:n,memory:{array:$r},const:!0});Object.assign(Kt,{structure:s,memory:{array:Lr},const:!0,slots:{0:ve}});Object.assign(ve,{structure:n,memory:{array:Br},const:!0});Object.assign(Dt,{structure:k,memory:{array:Gr},const:!0,slots:{0:Ee}});Object.assign(Ee,{structure:I,memory:{array:Hr},reloc:16778988});Object.assign(Te,{slots:{0:Mt,1:Ft,2:_t,3:$t,4:Lt}});Object.assign(Mt,{structure:r,memory:{array:Jr},const:!0,slots:{0:Et}});Object.assign(Ft,{structure:s,memory:{array:Nr},const:!0,slots:{0:Ce}});Object.assign(Ce,{structure:n,memory:{array:Qr},const:!0});Object.assign(_t,{structure:s,memory:{array:Wr},const:!0,slots:{0:Ke}});Object.assign(Ke,{structure:n,memory:{array:Xr},const:!0});Object.assign($t,{structure:s,memory:{array:Yr},const:!0,slots:{0:De}});Object.assign(De,{structure:n,memory:{array:Zr},const:!0});Object.assign(Lt,{structure:N,memory:{array:tn},const:!0,slots:{0:Me}});Object.assign(Me,{structure:J,memory:{array:en},reloc:16779036});Object.assign(Fe,{slots:{0:Bt,1:Gt}});Object.assign(Bt,{structure:s,memory:{array:sn},const:!0,slots:{0:_e}});Object.assign(_e,{structure:n,memory:{array:rn},const:!0});Object.assign(Gt,{structure:s,memory:{array:nn},const:!0,slots:{0:$e}});Object.assign($e,{structure:n,memory:{array:an},const:!0});Object.assign(Le,{slots:{0:Ht,1:Jt}});Object.assign(Ht,{structure:s,memory:{array:on},const:!0,slots:{0:Be}});Object.assign(Be,{structure:n,memory:{array:cn},const:!0});Object.assign(Jt,{structure:s,memory:{array:un},const:!0,slots:{0:Ge}});Object.assign(Ge,{structure:n,memory:{array:mn},const:!0});Object.assign(He,{slots:{0:Nt,1:Qt}});Object.assign(Nt,{structure:s,memory:{array:yn},const:!0,slots:{0:Je}});Object.assign(Je,{structure:n,memory:{array:bn},const:!0});Object.assign(Qt,{structure:s,memory:{array:ln},const:!0,slots:{0:Ne}});Object.assign(Ne,{structure:n,memory:{array:gn},const:!0});Object.assign(Qe,{slots:{0:Wt,1:Xt,2:Yt,3:Zt,4:te}});Object.assign(Wt,{structure:r,memory:{array:pn},const:!0,slots:{0:We}});Object.assign(We,{structure:x});Object.assign(Xt,{structure:W,memory:{array:On},const:!0,slots:{0:Bt,1:Gt}});Object.assign(Yt,{structure:X,memory:{array:jn},const:!0,slots:{0:Ht,1:Jt}});Object.assign(Zt,{structure:Y,memory:{array:Sn},const:!0,slots:{0:Nt,1:Qt}});Object.assign(te,{structure:tt,memory:{array:fn},const:!0,slots:{0:Xe}});Object.assign(Xe,{structure:Z,memory:{array:zn},reloc:16779084});Object.assign(Ye,{slots:{0:St,1:ft}});Object.assign(St,{structure:s,memory:{array:dn},const:!0,slots:{0:Ze}});Object.assign(Ze,{structure:n,memory:{array:hn},const:!0});Object.assign(ft,{structure:s,memory:{array:wn},const:!0,slots:{0:ts}});Object.assign(ts,{structure:n,memory:{array:An},const:!0});Object.assign(es,{slots:{0:ee,1:se}});Object.assign(ee,{structure:A,memory:{array:Un},const:!0,slots:{0:St,1:ft}});Object.assign(se,{structure:A,memory:{array:kn},const:!0,slots:{0:St,1:ft}});Object.assign(ss,{slots:{0:zt,1:dt}});Object.assign(zt,{structure:s,memory:{array:Vn},const:!0,slots:{0:rs}});Object.assign(rs,{structure:n,memory:{array:Pn},const:!0});Object.assign(dt,{structure:s,memory:{array:Rn},const:!0,slots:{0:ns}});Object.assign(ns,{structure:n,memory:{array:qn},const:!0});Object.assign(as,{slots:{0:re,1:ne}});Object.assign(re,{structure:U,memory:{array:In},const:!0,slots:{0:zt,1:dt}});Object.assign(ne,{structure:U,memory:{array:xn},const:!0,slots:{0:zt,1:dt}});Object.assign(os,{slots:{0:ae,1:oe}});Object.assign(ae,{structure:s,memory:{array:vn},const:!0,slots:{0:is}});Object.assign(is,{structure:n,memory:{array:En},const:!0});Object.assign(oe,{structure:s,memory:{array:Tn},const:!0,slots:{0:cs}});Object.assign(cs,{structure:n,memory:{array:Cn},const:!0});Object.assign(us,{slots:{0:ie,1:ce}});Object.assign(ie,{structure:s,memory:{array:Kn},const:!0,slots:{0:ms}});Object.assign(ms,{structure:n,memory:{array:Dn},const:!0});Object.assign(ce,{structure:s,memory:{array:Mn},const:!0,slots:{0:ys}});Object.assign(ys,{structure:n,memory:{array:Fn},const:!0});Object.assign(bs,{slots:{0:ue,1:me}});Object.assign(ue,{structure:nt,memory:{array:_n},const:!0,slots:{0:ae,1:oe}});Object.assign(me,{structure:at,memory:{array:$n},const:!0,slots:{0:ie,1:ce}});Object.assign(ls,{slots:{0:ye,1:be,2:le,3:ge,4:pe}});Object.assign(ye,{structure:r,memory:{array:Ln},const:!0,slots:{0:gs}});Object.assign(gs,{structure:ut});Object.assign(be,{structure:st,memory:{array:Bn},const:!0,slots:{0:ee,1:se}});Object.assign(le,{structure:rt,memory:{array:Gn},const:!0,slots:{0:re,1:ne}});Object.assign(ge,{structure:ot,memory:{array:Hn},const:!0,slots:{0:ue,1:me}});Object.assign(pe,{structure:ct,memory:{array:Jn},const:!0,slots:{0:ps}});Object.assign(ps,{structure:it,memory:{array:Nn},reloc:16779100});Object.assign(Os,{slots:{0:Oe,1:je,2:Se,3:fe}});Object.assign(Oe,{structure:H,memory:{array:Qn},const:!0,slots:{0:vt,1:Tt,2:Ct,3:Kt,4:Dt}});Object.assign(je,{structure:Q,memory:{array:Wn},const:!0,slots:{0:Mt,1:Ft,2:_t,3:$t,4:Lt}});Object.assign(Se,{structure:et,memory:{array:Xn},const:!0,slots:{0:Wt,1:Xt,2:Yt,3:Zt,4:te}});Object.assign(fe,{structure:mt,memory:{array:Yn},const:!0,slots:{0:ye,1:be,2:le,3:ge,4:pe}});Object.assign(js,{slots:{0:ht}});Object.assign(ht,{structure:l,memory:{array:Zn},const:!0,slots:{0:Ss}});Object.assign(Ss,{structure:S,memory:{array:ta},const:!0});Object.assign(fs,{slots:{0:ze}});Object.assign(ze,{structure:V,memory:{array:ea},const:!0,slots:{0:ht}});Object.assign(zs,{slots:{0:de}});Object.assign(de,{structure:V,memory:{array:sa},const:!0,slots:{0:ht}});Object.assign(ds,{slots:{0:hs,1:As,2:ks,3:Ps,4:qs,5:Is,6:xs}});Object.assign(hs,{structure:L,memory:{array:ra},const:!0,slots:{0:ws}});Object.assign(ws,{structure:$,memory:{array:na},reloc:16778514});Object.assign(As,{structure:G,memory:{array:aa},const:!0,slots:{0:Us}});Object.assign(Us,{structure:B,memory:{array:oa},reloc:16778531});Object.assign(ks,{structure:l,memory:{array:ia},const:!0,slots:{0:Vs}});Object.assign(Vs,{structure:S,memory:{array:ca},const:!0});Object.assign(Ps,{structure:k,memory:{array:ua},const:!0,slots:{0:Rs}});Object.assign(Rs,{structure:I,memory:{array:ma},reloc:16778563});Object.assign(qs,{structure:yt,memory:{array:ya},const:!0,slots:{0:Oe,1:je,2:Se,3:fe}});Object.assign(Is,{structure:bt,memory:{array:ba},const:!0,slots:{0:ze}});Object.assign(xs,{structure:lt,memory:{array:la},const:!0,slots:{0:de}});Object.assign(vs,{slots:{0:Es,1:Ts}});Object.assign(Es,{structure:O,memory:{array:ga},const:!0});Object.assign(Ts,{structure:O,memory:{array:pa},const:!0});Object.assign(Cs,{memory:{array:Or},slots:{0:Ks}});Object.assign(Ks,{structure:E,memory:{array:Or,offset:0,length:8},slots:{0:he}});Object.assign(he,{structure:gt,memory:{array:Oa},reloc:0});Object.assign(Ds,{slots:{0:Ms,1:Fs,2:_s}});Object.assign(Ms,{structure:r,memory:{array:ja},const:!0,slots:{0:we}});Object.assign(we,{structure:v});Object.assign(Fs,{structure:r,memory:{array:Sa},const:!0,slots:{0:Ae}});Object.assign(Ae,{structure:Vt});Object.assign(_s,{structure:l,memory:{array:fa},const:!0,slots:{0:$s}});Object.assign($s,{structure:S,memory:{array:za},const:!0});Object.assign(Ls,{memory:{array:ke},slots:{0:Bs}});Object.assign(Bs,{structure:pt,memory:{array:ke},slots:{0:Gs}});Object.assign(Gs,{structure:E,memory:{array:ke,offset:0,length:8},slots:{0:he}});Object.assign(Hs,{memory:{array:jr},slots:{0:Js}});Object.assign(Js,{structure:C,memory:{array:jr,offset:0,length:8},slots:{0:Ue}});Object.assign(Ue,{structure:Ot,memory:{array:da},reloc:0});Object.assign(Ns,{slots:{0:Qs,1:Ws,2:Xs}});Object.assign(Qs,{structure:r,memory:{array:ha},const:!0,slots:{0:we}});Object.assign(Ws,{structure:r,memory:{array:wa},const:!0,slots:{0:Ae}});Object.assign(Xs,{structure:l,memory:{array:Aa},const:!0,slots:{0:Ys}});Object.assign(Ys,{structure:S,memory:{array:Ua},const:!0});Object.assign(Zs,{memory:{array:Ve},slots:{0:tr}});Object.assign(tr,{structure:jt,memory:{array:Ve},slots:{0:er}});Object.assign(er,{structure:C,memory:{array:Ve,offset:0,length:8},slots:{0:Ue}});Object.assign(sr,{memory:{array:ka}});Object.assign(rr,{slots:{0:nr}});Object.assign(nr,{structure:h,memory:{array:Va},const:!0});Object.assign(ar,{slots:{0:or}});Object.assign(or,{structure:w,memory:{array:Pa},const:!0});Object.assign(ir,{slots:{0:cr,1:mr,2:br,3:gr}});Object.assign(cr,{structure:r,memory:{array:Ra},const:!0,slots:{0:ur}});Object.assign(ur,{structure:kt});Object.assign(mr,{structure:r,memory:{array:qa},const:!0,slots:{0:yr}});Object.assign(yr,{structure:T});Object.assign(br,{structure:r,memory:{array:Ia},const:!0,slots:{0:lr}});Object.assign(lr,{structure:K});Object.assign(gr,{structure:r,memory:{array:xa},const:!0,slots:{0:pr}});Object.assign(pr,{structure:D});const va={argStruct:Rt,thunkId:2,name:"createOutput"},Ea={argStruct:It,thunkId:3,name:"createPartialOutput"};Object.assign(r,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(p,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign($,{...e,type:1,name:"[5:0]u8",length:5,byteSize:6,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(L,{...e,type:13,name:"*const [5:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[]}});Object.assign(B,{...e,type:1,name:"[14:0]u8",length:14,byteSize:15,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(G,{...e,type:13,name:"*const [14:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:B}],methods:[]}});Object.assign(l,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:l}],methods:[]}});Object.assign(S,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(I,{...e,type:1,name:"[12:0]u8",length:12,byteSize:13,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(k,{...e,type:13,name:"*const [12:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:I}],methods:[]}});Object.assign(s,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(j,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:j}],methods:[]}});Object.assign(n,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:n}],methods:[]}});Object.assign(H,{...e,type:2,name:"Struct1598523420",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:s},{...t,type:7,slot:2,name:"maxValue",structure:s},{...t,type:7,slot:3,name:"defaultValue",structure:s},{...t,type:7,slot:4,name:"description",structure:k}],methods:[],template:qe}});Object.assign(J,{...e,type:1,name:"[43:0]u8",length:43,byteSize:44,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(N,{...e,type:13,name:"*const [43:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:J}],methods:[]}});Object.assign(Q,{...e,type:2,name:"Struct2434125318",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:s},{...t,type:7,slot:2,name:"maxValue",structure:s},{...t,type:7,slot:3,name:"defaultValue",structure:s},{...t,type:7,slot:4,name:"description",structure:N}],methods:[],template:Te}});Object.assign(W,{...e,type:2,name:"Struct761432325",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s}],methods:[],template:Fe}});Object.assign(X,{...e,type:2,name:"Struct4139784567",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s}],methods:[],template:Le}});Object.assign(Y,{...e,type:2,name:"Struct738220547",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s}],methods:[],template:He}});Object.assign(Z,{...e,type:1,name:"[10:0]u8",length:10,byteSize:11,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(tt,{...e,type:13,name:"*const [10:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[]}});Object.assign(x,{...e,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:j}],methods:[]}});Object.assign(et,{...e,type:2,name:"Struct2272851198",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:W},{...t,type:7,slot:2,name:"maxValue",structure:X},{...t,type:7,slot:3,name:"defaultValue",structure:Y},{...t,type:7,slot:4,name:"description",structure:tt}],methods:[],template:Qe}});Object.assign(A,{...e,type:2,name:"Struct2009719738",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s}],methods:[],template:Ye}});Object.assign(st,{...e,type:2,name:"Struct846284749",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:A},{...t,type:7,slot:1,name:"1",structure:A}],methods:[],template:es}});Object.assign(U,{...e,type:2,name:"Struct2999377579",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s}],methods:[],template:ss}});Object.assign(rt,{...e,type:2,name:"Struct3751031584",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:U},{...t,type:7,slot:1,name:"1",structure:U}],methods:[],template:as}});Object.assign(nt,{...e,type:2,name:"Struct514312347",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s}],methods:[],template:os}});Object.assign(at,{...e,type:2,name:"Struct3223285779",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s}],methods:[],template:us}});Object.assign(ot,{...e,type:2,name:"Struct1799669077",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:nt},{...t,type:7,slot:1,name:"1",structure:at}],methods:[],template:bs}});Object.assign(it,{...e,type:1,name:"[26:0]u8",length:26,byteSize:27,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(ct,{...e,type:13,name:"*const [26:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:it}],methods:[]}});Object.assign(ut,{...e,type:1,name:"[2]@Vector(2, f32)",length:2,byteSize:16,align:8,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,structure:x}],methods:[]}});Object.assign(mt,{...e,type:2,name:"Struct1253220007",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:st},{...t,type:7,slot:2,name:"maxValue",structure:rt},{...t,type:7,slot:3,name:"defaultValue",structure:ot},{...t,type:7,slot:4,name:"description",structure:ct}],methods:[],template:ls}});Object.assign(yt,{...e,type:2,name:"Struct1240680892",align:1,instance:{members:[{...t,type:7,slot:0,name:"size",structure:H},{...t,type:7,slot:1,name:"radius",structure:Q},{...t,type:7,slot:2,name:"base",structure:et},{...t,type:7,slot:3,name:"rotation",structure:mt}],methods:[],template:Os}});Object.assign(V,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:l}],methods:[],template:js}});Object.assign(bt,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:7,slot:0,name:"src",structure:V}],methods:[],template:fs}});Object.assign(lt,{...e,type:2,name:"Struct3519374731",align:1,instance:{members:[{...t,type:7,slot:0,name:"pxlOut",structure:V}],methods:[],template:zs}});Object.assign(kt,{...e,type:2,name:"disks.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:L},{...t,type:7,slot:1,name:"vendor",structure:G},{...t,type:7,slot:2,name:"version",structure:l},{...t,type:7,slot:3,name:"description",structure:k},{...t,type:7,slot:4,name:"parameters",structure:yt},{...t,type:7,slot:5,name:"inputImages",structure:bt},{...t,type:7,slot:6,name:"outputImages",structure:lt}],methods:[],template:ds}});Object.assign(v,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(gt,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:v}],methods:[]}});Object.assign(E,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:gt}],methods:[]}});Object.assign(u,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:u}],methods:[]}});Object.assign(O,{...e,type:11,name:"disks.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:O}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:O},{...t,type:7,slot:1,name:"display-p3",structure:O}],methods:[],template:vs}});Object.assign(q,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:q}],methods:[]}});Object.assign(Vt,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:j}],methods:[]}});Object.assign(pt,{...e,type:2,name:"disks.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:E},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:q}],methods:[],template:Cs},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:r},{...t,type:7,slot:1,name:"FPixel",structure:r},{...t,type:7,slot:2,name:"channels",structure:l}],methods:[],template:Ds}});Object.assign(T,{...e,type:2,name:"disks.KernelInput(u8,disks.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:pt}],methods:[],template:Ls}});Object.assign(Ot,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:v}],methods:[]}});Object.assign(C,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:Ot}],methods:[]}});Object.assign(jt,{...e,type:2,name:"disks.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:C},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:q}],methods:[],template:Hs},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:r},{...t,type:7,slot:1,name:"FPixel",structure:r},{...t,type:7,slot:2,name:"channels",structure:l}],methods:[],template:Ns}});Object.assign(K,{...e,type:2,name:"disks.KernelOutput(u8,disks.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"pxlOut",structure:jt}],methods:[],template:Zs}});Object.assign(D,{...e,type:2,name:"disks.KernelParameters(disks.kernel)",byteSize:32,align:8,instance:{members:[{...t,type:4,bitOffset:192,bitSize:32,byteSize:4,slot:2,name:"size",structure:j},{...t,type:4,bitOffset:224,bitSize:32,byteSize:4,slot:3,name:"radius",structure:j},{...t,type:5,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"base",structure:x},{...t,type:5,bitOffset:64,bitSize:128,byteSize:16,slot:1,name:"rotation",structure:ut}],methods:[],template:sr}});Object.assign(h,{...e,type:10,name:"ErrorSet650832593",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:h}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:h}],methods:[],template:rr}});Object.assign(Pt,{...e,type:9,name:"ErrorSet650832593!disks.KernelOutput(u8,disks.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:K},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:h}],methods:[]}});Object.assign(Rt,{...e,type:5,name:"createOutput",byteSize:96,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...t,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...t,type:5,isRequired:!0,bitOffset:320,bitSize:192,byteSize:24,slot:0,name:"2",structure:T},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:256,byteSize:32,slot:1,name:"3",structure:D},{...t,type:5,isRequired:!0,bitOffset:512,bitSize:224,byteSize:28,slot:2,name:"retval",structure:Pt}],methods:[]}});Object.assign(w,{...e,type:10,name:"ErrorSet3624567137",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:w}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:w}],methods:[],template:ar}});Object.assign(qt,{...e,type:9,name:"ErrorSet3624567137!disks.KernelOutput(u8,disks.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:K},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:w}],methods:[]}});Object.assign(It,{...e,type:5,name:"createPartialOutput",byteSize:104,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...t,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...t,type:3,isRequired:!0,bitOffset:320,bitSize:32,byteSize:4,slot:5,name:"2",structure:u},{...t,type:3,isRequired:!0,bitOffset:352,bitSize:32,byteSize:4,slot:6,name:"3",structure:u},{...t,type:5,isRequired:!0,bitOffset:384,bitSize:192,byteSize:24,slot:0,name:"4",structure:T},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:256,byteSize:32,slot:1,name:"5",structure:D},{...t,type:5,isRequired:!0,bitOffset:576,bitSize:224,byteSize:28,slot:2,name:"retval",structure:qt}],methods:[]}});Object.assign(xt,{...e,type:2,name:"disks",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:r},{...t,type:7,slot:1,name:"Input",structure:r},{...t,type:7,slot:2,name:"Output",structure:r},{...t,type:7,slot:3,name:"Parameters",structure:r}],methods:[va,Ea],template:ir}});const Ta=[r,p,$,L,B,G,l,S,I,k,s,j,n,H,J,N,Q,W,X,Y,Z,tt,x,et,A,st,U,rt,nt,at,ot,it,ct,ut,mt,yt,V,bt,lt,kt,v,gt,E,u,O,q,Vt,pt,T,Ot,C,jt,K,D,h,Pt,Rt,w,qt,It,xt],Ca=xt,Ka={runtimeSafety:!1,littleEndian:!0},wt=qr();wt.getSpecialExports();wt.recreateStructures(Ta,Ka);const Da=(async()=>{const i=new URL("disks-6cd44117.wasm",import.meta.url).href;return fetch(i)})();wt.loadModule(Da);wt.linkVariables(!0);const{constructor:Ma}=Ca,{createPartialOutput:Fa,Input:_a,kernel:Ut}=Ma;function $a(i,m,c,o,a={},f={}){const z=[];for(const[b]of Ut.inputImages)z.push(b);const P=[];for(const[b]of Ut.outputImages)P.push(b);if(Array.isArray(a)){const b=a;a={};for(const[g,d]of z.entries())a[d]=b[g]}const y=new _a(void 0),M=[];let R;for(const b of z){let g=a[b];if(g||(z.length===1&&["data","width","height"].every(d=>!!a[d])?g=a:M.push(b)),y[b]=g,R){if(g.colorSpace!==R)throw new Error(`Input images must all use the same color space: ${R}`)}else R=g.colorSpace}if(M.length>0)throw new Error(`Missing input image${M.length>1?"s":""}: ${M.join(", ")}`);const At=Fa(i,m,c,o,y,f),Pe=b=>{const g={};for(const d of P){const{data:{typedArray:F},width:Re,height:Sr}=b[d];let _;if(typeof ImageData=="function"){const fr=new Uint8ClampedArray(F.buffer,F.byteOffset,F.byteLength);_=new ImageData(fr,Re,o,{colorSpace:R})}else _={data:F,width:Re,height:Sr};if(P.length===1)return _;g[d]=_}return g};return At[Symbol.toStringTag]==="Promise"?At.then(Pe):Pe(At)}function La(){const i={};for(let[m,c]of Ut){if(m==="parameters"){const o={};for(const[a,f]of c){const z=o[a]={};for(let[P,y]of f)typeof y=="object"?y=y.string??y.valueOf():typeof y=="function"&&(y=Ba(y.name)),z[P]=y}c=o}else typeof c=="object"&&(c=c.string??c.valueOf());i[m]=c}return i}function Ba(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[m,c,...o]=i.data;Ga(m,o).then(([a,f])=>{postMessage([m,c,a],{transfer:f})}).catch(a=>{postMessage(["error",c,a])})};async function Ga(i,m){switch(i){case"getKernelInfo":return[La(...m)];case"createPartialImageData":const o=await $a(...m),a=[];if("data"in o&&"width"in o&&"height"in o)a.push(o.data.buffer);else for(const f of Object.entries(o))a.push(o.data.buffer);return[o,a];default:throw new Error(`Unknown function: ${i}`)}}
