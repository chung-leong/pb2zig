import{u as Qt,a as Wt,b as Xt,c as Yt,d as Zt,e as es,f as ts,g as ss,h as rs,i as as,j as ns,k as is,l as os,m as cs,n as us,p as ms,o as ys,q as bs,r as ls,s as fs}from"./index-58d89d46.js";Qt();ns();is();Wt();Xt();os();cs();us();ms();Yt();Zt();es();ts();ys();fs();ss();bs();rs();as();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},e={type:0,isRequired:!1},s={},h={},D={},F={},M={},T={},l={},O={},r={},p={},y={},d={},$={},L={},B={},w={},G={},H={},ie={},I={},J={},R={},m={},g={},P={},oe={},N={},k={},Q={},q={},W={},v={},E={},V={},ce={},ue={},_={},me={},ye={},be={},Ce={},X={},Y={},Z={},_e={},ee={},De={},te={},Fe={},Me={},le={},fe={},Te={},pe={},$e={},ge={},Le={},Be={},Oe={},Se={},Ge={},ze={},He={},je={},Je={},Ne={},he={},de={},we={},Ae={},Qe={},se={},We={},Xe={},Ue={},Ye={},Pe={},Ze={},et={},tt={},st={},rt={},at={},nt={},it={},ot={},ct={},ut={},mt={},yt={},bt={},lt={},Ve={},ft={},pt={},Ie={},gt={},Re={},Ot={},St={},zt={},jt={},ht={},dt={},wt={},ke={},At={},Ut={},Pt={},Vt={},It={},Rt={},kt={},qt={},vt={},Et={},qe={},xt={},Kt={},Ct={},_t={},Dt={},Ft={},Mt={},Tt={},$t={},Lt={},ps=new Uint8Array,gs=new Uint8Array,Os=new Uint8Array([0,0,0,0,0,0,0,0]),Ss=new Uint8Array,zs=new Uint8Array([0,0,0,0,0,0,240,63]),js=new Uint8Array,hs=new Uint8Array([0,0,0,0,0,0,0,0]),ds=new Uint8Array,ws=new Uint8Array,As=new Uint8Array([0,0,0,0,0,0,0,0]),Us=new Uint8Array,Ps=new Uint8Array([0,0,0,0,0,0,36,64]),Vs=new Uint8Array,Is=new Uint8Array([0,0,0,0,0,0,240,63]),Rs=new Uint8Array,ks=new Uint8Array,qs=new Uint8Array([0,0,0,0,0,0,0,0]),vs=new Uint8Array,Es=new Uint8Array([0,0,0,0,0,0,52,64]),xs=new Uint8Array,Ks=new Uint8Array([0,0,0,0,0,0,240,63]),Cs=new Uint8Array,_s=new Uint8Array,Ds=new Uint8Array,Fs=new Uint8Array,Ms=new Uint8Array,Ts=new Uint8Array([4]),$s=new Uint8Array,Ls=new Uint8Array,Bs=new Uint8Array([242,4,0,1]),Gs=new Uint8Array([99,111,109,46,113,117,97,115,105,109,111,110,100,111,0]),Hs=new Uint8Array([12,5,0,1]),Js=new Uint8Array([77,97,114,105,111,32,75,108,105,110,103,101,109,97,110,110,0]),Ns=new Uint8Array,Qs=new Uint8Array([1]),Ws=new Uint8Array,Xs=new Uint8Array,Ys=new Uint8Array,Zs=new Uint8Array([0]),er=new Uint8Array([1]),Bt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),tr=new Uint8Array,sr=new Uint8Array,rr=new Uint8Array,ar=new Uint8Array,nr=new Uint8Array([4]),ve=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Gt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ir=new Uint8Array,or=new Uint8Array,cr=new Uint8Array,ur=new Uint8Array,mr=new Uint8Array([4]),Ee=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),yr=new Uint8Array([0,0,0,0,0,0,128,63,0,0,128,63,0,0,0,0]),br=new Uint8Array([27,0]),lr=new Uint8Array,fr=new Uint8Array,pr=new Uint8Array,gr=new Uint8Array;Object.assign(Ce,{slots:{0:X,1:Z,2:ee,3:te}});Object.assign(X,{structure:s,memory:{array:ps},slots:{0:Y}});Object.assign(Y,{structure:p});Object.assign(Z,{structure:r,memory:{array:gs},slots:{0:_e}});Object.assign(_e,{structure:y,memory:{array:Os}});Object.assign(ee,{structure:r,memory:{array:Ss},slots:{0:De}});Object.assign(De,{structure:y,memory:{array:zs}});Object.assign(te,{structure:r,memory:{array:js},slots:{0:Fe}});Object.assign(Fe,{structure:y,memory:{array:hs}});Object.assign(Me,{slots:{0:le,1:fe,2:pe,3:ge}});Object.assign(le,{structure:s,memory:{array:ds},slots:{0:Y}});Object.assign(fe,{structure:r,memory:{array:ws},slots:{0:Te}});Object.assign(Te,{structure:y,memory:{array:As}});Object.assign(pe,{structure:r,memory:{array:Us},slots:{0:$e}});Object.assign($e,{structure:y,memory:{array:Ps}});Object.assign(ge,{structure:r,memory:{array:Vs},slots:{0:Le}});Object.assign(Le,{structure:y,memory:{array:Is}});Object.assign(Be,{slots:{0:Oe,1:Se,2:ze,3:je}});Object.assign(Oe,{structure:s,memory:{array:Rs},slots:{0:Y}});Object.assign(Se,{structure:r,memory:{array:ks},slots:{0:Ge}});Object.assign(Ge,{structure:y,memory:{array:qs}});Object.assign(ze,{structure:r,memory:{array:vs},slots:{0:He}});Object.assign(He,{structure:y,memory:{array:Es}});Object.assign(je,{structure:r,memory:{array:xs},slots:{0:Je}});Object.assign(Je,{structure:y,memory:{array:Ks}});Object.assign(Ne,{slots:{0:he,1:de,2:we,3:Ae}});Object.assign(he,{structure:d,memory:{array:Cs},slots:{0:X,1:Z,2:ee,3:te}});Object.assign(de,{structure:$,memory:{array:_s},slots:{0:le,1:fe,2:pe,3:ge}});Object.assign(we,{structure:L,memory:{array:Ds},slots:{0:Oe,1:Se,2:ze,3:je}});Object.assign(Ae,{structure:d,memory:{array:Fs},slots:{0:X,1:Z,2:ee,3:te}});Object.assign(Qe,{slots:{0:se}});Object.assign(se,{structure:l,memory:{array:Ms},slots:{0:We}});Object.assign(We,{structure:O,memory:{array:Ts}});Object.assign(Xe,{slots:{0:Ue}});Object.assign(Ue,{structure:w,memory:{array:$s},slots:{0:se}});Object.assign(Ye,{slots:{0:Pe}});Object.assign(Pe,{structure:w,memory:{array:Ls},slots:{0:se}});Object.assign(Ze,{slots:{0:et,1:st,2:at,3:it,4:ot,5:ct}});Object.assign(et,{structure:F,memory:{array:Bs},slots:{0:tt}});Object.assign(tt,{structure:D,memory:{array:Gs},reloc:16778482,const:!0});Object.assign(st,{structure:T,memory:{array:Hs},slots:{0:rt}});Object.assign(rt,{structure:M,memory:{array:Js},reloc:16778508,const:!0});Object.assign(at,{structure:l,memory:{array:Ns},slots:{0:nt}});Object.assign(nt,{structure:O,memory:{array:Qs}});Object.assign(it,{structure:B,memory:{array:Ws},slots:{0:he,1:de,2:we,3:Ae}});Object.assign(ot,{structure:G,memory:{array:Xs},slots:{0:Ue}});Object.assign(ct,{structure:H,memory:{array:Ys},slots:{0:Pe}});Object.assign(ut,{slots:{0:mt,1:yt}});Object.assign(mt,{structure:g,memory:{array:Zs}});Object.assign(yt,{structure:g,memory:{array:er}});Object.assign(bt,{memory:{array:Bt},slots:{0:lt}});Object.assign(lt,{structure:R,memory:{array:Bt,offset:0,length:8},slots:{0:Ve}});Object.assign(Ve,{structure:J,memory:{array:tr},reloc:0,const:!0});Object.assign(ft,{slots:{0:pt,1:gt,2:Ot}});Object.assign(pt,{structure:s,memory:{array:sr},slots:{0:Ie}});Object.assign(Ie,{structure:I});Object.assign(gt,{structure:s,memory:{array:rr},slots:{0:Re}});Object.assign(Re,{structure:oe});Object.assign(Ot,{structure:l,memory:{array:ar},slots:{0:St}});Object.assign(St,{structure:O,memory:{array:nr}});Object.assign(zt,{memory:{array:ve},slots:{0:jt}});Object.assign(jt,{structure:N,memory:{array:ve},slots:{0:ht}});Object.assign(ht,{structure:R,memory:{array:ve,offset:0,length:8},slots:{0:Ve}});Object.assign(dt,{memory:{array:Gt},slots:{0:wt}});Object.assign(wt,{structure:q,memory:{array:Gt,offset:0,length:8},slots:{0:ke}});Object.assign(ke,{structure:Q,memory:{array:ir},reloc:0});Object.assign(At,{slots:{0:Ut,1:Pt,2:Vt}});Object.assign(Ut,{structure:s,memory:{array:or},slots:{0:Ie}});Object.assign(Pt,{structure:s,memory:{array:cr},slots:{0:Re}});Object.assign(Vt,{structure:l,memory:{array:ur},slots:{0:It}});Object.assign(It,{structure:O,memory:{array:mr}});Object.assign(Rt,{memory:{array:Ee},slots:{0:kt}});Object.assign(kt,{structure:W,memory:{array:Ee},slots:{0:qt}});Object.assign(qt,{structure:q,memory:{array:Ee,offset:0,length:8},slots:{0:ke}});Object.assign(vt,{memory:{array:yr}});Object.assign(Et,{slots:{0:qe}});Object.assign(qe,{structure:V,memory:{array:br}});Object.assign(xt,{slots:{0:qe}});Object.assign(Kt,{slots:{0:Ct,1:Dt,2:Mt,3:$t}});Object.assign(Ct,{structure:s,memory:{array:lr},slots:{0:_t}});Object.assign(_t,{structure:ie});Object.assign(Dt,{structure:s,memory:{array:fr},slots:{0:Ft}});Object.assign(Ft,{structure:k});Object.assign(Mt,{structure:s,memory:{array:pr},slots:{0:Tt}});Object.assign(Tt,{structure:v});Object.assign($t,{structure:s,memory:{array:gr},slots:{0:Lt}});Object.assign(Lt,{structure:E});const Or={argStruct:ue,thunkId:2,name:"createOutput"},Sr={argStruct:ye,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...t,name:"type",align:1,instance:{members:[{...e,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(h,{...t,name:"u8",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:h}],methods:[]}});Object.assign(D,{...t,type:1,name:"[14:0]u8",length:14,byteSize:15,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:h}],methods:[]}});Object.assign(F,{...t,type:13,name:"*const [14:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:D}],methods:[]}});Object.assign(M,{...t,type:1,name:"[16:0]u8",length:16,byteSize:17,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:h}],methods:[]}});Object.assign(T,{...t,type:13,name:"*const [16:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(l,{...t,name:"comptime_int",align:1,instance:{members:[{...e,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:l}],methods:[]}});Object.assign(O,{...t,name:"i8",byteSize:1,align:1,instance:{members:[{...e,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(r,{...t,name:"comptime_float",align:1,instance:{members:[{...e,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(p,{...t,name:"f32",byteSize:4,align:4,instance:{members:[{...e,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[]}});Object.assign(y,{...t,name:"f64",byteSize:8,align:8,instance:{members:[{...e,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:y}],methods:[]}});Object.assign(d,{...t,type:2,name:"Struct2890073165",align:1,instance:{members:[{...e,type:9,slot:0,name:"type",structure:s},{...e,type:9,slot:1,name:"minValue",structure:r},{...e,type:9,slot:2,name:"maxValue",structure:r},{...e,type:9,slot:3,name:"defaultValue",structure:r}],methods:[],template:Ce}});Object.assign($,{...t,type:2,name:"Struct2255363975",align:1,instance:{members:[{...e,type:9,slot:0,name:"type",structure:s},{...e,type:9,slot:1,name:"minValue",structure:r},{...e,type:9,slot:2,name:"maxValue",structure:r},{...e,type:9,slot:3,name:"defaultValue",structure:r}],methods:[],template:Me}});Object.assign(L,{...t,type:2,name:"Struct1335891619",align:1,instance:{members:[{...e,type:9,slot:0,name:"type",structure:s},{...e,type:9,slot:1,name:"minValue",structure:r},{...e,type:9,slot:2,name:"maxValue",structure:r},{...e,type:9,slot:3,name:"defaultValue",structure:r}],methods:[],template:Be}});Object.assign(B,{...t,type:2,name:"Struct3791586666",align:1,instance:{members:[{...e,type:9,slot:0,name:"threshold",structure:d},{...e,type:9,slot:1,name:"factor",structure:$},{...e,type:9,slot:2,name:"gamma",structure:L},{...e,type:9,slot:3,name:"invert",structure:d}],methods:[],template:Ne}});Object.assign(w,{...t,type:2,name:"Struct3832472641",align:1,instance:{members:[{...e,type:9,slot:0,name:"channels",structure:l}],methods:[],template:Qe}});Object.assign(G,{...t,type:2,name:"Struct2242867897",align:1,instance:{members:[{...e,type:9,slot:0,name:"src",structure:w}],methods:[],template:Xe}});Object.assign(H,{...t,type:2,name:"Struct172100005",align:1,instance:{members:[{...e,type:9,slot:0,name:"dst",structure:w}],methods:[],template:Ye}});Object.assign(ie,{...t,type:2,name:"frei-chen.kernel",align:1,static:{members:[{...e,type:9,slot:0,name:"namespace",structure:F},{...e,type:9,slot:1,name:"vendor",structure:T},{...e,type:9,slot:2,name:"version",structure:l},{...e,type:9,slot:3,name:"parameters",structure:B},{...e,type:9,slot:4,name:"inputImages",structure:G},{...e,type:9,slot:5,name:"outputImages",structure:H}],methods:[],template:Ze}});Object.assign(I,{...t,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:h}],methods:[]}});Object.assign(J,{...t,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(R,{...t,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:64,byteSize:8,slot:0,structure:J}],methods:[]}});Object.assign(m,{...t,name:"u32",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[]}});Object.assign(g,{...t,type:11,name:"frei-chen.ColorSpace",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"srgb",structure:g},{...e,type:9,slot:1,name:"display-p3",structure:g}],methods:[],template:ut}});Object.assign(P,{...t,name:"usize",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(oe,{...t,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...e,type:4,bitSize:32,byteSize:4,structure:p}],methods:[]}});Object.assign(N,{...t,type:2,name:"frei-chen.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:R},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:g},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:bt},static:{members:[{...e,type:9,slot:0,name:"Pixel",structure:s},{...e,type:9,slot:1,name:"FPixel",structure:s},{...e,type:9,slot:2,name:"channels",structure:l}],methods:[],template:ft}});Object.assign(k,{...t,type:2,name:"frei-chen.KernelInput(u8,frei-chen.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:N}],methods:[],template:zt}});Object.assign(Q,{...t,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(q,{...t,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:64,byteSize:8,slot:0,structure:Q}],methods:[]}});Object.assign(W,{...t,type:2,name:"frei-chen.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:q},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:g},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:dt},static:{members:[{...e,type:9,slot:0,name:"Pixel",structure:s},{...e,type:9,slot:1,name:"FPixel",structure:s},{...e,type:9,slot:2,name:"channels",structure:l}],methods:[],template:At}});Object.assign(v,{...t,type:2,name:"frei-chen.KernelOutput(u8,frei-chen.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:W}],methods:[],template:Rt}});Object.assign(E,{...t,type:2,name:"frei-chen.KernelParameters(frei-chen.kernel)",byteSize:16,align:4,instance:{members:[{...e,type:4,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"threshold",structure:p},{...e,type:4,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"factor",structure:p},{...e,type:4,bitOffset:64,bitSize:32,byteSize:4,slot:2,name:"gamma",structure:p},{...e,type:4,bitOffset:96,bitSize:32,byteSize:4,slot:3,name:"invert",structure:p}],methods:[],template:vt}});Object.assign(V,{...t,type:10,name:"@typeInfo(@typeInfo(@TypeOf(frei-chen.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"OutOfMemory",structure:V}],methods:[],template:Et}});Object.assign(ce,{...t,type:9,name:"ErrorSet119899532!frei-chen.KernelOutput(u8,frei-chen.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...e,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:V}],methods:[]}});Object.assign(ue,{...t,type:5,name:"createOutput",byteSize:76,align:4,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...e,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...e,type:7,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:k},{...e,type:7,isRequired:!0,bitOffset:256,bitSize:128,byteSize:16,slot:1,name:"3",structure:E},{...e,type:7,isRequired:!0,bitOffset:384,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ce}],methods:[]}});Object.assign(_,{...t,type:10,name:"@typeInfo(@typeInfo(@TypeOf(frei-chen.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"OutOfMemory",structure:_}],methods:[],template:xt}});Object.assign(me,{...t,type:9,name:"ErrorSet3595692400!frei-chen.KernelOutput(u8,frei-chen.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...e,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:_}],methods:[]}});Object.assign(ye,{...t,type:5,name:"createPartialOutput",byteSize:84,align:4,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...e,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:m},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:m},{...e,type:7,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:k},{...e,type:7,isRequired:!0,bitOffset:320,bitSize:128,byteSize:16,slot:1,name:"5",structure:E},{...e,type:7,isRequired:!0,bitOffset:448,bitSize:224,byteSize:28,slot:2,name:"retval",structure:me}],methods:[]}});Object.assign(be,{...t,type:2,name:"frei-chen",align:1,static:{members:[{...e,type:9,slot:0,name:"kernel",structure:s},{...e,type:9,slot:1,name:"Input",structure:s},{...e,type:9,slot:2,name:"Output",structure:s},{...e,type:9,slot:3,name:"Parameters",structure:s}],methods:[Or,Sr],template:Kt}});const zr=[s,h,D,F,M,T,l,O,r,p,y,d,$,L,B,w,G,H,ie,I,J,R,m,g,P,oe,N,k,Q,q,W,v,E,V,ce,ue,_,me,ye,be],jr=be,hr={runtimeSafety:!1,littleEndian:!0},re=ls();re.getControlObject();re.recreateStructures(zr,hr);const dr=(async()=>{const o=new URL("frei-chen-8f680d6e.wasm",import.meta.url).href;return fetch(o)})();re.loadModule(dr);re.linkVariables(!0);const{constructor:wr}=jr,{createPartialOutput:Ar,Input:Ur,kernel:ne}=wr;function Pr(o,c,n,a,i={},S={}){const z=[];for(const[b]of ne.inputImages)z.push(b);const A=[];for(const[b]of ne.outputImages)A.push(b);if(Array.isArray(i)){const b=i;i={};for(const[f,j]of z.entries())i[j]=b[f]}const u=new Ur(void 0),x=[];let U;for(const b of z){let f=i[b];if(f||(z.length===1&&["data","width","height"].every(j=>!!i[j])?f=i:x.push(b)),u[b]=f,U){if(f.colorSpace!==U)throw new Error(`Input images must all use the same color space: ${U}`)}else U=f.colorSpace}if(x.length>0)throw new Error(`Missing input image${x.length>1?"s":""}: ${x.join(", ")}`);const ae=Ar(o,c,n,a,u,S),xe=b=>{const f={};for(const j of A){const{data:{typedArray:K},width:Ke,height:Jt}=b[j];let C;if(typeof ImageData=="function"){const Nt=new Uint8ClampedArray(K.buffer,K.byteOffset,K.byteLength);C=new ImageData(Nt,Ke,a,{colorSpace:U})}else C={data:K,width:Ke,height:Jt};if(A.length===1)return C;f[j]=C}return f};return ae[Symbol.toStringTag]==="Promise"?ae.then(xe):xe(ae)}function Vr(){const o={};for(let[c,n]of ne){if(c==="parameters"){const a={};for(const[i,S]of n){const z=a[i]={};for(let[A,u]of S)typeof u=="object"?"string"in u?u=u.string:u=Ht(u):typeof u=="function"&&(u=Ir(u.name)),z[A]=u}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());o[c]=n}return o}function Ht(o){const c=[];for(let[n,a]of o)typeof a=="object"&&(a=Ht(a)),c[n]=a;return c}function Ir(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[c,n,...a]=o.data;Rr(c,a).then(([i,S])=>{postMessage([c,n,i],{transfer:S})}).catch(i=>{postMessage(["error",n,i])})};async function Rr(o,c){switch(o){case"getKernelInfo":return[Vr(...c)];case"createPartialImageData":const a=await Pr(...c),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const S of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${o}`)}}
