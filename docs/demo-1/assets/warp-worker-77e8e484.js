import{u as Ts,a as $s,b as Ls,c as Bs,d as Gs,e as Hs,f as Js,g as Ns,h as Qs,i as Ws,j as Xs,k as Ys,l as Zs,m as tr,n as er,p as sr,o as rr,q as ar,r as nr,s as ir}from"./index-25a52593.js";Ts();Xs();Ys();$s();Ls();Zs();tr();er();sr();Bs();Gs();Hs();Js();rr();ir();Ns();ar();Qs();Ws();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},r={},l={},K={},D={},F={},M={},p={},S={},T={},$={},s={},L={},B={},O={},n={},G={},H={},J={},N={},Q={},W={},X={},Y={},Z={},tt={},et={},st={},rt={},at={},nt={},d={},it={},ot={},ft={},V={},ct={},I={},y={},f={},U={},St={},ut={},k={},mt={},R={},yt={},q={},v={},P={},jt={},zt={},_={},ht={},dt={},wt={},ye={},At={},bt={},Ut={},be={},Pt={},le={},Vt={},pe={},It={},ge={},Oe={},kt={},fe={},Rt={},Se={},je={},qt={},ze={},vt={},he={},de={},Et={},we={},xt={},Ae={},Ue={},Ct={},Pe={},_t={},Kt={},Dt={},Ft={},Ve={},Ie={},Mt={},Tt={},ke={},$t={},Re={},Lt={},qe={},Bt={},ve={},Ee={},Gt={},Ht={},xe={},Jt={},Ce={},Nt={},_e={},Qt={},Ke={},De={},Wt={},Xt={},Yt={},Zt={},Fe={},lt={},Me={},Te={},te={},$e={},ee={},Le={},Be={},Ge={},He={},Je={},Ne={},Qe={},We={},Xe={},Ye={},Ze={},ts={},es={},ss={},rs={},as={},ns={},se={},is={},os={},re={},cs={},ae={},us={},ms={},ys={},bs={},ls={},ps={},gs={},ne={},Os={},fs={},Ss={},js={},zs={},hs={},ds={},ws={},As={},Us={},ie={},Ps={},Vs={},Is={},ks={},Rs={},qs={},vs={},Es={},xs={},Cs={},or=new Uint8Array,cr=new Uint8Array,ur=new Uint8Array([0,0,0,0,0,0,240,63]),mr=new Uint8Array,yr=new Uint8Array([0,0,0,0,0,64,159,64]),br=new Uint8Array,lr=new Uint8Array([0,0,0,0,0,160,118,64]),pr=new Uint8Array([236,17,0,1]),gr=new Uint8Array([105,110,112,117,116,32,105,109,97,103,101,32,104,101,105,103,104,116,0]),Or=new Uint8Array,fr=new Uint8Array([0,0,0,0,0,0,0,0]),Sr=new Uint8Array,jr=new Uint8Array([0,0,0,0,0,0,0,0]),zr=new Uint8Array,hr=new Uint8Array([0,0,0,0,0,64,159,64]),dr=new Uint8Array,wr=new Uint8Array([0,0,0,0,0,64,159,64]),Ar=new Uint8Array,Ur=new Uint8Array([0,0,0,0,0,160,102,64]),Pr=new Uint8Array,Vr=new Uint8Array([0,0,0,0,0,160,102,64]),Ir=new Uint8Array,kr=new Uint8Array,Rr=new Uint8Array,qr=new Uint8Array,vr=new Uint8Array([4,18,0,1]),Er=new Uint8Array([104,97,108,102,32,119,105,100,116,104,32,105,109,97,103,101,32,105,110,112,117,116,32,119,105,100,116,104,47,45,104,101,105,103,104,116,0]),xr=new Uint8Array,Cr=new Uint8Array,_r=new Uint8Array([45,67,28,235,226,54,26,63]),Kr=new Uint8Array,Dr=new Uint8Array([0,0,0,0,0,0,0,64]),Fr=new Uint8Array,Mr=new Uint8Array([226,88,23,183,209,0,224,63]),Tr=new Uint8Array([76,18,0,1]),$r=new Uint8Array([109,111,118,101,109,101,110,116,32,109,111,109,101,110,116,117,109,0]),Lr=new Uint8Array,Br=new Uint8Array,Gr=new Uint8Array([0,0,0,0,0,0,0,0]),Hr=new Uint8Array,Jr=new Uint8Array([0,0,0,0,0,64,143,64]),Nr=new Uint8Array,Qr=new Uint8Array([0,0,0,0,0,192,114,64]),Wr=new Uint8Array([116,18,0,1]),Xr=new Uint8Array([119,114,97,112,32,101,120,112,97,110,115,105,111,110,0]),Yr=new Uint8Array,Zr=new Uint8Array,ta=new Uint8Array,ea=new Uint8Array,sa=new Uint8Array,ra=new Uint8Array([4]),aa=new Uint8Array,na=new Uint8Array,ia=new Uint8Array([0,16,0,1]),oa=new Uint8Array([119,97,114,112,32,102,105,108,116,101,114,0]),ca=new Uint8Array([23,16,0,1]),ua=new Uint8Array([102,114,97,110,107,32,114,101,105,116,98,101,114,103,101,114,0]),ma=new Uint8Array,ya=new Uint8Array([1]),ba=new Uint8Array([57,16,0,1]),la=new Uint8Array([119,97,114,112,115,32,105,109,97,103,101,32,118,105,99,101,32,118,101,114,115,97,32,97,110,100,32,98,97,99,107,0]),pa=new Uint8Array,ga=new Uint8Array,Oa=new Uint8Array,fa=new Uint8Array([0]),Sa=new Uint8Array([1]),_s=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ja=new Uint8Array,za=new Uint8Array,ha=new Uint8Array,da=new Uint8Array,wa=new Uint8Array([4]),oe=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ks=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Aa=new Uint8Array,Ua=new Uint8Array,Pa=new Uint8Array,Va=new Uint8Array,Ia=new Uint8Array([4]),ce=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ka=new Uint8Array([0,0,53,67,0,0,53,67,0,0,181,67,142,6,0,63,0,0,150,67,0,0,0,0]),Ra=new Uint8Array([27,0]),qa=new Uint8Array,va=new Uint8Array,Ea=new Uint8Array,xa=new Uint8Array;Object.assign(ye,{slots:{0:At,1:Ut,2:Pt,3:Vt,4:It}});Object.assign(At,{structure:r,memory:{array:or},slots:{0:bt}});Object.assign(bt,{structure:O});Object.assign(Ut,{structure:s,memory:{array:cr},slots:{0:be}});Object.assign(be,{structure:n,memory:{array:ur}});Object.assign(Pt,{structure:s,memory:{array:mr},slots:{0:le}});Object.assign(le,{structure:n,memory:{array:yr}});Object.assign(Vt,{structure:s,memory:{array:br},slots:{0:pe}});Object.assign(pe,{structure:n,memory:{array:lr}});Object.assign(It,{structure:B,memory:{array:pr},slots:{0:ge}});Object.assign(ge,{structure:L,memory:{array:gr},reloc:16781804,const:!0});Object.assign(Oe,{slots:{0:kt,1:Rt}});Object.assign(kt,{structure:s,memory:{array:Or},slots:{0:fe}});Object.assign(fe,{structure:n,memory:{array:fr}});Object.assign(Rt,{structure:s,memory:{array:Sr},slots:{0:Se}});Object.assign(Se,{structure:n,memory:{array:jr}});Object.assign(je,{slots:{0:qt,1:vt}});Object.assign(qt,{structure:s,memory:{array:zr},slots:{0:ze}});Object.assign(ze,{structure:n,memory:{array:hr}});Object.assign(vt,{structure:s,memory:{array:dr},slots:{0:he}});Object.assign(he,{structure:n,memory:{array:wr}});Object.assign(de,{slots:{0:Et,1:xt}});Object.assign(Et,{structure:s,memory:{array:Ar},slots:{0:we}});Object.assign(we,{structure:n,memory:{array:Ur}});Object.assign(xt,{structure:s,memory:{array:Pr},slots:{0:Ae}});Object.assign(Ae,{structure:n,memory:{array:Vr}});Object.assign(Ue,{slots:{0:Ct,1:_t,2:Kt,3:Dt,4:Ft}});Object.assign(Ct,{structure:r,memory:{array:Ir},slots:{0:Pe}});Object.assign(Pe,{structure:X});Object.assign(_t,{structure:H,memory:{array:kr},slots:{0:kt,1:Rt}});Object.assign(Kt,{structure:J,memory:{array:Rr},slots:{0:qt,1:vt}});Object.assign(Dt,{structure:N,memory:{array:qr},slots:{0:Et,1:xt}});Object.assign(Ft,{structure:W,memory:{array:vr},slots:{0:Ve}});Object.assign(Ve,{structure:Q,memory:{array:Er},reloc:16781828,const:!0});Object.assign(Ie,{slots:{0:Mt,1:Tt,2:$t,3:Lt,4:Bt}});Object.assign(Mt,{structure:r,memory:{array:xr},slots:{0:bt}});Object.assign(Tt,{structure:s,memory:{array:Cr},slots:{0:ke}});Object.assign(ke,{structure:n,memory:{array:_r}});Object.assign($t,{structure:s,memory:{array:Kr},slots:{0:Re}});Object.assign(Re,{structure:n,memory:{array:Dr}});Object.assign(Lt,{structure:s,memory:{array:Fr},slots:{0:qe}});Object.assign(qe,{structure:n,memory:{array:Mr}});Object.assign(Bt,{structure:tt,memory:{array:Tr},slots:{0:ve}});Object.assign(ve,{structure:Z,memory:{array:$r},reloc:16781900,const:!0});Object.assign(Ee,{slots:{0:Gt,1:Ht,2:Jt,3:Nt,4:Qt}});Object.assign(Gt,{structure:r,memory:{array:Lr},slots:{0:bt}});Object.assign(Ht,{structure:s,memory:{array:Br},slots:{0:xe}});Object.assign(xe,{structure:n,memory:{array:Gr}});Object.assign(Jt,{structure:s,memory:{array:Hr},slots:{0:Ce}});Object.assign(Ce,{structure:n,memory:{array:Jr}});Object.assign(Nt,{structure:s,memory:{array:Nr},slots:{0:_e}});Object.assign(_e,{structure:n,memory:{array:Qr}});Object.assign(Qt,{structure:rt,memory:{array:Wr},slots:{0:Ke}});Object.assign(Ke,{structure:st,memory:{array:Xr},reloc:16781940,const:!0});Object.assign(De,{slots:{0:Wt,1:Xt,2:Yt,3:Zt}});Object.assign(Wt,{structure:G,memory:{array:Yr},slots:{0:At,1:Ut,2:Pt,3:Vt,4:It}});Object.assign(Xt,{structure:Y,memory:{array:Zr},slots:{0:Ct,1:_t,2:Kt,3:Dt,4:Ft}});Object.assign(Yt,{structure:et,memory:{array:ta},slots:{0:Mt,1:Tt,2:$t,3:Lt,4:Bt}});Object.assign(Zt,{structure:at,memory:{array:ea},slots:{0:Gt,1:Ht,2:Jt,3:Nt,4:Qt}});Object.assign(Fe,{slots:{0:lt}});Object.assign(lt,{structure:p,memory:{array:sa},slots:{0:Me}});Object.assign(Me,{structure:S,memory:{array:ra}});Object.assign(Te,{slots:{0:te}});Object.assign(te,{structure:d,memory:{array:aa},slots:{0:lt}});Object.assign($e,{slots:{0:ee}});Object.assign(ee,{structure:d,memory:{array:na},slots:{0:lt}});Object.assign(Le,{slots:{0:Be,1:He,2:Ne,3:We,4:Ye,5:Ze,6:ts}});Object.assign(Be,{structure:D,memory:{array:ia},slots:{0:Ge}});Object.assign(Ge,{structure:K,memory:{array:oa},reloc:16781312,const:!0});Object.assign(He,{structure:M,memory:{array:ca},slots:{0:Je}});Object.assign(Je,{structure:F,memory:{array:ua},reloc:16781335,const:!0});Object.assign(Ne,{structure:p,memory:{array:ma},slots:{0:Qe}});Object.assign(Qe,{structure:S,memory:{array:ya}});Object.assign(We,{structure:$,memory:{array:ba},slots:{0:Xe}});Object.assign(Xe,{structure:T,memory:{array:la},reloc:16781369,const:!0});Object.assign(Ye,{structure:nt,memory:{array:pa},slots:{0:Wt,1:Xt,2:Yt,3:Zt}});Object.assign(Ze,{structure:it,memory:{array:ga},slots:{0:te}});Object.assign(ts,{structure:ot,memory:{array:Oa},slots:{0:ee}});Object.assign(es,{slots:{0:ss,1:rs}});Object.assign(ss,{structure:f,memory:{array:fa}});Object.assign(rs,{structure:f,memory:{array:Sa}});Object.assign(as,{memory:{array:_s},slots:{0:ns}});Object.assign(ns,{structure:I,memory:{array:_s,offset:0,length:8},slots:{0:se}});Object.assign(se,{structure:ct,memory:{array:ja},reloc:0,const:!0});Object.assign(is,{slots:{0:os,1:cs,2:us}});Object.assign(os,{structure:r,memory:{array:za},slots:{0:re}});Object.assign(re,{structure:V});Object.assign(cs,{structure:r,memory:{array:ha},slots:{0:ae}});Object.assign(ae,{structure:St});Object.assign(us,{structure:p,memory:{array:da},slots:{0:ms}});Object.assign(ms,{structure:S,memory:{array:wa}});Object.assign(ys,{memory:{array:oe},slots:{0:bs}});Object.assign(bs,{structure:ut,memory:{array:oe},slots:{0:ls}});Object.assign(ls,{structure:I,memory:{array:oe,offset:0,length:8},slots:{0:se}});Object.assign(ps,{memory:{array:Ks},slots:{0:gs}});Object.assign(gs,{structure:R,memory:{array:Ks,offset:0,length:8},slots:{0:ne}});Object.assign(ne,{structure:mt,memory:{array:Aa},reloc:0});Object.assign(Os,{slots:{0:fs,1:Ss,2:js}});Object.assign(fs,{structure:r,memory:{array:Ua},slots:{0:re}});Object.assign(Ss,{structure:r,memory:{array:Pa},slots:{0:ae}});Object.assign(js,{structure:p,memory:{array:Va},slots:{0:zs}});Object.assign(zs,{structure:S,memory:{array:Ia}});Object.assign(hs,{memory:{array:ce},slots:{0:ds}});Object.assign(ds,{structure:yt,memory:{array:ce},slots:{0:ws}});Object.assign(ws,{structure:R,memory:{array:ce,offset:0,length:8},slots:{0:ne}});Object.assign(As,{memory:{array:ka}});Object.assign(Us,{slots:{0:ie}});Object.assign(ie,{structure:P,memory:{array:Ra}});Object.assign(Ps,{slots:{0:ie}});Object.assign(Vs,{slots:{0:Is,1:Rs,2:vs,3:xs}});Object.assign(Is,{structure:r,memory:{array:qa},slots:{0:ks}});Object.assign(ks,{structure:ft});Object.assign(Rs,{structure:r,memory:{array:va},slots:{0:qs}});Object.assign(qs,{structure:k});Object.assign(vs,{structure:r,memory:{array:Ea},slots:{0:Es}});Object.assign(Es,{structure:q});Object.assign(xs,{structure:r,memory:{array:xa},slots:{0:Cs}});Object.assign(Cs,{structure:v});const Ca={argStruct:zt,thunkId:2,name:"createOutput"},_a={argStruct:dt,thunkId:3,name:"createPartialOutput"};Object.assign(r,{...e,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(l,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:l}],methods:[]}});Object.assign(K,{...e,type:1,name:"[11:0]u8",length:11,byteSize:12,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:l}],methods:[]}});Object.assign(D,{...e,type:13,name:"*const [11:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:K}],methods:[]}});Object.assign(F,{...e,type:1,name:"[16:0]u8",length:16,byteSize:17,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:l}],methods:[]}});Object.assign(M,{...e,type:13,name:"*const [16:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(p,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:p}],methods:[]}});Object.assign(S,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(T,{...e,type:1,name:"[31:0]u8",length:31,byteSize:32,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:l}],methods:[]}});Object.assign($,{...e,type:13,name:"*const [31:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[]}});Object.assign(s,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(L,{...e,type:1,name:"[18:0]u8",length:18,byteSize:19,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:l}],methods:[]}});Object.assign(B,{...e,type:13,name:"*const [18:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[]}});Object.assign(O,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:O}],methods:[]}});Object.assign(n,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:n}],methods:[]}});Object.assign(G,{...e,type:2,name:"Struct403185421",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:s},{...t,type:9,slot:2,name:"maxValue",structure:s},{...t,type:9,slot:3,name:"defaultValue",structure:s},{...t,type:9,slot:4,name:"description",structure:B}],methods:[],template:ye}});Object.assign(H,{...e,type:2,name:"Struct738220547",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:s},{...t,type:9,slot:1,name:"1",structure:s}],methods:[],template:Oe}});Object.assign(J,{...e,type:2,name:"Struct2636898688",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:s},{...t,type:9,slot:1,name:"1",structure:s}],methods:[],template:je}});Object.assign(N,{...e,type:2,name:"Struct3582063705",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:s},{...t,type:9,slot:1,name:"1",structure:s}],methods:[],template:de}});Object.assign(Q,{...e,type:1,name:"[36:0]u8",length:36,byteSize:37,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:l}],methods:[]}});Object.assign(W,{...e,type:13,name:"*const [36:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[]}});Object.assign(X,{...e,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:O}],methods:[]}});Object.assign(Y,{...e,type:2,name:"Struct2662823505",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:H},{...t,type:9,slot:2,name:"maxValue",structure:J},{...t,type:9,slot:3,name:"defaultValue",structure:N},{...t,type:9,slot:4,name:"description",structure:W}],methods:[],template:Ue}});Object.assign(Z,{...e,type:1,name:"[17:0]u8",length:17,byteSize:18,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:l}],methods:[]}});Object.assign(tt,{...e,type:13,name:"*const [17:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[]}});Object.assign(et,{...e,type:2,name:"Struct2578653932",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:s},{...t,type:9,slot:2,name:"maxValue",structure:s},{...t,type:9,slot:3,name:"defaultValue",structure:s},{...t,type:9,slot:4,name:"description",structure:tt}],methods:[],template:Ie}});Object.assign(st,{...e,type:1,name:"[14:0]u8",length:14,byteSize:15,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:l}],methods:[]}});Object.assign(rt,{...e,type:13,name:"*const [14:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:st}],methods:[]}});Object.assign(at,{...e,type:2,name:"Struct2211805177",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:s},{...t,type:9,slot:2,name:"maxValue",structure:s},{...t,type:9,slot:3,name:"defaultValue",structure:s},{...t,type:9,slot:4,name:"description",structure:rt}],methods:[],template:Ee}});Object.assign(nt,{...e,type:2,name:"Struct3015196578",align:1,instance:{members:[{...t,type:9,slot:0,name:"image_h",structure:G},{...t,type:9,slot:1,name:"center",structure:Y},{...t,type:9,slot:2,name:"tick",structure:et},{...t,type:9,slot:3,name:"spread",structure:at}],methods:[],template:De}});Object.assign(d,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:p}],methods:[],template:Fe}});Object.assign(it,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:9,slot:0,name:"src",structure:d}],methods:[],template:Te}});Object.assign(ot,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:9,slot:0,name:"dst",structure:d}],methods:[],template:$e}});Object.assign(ft,{...e,type:2,name:"warp.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:D},{...t,type:9,slot:1,name:"vendor",structure:M},{...t,type:9,slot:2,name:"version",structure:p},{...t,type:9,slot:3,name:"description",structure:$},{...t,type:9,slot:4,name:"parameters",structure:nt},{...t,type:9,slot:5,name:"inputImages",structure:it},{...t,type:9,slot:6,name:"outputImages",structure:ot}],methods:[],template:Le}});Object.assign(V,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:l}],methods:[]}});Object.assign(ct,{...e,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(I,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:ct}],methods:[]}});Object.assign(y,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[]}});Object.assign(f,{...e,type:11,name:"warp.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:f},{...t,type:9,slot:1,name:"display-p3",structure:f}],methods:[],template:es}});Object.assign(U,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:U}],methods:[]}});Object.assign(St,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:O}],methods:[]}});Object.assign(ut,{...e,type:2,name:"warp.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:I},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:f},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:as},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:r},{...t,type:9,slot:1,name:"FPixel",structure:r},{...t,type:9,slot:2,name:"channels",structure:p}],methods:[],template:is}});Object.assign(k,{...e,type:2,name:"warp.KernelInput(u8,warp.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:ut}],methods:[],template:ys}});Object.assign(mt,{...e,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(R,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:mt}],methods:[]}});Object.assign(yt,{...e,type:2,name:"warp.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:R},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:f},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:ps},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:r},{...t,type:9,slot:1,name:"FPixel",structure:r},{...t,type:9,slot:2,name:"channels",structure:p}],methods:[],template:Os}});Object.assign(q,{...e,type:2,name:"warp.KernelOutput(u8,warp.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:yt}],methods:[],template:hs}});Object.assign(v,{...e,type:2,name:"warp.KernelParameters(warp.kernel)",byteSize:24,align:8,instance:{members:[{...t,type:4,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"image_h",structure:O},{...t,type:7,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"center",structure:X},{...t,type:4,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"tick",structure:O},{...t,type:4,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"spread",structure:O}],methods:[],template:As}});Object.assign(P,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(warp.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:P}],methods:[],template:Us}});Object.assign(jt,{...e,type:9,name:"ErrorSet1988986288!warp.KernelOutput(u8,warp.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:q},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:P}],methods:[]}});Object.assign(zt,{...e,type:5,name:"createOutput",byteSize:88,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:192,bitSize:32,byteSize:4,slot:3,name:"0",structure:y},{...t,type:3,isRequired:!0,bitOffset:224,bitSize:32,byteSize:4,slot:4,name:"1",structure:y},{...t,type:7,isRequired:!0,bitOffset:256,bitSize:192,byteSize:24,slot:0,name:"2",structure:k},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:192,byteSize:24,slot:1,name:"3",structure:v},{...t,type:7,isRequired:!0,bitOffset:448,bitSize:224,byteSize:28,slot:2,name:"retval",structure:jt}],methods:[]}});Object.assign(_,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(warp.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:_}],methods:[],template:Ps}});Object.assign(ht,{...e,type:9,name:"ErrorSet2089587705!warp.KernelOutput(u8,warp.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:q},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:_}],methods:[]}});Object.assign(dt,{...e,type:5,name:"createPartialOutput",byteSize:96,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:192,bitSize:32,byteSize:4,slot:3,name:"0",structure:y},{...t,type:3,isRequired:!0,bitOffset:224,bitSize:32,byteSize:4,slot:4,name:"1",structure:y},{...t,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:5,name:"2",structure:y},{...t,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:6,name:"3",structure:y},{...t,type:7,isRequired:!0,bitOffset:320,bitSize:192,byteSize:24,slot:0,name:"4",structure:k},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:192,byteSize:24,slot:1,name:"5",structure:v},{...t,type:7,isRequired:!0,bitOffset:512,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ht}],methods:[]}});Object.assign(wt,{...e,type:2,name:"warp",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:r},{...t,type:9,slot:1,name:"Input",structure:r},{...t,type:9,slot:2,name:"Output",structure:r},{...t,type:9,slot:3,name:"Parameters",structure:r}],methods:[Ca,_a],template:Vs}});const Ka=[r,l,K,D,F,M,p,S,T,$,s,L,B,O,n,G,H,J,N,Q,W,X,Y,Z,tt,et,st,rt,at,nt,d,it,ot,ft,V,ct,I,y,f,U,St,ut,k,mt,R,yt,q,v,P,jt,zt,_,ht,dt,wt],Da=wt,Fa={runtimeSafety:!1,littleEndian:!0},pt=nr();pt.getControlObject();pt.recreateStructures(Ka,Fa);const Ma=(async()=>{const c=new URL("warp-bff92abf.wasm",import.meta.url).href;return fetch(c)})();pt.loadModule(Ma);pt.linkVariables(!0);const{constructor:Ta}=Da,{createPartialOutput:$a,Input:La,kernel:Ot}=Ta;function Ba(c,u,i,a,o={},j={}){const z=[];for(const[b]of Ot.inputImages)z.push(b);const w=[];for(const[b]of Ot.outputImages)w.push(b);if(Array.isArray(o)){const b=o;o={};for(const[g,h]of z.entries())o[h]=b[g]}const m=new La(void 0),E=[];let A;for(const b of z){let g=o[b];if(g||(z.length===1&&["data","width","height"].every(h=>!!o[h])?g=o:E.push(b)),m[b]=g,A){if(g.colorSpace!==A)throw new Error(`Input images must all use the same color space: ${A}`)}else A=g.colorSpace}if(E.length>0)throw new Error(`Missing input image${E.length>1?"s":""}: ${E.join(", ")}`);const gt=$a(c,u,i,a,m,j),ue=b=>{const g={};for(const h of w){const{data:{typedArray:x},width:me,height:Fs}=b[h];let C;if(typeof ImageData=="function"){const Ms=new Uint8ClampedArray(x.buffer,x.byteOffset,x.byteLength);C=new ImageData(Ms,me,a,{colorSpace:A})}else C={data:x,width:me,height:Fs};if(w.length===1)return C;g[h]=C}return g};return gt[Symbol.toStringTag]==="Promise"?gt.then(ue):ue(gt)}function Ga(){const c={};for(let[u,i]of Ot){if(u==="parameters"){const a={};for(const[o,j]of i){const z=a[o]={};for(let[w,m]of j)typeof m=="object"?"string"in m?m=m.string:m=Ds(m):typeof m=="function"&&(m=Ha(m.name)),z[w]=m}i=a}else typeof i=="object"&&("string"in i?i=i.string:i=i.valueOf());c[u]=i}return c}function Ds(c){const u=[];for(let[i,a]of c)typeof a=="object"&&(a=Ds(a)),u[i]=a;return u}function Ha(c){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[c]}onmessage=c=>{const[u,i,...a]=c.data;Ja(u,a).then(([o,j])=>{postMessage([u,i,o],{transfer:j})}).catch(o=>{postMessage(["error",i,o])})};async function Ja(c,u){switch(c){case"getKernelInfo":return[Ga(...u)];case"createPartialImageData":const a=await Ba(...u),o=[];if("data"in a&&"width"in a&&"height"in a)o.push(a.data.buffer);else for(const j of Object.entries(a))o.push(a.data.buffer);return[a,o];default:throw new Error(`Unknown function: ${c}`)}}
