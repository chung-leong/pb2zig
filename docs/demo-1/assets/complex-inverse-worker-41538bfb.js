import{u as At,a as Ut,b as Rt,d as qt,c as Ot,e as jt,f as Pt,g as Vt,h as Ct,i as xt,j as vt,k as kt,l as It,m as Et,o as Kt,n as Dt,p as Ft,q as Mt}from"./index-d64bc850.js";At();Ut();Rt();qt();Ot();jt();Pt();Vt();Ct();xt();vt();kt();It();Et();Kt();Dt();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},h={},we={},ze={},T={},Ae={},Ue={},$={},p={},f={},Re={},qe={},B={},c={},u={},s={},r={},q={},S={},O={},g={},Oe={},L={},je={},G={},Pe={},H={},Ve={},J={},Ce={},N={},xe={},Q={},ve={},W={},ke={},X={},Ie={},Y={},Ee={},Z={},Ke={},ee={},De={},te={},Fe={},re={},Me={},se={},v={},U={},_e={},ae={},Te={},ne={},$e={},ie={},Be={},ue={},Le={},oe={},Ge={},me={},He={},ye={},Je={},le={},Ne={},ce={},j={},C={},A={},Qe={},be={},We={},pe={},Xe={},fe={},k={},R={},Ye={},de={},Ze={},Se={},ut={},P={},et={},tt={},l={},rt={},x={},ge={},I={},st={},at={},he={},E={},K={},ot={},mt={},yt={},lt={},ct={},bt={},pt={};Object.assign(h,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:h}],methods:[],template:null},slot:5});Object.assign(we,{...t,type:1,name:"[18:0]u8",length:18,byteSize:19,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:h}],methods:[],template:null},slot:4});Object.assign(ze,{...t,type:11,name:"*const [18:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:we}],methods:[],template:null},slot:3});Object.assign(T,{...t,type:11,name:"*const *const [18:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ze}],methods:[],template:null},slot:2});Object.assign(Ae,{...t,type:1,name:"[8:0]u8",length:8,byteSize:9,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:h}],methods:[],template:null},slot:8});Object.assign(Ue,{...t,type:11,name:"*const [8:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ae}],methods:[],template:null},slot:7});Object.assign($,{...t,type:11,name:"*const *const [8:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ue}],methods:[],template:null},slot:6});Object.assign(p,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[],template:null},slot:10});Object.assign(f,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:p}],methods:[],template:null},slot:9});Object.assign(Re,{...t,type:1,name:"[39:0]u8",length:39,byteSize:40,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:h}],methods:[],template:null},slot:13});Object.assign(qe,{...t,type:11,name:"*const [39:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Re}],methods:[],template:null},slot:12});Object.assign(B,{...t,type:11,name:"*const *const [39:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:qe}],methods:[],template:null},slot:11});Object.assign(c,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:33});Object.assign(u,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:32});Object.assign(s,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:s}],methods:[],template:null},slot:98});Object.assign(r,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:s}],methods:[],template:null},slot:97});const _t=new Uint8Array,Tt=new Uint8Array([224,246,15,0]),$t=new Uint8Array([0,0,0,0,0,0,20,192]),Bt=new Uint8Array([8,247,15,0]),Lt=new Uint8Array([0,0,0,0,0,0,20,192]);Object.assign(q,{...t,type:2,name:"Struct0048",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:_t},slots:{0:{structure:r,memory:{array:Tt},slots:{0:{structure:s,memory:{array:$t}}}},1:{structure:r,memory:{array:Bt},slots:{0:{structure:s,memory:{array:Lt}}}}}}},slot:66});Object.assign(S,{...t,type:11,name:"Struct0030",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:q}],methods:[],template:null},slot:65});const Gt=new Uint8Array,Ht=new Uint8Array([224,246,15,0]),Jt=new Uint8Array([0,0,0,0,0,0,20,64]),Nt=new Uint8Array([8,247,15,0]),Qt=new Uint8Array([0,0,0,0,0,0,20,64]);Object.assign(O,{...t,type:2,name:"Struct0049",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Gt},slots:{0:{structure:r,memory:{array:Ht},slots:{0:{structure:s,memory:{array:Jt}}}},1:{structure:r,memory:{array:Nt},slots:{0:{structure:s,memory:{array:Qt}}}}}}},slot:68});Object.assign(g,{...t,type:11,name:"Struct0031",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:O}],methods:[],template:null},slot:67});const Wt=new Uint8Array,Xt=new Uint8Array([48,252,15,0]),Yt=new Uint8Array([51,51,51,51,51,51,211,191]),Zt=new Uint8Array([88,252,15,0]),er=new Uint8Array([154,153,153,153,153,153,241,191]);Object.assign(Oe,{...t,type:2,name:"Struct0050",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Wt},slots:{0:{structure:r,memory:{array:Xt},slots:{0:{structure:s,memory:{array:Yt}}}},1:{structure:r,memory:{array:Zt},slots:{0:{structure:s,memory:{array:er}}}}}}},slot:70});Object.assign(L,{...t,type:11,name:"Struct0032",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Oe}],methods:[],template:null},slot:69});const tr=new Uint8Array,rr=new Uint8Array([170,170,170,170]),sr=new Uint8Array,ar=new Uint8Array([170,170,170,170]),nr=new Uint8Array,ir=new Uint8Array([170,170,170,170]),ur=new Uint8Array;Object.assign(je,{...t,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:S},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:g},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:L}],methods:[],template:{memory:{array:tr},slots:{0:{structure:S,memory:{array:rr},slots:{0:{structure:q,memory:{array:sr}}}},1:{structure:g,memory:{array:ar},slots:{0:{structure:O,memory:{array:nr}}}},2:{structure:L,memory:{array:ir},slots:{0:{structure:Oe,memory:{array:ur}}}}}}},slot:40});Object.assign(G,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:je}],methods:[],template:null},slot:39});const or=new Uint8Array,mr=new Uint8Array([48,252,15,0]),yr=new Uint8Array([205,204,204,204,204,204,0,64]),lr=new Uint8Array([88,252,15,0]),cr=new Uint8Array([154,153,153,153,153,153,185,63]);Object.assign(Pe,{...t,type:2,name:"Struct0051",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:or},slots:{0:{structure:r,memory:{array:mr},slots:{0:{structure:s,memory:{array:yr}}}},1:{structure:r,memory:{array:lr},slots:{0:{structure:s,memory:{array:cr}}}}}}},slot:72});Object.assign(H,{...t,type:11,name:"Struct0033",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Pe}],methods:[],template:null},slot:71});const br=new Uint8Array,pr=new Uint8Array([170,170,170,170]),fr=new Uint8Array,dr=new Uint8Array([170,170,170,170]),Sr=new Uint8Array,gr=new Uint8Array([170,170,170,170]),hr=new Uint8Array;Object.assign(Ve,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:S},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:g},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:H}],methods:[],template:{memory:{array:br},slots:{0:{structure:S,memory:{array:pr},slots:{0:{structure:q,memory:{array:fr}}}},1:{structure:g,memory:{array:dr},slots:{0:{structure:O,memory:{array:Sr}}}},2:{structure:H,memory:{array:gr},slots:{0:{structure:Pe,memory:{array:hr}}}}}}},slot:42});Object.assign(J,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ve}],methods:[],template:null},slot:41});const wr=new Uint8Array,zr=new Uint8Array([48,252,15,0]),Ar=new Uint8Array([51,51,51,51,51,51,227,63]),Ur=new Uint8Array([88,252,15,0]),Rr=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(Ce,{...t,type:2,name:"Struct0052",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:wr},slots:{0:{structure:r,memory:{array:zr},slots:{0:{structure:s,memory:{array:Ar}}}},1:{structure:r,memory:{array:Ur},slots:{0:{structure:s,memory:{array:Rr}}}}}}},slot:74});Object.assign(N,{...t,type:11,name:"Struct0034",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ce}],methods:[],template:null},slot:73});const qr=new Uint8Array,Or=new Uint8Array([170,170,170,170]),jr=new Uint8Array,Pr=new Uint8Array([170,170,170,170]),Vr=new Uint8Array,Cr=new Uint8Array([170,170,170,170]),xr=new Uint8Array;Object.assign(xe,{...t,type:2,name:"Struct0020",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:S},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:g},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:N}],methods:[],template:{memory:{array:qr},slots:{0:{structure:S,memory:{array:Or},slots:{0:{structure:q,memory:{array:jr}}}},1:{structure:g,memory:{array:Pr},slots:{0:{structure:O,memory:{array:Vr}}}},2:{structure:N,memory:{array:Cr},slots:{0:{structure:Ce,memory:{array:xr}}}}}}},slot:44});Object.assign(Q,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:xe}],methods:[],template:null},slot:43});const vr=new Uint8Array,kr=new Uint8Array([48,252,15,0]),Ir=new Uint8Array([0,0,0,0,0,0,0,192]),Er=new Uint8Array([88,252,15,0]),Kr=new Uint8Array([0,0,0,0,0,0,0,192]);Object.assign(ve,{...t,type:2,name:"Struct0053",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:vr},slots:{0:{structure:r,memory:{array:kr},slots:{0:{structure:s,memory:{array:Ir}}}},1:{structure:r,memory:{array:Er},slots:{0:{structure:s,memory:{array:Kr}}}}}}},slot:76});Object.assign(W,{...t,type:11,name:"Struct0035",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ve}],methods:[],template:null},slot:75});const Dr=new Uint8Array,Fr=new Uint8Array([48,252,15,0]),Mr=new Uint8Array([0,0,0,0,0,0,0,64]),_r=new Uint8Array([88,252,15,0]),Tr=new Uint8Array([0,0,0,0,0,0,0,64]);Object.assign(ke,{...t,type:2,name:"Struct0054",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Dr},slots:{0:{structure:r,memory:{array:Fr},slots:{0:{structure:s,memory:{array:Mr}}}},1:{structure:r,memory:{array:_r},slots:{0:{structure:s,memory:{array:Tr}}}}}}},slot:78});Object.assign(X,{...t,type:11,name:"Struct0036",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ke}],methods:[],template:null},slot:77});const $r=new Uint8Array,Br=new Uint8Array([48,252,15,0]),Lr=new Uint8Array([154,153,153,153,153,153,201,63]),Gr=new Uint8Array([88,252,15,0]),Hr=new Uint8Array([236,81,184,30,133,235,241,191]);Object.assign(Ie,{...t,type:2,name:"Struct0055",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:$r},slots:{0:{structure:r,memory:{array:Br},slots:{0:{structure:s,memory:{array:Lr}}}},1:{structure:r,memory:{array:Gr},slots:{0:{structure:s,memory:{array:Hr}}}}}}},slot:80});Object.assign(Y,{...t,type:11,name:"Struct0037",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ie}],methods:[],template:null},slot:79});const Jr=new Uint8Array,Nr=new Uint8Array([170,170,170,170]),Qr=new Uint8Array,Wr=new Uint8Array([170,170,170,170]),Xr=new Uint8Array,Yr=new Uint8Array([170,170,170,170]),Zr=new Uint8Array;Object.assign(Ee,{...t,type:2,name:"Struct0021",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:W},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:X},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:Y}],methods:[],template:{memory:{array:Jr},slots:{0:{structure:W,memory:{array:Nr},slots:{0:{structure:ve,memory:{array:Qr}}}},1:{structure:X,memory:{array:Wr},slots:{0:{structure:ke,memory:{array:Xr}}}},2:{structure:Y,memory:{array:Yr},slots:{0:{structure:Ie,memory:{array:Zr}}}}}}},slot:46});Object.assign(Z,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ee}],methods:[],template:null},slot:45});const es=new Uint8Array,ts=new Uint8Array([48,252,15,0]),rs=new Uint8Array([154,153,153,153,153,153,185,63]),ss=new Uint8Array([88,252,15,0]),as=new Uint8Array([154,153,153,153,153,153,185,63]);Object.assign(Ke,{...t,type:2,name:"Struct0056",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:es},slots:{0:{structure:r,memory:{array:ts},slots:{0:{structure:s,memory:{array:rs}}}},1:{structure:r,memory:{array:ss},slots:{0:{structure:s,memory:{array:as}}}}}}},slot:82});Object.assign(ee,{...t,type:11,name:"Struct0038",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ke}],methods:[],template:null},slot:81});const ns=new Uint8Array,is=new Uint8Array([48,252,15,0]),us=new Uint8Array([0,0,0,0,0,0,52,64]),os=new Uint8Array([88,252,15,0]),ms=new Uint8Array([0,0,0,0,0,0,52,64]);Object.assign(De,{...t,type:2,name:"Struct0057",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:ns},slots:{0:{structure:r,memory:{array:is},slots:{0:{structure:s,memory:{array:us}}}},1:{structure:r,memory:{array:os},slots:{0:{structure:s,memory:{array:ms}}}}}}},slot:84});Object.assign(te,{...t,type:11,name:"Struct0039",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:De}],methods:[],template:null},slot:83});const ys=new Uint8Array,ls=new Uint8Array([48,252,15,0]),cs=new Uint8Array([0,0,0,0,0,0,8,64]),bs=new Uint8Array([88,252,15,0]),ps=new Uint8Array([145,43,80,230,122,182,251,63]);Object.assign(Fe,{...t,type:2,name:"Struct0058",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:ys},slots:{0:{structure:r,memory:{array:ls},slots:{0:{structure:s,memory:{array:cs}}}},1:{structure:r,memory:{array:bs},slots:{0:{structure:s,memory:{array:ps}}}}}}},slot:86});Object.assign(re,{...t,type:11,name:"Struct0040",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Fe}],methods:[],template:null},slot:85});const fs=new Uint8Array,ds=new Uint8Array([170,170,170,170]),Ss=new Uint8Array,gs=new Uint8Array([170,170,170,170]),hs=new Uint8Array,ws=new Uint8Array([170,170,170,170]),zs=new Uint8Array;Object.assign(Me,{...t,type:2,name:"Struct0022",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:ee},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:te},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:re}],methods:[],template:{memory:{array:fs},slots:{0:{structure:ee,memory:{array:ds},slots:{0:{structure:Ke,memory:{array:Ss}}}},1:{structure:te,memory:{array:gs},slots:{0:{structure:De,memory:{array:hs}}}},2:{structure:re,memory:{array:ws},slots:{0:{structure:Fe,memory:{array:zs}}}}}}},slot:48});Object.assign(se,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Me}],methods:[],template:null},slot:47});const As=new Uint8Array,Us=new Uint8Array([224,246,15,0]),Rs=new Uint8Array([0,0,0,0,0,0,240,63]),qs=new Uint8Array([8,247,15,0]),Os=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(v,{...t,type:2,name:"Struct0059",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:As},slots:{0:{structure:r,memory:{array:Us},slots:{0:{structure:s,memory:{array:Rs}}}},1:{structure:r,memory:{array:qs},slots:{0:{structure:s,memory:{array:Os}}}}}}},slot:88});Object.assign(U,{...t,type:11,name:"Struct0041",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:v}],methods:[],template:null},slot:87});const js=new Uint8Array,Ps=new Uint8Array([48,252,15,0]),Vs=new Uint8Array([0,0,0,0,0,64,127,64]),Cs=new Uint8Array([88,252,15,0]),xs=new Uint8Array([0,0,0,0,0,0,121,64]);Object.assign(_e,{...t,type:2,name:"Struct0060",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:js},slots:{0:{structure:r,memory:{array:Ps},slots:{0:{structure:s,memory:{array:Vs}}}},1:{structure:r,memory:{array:Cs},slots:{0:{structure:s,memory:{array:xs}}}}}}},slot:90});Object.assign(ae,{...t,type:11,name:"Struct0042",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:_e}],methods:[],template:null},slot:89});const vs=new Uint8Array,ks=new Uint8Array([48,252,15,0]),Is=new Uint8Array([0,0,0,0,0,64,111,64]),Es=new Uint8Array([88,252,15,0]),Ks=new Uint8Array([0,0,0,0,0,128,103,64]);Object.assign(Te,{...t,type:2,name:"Struct0061",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:vs},slots:{0:{structure:r,memory:{array:ks},slots:{0:{structure:s,memory:{array:Is}}}},1:{structure:r,memory:{array:Es},slots:{0:{structure:s,memory:{array:Ks}}}}}}},slot:92});Object.assign(ne,{...t,type:11,name:"Struct0043",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Te}],methods:[],template:null},slot:91});const Ds=new Uint8Array,Fs=new Uint8Array([170,170,170,170]),Ms=new Uint8Array,_s=new Uint8Array([170,170,170,170]),Ts=new Uint8Array,$s=new Uint8Array([170,170,170,170]),Bs=new Uint8Array;Object.assign($e,{...t,type:2,name:"Struct0023",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:U},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:ae},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:ne}],methods:[],template:{memory:{array:Ds},slots:{0:{structure:U,memory:{array:Fs},slots:{0:{structure:v,memory:{array:Ms}}}},1:{structure:ae,memory:{array:_s},slots:{0:{structure:_e,memory:{array:Ts}}}},2:{structure:ne,memory:{array:$s},slots:{0:{structure:Te,memory:{array:Bs}}}}}}},slot:50});Object.assign(ie,{...t,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:$e}],methods:[],template:null},slot:49});const Ls=new Uint8Array,Gs=new Uint8Array([48,252,15,0]),Hs=new Uint8Array([0,0,0,0,0,64,143,64]),Js=new Uint8Array([88,252,15,0]),Ns=new Uint8Array([0,0,0,0,0,64,143,64]);Object.assign(Be,{...t,type:2,name:"Struct0062",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Ls},slots:{0:{structure:r,memory:{array:Gs},slots:{0:{structure:s,memory:{array:Hs}}}},1:{structure:r,memory:{array:Js},slots:{0:{structure:s,memory:{array:Ns}}}}}}},slot:94});Object.assign(ue,{...t,type:11,name:"Struct0044",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Be}],methods:[],template:null},slot:93});const Qs=new Uint8Array,Ws=new Uint8Array([48,252,15,0]),Xs=new Uint8Array([0,0,0,0,0,128,107,64]),Ys=new Uint8Array([88,252,15,0]),Zs=new Uint8Array([0,0,0,0,0,192,119,64]);Object.assign(Le,{...t,type:2,name:"Struct0063",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Qs},slots:{0:{structure:r,memory:{array:Ws},slots:{0:{structure:s,memory:{array:Xs}}}},1:{structure:r,memory:{array:Ys},slots:{0:{structure:s,memory:{array:Zs}}}}}}},slot:96});Object.assign(oe,{...t,type:11,name:"Struct0045",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Le}],methods:[],template:null},slot:95});const ea=new Uint8Array,ta=new Uint8Array([170,170,170,170]),ra=new Uint8Array,sa=new Uint8Array([170,170,170,170]),aa=new Uint8Array,na=new Uint8Array([170,170,170,170]),ia=new Uint8Array;Object.assign(Ge,{...t,type:2,name:"Struct0024",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:U},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:ue},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:oe}],methods:[],template:{memory:{array:ea},slots:{0:{structure:U,memory:{array:ta},slots:{0:{structure:v,memory:{array:ra}}}},1:{structure:ue,memory:{array:sa},slots:{0:{structure:Be,memory:{array:aa}}}},2:{structure:oe,memory:{array:na},slots:{0:{structure:Le,memory:{array:ia}}}}}}},slot:52});Object.assign(me,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ge}],methods:[],template:null},slot:51});const ua=new Uint8Array,oa=new Uint8Array([72,252,15,0]),ma=new Uint8Array([0,0,0,0,0,0,24,192]),ya=new Uint8Array([152,249,15,0]),la=new Uint8Array([0,0,0,0,0,0,36,64]),ca=new Uint8Array([120,249,15,0]),ba=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(He,{...t,type:2,name:"Struct0025",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:c},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:ua},slots:{0:{structure:r,memory:{array:oa},slots:{0:{structure:s,memory:{array:ma}}}},1:{structure:r,memory:{array:ya},slots:{0:{structure:s,memory:{array:la}}}},2:{structure:r,memory:{array:ca},slots:{0:{structure:s,memory:{array:ba}}}}}}},slot:54});Object.assign(ye,{...t,type:11,name:"Struct0013",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:He}],methods:[],template:null},slot:53});const pa=new Uint8Array,fa=new Uint8Array([72,252,15,0]),da=new Uint8Array([0,0,0,0,0,0,240,63]),Sa=new Uint8Array([152,249,15,0]),ga=new Uint8Array([0,0,0,0,0,64,143,64]),ha=new Uint8Array([120,249,15,0]),wa=new Uint8Array([0,0,0,0,0,0,105,64]);Object.assign(Je,{...t,type:2,name:"Struct0026",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:c},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:pa},slots:{0:{structure:r,memory:{array:fa},slots:{0:{structure:s,memory:{array:da}}}},1:{structure:r,memory:{array:Sa},slots:{0:{structure:s,memory:{array:ga}}}},2:{structure:r,memory:{array:ha},slots:{0:{structure:s,memory:{array:wa}}}}}}},slot:56});Object.assign(le,{...t,type:11,name:"Struct0014",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Je}],methods:[],template:null},slot:55});const za=new Uint8Array,Aa=new Uint8Array([72,252,15,0]),Ua=new Uint8Array([123,20,174,71,225,122,132,63]),Ra=new Uint8Array([152,249,15,0]),qa=new Uint8Array([0,0,0,0,0,0,224,63]),Oa=new Uint8Array([120,249,15,0]),ja=new Uint8Array([154,153,153,153,153,153,201,63]);Object.assign(Ne,{...t,type:2,name:"Struct0027",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:c},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:za},slots:{0:{structure:r,memory:{array:Aa},slots:{0:{structure:s,memory:{array:Ua}}}},1:{structure:r,memory:{array:Ra},slots:{0:{structure:s,memory:{array:qa}}}},2:{structure:r,memory:{array:Oa},slots:{0:{structure:s,memory:{array:ja}}}}}}},slot:58});Object.assign(ce,{...t,type:11,name:"Struct0015",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ne}],methods:[],template:null},slot:57});Object.assign(j,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:34});const Pa=new Uint8Array,Va=new Uint8Array([144,246,15,0]),Ca=new Uint8Array([0,0,0,0,0,0,0,0]),xa=new Uint8Array([184,246,15,0]),va=new Uint8Array([0,0,0,0,0,0,0,0]),ka=new Uint8Array([224,246,15,0]),Ia=new Uint8Array([0,0,0,0,0,0,0,0]),Ea=new Uint8Array([8,247,15,0]),Ka=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(C,{...t,type:2,name:"Struct0064",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:r}],methods:[],template:{memory:{array:Pa},slots:{0:{structure:r,memory:{array:Va},slots:{0:{structure:s,memory:{array:Ca}}}},1:{structure:r,memory:{array:xa},slots:{0:{structure:s,memory:{array:va}}}},2:{structure:r,memory:{array:ka},slots:{0:{structure:s,memory:{array:Ia}}}},3:{structure:r,memory:{array:Ea},slots:{0:{structure:s,memory:{array:Ka}}}}}}},slot:100});Object.assign(A,{...t,type:11,name:"Struct0046",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:C}],methods:[],template:null},slot:99});const Da=new Uint8Array,Fa=new Uint8Array([192,251,15,0]),Ma=new Uint8Array([0,0,0,0,0,0,240,63]),_a=new Uint8Array([232,251,15,0]),Ta=new Uint8Array([0,0,0,0,0,0,240,63]),$a=new Uint8Array([16,252,15,0]),Ba=new Uint8Array([0,0,0,0,0,0,240,63]),La=new Uint8Array([56,252,15,0]),Ga=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(Qe,{...t,type:2,name:"Struct0065",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:r}],methods:[],template:{memory:{array:Da},slots:{0:{structure:r,memory:{array:Fa},slots:{0:{structure:s,memory:{array:Ma}}}},1:{structure:r,memory:{array:_a},slots:{0:{structure:s,memory:{array:Ta}}}},2:{structure:r,memory:{array:$a},slots:{0:{structure:s,memory:{array:Ba}}}},3:{structure:r,memory:{array:La},slots:{0:{structure:s,memory:{array:Ga}}}}}}},slot:102});Object.assign(be,{...t,type:11,name:"Struct0047",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Qe}],methods:[],template:null},slot:101});const Ha=new Uint8Array,Ja=new Uint8Array([170,170,170,170]),Na=new Uint8Array,Qa=new Uint8Array([170,170,170,170]),Wa=new Uint8Array,Xa=new Uint8Array([170,170,170,170]),Ya=new Uint8Array;Object.assign(We,{...t,type:2,name:"Struct0028",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:j},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:A},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:be},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:A}],methods:[],template:{memory:{array:Ha},slots:{0:{structure:A,memory:{array:Ja},slots:{0:{structure:C,memory:{array:Na}}}},1:{structure:be,memory:{array:Qa},slots:{0:{structure:Qe,memory:{array:Wa}}}},2:{structure:A,memory:{array:Xa},slots:{0:{structure:C,memory:{array:Ya}}}}}}},slot:60});Object.assign(pe,{...t,type:11,name:"Struct0016",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:We}],methods:[],template:null},slot:59});const Za=new Uint8Array,en=new Uint8Array([170,170,170,170]),tn=new Uint8Array,rn=new Uint8Array([170,170,170,170]),sn=new Uint8Array,an=new Uint8Array([170,170,170,170]),nn=new Uint8Array,un=new Uint8Array([170,170,170,170]),on=new Uint8Array,mn=new Uint8Array([170,170,170,170]),yn=new Uint8Array,ln=new Uint8Array([170,170,170,170]),cn=new Uint8Array,bn=new Uint8Array([170,170,170,170]),pn=new Uint8Array,fn=new Uint8Array([170,170,170,170]),dn=new Uint8Array,Sn=new Uint8Array([170,170,170,170]),gn=new Uint8Array,hn=new Uint8Array([170,170,170,170]),wn=new Uint8Array,zn=new Uint8Array([170,170,170,170]),An=new Uint8Array;Object.assign(Xe,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"a",structure:G},{...e,type:8,isRequired:!1,slot:1,name:"b",structure:J},{...e,type:8,isRequired:!1,slot:2,name:"c",structure:Q},{...e,type:8,isRequired:!1,slot:3,name:"d",structure:Z},{...e,type:8,isRequired:!1,slot:4,name:"distort",structure:se},{...e,type:8,isRequired:!1,slot:5,name:"imagesize",structure:ie},{...e,type:8,isRequired:!1,slot:6,name:"center",structure:me},{...e,type:8,isRequired:!1,slot:7,name:"focus",structure:ye},{...e,type:8,isRequired:!1,slot:8,name:"scale",structure:le},{...e,type:8,isRequired:!1,slot:9,name:"fill",structure:ce},{...e,type:8,isRequired:!1,slot:10,name:"bgcolor",structure:pe}],methods:[],template:{memory:{array:Za},slots:{0:{structure:G,memory:{array:en},slots:{0:{structure:je,memory:{array:tn}}}},1:{structure:J,memory:{array:rn},slots:{0:{structure:Ve,memory:{array:sn}}}},2:{structure:Q,memory:{array:an},slots:{0:{structure:xe,memory:{array:nn}}}},3:{structure:Z,memory:{array:un},slots:{0:{structure:Ee,memory:{array:on}}}},4:{structure:se,memory:{array:mn},slots:{0:{structure:Me,memory:{array:yn}}}},5:{structure:ie,memory:{array:ln},slots:{0:{structure:$e,memory:{array:cn}}}},6:{structure:me,memory:{array:bn},slots:{0:{structure:Ge,memory:{array:pn}}}},7:{structure:ye,memory:{array:fn},slots:{0:{structure:He,memory:{array:dn}}}},8:{structure:le,memory:{array:Sn},slots:{0:{structure:Je,memory:{array:gn}}}},9:{structure:ce,memory:{array:hn},slots:{0:{structure:Ne,memory:{array:wn}}}},10:{structure:pe,memory:{array:zn},slots:{0:{structure:We,memory:{array:An}}}}}}},slot:15});Object.assign(fe,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Xe}],methods:[],template:null},slot:14});const Un=new Uint8Array,Rn=new Uint8Array([48,252,15,0]),qn=new Uint8Array([4,0,0,0]);Object.assign(k,{...t,type:2,name:"Struct0029",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:Un},slots:{0:{structure:f,memory:{array:Rn},slots:{0:{structure:p,memory:{array:qn}}}}}}},slot:62});Object.assign(R,{...t,type:11,name:"Struct0017",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:k}],methods:[],template:null},slot:61});const On=new Uint8Array,jn=new Uint8Array([170,170,170,170]),Pn=new Uint8Array;Object.assign(Ye,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:R}],methods:[],template:{memory:{array:On},slots:{0:{structure:R,memory:{array:jn},slots:{0:{structure:k,memory:{array:Pn}}}}}}},slot:17});Object.assign(de,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ye}],methods:[],template:null},slot:16});const Vn=new Uint8Array,Cn=new Uint8Array([170,170,170,170]),xn=new Uint8Array;Object.assign(Ze,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:R}],methods:[],template:{memory:{array:Vn},slots:{0:{structure:R,memory:{array:Cn},slots:{0:{structure:k,memory:{array:xn}}}}}}},slot:19});Object.assign(Se,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ze}],methods:[],template:null},slot:18});const vn=new Uint8Array,kn=new Uint8Array,In=new Uint8Array([40,39,16,0]),En=new Uint8Array([205,38,16,0]),Kn=new Uint8Array([99,111,109,112,108,101,120,32,114,97,116,105,111,110,97,108,32,51,0]),Dn=new Uint8Array([36,39,16,0]),Fn=new Uint8Array([185,38,16,0]),Mn=new Uint8Array([112,105,120,101,108,101,114,111,0]),_n=new Uint8Array([32,39,16,0]),Tn=new Uint8Array([1,0,0,0]),$n=new Uint8Array([28,39,16,0]),Bn=new Uint8Array([128,38,16,0]),Ln=new Uint8Array([99,111,109,112,108,101,120,32,109,97,112,112,105,110,103,32,122,32,61,32,100,47,91,40,122,45,97,41,40,122,45,98,41,40,122,45,99,41,93,0]),Gn=new Uint8Array([170,170,170,170]),Hn=new Uint8Array,Jn=new Uint8Array([170,170,170,170]),Nn=new Uint8Array,Qn=new Uint8Array([170,170,170,170]),Wn=new Uint8Array;Object.assign(ut,{...t,type:2,name:"complex-inverse.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:vn}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:T},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:$},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:f},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:B},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:fe},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:de},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:Se}],methods:[],template:{memory:{array:kn},slots:{0:{structure:T,memory:{array:In},slots:{0:{structure:ze,memory:{array:En},slots:{0:{structure:we,memory:{array:Kn}}}}}},1:{structure:$,memory:{array:Dn},slots:{0:{structure:Ue,memory:{array:Fn},slots:{0:{structure:Ae,memory:{array:Mn}}}}}},2:{structure:f,memory:{array:_n},slots:{0:{structure:p,memory:{array:Tn}}}},3:{structure:B,memory:{array:$n},slots:{0:{structure:qe,memory:{array:Bn},slots:{0:{structure:Re,memory:{array:Ln}}}}}},4:{structure:fe,memory:{array:Gn},slots:{0:{structure:Xe,memory:{array:Hn}}}},5:{structure:de,memory:{array:Jn},slots:{0:{structure:Ye,memory:{array:Nn}}}},6:{structure:Se,memory:{array:Qn},slots:{0:{structure:Ze,memory:{array:Wn}}}}}}},slot:1});Object.assign(P,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:h}],methods:[],template:null},slot:24});Object.assign(et,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:P}],methods:[],template:null},slot:23});Object.assign(tt,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:et}],methods:[],template:null},slot:22});Object.assign(l,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:l}],methods:[],template:null},slot:25});const Xn=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(rt,{...t,type:9,name:"complex-inverse.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:p},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:p}],methods:[],template:{memory:{array:Xn}}},slot:26});Object.assign(x,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:x}],methods:[],template:null},slot:27});const Yn=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Zn=new Uint8Array,ei=new Uint8Array([72,38,16,0]),ti=new Uint8Array([4,0,0,0]);Object.assign(ge,{...t,type:2,name:"complex-inverse.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:tt},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:rt},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:x}],methods:[],template:{memory:{array:Yn}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:P},{...e,type:7,isRequired:!1,name:"FPixel",structure:j},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:Zn},slots:{0:{structure:f,memory:{array:ei},slots:{0:{structure:p,memory:{array:ti}}}}}}},slot:21});const ri=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),si=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),gt=new Uint8Array([0,0,0,0,0,0,0,0]),ai=new Uint8Array;Object.assign(I,{...t,type:2,name:"complex-inverse.KernelInput(u8,complex-inverse.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:ge}],methods:[],template:{memory:{array:ri},slots:{0:{structure:ge,memory:{array:si},slots:{0:{structure:tt,memory:{array:gt},address:1047200,slots:{0:{structure:et,memory:{array:ai},address:0}}}}}}}},slot:20});Object.assign(st,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:P}],methods:[],template:null},slot:23});Object.assign(at,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:st}],methods:[],template:null},slot:30});const ni=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ii=new Uint8Array,ui=new Uint8Array([72,38,16,0]),oi=new Uint8Array([4,0,0,0]);Object.assign(he,{...t,type:2,name:"complex-inverse.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:at},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:rt},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:x}],methods:[],template:{memory:{array:ni}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:P},{...e,type:7,isRequired:!1,name:"FPixel",structure:j},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:ii},slots:{0:{structure:f,memory:{array:ui},slots:{0:{structure:p,memory:{array:oi}}}}}}},slot:29});const mi=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),yi=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),li=new Uint8Array;Object.assign(E,{...t,type:2,name:"complex-inverse.KernelOutput(u8,complex-inverse.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:he}],methods:[],template:{memory:{array:mi},slots:{0:{structure:he,memory:{array:yi},slots:{0:{structure:at,memory:{array:gt},address:1047200,slots:{0:{structure:st,memory:{array:li},address:0}}}}}}}},slot:28});const ci=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,154,153,153,190,205,204,140,191,102,102,6,64,205,204,204,61,154,153,25,63,0,0,0,0,205,204,76,62,41,92,143,191,0,0,64,64,215,179,221,63,0,0,122,67,0,0,60,67,0,0,92,67,0,0,190,67,0,0,0,0,0,0,72,67,205,204,76,62,0,0,0,0,0,0,0,0,0,0,0,0]);Object.assign(K,{...t,type:2,name:"complex-inverse.KernelParameters(complex-inverse.kernel)",length:1,byteSize:96,align:4,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:128,bitSize:64,byteSize:8,slot:0,name:"a",structure:u},{...e,type:6,isRequired:!1,bitOffset:192,bitSize:64,byteSize:8,slot:1,name:"b",structure:u},{...e,type:6,isRequired:!1,bitOffset:256,bitSize:64,byteSize:8,slot:2,name:"c",structure:u},{...e,type:6,isRequired:!1,bitOffset:320,bitSize:64,byteSize:8,slot:3,name:"d",structure:u},{...e,type:6,isRequired:!1,bitOffset:384,bitSize:64,byteSize:8,slot:4,name:"distort",structure:u},{...e,type:6,isRequired:!1,bitOffset:448,bitSize:64,byteSize:8,slot:5,name:"imagesize",structure:u},{...e,type:6,isRequired:!1,bitOffset:512,bitSize:64,byteSize:8,slot:6,name:"center",structure:u},{...e,type:4,isRequired:!1,bitOffset:576,bitSize:32,byteSize:4,slot:7,name:"focus",structure:c},{...e,type:4,isRequired:!1,bitOffset:608,bitSize:32,byteSize:4,slot:8,name:"scale",structure:c},{...e,type:4,isRequired:!1,bitOffset:640,bitSize:32,byteSize:4,slot:9,name:"fill",structure:c},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:128,byteSize:16,slot:10,name:"bgcolor",structure:j}],methods:[],template:{memory:{array:ci}}},slot:31});Object.assign(ot,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(complex-inverse.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:63});Object.assign(mt,{...t,type:7,name:"ErrorSet0000!complex-inverse.KernelOutput(u8,complex-inverse.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:E},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:ot}],methods:[],template:null},slot:37});Object.assign(yt,{...t,type:3,name:"createOutput",length:1,byteSize:160,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:768,bitSize:32,byteSize:4,slot:0,name:"0",structure:l},{...e,type:3,bitOffset:800,bitSize:32,byteSize:4,slot:1,name:"1",structure:l},{...e,type:6,bitOffset:832,bitSize:192,byteSize:24,slot:2,name:"2",structure:I},{...e,type:6,bitOffset:0,bitSize:768,byteSize:96,slot:3,name:"3",structure:K},{...e,type:6,bitOffset:1024,bitSize:224,byteSize:28,slot:4,name:"retval",structure:mt}],methods:[],template:null},slot:35});Object.assign(lt,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(complex-inverse.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:64});Object.assign(ct,{...t,type:7,name:"ErrorSet0001!complex-inverse.KernelOutput(u8,complex-inverse.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:E},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:lt}],methods:[],template:null},slot:38});Object.assign(bt,{...t,type:3,name:"createPartialOutput",length:1,byteSize:176,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:768,bitSize:32,byteSize:4,slot:0,name:"0",structure:l},{...e,type:3,bitOffset:800,bitSize:32,byteSize:4,slot:1,name:"1",structure:l},{...e,type:3,bitOffset:832,bitSize:32,byteSize:4,slot:2,name:"2",structure:l},{...e,type:3,bitOffset:864,bitSize:32,byteSize:4,slot:3,name:"3",structure:l},{...e,type:6,bitOffset:896,bitSize:192,byteSize:24,slot:4,name:"4",structure:I},{...e,type:6,bitOffset:0,bitSize:768,byteSize:96,slot:5,name:"5",structure:K},{...e,type:6,bitOffset:1088,bitSize:224,byteSize:28,slot:6,name:"retval",structure:ct}],methods:[],template:null},slot:36});const bi=new Uint8Array,pi={argStruct:yt,thunk:7,name:"createOutput"},fi={argStruct:bt,thunk:1,name:"createPartialOutput"};Object.assign(pt,{...t,type:2,name:"complex-inverse",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:bi}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:ut},{...e,type:7,isRequired:!1,name:"Input",structure:I},{...e,type:7,isRequired:!1,name:"Output",structure:E},{...e,type:7,isRequired:!1,name:"Parameters",structure:K}],methods:[pi,fi],template:null},slot:0});const di=[h,we,ze,T,Ae,Ue,$,p,f,Re,qe,B,c,u,s,r,q,S,O,g,Oe,L,je,G,Pe,H,Ve,J,Ce,N,xe,Q,ve,W,ke,X,Ie,Y,Ee,Z,Ke,ee,De,te,Fe,re,Me,se,v,U,_e,ae,Te,ne,$e,ie,Be,ue,Le,oe,Ge,me,He,ye,Je,le,Ne,ce,j,C,A,Qe,be,We,pe,Xe,fe,k,R,Ye,de,Ze,Se,ut,P,et,tt,l,rt,x,ge,I,st,at,he,E,K,ot,mt,yt,lt,ct,bt,pt],Si=Ft(di),gi=pt.constructor,hi=(async()=>{const o=new URL("complex-inverse-64c9ad27.wasm",import.meta.url).href;return fetch(o)})();Mt(hi,{...Si,writeBack:!0});const{createOutput:ji,createPartialOutput:wi,kernel:it,Input:zi,Output:Pi,Parameters:Vi}=gi;function Ai(o,y,n,a,i={},w={}){if(Array.isArray(i)){const d=i;i={};for(const[b,z]of Object.keys(it.inputImages).entries())i[z]=d[b]}const D=new zi(void 0),F=Object.keys(it.inputImages),m=[];let V;for(const d of F){let b=i[d];if(b||(F.length===1&&["data","width","height"].every(z=>!!i[z])?b=i:m.push(d)),D[d]=b,V){if(b.colorSpace!==V)throw new Error(`Input images must all use the same color space: ${V}`)}else V=b.colorSpace}if(m.length>0)throw new Error(`Missing input image${m.length>1?"s":""}: ${m.join(", ")}`);const nt=wi(o,y,n,a,D,w),ft=d=>{const b=Object.keys(d),z={};for(const dt of b){const{data:{typedArray:M},width:St,height:wt}=d[dt];let _;if(typeof ImageData=="function"){const zt=new Uint8ClampedArray(M.buffer,M.byteOffset,M.byteLength);_=new ImageData(zt,St,a,{colorSpace:V})}else _={data:M,width:St,height:wt};if(b.length===1)return _;z[dt]=_}return z};return nt[Symbol.toStringTag]==="Promise"?nt.then(ft):ft(nt)}function Ui(){const o={};for(let[y,n]of Object.entries(it)){if(y==="parameters"){const a={};for(const[i,w]of Object.entries(n)){const D=a[i]={};for(let[F,m]of Object.entries(w))typeof m=="object"?"string"in m?m=m.string:m=ht(m):typeof m=="function"&&(m=Ri(m.name)),D[F]=m}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());o[y]=n}return o}function ht(o){const y=[];for(let[n,a]of Object.entries(o))typeof a=="object"&&(a=ht(a)),y[n]=a;return y}function Ri(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[y,n,...a]=o.data;qi(y,a).then(([i,w])=>{postMessage([y,n,i],{transfer:w})}).catch(i=>{postMessage(["error",n,i])})};async function qi(o,y){switch(o){case"getKernelInfo":return[Ui(...y)];case"createPartialImageData":const a=await Ai(...y),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const w of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${o}`)}}
