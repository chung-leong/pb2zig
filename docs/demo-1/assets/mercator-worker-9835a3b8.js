import{u as Ee,a as xe,b as Ke,c as Ce,d as De,e as Me,f as Fe,g as Te,h as _e,i as $e,j as Le,k as Be,l as Ge,m as He,n as Je,o as Ne,p as Qe,q as We}from"./index-270629a1.js";Ee();Be();Ge();xe();Ke();He();Je();Ne();Qe();Ce();De();Me();Fe();We();Te();_e();$e();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},g={},M={},F={},T={},_={},y={},f={},$={},L={},p={},O={},w={},A={},B={},U={},G={},H={},at={},k={},J={},q={},o={},l={},R={},it={},N={},I={},Q={},v={},W={},E={},x={},h={},ot={},ct={},d={},ut={},mt={},yt={},At={},X={},Ut={},Y={},Pt={},Z={},Vt={},tt={},Rt={},kt={},bt={},lt={},qt={},et={},It={},vt={},pt={},Et={},gt={},xt={},Kt={},Ct={},Dt={},Mt={},Ft={},Tt={},_t={},$t={},Lt={},Bt={},Gt={},Ht={},Jt={},Nt={},Qt={},Wt={},ft={},Xt={},Yt={},Ot={},Zt={},St={},te={},ee={},se={},re={},ne={},ae={},ie={},zt={},oe={},ce={},ue={},me={},ye={},be={},le={},pe={},ge={},fe={},Oe={},Se={},ze={},je={},he={},de={},we={},Ae={},Ue={},Pe={},Ve={},Re={},Xe=new Uint8Array,Ye=new Uint8Array,Ze=new Uint8Array([0,0,0,0,0,0,0,0]),ts=new Uint8Array,es=new Uint8Array([0,0,0,0,0,0,176,64]),ss=new Uint8Array,rs=new Uint8Array([0,0,0,0,0,0,0,0]),ns=new Uint8Array,as=new Uint8Array,is=new Uint8Array,os=new Uint8Array([4]),cs=new Uint8Array,us=new Uint8Array,ms=new Uint8Array([16,16,0,1]),ys=new Uint8Array([110,101,116,46,110,105,99,111,112,116,101,114,101,46,102,105,108,116,101,114,115,0]),bs=new Uint8Array([49,16,0,1]),ls=new Uint8Array([110,105,99,111,112,116,101,114,101,0]),ps=new Uint8Array,gs=new Uint8Array([1]),fs=new Uint8Array([76,16,0,1]),Os=new Uint8Array([109,101,114,99,97,116,111,114,0]),Ss=new Uint8Array,zs=new Uint8Array,js=new Uint8Array,hs=new Uint8Array([0]),ds=new Uint8Array([1]),ke=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ws=new Uint8Array,As=new Uint8Array,Us=new Uint8Array,Ps=new Uint8Array,Vs=new Uint8Array([4]),jt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),qe=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Rs=new Uint8Array,ks=new Uint8Array,qs=new Uint8Array,Is=new Uint8Array,vs=new Uint8Array([4]),ht=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Es=new Uint8Array([0,0,0,0,0,0,0,0]),xs=new Uint8Array([27,0]),Ks=new Uint8Array([27,0]),Cs=new Uint8Array,Ds=new Uint8Array,Ms=new Uint8Array,Fs=new Uint8Array;Object.assign(At,{slots:{0:X,1:Y,2:Z,3:tt}});Object.assign(X,{structure:s,memory:{array:Xe},const:!0,slots:{0:Ut}});Object.assign(Ut,{structure:O});Object.assign(Y,{structure:p,memory:{array:Ye},const:!0,slots:{0:Pt}});Object.assign(Pt,{structure:w,memory:{array:Ze},const:!0});Object.assign(Z,{structure:p,memory:{array:ts},const:!0,slots:{0:Vt}});Object.assign(Vt,{structure:w,memory:{array:es},const:!0});Object.assign(tt,{structure:p,memory:{array:ss},const:!0,slots:{0:Rt}});Object.assign(Rt,{structure:w,memory:{array:rs},const:!0});Object.assign(kt,{slots:{0:bt,1:lt}});Object.assign(bt,{structure:A,memory:{array:ns},const:!0,slots:{0:X,1:Y,2:Z,3:tt}});Object.assign(lt,{structure:A,memory:{array:as},const:!0,slots:{0:X,1:Y,2:Z,3:tt}});Object.assign(qt,{slots:{0:et}});Object.assign(et,{structure:y,memory:{array:is},const:!0,slots:{0:It}});Object.assign(It,{structure:f,memory:{array:os},const:!0});Object.assign(vt,{slots:{0:pt}});Object.assign(pt,{structure:U,memory:{array:cs},const:!0,slots:{0:et}});Object.assign(Et,{slots:{0:gt}});Object.assign(gt,{structure:U,memory:{array:us},const:!0,slots:{0:et}});Object.assign(xt,{slots:{0:Kt,1:Dt,2:Ft,3:_t,4:Lt,5:Bt,6:Gt}});Object.assign(Kt,{structure:F,memory:{array:ms},const:!0,slots:{0:Ct}});Object.assign(Ct,{structure:M,memory:{array:ys},reloc:16781328});Object.assign(Dt,{structure:_,memory:{array:bs},const:!0,slots:{0:Mt}});Object.assign(Mt,{structure:T,memory:{array:ls},reloc:16781361});Object.assign(Ft,{structure:y,memory:{array:ps},const:!0,slots:{0:Tt}});Object.assign(Tt,{structure:f,memory:{array:gs},const:!0});Object.assign(_t,{structure:L,memory:{array:fs},const:!0,slots:{0:$t}});Object.assign($t,{structure:$,memory:{array:Os},reloc:16781388});Object.assign(Lt,{structure:B,memory:{array:Ss},const:!0,slots:{0:bt,1:lt}});Object.assign(Bt,{structure:G,memory:{array:zs},const:!0,slots:{0:pt}});Object.assign(Gt,{structure:H,memory:{array:js},const:!0,slots:{0:gt}});Object.assign(Ht,{slots:{0:Jt,1:Nt}});Object.assign(Jt,{structure:l,memory:{array:hs},const:!0});Object.assign(Nt,{structure:l,memory:{array:ds},const:!0});Object.assign(Qt,{memory:{array:ke},slots:{0:Wt}});Object.assign(Wt,{structure:q,memory:{array:ke,offset:0,length:8},slots:{0:ft}});Object.assign(ft,{structure:J,memory:{array:ws},reloc:0});Object.assign(Xt,{slots:{0:Yt,1:Zt,2:te}});Object.assign(Yt,{structure:s,memory:{array:As},const:!0,slots:{0:Ot}});Object.assign(Ot,{structure:k});Object.assign(Zt,{structure:s,memory:{array:Us},const:!0,slots:{0:St}});Object.assign(St,{structure:it});Object.assign(te,{structure:y,memory:{array:Ps},const:!0,slots:{0:ee}});Object.assign(ee,{structure:f,memory:{array:Vs},const:!0});Object.assign(se,{memory:{array:jt},slots:{0:re}});Object.assign(re,{structure:N,memory:{array:jt},slots:{0:ne}});Object.assign(ne,{structure:q,memory:{array:jt,offset:0,length:8},slots:{0:ft}});Object.assign(ae,{memory:{array:qe},slots:{0:ie}});Object.assign(ie,{structure:v,memory:{array:qe,offset:0,length:8},slots:{0:zt}});Object.assign(zt,{structure:Q,memory:{array:Rs},reloc:0});Object.assign(oe,{slots:{0:ce,1:ue,2:me}});Object.assign(ce,{structure:s,memory:{array:ks},const:!0,slots:{0:Ot}});Object.assign(ue,{structure:s,memory:{array:qs},const:!0,slots:{0:St}});Object.assign(me,{structure:y,memory:{array:Is},const:!0,slots:{0:ye}});Object.assign(ye,{structure:f,memory:{array:vs},const:!0});Object.assign(be,{memory:{array:ht},slots:{0:le}});Object.assign(le,{structure:W,memory:{array:ht},slots:{0:pe}});Object.assign(pe,{structure:v,memory:{array:ht,offset:0,length:8},slots:{0:zt}});Object.assign(ge,{memory:{array:Es}});Object.assign(fe,{slots:{0:Oe}});Object.assign(Oe,{structure:h,memory:{array:xs},const:!0});Object.assign(Se,{slots:{0:ze}});Object.assign(ze,{structure:d,memory:{array:Ks},const:!0});Object.assign(je,{slots:{0:he,1:we,2:Ue,3:Ve}});Object.assign(he,{structure:s,memory:{array:Cs},const:!0,slots:{0:de}});Object.assign(de,{structure:at});Object.assign(we,{structure:s,memory:{array:Ds},const:!0,slots:{0:Ae}});Object.assign(Ae,{structure:I});Object.assign(Ue,{structure:s,memory:{array:Ms},const:!0,slots:{0:Pe}});Object.assign(Pe,{structure:E});Object.assign(Ve,{structure:s,memory:{array:Fs},const:!0,slots:{0:Re}});Object.assign(Re,{structure:x});const Ts={argStruct:ct,thunkId:2,name:"createOutput"},_s={argStruct:mt,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(g,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(M,{...e,type:1,name:"[21:0]u8",length:21,byteSize:22,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(F,{...e,type:13,name:"*const [21:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(T,{...e,type:1,name:"[9:0]u8",length:9,byteSize:10,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(_,{...e,type:13,name:"*const [9:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[]}});Object.assign(y,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:y}],methods:[]}});Object.assign(f,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign($,{...e,type:1,name:"[8:0]u8",length:8,byteSize:9,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(L,{...e,type:13,name:"*const [8:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[]}});Object.assign(p,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:p}],methods:[]}});Object.assign(O,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:O}],methods:[]}});Object.assign(w,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:w}],methods:[]}});Object.assign(A,{...e,type:2,name:"Struct2958897736",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:p},{...t,type:7,slot:2,name:"maxValue",structure:p},{...t,type:7,slot:3,name:"defaultValue",structure:p}],methods:[],template:At}});Object.assign(B,{...e,type:2,name:"Struct2247113750",align:1,instance:{members:[{...t,type:7,slot:0,name:"center",structure:A},{...t,type:7,slot:1,name:"width",structure:A}],methods:[],template:kt}});Object.assign(U,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:y}],methods:[],template:qt}});Object.assign(G,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:7,slot:0,name:"src",structure:U}],methods:[],template:vt}});Object.assign(H,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:U}],methods:[],template:Et}});Object.assign(at,{...e,type:2,name:"mercator.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:F},{...t,type:7,slot:1,name:"vendor",structure:_},{...t,type:7,slot:2,name:"version",structure:y},{...t,type:7,slot:3,name:"description",structure:L},{...t,type:7,slot:4,name:"parameters",structure:B},{...t,type:7,slot:5,name:"inputImages",structure:G},{...t,type:7,slot:6,name:"outputImages",structure:H}],methods:[],template:xt}});Object.assign(k,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(J,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(q,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:J}],methods:[]}});Object.assign(o,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:o}],methods:[]}});Object.assign(l,{...e,type:11,name:"mercator.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:l}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:l},{...t,type:7,slot:1,name:"display-p3",structure:l}],methods:[],template:Ht}});Object.assign(R,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(it,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:O}],methods:[]}});Object.assign(N,{...e,type:2,name:"mercator.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:q},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:o},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:o},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:l},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:Qt},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:y}],methods:[],template:Xt}});Object.assign(I,{...e,type:2,name:"mercator.KernelInput(u8,mercator.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:N}],methods:[],template:se}});Object.assign(Q,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(v,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:Q}],methods:[]}});Object.assign(W,{...e,type:2,name:"mercator.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:v},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:o},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:o},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:l},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:ae},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:y}],methods:[],template:oe}});Object.assign(E,{...e,type:2,name:"mercator.KernelOutput(u8,mercator.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:W}],methods:[],template:be}});Object.assign(x,{...e,type:2,name:"mercator.KernelParameters(mercator.kernel)",byteSize:8,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"center",structure:O},{...t,type:4,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"width",structure:O}],methods:[],template:ge}});Object.assign(h,{...e,type:10,name:"ErrorSet43415327",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:h}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:h}],methods:[],template:fe}});Object.assign(ot,{...e,type:9,name:"ErrorSet43415327!mercator.KernelOutput(u8,mercator.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:E},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:h}],methods:[]}});Object.assign(ct,{...e,type:5,name:"createOutput",byteSize:68,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:o},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:o},{...t,type:5,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:I},{...t,type:5,isRequired:!0,bitOffset:256,bitSize:64,byteSize:8,slot:1,name:"3",structure:x},{...t,type:5,isRequired:!0,bitOffset:320,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ot}],methods:[]}});Object.assign(d,{...e,type:10,name:"ErrorSet951815616",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:d}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:d}],methods:[],template:Se}});Object.assign(ut,{...e,type:9,name:"ErrorSet951815616!mercator.KernelOutput(u8,mercator.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:E},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:d}],methods:[]}});Object.assign(mt,{...e,type:5,name:"createPartialOutput",byteSize:76,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:o},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:o},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:o},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:o},{...t,type:5,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:I},{...t,type:5,isRequired:!0,bitOffset:320,bitSize:64,byteSize:8,slot:1,name:"5",structure:x},{...t,type:5,isRequired:!0,bitOffset:384,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ut}],methods:[]}});Object.assign(yt,{...e,type:2,name:"mercator",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:s},{...t,type:7,slot:1,name:"Input",structure:s},{...t,type:7,slot:2,name:"Output",structure:s},{...t,type:7,slot:3,name:"Parameters",structure:s}],methods:[Ts,_s],template:je}});const $s=[s,g,M,F,T,_,y,f,$,L,p,O,w,A,B,U,G,H,at,k,J,q,o,l,R,it,N,I,Q,v,W,E,x,h,ot,ct,d,ut,mt,yt],Ls=yt,Bs={runtimeSafety:!1,littleEndian:!0},st=Le();st.getSpecialExports();st.recreateStructures($s,Bs);const Gs=(async()=>{const a=new URL("mercator-2dcd35ad.wasm",import.meta.url).href;return fetch(a)})();st.loadModule(Gs);st.linkVariables(!0);const{constructor:Hs}=Ls,{createPartialOutput:Js,Input:Ns,kernel:nt}=Hs;function Qs(a,c,i,n,r={},S={}){const z=[];for(const[m]of nt.inputImages)z.push(m);const P=[];for(const[m]of nt.outputImages)P.push(m);if(Array.isArray(r)){const m=r;r={};for(const[b,j]of z.entries())r[j]=m[b]}const u=new Ns(void 0),K=[];let V;for(const m of z){let b=r[m];if(b||(z.length===1&&["data","width","height"].every(j=>!!r[j])?b=r:K.push(m)),u[m]=b,V){if(b.colorSpace!==V)throw new Error(`Input images must all use the same color space: ${V}`)}else V=b.colorSpace}if(K.length>0)throw new Error(`Missing input image${K.length>1?"s":""}: ${K.join(", ")}`);const rt=Js(a,c,i,n,u,S),dt=m=>{const b={};for(const j of P){const{data:{typedArray:C},width:wt,height:Ie}=m[j];let D;if(typeof ImageData=="function"){const ve=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);D=new ImageData(ve,wt,n,{colorSpace:V})}else D={data:C,width:wt,height:Ie};if(P.length===1)return D;b[j]=D}return b};return rt[Symbol.toStringTag]==="Promise"?rt.then(dt):dt(rt)}function Ws(){const a={};for(let[c,i]of nt){if(c==="parameters"){const n={};for(const[r,S]of i){const z=n[r]={};for(let[P,u]of S)typeof u=="object"?u=u.string??u.valueOf():typeof u=="function"&&(u=Xs(u.name)),z[P]=u}i=n}else typeof i=="object"&&(i=i.string??i.valueOf());a[c]=i}return a}function Xs(a){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[a]}onmessage=a=>{const[c,i,...n]=a.data;Ys(c,n).then(([r,S])=>{postMessage([c,i,r],{transfer:S})}).catch(r=>{postMessage(["error",i,r])})};async function Ys(a,c){switch(a){case"getKernelInfo":return[Ws(...c)];case"createPartialImageData":const n=await Qs(...c),r=[];if("data"in n&&"width"in n&&"height"in n)r.push(n.data.buffer);else for(const S of Object.entries(n))r.push(n.data.buffer);return[n,r];default:throw new Error(`Unknown function: ${a}`)}}
