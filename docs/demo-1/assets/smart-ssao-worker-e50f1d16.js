import{u as Fe,a as Me,b as Te,c as Be,d as $e,e as Ge,f as Le,g as He,h as Je,i as Ne,j as Qe,k as We,l as Xe,m as Ye,o as Ze,n as et,p as tt,q as st}from"./index-422d9c98.js";Fe();Me();Te();Be();$e();Ge();Le();He();Je();Ne();Qe();We();Xe();Ye();Ze();et();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},S={},W={},X={},I={},Y={},Z={},_={},p={},f={},ee={},te={},x={},u={},r={},s={},se={},v={},re={},E={},ae={},D={},ne={},ie={},K={},ue={},F={},oe={},M={},me={},T={},le={},B={},ye={},$={},ce={},G={},be={},L={},q={},z={},pe={},H={},fe={},J={},qe={},O={},de={},Se={},c={},he={},R={},ge={},N={},A={},ze={},Oe={},Q={},U={},j={},Ae={},Ue={},je={},Pe={},Ve={},Ce={},ke={};Object.assign(S,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:5});Object.assign(W,{...t,type:1,name:"[26:0]u8",length:26,byteSize:27,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:4});Object.assign(X,{...t,type:11,name:"*const [26:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:3});Object.assign(I,{...t,type:11,name:"*const *const [26:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:2});Object.assign(Y,{...t,type:1,name:"[31:0]u8",length:31,byteSize:32,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:8});Object.assign(Z,{...t,type:11,name:"*const [31:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[],template:null},slot:7});Object.assign(_,{...t,type:11,name:"*const *const [31:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:6});Object.assign(p,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[],template:null},slot:10});Object.assign(f,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:p}],methods:[],template:null},slot:9});Object.assign(ee,{...t,type:1,name:"[58:0]u8",length:58,byteSize:59,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:13});Object.assign(te,{...t,type:11,name:"*const [58:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:12});Object.assign(x,{...t,type:11,name:"*const *const [58:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:11});Object.assign(u,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:u}],methods:[],template:null},slot:32});Object.assign(r,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[],template:null},slot:58});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:r}],methods:[],template:null},slot:57});const rt=new Uint8Array([]),at=new Uint8Array([64,250,15,0]),nt=new Uint8Array([0,0,0,0,0,0,0,0]),it=new Uint8Array([88,250,15,0]),ut=new Uint8Array([0,0,0,0,0,0,89,64]),ot=new Uint8Array([32,249,15,0]),mt=new Uint8Array([0,0,0,0,0,0,36,64]);Object.assign(se,{...t,type:2,name:"Struct0014",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:rt},slots:{0:{structure:s,memory:{array:at},slots:{0:{structure:r,memory:{array:nt}}}},1:{structure:s,memory:{array:it},slots:{0:{structure:r,memory:{array:ut}}}},2:{structure:s,memory:{array:ot},slots:{0:{structure:r,memory:{array:mt}}}}}}},slot:39});Object.assign(v,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:38});const lt=new Uint8Array([]),yt=new Uint8Array([64,250,15,0]),ct=new Uint8Array([0,0,0,0,0,0,0,0]),bt=new Uint8Array([88,250,15,0]),pt=new Uint8Array([0,0,0,0,0,0,36,64]),ft=new Uint8Array([32,249,15,0]),dt=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(re,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:lt},slots:{0:{structure:s,memory:{array:yt},slots:{0:{structure:r,memory:{array:ct}}}},1:{structure:s,memory:{array:bt},slots:{0:{structure:r,memory:{array:pt}}}},2:{structure:s,memory:{array:ft},slots:{0:{structure:r,memory:{array:dt}}}}}}},slot:41});Object.assign(E,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:40});const St=new Uint8Array([]),ht=new Uint8Array([64,250,15,0]),gt=new Uint8Array([123,20,174,71,225,122,132,63]),zt=new Uint8Array([88,250,15,0]),Ot=new Uint8Array([0,0,0,0,0,0,8,64]),wt=new Uint8Array([32,249,15,0]),Rt=new Uint8Array([0,0,0,0,0,0,0,64]);Object.assign(ae,{...t,type:2,name:"Struct0016",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:St},slots:{0:{structure:s,memory:{array:ht},slots:{0:{structure:r,memory:{array:gt}}}},1:{structure:s,memory:{array:zt},slots:{0:{structure:r,memory:{array:Ot}}}},2:{structure:s,memory:{array:wt},slots:{0:{structure:r,memory:{array:Rt}}}}}}},slot:43});Object.assign(D,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:42});Object.assign(ne,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:u}],methods:[],template:null},slot:33});const qt=new Uint8Array([]),At=new Uint8Array([16,250,15,0]),Ut=new Uint8Array([0,0,0,0,0,0,240,191]),jt=new Uint8Array([72,250,15,0]),Pt=new Uint8Array([0,0,0,0,0,0,240,191]);Object.assign(ie,{...t,type:2,name:"Struct0025",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:qt},slots:{0:{structure:s,memory:{array:At},slots:{0:{structure:r,memory:{array:Ut}}}},1:{structure:s,memory:{array:jt},slots:{0:{structure:r,memory:{array:Pt}}}}}}},slot:60});Object.assign(K,{...t,type:11,name:"Struct0022",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:59});const Vt=new Uint8Array([]),Ct=new Uint8Array([16,250,15,0]),kt=new Uint8Array([0,0,0,0,0,0,240,63]),It=new Uint8Array([72,250,15,0]),_t=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(ue,{...t,type:2,name:"Struct0026",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Vt},slots:{0:{structure:s,memory:{array:Ct},slots:{0:{structure:r,memory:{array:kt}}}},1:{structure:s,memory:{array:It},slots:{0:{structure:r,memory:{array:_t}}}}}}},slot:62});Object.assign(F,{...t,type:11,name:"Struct0023",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:61});const xt=new Uint8Array([]),vt=new Uint8Array([16,250,15,0]),Et=new Uint8Array([0,0,0,0,0,0,0,0]),Dt=new Uint8Array([72,250,15,0]),Kt=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(oe,{...t,type:2,name:"Struct0027",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:xt},slots:{0:{structure:s,memory:{array:vt},slots:{0:{structure:r,memory:{array:Et}}}},1:{structure:s,memory:{array:Dt},slots:{0:{structure:r,memory:{array:Kt}}}}}}},slot:64});Object.assign(M,{...t,type:11,name:"Struct0024",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:63});const Ft=new Uint8Array([]),Mt=new Uint8Array([170,170,170,170]),l=new Uint8Array([]),Tt=new Uint8Array([170,170,170,170]),Bt=new Uint8Array([170,170,170,170]);Object.assign(me,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:ne},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:K},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:F},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:M}],methods:[],template:{memory:{array:Ft},slots:{0:{structure:K,memory:{array:Mt},slots:{0:{structure:ie,memory:{array:l},address:-1431655766}}},1:{structure:F,memory:{array:Tt},slots:{0:{structure:ue,memory:{array:l},address:-1431655766}}},2:{structure:M,memory:{array:Bt},slots:{0:{structure:oe,memory:{array:l},address:-1431655766}}}}}},slot:45});Object.assign(T,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:44});const $t=new Uint8Array([]),Gt=new Uint8Array([64,250,15,0]),Lt=new Uint8Array([154,153,153,153,153,153,185,191]),Ht=new Uint8Array([88,250,15,0]),Jt=new Uint8Array([154,153,153,153,153,153,185,63]),Nt=new Uint8Array([32,249,15,0]),Qt=new Uint8Array([123,20,174,71,225,122,148,63]);Object.assign(le,{...t,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:$t},slots:{0:{structure:s,memory:{array:Gt},slots:{0:{structure:r,memory:{array:Lt}}}},1:{structure:s,memory:{array:Ht},slots:{0:{structure:r,memory:{array:Jt}}}},2:{structure:s,memory:{array:Nt},slots:{0:{structure:r,memory:{array:Qt}}}}}}},slot:47});Object.assign(B,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:46});const Wt=new Uint8Array([]),Xt=new Uint8Array([64,250,15,0]),Yt=new Uint8Array([0,0,0,0,0,0,0,0]),Zt=new Uint8Array([88,250,15,0]),es=new Uint8Array([0,0,0,0,0,0,0,64]),ts=new Uint8Array([32,249,15,0]),ss=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(ye,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:Wt},slots:{0:{structure:s,memory:{array:Xt},slots:{0:{structure:r,memory:{array:Yt}}}},1:{structure:s,memory:{array:Zt},slots:{0:{structure:r,memory:{array:es}}}},2:{structure:s,memory:{array:ts},slots:{0:{structure:r,memory:{array:ss}}}}}}},slot:49});Object.assign($,{...t,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:48});const rs=new Uint8Array([]),as=new Uint8Array([64,250,15,0]),ns=new Uint8Array([0,0,0,0,0,0,0,0]),is=new Uint8Array([88,250,15,0]),us=new Uint8Array([0,0,0,0,0,0,20,64]),os=new Uint8Array([32,249,15,0]),ms=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(ce,{...t,type:2,name:"Struct0020",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:rs},slots:{0:{structure:s,memory:{array:as},slots:{0:{structure:r,memory:{array:ns}}}},1:{structure:s,memory:{array:is},slots:{0:{structure:r,memory:{array:us}}}},2:{structure:s,memory:{array:os},slots:{0:{structure:r,memory:{array:ms}}}}}}},slot:51});Object.assign(G,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:50});const ls=new Uint8Array([]),ys=new Uint8Array([170,170,170,170]),cs=new Uint8Array([170,170,170,170]),bs=new Uint8Array([170,170,170,170]),ps=new Uint8Array([170,170,170,170]),fs=new Uint8Array([170,170,170,170]),ds=new Uint8Array([170,170,170,170]),Ss=new Uint8Array([170,170,170,170]);Object.assign(be,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"A_bias",structure:v},{...e,type:8,isRequired:!1,slot:1,name:"B_radius",structure:E},{...e,type:8,isRequired:!1,slot:2,name:"C_bleed",structure:D},{...e,type:8,isRequired:!1,slot:3,name:"D_lightxy",structure:T},{...e,type:8,isRequired:!1,slot:4,name:"E_noise",structure:B},{...e,type:8,isRequired:!1,slot:5,name:"F_brightness",structure:$},{...e,type:8,isRequired:!1,slot:6,name:"G_contrast",structure:G}],methods:[],template:{memory:{array:ls},slots:{0:{structure:v,memory:{array:ys},slots:{0:{structure:se,memory:{array:l},address:-1431655766}}},1:{structure:E,memory:{array:cs},slots:{0:{structure:re,memory:{array:l},address:-1431655766}}},2:{structure:D,memory:{array:bs},slots:{0:{structure:ae,memory:{array:l},address:-1431655766}}},3:{structure:T,memory:{array:ps},slots:{0:{structure:me,memory:{array:l},address:-1431655766}}},4:{structure:B,memory:{array:fs},slots:{0:{structure:le,memory:{array:l},address:-1431655766}}},5:{structure:$,memory:{array:ds},slots:{0:{structure:ye,memory:{array:l},address:-1431655766}}},6:{structure:G,memory:{array:Ss},slots:{0:{structure:ce,memory:{array:l},address:-1431655766}}}}}},slot:15});Object.assign(L,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:14});const hs=new Uint8Array([]),gs=new Uint8Array([48,250,15,0]),zs=new Uint8Array([4,0,0,0]);Object.assign(q,{...t,type:2,name:"Struct0021",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:hs},slots:{0:{structure:f,memory:{array:gs},slots:{0:{structure:p,memory:{array:zs}}}}}}},slot:53});Object.assign(z,{...t,type:11,name:"Struct0013",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:q}],methods:[],template:null},slot:52});const Os=new Uint8Array([]),ws=new Uint8Array([170,170,170,170]);Object.assign(pe,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"depthmap",structure:z}],methods:[],template:{memory:{array:Os},slots:{0:{structure:z,memory:{array:ws},slots:{0:{structure:q,memory:{array:l},address:-1431655766}}}}}},slot:17});Object.assign(H,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:16});const Rs=new Uint8Array([]),qs=new Uint8Array([170,170,170,170]);Object.assign(fe,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:z}],methods:[],template:{memory:{array:Rs},slots:{0:{structure:z,memory:{array:qs},slots:{0:{structure:q,memory:{array:l},address:-1431655766}}}}}},slot:19});Object.assign(J,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:18});const As=new Uint8Array([]),Us=new Uint8Array([]),js=new Uint8Array([28,251,15,0]),Ps=new Uint8Array([26,37,16,0]),Vs=new Uint8Array([99,111,109,46,115,109,97,114,116,45,112,97,103,101,45,110,101,116,46,115,104,97,100,101,114,115,0]),Cs=new Uint8Array([92,251,15,0]),ks=new Uint8Array([250,36,16,0]),Is=new Uint8Array([115,109,97,114,116,45,112,97,103,101,46,110,101,116,32,45,32,74,97,110,32,70,114,105,115,99,104,109,117,116,104,0]),_s=new Uint8Array([156,251,15,0]),xs=new Uint8Array([2,0,0,0]),vs=new Uint8Array([244,251,15,0]),Es=new Uint8Array([191,36,16,0]),Ds=new Uint8Array([67,111,109,112,117,116,101,115,32,115,99,114,101,101,110,32,115,112,97,99,101,32,97,109,98,105,101,110,32,111,99,99,108,117,115,105,111,110,32,102,114,111,109,32,97,32,100,101,112,116,104,32,98,117,102,102,101,114,0]),Ks=new Uint8Array([170,170,170,170]),Fs=new Uint8Array([170,170,170,170]),Ms=new Uint8Array([170,170,170,170]);Object.assign(qe,{...t,type:2,name:"smart-ssao.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:As}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:I},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:_},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:f},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:x},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:L},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:H},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:J}],methods:[],template:{memory:{array:Us},slots:{0:{structure:I,memory:{array:js},slots:{0:{structure:X,memory:{array:Ps},slots:{0:{structure:W,memory:{array:Vs},address:1058074}}}}},1:{structure:_,memory:{array:Cs},slots:{0:{structure:Z,memory:{array:ks},slots:{0:{structure:Y,memory:{array:Is},address:1058042}}}}},2:{structure:f,memory:{array:_s},slots:{0:{structure:p,memory:{array:xs}}}},3:{structure:x,memory:{array:vs},slots:{0:{structure:te,memory:{array:Es},slots:{0:{structure:ee,memory:{array:Ds},address:1057983}}}}},4:{structure:L,memory:{array:Ks},slots:{0:{structure:be,memory:{array:l},address:-1431655766}}},5:{structure:H,memory:{array:Fs},slots:{0:{structure:pe,memory:{array:l},address:-1431655766}}},6:{structure:J,memory:{array:Ms},slots:{0:{structure:fe,memory:{array:l},address:-1431655766}}}}}},slot:1});Object.assign(O,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:24});Object.assign(de,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:23});Object.assign(Se,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:de}],methods:[],template:null},slot:22});Object.assign(c,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:25});const Ts=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(he,{...t,type:9,name:"smart-ssao.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:p},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:p}],methods:[],template:{memory:{array:Ts}}},slot:26});Object.assign(R,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:R}],methods:[],template:null},slot:27});Object.assign(ge,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:u}],methods:[],template:null},slot:54});const Bs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),$s=new Uint8Array([]),Gs=new Uint8Array([216,249,15,0]),Ls=new Uint8Array([4,0,0,0]);Object.assign(N,{...t,type:2,name:"smart-ssao.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Se},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:he},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:{memory:{array:Bs}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:ge},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:$s},slots:{0:{structure:f,memory:{array:Gs},slots:{0:{structure:p,memory:{array:Ls}}}}}}},slot:21});const Hs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Js=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ns=new Uint8Array([0,0,0,0,0,0,0,0]),Ie=new Uint8Array([]);Object.assign(A,{...t,type:2,name:"smart-ssao.KernelInput(u8,smart-ssao.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"depthmap",structure:N}],methods:[],template:{memory:{array:Hs},slots:{0:{structure:N,memory:{array:Js},slots:{0:{structure:Se,memory:{array:Ns},slots:{0:{structure:de,memory:{array:Ie}}}}}}}}},slot:20});Object.assign(ze,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:23});Object.assign(Oe,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:ze}],methods:[],template:null},slot:30});const Qs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ws=new Uint8Array([]),Xs=new Uint8Array([216,249,15,0]),Ys=new Uint8Array([4,0,0,0]);Object.assign(Q,{...t,type:2,name:"smart-ssao.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Oe},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:he},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:{memory:{array:Qs}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:ge},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:Ws},slots:{0:{structure:f,memory:{array:Xs},slots:{0:{structure:p,memory:{array:Ys}}}}}}},slot:29});const Zs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),er=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),tr=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(U,{...t,type:2,name:"smart-ssao.KernelOutput(u8,smart-ssao.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:Q}],methods:[],template:{memory:{array:Zs},slots:{0:{structure:Q,memory:{array:er},slots:{0:{structure:Oe,memory:{array:tr},slots:{0:{structure:ze,memory:{array:Ie}}}}}}}}},slot:28});const sr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,32,65,0,0,128,63,0,0,0,64,10,215,163,60,0,0,128,63,0,0,128,63]);Object.assign(j,{...t,type:2,name:"smart-ssao.KernelParameters(smart-ssao.kernel)",length:1,byteSize:32,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:64,bitSize:32,byteSize:4,slot:0,name:"A_bias",structure:u},{...e,type:4,isRequired:!1,bitOffset:96,bitSize:32,byteSize:4,slot:1,name:"B_radius",structure:u},{...e,type:4,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:2,name:"C_bleed",structure:u},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,slot:3,name:"D_lightxy",structure:ne},{...e,type:4,isRequired:!1,bitOffset:160,bitSize:32,byteSize:4,slot:4,name:"E_noise",structure:u},{...e,type:4,isRequired:!1,bitOffset:192,bitSize:32,byteSize:4,slot:5,name:"F_brightness",structure:u},{...e,type:4,isRequired:!1,bitOffset:224,bitSize:32,byteSize:4,slot:6,name:"G_contrast",structure:u}],methods:[],template:{memory:{array:sr}}},slot:31});Object.assign(Ae,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(smart-ssao.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:55});Object.assign(Ue,{...t,type:7,name:"ErrorSet0000!smart-ssao.KernelOutput(u8,smart-ssao.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:U},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Ae}],methods:[],template:null},slot:36});Object.assign(je,{...t,type:3,name:"createOutput",length:1,byteSize:96,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:c},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:c},{...e,type:6,bitOffset:320,bitSize:192,byteSize:24,slot:2,name:"2",structure:A},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:3,name:"3",structure:j},{...e,type:6,bitOffset:512,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Ue}],methods:[],template:null},slot:34});Object.assign(Pe,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(smart-ssao.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:56});Object.assign(Ve,{...t,type:7,name:"ErrorSet0001!smart-ssao.KernelOutput(u8,smart-ssao.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:U},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Pe}],methods:[],template:null},slot:37});Object.assign(Ce,{...t,type:3,name:"createPartialOutput",length:1,byteSize:104,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:c},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:c},{...e,type:3,bitOffset:320,bitSize:32,byteSize:4,slot:2,name:"2",structure:c},{...e,type:3,bitOffset:352,bitSize:32,byteSize:4,slot:3,name:"3",structure:c},{...e,type:6,bitOffset:384,bitSize:192,byteSize:24,slot:4,name:"4",structure:A},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:5,name:"5",structure:j},{...e,type:6,bitOffset:576,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Ve}],methods:[],template:null},slot:35});const rr={argStruct:je,thunk:1,name:"createOutput"},ar={argStruct:Ce,thunk:6,name:"createPartialOutput"};Object.assign(ke,{...t,type:2,name:"smart-ssao",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Ie}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:qe},{...e,type:7,isRequired:!1,name:"Input",structure:A},{...e,type:7,isRequired:!1,name:"Output",structure:U},{...e,type:7,isRequired:!1,name:"Parameters",structure:j}],methods:[rr,ar],template:null},slot:0});const nr=[S,W,X,I,Y,Z,_,p,f,ee,te,x,u,r,s,se,v,re,E,ae,D,ne,ie,K,ue,F,oe,M,me,T,le,B,ye,$,ce,G,be,L,q,z,pe,H,fe,J,qe,O,de,Se,c,he,R,ge,N,A,ze,Oe,Q,U,j,Ae,Ue,je,Pe,Ve,Ce,ke],ir=tt(nr),ur=ke.constructor,or=(async()=>{const o=new URL("smart-ssao-404272a0.wasm",import.meta.url).href;return fetch(o)})();st(or,{...ir,writeBack:!0});const{createOutput:dr,createPartialOutput:mr,kernel:Re,Input:lr,Output:Sr,Parameters:hr}=ur;function yr(o,y,n,a,i={},h={}){if(Array.isArray(i)){const d=i;i={};for(const[b,g]of Object.keys(Re.inputImages).entries())i[g]=d[b]}const P=new lr(void 0),V=Object.keys(Re.inputImages),m=[];let w;for(const d of V){let b=i[d];if(b||(V.length===1&&["data","width","height"].every(g=>!!i[g])?b=i:m.push(d)),P[d]=b,w){if(b.colorSpace!==w)throw new Error(`Input images must all use the same color space: ${w}`)}else w=b.colorSpace}if(m.length>0)throw new Error(`Missing input image${m.length>1?"s":""}: ${m.join(", ")}`);const we=mr(o,y,n,a,P,h),_e=d=>{const b=Object.keys(d),g={};for(const xe of b){const{data:{typedArray:C},width:ve,height:De}=d[xe];let k;if(typeof ImageData=="function"){const Ke=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);k=new ImageData(Ke,ve,a,{colorSpace:w})}else k={data:C,width:ve,height:De};if(b.length===1)return k;g[xe]=k}return g};return we[Symbol.toStringTag]==="Promise"?we.then(_e):_e(we)}function cr(){const o={};for(let[y,n]of Object.entries(Re)){if(y==="parameters"){const a={};for(const[i,h]of Object.entries(n)){const P=a[i]={};for(let[V,m]of Object.entries(h))typeof m=="object"?"string"in m?m=m.string:m=Ee(m):typeof m=="function"&&(m=br(m.name)),P[V]=m}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());o[y]=n}return o}function Ee(o){const y=[];for(let[n,a]of Object.entries(o))typeof a=="object"&&(a=Ee(a)),y[n]=a;return y}function br(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[y,n,...a]=o.data;pr(y,a).then(([i,h])=>{postMessage([y,n,i],{transfer:h})}).catch(i=>{postMessage(["error",n,i])})};async function pr(o,y){switch(o){case"getKernelInfo":return[cr(...y)];case"createPartialImageData":const a=await yr(...y),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const h of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${o}`)}}
