import{u as ls,a as gs,b as ps,c as Os,d as fs,e as Ss,f as zs,g as js,h as hs,i as ds,j as ws,k as As,l as Us,m as xs,n as Ps,p as Vs,o as Is,q as Rs,r as ks,s as qs}from"./index-58d89d46.js";ls();ws();As();gs();ps();Us();xs();Ps();Vs();Os();fs();Ss();zs();Is();qs();js();Rs();hs();ds();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},e={type:0,isRequired:!1},s={},p={},_={},D={},F={},M={},l={},f={},T={},$={},r={},L={},B={},S={},y={},G={},H={},J={},N={},Q={},W={},X={},Y={},Z={},d={},ee={},te={},me={},P={},se={},V={},m={},O={},U={},ye={},re={},I={},ae={},R={},ne={},k={},q={},x={},be={},le={},K={},ge={},pe={},Oe={},He={},fe={},Je={},Se={},Ne={},ze={},Qe={},je={},We={},he={},Xe={},Ye={},de={},Ze={},we={},et={},tt={},Ae={},st={},Ue={},rt={},at={},xe={},nt={},Pe={},it={},ot={},Ve={},ct={},Ie={},Re={},ke={},qe={},ut={},mt={},ve={},Ee={},yt={},ie={},bt={},lt={},Ce={},gt={},Ke={},pt={},Ot={},ft={},St={},zt={},jt={},ht={},dt={},wt={},At={},Ut={},xt={},Pt={},Vt={},It={},Rt={},kt={},_e={},qt={},vt={},De={},Et={},Fe={},Ct={},Kt={},_t={},Dt={},Ft={},Mt={},Tt={},Me={},$t={},Lt={},Bt={},Gt={},Ht={},Jt={},Nt={},Qt={},Wt={},Xt={},Te={},Yt={},Zt={},es={},ts={},ss={},rs={},as={},ns={},is={},os={},vs=new Uint8Array,Es=new Uint8Array,Cs=new Uint8Array([0,0,0,0,0,0,240,63]),Ks=new Uint8Array,_s=new Uint8Array([0,0,0,0,0,0,105,64]),Ds=new Uint8Array,Fs=new Uint8Array([0,0,0,0,0,0,73,64]),Ms=new Uint8Array([220,6,0,1]),Ts=new Uint8Array([72,101,120,97,103,111,110,32,83,105,122,101,0]),$s=new Uint8Array,Ls=new Uint8Array([0,0,0,0,0,0,105,192]),Bs=new Uint8Array,Gs=new Uint8Array([0,0,0,0,0,0,105,192]),Hs=new Uint8Array,Js=new Uint8Array([0,0,0,0,0,0,137,64]),Ns=new Uint8Array,Qs=new Uint8Array([0,0,0,0,0,64,127,64]),Ws=new Uint8Array,Xs=new Uint8Array([0,0,0,0,0,0,121,64]),Ys=new Uint8Array,Zs=new Uint8Array([0,0,0,0,0,64,111,64]),er=new Uint8Array,tr=new Uint8Array,sr=new Uint8Array,rr=new Uint8Array,ar=new Uint8Array([240,6,0,1]),nr=new Uint8Array([98,97,115,101,32,112,111,105,110,116,0]),ir=new Uint8Array,or=new Uint8Array,cr=new Uint8Array,ur=new Uint8Array([4]),mr=new Uint8Array,yr=new Uint8Array,br=new Uint8Array([242,4,0,1]),lr=new Uint8Array([72,101,120,32,99,101,108,108,115,32,239,191,189,32,110,111,116,32,106,117,115,116,32,112,105,120,101,108,115,0]),gr=new Uint8Array([27,5,0,1]),pr=new Uint8Array([80,101,116,114,105,32,76,101,115,107,105,110,101,110,0]),Or=new Uint8Array,fr=new Uint8Array([1]),Sr=new Uint8Array([59,5,0,1]),zr=new Uint8Array([72,101,120,97,103,111,110,97,108,32,84,105,108,105,110,103,0]),jr=new Uint8Array,hr=new Uint8Array,dr=new Uint8Array,wr=new Uint8Array([0]),Ar=new Uint8Array([1]),cs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ur=new Uint8Array,xr=new Uint8Array,Pr=new Uint8Array,Vr=new Uint8Array,Ir=new Uint8Array([4]),$e=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),us=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Rr=new Uint8Array,kr=new Uint8Array,qr=new Uint8Array,vr=new Uint8Array,Er=new Uint8Array([4]),Le=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Cr=new Uint8Array([0,0,200,67,0,0,122,67,0,0,72,66,0,0,0,0]),Kr=new Uint8Array([27,0]),_r=new Uint8Array,Dr=new Uint8Array,Fr=new Uint8Array,Mr=new Uint8Array;Object.assign(He,{slots:{0:fe,1:Se,2:ze,3:je,4:he}});Object.assign(fe,{structure:s,memory:{array:vs},slots:{0:Je}});Object.assign(Je,{structure:S});Object.assign(Se,{structure:r,memory:{array:Es},slots:{0:Ne}});Object.assign(Ne,{structure:y,memory:{array:Cs}});Object.assign(ze,{structure:r,memory:{array:Ks},slots:{0:Qe}});Object.assign(Qe,{structure:y,memory:{array:_s}});Object.assign(je,{structure:r,memory:{array:Ds},slots:{0:We}});Object.assign(We,{structure:y,memory:{array:Fs}});Object.assign(he,{structure:B,memory:{array:Ms},slots:{0:Xe}});Object.assign(Xe,{structure:L,memory:{array:Ts},reloc:16778972,const:!0});Object.assign(Ye,{slots:{0:de,1:we}});Object.assign(de,{structure:r,memory:{array:$s},slots:{0:Ze}});Object.assign(Ze,{structure:y,memory:{array:Ls}});Object.assign(we,{structure:r,memory:{array:Bs},slots:{0:et}});Object.assign(et,{structure:y,memory:{array:Gs}});Object.assign(tt,{slots:{0:Ae,1:Ue}});Object.assign(Ae,{structure:r,memory:{array:Hs},slots:{0:st}});Object.assign(st,{structure:y,memory:{array:Js}});Object.assign(Ue,{structure:r,memory:{array:Ns},slots:{0:rt}});Object.assign(rt,{structure:y,memory:{array:Qs}});Object.assign(at,{slots:{0:xe,1:Pe}});Object.assign(xe,{structure:r,memory:{array:Ws},slots:{0:nt}});Object.assign(nt,{structure:y,memory:{array:Xs}});Object.assign(Pe,{structure:r,memory:{array:Ys},slots:{0:it}});Object.assign(it,{structure:y,memory:{array:Zs}});Object.assign(ot,{slots:{0:Ve,1:Ie,2:Re,3:ke,4:qe}});Object.assign(Ve,{structure:s,memory:{array:er},slots:{0:ct}});Object.assign(ct,{structure:X});Object.assign(Ie,{structure:H,memory:{array:tr},slots:{0:de,1:we}});Object.assign(Re,{structure:J,memory:{array:sr},slots:{0:Ae,1:Ue}});Object.assign(ke,{structure:N,memory:{array:rr},slots:{0:xe,1:Pe}});Object.assign(qe,{structure:W,memory:{array:ar},slots:{0:ut}});Object.assign(ut,{structure:Q,memory:{array:nr},reloc:16778992,const:!0});Object.assign(mt,{slots:{0:ve,1:Ee}});Object.assign(ve,{structure:G,memory:{array:ir},slots:{0:fe,1:Se,2:ze,3:je,4:he}});Object.assign(Ee,{structure:Y,memory:{array:or},slots:{0:Ve,1:Ie,2:Re,3:ke,4:qe}});Object.assign(yt,{slots:{0:ie}});Object.assign(ie,{structure:l,memory:{array:cr},slots:{0:bt}});Object.assign(bt,{structure:f,memory:{array:ur}});Object.assign(lt,{slots:{0:Ce}});Object.assign(Ce,{structure:d,memory:{array:mr},slots:{0:ie}});Object.assign(gt,{slots:{0:Ke}});Object.assign(Ke,{structure:d,memory:{array:yr},slots:{0:ie}});Object.assign(pt,{slots:{0:Ot,1:St,2:jt,3:dt,4:At,5:Ut,6:xt}});Object.assign(Ot,{structure:D,memory:{array:br},slots:{0:ft}});Object.assign(ft,{structure:_,memory:{array:lr},reloc:16778482,const:!0});Object.assign(St,{structure:M,memory:{array:gr},slots:{0:zt}});Object.assign(zt,{structure:F,memory:{array:pr},reloc:16778523,const:!0});Object.assign(jt,{structure:l,memory:{array:Or},slots:{0:ht}});Object.assign(ht,{structure:f,memory:{array:fr}});Object.assign(dt,{structure:$,memory:{array:Sr},slots:{0:wt}});Object.assign(wt,{structure:T,memory:{array:zr},reloc:16778555,const:!0});Object.assign(At,{structure:Z,memory:{array:jr},slots:{0:ve,1:Ee}});Object.assign(Ut,{structure:ee,memory:{array:hr},slots:{0:Ce}});Object.assign(xt,{structure:te,memory:{array:dr},slots:{0:Ke}});Object.assign(Pt,{slots:{0:Vt,1:It}});Object.assign(Vt,{structure:O,memory:{array:wr}});Object.assign(It,{structure:O,memory:{array:Ar}});Object.assign(Rt,{memory:{array:cs},slots:{0:kt}});Object.assign(kt,{structure:V,memory:{array:cs,offset:0,length:8},slots:{0:_e}});Object.assign(_e,{structure:se,memory:{array:Ur},reloc:0,const:!0});Object.assign(qt,{slots:{0:vt,1:Et,2:Ct}});Object.assign(vt,{structure:s,memory:{array:xr},slots:{0:De}});Object.assign(De,{structure:P});Object.assign(Et,{structure:s,memory:{array:Pr},slots:{0:Fe}});Object.assign(Fe,{structure:ye});Object.assign(Ct,{structure:l,memory:{array:Vr},slots:{0:Kt}});Object.assign(Kt,{structure:f,memory:{array:Ir}});Object.assign(_t,{memory:{array:$e},slots:{0:Dt}});Object.assign(Dt,{structure:re,memory:{array:$e},slots:{0:Ft}});Object.assign(Ft,{structure:V,memory:{array:$e,offset:0,length:8},slots:{0:_e}});Object.assign(Mt,{memory:{array:us},slots:{0:Tt}});Object.assign(Tt,{structure:R,memory:{array:us,offset:0,length:8},slots:{0:Me}});Object.assign(Me,{structure:ae,memory:{array:Rr},reloc:0});Object.assign($t,{slots:{0:Lt,1:Bt,2:Gt}});Object.assign(Lt,{structure:s,memory:{array:kr},slots:{0:De}});Object.assign(Bt,{structure:s,memory:{array:qr},slots:{0:Fe}});Object.assign(Gt,{structure:l,memory:{array:vr},slots:{0:Ht}});Object.assign(Ht,{structure:f,memory:{array:Er}});Object.assign(Jt,{memory:{array:Le},slots:{0:Nt}});Object.assign(Nt,{structure:ne,memory:{array:Le},slots:{0:Qt}});Object.assign(Qt,{structure:R,memory:{array:Le,offset:0,length:8},slots:{0:Me}});Object.assign(Wt,{memory:{array:Cr}});Object.assign(Xt,{slots:{0:Te}});Object.assign(Te,{structure:x,memory:{array:Kr}});Object.assign(Yt,{slots:{0:Te}});Object.assign(Zt,{slots:{0:es,1:ss,2:as,3:is}});Object.assign(es,{structure:s,memory:{array:_r},slots:{0:ts}});Object.assign(ts,{structure:me});Object.assign(ss,{structure:s,memory:{array:Dr},slots:{0:rs}});Object.assign(rs,{structure:I});Object.assign(as,{structure:s,memory:{array:Fr},slots:{0:ns}});Object.assign(ns,{structure:k});Object.assign(is,{structure:s,memory:{array:Mr},slots:{0:os}});Object.assign(os,{structure:q});const Tr={argStruct:le,thunkId:2,name:"createOutput"},$r={argStruct:pe,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...t,name:"type",align:1,instance:{members:[{...e,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(p,{...t,name:"u8",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(_,{...t,type:1,name:"[29:0]u8",length:29,byteSize:30,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(D,{...t,type:13,name:"*const [29:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[]}});Object.assign(F,{...t,type:1,name:"[14:0]u8",length:14,byteSize:15,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(M,{...t,type:13,name:"*const [14:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(l,{...t,name:"comptime_int",align:1,instance:{members:[{...e,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:l}],methods:[]}});Object.assign(f,{...t,name:"i8",byteSize:1,align:1,instance:{members:[{...e,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(T,{...t,type:1,name:"[16:0]u8",length:16,byteSize:17,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign($,{...t,type:13,name:"*const [16:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[]}});Object.assign(r,{...t,name:"comptime_float",align:1,instance:{members:[{...e,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(L,{...t,type:1,name:"[12:0]u8",length:12,byteSize:13,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(B,{...t,type:13,name:"*const [12:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[]}});Object.assign(S,{...t,name:"f32",byteSize:4,align:4,instance:{members:[{...e,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(y,{...t,name:"f64",byteSize:8,align:8,instance:{members:[{...e,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:y}],methods:[]}});Object.assign(G,{...t,type:2,name:"Struct992839402",align:1,instance:{members:[{...e,type:9,slot:0,name:"type",structure:s},{...e,type:9,slot:1,name:"minValue",structure:r},{...e,type:9,slot:2,name:"maxValue",structure:r},{...e,type:9,slot:3,name:"defaultValue",structure:r},{...e,type:9,slot:4,name:"description",structure:B}],methods:[],template:He}});Object.assign(H,{...t,type:2,name:"Struct761432325",align:1,instance:{members:[{...e,type:9,slot:0,name:"0",structure:r},{...e,type:9,slot:1,name:"1",structure:r}],methods:[],template:Ye}});Object.assign(J,{...t,type:2,name:"Struct4139784567",align:1,instance:{members:[{...e,type:9,slot:0,name:"0",structure:r},{...e,type:9,slot:1,name:"1",structure:r}],methods:[],template:tt}});Object.assign(N,{...t,type:2,name:"Struct517141147",align:1,instance:{members:[{...e,type:9,slot:0,name:"0",structure:r},{...e,type:9,slot:1,name:"1",structure:r}],methods:[],template:at}});Object.assign(Q,{...t,type:1,name:"[10:0]u8",length:10,byteSize:11,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(W,{...t,type:13,name:"*const [10:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[]}});Object.assign(X,{...t,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...e,type:4,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(Y,{...t,type:2,name:"Struct2512182532",align:1,instance:{members:[{...e,type:9,slot:0,name:"type",structure:s},{...e,type:9,slot:1,name:"minValue",structure:H},{...e,type:9,slot:2,name:"maxValue",structure:J},{...e,type:9,slot:3,name:"defaultValue",structure:N},{...e,type:9,slot:4,name:"description",structure:W}],methods:[],template:ot}});Object.assign(Z,{...t,type:2,name:"Struct1489984691",align:1,instance:{members:[{...e,type:9,slot:0,name:"size",structure:G},{...e,type:9,slot:1,name:"base",structure:Y}],methods:[],template:mt}});Object.assign(d,{...t,type:2,name:"Struct3832472641",align:1,instance:{members:[{...e,type:9,slot:0,name:"channels",structure:l}],methods:[],template:yt}});Object.assign(ee,{...t,type:2,name:"Struct80678618",align:1,instance:{members:[{...e,type:9,slot:0,name:"img",structure:d}],methods:[],template:lt}});Object.assign(te,{...t,type:2,name:"Struct199712073",align:1,instance:{members:[{...e,type:9,slot:0,name:"pxl",structure:d}],methods:[],template:gt}});Object.assign(me,{...t,type:2,name:"hex-cells.kernel",align:1,static:{members:[{...e,type:9,slot:0,name:"namespace",structure:D},{...e,type:9,slot:1,name:"vendor",structure:M},{...e,type:9,slot:2,name:"version",structure:l},{...e,type:9,slot:3,name:"description",structure:$},{...e,type:9,slot:4,name:"parameters",structure:Z},{...e,type:9,slot:5,name:"inputImages",structure:ee},{...e,type:9,slot:6,name:"outputImages",structure:te}],methods:[],template:pt}});Object.assign(P,{...t,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(se,{...t,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(V,{...t,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:64,byteSize:8,slot:0,structure:se}],methods:[]}});Object.assign(m,{...t,name:"u32",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[]}});Object.assign(O,{...t,type:11,name:"hex-cells.ColorSpace",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"srgb",structure:O},{...e,type:9,slot:1,name:"display-p3",structure:O}],methods:[],template:Pt}});Object.assign(U,{...t,name:"usize",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:U}],methods:[]}});Object.assign(ye,{...t,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...e,type:4,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(re,{...t,type:2,name:"hex-cells.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:V},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:Rt},static:{members:[{...e,type:9,slot:0,name:"Pixel",structure:s},{...e,type:9,slot:1,name:"FPixel",structure:s},{...e,type:9,slot:2,name:"channels",structure:l}],methods:[],template:qt}});Object.assign(I,{...t,type:2,name:"hex-cells.KernelInput(u8,hex-cells.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"img",structure:re}],methods:[],template:_t}});Object.assign(ae,{...t,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(R,{...t,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:64,byteSize:8,slot:0,structure:ae}],methods:[]}});Object.assign(ne,{...t,type:2,name:"hex-cells.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:R},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:Mt},static:{members:[{...e,type:9,slot:0,name:"Pixel",structure:s},{...e,type:9,slot:1,name:"FPixel",structure:s},{...e,type:9,slot:2,name:"channels",structure:l}],methods:[],template:$t}});Object.assign(k,{...t,type:2,name:"hex-cells.KernelOutput(u8,hex-cells.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"pxl",structure:ne}],methods:[],template:Jt}});Object.assign(q,{...t,type:2,name:"hex-cells.KernelParameters(hex-cells.kernel)",byteSize:16,align:8,instance:{members:[{...e,type:4,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"size",structure:S},{...e,type:7,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"base",structure:X}],methods:[],template:Wt}});Object.assign(x,{...t,type:10,name:"@typeInfo(@typeInfo(@TypeOf(hex-cells.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"OutOfMemory",structure:x}],methods:[],template:Xt}});Object.assign(be,{...t,type:9,name:"ErrorSet2387374520!hex-cells.KernelOutput(u8,hex-cells.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:k},{...e,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:x}],methods:[]}});Object.assign(le,{...t,type:5,name:"createOutput",byteSize:80,align:8,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...e,type:3,isRequired:!0,bitOffset:160,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...e,type:7,isRequired:!0,bitOffset:192,bitSize:192,byteSize:24,slot:0,name:"2",structure:I},{...e,type:7,isRequired:!0,bitOffset:0,bitSize:128,byteSize:16,slot:1,name:"3",structure:q},{...e,type:7,isRequired:!0,bitOffset:384,bitSize:224,byteSize:28,slot:2,name:"retval",structure:be}],methods:[]}});Object.assign(K,{...t,type:10,name:"@typeInfo(@typeInfo(@TypeOf(hex-cells.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"OutOfMemory",structure:K}],methods:[],template:Yt}});Object.assign(ge,{...t,type:9,name:"ErrorSet4096678769!hex-cells.KernelOutput(u8,hex-cells.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:k},{...e,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:K}],methods:[]}});Object.assign(pe,{...t,type:5,name:"createPartialOutput",byteSize:88,align:8,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...e,type:3,isRequired:!0,bitOffset:160,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...e,type:3,isRequired:!0,bitOffset:192,bitSize:32,byteSize:4,slot:5,name:"2",structure:m},{...e,type:3,isRequired:!0,bitOffset:224,bitSize:32,byteSize:4,slot:6,name:"3",structure:m},{...e,type:7,isRequired:!0,bitOffset:256,bitSize:192,byteSize:24,slot:0,name:"4",structure:I},{...e,type:7,isRequired:!0,bitOffset:0,bitSize:128,byteSize:16,slot:1,name:"5",structure:q},{...e,type:7,isRequired:!0,bitOffset:448,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ge}],methods:[]}});Object.assign(Oe,{...t,type:2,name:"hex-cells",align:1,static:{members:[{...e,type:9,slot:0,name:"kernel",structure:s},{...e,type:9,slot:1,name:"Input",structure:s},{...e,type:9,slot:2,name:"Output",structure:s},{...e,type:9,slot:3,name:"Parameters",structure:s}],methods:[Tr,$r],template:Zt}});const Lr=[s,p,_,D,F,M,l,f,T,$,r,L,B,S,y,G,H,J,N,Q,W,X,Y,Z,d,ee,te,me,P,se,V,m,O,U,ye,re,I,ae,R,ne,k,q,x,be,le,K,ge,pe,Oe],Br=Oe,Gr={runtimeSafety:!1,littleEndian:!0},oe=ks();oe.getControlObject();oe.recreateStructures(Lr,Gr);const Hr=(async()=>{const o=new URL("hex-cells-5119e92a.wasm",import.meta.url).href;return fetch(o)})();oe.loadModule(Hr);oe.linkVariables(!0);const{constructor:Jr}=Br,{createPartialOutput:Nr,Input:Qr,kernel:ue}=Jr;function Wr(o,c,n,a,i={},z={}){const j=[];for(const[b]of ue.inputImages)j.push(b);const w=[];for(const[b]of ue.outputImages)w.push(b);if(Array.isArray(i)){const b=i;i={};for(const[g,h]of j.entries())i[h]=b[g]}const u=new Qr(void 0),v=[];let A;for(const b of j){let g=i[b];if(g||(j.length===1&&["data","width","height"].every(h=>!!i[h])?g=i:v.push(b)),u[b]=g,A){if(g.colorSpace!==A)throw new Error(`Input images must all use the same color space: ${A}`)}else A=g.colorSpace}if(v.length>0)throw new Error(`Missing input image${v.length>1?"s":""}: ${v.join(", ")}`);const ce=Nr(o,c,n,a,u,z),Be=b=>{const g={};for(const h of w){const{data:{typedArray:E},width:Ge,height:ys}=b[h];let C;if(typeof ImageData=="function"){const bs=new Uint8ClampedArray(E.buffer,E.byteOffset,E.byteLength);C=new ImageData(bs,Ge,a,{colorSpace:A})}else C={data:E,width:Ge,height:ys};if(w.length===1)return C;g[h]=C}return g};return ce[Symbol.toStringTag]==="Promise"?ce.then(Be):Be(ce)}function Xr(){const o={};for(let[c,n]of ue){if(c==="parameters"){const a={};for(const[i,z]of n){const j=a[i]={};for(let[w,u]of z)typeof u=="object"?"string"in u?u=u.string:u=ms(u):typeof u=="function"&&(u=Yr(u.name)),j[w]=u}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());o[c]=n}return o}function ms(o){const c=[];for(let[n,a]of o)typeof a=="object"&&(a=ms(a)),c[n]=a;return c}function Yr(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[c,n,...a]=o.data;Zr(c,a).then(([i,z])=>{postMessage([c,n,i],{transfer:z})}).catch(i=>{postMessage(["error",n,i])})};async function Zr(o,c){switch(o){case"getKernelInfo":return[Xr(...c)];case"createPartialImageData":const a=await Wr(...c),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const z of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${o}`)}}
