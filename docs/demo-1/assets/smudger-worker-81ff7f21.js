import{u as Kt,a as _t,b as Dt,c as Ft,d as Mt,e as Tt,f as $t,g as Lt,h as Bt,i as Gt,j as Ht,k as Jt,l as Nt,m as Qt,n as Wt,p as Xt,o as Yt,q as Zt,r as es,s as ts}from"./index-25a52593.js";Kt();Ht();Jt();_t();Dt();Nt();Qt();Wt();Xt();Ft();Mt();Tt();$t();Yt();ts();Lt();Zt();Bt();Gt();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},e={type:0,isRequired:!1},s={},p={},_={},D={},F={},M={},y={},f={},T={},$={},l={},L={},B={},d={},j={},G={},H={},h={},J={},N={},re={},I={},Q={},V={},c={},g={},U={},ne={},W={},R={},X={},k={},Y={},q={},v={},P={},ae={},ie={},K={},oe={},ue={},ce={},Ie={},me={},Ve={},ye={},Re={},be={},ke={},le={},qe={},ge={},ve={},Ee={},pe={},xe={},Z={},Ce={},Ke={},fe={},_e={},Oe={},De={},Fe={},Me={},Te={},$e={},Le={},Be={},Ge={},He={},Je={},Ne={},Qe={},We={},Xe={},Ye={},Ze={},et={},Se={},tt={},st={},ze={},rt={},de={},nt={},at={},it={},ot={},ut={},ct={},mt={},je={},yt={},bt={},lt={},gt={},pt={},ft={},Ot={},St={},zt={},dt={},he={},jt={},ht={},wt={},At={},Ut={},Pt={},It={},Vt={},Rt={},kt={},ss=new Uint8Array,rs=new Uint8Array,ns=new Uint8Array([0,0,0,0,0,0,0,0]),as=new Uint8Array,is=new Uint8Array([0,0,0,0,0,0,20,64]),os=new Uint8Array,us=new Uint8Array([0,0,0,0,0,0,224,63]),cs=new Uint8Array([212,17,0,1]),ms=new Uint8Array([97,109,111,117,110,116,0]),ys=new Uint8Array,bs=new Uint8Array,ls=new Uint8Array([4]),gs=new Uint8Array,ps=new Uint8Array,fs=new Uint8Array([6,16,0,1]),Os=new Uint8Array([115,109,117,100,103,101,114,0]),Ss=new Uint8Array([25,16,0,1]),zs=new Uint8Array([70,114,97,110,107,32,82,101,105,116,98,101,114,103,101,114,0]),ds=new Uint8Array,js=new Uint8Array([1]),hs=new Uint8Array([59,16,0,1]),ws=new Uint8Array([103,101,110,101,114,97,116,101,115,32,97,32,115,109,117,100,103,101,100,32,112,97,116,116,101,114,110,0]),As=new Uint8Array,Us=new Uint8Array,Ps=new Uint8Array,Is=new Uint8Array([0]),Vs=new Uint8Array([1]),qt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Rs=new Uint8Array,ks=new Uint8Array,qs=new Uint8Array,vs=new Uint8Array,Es=new Uint8Array([4]),we=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),vt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),xs=new Uint8Array,Cs=new Uint8Array,Ks=new Uint8Array,_s=new Uint8Array,Ds=new Uint8Array([4]),Ae=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Fs=new Uint8Array([0,0,0,63]),Ms=new Uint8Array([27,0]),Ts=new Uint8Array,$s=new Uint8Array,Ls=new Uint8Array,Bs=new Uint8Array;Object.assign(Ie,{slots:{0:me,1:ye,2:be,3:le,4:ge}});Object.assign(me,{structure:s,memory:{array:ss},slots:{0:Ve}});Object.assign(Ve,{structure:d});Object.assign(ye,{structure:l,memory:{array:rs},slots:{0:Re}});Object.assign(Re,{structure:j,memory:{array:ns}});Object.assign(be,{structure:l,memory:{array:as},slots:{0:ke}});Object.assign(ke,{structure:j,memory:{array:is}});Object.assign(le,{structure:l,memory:{array:os},slots:{0:qe}});Object.assign(qe,{structure:j,memory:{array:us}});Object.assign(ge,{structure:B,memory:{array:cs},slots:{0:ve}});Object.assign(ve,{structure:L,memory:{array:ms},reloc:16781780,const:!0});Object.assign(Ee,{slots:{0:pe}});Object.assign(pe,{structure:G,memory:{array:ys},slots:{0:me,1:ye,2:be,3:le,4:ge}});Object.assign(xe,{slots:{0:Z}});Object.assign(Z,{structure:y,memory:{array:bs},slots:{0:Ce}});Object.assign(Ce,{structure:f,memory:{array:ls}});Object.assign(Ke,{slots:{0:fe}});Object.assign(fe,{structure:h,memory:{array:gs},slots:{0:Z}});Object.assign(_e,{slots:{0:Oe}});Object.assign(Oe,{structure:h,memory:{array:ps},slots:{0:Z}});Object.assign(De,{slots:{0:Fe,1:Te,2:Le,3:Ge,4:Je,5:Ne,6:Qe}});Object.assign(Fe,{structure:D,memory:{array:fs},slots:{0:Me}});Object.assign(Me,{structure:_,memory:{array:Os},reloc:16781318,const:!0});Object.assign(Te,{structure:M,memory:{array:Ss},slots:{0:$e}});Object.assign($e,{structure:F,memory:{array:zs},reloc:16781337,const:!0});Object.assign(Le,{structure:y,memory:{array:ds},slots:{0:Be}});Object.assign(Be,{structure:f,memory:{array:js}});Object.assign(Ge,{structure:$,memory:{array:hs},slots:{0:He}});Object.assign(He,{structure:T,memory:{array:ws},reloc:16781371,const:!0});Object.assign(Je,{structure:H,memory:{array:As},slots:{0:pe}});Object.assign(Ne,{structure:J,memory:{array:Us},slots:{0:fe}});Object.assign(Qe,{structure:N,memory:{array:Ps},slots:{0:Oe}});Object.assign(We,{slots:{0:Xe,1:Ye}});Object.assign(Xe,{structure:g,memory:{array:Is}});Object.assign(Ye,{structure:g,memory:{array:Vs}});Object.assign(Ze,{memory:{array:qt},slots:{0:et}});Object.assign(et,{structure:V,memory:{array:qt,offset:0,length:8},slots:{0:Se}});Object.assign(Se,{structure:Q,memory:{array:Rs},reloc:0,const:!0});Object.assign(tt,{slots:{0:st,1:rt,2:nt}});Object.assign(st,{structure:s,memory:{array:ks},slots:{0:ze}});Object.assign(ze,{structure:I});Object.assign(rt,{structure:s,memory:{array:qs},slots:{0:de}});Object.assign(de,{structure:ne});Object.assign(nt,{structure:y,memory:{array:vs},slots:{0:at}});Object.assign(at,{structure:f,memory:{array:Es}});Object.assign(it,{memory:{array:we},slots:{0:ot}});Object.assign(ot,{structure:W,memory:{array:we},slots:{0:ut}});Object.assign(ut,{structure:V,memory:{array:we,offset:0,length:8},slots:{0:Se}});Object.assign(ct,{memory:{array:vt},slots:{0:mt}});Object.assign(mt,{structure:k,memory:{array:vt,offset:0,length:8},slots:{0:je}});Object.assign(je,{structure:X,memory:{array:xs},reloc:0});Object.assign(yt,{slots:{0:bt,1:lt,2:gt}});Object.assign(bt,{structure:s,memory:{array:Cs},slots:{0:ze}});Object.assign(lt,{structure:s,memory:{array:Ks},slots:{0:de}});Object.assign(gt,{structure:y,memory:{array:_s},slots:{0:pt}});Object.assign(pt,{structure:f,memory:{array:Ds}});Object.assign(ft,{memory:{array:Ae},slots:{0:Ot}});Object.assign(Ot,{structure:Y,memory:{array:Ae},slots:{0:St}});Object.assign(St,{structure:k,memory:{array:Ae,offset:0,length:8},slots:{0:je}});Object.assign(zt,{memory:{array:Fs}});Object.assign(dt,{slots:{0:he}});Object.assign(he,{structure:P,memory:{array:Ms}});Object.assign(jt,{slots:{0:he}});Object.assign(ht,{slots:{0:wt,1:Ut,2:It,3:Rt}});Object.assign(wt,{structure:s,memory:{array:Ts},slots:{0:At}});Object.assign(At,{structure:re});Object.assign(Ut,{structure:s,memory:{array:$s},slots:{0:Pt}});Object.assign(Pt,{structure:R});Object.assign(It,{structure:s,memory:{array:Ls},slots:{0:Vt}});Object.assign(Vt,{structure:q});Object.assign(Rt,{structure:s,memory:{array:Bs},slots:{0:kt}});Object.assign(kt,{structure:v});const Gs={argStruct:ie,thunkId:2,name:"createOutput"},Hs={argStruct:ue,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...t,name:"type",align:1,instance:{members:[{...e,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(p,{...t,name:"u8",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(_,{...t,type:1,name:"[7:0]u8",length:7,byteSize:8,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(D,{...t,type:13,name:"*const [7:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[]}});Object.assign(F,{...t,type:1,name:"[16:0]u8",length:16,byteSize:17,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(M,{...t,type:13,name:"*const [16:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(y,{...t,name:"comptime_int",align:1,instance:{members:[{...e,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:y}],methods:[]}});Object.assign(f,{...t,name:"i8",byteSize:1,align:1,instance:{members:[{...e,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(T,{...t,type:1,name:"[27:0]u8",length:27,byteSize:28,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign($,{...t,type:13,name:"*const [27:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[]}});Object.assign(l,{...t,name:"comptime_float",align:1,instance:{members:[{...e,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:l}],methods:[]}});Object.assign(L,{...t,type:1,name:"[6:0]u8",length:6,byteSize:7,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(B,{...t,type:13,name:"*const [6:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[]}});Object.assign(d,{...t,name:"f32",byteSize:4,align:4,instance:{members:[{...e,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:d}],methods:[]}});Object.assign(j,{...t,name:"f64",byteSize:8,align:8,instance:{members:[{...e,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:j}],methods:[]}});Object.assign(G,{...t,type:2,name:"Struct405863462",align:1,instance:{members:[{...e,type:9,slot:0,name:"type",structure:s},{...e,type:9,slot:1,name:"minValue",structure:l},{...e,type:9,slot:2,name:"maxValue",structure:l},{...e,type:9,slot:3,name:"defaultValue",structure:l},{...e,type:9,slot:4,name:"description",structure:B}],methods:[],template:Ie}});Object.assign(H,{...t,type:2,name:"Struct395708839",align:1,instance:{members:[{...e,type:9,slot:0,name:"amount",structure:G}],methods:[],template:Ee}});Object.assign(h,{...t,type:2,name:"Struct3832472641",align:1,instance:{members:[{...e,type:9,slot:0,name:"channels",structure:y}],methods:[],template:xe}});Object.assign(J,{...t,type:2,name:"Struct2242867897",align:1,instance:{members:[{...e,type:9,slot:0,name:"src",structure:h}],methods:[],template:Ke}});Object.assign(N,{...t,type:2,name:"Struct172100005",align:1,instance:{members:[{...e,type:9,slot:0,name:"dst",structure:h}],methods:[],template:_e}});Object.assign(re,{...t,type:2,name:"smudger.kernel",align:1,static:{members:[{...e,type:9,slot:0,name:"namespace",structure:D},{...e,type:9,slot:1,name:"vendor",structure:M},{...e,type:9,slot:2,name:"version",structure:y},{...e,type:9,slot:3,name:"description",structure:$},{...e,type:9,slot:4,name:"parameters",structure:H},{...e,type:9,slot:5,name:"inputImages",structure:J},{...e,type:9,slot:6,name:"outputImages",structure:N}],methods:[],template:De}});Object.assign(I,{...t,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(Q,{...t,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(V,{...t,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:64,byteSize:8,slot:0,structure:Q}],methods:[]}});Object.assign(c,{...t,name:"u32",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[]}});Object.assign(g,{...t,type:11,name:"smudger.ColorSpace",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"srgb",structure:g},{...e,type:9,slot:1,name:"display-p3",structure:g}],methods:[],template:We}});Object.assign(U,{...t,name:"usize",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:U}],methods:[]}});Object.assign(ne,{...t,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...e,type:4,bitSize:32,byteSize:4,structure:d}],methods:[]}});Object.assign(W,{...t,type:2,name:"smudger.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:V},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...e,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:g},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:Ze},static:{members:[{...e,type:9,slot:0,name:"Pixel",structure:s},{...e,type:9,slot:1,name:"FPixel",structure:s},{...e,type:9,slot:2,name:"channels",structure:y}],methods:[],template:tt}});Object.assign(R,{...t,type:2,name:"smudger.KernelInput(u8,smudger.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:W}],methods:[],template:it}});Object.assign(X,{...t,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(k,{...t,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:64,byteSize:8,slot:0,structure:X}],methods:[]}});Object.assign(Y,{...t,type:2,name:"smudger.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:k},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...e,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:g},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:ct},static:{members:[{...e,type:9,slot:0,name:"Pixel",structure:s},{...e,type:9,slot:1,name:"FPixel",structure:s},{...e,type:9,slot:2,name:"channels",structure:y}],methods:[],template:yt}});Object.assign(q,{...t,type:2,name:"smudger.KernelOutput(u8,smudger.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:Y}],methods:[],template:ft}});Object.assign(v,{...t,type:2,name:"smudger.KernelParameters(smudger.kernel)",byteSize:4,align:4,instance:{members:[{...e,type:4,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"amount",structure:d}],methods:[],template:zt}});Object.assign(P,{...t,type:10,name:"@typeInfo(@typeInfo(@TypeOf(smudger.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"OutOfMemory",structure:P}],methods:[],template:dt}});Object.assign(ae,{...t,type:9,name:"ErrorSet1591848711!smudger.KernelOutput(u8,smudger.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:q},{...e,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:P}],methods:[]}});Object.assign(ie,{...t,type:5,name:"createOutput",byteSize:64,align:4,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:c},{...e,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:c},{...e,type:7,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:R},{...e,type:7,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:1,name:"3",structure:v},{...e,type:7,isRequired:!0,bitOffset:288,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ae}],methods:[]}});Object.assign(K,{...t,type:10,name:"@typeInfo(@typeInfo(@TypeOf(smudger.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"OutOfMemory",structure:K}],methods:[],template:jt}});Object.assign(oe,{...t,type:9,name:"ErrorSet4228762458!smudger.KernelOutput(u8,smudger.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:q},{...e,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:K}],methods:[]}});Object.assign(ue,{...t,type:5,name:"createPartialOutput",byteSize:72,align:4,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:c},{...e,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:c},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:c},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:c},{...e,type:7,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:R},{...e,type:7,isRequired:!0,bitOffset:320,bitSize:32,byteSize:4,slot:1,name:"5",structure:v},{...e,type:7,isRequired:!0,bitOffset:352,bitSize:224,byteSize:28,slot:2,name:"retval",structure:oe}],methods:[]}});Object.assign(ce,{...t,type:2,name:"smudger",align:1,static:{members:[{...e,type:9,slot:0,name:"kernel",structure:s},{...e,type:9,slot:1,name:"Input",structure:s},{...e,type:9,slot:2,name:"Output",structure:s},{...e,type:9,slot:3,name:"Parameters",structure:s}],methods:[Gs,Hs],template:ht}});const Js=[s,p,_,D,F,M,y,f,T,$,l,L,B,d,j,G,H,h,J,N,re,I,Q,V,c,g,U,ne,W,R,X,k,Y,q,v,P,ae,ie,K,oe,ue,ce],Ns=ce,Qs={runtimeSafety:!1,littleEndian:!0},ee=es();ee.getControlObject();ee.recreateStructures(Js,Qs);const Ws=(async()=>{const i=new URL("smudger-b7014884.wasm",import.meta.url).href;return fetch(i)})();ee.loadModule(Ws);ee.linkVariables(!0);const{constructor:Xs}=Ns,{createPartialOutput:Ys,Input:Zs,kernel:se}=Xs;function er(i,o,n,r,a={},O={}){const S=[];for(const[m]of se.inputImages)S.push(m);const w=[];for(const[m]of se.outputImages)w.push(m);if(Array.isArray(a)){const m=a;a={};for(const[b,z]of S.entries())a[z]=m[b]}const u=new Zs(void 0),E=[];let A;for(const m of S){let b=a[m];if(b||(S.length===1&&["data","width","height"].every(z=>!!a[z])?b=a:E.push(m)),u[m]=b,A){if(b.colorSpace!==A)throw new Error(`Input images must all use the same color space: ${A}`)}else A=b.colorSpace}if(E.length>0)throw new Error(`Missing input image${E.length>1?"s":""}: ${E.join(", ")}`);const te=Ys(i,o,n,r,u,O),Ue=m=>{const b={};for(const z of w){const{data:{typedArray:x},width:Pe,height:xt}=m[z];let C;if(typeof ImageData=="function"){const Ct=new Uint8ClampedArray(x.buffer,x.byteOffset,x.byteLength);C=new ImageData(Ct,Pe,r,{colorSpace:A})}else C={data:x,width:Pe,height:xt};if(w.length===1)return C;b[z]=C}return b};return te[Symbol.toStringTag]==="Promise"?te.then(Ue):Ue(te)}function tr(){const i={};for(let[o,n]of se){if(o==="parameters"){const r={};for(const[a,O]of n){const S=r[a]={};for(let[w,u]of O)typeof u=="object"?"string"in u?u=u.string:u=Et(u):typeof u=="function"&&(u=sr(u.name)),S[w]=u}n=r}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());i[o]=n}return i}function Et(i){const o=[];for(let[n,r]of i)typeof r=="object"&&(r=Et(r)),o[n]=r;return o}function sr(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[o,n,...r]=i.data;rr(o,r).then(([a,O])=>{postMessage([o,n,a],{transfer:O})}).catch(a=>{postMessage(["error",n,a])})};async function rr(i,o){switch(i){case"getKernelInfo":return[tr(...o)];case"createPartialImageData":const r=await er(...o),a=[];if("data"in r&&"width"in r&&"height"in r)a.push(r.data.buffer);else for(const O of Object.entries(r))a.push(r.data.buffer);return[r,a];default:throw new Error(`Unknown function: ${i}`)}}
