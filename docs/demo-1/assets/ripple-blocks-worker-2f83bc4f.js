import{u as De,a as Fe,b as Me,d as _e,c as Te,e as $e,f as Be,g as Le,h as Ge,i as He,j as Je,k as Ne,l as Qe,m as We,o as Xe,n as Ye,p as Ze,q as et}from"./index-422d9c98.js";De();Fe();Me();_e();Te();$e();Be();Le();Ge();He();Je();Ne();Qe();We();Xe();Ye();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},h={},Y={},Z={},D={},ee={},te={},F={},b={},p={},se={},re={},M={},U={},S={},u={},s={},O={},d={},P={},w={},ae={},_={},ne={},T={},ie={},$={},ue={},B={},oe={},L={},le={},G={},me={},H={},ye={},J={},k={},R={},ce={},N={},be={},Q={},we={},q={},pe={},fe={},y={},de={},j={},Se={},W={},V={},he={},ge={},X={},C={},I={},Re={},qe={},Ae={},Ue={},je={},Pe={},ke={};Object.assign(h,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:h}],methods:[],template:null},slot:5});Object.assign(Y,{...t,type:1,name:"[10:0]u8",length:10,byteSize:11,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:h}],methods:[],template:null},slot:4});Object.assign(Z,{...t,type:11,name:"*const [10:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[],template:null},slot:3});Object.assign(D,{...t,type:11,name:"*const *const [10:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:2});Object.assign(ee,{...t,type:1,name:"[0:0]u8",length:0,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:h}],methods:[],template:null},slot:8});Object.assign(te,{...t,type:11,name:"*const [0:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:7});Object.assign(F,{...t,type:11,name:"*const *const [0:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:6});Object.assign(b,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:10});Object.assign(p,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:b}],methods:[],template:null},slot:9});Object.assign(se,{...t,type:1,name:"[24:0]u8",length:24,byteSize:25,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:h}],methods:[],template:null},slot:13});Object.assign(re,{...t,type:11,name:"*const [24:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:12});Object.assign(M,{...t,type:11,name:"*const *const [24:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:11});Object.assign(U,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:U}],methods:[],template:null},slot:46});Object.assign(S,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:U}],methods:[],template:null},slot:32});Object.assign(u,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:u}],methods:[],template:null},slot:62});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:u}],methods:[],template:null},slot:61});const tt=new Uint8Array([]),st=new Uint8Array([0,247,15,0]),rt=new Uint8Array([0,0,0,0,0,0,0,0]),at=new Uint8Array([40,247,15,0]),nt=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(O,{...t,type:2,name:"Struct0020",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:tt},slots:{0:{structure:s,memory:{array:st},slots:{0:{structure:u,memory:{array:rt}}}},1:{structure:s,memory:{array:at},slots:{0:{structure:u,memory:{array:nt}}}}}}},slot:50});Object.assign(d,{...t,type:11,name:"Struct0014",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:O}],methods:[],template:null},slot:49});const it=new Uint8Array([]),ut=new Uint8Array([0,247,15,0]),ot=new Uint8Array([0,0,0,0,0,0,89,64]),lt=new Uint8Array([40,247,15,0]),mt=new Uint8Array([0,0,0,0,0,0,89,64]);Object.assign(P,{...t,type:2,name:"Struct0021",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:it},slots:{0:{structure:s,memory:{array:ut},slots:{0:{structure:u,memory:{array:ot}}}},1:{structure:s,memory:{array:lt},slots:{0:{structure:u,memory:{array:mt}}}}}}},slot:52});Object.assign(w,{...t,type:11,name:"Struct0015",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:P}],methods:[],template:null},slot:51});const yt=new Uint8Array([]),ct=new Uint8Array([16,250,15,0]),bt=new Uint8Array([0,0,0,0,0,0,52,64]),pt=new Uint8Array([56,250,15,0]),ft=new Uint8Array([0,0,0,0,0,0,52,64]);Object.assign(ae,{...t,type:2,name:"Struct0022",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:yt},slots:{0:{structure:s,memory:{array:ct},slots:{0:{structure:u,memory:{array:bt}}}},1:{structure:s,memory:{array:pt},slots:{0:{structure:u,memory:{array:ft}}}}}}},slot:54});Object.assign(_,{...t,type:11,name:"Struct0016",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:53});const dt=new Uint8Array([]),St=new Uint8Array([170,170,170,170]),i=new Uint8Array([]),ht=new Uint8Array([170,170,170,170]),gt=new Uint8Array([170,170,170,170]);Object.assign(ne,{...t,type:2,name:"Struct0010",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:S},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:d},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:w},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:_}],methods:[],template:{memory:{array:dt},slots:{0:{structure:d,memory:{array:St},slots:{0:{structure:O,memory:{array:i},address:-1431655766}}},1:{structure:w,memory:{array:ht},slots:{0:{structure:P,memory:{array:i},address:-1431655766}}},2:{structure:_,memory:{array:gt},slots:{0:{structure:ae,memory:{array:i},address:-1431655766}}}}}},slot:38});Object.assign(T,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:37});const zt=new Uint8Array([]),Ot=new Uint8Array([16,250,15,0]),wt=new Uint8Array([0,0,0,0,0,0,240,63]),Rt=new Uint8Array([56,250,15,0]),qt=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(ie,{...t,type:2,name:"Struct0023",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:zt},slots:{0:{structure:s,memory:{array:Ot},slots:{0:{structure:u,memory:{array:wt}}}},1:{structure:s,memory:{array:Rt},slots:{0:{structure:u,memory:{array:qt}}}}}}},slot:56});Object.assign($,{...t,type:11,name:"Struct0017",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:55});const At=new Uint8Array([]),Ut=new Uint8Array([16,250,15,0]),jt=new Uint8Array([0,0,0,0,0,0,36,64]),Pt=new Uint8Array([56,250,15,0]),kt=new Uint8Array([0,0,0,0,0,0,36,64]);Object.assign(ue,{...t,type:2,name:"Struct0024",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:At},slots:{0:{structure:s,memory:{array:Ut},slots:{0:{structure:u,memory:{array:jt}}}},1:{structure:s,memory:{array:Pt},slots:{0:{structure:u,memory:{array:kt}}}}}}},slot:58});Object.assign(B,{...t,type:11,name:"Struct0018",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:57});const Vt=new Uint8Array([]),Ct=new Uint8Array([170,170,170,170]),It=new Uint8Array([170,170,170,170]),vt=new Uint8Array([170,170,170,170]);Object.assign(oe,{...t,type:2,name:"Struct0011",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:S},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:$},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:w},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:B}],methods:[],template:{memory:{array:Vt},slots:{0:{structure:$,memory:{array:Ct},slots:{0:{structure:ie,memory:{array:i},address:-1431655766}}},1:{structure:w,memory:{array:It},slots:{0:{structure:P,memory:{array:i},address:-1431655766}}},2:{structure:B,memory:{array:vt},slots:{0:{structure:ue,memory:{array:i},address:-1431655766}}}}}},slot:40});Object.assign(L,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:39});const xt=new Uint8Array([]),Et=new Uint8Array([16,250,15,0]),Kt=new Uint8Array([111,18,131,192,202,33,25,64]),Dt=new Uint8Array([56,250,15,0]),Ft=new Uint8Array([111,18,131,192,202,33,25,64]);Object.assign(le,{...t,type:2,name:"Struct0025",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:xt},slots:{0:{structure:s,memory:{array:Et},slots:{0:{structure:u,memory:{array:Kt}}}},1:{structure:s,memory:{array:Dt},slots:{0:{structure:u,memory:{array:Ft}}}}}}},slot:60});Object.assign(G,{...t,type:11,name:"Struct0019",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:59});const Mt=new Uint8Array([]),_t=new Uint8Array([170,170,170,170]),Tt=new Uint8Array([170,170,170,170]),$t=new Uint8Array([170,170,170,170]);Object.assign(me,{...t,type:2,name:"Struct0012",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:S},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:d},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:G},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:d}],methods:[],template:{memory:{array:Mt},slots:{0:{structure:d,memory:{array:_t},slots:{0:{structure:O,memory:{array:i},address:-1431655766}}},1:{structure:G,memory:{array:Tt},slots:{0:{structure:le,memory:{array:i},address:-1431655766}}},2:{structure:d,memory:{array:$t},slots:{0:{structure:O,memory:{array:i},address:-1431655766}}}}}},slot:42});Object.assign(H,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:41});const Bt=new Uint8Array([]),Lt=new Uint8Array([170,170,170,170]),Gt=new Uint8Array([170,170,170,170]),Ht=new Uint8Array([170,170,170,170]);Object.assign(ye,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"amplitude",structure:T},{...e,type:8,isRequired:!1,slot:1,name:"wavelength",structure:L},{...e,type:8,isRequired:!1,slot:2,name:"phase",structure:H}],methods:[],template:{memory:{array:Bt},slots:{0:{structure:T,memory:{array:Lt},slots:{0:{structure:ne,memory:{array:i},address:-1431655766}}},1:{structure:L,memory:{array:Gt},slots:{0:{structure:oe,memory:{array:i},address:-1431655766}}},2:{structure:H,memory:{array:Ht},slots:{0:{structure:me,memory:{array:i},address:-1431655766}}}}}},slot:15});Object.assign(J,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:14});const Jt=new Uint8Array([]),Nt=new Uint8Array([48,250,15,0]),Qt=new Uint8Array([4,0,0,0]);Object.assign(k,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:Jt},slots:{0:{structure:p,memory:{array:Nt},slots:{0:{structure:b,memory:{array:Qt}}}}}}},slot:44});Object.assign(R,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:k}],methods:[],template:null},slot:43});const Wt=new Uint8Array([]),Xt=new Uint8Array([170,170,170,170]);Object.assign(ce,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:R}],methods:[],template:{memory:{array:Wt},slots:{0:{structure:R,memory:{array:Xt},slots:{0:{structure:k,memory:{array:i},address:-1431655766}}}}}},slot:17});Object.assign(N,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:16});const Yt=new Uint8Array([]),Zt=new Uint8Array([170,170,170,170]);Object.assign(be,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:R}],methods:[],template:{memory:{array:Yt},slots:{0:{structure:R,memory:{array:Zt},slots:{0:{structure:k,memory:{array:i},address:-1431655766}}}}}},slot:19});Object.assign(Q,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:18});const es=new Uint8Array([]),ts=new Uint8Array([]),ss=new Uint8Array([28,251,15,0]),rs=new Uint8Array([193,36,16,0]),as=new Uint8Array([65,108,108,101,110,32,67,104,111,117,0]),ns=new Uint8Array([92,251,15,0]),is=new Uint8Array([192,36,16,0]),us=new Uint8Array([0]),os=new Uint8Array([156,251,15,0]),ls=new Uint8Array([1,0,0,0]),ms=new Uint8Array([244,251,15,0]),ys=new Uint8Array([167,36,16,0]),cs=new Uint8Array([98,111,120,45,115,104,97,112,101,100,32,114,105,112,112,108,101,32,101,102,102,101,99,116,0]),bs=new Uint8Array([170,170,170,170]),ps=new Uint8Array([170,170,170,170]),fs=new Uint8Array([170,170,170,170]);Object.assign(we,{...t,type:2,name:"ripple-blocks.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:es}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:D},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:F},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:p},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:M},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:J},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:N},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:Q}],methods:[],template:{memory:{array:ts},slots:{0:{structure:D,memory:{array:ss},slots:{0:{structure:Z,memory:{array:rs},slots:{0:{structure:Y,memory:{array:as},address:1057985}}}}},1:{structure:F,memory:{array:ns},slots:{0:{structure:te,memory:{array:is},slots:{0:{structure:ee,memory:{array:us},address:1057984}}}}},2:{structure:p,memory:{array:os},slots:{0:{structure:b,memory:{array:ls}}}},3:{structure:M,memory:{array:ms},slots:{0:{structure:re,memory:{array:ys},slots:{0:{structure:se,memory:{array:cs},address:1057959}}}}},4:{structure:J,memory:{array:bs},slots:{0:{structure:ye,memory:{array:i},address:-1431655766}}},5:{structure:N,memory:{array:ps},slots:{0:{structure:ce,memory:{array:i},address:-1431655766}}},6:{structure:Q,memory:{array:fs},slots:{0:{structure:be,memory:{array:i},address:-1431655766}}}}}},slot:1});Object.assign(q,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:h}],methods:[],template:null},slot:24});Object.assign(pe,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:23});Object.assign(fe,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:pe}],methods:[],template:null},slot:22});Object.assign(y,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:25});const ds=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(de,{...t,type:9,name:"ripple-blocks.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:b},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:b}],methods:[],template:{memory:{array:ds}}},slot:26});Object.assign(j,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:j}],methods:[],template:null},slot:27});Object.assign(Se,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:U}],methods:[],template:null},slot:45});const Ss=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),hs=new Uint8Array([]),gs=new Uint8Array([216,249,15,0]),zs=new Uint8Array([4,0,0,0]);Object.assign(W,{...t,type:2,name:"ripple-blocks.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:fe},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:de},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:j}],methods:[],template:{memory:{array:Ss}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:q},{...e,type:7,isRequired:!1,name:"FPixel",structure:Se},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:hs},slots:{0:{structure:p,memory:{array:gs},slots:{0:{structure:b,memory:{array:zs}}}}}}},slot:21});const Os=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ws=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Rs=new Uint8Array([0,0,0,0,0,0,0,0]),Ve=new Uint8Array([]);Object.assign(V,{...t,type:2,name:"ripple-blocks.KernelInput(u8,ripple-blocks.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:W}],methods:[],template:{memory:{array:Os},slots:{0:{structure:W,memory:{array:ws},slots:{0:{structure:fe,memory:{array:Rs},slots:{0:{structure:pe,memory:{array:Ve}}}}}}}}},slot:20});Object.assign(he,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:23});Object.assign(ge,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:he}],methods:[],template:null},slot:30});const qs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),As=new Uint8Array([]),Us=new Uint8Array([216,249,15,0]),js=new Uint8Array([4,0,0,0]);Object.assign(X,{...t,type:2,name:"ripple-blocks.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:ge},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:de},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:j}],methods:[],template:{memory:{array:qs}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:q},{...e,type:7,isRequired:!1,name:"FPixel",structure:Se},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:As},slots:{0:{structure:p,memory:{array:Us},slots:{0:{structure:b,memory:{array:js}}}}}}},slot:29});const Ps=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ks=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Vs=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(C,{...t,type:2,name:"ripple-blocks.KernelOutput(u8,ripple-blocks.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:X}],methods:[],template:{memory:{array:Ps},slots:{0:{structure:X,memory:{array:ks},slots:{0:{structure:ge,memory:{array:Vs},slots:{0:{structure:he,memory:{array:Ve}}}}}}}}},slot:28});const Cs=new Uint8Array([0,0,160,65,0,0,160,65,0,0,32,65,0,0,32,65,0,0,0,0,0,0,0,0]);Object.assign(I,{...t,type:2,name:"ripple-blocks.KernelParameters(ripple-blocks.kernel)",length:1,byteSize:24,align:3,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"amplitude",structure:S},{...e,type:6,isRequired:!1,bitOffset:64,bitSize:64,byteSize:8,slot:1,name:"wavelength",structure:S},{...e,type:6,isRequired:!1,bitOffset:128,bitSize:64,byteSize:8,slot:2,name:"phase",structure:S}],methods:[],template:{memory:{array:Cs}}},slot:31});Object.assign(Re,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(ripple-blocks.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:47});Object.assign(qe,{...t,type:7,name:"ErrorSet0000!ripple-blocks.KernelOutput(u8,ripple-blocks.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:C},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Re}],methods:[],template:null},slot:35});Object.assign(Ae,{...t,type:3,name:"createOutput",length:1,byteSize:88,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:192,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:224,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:6,bitOffset:256,bitSize:192,byteSize:24,slot:2,name:"2",structure:V},{...e,type:6,bitOffset:0,bitSize:192,byteSize:24,slot:3,name:"3",structure:I},{...e,type:6,bitOffset:448,bitSize:224,byteSize:28,slot:4,name:"retval",structure:qe}],methods:[],template:null},slot:33});Object.assign(Ue,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(ripple-blocks.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:48});Object.assign(je,{...t,type:7,name:"ErrorSet0001!ripple-blocks.KernelOutput(u8,ripple-blocks.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:C},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Ue}],methods:[],template:null},slot:36});Object.assign(Pe,{...t,type:3,name:"createPartialOutput",length:1,byteSize:96,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:192,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:224,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:2,name:"2",structure:y},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:3,name:"3",structure:y},{...e,type:6,bitOffset:320,bitSize:192,byteSize:24,slot:4,name:"4",structure:V},{...e,type:6,bitOffset:0,bitSize:192,byteSize:24,slot:5,name:"5",structure:I},{...e,type:6,bitOffset:512,bitSize:224,byteSize:28,slot:6,name:"retval",structure:je}],methods:[],template:null},slot:34});const Is={argStruct:Ae,thunk:1,name:"createOutput"},vs={argStruct:Pe,thunk:4,name:"createPartialOutput"};Object.assign(ke,{...t,type:2,name:"ripple-blocks",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Ve}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:we},{...e,type:7,isRequired:!1,name:"Input",structure:V},{...e,type:7,isRequired:!1,name:"Output",structure:C},{...e,type:7,isRequired:!1,name:"Parameters",structure:I}],methods:[Is,vs],template:null},slot:0});const xs=[h,Y,Z,D,ee,te,F,b,p,se,re,M,U,S,u,s,O,d,P,w,ae,_,ne,T,ie,$,ue,B,oe,L,le,G,me,H,ye,J,k,R,ce,N,be,Q,we,q,pe,fe,y,de,j,Se,W,V,he,ge,X,C,I,Re,qe,Ae,Ue,je,Pe,ke],Es=Ze(xs),Ks=ke.constructor,Ds=(async()=>{const o=new URL("ripple-blocks-6f3437d7.wasm",import.meta.url).href;return fetch(o)})();et(Ds,{...Es,writeBack:!0});const{createOutput:Gs,createPartialOutput:Fs,kernel:Oe,Input:Ms,Output:Hs,Parameters:Js}=Ks;function _s(o,m,a,r,n={},g={}){if(Array.isArray(n)){const f=n;n={};for(const[c,z]of Object.keys(Oe.inputImages).entries())n[z]=f[c]}const v=new Ms(void 0),x=Object.keys(Oe.inputImages),l=[];let A;for(const f of x){let c=n[f];if(c||(x.length===1&&["data","width","height"].every(z=>!!n[z])?c=n:l.push(f)),v[f]=c,A){if(c.colorSpace!==A)throw new Error(`Input images must all use the same color space: ${A}`)}else A=c.colorSpace}if(l.length>0)throw new Error(`Missing input image${l.length>1?"s":""}: ${l.join(", ")}`);const ze=Fs(o,m,a,r,v,g),Ce=f=>{const c=Object.keys(f),z={};for(const Ie of c){const{data:{typedArray:E},width:ve,height:Ee}=f[Ie];let K;if(typeof ImageData=="function"){const Ke=new Uint8ClampedArray(E.buffer,E.byteOffset,E.byteLength);K=new ImageData(Ke,ve,r,{colorSpace:A})}else K={data:E,width:ve,height:Ee};if(c.length===1)return K;z[Ie]=K}return z};return ze[Symbol.toStringTag]==="Promise"?ze.then(Ce):Ce(ze)}function Ts(){const o={};for(let[m,a]of Object.entries(Oe)){if(m==="parameters"){const r={};for(const[n,g]of Object.entries(a)){const v=r[n]={};for(let[x,l]of Object.entries(g))typeof l=="object"?"string"in l?l=l.string:l=xe(l):typeof l=="function"&&(l=$s(l.name)),v[x]=l}a=r}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());o[m]=a}return o}function xe(o){const m=[];for(let[a,r]of Object.entries(o))typeof r=="object"&&(r=xe(r)),m[a]=r;return m}function $s(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[m,a,...r]=o.data;Bs(m,r).then(([n,g])=>{postMessage([m,a,n],{transfer:g})}).catch(n=>{postMessage(["error",a,n])})};async function Bs(o,m){switch(o){case"getKernelInfo":return[Ts(...m)];case"createPartialImageData":const r=await _s(...m),n=[];if("data"in r&&"width"in r&&"height"in r)n.push(r.data.buffer);else for(const g of Object.entries(r))n.push(r.data.buffer);return[r,n];default:throw new Error(`Unknown function: ${o}`)}}
