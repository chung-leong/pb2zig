import{u as Zt,a as es,b as ts,c as ss,d as rs,e as as,f as ns,g as is,h as os,i as cs,j as us,k as ms,l as ys,m as bs,n as ls,p as gs,o as ps,q as fs,r as Os,s as Ss}from"./index-25a52593.js";Zt();us();ms();es();ts();ys();bs();ls();gs();ss();rs();as();ns();ps();Ss();is();fs();os();cs();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},e={type:0,isRequired:!1},s={},f={},D={},F={},M={},T={},b={},O={},$={},L={},i={},g={},d={},B={},S={},G={},H={},J={},N={},w={},Q={},W={},oe={},I={},X={},R={},m={},p={},P={},ce={},Y={},k={},Z={},q={},ee={},v={},E={},V={},ue={},me={},_={},ye={},be={},le={},_e={},te={},De={},se={},Fe={},Me={},ge={},Te={},pe={},$e={},Le={},fe={},Be={},Oe={},Se={},ze={},Ge={},je={},He={},he={},Je={},de={},Ne={},we={},Qe={},We={},Ae={},Ue={},Xe={},re={},Ye={},Ze={},Pe={},et={},Ve={},tt={},st={},rt={},at={},nt={},it={},ot={},ct={},ut={},mt={},yt={},bt={},lt={},gt={},pt={},ft={},Ot={},Ie={},St={},zt={},Re={},jt={},ke={},ht={},dt={},wt={},At={},Ut={},Pt={},Vt={},qe={},It={},Rt={},kt={},qt={},vt={},Et={},xt={},Ct={},Kt={},_t={},ve={},Dt={},Ft={},Mt={},Tt={},$t={},Lt={},Bt={},Gt={},Ht={},Jt={},zs=new Uint8Array,js=new Uint8Array([0,0,0,0,0,0,0,0]),hs=new Uint8Array,ds=new Uint8Array([0,0,0,0,0,0,0,0]),ws=new Uint8Array,As=new Uint8Array([0,0,0,0,0,0,176,64]),Us=new Uint8Array,Ps=new Uint8Array([0,0,0,0,0,0,176,64]),Vs=new Uint8Array,Is=new Uint8Array,Rs=new Uint8Array,ks=new Uint8Array,qs=new Uint8Array,vs=new Uint8Array,Es=new Uint8Array([0,0,0,0,0,0,0,0]),xs=new Uint8Array,Cs=new Uint8Array([0,0,0,0,0,0,89,64]),Ks=new Uint8Array,_s=new Uint8Array([0,0,0,0,0,0,8,64]),Ds=new Uint8Array,Fs=new Uint8Array,Ms=new Uint8Array,Ts=new Uint8Array([4]),$s=new Uint8Array,Ls=new Uint8Array,Bs=new Uint8Array([66,16,0,1]),Gs=new Uint8Array([110,101,116,46,110,105,99,111,112,116,101,114,101,46,102,105,108,116,101,114,115,0]),Hs=new Uint8Array([99,16,0,1]),Js=new Uint8Array([110,105,99,111,112,116,101,114,101,0]),Ns=new Uint8Array,Qs=new Uint8Array([1]),Ws=new Uint8Array([126,16,0,1]),Xs=new Uint8Array([98,117,108,103,101,0]),Ys=new Uint8Array,Zs=new Uint8Array,er=new Uint8Array,tr=new Uint8Array([0]),sr=new Uint8Array([1]),Nt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),rr=new Uint8Array,ar=new Uint8Array,nr=new Uint8Array,ir=new Uint8Array,or=new Uint8Array([4]),Ee=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Qt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),cr=new Uint8Array,ur=new Uint8Array,mr=new Uint8Array,yr=new Uint8Array,br=new Uint8Array([4]),xe=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),lr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,64,64,0,0,0,0]),gr=new Uint8Array([27,0]),pr=new Uint8Array,fr=new Uint8Array,Or=new Uint8Array,Sr=new Uint8Array;Object.assign(_e,{slots:{0:te,1:se}});Object.assign(te,{structure:i,memory:{array:zs},slots:{0:De}});Object.assign(De,{structure:g,memory:{array:js}});Object.assign(se,{structure:i,memory:{array:hs},slots:{0:Fe}});Object.assign(Fe,{structure:g,memory:{array:ds}});Object.assign(Me,{slots:{0:ge,1:pe}});Object.assign(ge,{structure:i,memory:{array:ws},slots:{0:Te}});Object.assign(Te,{structure:g,memory:{array:As}});Object.assign(pe,{structure:i,memory:{array:Us},slots:{0:$e}});Object.assign($e,{structure:g,memory:{array:Ps}});Object.assign(Le,{slots:{0:fe,1:Oe,2:Se,3:ze}});Object.assign(fe,{structure:s,memory:{array:Vs},slots:{0:Be}});Object.assign(Be,{structure:G});Object.assign(Oe,{structure:d,memory:{array:Is},slots:{0:te,1:se}});Object.assign(Se,{structure:B,memory:{array:Rs},slots:{0:ge,1:pe}});Object.assign(ze,{structure:d,memory:{array:ks},slots:{0:te,1:se}});Object.assign(Ge,{slots:{0:je,1:he,2:de,3:we}});Object.assign(je,{structure:s,memory:{array:qs},slots:{0:He}});Object.assign(He,{structure:S});Object.assign(he,{structure:i,memory:{array:vs},slots:{0:Je}});Object.assign(Je,{structure:g,memory:{array:Es}});Object.assign(de,{structure:i,memory:{array:xs},slots:{0:Ne}});Object.assign(Ne,{structure:g,memory:{array:Cs}});Object.assign(we,{structure:i,memory:{array:Ks},slots:{0:Qe}});Object.assign(Qe,{structure:g,memory:{array:_s}});Object.assign(We,{slots:{0:Ae,1:Ue}});Object.assign(Ae,{structure:H,memory:{array:Ds},slots:{0:fe,1:Oe,2:Se,3:ze}});Object.assign(Ue,{structure:J,memory:{array:Fs},slots:{0:je,1:he,2:de,3:we}});Object.assign(Xe,{slots:{0:re}});Object.assign(re,{structure:b,memory:{array:Ms},slots:{0:Ye}});Object.assign(Ye,{structure:O,memory:{array:Ts}});Object.assign(Ze,{slots:{0:Pe}});Object.assign(Pe,{structure:w,memory:{array:$s},slots:{0:re}});Object.assign(et,{slots:{0:Ve}});Object.assign(Ve,{structure:w,memory:{array:Ls},slots:{0:re}});Object.assign(tt,{slots:{0:st,1:at,2:it,3:ct,4:mt,5:yt,6:bt}});Object.assign(st,{structure:F,memory:{array:Bs},slots:{0:rt}});Object.assign(rt,{structure:D,memory:{array:Gs},reloc:16781378,const:!0});Object.assign(at,{structure:T,memory:{array:Hs},slots:{0:nt}});Object.assign(nt,{structure:M,memory:{array:Js},reloc:16781411,const:!0});Object.assign(it,{structure:b,memory:{array:Ns},slots:{0:ot}});Object.assign(ot,{structure:O,memory:{array:Qs}});Object.assign(ct,{structure:L,memory:{array:Ws},slots:{0:ut}});Object.assign(ut,{structure:$,memory:{array:Xs},reloc:16781438,const:!0});Object.assign(mt,{structure:N,memory:{array:Ys},slots:{0:Ae,1:Ue}});Object.assign(yt,{structure:Q,memory:{array:Zs},slots:{0:Pe}});Object.assign(bt,{structure:W,memory:{array:er},slots:{0:Ve}});Object.assign(lt,{slots:{0:gt,1:pt}});Object.assign(gt,{structure:p,memory:{array:tr}});Object.assign(pt,{structure:p,memory:{array:sr}});Object.assign(ft,{memory:{array:Nt},slots:{0:Ot}});Object.assign(Ot,{structure:R,memory:{array:Nt,offset:0,length:8},slots:{0:Ie}});Object.assign(Ie,{structure:X,memory:{array:rr},reloc:0,const:!0});Object.assign(St,{slots:{0:zt,1:jt,2:ht}});Object.assign(zt,{structure:s,memory:{array:ar},slots:{0:Re}});Object.assign(Re,{structure:I});Object.assign(jt,{structure:s,memory:{array:nr},slots:{0:ke}});Object.assign(ke,{structure:ce});Object.assign(ht,{structure:b,memory:{array:ir},slots:{0:dt}});Object.assign(dt,{structure:O,memory:{array:or}});Object.assign(wt,{memory:{array:Ee},slots:{0:At}});Object.assign(At,{structure:Y,memory:{array:Ee},slots:{0:Ut}});Object.assign(Ut,{structure:R,memory:{array:Ee,offset:0,length:8},slots:{0:Ie}});Object.assign(Pt,{memory:{array:Qt},slots:{0:Vt}});Object.assign(Vt,{structure:q,memory:{array:Qt,offset:0,length:8},slots:{0:qe}});Object.assign(qe,{structure:Z,memory:{array:cr},reloc:0});Object.assign(It,{slots:{0:Rt,1:kt,2:qt}});Object.assign(Rt,{structure:s,memory:{array:ur},slots:{0:Re}});Object.assign(kt,{structure:s,memory:{array:mr},slots:{0:ke}});Object.assign(qt,{structure:b,memory:{array:yr},slots:{0:vt}});Object.assign(vt,{structure:O,memory:{array:br}});Object.assign(Et,{memory:{array:xe},slots:{0:xt}});Object.assign(xt,{structure:ee,memory:{array:xe},slots:{0:Ct}});Object.assign(Ct,{structure:q,memory:{array:xe,offset:0,length:8},slots:{0:qe}});Object.assign(Kt,{memory:{array:lr}});Object.assign(_t,{slots:{0:ve}});Object.assign(ve,{structure:V,memory:{array:gr}});Object.assign(Dt,{slots:{0:ve}});Object.assign(Ft,{slots:{0:Mt,1:$t,2:Bt,3:Ht}});Object.assign(Mt,{structure:s,memory:{array:pr},slots:{0:Tt}});Object.assign(Tt,{structure:oe});Object.assign($t,{structure:s,memory:{array:fr},slots:{0:Lt}});Object.assign(Lt,{structure:k});Object.assign(Bt,{structure:s,memory:{array:Or},slots:{0:Gt}});Object.assign(Gt,{structure:v});Object.assign(Ht,{structure:s,memory:{array:Sr},slots:{0:Jt}});Object.assign(Jt,{structure:E});const zr={argStruct:me,thunkId:2,name:"createOutput"},jr={argStruct:be,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...t,name:"type",align:1,instance:{members:[{...e,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(f,{...t,name:"u8",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(D,{...t,type:1,name:"[21:0]u8",length:21,byteSize:22,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(F,{...t,type:13,name:"*const [21:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:D}],methods:[]}});Object.assign(M,{...t,type:1,name:"[9:0]u8",length:9,byteSize:10,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(T,{...t,type:13,name:"*const [9:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(b,{...t,name:"comptime_int",align:1,instance:{members:[{...e,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:b}],methods:[]}});Object.assign(O,{...t,name:"i8",byteSize:1,align:1,instance:{members:[{...e,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign($,{...t,type:1,name:"[5:0]u8",length:5,byteSize:6,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(L,{...t,type:13,name:"*const [5:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[]}});Object.assign(i,{...t,name:"comptime_float",align:1,instance:{members:[{...e,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:i}],methods:[]}});Object.assign(g,{...t,name:"f64",byteSize:8,align:8,instance:{members:[{...e,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:g}],methods:[]}});Object.assign(d,{...t,type:2,name:"Struct738220547",align:1,instance:{members:[{...e,type:9,slot:0,name:"0",structure:i},{...e,type:9,slot:1,name:"1",structure:i}],methods:[],template:_e}});Object.assign(B,{...t,type:2,name:"Struct2662133551",align:1,instance:{members:[{...e,type:9,slot:0,name:"0",structure:i},{...e,type:9,slot:1,name:"1",structure:i}],methods:[],template:Me}});Object.assign(S,{...t,name:"f32",byteSize:4,align:4,instance:{members:[{...e,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(G,{...t,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...e,type:4,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(H,{...t,type:2,name:"Struct2812903031",align:1,instance:{members:[{...e,type:9,slot:0,name:"type",structure:s},{...e,type:9,slot:1,name:"minValue",structure:d},{...e,type:9,slot:2,name:"maxValue",structure:B},{...e,type:9,slot:3,name:"defaultValue",structure:d}],methods:[],template:Le}});Object.assign(J,{...t,type:2,name:"Struct1456730841",align:1,instance:{members:[{...e,type:9,slot:0,name:"type",structure:s},{...e,type:9,slot:1,name:"minValue",structure:i},{...e,type:9,slot:2,name:"maxValue",structure:i},{...e,type:9,slot:3,name:"defaultValue",structure:i}],methods:[],template:Ge}});Object.assign(N,{...t,type:2,name:"Struct2535699999",align:1,instance:{members:[{...e,type:9,slot:0,name:"center",structure:H},{...e,type:9,slot:1,name:"amplitude",structure:J}],methods:[],template:We}});Object.assign(w,{...t,type:2,name:"Struct3832472641",align:1,instance:{members:[{...e,type:9,slot:0,name:"channels",structure:b}],methods:[],template:Xe}});Object.assign(Q,{...t,type:2,name:"Struct2242867897",align:1,instance:{members:[{...e,type:9,slot:0,name:"src",structure:w}],methods:[],template:Ze}});Object.assign(W,{...t,type:2,name:"Struct172100005",align:1,instance:{members:[{...e,type:9,slot:0,name:"dst",structure:w}],methods:[],template:et}});Object.assign(oe,{...t,type:2,name:"bulge.kernel",align:1,static:{members:[{...e,type:9,slot:0,name:"namespace",structure:F},{...e,type:9,slot:1,name:"vendor",structure:T},{...e,type:9,slot:2,name:"version",structure:b},{...e,type:9,slot:3,name:"description",structure:L},{...e,type:9,slot:4,name:"parameters",structure:N},{...e,type:9,slot:5,name:"inputImages",structure:Q},{...e,type:9,slot:6,name:"outputImages",structure:W}],methods:[],template:tt}});Object.assign(I,{...t,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(X,{...t,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(R,{...t,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:64,byteSize:8,slot:0,structure:X}],methods:[]}});Object.assign(m,{...t,name:"u32",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[]}});Object.assign(p,{...t,type:11,name:"bulge.ColorSpace",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"srgb",structure:p},{...e,type:9,slot:1,name:"display-p3",structure:p}],methods:[],template:lt}});Object.assign(P,{...t,name:"usize",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(ce,{...t,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...e,type:4,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(Y,{...t,type:2,name:"bulge.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:R},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:ft},static:{members:[{...e,type:9,slot:0,name:"Pixel",structure:s},{...e,type:9,slot:1,name:"FPixel",structure:s},{...e,type:9,slot:2,name:"channels",structure:b}],methods:[],template:St}});Object.assign(k,{...t,type:2,name:"bulge.KernelInput(u8,bulge.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:Y}],methods:[],template:wt}});Object.assign(Z,{...t,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(q,{...t,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:64,byteSize:8,slot:0,structure:Z}],methods:[]}});Object.assign(ee,{...t,type:2,name:"bulge.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:q},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:Pt},static:{members:[{...e,type:9,slot:0,name:"Pixel",structure:s},{...e,type:9,slot:1,name:"FPixel",structure:s},{...e,type:9,slot:2,name:"channels",structure:b}],methods:[],template:It}});Object.assign(v,{...t,type:2,name:"bulge.KernelOutput(u8,bulge.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:ee}],methods:[],template:Et}});Object.assign(E,{...t,type:2,name:"bulge.KernelParameters(bulge.kernel)",byteSize:16,align:8,instance:{members:[{...e,type:7,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"center",structure:G},{...e,type:4,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"amplitude",structure:S}],methods:[],template:Kt}});Object.assign(V,{...t,type:10,name:"@typeInfo(@typeInfo(@TypeOf(bulge.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"OutOfMemory",structure:V}],methods:[],template:_t}});Object.assign(ue,{...t,type:9,name:"ErrorSet1060765428!bulge.KernelOutput(u8,bulge.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...e,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:V}],methods:[]}});Object.assign(me,{...t,type:5,name:"createOutput",byteSize:80,align:8,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...e,type:3,isRequired:!0,bitOffset:160,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...e,type:7,isRequired:!0,bitOffset:192,bitSize:192,byteSize:24,slot:0,name:"2",structure:k},{...e,type:7,isRequired:!0,bitOffset:0,bitSize:128,byteSize:16,slot:1,name:"3",structure:E},{...e,type:7,isRequired:!0,bitOffset:384,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ue}],methods:[]}});Object.assign(_,{...t,type:10,name:"@typeInfo(@typeInfo(@TypeOf(bulge.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"OutOfMemory",structure:_}],methods:[],template:Dt}});Object.assign(ye,{...t,type:9,name:"ErrorSet3674421932!bulge.KernelOutput(u8,bulge.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...e,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:_}],methods:[]}});Object.assign(be,{...t,type:5,name:"createPartialOutput",byteSize:88,align:8,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...e,type:3,isRequired:!0,bitOffset:160,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...e,type:3,isRequired:!0,bitOffset:192,bitSize:32,byteSize:4,slot:5,name:"2",structure:m},{...e,type:3,isRequired:!0,bitOffset:224,bitSize:32,byteSize:4,slot:6,name:"3",structure:m},{...e,type:7,isRequired:!0,bitOffset:256,bitSize:192,byteSize:24,slot:0,name:"4",structure:k},{...e,type:7,isRequired:!0,bitOffset:0,bitSize:128,byteSize:16,slot:1,name:"5",structure:E},{...e,type:7,isRequired:!0,bitOffset:448,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ye}],methods:[]}});Object.assign(le,{...t,type:2,name:"bulge",align:1,static:{members:[{...e,type:9,slot:0,name:"kernel",structure:s},{...e,type:9,slot:1,name:"Input",structure:s},{...e,type:9,slot:2,name:"Output",structure:s},{...e,type:9,slot:3,name:"Parameters",structure:s}],methods:[zr,jr],template:Ft}});const hr=[s,f,D,F,M,T,b,O,$,L,i,g,d,B,S,G,H,J,N,w,Q,W,oe,I,X,R,m,p,P,ce,Y,k,Z,q,ee,v,E,V,ue,me,_,ye,be,le],dr=le,wr={runtimeSafety:!1,littleEndian:!0},ae=Os();ae.getControlObject();ae.recreateStructures(hr,wr);const Ar=(async()=>{const o=new URL("bulge-84eb866b.wasm",import.meta.url).href;return fetch(o)})();ae.loadModule(Ar);ae.linkVariables(!0);const{constructor:Ur}=dr,{createPartialOutput:Pr,Input:Vr,kernel:ie}=Ur;function Ir(o,c,a,r,n={},z={}){const j=[];for(const[y]of ie.inputImages)j.push(y);const A=[];for(const[y]of ie.outputImages)A.push(y);if(Array.isArray(n)){const y=n;n={};for(const[l,h]of j.entries())n[h]=y[l]}const u=new Vr(void 0),x=[];let U;for(const y of j){let l=n[y];if(l||(j.length===1&&["data","width","height"].every(h=>!!n[h])?l=n:x.push(y)),u[y]=l,U){if(l.colorSpace!==U)throw new Error(`Input images must all use the same color space: ${U}`)}else U=l.colorSpace}if(x.length>0)throw new Error(`Missing input image${x.length>1?"s":""}: ${x.join(", ")}`);const ne=Pr(o,c,a,r,u,z),Ce=y=>{const l={};for(const h of A){const{data:{typedArray:C},width:Ke,height:Xt}=y[h];let K;if(typeof ImageData=="function"){const Yt=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);K=new ImageData(Yt,Ke,r,{colorSpace:U})}else K={data:C,width:Ke,height:Xt};if(A.length===1)return K;l[h]=K}return l};return ne[Symbol.toStringTag]==="Promise"?ne.then(Ce):Ce(ne)}function Rr(){const o={};for(let[c,a]of ie){if(c==="parameters"){const r={};for(const[n,z]of a){const j=r[n]={};for(let[A,u]of z)typeof u=="object"?"string"in u?u=u.string:u=Wt(u):typeof u=="function"&&(u=kr(u.name)),j[A]=u}a=r}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());o[c]=a}return o}function Wt(o){const c=[];for(let[a,r]of o)typeof r=="object"&&(r=Wt(r)),c[a]=r;return c}function kr(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[c,a,...r]=o.data;qr(c,r).then(([n,z])=>{postMessage([c,a,n],{transfer:z})}).catch(n=>{postMessage(["error",a,n])})};async function qr(o,c){switch(o){case"getKernelInfo":return[Rr(...c)];case"createPartialImageData":const r=await Ir(...c),n=[];if("data"in r&&"width"in r&&"height"in r)n.push(r.data.buffer);else for(const z of Object.entries(r))n.push(r.data.buffer);return[r,n];default:throw new Error(`Unknown function: ${o}`)}}
