import{u as Jr,a as Nr,b as Qr,c as Wr,d as Xr,e as Yr,f as Zr,g as tn,h as en,i as sn,j as rn,k as nn,l as an,m as on,n as cn,o as un,p as mn,q as yn}from"./index-67c7daa1.js";Jr();nn();an();Nr();Qr();on();cn();un();mn();Wr();Xr();Yr();Zr();yn();tn();en();sn();const s={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},n={},S={},D={},M={},F={},_={},m={},j={},$={},L={},e={},r={},B={},p={},f={},G={},H={},J={},N={},Q={},W={},X={},Y={},Z={},tt={},et={},st={},rt={},nt={},at={},ot={},ct={},ut={},it={},mt={},yt={},bt={},wt={},R={},lt={},k={},i={},O={},x={},gt={},q={},pt={},I={},At={},Ot={},v={},C={},d={},dt={},Ut={},U={},ht={},Vt={},Pt={},Le={},xt={},Be={},Rt={},Ge={},kt={},He={},Je={},qt={},h={},It={},Ne={},vt={},Qe={},Ct={},We={},Et={},Xe={},Ye={},Tt={},Kt={},Ze={},Dt={},ts={},Mt={},es={},Ft={},ss={},rs={},_t={},$t={},ns={},Lt={},as={},Bt={},os={},cs={},Gt={},us={},Ht={},is={},ms={},Jt={},ys={},Nt={},bs={},ls={},Qt={},gs={},Wt={},Xt={},Yt={},ps={},Zt={},Os={},te={},js={},ee={},fs={},Ss={},se={},zs={},re={},ws={},ne={},As={},ds={},ae={},Us={},oe={},hs={},ce={},Vs={},Ps={},ue={},ie={},me={},ye={},xs={},be={},jt={},le={},Rs={},ge={},ks={},pe={},qs={},Is={},Oe={},je={},vs={},fe={},Cs={},Se={},Es={},Ts={},ze={},we={},Ks={},Ae={},Ds={},de={},Ms={},Fs={},Ue={},he={},Ve={},Pe={},xe={},Re={},ke={},qe={},_s={},Ie={},$s={},Ls={},ve={},Bs={},Ce={},Gs={},Hs={},Ee={},Js={},Ns={},Qs={},Ws={},Xs={},Ys={},Zs={},tr={},er={},sr={},rr={},nr={},ar={},or={},cr={},ur={},ir={},Te={},mr={},yr={},Ke={},br={},lr={},gr={},pr={},Or={},jr={},fr={},Sr={},De={},zr={},wr={},Ar={},dr={},Ur={},hr={},Vr={},Pr={},xr={},Rr={},kr={},qr={},Ir={},vr={},Cr={},Er={},Tr={},Kr={},Dr={},Mr={},Fr={},_r={},$r={},bn=new Uint8Array,ln=new Uint8Array([0,0,0,0,0,0,240,63]),gn=new Uint8Array,pn=new Uint8Array([51,51,51,51,51,51,211,63]),On=new Uint8Array,jn=new Uint8Array([154,153,153,153,153,153,217,63]),fn=new Uint8Array,Sn=new Uint8Array,zn=new Uint8Array,wn=new Uint8Array([51,51,51,51,51,51,211,63]),An=new Uint8Array,dn=new Uint8Array([154,153,153,153,153,153,233,63]),Un=new Uint8Array,hn=new Uint8Array([154,153,153,153,153,153,217,63]),Vn=new Uint8Array,Pn=new Uint8Array,xn=new Uint8Array,Rn=new Uint8Array([154,153,153,153,153,153,185,63]),kn=new Uint8Array,qn=new Uint8Array([51,51,51,51,51,51,211,63]),In=new Uint8Array,vn=new Uint8Array([0,0,0,0,0,0,240,63]),Cn=new Uint8Array,En=new Uint8Array,Tn=new Uint8Array,Kn=new Uint8Array([0,0,0,0,0,0,0,0]),Dn=new Uint8Array,Mn=new Uint8Array([0,0,0,0,0,0,0,0]),Fn=new Uint8Array,_n=new Uint8Array([0,0,0,0,0,0,137,64]),$n=new Uint8Array,Ln=new Uint8Array([0,0,0,0,0,0,137,64]),Bn=new Uint8Array,Gn=new Uint8Array([0,0,0,0,0,192,114,64]),Hn=new Uint8Array,Jn=new Uint8Array([0,0,0,0,0,192,114,64]),Nn=new Uint8Array,Qn=new Uint8Array,Wn=new Uint8Array,Xn=new Uint8Array,Yn=new Uint8Array,Zn=new Uint8Array([0,0,0,0,0,0,36,192]),ta=new Uint8Array,ea=new Uint8Array([0,0,0,0,0,0,36,192]),sa=new Uint8Array,ra=new Uint8Array([0,0,0,0,0,0,36,192]),na=new Uint8Array,aa=new Uint8Array([0,0,0,0,0,0,36,64]),oa=new Uint8Array,ca=new Uint8Array([0,0,0,0,0,0,36,64]),ua=new Uint8Array,ia=new Uint8Array([0,0,0,0,0,0,36,64]),ma=new Uint8Array,ya=new Uint8Array([154,153,153,153,153,153,185,63]),ba=new Uint8Array,la=new Uint8Array([123,20,174,71,225,122,148,63]),ga=new Uint8Array,pa=new Uint8Array([51,51,51,51,51,51,211,63]),Oa=new Uint8Array,ja=new Uint8Array,fa=new Uint8Array,Sa=new Uint8Array,za=new Uint8Array,wa=new Uint8Array,Aa=new Uint8Array([0,0,0,0,0,0,0,0]),da=new Uint8Array,Ua=new Uint8Array([0,0,0,0,0,0,52,64]),ha=new Uint8Array,Va=new Uint8Array([0,0,0,0,0,0,0,0]),Pa=new Uint8Array,xa=new Uint8Array,Ra=new Uint8Array([123,20,174,71,225,122,116,63]),ka=new Uint8Array,qa=new Uint8Array([154,153,153,153,153,153,185,63]),Ia=new Uint8Array,va=new Uint8Array([184,30,133,235,81,184,158,63]),Ca=new Uint8Array,Ea=new Uint8Array,Ta=new Uint8Array([0,0,0,0,0,0,20,64]),Ka=new Uint8Array,Da=new Uint8Array([0,0,0,0,0,0,105,64]),Ma=new Uint8Array,Fa=new Uint8Array([0,0,0,0,0,0,89,64]),_a=new Uint8Array,$a=new Uint8Array,La=new Uint8Array,Ba=new Uint8Array,Ga=new Uint8Array,Ha=new Uint8Array,Ja=new Uint8Array,Na=new Uint8Array,Qa=new Uint8Array,Wa=new Uint8Array([3]),Xa=new Uint8Array,Ya=new Uint8Array,Za=new Uint8Array([4]),to=new Uint8Array,eo=new Uint8Array([16,16,0,1]),so=new Uint8Array([65,73,70,0]),ro=new Uint8Array([31,16,0,1]),no=new Uint8Array([111,109,105,110,111,46,99,111,109,0]),ao=new Uint8Array,oo=new Uint8Array([2]),co=new Uint8Array([58,16,0,1]),uo=new Uint8Array([115,112,104,101,114,101,115,101,99,116,105,111,110,0]),io=new Uint8Array,mo=new Uint8Array,yo=new Uint8Array,bo=new Uint8Array([0]),lo=new Uint8Array([1]),Lr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),go=new Uint8Array,po=new Uint8Array,Oo=new Uint8Array,jo=new Uint8Array,fo=new Uint8Array([3]),Me=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Br=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),So=new Uint8Array,zo=new Uint8Array,wo=new Uint8Array,Ao=new Uint8Array,Uo=new Uint8Array([4]),Fe=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ho=new Uint8Array([0,0,128,63,154,153,153,62,205,204,204,62,0,0,0,0,154,153,153,62,205,204,76,63,205,204,204,62,0,0,0,0,205,204,204,61,154,153,153,62,0,0,128,63,0,0,0,0,205,204,204,61,10,215,163,60,154,153,153,62,0,0,0,0,0,0,150,67,0,0,150,67,0,0,0,0,143,194,245,60,0,0,200,66,0,0,0,0,0,0,0,0,0,0,0,0]),Vo=new Uint8Array([27,0]),Po=new Uint8Array([27,0]),xo=new Uint8Array,Ro=new Uint8Array,ko=new Uint8Array,qo=new Uint8Array;Object.assign(Le,{slots:{0:xt,1:Rt,2:kt}});Object.assign(xt,{structure:e,memory:{array:bn},const:!0,slots:{0:Be}});Object.assign(Be,{structure:r,memory:{array:ln},const:!0});Object.assign(Rt,{structure:e,memory:{array:gn},const:!0,slots:{0:Ge}});Object.assign(Ge,{structure:r,memory:{array:pn},const:!0});Object.assign(kt,{structure:e,memory:{array:On},const:!0,slots:{0:He}});Object.assign(He,{structure:r,memory:{array:jn},const:!0});Object.assign(Je,{slots:{0:qt,1:It}});Object.assign(qt,{structure:n,memory:{array:fn},const:!0,slots:{0:h}});Object.assign(h,{structure:f});Object.assign(It,{structure:B,memory:{array:Sn},const:!0,slots:{0:xt,1:Rt,2:kt}});Object.assign(Ne,{slots:{0:vt,1:Ct,2:Et}});Object.assign(vt,{structure:e,memory:{array:zn},const:!0,slots:{0:Qe}});Object.assign(Qe,{structure:r,memory:{array:wn},const:!0});Object.assign(Ct,{structure:e,memory:{array:An},const:!0,slots:{0:We}});Object.assign(We,{structure:r,memory:{array:dn},const:!0});Object.assign(Et,{structure:e,memory:{array:Un},const:!0,slots:{0:Xe}});Object.assign(Xe,{structure:r,memory:{array:hn},const:!0});Object.assign(Ye,{slots:{0:Tt,1:Kt}});Object.assign(Tt,{structure:n,memory:{array:Vn},const:!0,slots:{0:h}});Object.assign(Kt,{structure:H,memory:{array:Pn},const:!0,slots:{0:vt,1:Ct,2:Et}});Object.assign(Ze,{slots:{0:Dt,1:Mt,2:Ft}});Object.assign(Dt,{structure:e,memory:{array:xn},const:!0,slots:{0:ts}});Object.assign(ts,{structure:r,memory:{array:Rn},const:!0});Object.assign(Mt,{structure:e,memory:{array:kn},const:!0,slots:{0:es}});Object.assign(es,{structure:r,memory:{array:qn},const:!0});Object.assign(Ft,{structure:e,memory:{array:In},const:!0,slots:{0:ss}});Object.assign(ss,{structure:r,memory:{array:vn},const:!0});Object.assign(rs,{slots:{0:_t,1:$t}});Object.assign(_t,{structure:n,memory:{array:Cn},const:!0,slots:{0:h}});Object.assign($t,{structure:N,memory:{array:En},const:!0,slots:{0:Dt,1:Mt,2:Ft}});Object.assign(ns,{slots:{0:Lt,1:Bt}});Object.assign(Lt,{structure:e,memory:{array:Tn},const:!0,slots:{0:as}});Object.assign(as,{structure:r,memory:{array:Kn},const:!0});Object.assign(Bt,{structure:e,memory:{array:Dn},const:!0,slots:{0:os}});Object.assign(os,{structure:r,memory:{array:Mn},const:!0});Object.assign(cs,{slots:{0:Gt,1:Ht}});Object.assign(Gt,{structure:e,memory:{array:Fn},const:!0,slots:{0:us}});Object.assign(us,{structure:r,memory:{array:_n},const:!0});Object.assign(Ht,{structure:e,memory:{array:$n},const:!0,slots:{0:is}});Object.assign(is,{structure:r,memory:{array:Ln},const:!0});Object.assign(ms,{slots:{0:Jt,1:Nt}});Object.assign(Jt,{structure:e,memory:{array:Bn},const:!0,slots:{0:ys}});Object.assign(ys,{structure:r,memory:{array:Gn},const:!0});Object.assign(Nt,{structure:e,memory:{array:Hn},const:!0,slots:{0:bs}});Object.assign(bs,{structure:r,memory:{array:Jn},const:!0});Object.assign(ls,{slots:{0:Qt,1:Wt,2:Xt,3:Yt}});Object.assign(Qt,{structure:n,memory:{array:Nn},const:!0,slots:{0:gs}});Object.assign(gs,{structure:Z});Object.assign(Wt,{structure:W,memory:{array:Qn},const:!0,slots:{0:Lt,1:Bt}});Object.assign(Xt,{structure:X,memory:{array:Wn},const:!0,slots:{0:Gt,1:Ht}});Object.assign(Yt,{structure:Y,memory:{array:Xn},const:!0,slots:{0:Jt,1:Nt}});Object.assign(ps,{slots:{0:Zt,1:te,2:ee}});Object.assign(Zt,{structure:e,memory:{array:Yn},const:!0,slots:{0:Os}});Object.assign(Os,{structure:r,memory:{array:Zn},const:!0});Object.assign(te,{structure:e,memory:{array:ta},const:!0,slots:{0:js}});Object.assign(js,{structure:r,memory:{array:ea},const:!0});Object.assign(ee,{structure:e,memory:{array:sa},const:!0,slots:{0:fs}});Object.assign(fs,{structure:r,memory:{array:ra},const:!0});Object.assign(Ss,{slots:{0:se,1:re,2:ne}});Object.assign(se,{structure:e,memory:{array:na},const:!0,slots:{0:zs}});Object.assign(zs,{structure:r,memory:{array:aa},const:!0});Object.assign(re,{structure:e,memory:{array:oa},const:!0,slots:{0:ws}});Object.assign(ws,{structure:r,memory:{array:ca},const:!0});Object.assign(ne,{structure:e,memory:{array:ua},const:!0,slots:{0:As}});Object.assign(As,{structure:r,memory:{array:ia},const:!0});Object.assign(ds,{slots:{0:ae,1:oe,2:ce}});Object.assign(ae,{structure:e,memory:{array:ma},const:!0,slots:{0:Us}});Object.assign(Us,{structure:r,memory:{array:ya},const:!0});Object.assign(oe,{structure:e,memory:{array:ba},const:!0,slots:{0:hs}});Object.assign(hs,{structure:r,memory:{array:la},const:!0});Object.assign(ce,{structure:e,memory:{array:ga},const:!0,slots:{0:Vs}});Object.assign(Vs,{structure:r,memory:{array:pa},const:!0});Object.assign(Ps,{slots:{0:ue,1:ie,2:me,3:ye}});Object.assign(ue,{structure:n,memory:{array:Oa},const:!0,slots:{0:h}});Object.assign(ie,{structure:et,memory:{array:ja},const:!0,slots:{0:Zt,1:te,2:ee}});Object.assign(me,{structure:st,memory:{array:fa},const:!0,slots:{0:se,1:re,2:ne}});Object.assign(ye,{structure:rt,memory:{array:Sa},const:!0,slots:{0:ae,1:oe,2:ce}});Object.assign(xs,{slots:{0:be,1:le,2:ge,3:pe}});Object.assign(be,{structure:n,memory:{array:za},const:!0,slots:{0:jt}});Object.assign(jt,{structure:p});Object.assign(le,{structure:e,memory:{array:wa},const:!0,slots:{0:Rs}});Object.assign(Rs,{structure:r,memory:{array:Aa},const:!0});Object.assign(ge,{structure:e,memory:{array:da},const:!0,slots:{0:ks}});Object.assign(ks,{structure:r,memory:{array:Ua},const:!0});Object.assign(pe,{structure:e,memory:{array:ha},const:!0,slots:{0:qs}});Object.assign(qs,{structure:r,memory:{array:Va},const:!0});Object.assign(Is,{slots:{0:Oe,1:je,2:fe,3:Se}});Object.assign(Oe,{structure:n,memory:{array:Pa},const:!0,slots:{0:jt}});Object.assign(je,{structure:e,memory:{array:xa},const:!0,slots:{0:vs}});Object.assign(vs,{structure:r,memory:{array:Ra},const:!0});Object.assign(fe,{structure:e,memory:{array:ka},const:!0,slots:{0:Cs}});Object.assign(Cs,{structure:r,memory:{array:qa},const:!0});Object.assign(Se,{structure:e,memory:{array:Ia},const:!0,slots:{0:Es}});Object.assign(Es,{structure:r,memory:{array:va},const:!0});Object.assign(Ts,{slots:{0:ze,1:we,2:Ae,3:de}});Object.assign(ze,{structure:n,memory:{array:Ca},const:!0,slots:{0:jt}});Object.assign(we,{structure:e,memory:{array:Ea},const:!0,slots:{0:Ks}});Object.assign(Ks,{structure:r,memory:{array:Ta},const:!0});Object.assign(Ae,{structure:e,memory:{array:Ka},const:!0,slots:{0:Ds}});Object.assign(Ds,{structure:r,memory:{array:Da},const:!0});Object.assign(de,{structure:e,memory:{array:Ma},const:!0,slots:{0:Ms}});Object.assign(Ms,{structure:r,memory:{array:Fa},const:!0});Object.assign(Fs,{slots:{0:Ue,1:he,2:Ve,3:Pe,4:xe,5:Re,6:ke,7:qe}});Object.assign(Ue,{structure:G,memory:{array:_a},const:!0,slots:{0:qt,1:It}});Object.assign(he,{structure:J,memory:{array:$a},const:!0,slots:{0:Tt,1:Kt}});Object.assign(Ve,{structure:Q,memory:{array:La},const:!0,slots:{0:_t,1:$t}});Object.assign(Pe,{structure:tt,memory:{array:Ba},const:!0,slots:{0:Qt,1:Wt,2:Xt,3:Yt}});Object.assign(xe,{structure:nt,memory:{array:Ga},const:!0,slots:{0:ue,1:ie,2:me,3:ye}});Object.assign(Re,{structure:at,memory:{array:Ha},const:!0,slots:{0:be,1:le,2:ge,3:pe}});Object.assign(ke,{structure:ot,memory:{array:Ja},const:!0,slots:{0:Oe,1:je,2:fe,3:Se}});Object.assign(qe,{structure:ct,memory:{array:Na},const:!0,slots:{0:ze,1:we,2:Ae,3:de}});Object.assign(_s,{slots:{0:Ie}});Object.assign(Ie,{structure:m,memory:{array:Qa},const:!0,slots:{0:$s}});Object.assign($s,{structure:j,memory:{array:Wa},const:!0});Object.assign(Ls,{slots:{0:ve}});Object.assign(ve,{structure:it,memory:{array:Xa},const:!0,slots:{0:Ie}});Object.assign(Bs,{slots:{0:Ce}});Object.assign(Ce,{structure:m,memory:{array:Ya},const:!0,slots:{0:Gs}});Object.assign(Gs,{structure:j,memory:{array:Za},const:!0});Object.assign(Hs,{slots:{0:Ee}});Object.assign(Ee,{structure:yt,memory:{array:to},const:!0,slots:{0:Ce}});Object.assign(Js,{slots:{0:Ns,1:Ws,2:Ys,3:tr,4:sr,5:rr,6:nr}});Object.assign(Ns,{structure:M,memory:{array:eo},const:!0,slots:{0:Qs}});Object.assign(Qs,{structure:D,memory:{array:so},reloc:16781328});Object.assign(Ws,{structure:_,memory:{array:ro},const:!0,slots:{0:Xs}});Object.assign(Xs,{structure:F,memory:{array:no},reloc:16781343});Object.assign(Ys,{structure:m,memory:{array:ao},const:!0,slots:{0:Zs}});Object.assign(Zs,{structure:j,memory:{array:oo},const:!0});Object.assign(tr,{structure:L,memory:{array:co},const:!0,slots:{0:er}});Object.assign(er,{structure:$,memory:{array:uo},reloc:16781370});Object.assign(sr,{structure:ut,memory:{array:io},const:!0,slots:{0:Ue,1:he,2:Ve,3:Pe,4:xe,5:Re,6:ke,7:qe}});Object.assign(rr,{structure:mt,memory:{array:mo},const:!0,slots:{0:ve}});Object.assign(nr,{structure:bt,memory:{array:yo},const:!0,slots:{0:Ee}});Object.assign(ar,{slots:{0:or,1:cr}});Object.assign(or,{structure:O,memory:{array:bo},const:!0});Object.assign(cr,{structure:O,memory:{array:lo},const:!0});Object.assign(ur,{memory:{array:Lr},slots:{0:ir}});Object.assign(ir,{structure:k,memory:{array:Lr,offset:0,length:8},slots:{0:Te}});Object.assign(Te,{structure:lt,memory:{array:go},reloc:0});Object.assign(mr,{slots:{0:yr,1:br,2:lr}});Object.assign(yr,{structure:n,memory:{array:po},const:!0,slots:{0:Ke}});Object.assign(Ke,{structure:R});Object.assign(br,{structure:n,memory:{array:Oo},const:!0,slots:{0:h}});Object.assign(lr,{structure:m,memory:{array:jo},const:!0,slots:{0:gr}});Object.assign(gr,{structure:j,memory:{array:fo},const:!0});Object.assign(pr,{memory:{array:Me},slots:{0:Or}});Object.assign(Or,{structure:gt,memory:{array:Me},slots:{0:jr}});Object.assign(jr,{structure:k,memory:{array:Me,offset:0,length:8},slots:{0:Te}});Object.assign(fr,{memory:{array:Br},slots:{0:Sr}});Object.assign(Sr,{structure:I,memory:{array:Br,offset:0,length:8},slots:{0:De}});Object.assign(De,{structure:pt,memory:{array:So},reloc:0});Object.assign(zr,{slots:{0:wr,1:Ar,2:Ur}});Object.assign(wr,{structure:n,memory:{array:zo},const:!0,slots:{0:Ke}});Object.assign(Ar,{structure:n,memory:{array:wo},const:!0,slots:{0:dr}});Object.assign(dr,{structure:At});Object.assign(Ur,{structure:m,memory:{array:Ao},const:!0,slots:{0:hr}});Object.assign(hr,{structure:j,memory:{array:Uo},const:!0});Object.assign(Vr,{memory:{array:Fe},slots:{0:Pr}});Object.assign(Pr,{structure:Ot,memory:{array:Fe},slots:{0:xr}});Object.assign(xr,{structure:I,memory:{array:Fe,offset:0,length:8},slots:{0:De}});Object.assign(Rr,{memory:{array:ho}});Object.assign(kr,{slots:{0:qr}});Object.assign(qr,{structure:d,memory:{array:Vo},const:!0});Object.assign(Ir,{slots:{0:vr}});Object.assign(vr,{structure:U,memory:{array:Po},const:!0});Object.assign(Cr,{slots:{0:Er,1:Kr,2:Mr,3:_r}});Object.assign(Er,{structure:n,memory:{array:xo},const:!0,slots:{0:Tr}});Object.assign(Tr,{structure:wt});Object.assign(Kr,{structure:n,memory:{array:Ro},const:!0,slots:{0:Dr}});Object.assign(Dr,{structure:q});Object.assign(Mr,{structure:n,memory:{array:ko},const:!0,slots:{0:Fr}});Object.assign(Fr,{structure:v});Object.assign(_r,{structure:n,memory:{array:qo},const:!0,slots:{0:$r}});Object.assign($r,{structure:C});const Io={argStruct:Ut,thunkId:2,name:"createOutput"},vo={argStruct:Vt,thunkId:3,name:"createPartialOutput"};Object.assign(n,{...s,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:n}],methods:[]}});Object.assign(S,{...s,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(D,{...s,type:1,name:"[3:0]u8",length:3,byteSize:4,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(M,{...s,type:13,name:"*const [3:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:D}],methods:[]}});Object.assign(F,{...s,type:1,name:"[9:0]u8",length:9,byteSize:10,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(_,{...s,type:13,name:"*const [9:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(m,{...s,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:m}],methods:[]}});Object.assign(j,{...s,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:j}],methods:[]}});Object.assign($,{...s,type:1,name:"[13:0]u8",length:13,byteSize:14,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(L,{...s,type:13,name:"*const [13:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[]}});Object.assign(e,{...s,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:e}],methods:[]}});Object.assign(r,{...s,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[]}});Object.assign(B,{...s,type:2,name:"Struct2413995998",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e}],methods:[],template:Le}});Object.assign(p,{...s,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[]}});Object.assign(f,{...s,type:15,name:"@Vector(3, f32)",length:3,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:p}],methods:[]}});Object.assign(G,{...s,type:2,name:"Struct3339043447",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:n},{...t,type:7,slot:1,name:"defaultValue",structure:B}],methods:[],template:Je}});Object.assign(H,{...s,type:2,name:"Struct3364157651",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e}],methods:[],template:Ne}});Object.assign(J,{...s,type:2,name:"Struct1790493901",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:n},{...t,type:7,slot:1,name:"defaultValue",structure:H}],methods:[],template:Ye}});Object.assign(N,{...s,type:2,name:"Struct1971247637",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e}],methods:[],template:Ze}});Object.assign(Q,{...s,type:2,name:"Struct3044932212",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:n},{...t,type:7,slot:1,name:"defaultValue",structure:N}],methods:[],template:rs}});Object.assign(W,{...s,type:2,name:"Struct738220547",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:ns}});Object.assign(X,{...s,type:2,name:"Struct3183750520",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:cs}});Object.assign(Y,{...s,type:2,name:"Struct2270904247",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:ms}});Object.assign(Z,{...s,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:p}],methods:[]}});Object.assign(tt,{...s,type:2,name:"Struct2528517832",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:n},{...t,type:7,slot:1,name:"minValue",structure:W},{...t,type:7,slot:2,name:"maxValue",structure:X},{...t,type:7,slot:3,name:"defaultValue",structure:Y}],methods:[],template:ls}});Object.assign(et,{...s,type:2,name:"Struct2278674025",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e}],methods:[],template:ps}});Object.assign(st,{...s,type:2,name:"Struct2291667099",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e}],methods:[],template:Ss}});Object.assign(rt,{...s,type:2,name:"Struct3406025371",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e}],methods:[],template:ds}});Object.assign(nt,{...s,type:2,name:"Struct3588131750",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:n},{...t,type:7,slot:1,name:"minValue",structure:et},{...t,type:7,slot:2,name:"maxValue",structure:st},{...t,type:7,slot:3,name:"defaultValue",structure:rt}],methods:[],template:Ps}});Object.assign(at,{...s,type:2,name:"Struct1513800185",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:n},{...t,type:7,slot:1,name:"minValue",structure:e},{...t,type:7,slot:2,name:"maxValue",structure:e},{...t,type:7,slot:3,name:"defaultValue",structure:e}],methods:[],template:xs}});Object.assign(ot,{...s,type:2,name:"Struct2526775591",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:n},{...t,type:7,slot:1,name:"minValue",structure:e},{...t,type:7,slot:2,name:"maxValue",structure:e},{...t,type:7,slot:3,name:"defaultValue",structure:e}],methods:[],template:Is}});Object.assign(ct,{...s,type:2,name:"Struct1450688458",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:n},{...t,type:7,slot:1,name:"minValue",structure:e},{...t,type:7,slot:2,name:"maxValue",structure:e},{...t,type:7,slot:3,name:"defaultValue",structure:e}],methods:[],template:Ts}});Object.assign(ut,{...s,type:2,name:"Struct583201854",align:1,instance:{members:[{...t,type:7,slot:0,name:"xAxisColor",structure:G},{...t,type:7,slot:1,name:"yAxisColor",structure:J},{...t,type:7,slot:2,name:"zAxisColor",structure:Q},{...t,type:7,slot:3,name:"center",structure:tt},{...t,type:7,slot:4,name:"spin",structure:nt},{...t,type:7,slot:5,name:"plunge",structure:at},{...t,type:7,slot:6,name:"cellDensity",structure:ot},{...t,type:7,slot:7,name:"radius",structure:ct}],methods:[],template:Fs}});Object.assign(it,{...s,type:2,name:"Struct3196272719",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:m}],methods:[],template:_s}});Object.assign(mt,{...s,type:2,name:"Struct412823483",align:1,instance:{members:[{...t,type:7,slot:0,name:"unused",structure:it}],methods:[],template:Ls}});Object.assign(yt,{...s,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:m}],methods:[],template:Bs}});Object.assign(bt,{...s,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:yt}],methods:[],template:Hs}});Object.assign(wt,{...s,type:2,name:"cubes-03.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:M},{...t,type:7,slot:1,name:"vendor",structure:_},{...t,type:7,slot:2,name:"version",structure:m},{...t,type:7,slot:3,name:"description",structure:L},{...t,type:7,slot:4,name:"parameters",structure:ut},{...t,type:7,slot:5,name:"inputImages",structure:mt},{...t,type:7,slot:6,name:"outputImages",structure:bt}],methods:[],template:Js}});Object.assign(R,{...s,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(lt,{...s,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(k,{...s,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:lt}],methods:[]}});Object.assign(i,{...s,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:i}],methods:[]}});Object.assign(O,{...s,type:11,name:"cubes-03.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:O}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:O},{...t,type:7,slot:1,name:"display-p3",structure:O}],methods:[],template:ar}});Object.assign(x,{...s,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:x}],methods:[]}});Object.assign(gt,{...s,type:2,name:"cubes-03.Image(u8,3,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:k},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:i},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:i},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:x}],methods:[],template:ur},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:n},{...t,type:7,slot:1,name:"FPixel",structure:n},{...t,type:7,slot:2,name:"channels",structure:m}],methods:[],template:mr}});Object.assign(q,{...s,type:2,name:"cubes-03.KernelInput(u8,cubes-03.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"unused",structure:gt}],methods:[],template:pr}});Object.assign(pt,{...s,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(I,{...s,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:pt}],methods:[]}});Object.assign(At,{...s,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:p}],methods:[]}});Object.assign(Ot,{...s,type:2,name:"cubes-03.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:I},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:i},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:i},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:x}],methods:[],template:fr},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:n},{...t,type:7,slot:1,name:"FPixel",structure:n},{...t,type:7,slot:2,name:"channels",structure:m}],methods:[],template:zr}});Object.assign(v,{...s,type:2,name:"cubes-03.KernelOutput(u8,cubes-03.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:Ot}],methods:[],template:Vr}});Object.assign(C,{...s,type:2,name:"cubes-03.KernelParameters(cubes-03.kernel)",byteSize:96,align:16,instance:{members:[{...t,type:5,bitOffset:0,bitSize:96,byteSize:16,slot:0,name:"xAxisColor",structure:f},{...t,type:5,bitOffset:128,bitSize:96,byteSize:16,slot:1,name:"yAxisColor",structure:f},{...t,type:5,bitOffset:256,bitSize:96,byteSize:16,slot:2,name:"zAxisColor",structure:f},{...t,type:5,bitOffset:512,bitSize:64,byteSize:8,slot:3,name:"center",structure:Z},{...t,type:5,bitOffset:384,bitSize:96,byteSize:16,slot:4,name:"spin",structure:f},{...t,type:4,bitOffset:576,bitSize:32,byteSize:4,slot:5,name:"plunge",structure:p},{...t,type:4,bitOffset:608,bitSize:32,byteSize:4,slot:6,name:"cellDensity",structure:p},{...t,type:4,bitOffset:640,bitSize:32,byteSize:4,slot:7,name:"radius",structure:p}],methods:[],template:Rr}});Object.assign(d,{...s,type:10,name:"ErrorSet2391670188",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:d}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:d}],methods:[],template:kr}});Object.assign(dt,{...s,type:9,name:"ErrorSet2391670188!cubes-03.KernelOutput(u8,cubes-03.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:d}],methods:[]}});Object.assign(Ut,{...s,type:5,name:"createOutput",byteSize:160,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:768,bitSize:32,byteSize:4,slot:3,name:"0",structure:i},{...t,type:3,isRequired:!0,bitOffset:800,bitSize:32,byteSize:4,slot:4,name:"1",structure:i},{...t,type:5,isRequired:!0,bitOffset:832,bitSize:192,byteSize:24,slot:0,name:"2",structure:q},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:768,byteSize:96,slot:1,name:"3",structure:C},{...t,type:5,isRequired:!0,bitOffset:1024,bitSize:224,byteSize:28,slot:2,name:"retval",structure:dt}],methods:[]}});Object.assign(U,{...s,type:10,name:"ErrorSet1835158167",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:U}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:U}],methods:[],template:Ir}});Object.assign(ht,{...s,type:9,name:"ErrorSet1835158167!cubes-03.KernelOutput(u8,cubes-03.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:U}],methods:[]}});Object.assign(Vt,{...s,type:5,name:"createPartialOutput",byteSize:176,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:768,bitSize:32,byteSize:4,slot:3,name:"0",structure:i},{...t,type:3,isRequired:!0,bitOffset:800,bitSize:32,byteSize:4,slot:4,name:"1",structure:i},{...t,type:3,isRequired:!0,bitOffset:832,bitSize:32,byteSize:4,slot:5,name:"2",structure:i},{...t,type:3,isRequired:!0,bitOffset:864,bitSize:32,byteSize:4,slot:6,name:"3",structure:i},{...t,type:5,isRequired:!0,bitOffset:896,bitSize:192,byteSize:24,slot:0,name:"4",structure:q},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:768,byteSize:96,slot:1,name:"5",structure:C},{...t,type:5,isRequired:!0,bitOffset:1088,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ht}],methods:[]}});Object.assign(Pt,{...s,type:2,name:"cubes-03",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:n},{...t,type:7,slot:1,name:"Input",structure:n},{...t,type:7,slot:2,name:"Output",structure:n},{...t,type:7,slot:3,name:"Parameters",structure:n}],methods:[Io,vo],template:Cr}});const Co=[n,S,D,M,F,_,m,j,$,L,e,r,B,p,f,G,H,J,N,Q,W,X,Y,Z,tt,et,st,rt,nt,at,ot,ct,ut,it,mt,yt,bt,wt,R,lt,k,i,O,x,gt,q,pt,I,At,Ot,v,C,d,dt,Ut,U,ht,Vt,Pt],Eo=Pt,To={runtimeSafety:!1,littleEndian:!0},ft=rn();ft.getSpecialExports();ft.recreateStructures(Co,To);const Ko=(async()=>{const c=new URL("cubes-03-65454d5e.wasm",import.meta.url).href;return fetch(c)})();ft.loadModule(Ko);ft.linkVariables(!0);const{constructor:Do}=Eo,{createPartialOutput:Mo,Input:Fo,kernel:zt}=Do;function _o(c,y,u,o,a={},z={}){const w=[];for(const[l]of zt.inputImages)w.push(l);const V=[];for(const[l]of zt.outputImages)V.push(l);if(Array.isArray(a)){const l=a;a={};for(const[g,A]of w.entries())a[A]=l[g]}const b=new Fo(void 0),E=[];let P;for(const l of w){let g=a[l];if(g||(w.length===1&&["data","width","height"].every(A=>!!a[A])?g=a:E.push(l)),b[l]=g,P){if(g.colorSpace!==P)throw new Error(`Input images must all use the same color space: ${P}`)}else P=g.colorSpace}if(E.length>0)throw new Error(`Missing input image${E.length>1?"s":""}: ${E.join(", ")}`);const St=Mo(c,y,u,o,b,z),_e=l=>{const g={};for(const A of V){const{data:{typedArray:T},width:$e,height:Gr}=l[A];let K;if(typeof ImageData=="function"){const Hr=new Uint8ClampedArray(T.buffer,T.byteOffset,T.byteLength);K=new ImageData(Hr,$e,o,{colorSpace:P})}else K={data:T,width:$e,height:Gr};if(V.length===1)return K;g[A]=K}return g};return St[Symbol.toStringTag]==="Promise"?St.then(_e):_e(St)}function $o(){const c={};for(let[y,u]of zt){if(y==="parameters"){const o={};for(const[a,z]of u){const w=o[a]={};for(let[V,b]of z)typeof b=="object"?b=b.string??b.valueOf():typeof b=="function"&&(b=Lo(b.name)),w[V]=b}u=o}else typeof u=="object"&&(u=u.string??u.valueOf());c[y]=u}return c}function Lo(c){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[c]}onmessage=async c=>{if(!Array.isArray(c.data))return;const[y,u,...o]=c.data;try{const[a,z]=await Bo(y,o);postMessage([y,u,a],{transfer:z})}catch(a){postMessage(["error",u,a])}};async function Bo(c,y){switch(c){case"getKernelInfo":return[$o(...y)];case"createPartialImageData":const o=await _o(...y),a=[];if("data"in o&&"width"in o&&"height"in o)a.push(o.data.buffer);else for(const z of Object.entries(o))a.push(o.data.buffer);return[o,a];default:throw new Error(`Unknown function: ${c}`)}}postMessage("ready");
