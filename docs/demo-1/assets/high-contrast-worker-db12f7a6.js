import{u as $e,a as Le,b as Be,c as Ge,d as He,e as Je,f as Ne,g as Qe,h as We,i as Xe,j as Ye,k as Ze,l as ts,m as es,n as ss,o as rs,p as ns,q as as}from"./index-33238b17.js";$e();Ze();ts();Le();Be();es();ss();rs();ns();Ge();He();Je();Ne();as();Qe();We();Xe();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},j={},q={},d={},n={},l={},T={},_={},p={},w={},A={},$={},R={},L={},B={},U={},G={},H={},et={},I={},J={},v={},c={},g={},k={},st={},N={},E={},Q={},x={},W={},K={},C={},h={},rt={},nt={},z={},at={},it={},ot={},Rt={},ct={},kt={},ut={},qt={},mt={},It={},yt={},vt={},Et={},bt={},xt={},lt={},Kt={},gt={},Ct={},pt={},Mt={},Dt={},ft={},Ot={},Ft={},X={},Tt={},_t={},St={},$t={},ht={},Lt={},Bt={},Gt={},Ht={},Jt={},Nt={},Qt={},Wt={},Xt={},Yt={},Zt={},te={},ee={},se={},re={},ne={},ae={},zt={},ie={},oe={},jt={},ce={},dt={},ue={},me={},ye={},be={},le={},ge={},pe={},wt={},fe={},Oe={},Se={},he={},ze={},je={},de={},we={},Ae={},Ue={},Pe={},Ve={},Re={},ke={},qe={},Ie={},ve={},Ee={},xe={},Ke={},Ce={},Me={},is=new Uint8Array,os=new Uint8Array,cs=new Uint8Array([0,0,0,0,0,0,0,0]),us=new Uint8Array,ms=new Uint8Array([0,0,0,0,0,224,111,64]),ys=new Uint8Array,bs=new Uint8Array([0,0,0,0,0,0,96,64]),ls=new Uint8Array,gs=new Uint8Array,ps=new Uint8Array([0]),fs=new Uint8Array,Os=new Uint8Array([1]),Ss=new Uint8Array,hs=new Uint8Array([0]),zs=new Uint8Array,js=new Uint8Array,ds=new Uint8Array,ws=new Uint8Array([4]),As=new Uint8Array,Us=new Uint8Array,Ps=new Uint8Array([2,5,0,1]),Vs=new Uint8Array([99,111,109,46,109,105,109,115,119,114,105,103,104,116,0]),Rs=new Uint8Array([28,5,0,1]),ks=new Uint8Array([77,105,109,115,87,114,105,103,104,116,46,99,111,109,0]),qs=new Uint8Array,Is=new Uint8Array([1]),vs=new Uint8Array([60,5,0,1]),Es=new Uint8Array([101,120,116,114,101,109,101,32,99,111,110,116,114,97,115,116,32,102,105,108,116,101,114,32,116,104,97,116,32,99,111,110,118,101,114,116,115,32,116,111,32,101,105,116,104,101,114,32,49,32,111,114,32,48,32,98,97,115,101,100,32,111,110,32,98,114,105,103,104,116,110,101,115,115,32,111,102,32,115,111,117,114,99,101,46,0]),xs=new Uint8Array,Ks=new Uint8Array,Cs=new Uint8Array,Ms=new Uint8Array([0]),Ds=new Uint8Array([1]),De=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Fs=new Uint8Array,Ts=new Uint8Array,_s=new Uint8Array,$s=new Uint8Array,Ls=new Uint8Array([4]),At=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Fe=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Bs=new Uint8Array,Gs=new Uint8Array,Hs=new Uint8Array,Js=new Uint8Array,Ns=new Uint8Array([4]),Ut=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Qs=new Uint8Array([0,0,0,67,0,0,0,0]),Ws=new Uint8Array([27,0]),Xs=new Uint8Array([27,0]),Ys=new Uint8Array,Zs=new Uint8Array,tr=new Uint8Array,er=new Uint8Array;Object.assign(Rt,{slots:{0:ct,1:ut,2:mt,3:yt}});Object.assign(ct,{structure:s,memory:{array:is},const:!0,slots:{0:kt}});Object.assign(kt,{structure:w});Object.assign(ut,{structure:p,memory:{array:os},const:!0,slots:{0:qt}});Object.assign(qt,{structure:A,memory:{array:cs},const:!0});Object.assign(mt,{structure:p,memory:{array:us},const:!0,slots:{0:It}});Object.assign(It,{structure:A,memory:{array:ms},const:!0});Object.assign(yt,{structure:p,memory:{array:ys},const:!0,slots:{0:vt}});Object.assign(vt,{structure:A,memory:{array:bs},const:!0});Object.assign(Et,{slots:{0:bt,1:lt,2:gt,3:pt}});Object.assign(bt,{structure:s,memory:{array:ls},const:!0,slots:{0:xt}});Object.assign(xt,{structure:R});Object.assign(lt,{structure:n,memory:{array:gs},const:!0,slots:{0:Kt}});Object.assign(Kt,{structure:l,memory:{array:ps},const:!0});Object.assign(gt,{structure:n,memory:{array:fs},const:!0,slots:{0:Ct}});Object.assign(Ct,{structure:l,memory:{array:Os},const:!0});Object.assign(pt,{structure:n,memory:{array:Ss},const:!0,slots:{0:Mt}});Object.assign(Mt,{structure:l,memory:{array:hs},const:!0});Object.assign(Dt,{slots:{0:ft,1:Ot}});Object.assign(ft,{structure:$,memory:{array:zs},const:!0,slots:{0:ct,1:ut,2:mt,3:yt}});Object.assign(Ot,{structure:L,memory:{array:js},const:!0,slots:{0:bt,1:lt,2:gt,3:pt}});Object.assign(Ft,{slots:{0:X}});Object.assign(X,{structure:n,memory:{array:ds},const:!0,slots:{0:Tt}});Object.assign(Tt,{structure:l,memory:{array:ws},const:!0});Object.assign(_t,{slots:{0:St}});Object.assign(St,{structure:U,memory:{array:As},const:!0,slots:{0:X}});Object.assign($t,{slots:{0:ht}});Object.assign(ht,{structure:U,memory:{array:Us},const:!0,slots:{0:X}});Object.assign(Lt,{slots:{0:Bt,1:Ht,2:Nt,3:Wt,4:Yt,5:Zt,6:te}});Object.assign(Bt,{structure:d,memory:{array:Ps},const:!0,slots:{0:Gt}});Object.assign(Gt,{structure:q,memory:{array:Vs},reloc:16778498});Object.assign(Ht,{structure:d,memory:{array:Rs},const:!0,slots:{0:Jt}});Object.assign(Jt,{structure:q,memory:{array:ks},reloc:16778524});Object.assign(Nt,{structure:n,memory:{array:qs},const:!0,slots:{0:Qt}});Object.assign(Qt,{structure:l,memory:{array:Is},const:!0});Object.assign(Wt,{structure:_,memory:{array:vs},const:!0,slots:{0:Xt}});Object.assign(Xt,{structure:T,memory:{array:Es},reloc:16778556});Object.assign(Yt,{structure:B,memory:{array:xs},const:!0,slots:{0:ft,1:Ot}});Object.assign(Zt,{structure:G,memory:{array:Ks},const:!0,slots:{0:St}});Object.assign(te,{structure:H,memory:{array:Cs},const:!0,slots:{0:ht}});Object.assign(ee,{slots:{0:se,1:re}});Object.assign(se,{structure:g,memory:{array:Ms},const:!0});Object.assign(re,{structure:g,memory:{array:Ds},const:!0});Object.assign(ne,{memory:{array:De},slots:{0:ae}});Object.assign(ae,{structure:v,memory:{array:De,offset:0,length:8},slots:{0:zt}});Object.assign(zt,{structure:J,memory:{array:Fs},reloc:0});Object.assign(ie,{slots:{0:oe,1:ce,2:ue}});Object.assign(oe,{structure:s,memory:{array:Ts},const:!0,slots:{0:jt}});Object.assign(jt,{structure:I});Object.assign(ce,{structure:s,memory:{array:_s},const:!0,slots:{0:dt}});Object.assign(dt,{structure:st});Object.assign(ue,{structure:n,memory:{array:$s},const:!0,slots:{0:me}});Object.assign(me,{structure:l,memory:{array:Ls},const:!0});Object.assign(ye,{memory:{array:At},slots:{0:be}});Object.assign(be,{structure:N,memory:{array:At},slots:{0:le}});Object.assign(le,{structure:v,memory:{array:At,offset:0,length:8},slots:{0:zt}});Object.assign(ge,{memory:{array:Fe},slots:{0:pe}});Object.assign(pe,{structure:x,memory:{array:Fe,offset:0,length:8},slots:{0:wt}});Object.assign(wt,{structure:Q,memory:{array:Bs},reloc:0});Object.assign(fe,{slots:{0:Oe,1:Se,2:he}});Object.assign(Oe,{structure:s,memory:{array:Gs},const:!0,slots:{0:jt}});Object.assign(Se,{structure:s,memory:{array:Hs},const:!0,slots:{0:dt}});Object.assign(he,{structure:n,memory:{array:Js},const:!0,slots:{0:ze}});Object.assign(ze,{structure:l,memory:{array:Ns},const:!0});Object.assign(je,{memory:{array:Ut},slots:{0:de}});Object.assign(de,{structure:W,memory:{array:Ut},slots:{0:we}});Object.assign(we,{structure:x,memory:{array:Ut,offset:0,length:8},slots:{0:wt}});Object.assign(Ae,{memory:{array:Qs}});Object.assign(Ue,{slots:{0:Pe}});Object.assign(Pe,{structure:h,memory:{array:Ws},const:!0});Object.assign(Ve,{slots:{0:Re}});Object.assign(Re,{structure:z,memory:{array:Xs},const:!0});Object.assign(ke,{slots:{0:qe,1:ve,2:xe,3:Ce}});Object.assign(qe,{structure:s,memory:{array:Ys},const:!0,slots:{0:Ie}});Object.assign(Ie,{structure:et});Object.assign(ve,{structure:s,memory:{array:Zs},const:!0,slots:{0:Ee}});Object.assign(Ee,{structure:E});Object.assign(xe,{structure:s,memory:{array:tr},const:!0,slots:{0:Ke}});Object.assign(Ke,{structure:K});Object.assign(Ce,{structure:s,memory:{array:er},const:!0,slots:{0:Me}});Object.assign(Me,{structure:C});const sr={argStruct:nt,thunkId:2,name:"createOutput"},rr={argStruct:it,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(j,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:j}],methods:[]}});Object.assign(q,{...e,type:1,name:"[14:0]u8",length:14,byteSize:15,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:j}],methods:[]}});Object.assign(d,{...e,type:13,name:"*const [14:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:q}],methods:[]}});Object.assign(n,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:n}],methods:[]}});Object.assign(l,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:l}],methods:[]}});Object.assign(T,{...e,type:1,name:"[85:0]u8",length:85,byteSize:86,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:j}],methods:[]}});Object.assign(_,{...e,type:13,name:"*const [85:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[]}});Object.assign(p,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:p}],methods:[]}});Object.assign(w,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:w}],methods:[]}});Object.assign(A,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:A}],methods:[]}});Object.assign($,{...e,type:2,name:"Struct2980816048",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:p},{...t,type:7,slot:2,name:"maxValue",structure:p},{...t,type:7,slot:3,name:"defaultValue",structure:p}],methods:[],template:Rt}});Object.assign(R,{...e,name:"i32",byteSize:4,align:4,instance:{members:[{...t,type:2,bitOffset:0,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(L,{...e,type:2,name:"Struct152411989",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:n},{...t,type:7,slot:2,name:"maxValue",structure:n},{...t,type:7,slot:3,name:"defaultValue",structure:n}],methods:[],template:Et}});Object.assign(B,{...e,type:2,name:"Struct1740039515",align:1,instance:{members:[{...t,type:7,slot:0,name:"threshhold",structure:$},{...t,type:7,slot:1,name:"invert",structure:L}],methods:[],template:Dt}});Object.assign(U,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:n}],methods:[],template:Ft}});Object.assign(G,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:7,slot:0,name:"src",structure:U}],methods:[],template:_t}});Object.assign(H,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:U}],methods:[],template:$t}});Object.assign(et,{...e,type:2,name:"high-contrast.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:d},{...t,type:7,slot:1,name:"vendor",structure:d},{...t,type:7,slot:2,name:"version",structure:n},{...t,type:7,slot:3,name:"description",structure:_},{...t,type:7,slot:4,name:"parameters",structure:B},{...t,type:7,slot:5,name:"inputImages",structure:G},{...t,type:7,slot:6,name:"outputImages",structure:H}],methods:[],template:Lt}});Object.assign(I,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:j}],methods:[]}});Object.assign(J,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(v,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:J}],methods:[]}});Object.assign(c,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[]}});Object.assign(g,{...e,type:11,name:"high-contrast.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:g}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:g},{...t,type:7,slot:1,name:"display-p3",structure:g}],methods:[],template:ee}});Object.assign(k,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(st,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:w}],methods:[]}});Object.assign(N,{...e,type:2,name:"high-contrast.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:v},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:g},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:k}],methods:[],template:ne},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:n}],methods:[],template:ie}});Object.assign(E,{...e,type:2,name:"high-contrast.KernelInput(u8,high-contrast.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:N}],methods:[],template:ye}});Object.assign(Q,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(x,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:Q}],methods:[]}});Object.assign(W,{...e,type:2,name:"high-contrast.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:x},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:g},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:k}],methods:[],template:ge},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:n}],methods:[],template:fe}});Object.assign(K,{...e,type:2,name:"high-contrast.KernelOutput(u8,high-contrast.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:W}],methods:[],template:je}});Object.assign(C,{...e,type:2,name:"high-contrast.KernelParameters(high-contrast.kernel)",byteSize:8,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"threshhold",structure:w},{...t,type:2,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"invert",structure:R}],methods:[],template:Ae}});Object.assign(h,{...e,type:10,name:"ErrorSet1273945904",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:h}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:h}],methods:[],template:Ue}});Object.assign(rt,{...e,type:9,name:"ErrorSet1273945904!high-contrast.KernelOutput(u8,high-contrast.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:K},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:h}],methods:[]}});Object.assign(nt,{...e,type:5,name:"createOutput",byteSize:68,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:c},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:c},{...t,type:5,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:E},{...t,type:5,isRequired:!0,bitOffset:256,bitSize:64,byteSize:8,slot:1,name:"3",structure:C},{...t,type:5,isRequired:!0,bitOffset:320,bitSize:224,byteSize:28,slot:2,name:"retval",structure:rt}],methods:[]}});Object.assign(z,{...e,type:10,name:"ErrorSet1286841539",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:z}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:z}],methods:[],template:Ve}});Object.assign(at,{...e,type:9,name:"ErrorSet1286841539!high-contrast.KernelOutput(u8,high-contrast.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:K},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:z}],methods:[]}});Object.assign(it,{...e,type:5,name:"createPartialOutput",byteSize:76,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:c},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:c},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:c},{...t,type:5,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:E},{...t,type:5,isRequired:!0,bitOffset:320,bitSize:64,byteSize:8,slot:1,name:"5",structure:C},{...t,type:5,isRequired:!0,bitOffset:384,bitSize:224,byteSize:28,slot:2,name:"retval",structure:at}],methods:[]}});Object.assign(ot,{...e,type:2,name:"high-contrast",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:s},{...t,type:7,slot:1,name:"Input",structure:s},{...t,type:7,slot:2,name:"Output",structure:s},{...t,type:7,slot:3,name:"Parameters",structure:s}],methods:[sr,rr],template:ke}});const nr=[s,j,q,d,n,l,T,_,p,w,A,$,R,L,B,U,G,H,et,I,J,v,c,g,k,st,N,E,Q,x,W,K,C,h,rt,nt,z,at,it,ot],ar=ot,ir={runtimeSafety:!1,littleEndian:!0},Y=Ye();Y.getSpecialExports();Y.recreateStructures(nr,ir);const or=(async()=>{const i=new URL("high-contrast-cf1d697d.wasm",import.meta.url).href;return fetch(i)})();Y.loadModule(or);Y.linkVariables(!0);const{constructor:cr}=ar,{createPartialOutput:ur,Input:mr,kernel:tt}=cr;function yr(i,u,o,a,r={},f={}){const O=[];for(const[y]of tt.inputImages)O.push(y);const P=[];for(const[y]of tt.outputImages)P.push(y);if(Array.isArray(r)){const y=r;r={};for(const[b,S]of O.entries())r[S]=y[b]}const m=new mr(void 0),M=[];let V;for(const y of O){let b=r[y];if(b||(O.length===1&&["data","width","height"].every(S=>!!r[S])?b=r:M.push(y)),m[y]=b,V){if(b.colorSpace!==V)throw new Error(`Input images must all use the same color space: ${V}`)}else V=b.colorSpace}if(M.length>0)throw new Error(`Missing input image${M.length>1?"s":""}: ${M.join(", ")}`);const Z=ur(i,u,o,a,m,f),Pt=y=>{const b={};for(const S of P){const{data:{typedArray:D},width:Vt,height:Te}=y[S];let F;if(typeof ImageData=="function"){const _e=new Uint8ClampedArray(D.buffer,D.byteOffset,D.byteLength);F=new ImageData(_e,Vt,a,{colorSpace:V})}else F={data:D,width:Vt,height:Te};if(P.length===1)return F;b[S]=F}return b};return Z[Symbol.toStringTag]==="Promise"?Z.then(Pt):Pt(Z)}function br(){const i={};for(let[u,o]of tt){if(u==="parameters"){const a={};for(const[r,f]of o){const O=a[r]={};for(let[P,m]of f)typeof m=="object"?m=m.string??m.valueOf():typeof m=="function"&&(m=lr(m.name)),O[P]=m}o=a}else typeof o=="object"&&(o=o.string??o.valueOf());i[u]=o}return i}function lr(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=async i=>{if(!Array.isArray(i.data))return;const[u,o,...a]=i.data;try{const[r,f]=await gr(u,a);postMessage([u,o,r],{transfer:f})}catch(r){postMessage(["error",o,r])}};async function gr(i,u){switch(i){case"getKernelInfo":return[br(...u)];case"createPartialImageData":const a=await yr(...u),r=[];if("data"in a&&"width"in a&&"height"in a)r.push(a.data.buffer);else for(const f of Object.entries(a))r.push(a.data.buffer);return[a,r];default:throw new Error(`Unknown function: ${i}`)}}postMessage("ready");
