import{u as Ce,a as Ke,b as De,c as _e,d as Fe,e as Me,f as Te,g as $e,h as Le,i as Be,j as Ge,k as He,l as Je,m as Ne,n as Qe,o as We,p as Xe,q as Ye,r as Ze,s as ts}from"./index-58d89d46.js";Ce();Ge();He();Ke();De();Je();Ne();Qe();_e();Fe();Me();Te();We();Xe();ts();$e();Ye();Le();Be();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},g={},K={},D={},_={},F={},i={},l={},M={},T={},$={},L={},d={},B={},G={},z={},H={},J={},st={},U={},N={},P={},m={},p={},w={},x={},rt={},Q={},I={},W={},V={},X={},R={},k={},A={},nt={},at={},C={},it={},ot={},ct={},Pt={},ut={},It={},mt={},Vt={},yt={},Rt={},bt={},kt={},lt={},qt={},vt={},pt={},Et={},Y={},xt={},Ct={},gt={},Kt={},ft={},Dt={},_t={},Ft={},Mt={},Tt={},$t={},Lt={},Bt={},Gt={},Ht={},Jt={},Nt={},Qt={},Wt={},Xt={},Yt={},Zt={},Ot={},te={},ee={},St={},se={},zt={},re={},ne={},ae={},ie={},oe={},ce={},ue={},ht={},me={},ye={},be={},le={},pe={},ge={},fe={},Oe={},Se={},ze={},jt={},he={},je={},de={},we={},Ae={},Ue={},Pe={},Ie={},Ve={},Re={},es=new Uint8Array,ss=new Uint8Array,rs=new Uint8Array([1]),ns=new Uint8Array,as=new Uint8Array([10]),is=new Uint8Array,os=new Uint8Array([5]),cs=new Uint8Array([192,6,0,1]),us=new Uint8Array([115,105,122,101,32,111,102,32,116,104,101,32,115,116,105,116,99,104,105,110,103,0]),ms=new Uint8Array,ys=new Uint8Array,bs=new Uint8Array([4]),ls=new Uint8Array,ps=new Uint8Array,gs=new Uint8Array([244,4,0,1]),fs=new Uint8Array([110,101,116,46,103,104,111,115,116,114,97,100,105,111,46,112,98,0]),Os=new Uint8Array([17,5,0,1]),Ss=new Uint8Array([103,104,111,115,116,82,97,100,105,111,46,110,101,116,0]),zs=new Uint8Array,hs=new Uint8Array([1]),js=new Uint8Array([49,5,0,1]),ds=new Uint8Array([67,114,111,115,115,45,115,116,105,116,99,104,32,101,102,102,101,99,116,0]),ws=new Uint8Array,As=new Uint8Array,Us=new Uint8Array,Ps=new Uint8Array([0]),Is=new Uint8Array([1]),ke=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Vs=new Uint8Array,Rs=new Uint8Array,ks=new Uint8Array,qs=new Uint8Array,vs=new Uint8Array([4]),dt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),qe=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Es=new Uint8Array,xs=new Uint8Array,Cs=new Uint8Array,Ks=new Uint8Array,Ds=new Uint8Array([4]),wt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),_s=new Uint8Array([5,0,0,0]),Fs=new Uint8Array([27,0]),Ms=new Uint8Array,Ts=new Uint8Array,$s=new Uint8Array,Ls=new Uint8Array;Object.assign(Pt,{slots:{0:ut,1:mt,2:yt,3:bt,4:lt}});Object.assign(ut,{structure:s,memory:{array:es},slots:{0:It}});Object.assign(It,{structure:d});Object.assign(mt,{structure:i,memory:{array:ss},slots:{0:Vt}});Object.assign(Vt,{structure:l,memory:{array:rs}});Object.assign(yt,{structure:i,memory:{array:ns},slots:{0:Rt}});Object.assign(Rt,{structure:l,memory:{array:as}});Object.assign(bt,{structure:i,memory:{array:is},slots:{0:kt}});Object.assign(kt,{structure:l,memory:{array:os}});Object.assign(lt,{structure:L,memory:{array:cs},slots:{0:qt}});Object.assign(qt,{structure:$,memory:{array:us},reloc:16778944,const:!0});Object.assign(vt,{slots:{0:pt}});Object.assign(pt,{structure:B,memory:{array:ms},slots:{0:ut,1:mt,2:yt,3:bt,4:lt}});Object.assign(Et,{slots:{0:Y}});Object.assign(Y,{structure:i,memory:{array:ys},slots:{0:xt}});Object.assign(xt,{structure:l,memory:{array:bs}});Object.assign(Ct,{slots:{0:gt}});Object.assign(gt,{structure:z,memory:{array:ls},slots:{0:Y}});Object.assign(Kt,{slots:{0:ft}});Object.assign(ft,{structure:z,memory:{array:ps},slots:{0:Y}});Object.assign(Dt,{slots:{0:_t,1:Mt,2:$t,3:Bt,4:Ht,5:Jt,6:Nt}});Object.assign(_t,{structure:D,memory:{array:gs},slots:{0:Ft}});Object.assign(Ft,{structure:K,memory:{array:fs},reloc:16778484,const:!0});Object.assign(Mt,{structure:F,memory:{array:Os},slots:{0:Tt}});Object.assign(Tt,{structure:_,memory:{array:Ss},reloc:16778513,const:!0});Object.assign($t,{structure:i,memory:{array:zs},slots:{0:Lt}});Object.assign(Lt,{structure:l,memory:{array:hs}});Object.assign(Bt,{structure:T,memory:{array:js},slots:{0:Gt}});Object.assign(Gt,{structure:M,memory:{array:ds},reloc:16778545,const:!0});Object.assign(Ht,{structure:G,memory:{array:ws},slots:{0:pt}});Object.assign(Jt,{structure:H,memory:{array:As},slots:{0:gt}});Object.assign(Nt,{structure:J,memory:{array:Us},slots:{0:ft}});Object.assign(Qt,{slots:{0:Wt,1:Xt}});Object.assign(Wt,{structure:p,memory:{array:Ps}});Object.assign(Xt,{structure:p,memory:{array:Is}});Object.assign(Yt,{memory:{array:ke},slots:{0:Zt}});Object.assign(Zt,{structure:P,memory:{array:ke,offset:0,length:8},slots:{0:Ot}});Object.assign(Ot,{structure:N,memory:{array:Vs},reloc:0,const:!0});Object.assign(te,{slots:{0:ee,1:se,2:re}});Object.assign(ee,{structure:s,memory:{array:Rs},slots:{0:St}});Object.assign(St,{structure:U});Object.assign(se,{structure:s,memory:{array:ks},slots:{0:zt}});Object.assign(zt,{structure:rt});Object.assign(re,{structure:i,memory:{array:qs},slots:{0:ne}});Object.assign(ne,{structure:l,memory:{array:vs}});Object.assign(ae,{memory:{array:dt},slots:{0:ie}});Object.assign(ie,{structure:Q,memory:{array:dt},slots:{0:oe}});Object.assign(oe,{structure:P,memory:{array:dt,offset:0,length:8},slots:{0:Ot}});Object.assign(ce,{memory:{array:qe},slots:{0:ue}});Object.assign(ue,{structure:V,memory:{array:qe,offset:0,length:8},slots:{0:ht}});Object.assign(ht,{structure:W,memory:{array:Es},reloc:0});Object.assign(me,{slots:{0:ye,1:be,2:le}});Object.assign(ye,{structure:s,memory:{array:xs},slots:{0:St}});Object.assign(be,{structure:s,memory:{array:Cs},slots:{0:zt}});Object.assign(le,{structure:i,memory:{array:Ks},slots:{0:pe}});Object.assign(pe,{structure:l,memory:{array:Ds}});Object.assign(ge,{memory:{array:wt},slots:{0:fe}});Object.assign(fe,{structure:X,memory:{array:wt},slots:{0:Oe}});Object.assign(Oe,{structure:V,memory:{array:wt,offset:0,length:8},slots:{0:ht}});Object.assign(Se,{memory:{array:_s}});Object.assign(ze,{slots:{0:jt}});Object.assign(jt,{structure:A,memory:{array:Fs}});Object.assign(he,{slots:{0:jt}});Object.assign(je,{slots:{0:de,1:Ae,2:Pe,3:Ve}});Object.assign(de,{structure:s,memory:{array:Ms},slots:{0:we}});Object.assign(we,{structure:st});Object.assign(Ae,{structure:s,memory:{array:Ts},slots:{0:Ue}});Object.assign(Ue,{structure:I});Object.assign(Pe,{structure:s,memory:{array:$s},slots:{0:Ie}});Object.assign(Ie,{structure:R});Object.assign(Ve,{structure:s,memory:{array:Ls},slots:{0:Re}});Object.assign(Re,{structure:k});const Bs={argStruct:at,thunkId:2,name:"createOutput"},Gs={argStruct:ot,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(g,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(K,{...e,type:1,name:"[17:0]u8",length:17,byteSize:18,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(D,{...e,type:13,name:"*const [17:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:K}],methods:[]}});Object.assign(_,{...e,type:1,name:"[14:0]u8",length:14,byteSize:15,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(F,{...e,type:13,name:"*const [14:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[]}});Object.assign(i,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:i}],methods:[]}});Object.assign(l,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:l}],methods:[]}});Object.assign(M,{...e,type:1,name:"[19:0]u8",length:19,byteSize:20,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(T,{...e,type:13,name:"*const [19:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign($,{...e,type:1,name:"[21:0]u8",length:21,byteSize:22,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(L,{...e,type:13,name:"*const [21:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[]}});Object.assign(d,{...e,name:"i32",byteSize:4,align:4,instance:{members:[{...t,type:2,bitOffset:0,bitSize:32,byteSize:4,structure:d}],methods:[]}});Object.assign(B,{...e,type:2,name:"Struct3932231439",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"minValue",structure:i},{...t,type:9,slot:2,name:"maxValue",structure:i},{...t,type:9,slot:3,name:"defaultValue",structure:i},{...t,type:9,slot:4,name:"description",structure:L}],methods:[],template:Pt}});Object.assign(G,{...e,type:2,name:"Struct577318470",align:1,instance:{members:[{...t,type:9,slot:0,name:"size",structure:B}],methods:[],template:vt}});Object.assign(z,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:i}],methods:[],template:Et}});Object.assign(H,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:9,slot:0,name:"src",structure:z}],methods:[],template:Ct}});Object.assign(J,{...e,type:2,name:"Struct319638128",align:1,instance:{members:[{...t,type:9,slot:0,name:"outputPx",structure:z}],methods:[],template:Kt}});Object.assign(st,{...e,type:2,name:"cross-stitch.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:D},{...t,type:9,slot:1,name:"vendor",structure:F},{...t,type:9,slot:2,name:"version",structure:i},{...t,type:9,slot:3,name:"description",structure:T},{...t,type:9,slot:4,name:"parameters",structure:G},{...t,type:9,slot:5,name:"inputImages",structure:H},{...t,type:9,slot:6,name:"outputImages",structure:J}],methods:[],template:Dt}});Object.assign(U,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(N,{...e,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:U}],methods:[]}});Object.assign(P,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:N}],methods:[]}});Object.assign(m,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[]}});Object.assign(p,{...e,type:11,name:"cross-stitch.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:p},{...t,type:9,slot:1,name:"display-p3",structure:p}],methods:[],template:Qt}});Object.assign(w,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:w}],methods:[]}});Object.assign(x,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:x}],methods:[]}});Object.assign(rt,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:x}],methods:[]}});Object.assign(Q,{...e,type:2,name:"cross-stitch.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:P},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:w}],methods:[],template:Yt},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:i}],methods:[],template:te}});Object.assign(I,{...e,type:2,name:"cross-stitch.KernelInput(u8,cross-stitch.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:Q}],methods:[],template:ae}});Object.assign(W,{...e,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:U}],methods:[]}});Object.assign(V,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:W}],methods:[]}});Object.assign(X,{...e,type:2,name:"cross-stitch.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:V},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:w}],methods:[],template:ce},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:i}],methods:[],template:me}});Object.assign(R,{...e,type:2,name:"cross-stitch.KernelOutput(u8,cross-stitch.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"outputPx",structure:X}],methods:[],template:ge}});Object.assign(k,{...e,type:2,name:"cross-stitch.KernelParameters(cross-stitch.kernel)",byteSize:4,align:4,instance:{members:[{...t,type:2,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"size",structure:d}],methods:[],template:Se}});Object.assign(A,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(cross-stitch.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:A}],methods:[],template:ze}});Object.assign(nt,{...e,type:9,name:"ErrorSet1513772705!cross-stitch.KernelOutput(u8,cross-stitch.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:R},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:A}],methods:[]}});Object.assign(at,{...e,type:5,name:"createOutput",byteSize:64,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...t,type:7,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:I},{...t,type:7,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:1,name:"3",structure:k},{...t,type:7,isRequired:!0,bitOffset:288,bitSize:224,byteSize:28,slot:2,name:"retval",structure:nt}],methods:[]}});Object.assign(C,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(cross-stitch.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:C}],methods:[],template:he}});Object.assign(it,{...e,type:9,name:"ErrorSet2379280976!cross-stitch.KernelOutput(u8,cross-stitch.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:R},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:C}],methods:[]}});Object.assign(ot,{...e,type:5,name:"createPartialOutput",byteSize:72,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:m},{...t,type:7,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:I},{...t,type:7,isRequired:!0,bitOffset:320,bitSize:32,byteSize:4,slot:1,name:"5",structure:k},{...t,type:7,isRequired:!0,bitOffset:352,bitSize:224,byteSize:28,slot:2,name:"retval",structure:it}],methods:[]}});Object.assign(ct,{...e,type:2,name:"cross-stitch",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:s},{...t,type:9,slot:1,name:"Input",structure:s},{...t,type:9,slot:2,name:"Output",structure:s},{...t,type:9,slot:3,name:"Parameters",structure:s}],methods:[Bs,Gs],template:je}});const Hs=[s,g,K,D,_,F,i,l,M,T,$,L,d,B,G,z,H,J,st,U,N,P,m,p,w,x,rt,Q,I,W,V,X,R,k,A,nt,at,C,it,ot,ct],Js=ct,Ns={runtimeSafety:!1,littleEndian:!0},Z=Ze();Z.getControlObject();Z.recreateStructures(Hs,Ns);const Qs=(async()=>{const o=new URL("cross-stitch-04ff82fa.wasm",import.meta.url).href;return fetch(o)})();Z.loadModule(Qs);Z.linkVariables(!0);const{constructor:Ws}=Js,{createPartialOutput:Xs,Input:Ys,kernel:et}=Ws;function Zs(o,c,n,r,a={},f={}){const O=[];for(const[y]of et.inputImages)O.push(y);const h=[];for(const[y]of et.outputImages)h.push(y);if(Array.isArray(a)){const y=a;a={};for(const[b,S]of O.entries())a[S]=y[b]}const u=new Ys(void 0),q=[];let j;for(const y of O){let b=a[y];if(b||(O.length===1&&["data","width","height"].every(S=>!!a[S])?b=a:q.push(y)),u[y]=b,j){if(b.colorSpace!==j)throw new Error(`Input images must all use the same color space: ${j}`)}else j=b.colorSpace}if(q.length>0)throw new Error(`Missing input image${q.length>1?"s":""}: ${q.join(", ")}`);const tt=Xs(o,c,n,r,u,f),At=y=>{const b={};for(const S of h){const{data:{typedArray:v},width:Ut,height:Ee}=y[S];let E;if(typeof ImageData=="function"){const xe=new Uint8ClampedArray(v.buffer,v.byteOffset,v.byteLength);E=new ImageData(xe,Ut,r,{colorSpace:j})}else E={data:v,width:Ut,height:Ee};if(h.length===1)return E;b[S]=E}return b};return tt[Symbol.toStringTag]==="Promise"?tt.then(At):At(tt)}function tr(){const o={};for(let[c,n]of et){if(c==="parameters"){const r={};for(const[a,f]of n){const O=r[a]={};for(let[h,u]of f)typeof u=="object"?"string"in u?u=u.string:u=ve(u):typeof u=="function"&&(u=er(u.name)),O[h]=u}n=r}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());o[c]=n}return o}function ve(o){const c=[];for(let[n,r]of o)typeof r=="object"&&(r=ve(r)),c[n]=r;return c}function er(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[c,n,...r]=o.data;sr(c,r).then(([a,f])=>{postMessage([c,n,a],{transfer:f})}).catch(a=>{postMessage(["error",n,a])})};async function sr(o,c){switch(o){case"getKernelInfo":return[tr(...c)];case"createPartialImageData":const r=await Zs(...c),a=[];if("data"in r&&"width"in r&&"height"in r)a.push(r.data.buffer);else for(const f of Object.entries(r))a.push(r.data.buffer);return[r,a];default:throw new Error(`Unknown function: ${o}`)}}
