import{u as Ge,a as He,b as Je,c as Ne,d as Qe,e as We,f as Xe,g as Ye,h as Ze,i as et,j as tt,k as st,l as rt,m as at,o as nt,n as it,p as ut,q as ot}from"./index-422d9c98.js";Ge();He();Je();Ne();Qe();We();Xe();Ye();Ze();et();tt();st();rt();at();nt();it();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},b={},X={},Y={},I={},Z={},ee={},v={},f={},d={},te={},se={},x={},c={},a={},s={},re={},ae={},E={},ne={},K={},ie={},ue={},_={},oe={},D={},le={},F={},me={},ye={},M={},ce={},T={},be={},pe={},$={},fe={},B={},de={},Se={},L={},he={},G={},ge={},H={},q={},z={},ze={},J={},Oe={},N={},Ce={},O={},we={},Re={},m={},qe={},R={},Ae={},Q={},A={},Ue={},je={},W={},U={},j={},ke={},Ie={},ve={},xe={},Ee={},Ke={},_e={};Object.assign(b,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:5});Object.assign(X,{...t,type:1,name:"[11:0]u8",length:11,byteSize:12,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:4});Object.assign(Y,{...t,type:11,name:"*const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:3});Object.assign(I,{...t,type:11,name:"*const *const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[],template:null},slot:2});Object.assign(Z,{...t,type:1,name:"[16:0]u8",length:16,byteSize:17,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:8});Object.assign(ee,{...t,type:11,name:"*const [16:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:7});Object.assign(v,{...t,type:11,name:"*const *const [16:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:6});Object.assign(f,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:f}],methods:[],template:null},slot:10});Object.assign(d,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:f}],methods:[],template:null},slot:9});Object.assign(te,{...t,type:1,name:"[31:0]u8",length:31,byteSize:32,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:13});Object.assign(se,{...t,type:11,name:"*const [31:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:12});Object.assign(x,{...t,type:11,name:"*const *const [31:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:11});Object.assign(c,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:32});Object.assign(a,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:a}],methods:[],template:null},slot:52});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:a}],methods:[],template:null},slot:51});Object.assign(re,{...t,type:1,name:"[18:0]u8",length:18,byteSize:19,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:55});Object.assign(ae,{...t,type:11,name:"*const [18:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:54});Object.assign(E,{...t,type:11,name:"*const *const [18:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:53});const lt=new Uint8Array([]),mt=new Uint8Array([16,249,15,0]),yt=new Uint8Array([0,0,0,0,0,0,240,63]),ct=new Uint8Array([56,249,15,0]),bt=new Uint8Array([0,0,0,0,0,64,159,64]),pt=new Uint8Array([96,249,15,0]),ft=new Uint8Array([0,0,0,0,0,160,118,64]),dt=new Uint8Array([136,249,15,0]),St=new Uint8Array([214,33,16,0]),ht=new Uint8Array([105,110,112,117,116,32,105,109,97,103,101,32,104,101,105,103,104,116,0]);Object.assign(ne,{...t,type:2,name:"Struct0011",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:c},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:E}],methods:[],template:{memory:{array:lt},slots:{0:{structure:s,memory:{array:mt},slots:{0:{structure:a,memory:{array:yt}}}},1:{structure:s,memory:{array:ct},slots:{0:{structure:a,memory:{array:bt}}}},2:{structure:s,memory:{array:pt},slots:{0:{structure:a,memory:{array:ft}}}},3:{structure:E,memory:{array:dt},slots:{0:{structure:ae,memory:{array:St},slots:{0:{structure:re,memory:{array:ht},address:1057238}}}}}}}},slot:39});Object.assign(K,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:38});Object.assign(ie,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:33});const gt=new Uint8Array([]),zt=new Uint8Array([144,249,15,0]),Ot=new Uint8Array([0,0,0,0,0,0,0,0]),wt=new Uint8Array([48,250,15,0]),Rt=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(ue,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:gt},slots:{0:{structure:s,memory:{array:zt},slots:{0:{structure:a,memory:{array:Ot}}}},1:{structure:s,memory:{array:wt},slots:{0:{structure:a,memory:{array:Rt}}}}}}},slot:57});Object.assign(_,{...t,type:11,name:"Struct0016",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:56});const qt=new Uint8Array([]),At=new Uint8Array([144,249,15,0]),Ut=new Uint8Array([0,0,0,0,0,64,159,64]),jt=new Uint8Array([48,250,15,0]),Pt=new Uint8Array([0,0,0,0,0,64,159,64]);Object.assign(oe,{...t,type:2,name:"Struct0020",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:qt},slots:{0:{structure:s,memory:{array:At},slots:{0:{structure:a,memory:{array:Ut}}}},1:{structure:s,memory:{array:jt},slots:{0:{structure:a,memory:{array:Pt}}}}}}},slot:59});Object.assign(D,{...t,type:11,name:"Struct0017",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:58});const Vt=new Uint8Array([]),Ct=new Uint8Array([144,249,15,0]),kt=new Uint8Array([0,0,0,0,0,160,102,64]),It=new Uint8Array([48,250,15,0]),vt=new Uint8Array([0,0,0,0,0,160,102,64]);Object.assign(le,{...t,type:2,name:"Struct0021",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Vt},slots:{0:{structure:s,memory:{array:Ct},slots:{0:{structure:a,memory:{array:kt}}}},1:{structure:s,memory:{array:It},slots:{0:{structure:a,memory:{array:vt}}}}}}},slot:61});Object.assign(F,{...t,type:11,name:"Struct0018",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:60});Object.assign(me,{...t,type:1,name:"[36:0]u8",length:36,byteSize:37,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:64});Object.assign(ye,{...t,type:11,name:"*const [36:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:63});Object.assign(M,{...t,type:11,name:"*const *const [36:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:62});const xt=new Uint8Array([]),Et=new Uint8Array([170,170,170,170]),y=new Uint8Array([]),Kt=new Uint8Array([170,170,170,170]),_t=new Uint8Array([170,170,170,170]),Dt=new Uint8Array([108,249,15,0]),Ft=new Uint8Array([177,33,16,0]),Mt=new Uint8Array([104,97,108,102,32,119,105,100,116,104,32,105,109,97,103,101,32,105,110,112,117,116,32,119,105,100,116,104,47,45,104,101,105,103,104,116,0]);Object.assign(ce,{...t,type:2,name:"Struct0012",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:ie},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:_},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:D},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:F},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:M}],methods:[],template:{memory:{array:xt},slots:{0:{structure:_,memory:{array:Et},slots:{0:{structure:ue,memory:{array:y},address:-1431655766}}},1:{structure:D,memory:{array:Kt},slots:{0:{structure:oe,memory:{array:y},address:-1431655766}}},2:{structure:F,memory:{array:_t},slots:{0:{structure:le,memory:{array:y},address:-1431655766}}},3:{structure:M,memory:{array:Dt},slots:{0:{structure:ye,memory:{array:Ft},slots:{0:{structure:me,memory:{array:Mt},address:1057201}}}}}}}},slot:41});Object.assign(T,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:40});Object.assign(be,{...t,type:1,name:"[17:0]u8",length:17,byteSize:18,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:67});Object.assign(pe,{...t,type:11,name:"*const [17:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:66});Object.assign($,{...t,type:11,name:"*const *const [17:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:65});const Tt=new Uint8Array([]),$t=new Uint8Array([16,249,15,0]),Bt=new Uint8Array([45,67,28,235,226,54,26,63]),Lt=new Uint8Array([56,249,15,0]),Gt=new Uint8Array([0,0,0,0,0,0,0,64]),Ht=new Uint8Array([96,249,15,0]),Jt=new Uint8Array([226,88,23,183,209,0,224,63]),Nt=new Uint8Array([136,249,15,0]),Qt=new Uint8Array([159,33,16,0]),Wt=new Uint8Array([109,111,118,101,109,101,110,116,32,109,111,109,101,110,116,117,109,0]);Object.assign(fe,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:c},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:$}],methods:[],template:{memory:{array:Tt},slots:{0:{structure:s,memory:{array:$t},slots:{0:{structure:a,memory:{array:Bt}}}},1:{structure:s,memory:{array:Lt},slots:{0:{structure:a,memory:{array:Gt}}}},2:{structure:s,memory:{array:Ht},slots:{0:{structure:a,memory:{array:Jt}}}},3:{structure:$,memory:{array:Nt},slots:{0:{structure:pe,memory:{array:Qt},slots:{0:{structure:be,memory:{array:Wt},address:1057183}}}}}}}},slot:43});Object.assign(B,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:42});Object.assign(de,{...t,type:1,name:"[14:0]u8",length:14,byteSize:15,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:70});Object.assign(Se,{...t,type:11,name:"*const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:de}],methods:[],template:null},slot:69});Object.assign(L,{...t,type:11,name:"*const *const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Se}],methods:[],template:null},slot:68});const Xt=new Uint8Array([]),Yt=new Uint8Array([16,249,15,0]),Zt=new Uint8Array([0,0,0,0,0,0,0,0]),es=new Uint8Array([56,249,15,0]),ts=new Uint8Array([0,0,0,0,0,64,143,64]),ss=new Uint8Array([96,249,15,0]),rs=new Uint8Array([0,0,0,0,0,192,114,64]),as=new Uint8Array([136,249,15,0]),ns=new Uint8Array([144,33,16,0]),is=new Uint8Array([119,114,97,112,32,101,120,112,97,110,115,105,111,110,0]);Object.assign(he,{...t,type:2,name:"Struct0014",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:c},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:L}],methods:[],template:{memory:{array:Xt},slots:{0:{structure:s,memory:{array:Yt},slots:{0:{structure:a,memory:{array:Zt}}}},1:{structure:s,memory:{array:es},slots:{0:{structure:a,memory:{array:ts}}}},2:{structure:s,memory:{array:ss},slots:{0:{structure:a,memory:{array:rs}}}},3:{structure:L,memory:{array:as},slots:{0:{structure:Se,memory:{array:ns},slots:{0:{structure:de,memory:{array:is},address:1057168}}}}}}}},slot:45});Object.assign(G,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:he}],methods:[],template:null},slot:44});const us=new Uint8Array([]),os=new Uint8Array([170,170,170,170]),ls=new Uint8Array([170,170,170,170]),ms=new Uint8Array([170,170,170,170]),ys=new Uint8Array([170,170,170,170]);Object.assign(ge,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"image_h",structure:K},{...e,type:8,isRequired:!1,slot:1,name:"center",structure:T},{...e,type:8,isRequired:!1,slot:2,name:"tick",structure:B},{...e,type:8,isRequired:!1,slot:3,name:"spread",structure:G}],methods:[],template:{memory:{array:us},slots:{0:{structure:K,memory:{array:os},slots:{0:{structure:ne,memory:{array:y},address:-1431655766}}},1:{structure:T,memory:{array:ls},slots:{0:{structure:ce,memory:{array:y},address:-1431655766}}},2:{structure:B,memory:{array:ms},slots:{0:{structure:fe,memory:{array:y},address:-1431655766}}},3:{structure:G,memory:{array:ys},slots:{0:{structure:he,memory:{array:y},address:-1431655766}}}}}},slot:15});Object.assign(H,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ge}],methods:[],template:null},slot:14});const cs=new Uint8Array([]),bs=new Uint8Array([48,250,15,0]),ps=new Uint8Array([4,0,0,0]);Object.assign(q,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:d}],methods:[],template:{memory:{array:cs},slots:{0:{structure:d,memory:{array:bs},slots:{0:{structure:f,memory:{array:ps}}}}}}},slot:47});Object.assign(z,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:q}],methods:[],template:null},slot:46});const fs=new Uint8Array([]),ds=new Uint8Array([170,170,170,170]);Object.assign(ze,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:z}],methods:[],template:{memory:{array:fs},slots:{0:{structure:z,memory:{array:ds},slots:{0:{structure:q,memory:{array:y},address:-1431655766}}}}}},slot:17});Object.assign(J,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ze}],methods:[],template:null},slot:16});const Ss=new Uint8Array([]),hs=new Uint8Array([170,170,170,170]);Object.assign(Oe,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:z}],methods:[],template:{memory:{array:Ss},slots:{0:{structure:z,memory:{array:hs},slots:{0:{structure:q,memory:{array:y},address:-1431655766}}}}}},slot:19});Object.assign(N,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Oe}],methods:[],template:null},slot:18});const gs=new Uint8Array([]),zs=new Uint8Array([]),Os=new Uint8Array([28,251,15,0]),ws=new Uint8Array([56,37,16,0]),Rs=new Uint8Array([119,97,114,112,32,102,105,108,116,101,114,0]),qs=new Uint8Array([92,251,15,0]),As=new Uint8Array([39,37,16,0]),Us=new Uint8Array([102,114,97,110,107,32,114,101,105,116,98,101,114,103,101,114,0]),js=new Uint8Array([156,251,15,0]),Ps=new Uint8Array([1,0,0,0]),Vs=new Uint8Array([244,251,15,0]),Cs=new Uint8Array([7,37,16,0]),ks=new Uint8Array([119,97,114,112,115,32,105,109,97,103,101,32,118,105,99,101,32,118,101,114,115,97,32,97,110,100,32,98,97,99,107,0]),Is=new Uint8Array([170,170,170,170]),vs=new Uint8Array([170,170,170,170]),xs=new Uint8Array([170,170,170,170]);Object.assign(Ce,{...t,type:2,name:"warp.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:gs}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:I},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:v},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:d},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:x},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:H},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:J},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:N}],methods:[],template:{memory:{array:zs},slots:{0:{structure:I,memory:{array:Os},slots:{0:{structure:Y,memory:{array:ws},slots:{0:{structure:X,memory:{array:Rs},address:1058104}}}}},1:{structure:v,memory:{array:qs},slots:{0:{structure:ee,memory:{array:As},slots:{0:{structure:Z,memory:{array:Us},address:1058087}}}}},2:{structure:d,memory:{array:js},slots:{0:{structure:f,memory:{array:Ps}}}},3:{structure:x,memory:{array:Vs},slots:{0:{structure:se,memory:{array:Cs},slots:{0:{structure:te,memory:{array:ks},address:1058055}}}}},4:{structure:H,memory:{array:Is},slots:{0:{structure:ge,memory:{array:y},address:-1431655766}}},5:{structure:J,memory:{array:vs},slots:{0:{structure:ze,memory:{array:y},address:-1431655766}}},6:{structure:N,memory:{array:xs},slots:{0:{structure:Oe,memory:{array:y},address:-1431655766}}}}}},slot:1});Object.assign(O,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:24});Object.assign(we,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:23});Object.assign(Re,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:we}],methods:[],template:null},slot:22});Object.assign(m,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[],template:null},slot:25});const Es=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(qe,{...t,type:9,name:"warp.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:f},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:f}],methods:[],template:{memory:{array:Es}}},slot:26});Object.assign(R,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:R}],methods:[],template:null},slot:27});Object.assign(Ae,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:48});const Ks=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),_s=new Uint8Array([]),Ds=new Uint8Array([216,249,15,0]),Fs=new Uint8Array([4,0,0,0]);Object.assign(Q,{...t,type:2,name:"warp.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Re},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:qe},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:{memory:{array:Ks}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:Ae},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:d}],methods:[],template:{memory:{array:_s},slots:{0:{structure:d,memory:{array:Ds},slots:{0:{structure:f,memory:{array:Fs}}}}}}},slot:21});const Ms=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ts=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),$s=new Uint8Array([0,0,0,0,0,0,0,0]),De=new Uint8Array([]);Object.assign(A,{...t,type:2,name:"warp.KernelInput(u8,warp.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:Q}],methods:[],template:{memory:{array:Ms},slots:{0:{structure:Q,memory:{array:Ts},slots:{0:{structure:Re,memory:{array:$s},slots:{0:{structure:we,memory:{array:De}}}}}}}}},slot:20});Object.assign(Ue,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:23});Object.assign(je,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Ue}],methods:[],template:null},slot:30});const Bs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ls=new Uint8Array([]),Gs=new Uint8Array([216,249,15,0]),Hs=new Uint8Array([4,0,0,0]);Object.assign(W,{...t,type:2,name:"warp.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:je},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:qe},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:{memory:{array:Bs}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:Ae},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:d}],methods:[],template:{memory:{array:Ls},slots:{0:{structure:d,memory:{array:Gs},slots:{0:{structure:f,memory:{array:Hs}}}}}}},slot:29});const Js=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ns=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Qs=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(U,{...t,type:2,name:"warp.KernelOutput(u8,warp.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:W}],methods:[],template:{memory:{array:Js},slots:{0:{structure:W,memory:{array:Ns},slots:{0:{structure:je,memory:{array:Qs},slots:{0:{structure:Ue,memory:{array:De}}}}}}}}},slot:28});const Ws=new Uint8Array([0,0,53,67,0,0,53,67,0,0,181,67,142,6,0,63,0,0,150,67,0,0,0,0]);Object.assign(j,{...t,type:2,name:"warp.KernelParameters(warp.kernel)",length:1,byteSize:24,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:64,bitSize:32,byteSize:4,slot:0,name:"image_h",structure:c},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,slot:1,name:"center",structure:ie},{...e,type:4,isRequired:!1,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"tick",structure:c},{...e,type:4,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"spread",structure:c}],methods:[],template:{memory:{array:Ws}}},slot:31});Object.assign(ke,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(warp.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:49});Object.assign(Ie,{...t,type:7,name:"ErrorSet0000!warp.KernelOutput(u8,warp.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:U},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:ke}],methods:[],template:null},slot:36});Object.assign(ve,{...t,type:3,name:"createOutput",length:1,byteSize:88,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:192,bitSize:32,byteSize:4,slot:0,name:"0",structure:m},{...e,type:3,bitOffset:224,bitSize:32,byteSize:4,slot:1,name:"1",structure:m},{...e,type:6,bitOffset:256,bitSize:192,byteSize:24,slot:2,name:"2",structure:A},{...e,type:6,bitOffset:0,bitSize:192,byteSize:24,slot:3,name:"3",structure:j},{...e,type:6,bitOffset:448,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Ie}],methods:[],template:null},slot:34});Object.assign(xe,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(warp.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:50});Object.assign(Ee,{...t,type:7,name:"ErrorSet0001!warp.KernelOutput(u8,warp.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:U},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:xe}],methods:[],template:null},slot:37});Object.assign(Ke,{...t,type:3,name:"createPartialOutput",length:1,byteSize:96,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:192,bitSize:32,byteSize:4,slot:0,name:"0",structure:m},{...e,type:3,bitOffset:224,bitSize:32,byteSize:4,slot:1,name:"1",structure:m},{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:2,name:"2",structure:m},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:3,name:"3",structure:m},{...e,type:6,bitOffset:320,bitSize:192,byteSize:24,slot:4,name:"4",structure:A},{...e,type:6,bitOffset:0,bitSize:192,byteSize:24,slot:5,name:"5",structure:j},{...e,type:6,bitOffset:512,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Ee}],methods:[],template:null},slot:35});const Xs={argStruct:ve,thunk:1,name:"createOutput"},Ys={argStruct:Ke,thunk:5,name:"createPartialOutput"};Object.assign(_e,{...t,type:2,name:"warp",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:De}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:Ce},{...e,type:7,isRequired:!1,name:"Input",structure:A},{...e,type:7,isRequired:!1,name:"Output",structure:U},{...e,type:7,isRequired:!1,name:"Parameters",structure:j}],methods:[Xs,Ys],template:null},slot:0});const Zs=[b,X,Y,I,Z,ee,v,f,d,te,se,x,c,a,s,re,ae,E,ne,K,ie,ue,_,oe,D,le,F,me,ye,M,ce,T,be,pe,$,fe,B,de,Se,L,he,G,ge,H,q,z,ze,J,Oe,N,Ce,O,we,Re,m,qe,R,Ae,Q,A,Ue,je,W,U,j,ke,Ie,ve,xe,Ee,Ke,_e],er=ut(Zs),tr=_e.constructor,sr=(async()=>{const u=new URL("warp-4fadd4ba.wasm",import.meta.url).href;return fetch(u)})();ot(sr,{...er,writeBack:!0});const{createOutput:mr,createPartialOutput:rr,kernel:Ve,Input:ar,Output:yr,Parameters:cr}=tr;function nr(u,l,n,r,i={},h={}){if(Array.isArray(i)){const S=i;i={};for(const[p,g]of Object.keys(Ve.inputImages).entries())i[g]=S[p]}const P=new ar(void 0),V=Object.keys(Ve.inputImages),o=[];let w;for(const S of V){let p=i[S];if(p||(V.length===1&&["data","width","height"].every(g=>!!i[g])?p=i:o.push(S)),P[S]=p,w){if(p.colorSpace!==w)throw new Error(`Input images must all use the same color space: ${w}`)}else w=p.colorSpace}if(o.length>0)throw new Error(`Missing input image${o.length>1?"s":""}: ${o.join(", ")}`);const Pe=rr(u,l,n,r,P,h),Fe=S=>{const p=Object.keys(S),g={};for(const Me of p){const{data:{typedArray:C},width:Te,height:Be}=S[Me];let k;if(typeof ImageData=="function"){const Le=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);k=new ImageData(Le,Te,r,{colorSpace:w})}else k={data:C,width:Te,height:Be};if(p.length===1)return k;g[Me]=k}return g};return Pe[Symbol.toStringTag]==="Promise"?Pe.then(Fe):Fe(Pe)}function ir(){const u={};for(let[l,n]of Object.entries(Ve)){if(l==="parameters"){const r={};for(const[i,h]of Object.entries(n)){const P=r[i]={};for(let[V,o]of Object.entries(h))typeof o=="object"?"string"in o?o=o.string:o=$e(o):typeof o=="function"&&(o=ur(o.name)),P[V]=o}n=r}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());u[l]=n}return u}function $e(u){const l=[];for(let[n,r]of Object.entries(u))typeof r=="object"&&(r=$e(r)),l[n]=r;return l}function ur(u){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[u]}onmessage=u=>{const[l,n,...r]=u.data;or(l,r).then(([i,h])=>{postMessage([l,n,i],{transfer:h})}).catch(i=>{postMessage(["error",n,i])})};async function or(u,l){switch(u){case"getKernelInfo":return[ir(...l)];case"createPartialImageData":const r=await nr(...l),i=[];if("data"in r&&"width"in r&&"height"in r)i.push(r.data.buffer);else for(const h of Object.entries(r))i.push(r.data.buffer);return[r,i];default:throw new Error(`Unknown function: ${u}`)}}
