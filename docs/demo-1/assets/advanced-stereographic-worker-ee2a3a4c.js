import{u as st,a as at,b as nt,d as it,c as ut,e as ot,f as mt,g as lt,h as yt,i as ct,j as bt,k as pt,l as ft,m as dt,o as St,n as ht,p as gt,q as zt}from"./index-d64bc850.js";st();at();nt();it();ut();ot();mt();lt();yt();ct();bt();pt();ft();dt();St();ht();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},c={},oe={},me={},D={},U={},O={},S={},p={},f={},le={},ye={},F={},u={},z={},s={},r={},ce={},M={},be={},T={},pe={},$={},fe={},de={},B={},Se={},L={},he={},G={},ge={},H={},ze={},J={},we={},N={},Ae={},Ue={},Q={},Oe={},W={},Re={},X={},P={},V={},w={},qe={},Y={},je={},Pe={},Z={},Ve={},ee={},te={},Ce={},re={},ve={},se={},C={},A={},ke={},ae={},Ie={},ne={},$e={},R={},xe={},Ee={},y={},Ke={},j={},_e={},ie={},v={},De={},Fe={},ue={},k={},I={},Be={},Le={},Ge={},He={},Je={},Ne={},Qe={};Object.assign(c,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:5});Object.assign(oe,{...t,type:1,name:"[33:0]u8",length:33,byteSize:34,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:4});Object.assign(me,{...t,type:11,name:"*const [33:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:3});Object.assign(D,{...t,type:11,name:"*const *const [33:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:2});Object.assign(U,{...t,type:1,name:"[16:0]u8",length:16,byteSize:17,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:8});Object.assign(O,{...t,type:11,name:"*const [16:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:U}],methods:[],template:null},slot:7});Object.assign(S,{...t,type:11,name:"*const *const [16:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:O}],methods:[],template:null},slot:6});Object.assign(p,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[],template:null},slot:10});Object.assign(f,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:p}],methods:[],template:null},slot:9});Object.assign(le,{...t,type:1,name:"[48:0]u8",length:48,byteSize:49,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:13});Object.assign(ye,{...t,type:11,name:"*const [48:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:12});Object.assign(F,{...t,type:11,name:"*const *const [48:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:11});Object.assign(u,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:u}],methods:[],template:null},slot:33});Object.assign(z,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:u}],methods:[],template:null},slot:32});Object.assign(s,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:s}],methods:[],template:null},slot:73});Object.assign(r,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:s}],methods:[],template:null},slot:72});const wt=new Uint8Array,At=new Uint8Array([240,251,15,0]),Ut=new Uint8Array([0,0,0,0,0,0,0,0]),Ot=new Uint8Array([16,252,15,0]),Rt=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(ce,{...t,type:2,name:"Struct0028",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:wt},slots:{0:{structure:r,memory:{array:At},slots:{0:{structure:s,memory:{array:Ut}}}},1:{structure:r,memory:{array:Ot},slots:{0:{structure:s,memory:{array:Rt}}}}}}},slot:58});Object.assign(M,{...t,type:11,name:"Struct0022",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:57});const qt=new Uint8Array,jt=new Uint8Array([240,251,15,0]),Pt=new Uint8Array([0,0,0,0,0,64,159,64]),Vt=new Uint8Array([16,252,15,0]),Ct=new Uint8Array([0,0,0,0,0,64,159,64]);Object.assign(be,{...t,type:2,name:"Struct0029",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:qt},slots:{0:{structure:r,memory:{array:jt},slots:{0:{structure:s,memory:{array:Pt}}}},1:{structure:r,memory:{array:Vt},slots:{0:{structure:s,memory:{array:Ct}}}}}}},slot:60});Object.assign(T,{...t,type:11,name:"Struct0023",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:59});const vt=new Uint8Array,kt=new Uint8Array([240,251,15,0]),It=new Uint8Array([0,0,0,0,0,128,102,64]),xt=new Uint8Array([16,252,15,0]),Et=new Uint8Array([0,0,0,0,0,128,102,64]);Object.assign(pe,{...t,type:2,name:"Struct0030",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:vt},slots:{0:{structure:r,memory:{array:kt},slots:{0:{structure:s,memory:{array:It}}}},1:{structure:r,memory:{array:xt},slots:{0:{structure:s,memory:{array:Et}}}}}}},slot:62});Object.assign($,{...t,type:11,name:"Struct0024",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:61});Object.assign(fe,{...t,type:1,name:"[22:0]u8",length:22,byteSize:23,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:65});Object.assign(de,{...t,type:11,name:"*const [22:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:64});Object.assign(B,{...t,type:11,name:"*const *const [22:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:de}],methods:[],template:null},slot:63});const Kt=new Uint8Array,_t=new Uint8Array([170,170,170,170]),Dt=new Uint8Array,Ft=new Uint8Array([170,170,170,170]),Mt=new Uint8Array,Tt=new Uint8Array([170,170,170,170]),$t=new Uint8Array,Bt=new Uint8Array([192,251,15,0]),Lt=new Uint8Array([205,34,16,0]),Gt=new Uint8Array([115,101,116,32,105,110,112,117,116,32,105,109,97,103,101,32,99,101,110,116,101,114,0]);Object.assign(Se,{...t,type:2,name:"Struct0014",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:z},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:M},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:T},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:$},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:B}],methods:[],template:{memory:{array:Kt},slots:{0:{structure:M,memory:{array:_t},slots:{0:{structure:ce,memory:{array:Dt}}}},1:{structure:T,memory:{array:Ft},slots:{0:{structure:be,memory:{array:Mt}}}},2:{structure:$,memory:{array:Tt},slots:{0:{structure:pe,memory:{array:$t}}}},3:{structure:B,memory:{array:Bt},slots:{0:{structure:de,memory:{array:Lt},slots:{0:{structure:fe,memory:{array:Gt}}}}}}}}},slot:39});Object.assign(L,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Se}],methods:[],template:null},slot:38});const Ht=new Uint8Array,Jt=new Uint8Array([240,251,15,0]),Nt=new Uint8Array([0,0,0,0,0,0,240,63]),Qt=new Uint8Array([16,252,15,0]),Wt=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(he,{...t,type:2,name:"Struct0031",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Ht},slots:{0:{structure:r,memory:{array:Jt},slots:{0:{structure:s,memory:{array:Nt}}}},1:{structure:r,memory:{array:Qt},slots:{0:{structure:s,memory:{array:Wt}}}}}}},slot:67});Object.assign(G,{...t,type:11,name:"Struct0025",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:he}],methods:[],template:null},slot:66});const Xt=new Uint8Array,Yt=new Uint8Array([240,251,15,0]),Zt=new Uint8Array([0,0,0,0,0,160,102,64]),er=new Uint8Array([16,252,15,0]),tr=new Uint8Array([0,0,0,0,0,160,102,64]);Object.assign(ge,{...t,type:2,name:"Struct0032",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Xt},slots:{0:{structure:r,memory:{array:Yt},slots:{0:{structure:s,memory:{array:Zt}}}},1:{structure:r,memory:{array:er},slots:{0:{structure:s,memory:{array:tr}}}}}}},slot:69});Object.assign(H,{...t,type:11,name:"Struct0026",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ge}],methods:[],template:null},slot:68});const rr=new Uint8Array,sr=new Uint8Array([240,251,15,0]),ar=new Uint8Array([0,0,0,0,0,0,60,64]),nr=new Uint8Array([16,252,15,0]),ir=new Uint8Array([0,0,0,0,0,0,60,64]);Object.assign(ze,{...t,type:2,name:"Struct0033",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:rr},slots:{0:{structure:r,memory:{array:sr},slots:{0:{structure:s,memory:{array:ar}}}},1:{structure:r,memory:{array:nr},slots:{0:{structure:s,memory:{array:ir}}}}}}},slot:71});Object.assign(J,{...t,type:11,name:"Struct0027",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ze}],methods:[],template:null},slot:70});const ur=new Uint8Array,or=new Uint8Array([170,170,170,170]),mr=new Uint8Array,lr=new Uint8Array([170,170,170,170]),yr=new Uint8Array,cr=new Uint8Array([170,170,170,170]),br=new Uint8Array,pr=new Uint8Array([120,250,15,0]),fr=new Uint8Array([188,34,16,0]),dr=new Uint8Array([120,121,46,114,101,112,108,105,99,97,116,101,32,109,97,112,0]);Object.assign(we,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:z},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:G},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:H},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:J},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:S}],methods:[],template:{memory:{array:ur},slots:{0:{structure:G,memory:{array:or},slots:{0:{structure:he,memory:{array:mr}}}},1:{structure:H,memory:{array:lr},slots:{0:{structure:ge,memory:{array:yr}}}},2:{structure:J,memory:{array:cr},slots:{0:{structure:ze,memory:{array:br}}}},3:{structure:S,memory:{array:pr},slots:{0:{structure:O,memory:{array:fr},slots:{0:{structure:U,memory:{array:dr}}}}}}}}},slot:41});Object.assign(N,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:we}],methods:[],template:null},slot:40});Object.assign(Ae,{...t,type:1,name:"[10:0]u8",length:10,byteSize:11,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:76});Object.assign(Ue,{...t,type:11,name:"*const [10:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ae}],methods:[],template:null},slot:75});Object.assign(Q,{...t,type:11,name:"*const *const [10:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ue}],methods:[],template:null},slot:74});const Sr=new Uint8Array,hr=new Uint8Array([208,250,15,0]),gr=new Uint8Array([0,0,0,0,0,0,0,0]),zr=new Uint8Array([40,251,15,0]),wr=new Uint8Array([0,0,0,0,0,0,89,64]),Ar=new Uint8Array([200,251,15,0]),Ur=new Uint8Array([0,0,0,0,0,0,82,64]),Or=new Uint8Array([232,251,15,0]),Rr=new Uint8Array([177,34,16,0]),qr=new Uint8Array([115,101,116,32,114,97,100,105,117,115,0]);Object.assign(Oe,{...t,type:2,name:"Struct0016",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:Q}],methods:[],template:{memory:{array:Sr},slots:{0:{structure:r,memory:{array:hr},slots:{0:{structure:s,memory:{array:gr}}}},1:{structure:r,memory:{array:zr},slots:{0:{structure:s,memory:{array:wr}}}},2:{structure:r,memory:{array:Ar},slots:{0:{structure:s,memory:{array:Ur}}}},3:{structure:Q,memory:{array:Or},slots:{0:{structure:Ue,memory:{array:Rr},slots:{0:{structure:Ae,memory:{array:qr}}}}}}}}},slot:43});Object.assign(W,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Oe}],methods:[],template:null},slot:42});const jr=new Uint8Array,Pr=new Uint8Array([240,251,15,0]),Vr=new Uint8Array([154,153,153,153,153,153,185,63]),Cr=new Uint8Array([16,252,15,0]),vr=new Uint8Array([0,0,0,0,0,0,16,64]),kr=new Uint8Array([0,250,15,0]),Ir=new Uint8Array([102,102,102,102,102,102,2,64]),xr=new Uint8Array([88,250,15,0]),Er=new Uint8Array([160,34,16,0]),Kr=new Uint8Array([115,101,116,32,97,115,112,101,99,116,32,114,97,116,105,111,0]);Object.assign(Re,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:S}],methods:[],template:{memory:{array:jr},slots:{0:{structure:r,memory:{array:Pr},slots:{0:{structure:s,memory:{array:Vr}}}},1:{structure:r,memory:{array:Cr},slots:{0:{structure:s,memory:{array:vr}}}},2:{structure:r,memory:{array:kr},slots:{0:{structure:s,memory:{array:Ir}}}},3:{structure:S,memory:{array:xr},slots:{0:{structure:O,memory:{array:Er},slots:{0:{structure:U,memory:{array:Kr}}}}}}}}},slot:45});Object.assign(X,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Re}],methods:[],template:null},slot:44});Object.assign(P,{...t,type:1,name:"[8:0]u8",length:8,byteSize:9,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:79});Object.assign(V,{...t,type:11,name:"*const [8:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:P}],methods:[],template:null},slot:78});Object.assign(w,{...t,type:11,name:"*const *const [8:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:V}],methods:[],template:null},slot:77});const _r=new Uint8Array,Dr=new Uint8Array([240,251,15,0]),Fr=new Uint8Array([154,153,153,153,153,153,185,63]),Mr=new Uint8Array([16,252,15,0]),Tr=new Uint8Array([0,0,0,0,0,0,20,64]),$r=new Uint8Array([0,250,15,0]),Br=new Uint8Array([0,0,0,0,0,0,240,63]),Lr=new Uint8Array([88,250,15,0]),Gr=new Uint8Array([151,34,16,0]),Hr=new Uint8Array([115,101,116,32,122,111,111,109,0]);Object.assign(qe,{...t,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:w}],methods:[],template:{memory:{array:_r},slots:{0:{structure:r,memory:{array:Dr},slots:{0:{structure:s,memory:{array:Fr}}}},1:{structure:r,memory:{array:Mr},slots:{0:{structure:s,memory:{array:Tr}}}},2:{structure:r,memory:{array:$r},slots:{0:{structure:s,memory:{array:Br}}}},3:{structure:w,memory:{array:Lr},slots:{0:{structure:V,memory:{array:Gr},slots:{0:{structure:P,memory:{array:Hr}}}}}}}}},slot:47});Object.assign(Y,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:qe}],methods:[],template:null},slot:46});Object.assign(je,{...t,type:1,name:"[12:0]u8",length:12,byteSize:13,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:82});Object.assign(Pe,{...t,type:11,name:"*const [12:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:je}],methods:[],template:null},slot:81});Object.assign(Z,{...t,type:11,name:"*const *const [12:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Pe}],methods:[],template:null},slot:80});const Jr=new Uint8Array,Nr=new Uint8Array([208,250,15,0]),Qr=new Uint8Array([0,0,0,0,0,0,0,0]),Wr=new Uint8Array([40,251,15,0]),Xr=new Uint8Array([0,0,0,0,0,0,240,63]),Yr=new Uint8Array([200,251,15,0]),Zr=new Uint8Array([0,0,0,0,0,0,240,63]),es=new Uint8Array([232,251,15,0]),ts=new Uint8Array([138,34,16,0]),rs=new Uint8Array([115,101,116,32,114,111,116,97,116,105,111,110,0]);Object.assign(Ve,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:Z}],methods:[],template:{memory:{array:Jr},slots:{0:{structure:r,memory:{array:Nr},slots:{0:{structure:s,memory:{array:Qr}}}},1:{structure:r,memory:{array:Wr},slots:{0:{structure:s,memory:{array:Xr}}}},2:{structure:r,memory:{array:Yr},slots:{0:{structure:s,memory:{array:Zr}}}},3:{structure:Z,memory:{array:es},slots:{0:{structure:Pe,memory:{array:ts},slots:{0:{structure:je,memory:{array:rs}}}}}}}}},slot:49});Object.assign(ee,{...t,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ve}],methods:[],template:null},slot:48});Object.assign(te,{...t,type:11,name:"*const f32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:u}],methods:[],template:null},slot:83});const ss=new Uint8Array,as=new Uint8Array([208,251,15,0]),ns=new Uint8Array([154,153,153,153,153,153,185,63]),is=new Uint8Array([252,251,15,0]),us=new Uint8Array([216,15,73,64]),os=new Uint8Array([8,252,15,0]),ms=new Uint8Array([102,102,102,102,102,102,2,64]),ls=new Uint8Array([72,250,15,0]),ys=new Uint8Array([129,34,16,0]),cs=new Uint8Array([115,101,116,32,119,97,114,112,0]);Object.assign(Ce,{...t,type:2,name:"Struct0020",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:te},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:w}],methods:[],template:{memory:{array:ss},slots:{0:{structure:r,memory:{array:as},slots:{0:{structure:s,memory:{array:ns}}}},1:{structure:te,memory:{array:is},slots:{0:{structure:u,memory:{array:us}}}},2:{structure:r,memory:{array:os},slots:{0:{structure:s,memory:{array:ms}}}},3:{structure:w,memory:{array:ls},slots:{0:{structure:V,memory:{array:ys},slots:{0:{structure:P,memory:{array:cs}}}}}}}}},slot:51});Object.assign(re,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ce}],methods:[],template:null},slot:50});const bs=new Uint8Array,ps=new Uint8Array([170,170,170,170]),fs=new Uint8Array,ds=new Uint8Array([170,170,170,170]),Ss=new Uint8Array,hs=new Uint8Array([170,170,170,170]),gs=new Uint8Array,zs=new Uint8Array([170,170,170,170]),ws=new Uint8Array,As=new Uint8Array([170,170,170,170]),Us=new Uint8Array,Os=new Uint8Array([170,170,170,170]),Rs=new Uint8Array,qs=new Uint8Array([170,170,170,170]),js=new Uint8Array;Object.assign(ve,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"center",structure:L},{...e,type:8,isRequired:!1,slot:1,name:"xy_replication",structure:N},{...e,type:8,isRequired:!1,slot:2,name:"radius",structure:W},{...e,type:8,isRequired:!1,slot:3,name:"scale",structure:X},{...e,type:8,isRequired:!1,slot:4,name:"zoom",structure:Y},{...e,type:8,isRequired:!1,slot:5,name:"turn",structure:ee},{...e,type:8,isRequired:!1,slot:6,name:"warp",structure:re}],methods:[],template:{memory:{array:bs},slots:{0:{structure:L,memory:{array:ps},slots:{0:{structure:Se,memory:{array:fs}}}},1:{structure:N,memory:{array:ds},slots:{0:{structure:we,memory:{array:Ss}}}},2:{structure:W,memory:{array:hs},slots:{0:{structure:Oe,memory:{array:gs}}}},3:{structure:X,memory:{array:zs},slots:{0:{structure:Re,memory:{array:ws}}}},4:{structure:Y,memory:{array:As},slots:{0:{structure:qe,memory:{array:Us}}}},5:{structure:ee,memory:{array:Os},slots:{0:{structure:Ve,memory:{array:Rs}}}},6:{structure:re,memory:{array:qs},slots:{0:{structure:Ce,memory:{array:js}}}}}}},slot:15});Object.assign(se,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ve}],methods:[],template:null},slot:14});const Ps=new Uint8Array,Vs=new Uint8Array([16,252,15,0]),Cs=new Uint8Array([4,0,0,0]);Object.assign(C,{...t,type:2,name:"Struct0021",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:Ps},slots:{0:{structure:f,memory:{array:Vs},slots:{0:{structure:p,memory:{array:Cs}}}}}}},slot:53});Object.assign(A,{...t,type:11,name:"Struct0013",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:C}],methods:[],template:null},slot:52});const vs=new Uint8Array,ks=new Uint8Array([170,170,170,170]),Is=new Uint8Array;Object.assign(ke,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:A}],methods:[],template:{memory:{array:vs},slots:{0:{structure:A,memory:{array:ks},slots:{0:{structure:C,memory:{array:Is}}}}}}},slot:17});Object.assign(ae,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ke}],methods:[],template:null},slot:16});const xs=new Uint8Array,Es=new Uint8Array([170,170,170,170]),Ks=new Uint8Array;Object.assign(Ie,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:A}],methods:[],template:{memory:{array:xs},slots:{0:{structure:A,memory:{array:Es},slots:{0:{structure:C,memory:{array:Ks}}}}}}},slot:19});Object.assign(ne,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ie}],methods:[],template:null},slot:18});const _s=new Uint8Array,Ds=new Uint8Array,Fs=new Uint8Array([144,39,16,0]),Ms=new Uint8Array([33,39,16,0]),Ts=new Uint8Array([97,100,118,97,110,99,101,100,32,115,116,101,114,101,111,103,114,97,112,104,105,99,32,112,114,111,106,101,99,116,105,111,110,0]),$s=new Uint8Array([140,39,16,0]),Bs=new Uint8Array([5,39,16,0]),Ls=new Uint8Array([102,114,97,110,107,32,114,101,105,116,98,101,114,103,101,114,0]),Gs=new Uint8Array([136,39,16,0]),Hs=new Uint8Array([1,0,0,0]),Js=new Uint8Array([132,39,16,0]),Ns=new Uint8Array([195,38,16,0]),Qs=new Uint8Array([101,110,104,97,110,99,101,100,32,98,121,32,119,97,114,112,40,115,41,44,32,116,117,114,110,40,115,41,44,32,115,99,97,108,101,40,115,41,32,38,32,122,111,111,109,40,115,41,0]),Ws=new Uint8Array([170,170,170,170]),Xs=new Uint8Array,Ys=new Uint8Array([170,170,170,170]),Zs=new Uint8Array,ea=new Uint8Array([170,170,170,170]),ta=new Uint8Array;Object.assign($e,{...t,type:2,name:"advanced-stereographic.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:_s}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:D},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:S},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:f},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:F},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:se},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:ae},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:ne}],methods:[],template:{memory:{array:Ds},slots:{0:{structure:D,memory:{array:Fs},slots:{0:{structure:me,memory:{array:Ms},slots:{0:{structure:oe,memory:{array:Ts}}}}}},1:{structure:S,memory:{array:$s},slots:{0:{structure:O,memory:{array:Bs},slots:{0:{structure:U,memory:{array:Ls}}}}}},2:{structure:f,memory:{array:Gs},slots:{0:{structure:p,memory:{array:Hs}}}},3:{structure:F,memory:{array:Js},slots:{0:{structure:ye,memory:{array:Ns},slots:{0:{structure:le,memory:{array:Qs}}}}}},4:{structure:se,memory:{array:Ws},slots:{0:{structure:ve,memory:{array:Xs}}}},5:{structure:ae,memory:{array:Ys},slots:{0:{structure:ke,memory:{array:Zs}}}},6:{structure:ne,memory:{array:ea},slots:{0:{structure:Ie,memory:{array:ta}}}}}}},slot:1});Object.assign(R,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:24});Object.assign(xe,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:R}],methods:[],template:null},slot:23});Object.assign(Ee,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:xe}],methods:[],template:null},slot:22});Object.assign(y,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:25});const ra=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(Ke,{...t,type:9,name:"advanced-stereographic.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:p},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:p}],methods:[],template:{memory:{array:ra}}},slot:26});Object.assign(j,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:j}],methods:[],template:null},slot:27});Object.assign(_e,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:u}],methods:[],template:null},slot:54});const sa=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),aa=new Uint8Array,na=new Uint8Array([152,38,16,0]),ia=new Uint8Array([4,0,0,0]);Object.assign(ie,{...t,type:2,name:"advanced-stereographic.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Ee},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Ke},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:j}],methods:[],template:{memory:{array:sa}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:R},{...e,type:7,isRequired:!1,name:"FPixel",structure:_e},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:aa},slots:{0:{structure:f,memory:{array:na},slots:{0:{structure:p,memory:{array:ia}}}}}}},slot:21});const ua=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),oa=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ze=new Uint8Array([0,0,0,0,0,0,0,0]),ma=new Uint8Array;Object.assign(v,{...t,type:2,name:"advanced-stereographic.KernelInput(u8,advanced-stereographic.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:ie}],methods:[],template:{memory:{array:ua},slots:{0:{structure:ie,memory:{array:oa},slots:{0:{structure:Ee,memory:{array:Ze},address:1047168,slots:{0:{structure:xe,memory:{array:ma},address:0}}}}}}}},slot:20});Object.assign(De,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:R}],methods:[],template:null},slot:23});Object.assign(Fe,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:De}],methods:[],template:null},slot:30});const la=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ya=new Uint8Array,ca=new Uint8Array([152,38,16,0]),ba=new Uint8Array([4,0,0,0]);Object.assign(ue,{...t,type:2,name:"advanced-stereographic.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Fe},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Ke},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:j}],methods:[],template:{memory:{array:la}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:R},{...e,type:7,isRequired:!1,name:"FPixel",structure:_e},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:ya},slots:{0:{structure:f,memory:{array:ca},slots:{0:{structure:p,memory:{array:ba}}}}}}},slot:29});const pa=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),fa=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),da=new Uint8Array;Object.assign(k,{...t,type:2,name:"advanced-stereographic.KernelOutput(u8,advanced-stereographic.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:ue}],methods:[],template:{memory:{array:pa},slots:{0:{structure:ue,memory:{array:fa},slots:{0:{structure:Fe,memory:{array:Ze},address:1047168,slots:{0:{structure:De,memory:{array:da},address:0}}}}}}}},slot:28});const Sa=new Uint8Array([0,0,52,67,0,0,52,67,0,0,224,65,0,0,224,65,0,0,144,66,51,51,19,64,0,0,128,63,0,0,128,63,51,51,19,64,0,0,0,0]);Object.assign(I,{...t,type:2,name:"advanced-stereographic.KernelParameters(advanced-stereographic.kernel)",length:1,byteSize:40,align:3,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"center",structure:z},{...e,type:6,isRequired:!1,bitOffset:64,bitSize:64,byteSize:8,slot:1,name:"xy_replication",structure:z},{...e,type:4,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:2,name:"radius",structure:u},{...e,type:4,isRequired:!1,bitOffset:160,bitSize:32,byteSize:4,slot:3,name:"scale",structure:u},{...e,type:4,isRequired:!1,bitOffset:192,bitSize:32,byteSize:4,slot:4,name:"zoom",structure:u},{...e,type:4,isRequired:!1,bitOffset:224,bitSize:32,byteSize:4,slot:5,name:"turn",structure:u},{...e,type:4,isRequired:!1,bitOffset:256,bitSize:32,byteSize:4,slot:6,name:"warp",structure:u}],methods:[],template:{memory:{array:Sa}}},slot:31});Object.assign(Be,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(advanced-stereographic.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:55});Object.assign(Le,{...t,type:7,name:"ErrorSet0000!advanced-stereographic.KernelOutput(u8,advanced-stereographic.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:k},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Be}],methods:[],template:null},slot:36});Object.assign(Ge,{...t,type:3,name:"createOutput",length:1,byteSize:104,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:320,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:352,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:6,bitOffset:384,bitSize:192,byteSize:24,slot:2,name:"2",structure:v},{...e,type:6,bitOffset:0,bitSize:320,byteSize:40,slot:3,name:"3",structure:I},{...e,type:6,bitOffset:576,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Le}],methods:[],template:null},slot:34});Object.assign(He,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(advanced-stereographic.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:56});Object.assign(Je,{...t,type:7,name:"ErrorSet0001!advanced-stereographic.KernelOutput(u8,advanced-stereographic.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:k},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:He}],methods:[],template:null},slot:37});Object.assign(Ne,{...t,type:3,name:"createPartialOutput",length:1,byteSize:112,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:320,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:352,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:2,name:"2",structure:y},{...e,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:3,name:"3",structure:y},{...e,type:6,bitOffset:448,bitSize:192,byteSize:24,slot:4,name:"4",structure:v},{...e,type:6,bitOffset:0,bitSize:320,byteSize:40,slot:5,name:"5",structure:I},{...e,type:6,bitOffset:640,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Je}],methods:[],template:null},slot:35});const ha=new Uint8Array,ga={argStruct:Ge,thunk:5,name:"createOutput"},za={argStruct:Ne,thunk:7,name:"createPartialOutput"};Object.assign(Qe,{...t,type:2,name:"advanced-stereographic",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:ha}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:$e},{...e,type:7,isRequired:!1,name:"Input",structure:v},{...e,type:7,isRequired:!1,name:"Output",structure:k},{...e,type:7,isRequired:!1,name:"Parameters",structure:I}],methods:[ga,za],template:null},slot:0});const wa=[c,oe,me,D,U,O,S,p,f,le,ye,F,u,z,s,r,ce,M,be,T,pe,$,fe,de,B,Se,L,he,G,ge,H,ze,J,we,N,Ae,Ue,Q,Oe,W,Re,X,P,V,w,qe,Y,je,Pe,Z,Ve,ee,te,Ce,re,ve,se,C,A,ke,ae,Ie,ne,$e,R,xe,Ee,y,Ke,j,_e,ie,v,De,Fe,ue,k,I,Be,Le,Ge,He,Je,Ne,Qe],Aa=gt(wa),Ua=Qe.constructor,Oa=(async()=>{const o=new URL("advanced-stereographic-d5fb40df.wasm",import.meta.url).href;return fetch(o)})();zt(Oa,{...Aa,writeBack:!0});const{createOutput:ka,createPartialOutput:Ra,kernel:Te,Input:qa,Output:Ia,Parameters:xa}=Ua;function ja(o,l,n,a,i={},h={}){if(Array.isArray(i)){const d=i;i={};for(const[b,g]of Object.keys(Te.inputImages).entries())i[g]=d[b]}const x=new qa(void 0),E=Object.keys(Te.inputImages),m=[];let q;for(const d of E){let b=i[d];if(b||(E.length===1&&["data","width","height"].every(g=>!!i[g])?b=i:m.push(d)),x[d]=b,q){if(b.colorSpace!==q)throw new Error(`Input images must all use the same color space: ${q}`)}else q=b.colorSpace}if(m.length>0)throw new Error(`Missing input image${m.length>1?"s":""}: ${m.join(", ")}`);const Me=Ra(o,l,n,a,x,h),We=d=>{const b=Object.keys(d),g={};for(const Xe of b){const{data:{typedArray:K},width:Ye,height:tt}=d[Xe];let _;if(typeof ImageData=="function"){const rt=new Uint8ClampedArray(K.buffer,K.byteOffset,K.byteLength);_=new ImageData(rt,Ye,a,{colorSpace:q})}else _={data:K,width:Ye,height:tt};if(b.length===1)return _;g[Xe]=_}return g};return Me[Symbol.toStringTag]==="Promise"?Me.then(We):We(Me)}function Pa(){const o={};for(let[l,n]of Object.entries(Te)){if(l==="parameters"){const a={};for(const[i,h]of Object.entries(n)){const x=a[i]={};for(let[E,m]of Object.entries(h))typeof m=="object"?"string"in m?m=m.string:m=et(m):typeof m=="function"&&(m=Va(m.name)),x[E]=m}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());o[l]=n}return o}function et(o){const l=[];for(let[n,a]of Object.entries(o))typeof a=="object"&&(a=et(a)),l[n]=a;return l}function Va(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[l,n,...a]=o.data;Ca(l,a).then(([i,h])=>{postMessage([l,n,i],{transfer:h})}).catch(i=>{postMessage(["error",n,i])})};async function Ca(o,l){switch(o){case"getKernelInfo":return[Pa(...l)];case"createPartialImageData":const a=await ja(...l),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const h of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${o}`)}}
