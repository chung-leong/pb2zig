import{u as _e,a as Te,b as $e,d as Be,c as Le,e as Ge,f as He,g as Je,h as Ne,i as Qe,j as We,k as Xe,l as Ye,m as Ze,o as et,n as tt,p as st,q as rt}from"./index-422d9c98.js";_e();Te();$e();Be();Le();Ge();He();Je();Ne();Qe();We();Xe();Ye();Ze();et();tt();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},b={},W={},X={},v={},Y={},Z={},E={},p={},f={},ee={},te={},x={},q={},se={},l={},s={},re={},K={},ae={},ne={},D={},ie={},F={},d={},ue={},M={},oe={},le={},_={},me={},T={},ye={},$={},ce={},be={},B={},pe={},L={},fe={},G={},A={},z={},he={},H={},de={},J={},Ae={},O={},ge={},Se={},m={},ze={},w={},N={},U={},Oe={},Re={},Q={},j={},P={},Ue={},je={},Pe={},Ce={},ke={},Ie={},Ve={};Object.assign(b,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:5});Object.assign(W,{...t,type:1,name:"[22:0]u8",length:22,byteSize:23,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:4});Object.assign(X,{...t,type:11,name:"*const [22:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:3});Object.assign(v,{...t,type:11,name:"*const *const [22:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:2});Object.assign(Y,{...t,type:1,name:"[7:0]u8",length:7,byteSize:8,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:8});Object.assign(Z,{...t,type:11,name:"*const [7:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[],template:null},slot:7});Object.assign(E,{...t,type:11,name:"*const *const [7:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:6});Object.assign(p,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[],template:null},slot:10});Object.assign(f,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:p}],methods:[],template:null},slot:9});Object.assign(ee,{...t,type:1,name:"[33:0]u8",length:33,byteSize:34,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:13});Object.assign(te,{...t,type:11,name:"*const [33:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:12});Object.assign(x,{...t,type:11,name:"*const *const [33:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:11});Object.assign(q,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:46});Object.assign(se,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:32});Object.assign(l,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:l}],methods:[],template:null},slot:65});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:l}],methods:[],template:null},slot:64});const at=new Uint8Array([]),nt=new Uint8Array([184,249,15,0]),it=new Uint8Array([0,0,0,0,0,0,0,0]),ut=new Uint8Array([56,250,15,0]),ot=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(re,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:at},slots:{0:{structure:s,memory:{array:nt},slots:{0:{structure:l,memory:{array:it}}}},1:{structure:s,memory:{array:ut},slots:{0:{structure:l,memory:{array:ot}}}}}}},slot:50});Object.assign(K,{...t,type:11,name:"Struct0014",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:49});Object.assign(ae,{...t,type:1,name:"[19:0]u8",length:19,byteSize:20,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:53});Object.assign(ne,{...t,type:11,name:"*const [19:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:52});Object.assign(D,{...t,type:11,name:"*const *const [19:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:51});const lt=new Uint8Array([]),mt=new Uint8Array([170,170,170,170]),y=new Uint8Array([]),yt=new Uint8Array([136,248,15,0]),ct=new Uint8Array([165,33,16,0]),bt=new Uint8Array([77,105,110,32,97,110,100,32,109,97,120,32,108,105,109,105,116,115,46,0]);Object.assign(ie,{...t,type:2,name:"Struct0010",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:se},{...e,type:8,isRequired:!1,slot:0,name:"defaultValue",structure:K},{...e,type:8,isRequired:!1,slot:1,name:"description",structure:D}],methods:[],template:{memory:{array:lt},slots:{0:{structure:K,memory:{array:mt},slots:{0:{structure:re,memory:{array:y},address:-1431655766}}},1:{structure:D,memory:{array:yt},slots:{0:{structure:ne,memory:{array:ct},slots:{0:{structure:ae,memory:{array:bt},address:1057189}}}}}}}},slot:39});Object.assign(F,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:38});Object.assign(d,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:33});const pt=new Uint8Array([]),ft=new Uint8Array([72,249,15,0]),ht=new Uint8Array([0,0,0,0,0,0,0,0]),dt=new Uint8Array([112,249,15,0]),gt=new Uint8Array([0,0,0,0,0,0,0,0]),St=new Uint8Array([152,249,15,0]),zt=new Uint8Array([0,0,0,0,0,0,0,0]),Ot=new Uint8Array([232,249,15,0]),Rt=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(ue,{...t,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:s}],methods:[],template:{memory:{array:pt},slots:{0:{structure:s,memory:{array:ft},slots:{0:{structure:l,memory:{array:ht}}}},1:{structure:s,memory:{array:dt},slots:{0:{structure:l,memory:{array:gt}}}},2:{structure:s,memory:{array:St},slots:{0:{structure:l,memory:{array:zt}}}},3:{structure:s,memory:{array:Ot},slots:{0:{structure:l,memory:{array:Rt}}}}}}},slot:55});Object.assign(M,{...t,type:11,name:"Struct0015",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:54});Object.assign(oe,{...t,type:1,name:"[48:0]u8",length:48,byteSize:49,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:58});Object.assign(le,{...t,type:11,name:"*const [48:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:57});Object.assign(_,{...t,type:11,name:"*const *const [48:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:56});const qt=new Uint8Array([]),wt=new Uint8Array([170,170,170,170]),At=new Uint8Array([160,248,15,0]),Ut=new Uint8Array([116,33,16,0]),jt=new Uint8Array([67,111,108,111,114,32,102,111,114,32,116,104,114,101,115,104,111,108,100,101,100,32,97,114,101,97,46,99,111,108,111,114,70,111,114,65,108,108,80,97,115,115,101,100,65,114,101,97,0]);Object.assign(me,{...t,type:2,name:"Struct0011",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:d},{...e,type:8,isRequired:!1,slot:0,name:"defaultValue",structure:M},{...e,type:8,isRequired:!1,slot:1,name:"description",structure:_}],methods:[],template:{memory:{array:qt},slots:{0:{structure:M,memory:{array:wt},slots:{0:{structure:ue,memory:{array:y},address:-1431655766}}},1:{structure:_,memory:{array:At},slots:{0:{structure:le,memory:{array:Ut},slots:{0:{structure:oe,memory:{array:jt},address:1057140}}}}}}}},slot:41});Object.assign(T,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:40});const Pt=new Uint8Array([]),Ct=new Uint8Array([72,249,15,0]),kt=new Uint8Array([0,0,0,0,0,0,240,63]),It=new Uint8Array([112,249,15,0]),Vt=new Uint8Array([0,0,0,0,0,0,240,63]),vt=new Uint8Array([152,249,15,0]),Et=new Uint8Array([0,0,0,0,0,0,240,63]),xt=new Uint8Array([232,249,15,0]),Kt=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(ye,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:s}],methods:[],template:{memory:{array:Pt},slots:{0:{structure:s,memory:{array:Ct},slots:{0:{structure:l,memory:{array:kt}}}},1:{structure:s,memory:{array:It},slots:{0:{structure:l,memory:{array:Vt}}}},2:{structure:s,memory:{array:vt},slots:{0:{structure:l,memory:{array:Et}}}},3:{structure:s,memory:{array:xt},slots:{0:{structure:l,memory:{array:Kt}}}}}}},slot:60});Object.assign($,{...t,type:11,name:"Struct0016",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:59});Object.assign(ce,{...t,type:1,name:"[25:0]u8",length:25,byteSize:26,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:63});Object.assign(be,{...t,type:11,name:"*const [25:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:62});Object.assign(B,{...t,type:11,name:"*const *const [25:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:61});const Dt=new Uint8Array([]),Ft=new Uint8Array([170,170,170,170]),Mt=new Uint8Array([160,248,15,0]),_t=new Uint8Array([90,33,16,0]),Tt=new Uint8Array([67,111,108,111,114,32,102,111,114,32,97,108,108,32,112,97,115,115,101,100,32,97,114,101,97,0]);Object.assign(pe,{...t,type:2,name:"Struct0012",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:d},{...e,type:8,isRequired:!1,slot:0,name:"defaultValue",structure:$},{...e,type:8,isRequired:!1,slot:1,name:"description",structure:B}],methods:[],template:{memory:{array:Dt},slots:{0:{structure:$,memory:{array:Ft},slots:{0:{structure:ye,memory:{array:y},address:-1431655766}}},1:{structure:B,memory:{array:Mt},slots:{0:{structure:be,memory:{array:_t},slots:{0:{structure:ce,memory:{array:Tt},address:1057114}}}}}}}},slot:43});Object.assign(L,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:42});const $t=new Uint8Array([]),Bt=new Uint8Array([170,170,170,170]),Lt=new Uint8Array([170,170,170,170]),Gt=new Uint8Array([170,170,170,170]);Object.assign(fe,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"threshold",structure:F},{...e,type:8,isRequired:!1,slot:1,name:"outputColor1",structure:T},{...e,type:8,isRequired:!1,slot:2,name:"outputColor2",structure:L}],methods:[],template:{memory:{array:$t},slots:{0:{structure:F,memory:{array:Bt},slots:{0:{structure:ie,memory:{array:y},address:-1431655766}}},1:{structure:T,memory:{array:Lt},slots:{0:{structure:me,memory:{array:y},address:-1431655766}}},2:{structure:L,memory:{array:Gt},slots:{0:{structure:pe,memory:{array:y},address:-1431655766}}}}}},slot:15});Object.assign(G,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:14});const Ht=new Uint8Array([]),Jt=new Uint8Array([48,250,15,0]),Nt=new Uint8Array([4,0,0,0]);Object.assign(A,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:Ht},slots:{0:{structure:f,memory:{array:Jt},slots:{0:{structure:p,memory:{array:Nt}}}}}}},slot:45});Object.assign(z,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:A}],methods:[],template:null},slot:44});const Qt=new Uint8Array([]),Wt=new Uint8Array([170,170,170,170]);Object.assign(he,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"source",structure:z}],methods:[],template:{memory:{array:Qt},slots:{0:{structure:z,memory:{array:Wt},slots:{0:{structure:A,memory:{array:y},address:-1431655766}}}}}},slot:17});Object.assign(H,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:he}],methods:[],template:null},slot:16});const Xt=new Uint8Array([]),Yt=new Uint8Array([170,170,170,170]);Object.assign(de,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"target",structure:z}],methods:[],template:{memory:{array:Xt},slots:{0:{structure:z,memory:{array:Yt},slots:{0:{structure:A,memory:{array:y},address:-1431655766}}}}}},slot:19});Object.assign(J,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:de}],methods:[],template:null},slot:18});const Zt=new Uint8Array([]),es=new Uint8Array([]),ts=new Uint8Array([28,251,15,0]),ss=new Uint8Array([241,37,16,0]),rs=new Uint8Array([110,101,116,46,111,110,116,104,101,119,105,110,103,115,46,102,105,108,116,101,114,115,0]),as=new Uint8Array([92,251,15,0]),ns=new Uint8Array([233,37,16,0]),is=new Uint8Array([65,110,100,121,32,76,105,0]),us=new Uint8Array([156,251,15,0]),os=new Uint8Array([1,0,0,0]),ls=new Uint8Array([244,251,15,0]),ms=new Uint8Array([199,37,16,0]),ys=new Uint8Array([84,104,114,101,115,104,111,108,100,105,110,103,32,98,97,115,101,115,32,111,110,32,98,114,105,103,104,116,110,101,115,115,46,0]),cs=new Uint8Array([170,170,170,170]),bs=new Uint8Array([170,170,170,170]),ps=new Uint8Array([170,170,170,170]);Object.assign(Ae,{...t,type:2,name:"brightness-threshold.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Zt}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:v},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:E},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:f},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:x},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:G},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:H},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:J}],methods:[],template:{memory:{array:es},slots:{0:{structure:v,memory:{array:ts},slots:{0:{structure:X,memory:{array:ss},slots:{0:{structure:W,memory:{array:rs},address:1058289}}}}},1:{structure:E,memory:{array:as},slots:{0:{structure:Z,memory:{array:ns},slots:{0:{structure:Y,memory:{array:is},address:1058281}}}}},2:{structure:f,memory:{array:us},slots:{0:{structure:p,memory:{array:os}}}},3:{structure:x,memory:{array:ls},slots:{0:{structure:te,memory:{array:ms},slots:{0:{structure:ee,memory:{array:ys},address:1058247}}}}},4:{structure:G,memory:{array:cs},slots:{0:{structure:fe,memory:{array:y},address:-1431655766}}},5:{structure:H,memory:{array:bs},slots:{0:{structure:he,memory:{array:y},address:-1431655766}}},6:{structure:J,memory:{array:ps},slots:{0:{structure:de,memory:{array:y},address:-1431655766}}}}}},slot:1});Object.assign(O,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:24});Object.assign(ge,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:23});Object.assign(Se,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:ge}],methods:[],template:null},slot:22});Object.assign(m,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[],template:null},slot:25});const fs=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(ze,{...t,type:9,name:"brightness-threshold.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:p},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:p}],methods:[],template:{memory:{array:fs}}},slot:26});Object.assign(w,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:w}],methods:[],template:null},slot:27});const hs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ds=new Uint8Array([]),gs=new Uint8Array([216,249,15,0]),Ss=new Uint8Array([4,0,0,0]);Object.assign(N,{...t,type:2,name:"brightness-threshold.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Se},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ze},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:w}],methods:[],template:{memory:{array:hs}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:d},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:ds},slots:{0:{structure:f,memory:{array:gs},slots:{0:{structure:p,memory:{array:Ss}}}}}}},slot:21});const zs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Os=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Rs=new Uint8Array([0,0,0,0,0,0,0,0]),ve=new Uint8Array([]);Object.assign(U,{...t,type:2,name:"brightness-threshold.KernelInput(u8,brightness-threshold.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"source",structure:N}],methods:[],template:{memory:{array:zs},slots:{0:{structure:N,memory:{array:Os},slots:{0:{structure:Se,memory:{array:Rs},slots:{0:{structure:ge,memory:{array:ve}}}}}}}}},slot:20});Object.assign(Oe,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:23});Object.assign(Re,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Oe}],methods:[],template:null},slot:30});const qs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ws=new Uint8Array([]),As=new Uint8Array([216,249,15,0]),Us=new Uint8Array([4,0,0,0]);Object.assign(Q,{...t,type:2,name:"brightness-threshold.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Re},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ze},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:w}],methods:[],template:{memory:{array:qs}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:d},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:ws},slots:{0:{structure:f,memory:{array:As},slots:{0:{structure:p,memory:{array:Us}}}}}}},slot:29});const js=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ps=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Cs=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(j,{...t,type:2,name:"brightness-threshold.KernelOutput(u8,brightness-threshold.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"target",structure:Q}],methods:[],template:{memory:{array:js},slots:{0:{structure:Q,memory:{array:Ps},slots:{0:{structure:Re,memory:{array:Cs},slots:{0:{structure:Oe,memory:{array:ve}}}}}}}}},slot:28});const ks=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,0,0,0,0,128,63,0,0,0,0,0,0,0,0]);Object.assign(P,{...t,type:2,name:"brightness-threshold.KernelParameters(brightness-threshold.kernel)",length:1,byteSize:48,align:4,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:256,bitSize:64,byteSize:8,slot:0,name:"threshold",structure:se},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:128,byteSize:16,slot:1,name:"outputColor1",structure:d},{...e,type:6,isRequired:!1,bitOffset:128,bitSize:128,byteSize:16,slot:2,name:"outputColor2",structure:d}],methods:[],template:{memory:{array:ks}}},slot:31});Object.assign(Ue,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(brightness-threshold.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:47});Object.assign(je,{...t,type:7,name:"ErrorSet0000!brightness-threshold.KernelOutput(u8,brightness-threshold.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:j},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Ue}],methods:[],template:null},slot:36});Object.assign(Pe,{...t,type:3,name:"createOutput",length:1,byteSize:112,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:0,name:"0",structure:m},{...e,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:1,name:"1",structure:m},{...e,type:6,bitOffset:448,bitSize:192,byteSize:24,slot:2,name:"2",structure:U},{...e,type:6,bitOffset:0,bitSize:384,byteSize:48,slot:3,name:"3",structure:P},{...e,type:6,bitOffset:640,bitSize:224,byteSize:28,slot:4,name:"retval",structure:je}],methods:[],template:null},slot:34});Object.assign(Ce,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(brightness-threshold.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:48});Object.assign(ke,{...t,type:7,name:"ErrorSet0001!brightness-threshold.KernelOutput(u8,brightness-threshold.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:j},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Ce}],methods:[],template:null},slot:37});Object.assign(Ie,{...t,type:3,name:"createPartialOutput",length:1,byteSize:128,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:0,name:"0",structure:m},{...e,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:1,name:"1",structure:m},{...e,type:3,bitOffset:448,bitSize:32,byteSize:4,slot:2,name:"2",structure:m},{...e,type:3,bitOffset:480,bitSize:32,byteSize:4,slot:3,name:"3",structure:m},{...e,type:6,bitOffset:512,bitSize:192,byteSize:24,slot:4,name:"4",structure:U},{...e,type:6,bitOffset:0,bitSize:384,byteSize:48,slot:5,name:"5",structure:P},{...e,type:6,bitOffset:704,bitSize:224,byteSize:28,slot:6,name:"retval",structure:ke}],methods:[],template:null},slot:35});const Is={argStruct:Pe,thunk:1,name:"createOutput"},Vs={argStruct:Ie,thunk:4,name:"createPartialOutput"};Object.assign(Ve,{...t,type:2,name:"brightness-threshold",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:ve}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:Ae},{...e,type:7,isRequired:!1,name:"Input",structure:U},{...e,type:7,isRequired:!1,name:"Output",structure:j},{...e,type:7,isRequired:!1,name:"Parameters",structure:P}],methods:[Is,Vs],template:null},slot:0});const vs=[b,W,X,v,Y,Z,E,p,f,ee,te,x,q,se,l,s,re,K,ae,ne,D,ie,F,d,ue,M,oe,le,_,me,T,ye,$,ce,be,B,pe,L,fe,G,A,z,he,H,de,J,Ae,O,ge,Se,m,ze,w,N,U,Oe,Re,Q,j,P,Ue,je,Pe,Ce,ke,Ie,Ve],Es=st(vs),xs=Ve.constructor,Ks=(async()=>{const i=new URL("brightness-threshold-176530c8.wasm",import.meta.url).href;return fetch(i)})();rt(Ks,{...Es,writeBack:!0});const{createOutput:Ls,createPartialOutput:Ds,kernel:we,Input:Fs,Output:Gs,Parameters:Hs}=xs;function Ms(i,o,a,r,n={},g={}){if(Array.isArray(n)){const h=n;n={};for(const[c,S]of Object.keys(we.inputImages).entries())n[S]=h[c]}const C=new Fs(void 0),k=Object.keys(we.inputImages),u=[];let R;for(const h of k){let c=n[h];if(c||(k.length===1&&["data","width","height"].every(S=>!!n[S])?c=n:u.push(h)),C[h]=c,R){if(c.colorSpace!==R)throw new Error(`Input images must all use the same color space: ${R}`)}else R=c.colorSpace}if(u.length>0)throw new Error(`Missing input image${u.length>1?"s":""}: ${u.join(", ")}`);const qe=Ds(i,o,a,r,C,g),Ee=h=>{const c=Object.keys(h),S={};for(const xe of c){const{data:{typedArray:I},width:Ke,height:Fe}=h[xe];let V;if(typeof ImageData=="function"){const Me=new Uint8ClampedArray(I.buffer,I.byteOffset,I.byteLength);V=new ImageData(Me,Ke,r,{colorSpace:R})}else V={data:I,width:Ke,height:Fe};if(c.length===1)return V;S[xe]=V}return S};return qe[Symbol.toStringTag]==="Promise"?qe.then(Ee):Ee(qe)}function _s(){const i={};for(let[o,a]of Object.entries(we)){if(o==="parameters"){const r={};for(const[n,g]of Object.entries(a)){const C=r[n]={};for(let[k,u]of Object.entries(g))typeof u=="object"?"string"in u?u=u.string:u=De(u):typeof u=="function"&&(u=Ts(u.name)),C[k]=u}a=r}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());i[o]=a}return i}function De(i){const o=[];for(let[a,r]of Object.entries(i))typeof r=="object"&&(r=De(r)),o[a]=r;return o}function Ts(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[o,a,...r]=i.data;$s(o,r).then(([n,g])=>{postMessage([o,a,n],{transfer:g})}).catch(n=>{postMessage(["error",a,n])})};async function $s(i,o){switch(i){case"getKernelInfo":return[_s(...o)];case"createPartialImageData":const r=await Ms(...o),n=[];if("data"in r&&"width"in r&&"height"in r)n.push(r.data.buffer);else for(const g of Object.entries(r))n.push(r.data.buffer);return[r,n];default:throw new Error(`Unknown function: ${i}`)}}
