import{u as Ut,a as Rt,b as qt,d as Ot,c as jt,e as Pt,f as Vt,g as Ct,h as xt,i as vt,j as kt,k as It,l as Et,m as Kt,o as Dt,n as Ft,p as Mt,q as _t}from"./index-422d9c98.js";Ut();Rt();qt();Ot();jt();Pt();Vt();Ct();xt();vt();kt();It();Et();Kt();Dt();Ft();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},z={},we={},Ae={},$={},Ue={},Re={},B={},d={},f={},qe={},Oe={},L={},b={},o={},s={},r={},O={},g={},j={},h={},je={},G={},Pe={},H={},Ve={},J={},Ce={},N={},xe={},Q={},ve={},W={},ke={},X={},Ie={},Y={},Ee={},Z={},Ke={},ee={},De={},te={},Fe={},re={},Me={},se={},_e={},ae={},k={},R={},Te={},ne={},$e={},ie={},Be={},ue={},Le={},oe={},Ge={},me={},He={},ye={},Je={},le={},Ne={},ce={},Qe={},be={},P={},x={},U={},We={},pe={},Xe={},de={},Ye={},fe={},I={},q={},Ze={},Se={},et={},ge={},ot={},V={},tt={},rt={},c={},st={},v={},he={},E={},at={},nt={},ze={},K={},D={},mt={},yt={},lt={},ct={},bt={},pt={},dt={};Object.assign(z,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:z}],methods:[],template:null},slot:5});Object.assign(we,{...t,type:1,name:"[18:0]u8",length:18,byteSize:19,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:z}],methods:[],template:null},slot:4});Object.assign(Ae,{...t,type:11,name:"*const [18:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:we}],methods:[],template:null},slot:3});Object.assign($,{...t,type:11,name:"*const *const [18:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ae}],methods:[],template:null},slot:2});Object.assign(Ue,{...t,type:1,name:"[8:0]u8",length:8,byteSize:9,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:z}],methods:[],template:null},slot:8});Object.assign(Re,{...t,type:11,name:"*const [8:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ue}],methods:[],template:null},slot:7});Object.assign(B,{...t,type:11,name:"*const *const [8:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Re}],methods:[],template:null},slot:6});Object.assign(d,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:d}],methods:[],template:null},slot:10});Object.assign(f,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:d}],methods:[],template:null},slot:9});Object.assign(qe,{...t,type:1,name:"[39:0]u8",length:39,byteSize:40,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:z}],methods:[],template:null},slot:13});Object.assign(Oe,{...t,type:11,name:"*const [39:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:qe}],methods:[],template:null},slot:12});Object.assign(L,{...t,type:11,name:"*const *const [39:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Oe}],methods:[],template:null},slot:11});Object.assign(b,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:33});Object.assign(o,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:32});Object.assign(s,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:s}],methods:[],template:null},slot:98});Object.assign(r,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:s}],methods:[],template:null},slot:97});const Tt=new Uint8Array([]),$t=new Uint8Array([224,244,15,0]),Bt=new Uint8Array([0,0,0,0,0,0,20,192]),Lt=new Uint8Array([8,245,15,0]),Gt=new Uint8Array([0,0,0,0,0,0,20,192]);Object.assign(O,{...t,type:2,name:"Struct0048",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Tt},slots:{0:{structure:r,memory:{array:$t},slots:{0:{structure:s,memory:{array:Bt}}}},1:{structure:r,memory:{array:Lt},slots:{0:{structure:s,memory:{array:Gt}}}}}}},slot:66});Object.assign(g,{...t,type:11,name:"Struct0030",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:O}],methods:[],template:null},slot:65});const Ht=new Uint8Array([]),Jt=new Uint8Array([224,244,15,0]),Nt=new Uint8Array([0,0,0,0,0,0,20,64]),Qt=new Uint8Array([8,245,15,0]),Wt=new Uint8Array([0,0,0,0,0,0,20,64]);Object.assign(j,{...t,type:2,name:"Struct0049",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Ht},slots:{0:{structure:r,memory:{array:Jt},slots:{0:{structure:s,memory:{array:Nt}}}},1:{structure:r,memory:{array:Qt},slots:{0:{structure:s,memory:{array:Wt}}}}}}},slot:68});Object.assign(h,{...t,type:11,name:"Struct0031",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:j}],methods:[],template:null},slot:67});const Xt=new Uint8Array([]),Yt=new Uint8Array([48,250,15,0]),Zt=new Uint8Array([51,51,51,51,51,51,211,191]),er=new Uint8Array([88,250,15,0]),tr=new Uint8Array([154,153,153,153,153,153,241,191]);Object.assign(je,{...t,type:2,name:"Struct0050",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Xt},slots:{0:{structure:r,memory:{array:Yt},slots:{0:{structure:s,memory:{array:Zt}}}},1:{structure:r,memory:{array:er},slots:{0:{structure:s,memory:{array:tr}}}}}}},slot:70});Object.assign(G,{...t,type:11,name:"Struct0032",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:je}],methods:[],template:null},slot:69});const rr=new Uint8Array([]),sr=new Uint8Array([170,170,170,170]),a=new Uint8Array([]),ar=new Uint8Array([170,170,170,170]),nr=new Uint8Array([170,170,170,170]);Object.assign(Pe,{...t,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:o},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:g},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:h},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:G}],methods:[],template:{memory:{array:rr},slots:{0:{structure:g,memory:{array:sr},slots:{0:{structure:O,memory:{array:a},address:-1431655766}}},1:{structure:h,memory:{array:ar},slots:{0:{structure:j,memory:{array:a},address:-1431655766}}},2:{structure:G,memory:{array:nr},slots:{0:{structure:je,memory:{array:a},address:-1431655766}}}}}},slot:40});Object.assign(H,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Pe}],methods:[],template:null},slot:39});const ir=new Uint8Array([]),ur=new Uint8Array([48,250,15,0]),or=new Uint8Array([205,204,204,204,204,204,0,64]),mr=new Uint8Array([88,250,15,0]),yr=new Uint8Array([154,153,153,153,153,153,185,63]);Object.assign(Ve,{...t,type:2,name:"Struct0051",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:ir},slots:{0:{structure:r,memory:{array:ur},slots:{0:{structure:s,memory:{array:or}}}},1:{structure:r,memory:{array:mr},slots:{0:{structure:s,memory:{array:yr}}}}}}},slot:72});Object.assign(J,{...t,type:11,name:"Struct0033",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ve}],methods:[],template:null},slot:71});const lr=new Uint8Array([]),cr=new Uint8Array([170,170,170,170]),br=new Uint8Array([170,170,170,170]),pr=new Uint8Array([170,170,170,170]);Object.assign(Ce,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:o},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:g},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:h},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:J}],methods:[],template:{memory:{array:lr},slots:{0:{structure:g,memory:{array:cr},slots:{0:{structure:O,memory:{array:a},address:-1431655766}}},1:{structure:h,memory:{array:br},slots:{0:{structure:j,memory:{array:a},address:-1431655766}}},2:{structure:J,memory:{array:pr},slots:{0:{structure:Ve,memory:{array:a},address:-1431655766}}}}}},slot:42});Object.assign(N,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ce}],methods:[],template:null},slot:41});const dr=new Uint8Array([]),fr=new Uint8Array([48,250,15,0]),Sr=new Uint8Array([51,51,51,51,51,51,227,63]),gr=new Uint8Array([88,250,15,0]),hr=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(xe,{...t,type:2,name:"Struct0052",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:dr},slots:{0:{structure:r,memory:{array:fr},slots:{0:{structure:s,memory:{array:Sr}}}},1:{structure:r,memory:{array:gr},slots:{0:{structure:s,memory:{array:hr}}}}}}},slot:74});Object.assign(Q,{...t,type:11,name:"Struct0034",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:xe}],methods:[],template:null},slot:73});const zr=new Uint8Array([]),wr=new Uint8Array([170,170,170,170]),Ar=new Uint8Array([170,170,170,170]),Ur=new Uint8Array([170,170,170,170]);Object.assign(ve,{...t,type:2,name:"Struct0020",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:o},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:g},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:h},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:Q}],methods:[],template:{memory:{array:zr},slots:{0:{structure:g,memory:{array:wr},slots:{0:{structure:O,memory:{array:a},address:-1431655766}}},1:{structure:h,memory:{array:Ar},slots:{0:{structure:j,memory:{array:a},address:-1431655766}}},2:{structure:Q,memory:{array:Ur},slots:{0:{structure:xe,memory:{array:a},address:-1431655766}}}}}},slot:44});Object.assign(W,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ve}],methods:[],template:null},slot:43});const Rr=new Uint8Array([]),qr=new Uint8Array([48,250,15,0]),Or=new Uint8Array([0,0,0,0,0,0,0,192]),jr=new Uint8Array([88,250,15,0]),Pr=new Uint8Array([0,0,0,0,0,0,0,192]);Object.assign(ke,{...t,type:2,name:"Struct0053",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Rr},slots:{0:{structure:r,memory:{array:qr},slots:{0:{structure:s,memory:{array:Or}}}},1:{structure:r,memory:{array:jr},slots:{0:{structure:s,memory:{array:Pr}}}}}}},slot:76});Object.assign(X,{...t,type:11,name:"Struct0035",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ke}],methods:[],template:null},slot:75});const Vr=new Uint8Array([]),Cr=new Uint8Array([48,250,15,0]),xr=new Uint8Array([0,0,0,0,0,0,0,64]),vr=new Uint8Array([88,250,15,0]),kr=new Uint8Array([0,0,0,0,0,0,0,64]);Object.assign(Ie,{...t,type:2,name:"Struct0054",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Vr},slots:{0:{structure:r,memory:{array:Cr},slots:{0:{structure:s,memory:{array:xr}}}},1:{structure:r,memory:{array:vr},slots:{0:{structure:s,memory:{array:kr}}}}}}},slot:78});Object.assign(Y,{...t,type:11,name:"Struct0036",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ie}],methods:[],template:null},slot:77});const Ir=new Uint8Array([]),Er=new Uint8Array([48,250,15,0]),Kr=new Uint8Array([154,153,153,153,153,153,201,63]),Dr=new Uint8Array([88,250,15,0]),Fr=new Uint8Array([236,81,184,30,133,235,241,191]);Object.assign(Ee,{...t,type:2,name:"Struct0055",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Ir},slots:{0:{structure:r,memory:{array:Er},slots:{0:{structure:s,memory:{array:Kr}}}},1:{structure:r,memory:{array:Dr},slots:{0:{structure:s,memory:{array:Fr}}}}}}},slot:80});Object.assign(Z,{...t,type:11,name:"Struct0037",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ee}],methods:[],template:null},slot:79});const Mr=new Uint8Array([]),_r=new Uint8Array([170,170,170,170]),Tr=new Uint8Array([170,170,170,170]),$r=new Uint8Array([170,170,170,170]);Object.assign(Ke,{...t,type:2,name:"Struct0021",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:o},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:X},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:Y},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:Z}],methods:[],template:{memory:{array:Mr},slots:{0:{structure:X,memory:{array:_r},slots:{0:{structure:ke,memory:{array:a},address:-1431655766}}},1:{structure:Y,memory:{array:Tr},slots:{0:{structure:Ie,memory:{array:a},address:-1431655766}}},2:{structure:Z,memory:{array:$r},slots:{0:{structure:Ee,memory:{array:a},address:-1431655766}}}}}},slot:46});Object.assign(ee,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ke}],methods:[],template:null},slot:45});const Br=new Uint8Array([]),Lr=new Uint8Array([48,250,15,0]),Gr=new Uint8Array([154,153,153,153,153,153,185,63]),Hr=new Uint8Array([88,250,15,0]),Jr=new Uint8Array([154,153,153,153,153,153,185,63]);Object.assign(De,{...t,type:2,name:"Struct0056",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Br},slots:{0:{structure:r,memory:{array:Lr},slots:{0:{structure:s,memory:{array:Gr}}}},1:{structure:r,memory:{array:Hr},slots:{0:{structure:s,memory:{array:Jr}}}}}}},slot:82});Object.assign(te,{...t,type:11,name:"Struct0038",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:De}],methods:[],template:null},slot:81});const Nr=new Uint8Array([]),Qr=new Uint8Array([48,250,15,0]),Wr=new Uint8Array([0,0,0,0,0,0,52,64]),Xr=new Uint8Array([88,250,15,0]),Yr=new Uint8Array([0,0,0,0,0,0,52,64]);Object.assign(Fe,{...t,type:2,name:"Struct0057",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Nr},slots:{0:{structure:r,memory:{array:Qr},slots:{0:{structure:s,memory:{array:Wr}}}},1:{structure:r,memory:{array:Xr},slots:{0:{structure:s,memory:{array:Yr}}}}}}},slot:84});Object.assign(re,{...t,type:11,name:"Struct0039",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Fe}],methods:[],template:null},slot:83});const Zr=new Uint8Array([]),es=new Uint8Array([48,250,15,0]),ts=new Uint8Array([0,0,0,0,0,0,8,64]),rs=new Uint8Array([88,250,15,0]),ss=new Uint8Array([145,43,80,230,122,182,251,63]);Object.assign(Me,{...t,type:2,name:"Struct0058",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Zr},slots:{0:{structure:r,memory:{array:es},slots:{0:{structure:s,memory:{array:ts}}}},1:{structure:r,memory:{array:rs},slots:{0:{structure:s,memory:{array:ss}}}}}}},slot:86});Object.assign(se,{...t,type:11,name:"Struct0040",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Me}],methods:[],template:null},slot:85});const as=new Uint8Array([]),ns=new Uint8Array([170,170,170,170]),is=new Uint8Array([170,170,170,170]),us=new Uint8Array([170,170,170,170]);Object.assign(_e,{...t,type:2,name:"Struct0022",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:o},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:te},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:re},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:se}],methods:[],template:{memory:{array:as},slots:{0:{structure:te,memory:{array:ns},slots:{0:{structure:De,memory:{array:a},address:-1431655766}}},1:{structure:re,memory:{array:is},slots:{0:{structure:Fe,memory:{array:a},address:-1431655766}}},2:{structure:se,memory:{array:us},slots:{0:{structure:Me,memory:{array:a},address:-1431655766}}}}}},slot:48});Object.assign(ae,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:_e}],methods:[],template:null},slot:47});const os=new Uint8Array([]),ms=new Uint8Array([224,244,15,0]),ys=new Uint8Array([0,0,0,0,0,0,240,63]),ls=new Uint8Array([8,245,15,0]),cs=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(k,{...t,type:2,name:"Struct0059",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:os},slots:{0:{structure:r,memory:{array:ms},slots:{0:{structure:s,memory:{array:ys}}}},1:{structure:r,memory:{array:ls},slots:{0:{structure:s,memory:{array:cs}}}}}}},slot:88});Object.assign(R,{...t,type:11,name:"Struct0041",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:k}],methods:[],template:null},slot:87});const bs=new Uint8Array([]),ps=new Uint8Array([48,250,15,0]),ds=new Uint8Array([0,0,0,0,0,64,127,64]),fs=new Uint8Array([88,250,15,0]),Ss=new Uint8Array([0,0,0,0,0,0,121,64]);Object.assign(Te,{...t,type:2,name:"Struct0060",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:bs},slots:{0:{structure:r,memory:{array:ps},slots:{0:{structure:s,memory:{array:ds}}}},1:{structure:r,memory:{array:fs},slots:{0:{structure:s,memory:{array:Ss}}}}}}},slot:90});Object.assign(ne,{...t,type:11,name:"Struct0042",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Te}],methods:[],template:null},slot:89});const gs=new Uint8Array([]),hs=new Uint8Array([48,250,15,0]),zs=new Uint8Array([0,0,0,0,0,64,111,64]),ws=new Uint8Array([88,250,15,0]),As=new Uint8Array([0,0,0,0,0,128,103,64]);Object.assign($e,{...t,type:2,name:"Struct0061",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:gs},slots:{0:{structure:r,memory:{array:hs},slots:{0:{structure:s,memory:{array:zs}}}},1:{structure:r,memory:{array:ws},slots:{0:{structure:s,memory:{array:As}}}}}}},slot:92});Object.assign(ie,{...t,type:11,name:"Struct0043",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:$e}],methods:[],template:null},slot:91});const Us=new Uint8Array([]),Rs=new Uint8Array([170,170,170,170]),qs=new Uint8Array([170,170,170,170]),Os=new Uint8Array([170,170,170,170]);Object.assign(Be,{...t,type:2,name:"Struct0023",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:o},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:R},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:ne},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:ie}],methods:[],template:{memory:{array:Us},slots:{0:{structure:R,memory:{array:Rs},slots:{0:{structure:k,memory:{array:a},address:-1431655766}}},1:{structure:ne,memory:{array:qs},slots:{0:{structure:Te,memory:{array:a},address:-1431655766}}},2:{structure:ie,memory:{array:Os},slots:{0:{structure:$e,memory:{array:a},address:-1431655766}}}}}},slot:50});Object.assign(ue,{...t,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Be}],methods:[],template:null},slot:49});const js=new Uint8Array([]),Ps=new Uint8Array([48,250,15,0]),Vs=new Uint8Array([0,0,0,0,0,64,143,64]),Cs=new Uint8Array([88,250,15,0]),xs=new Uint8Array([0,0,0,0,0,64,143,64]);Object.assign(Le,{...t,type:2,name:"Struct0062",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:js},slots:{0:{structure:r,memory:{array:Ps},slots:{0:{structure:s,memory:{array:Vs}}}},1:{structure:r,memory:{array:Cs},slots:{0:{structure:s,memory:{array:xs}}}}}}},slot:94});Object.assign(oe,{...t,type:11,name:"Struct0044",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Le}],methods:[],template:null},slot:93});const vs=new Uint8Array([]),ks=new Uint8Array([48,250,15,0]),Is=new Uint8Array([0,0,0,0,0,128,107,64]),Es=new Uint8Array([88,250,15,0]),Ks=new Uint8Array([0,0,0,0,0,192,119,64]);Object.assign(Ge,{...t,type:2,name:"Struct0063",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:vs},slots:{0:{structure:r,memory:{array:ks},slots:{0:{structure:s,memory:{array:Is}}}},1:{structure:r,memory:{array:Es},slots:{0:{structure:s,memory:{array:Ks}}}}}}},slot:96});Object.assign(me,{...t,type:11,name:"Struct0045",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ge}],methods:[],template:null},slot:95});const Ds=new Uint8Array([]),Fs=new Uint8Array([170,170,170,170]),Ms=new Uint8Array([170,170,170,170]),_s=new Uint8Array([170,170,170,170]);Object.assign(He,{...t,type:2,name:"Struct0024",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:o},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:R},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:oe},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:me}],methods:[],template:{memory:{array:Ds},slots:{0:{structure:R,memory:{array:Fs},slots:{0:{structure:k,memory:{array:a},address:-1431655766}}},1:{structure:oe,memory:{array:Ms},slots:{0:{structure:Le,memory:{array:a},address:-1431655766}}},2:{structure:me,memory:{array:_s},slots:{0:{structure:Ge,memory:{array:a},address:-1431655766}}}}}},slot:52});Object.assign(ye,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:He}],methods:[],template:null},slot:51});const Ts=new Uint8Array([]),$s=new Uint8Array([72,250,15,0]),Bs=new Uint8Array([0,0,0,0,0,0,24,192]),Ls=new Uint8Array([152,247,15,0]),Gs=new Uint8Array([0,0,0,0,0,0,36,64]),Hs=new Uint8Array([120,247,15,0]),Js=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(Je,{...t,type:2,name:"Struct0025",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:b},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:Ts},slots:{0:{structure:r,memory:{array:$s},slots:{0:{structure:s,memory:{array:Bs}}}},1:{structure:r,memory:{array:Ls},slots:{0:{structure:s,memory:{array:Gs}}}},2:{structure:r,memory:{array:Hs},slots:{0:{structure:s,memory:{array:Js}}}}}}},slot:54});Object.assign(le,{...t,type:11,name:"Struct0013",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Je}],methods:[],template:null},slot:53});const Ns=new Uint8Array([]),Qs=new Uint8Array([72,250,15,0]),Ws=new Uint8Array([0,0,0,0,0,0,240,63]),Xs=new Uint8Array([152,247,15,0]),Ys=new Uint8Array([0,0,0,0,0,64,143,64]),Zs=new Uint8Array([120,247,15,0]),ea=new Uint8Array([0,0,0,0,0,0,105,64]);Object.assign(Ne,{...t,type:2,name:"Struct0026",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:b},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:Ns},slots:{0:{structure:r,memory:{array:Qs},slots:{0:{structure:s,memory:{array:Ws}}}},1:{structure:r,memory:{array:Xs},slots:{0:{structure:s,memory:{array:Ys}}}},2:{structure:r,memory:{array:Zs},slots:{0:{structure:s,memory:{array:ea}}}}}}},slot:56});Object.assign(ce,{...t,type:11,name:"Struct0014",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ne}],methods:[],template:null},slot:55});const ta=new Uint8Array([]),ra=new Uint8Array([72,250,15,0]),sa=new Uint8Array([123,20,174,71,225,122,132,63]),aa=new Uint8Array([152,247,15,0]),na=new Uint8Array([0,0,0,0,0,0,224,63]),ia=new Uint8Array([120,247,15,0]),ua=new Uint8Array([154,153,153,153,153,153,201,63]);Object.assign(Qe,{...t,type:2,name:"Struct0027",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:b},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:ta},slots:{0:{structure:r,memory:{array:ra},slots:{0:{structure:s,memory:{array:sa}}}},1:{structure:r,memory:{array:aa},slots:{0:{structure:s,memory:{array:na}}}},2:{structure:r,memory:{array:ia},slots:{0:{structure:s,memory:{array:ua}}}}}}},slot:58});Object.assign(be,{...t,type:11,name:"Struct0015",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Qe}],methods:[],template:null},slot:57});Object.assign(P,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:34});const oa=new Uint8Array([]),ma=new Uint8Array([144,244,15,0]),ya=new Uint8Array([0,0,0,0,0,0,0,0]),la=new Uint8Array([184,244,15,0]),ca=new Uint8Array([0,0,0,0,0,0,0,0]),ba=new Uint8Array([224,244,15,0]),pa=new Uint8Array([0,0,0,0,0,0,0,0]),da=new Uint8Array([8,245,15,0]),fa=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(x,{...t,type:2,name:"Struct0064",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:r}],methods:[],template:{memory:{array:oa},slots:{0:{structure:r,memory:{array:ma},slots:{0:{structure:s,memory:{array:ya}}}},1:{structure:r,memory:{array:la},slots:{0:{structure:s,memory:{array:ca}}}},2:{structure:r,memory:{array:ba},slots:{0:{structure:s,memory:{array:pa}}}},3:{structure:r,memory:{array:da},slots:{0:{structure:s,memory:{array:fa}}}}}}},slot:100});Object.assign(U,{...t,type:11,name:"Struct0046",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:x}],methods:[],template:null},slot:99});const Sa=new Uint8Array([]),ga=new Uint8Array([192,249,15,0]),ha=new Uint8Array([0,0,0,0,0,0,240,63]),za=new Uint8Array([232,249,15,0]),wa=new Uint8Array([0,0,0,0,0,0,240,63]),Aa=new Uint8Array([16,250,15,0]),Ua=new Uint8Array([0,0,0,0,0,0,240,63]),Ra=new Uint8Array([56,250,15,0]),qa=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(We,{...t,type:2,name:"Struct0065",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:r}],methods:[],template:{memory:{array:Sa},slots:{0:{structure:r,memory:{array:ga},slots:{0:{structure:s,memory:{array:ha}}}},1:{structure:r,memory:{array:za},slots:{0:{structure:s,memory:{array:wa}}}},2:{structure:r,memory:{array:Aa},slots:{0:{structure:s,memory:{array:Ua}}}},3:{structure:r,memory:{array:Ra},slots:{0:{structure:s,memory:{array:qa}}}}}}},slot:102});Object.assign(pe,{...t,type:11,name:"Struct0047",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:We}],methods:[],template:null},slot:101});const Oa=new Uint8Array([]),ja=new Uint8Array([170,170,170,170]),Pa=new Uint8Array([170,170,170,170]),Va=new Uint8Array([170,170,170,170]);Object.assign(Xe,{...t,type:2,name:"Struct0028",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:P},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:U},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:pe},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:U}],methods:[],template:{memory:{array:Oa},slots:{0:{structure:U,memory:{array:ja},slots:{0:{structure:x,memory:{array:a},address:-1431655766}}},1:{structure:pe,memory:{array:Pa},slots:{0:{structure:We,memory:{array:a},address:-1431655766}}},2:{structure:U,memory:{array:Va},slots:{0:{structure:x,memory:{array:a},address:-1431655766}}}}}},slot:60});Object.assign(de,{...t,type:11,name:"Struct0016",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Xe}],methods:[],template:null},slot:59});const Ca=new Uint8Array([]),xa=new Uint8Array([170,170,170,170]),va=new Uint8Array([170,170,170,170]),ka=new Uint8Array([170,170,170,170]),Ia=new Uint8Array([170,170,170,170]),Ea=new Uint8Array([170,170,170,170]),Ka=new Uint8Array([170,170,170,170]),Da=new Uint8Array([170,170,170,170]),Fa=new Uint8Array([170,170,170,170]),Ma=new Uint8Array([170,170,170,170]),_a=new Uint8Array([170,170,170,170]),Ta=new Uint8Array([170,170,170,170]);Object.assign(Ye,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"a",structure:H},{...e,type:8,isRequired:!1,slot:1,name:"b",structure:N},{...e,type:8,isRequired:!1,slot:2,name:"c",structure:W},{...e,type:8,isRequired:!1,slot:3,name:"d",structure:ee},{...e,type:8,isRequired:!1,slot:4,name:"distort",structure:ae},{...e,type:8,isRequired:!1,slot:5,name:"imagesize",structure:ue},{...e,type:8,isRequired:!1,slot:6,name:"center",structure:ye},{...e,type:8,isRequired:!1,slot:7,name:"focus",structure:le},{...e,type:8,isRequired:!1,slot:8,name:"scale",structure:ce},{...e,type:8,isRequired:!1,slot:9,name:"fill",structure:be},{...e,type:8,isRequired:!1,slot:10,name:"bgcolor",structure:de}],methods:[],template:{memory:{array:Ca},slots:{0:{structure:H,memory:{array:xa},slots:{0:{structure:Pe,memory:{array:a},address:-1431655766}}},1:{structure:N,memory:{array:va},slots:{0:{structure:Ce,memory:{array:a},address:-1431655766}}},2:{structure:W,memory:{array:ka},slots:{0:{structure:ve,memory:{array:a},address:-1431655766}}},3:{structure:ee,memory:{array:Ia},slots:{0:{structure:Ke,memory:{array:a},address:-1431655766}}},4:{structure:ae,memory:{array:Ea},slots:{0:{structure:_e,memory:{array:a},address:-1431655766}}},5:{structure:ue,memory:{array:Ka},slots:{0:{structure:Be,memory:{array:a},address:-1431655766}}},6:{structure:ye,memory:{array:Da},slots:{0:{structure:He,memory:{array:a},address:-1431655766}}},7:{structure:le,memory:{array:Fa},slots:{0:{structure:Je,memory:{array:a},address:-1431655766}}},8:{structure:ce,memory:{array:Ma},slots:{0:{structure:Ne,memory:{array:a},address:-1431655766}}},9:{structure:be,memory:{array:_a},slots:{0:{structure:Qe,memory:{array:a},address:-1431655766}}},10:{structure:de,memory:{array:Ta},slots:{0:{structure:Xe,memory:{array:a},address:-1431655766}}}}}},slot:15});Object.assign(fe,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ye}],methods:[],template:null},slot:14});const $a=new Uint8Array([]),Ba=new Uint8Array([48,250,15,0]),La=new Uint8Array([4,0,0,0]);Object.assign(I,{...t,type:2,name:"Struct0029",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:$a},slots:{0:{structure:f,memory:{array:Ba},slots:{0:{structure:d,memory:{array:La}}}}}}},slot:62});Object.assign(q,{...t,type:11,name:"Struct0017",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:I}],methods:[],template:null},slot:61});const Ga=new Uint8Array([]),Ha=new Uint8Array([170,170,170,170]);Object.assign(Ze,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:q}],methods:[],template:{memory:{array:Ga},slots:{0:{structure:q,memory:{array:Ha},slots:{0:{structure:I,memory:{array:a},address:-1431655766}}}}}},slot:17});Object.assign(Se,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ze}],methods:[],template:null},slot:16});const Ja=new Uint8Array([]),Na=new Uint8Array([170,170,170,170]);Object.assign(et,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:q}],methods:[],template:{memory:{array:Ja},slots:{0:{structure:q,memory:{array:Na},slots:{0:{structure:I,memory:{array:a},address:-1431655766}}}}}},slot:19});Object.assign(ge,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:et}],methods:[],template:null},slot:18});const Qa=new Uint8Array([]),Wa=new Uint8Array([]),Xa=new Uint8Array([28,251,15,0]),Ya=new Uint8Array([0,39,16,0]),Za=new Uint8Array([99,111,109,112,108,101,120,32,114,97,116,105,111,110,97,108,32,51,0]),en=new Uint8Array([92,251,15,0]),tn=new Uint8Array([247,38,16,0]),rn=new Uint8Array([112,105,120,101,108,101,114,111,0]),sn=new Uint8Array([156,251,15,0]),an=new Uint8Array([1,0,0,0]),nn=new Uint8Array([244,251,15,0]),un=new Uint8Array([207,38,16,0]),on=new Uint8Array([99,111,109,112,108,101,120,32,109,97,112,112,105,110,103,32,122,32,61,32,100,47,91,40,122,45,97,41,40,122,45,98,41,40,122,45,99,41,93,0]),mn=new Uint8Array([170,170,170,170]),yn=new Uint8Array([170,170,170,170]),ln=new Uint8Array([170,170,170,170]);Object.assign(ot,{...t,type:2,name:"complex-inverse.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Qa}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:$},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:B},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:f},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:L},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:fe},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:Se},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:ge}],methods:[],template:{memory:{array:Wa},slots:{0:{structure:$,memory:{array:Xa},slots:{0:{structure:Ae,memory:{array:Ya},slots:{0:{structure:we,memory:{array:Za},address:1058560}}}}},1:{structure:B,memory:{array:en},slots:{0:{structure:Re,memory:{array:tn},slots:{0:{structure:Ue,memory:{array:rn},address:1058551}}}}},2:{structure:f,memory:{array:sn},slots:{0:{structure:d,memory:{array:an}}}},3:{structure:L,memory:{array:nn},slots:{0:{structure:Oe,memory:{array:un},slots:{0:{structure:qe,memory:{array:on},address:1058511}}}}},4:{structure:fe,memory:{array:mn},slots:{0:{structure:Ye,memory:{array:a},address:-1431655766}}},5:{structure:Se,memory:{array:yn},slots:{0:{structure:Ze,memory:{array:a},address:-1431655766}}},6:{structure:ge,memory:{array:ln},slots:{0:{structure:et,memory:{array:a},address:-1431655766}}}}}},slot:1});Object.assign(V,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:z}],methods:[],template:null},slot:24});Object.assign(tt,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:V}],methods:[],template:null},slot:23});Object.assign(rt,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:tt}],methods:[],template:null},slot:22});Object.assign(c,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:25});const cn=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(st,{...t,type:9,name:"complex-inverse.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:d},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:d}],methods:[],template:{memory:{array:cn}}},slot:26});Object.assign(v,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:v}],methods:[],template:null},slot:27});const bn=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),pn=new Uint8Array([]),dn=new Uint8Array([216,249,15,0]),fn=new Uint8Array([4,0,0,0]);Object.assign(he,{...t,type:2,name:"complex-inverse.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:rt},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:st},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:v}],methods:[],template:{memory:{array:bn}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:V},{...e,type:7,isRequired:!1,name:"FPixel",structure:P},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:pn},slots:{0:{structure:f,memory:{array:dn},slots:{0:{structure:d,memory:{array:fn}}}}}}},slot:21});const Sn=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),gn=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),hn=new Uint8Array([0,0,0,0,0,0,0,0]),ft=new Uint8Array([]);Object.assign(E,{...t,type:2,name:"complex-inverse.KernelInput(u8,complex-inverse.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:he}],methods:[],template:{memory:{array:Sn},slots:{0:{structure:he,memory:{array:gn},slots:{0:{structure:rt,memory:{array:hn},slots:{0:{structure:tt,memory:{array:ft}}}}}}}}},slot:20});Object.assign(at,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:V}],methods:[],template:null},slot:23});Object.assign(nt,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:at}],methods:[],template:null},slot:30});const zn=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),wn=new Uint8Array([]),An=new Uint8Array([216,249,15,0]),Un=new Uint8Array([4,0,0,0]);Object.assign(ze,{...t,type:2,name:"complex-inverse.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:nt},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:st},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:v}],methods:[],template:{memory:{array:zn}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:V},{...e,type:7,isRequired:!1,name:"FPixel",structure:P},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:wn},slots:{0:{structure:f,memory:{array:An},slots:{0:{structure:d,memory:{array:Un}}}}}}},slot:29});const Rn=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),qn=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),On=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(K,{...t,type:2,name:"complex-inverse.KernelOutput(u8,complex-inverse.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:ze}],methods:[],template:{memory:{array:Rn},slots:{0:{structure:ze,memory:{array:qn},slots:{0:{structure:nt,memory:{array:On},slots:{0:{structure:at,memory:{array:ft}}}}}}}}},slot:28});const jn=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,154,153,153,190,205,204,140,191,102,102,6,64,205,204,204,61,154,153,25,63,0,0,0,0,205,204,76,62,41,92,143,191,0,0,64,64,215,179,221,63,0,0,122,67,0,0,60,67,0,0,92,67,0,0,190,67,0,0,0,0,0,0,72,67,205,204,76,62,0,0,0,0,0,0,0,0,0,0,0,0]);Object.assign(D,{...t,type:2,name:"complex-inverse.KernelParameters(complex-inverse.kernel)",length:1,byteSize:96,align:4,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:128,bitSize:64,byteSize:8,slot:0,name:"a",structure:o},{...e,type:6,isRequired:!1,bitOffset:192,bitSize:64,byteSize:8,slot:1,name:"b",structure:o},{...e,type:6,isRequired:!1,bitOffset:256,bitSize:64,byteSize:8,slot:2,name:"c",structure:o},{...e,type:6,isRequired:!1,bitOffset:320,bitSize:64,byteSize:8,slot:3,name:"d",structure:o},{...e,type:6,isRequired:!1,bitOffset:384,bitSize:64,byteSize:8,slot:4,name:"distort",structure:o},{...e,type:6,isRequired:!1,bitOffset:448,bitSize:64,byteSize:8,slot:5,name:"imagesize",structure:o},{...e,type:6,isRequired:!1,bitOffset:512,bitSize:64,byteSize:8,slot:6,name:"center",structure:o},{...e,type:4,isRequired:!1,bitOffset:576,bitSize:32,byteSize:4,slot:7,name:"focus",structure:b},{...e,type:4,isRequired:!1,bitOffset:608,bitSize:32,byteSize:4,slot:8,name:"scale",structure:b},{...e,type:4,isRequired:!1,bitOffset:640,bitSize:32,byteSize:4,slot:9,name:"fill",structure:b},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:128,byteSize:16,slot:10,name:"bgcolor",structure:P}],methods:[],template:{memory:{array:jn}}},slot:31});Object.assign(mt,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(complex-inverse.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:63});Object.assign(yt,{...t,type:7,name:"ErrorSet0000!complex-inverse.KernelOutput(u8,complex-inverse.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:K},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:mt}],methods:[],template:null},slot:37});Object.assign(lt,{...t,type:3,name:"createOutput",length:1,byteSize:160,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:768,bitSize:32,byteSize:4,slot:0,name:"0",structure:c},{...e,type:3,bitOffset:800,bitSize:32,byteSize:4,slot:1,name:"1",structure:c},{...e,type:6,bitOffset:832,bitSize:192,byteSize:24,slot:2,name:"2",structure:E},{...e,type:6,bitOffset:0,bitSize:768,byteSize:96,slot:3,name:"3",structure:D},{...e,type:6,bitOffset:1024,bitSize:224,byteSize:28,slot:4,name:"retval",structure:yt}],methods:[],template:null},slot:35});Object.assign(ct,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(complex-inverse.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:64});Object.assign(bt,{...t,type:7,name:"ErrorSet0001!complex-inverse.KernelOutput(u8,complex-inverse.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:K},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:ct}],methods:[],template:null},slot:38});Object.assign(pt,{...t,type:3,name:"createPartialOutput",length:1,byteSize:176,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:768,bitSize:32,byteSize:4,slot:0,name:"0",structure:c},{...e,type:3,bitOffset:800,bitSize:32,byteSize:4,slot:1,name:"1",structure:c},{...e,type:3,bitOffset:832,bitSize:32,byteSize:4,slot:2,name:"2",structure:c},{...e,type:3,bitOffset:864,bitSize:32,byteSize:4,slot:3,name:"3",structure:c},{...e,type:6,bitOffset:896,bitSize:192,byteSize:24,slot:4,name:"4",structure:E},{...e,type:6,bitOffset:0,bitSize:768,byteSize:96,slot:5,name:"5",structure:D},{...e,type:6,bitOffset:1088,bitSize:224,byteSize:28,slot:6,name:"retval",structure:bt}],methods:[],template:null},slot:36});const Pn={argStruct:lt,thunk:1,name:"createOutput"},Vn={argStruct:pt,thunk:5,name:"createPartialOutput"};Object.assign(dt,{...t,type:2,name:"complex-inverse",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:ft}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:ot},{...e,type:7,isRequired:!1,name:"Input",structure:E},{...e,type:7,isRequired:!1,name:"Output",structure:K},{...e,type:7,isRequired:!1,name:"Parameters",structure:D}],methods:[Pn,Vn],template:null},slot:0});const Cn=[z,we,Ae,$,Ue,Re,B,d,f,qe,Oe,L,b,o,s,r,O,g,j,h,je,G,Pe,H,Ve,J,Ce,N,xe,Q,ve,W,ke,X,Ie,Y,Ee,Z,Ke,ee,De,te,Fe,re,Me,se,_e,ae,k,R,Te,ne,$e,ie,Be,ue,Le,oe,Ge,me,He,ye,Je,le,Ne,ce,Qe,be,P,x,U,We,pe,Xe,de,Ye,fe,I,q,Ze,Se,et,ge,ot,V,tt,rt,c,st,v,he,E,at,nt,ze,K,D,mt,yt,lt,ct,bt,pt,dt],xn=Mt(Cn),vn=dt.constructor,kn=(async()=>{const m=new URL("complex-inverse-b27d492d.wasm",import.meta.url).href;return fetch(m)})();_t(kn,{...xn,writeBack:!0});const{createOutput:Tn,createPartialOutput:In,kernel:ut,Input:En,Output:$n,Parameters:Bn}=vn;function Kn(m,l,i,n,u={},w={}){if(Array.isArray(u)){const S=u;u={};for(const[p,A]of Object.keys(ut.inputImages).entries())u[A]=S[p]}const F=new En(void 0),M=Object.keys(ut.inputImages),y=[];let C;for(const S of M){let p=u[S];if(p||(M.length===1&&["data","width","height"].every(A=>!!u[A])?p=u:y.push(S)),F[S]=p,C){if(p.colorSpace!==C)throw new Error(`Input images must all use the same color space: ${C}`)}else C=p.colorSpace}if(y.length>0)throw new Error(`Missing input image${y.length>1?"s":""}: ${y.join(", ")}`);const it=In(m,l,i,n,F,w),St=S=>{const p=Object.keys(S),A={};for(const gt of p){const{data:{typedArray:_},width:ht,height:wt}=S[gt];let T;if(typeof ImageData=="function"){const At=new Uint8ClampedArray(_.buffer,_.byteOffset,_.byteLength);T=new ImageData(At,ht,n,{colorSpace:C})}else T={data:_,width:ht,height:wt};if(p.length===1)return T;A[gt]=T}return A};return it[Symbol.toStringTag]==="Promise"?it.then(St):St(it)}function Dn(){const m={};for(let[l,i]of Object.entries(ut)){if(l==="parameters"){const n={};for(const[u,w]of Object.entries(i)){const F=n[u]={};for(let[M,y]of Object.entries(w))typeof y=="object"?"string"in y?y=y.string:y=zt(y):typeof y=="function"&&(y=Fn(y.name)),F[M]=y}i=n}else typeof i=="object"&&("string"in i?i=i.string:i=i.valueOf());m[l]=i}return m}function zt(m){const l=[];for(let[i,n]of Object.entries(m))typeof n=="object"&&(n=zt(n)),l[i]=n;return l}function Fn(m){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[m]}onmessage=m=>{const[l,i,...n]=m.data;Mn(l,n).then(([u,w])=>{postMessage([l,i,u],{transfer:w})}).catch(u=>{postMessage(["error",i,u])})};async function Mn(m,l){switch(m){case"getKernelInfo":return[Dn(...l)];case"createPartialImageData":const n=await Kn(...l),u=[];if("data"in n&&"width"in n&&"height"in n)u.push(n.data.buffer);else for(const w of Object.entries(n))u.push(n.data.buffer);return[n,u];default:throw new Error(`Unknown function: ${m}`)}}
