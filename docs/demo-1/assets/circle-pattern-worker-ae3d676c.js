import{u as Te,a as $e,b as Be,c as Le,d as Ge,e as He,f as Je,g as Ne,h as Qe,i as We,j as Xe,k as Ye,l as Ze,m as et,o as tt,n as rt,p as st,q as at}from"./index-422d9c98.js";Te();$e();Be();Le();Ge();He();Je();Ne();Qe();We();Xe();Ye();Ze();et();tt();rt();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},z={},q={},U={},g={},ee={},te={},K={},p={},f={},y={},s={},r={},re={},D={},se={},F={},O={},ae={},M={},ne={},_={},ie={},T={},ue={},$={},oe={},B={},me={},L={},le={},G={},ye={},H={},ce={},J={},be={},N={},pe={},Q={},P={},w={},fe={},W={},de={},X={},qe={},A={},Se={},he={},c={},ge={},j={},ze={},Y={},V={},Oe={},we={},Z={},C={},k={},Ue={},je={},Pe={},Ve={},Ce={},ke={},Ie={};Object.assign(z,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:z}],methods:[],template:null},slot:5});Object.assign(q,{...t,type:1,name:"[13:0]u8",length:13,byteSize:14,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:z}],methods:[],template:null},slot:4});Object.assign(U,{...t,type:11,name:"*const [13:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:q}],methods:[],template:null},slot:3});Object.assign(g,{...t,type:11,name:"*const *const [13:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:U}],methods:[],template:null},slot:2});Object.assign(ee,{...t,type:1,name:"[14:0]u8",length:14,byteSize:15,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:z}],methods:[],template:null},slot:8});Object.assign(te,{...t,type:11,name:"*const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:7});Object.assign(K,{...t,type:11,name:"*const *const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:6});Object.assign(p,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[],template:null},slot:10});Object.assign(f,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:p}],methods:[],template:null},slot:9});Object.assign(y,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:29});Object.assign(s,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:s}],methods:[],template:null},slot:53});Object.assign(r,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:s}],methods:[],template:null},slot:52});const nt=new Uint8Array([]),it=new Uint8Array([16,252,15,0]),ut=new Uint8Array([0,0,0,0,0,0,0,0]),ot=new Uint8Array([40,252,15,0]),mt=new Uint8Array([31,133,235,81,184,30,213,63]),lt=new Uint8Array([240,250,15,0]),yt=new Uint8Array([113,61,10,215,163,112,205,63]);Object.assign(re,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:nt},slots:{0:{structure:r,memory:{array:it},slots:{0:{structure:s,memory:{array:ut}}}},1:{structure:r,memory:{array:ot},slots:{0:{structure:s,memory:{array:mt}}}},2:{structure:r,memory:{array:lt},slots:{0:{structure:s,memory:{array:yt}}}}}}},slot:36});Object.assign(D,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:35});const ct=new Uint8Array([]),bt=new Uint8Array([16,252,15,0]),pt=new Uint8Array([0,0,0,0,0,0,240,63]),ft=new Uint8Array([40,252,15,0]),dt=new Uint8Array([0,0,0,0,0,0,52,64]),St=new Uint8Array([240,250,15,0]),ht=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(se,{...t,type:2,name:"Struct0014",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:ct},slots:{0:{structure:r,memory:{array:bt},slots:{0:{structure:s,memory:{array:pt}}}},1:{structure:r,memory:{array:ft},slots:{0:{structure:s,memory:{array:dt}}}},2:{structure:r,memory:{array:St},slots:{0:{structure:s,memory:{array:ht}}}}}}},slot:38});Object.assign(F,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:37});Object.assign(O,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:30});const gt=new Uint8Array([]),zt=new Uint8Array([224,251,15,0]),Ot=new Uint8Array([154,153,153,153,153,153,185,63]),wt=new Uint8Array([24,252,15,0]),At=new Uint8Array([154,153,153,153,153,153,185,63]);Object.assign(ae,{...t,type:2,name:"Struct0026",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:gt},slots:{0:{structure:r,memory:{array:zt},slots:{0:{structure:s,memory:{array:Ot}}}},1:{structure:r,memory:{array:wt},slots:{0:{structure:s,memory:{array:At}}}}}}},slot:55});Object.assign(M,{...t,type:11,name:"Struct0020",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:54});const Rt=new Uint8Array([]),qt=new Uint8Array([224,251,15,0]),Ut=new Uint8Array([0,0,0,0,0,0,32,64]),jt=new Uint8Array([24,252,15,0]),Pt=new Uint8Array([0,0,0,0,0,0,32,64]);Object.assign(ne,{...t,type:2,name:"Struct0027",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Rt},slots:{0:{structure:r,memory:{array:qt},slots:{0:{structure:s,memory:{array:Ut}}}},1:{structure:r,memory:{array:jt},slots:{0:{structure:s,memory:{array:Pt}}}}}}},slot:57});Object.assign(_,{...t,type:11,name:"Struct0021",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:56});const Vt=new Uint8Array([]),Ct=new Uint8Array([224,251,15,0]),kt=new Uint8Array([0,0,0,0,0,0,8,64]),It=new Uint8Array([24,252,15,0]),xt=new Uint8Array([145,43,80,230,122,182,251,63]);Object.assign(ie,{...t,type:2,name:"Struct0028",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Vt},slots:{0:{structure:r,memory:{array:Ct},slots:{0:{structure:s,memory:{array:kt}}}},1:{structure:r,memory:{array:It},slots:{0:{structure:s,memory:{array:xt}}}}}}},slot:59});Object.assign(T,{...t,type:11,name:"Struct0022",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:58});const vt=new Uint8Array([]),Et=new Uint8Array([170,170,170,170]),u=new Uint8Array([]),Kt=new Uint8Array([170,170,170,170]),Dt=new Uint8Array([170,170,170,170]);Object.assign(ue,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:O},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:M},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:_},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:T}],methods:[],template:{memory:{array:vt},slots:{0:{structure:M,memory:{array:Et},slots:{0:{structure:ae,memory:{array:u},address:-1431655766}}},1:{structure:_,memory:{array:Kt},slots:{0:{structure:ne,memory:{array:u},address:-1431655766}}},2:{structure:T,memory:{array:Dt},slots:{0:{structure:ie,memory:{array:u},address:-1431655766}}}}}},slot:40});Object.assign($,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:39});const Ft=new Uint8Array([]),Mt=new Uint8Array([224,251,15,0]),_t=new Uint8Array([0,0,0,0,0,0,52,192]),Tt=new Uint8Array([24,252,15,0]),$t=new Uint8Array([0,0,0,0,0,0,52,192]);Object.assign(oe,{...t,type:2,name:"Struct0029",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Ft},slots:{0:{structure:r,memory:{array:Mt},slots:{0:{structure:s,memory:{array:_t}}}},1:{structure:r,memory:{array:Tt},slots:{0:{structure:s,memory:{array:$t}}}}}}},slot:61});Object.assign(B,{...t,type:11,name:"Struct0023",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:60});const Bt=new Uint8Array([]),Lt=new Uint8Array([224,251,15,0]),Gt=new Uint8Array([0,0,0,0,0,0,121,64]),Ht=new Uint8Array([24,252,15,0]),Jt=new Uint8Array([0,0,0,0,0,0,121,64]);Object.assign(me,{...t,type:2,name:"Struct0030",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Bt},slots:{0:{structure:r,memory:{array:Lt},slots:{0:{structure:s,memory:{array:Gt}}}},1:{structure:r,memory:{array:Ht},slots:{0:{structure:s,memory:{array:Jt}}}}}}},slot:63});Object.assign(L,{...t,type:11,name:"Struct0024",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:62});const Nt=new Uint8Array([]),Qt=new Uint8Array([224,251,15,0]),Wt=new Uint8Array([0,0,0,0,0,0,94,64]),Xt=new Uint8Array([24,252,15,0]),Yt=new Uint8Array([0,0,0,0,0,64,96,64]);Object.assign(le,{...t,type:2,name:"Struct0031",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r}],methods:[],template:{memory:{array:Nt},slots:{0:{structure:r,memory:{array:Qt},slots:{0:{structure:s,memory:{array:Wt}}}},1:{structure:r,memory:{array:Xt},slots:{0:{structure:s,memory:{array:Yt}}}}}}},slot:65});Object.assign(G,{...t,type:11,name:"Struct0025",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:64});const Zt=new Uint8Array([]),er=new Uint8Array([170,170,170,170]),tr=new Uint8Array([170,170,170,170]),rr=new Uint8Array([170,170,170,170]);Object.assign(ye,{...t,type:2,name:"Struct0016",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:O},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:B},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:L},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:G}],methods:[],template:{memory:{array:Zt},slots:{0:{structure:B,memory:{array:er},slots:{0:{structure:oe,memory:{array:u},address:-1431655766}}},1:{structure:L,memory:{array:tr},slots:{0:{structure:me,memory:{array:u},address:-1431655766}}},2:{structure:G,memory:{array:rr},slots:{0:{structure:le,memory:{array:u},address:-1431655766}}}}}},slot:42});Object.assign(H,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:41});const sr=new Uint8Array([]),ar=new Uint8Array([16,252,15,0]),nr=new Uint8Array([252,169,241,210,77,98,80,63]),ir=new Uint8Array([40,252,15,0]),ur=new Uint8Array([154,153,153,153,153,153,185,63]),or=new Uint8Array([240,250,15,0]),mr=new Uint8Array([123,20,174,71,225,122,116,63]);Object.assign(ce,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:sr},slots:{0:{structure:r,memory:{array:ar},slots:{0:{structure:s,memory:{array:nr}}}},1:{structure:r,memory:{array:ir},slots:{0:{structure:s,memory:{array:ur}}}},2:{structure:r,memory:{array:or},slots:{0:{structure:s,memory:{array:mr}}}}}}},slot:44});Object.assign(J,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:43});const lr=new Uint8Array([]),yr=new Uint8Array([16,252,15,0]),cr=new Uint8Array([252,169,241,210,77,98,80,63]),br=new Uint8Array([40,252,15,0]),pr=new Uint8Array([0,0,0,0,0,0,240,63]),fr=new Uint8Array([240,250,15,0]),dr=new Uint8Array([154,153,153,153,153,153,169,63]);Object.assign(be,{...t,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:y},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:lr},slots:{0:{structure:r,memory:{array:yr},slots:{0:{structure:s,memory:{array:cr}}}},1:{structure:r,memory:{array:br},slots:{0:{structure:s,memory:{array:pr}}}},2:{structure:r,memory:{array:fr},slots:{0:{structure:s,memory:{array:dr}}}}}}},slot:46});Object.assign(N,{...t,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:45});const Sr=new Uint8Array([]),hr=new Uint8Array([170,170,170,170]),gr=new Uint8Array([170,170,170,170]),zr=new Uint8Array([170,170,170,170]),Or=new Uint8Array([170,170,170,170]),wr=new Uint8Array([170,170,170,170]),Ar=new Uint8Array([170,170,170,170]);Object.assign(pe,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"fill",structure:D},{...e,type:8,isRequired:!1,slot:1,name:"scale",structure:F},{...e,type:8,isRequired:!1,slot:2,name:"distort",structure:$},{...e,type:8,isRequired:!1,slot:3,name:"center",structure:H},{...e,type:8,isRequired:!1,slot:4,name:"minSolid",structure:J},{...e,type:8,isRequired:!1,slot:5,name:"maxSolid",structure:N}],methods:[],template:{memory:{array:Sr},slots:{0:{structure:D,memory:{array:hr},slots:{0:{structure:re,memory:{array:u},address:-1431655766}}},1:{structure:F,memory:{array:gr},slots:{0:{structure:se,memory:{array:u},address:-1431655766}}},2:{structure:$,memory:{array:zr},slots:{0:{structure:ue,memory:{array:u},address:-1431655766}}},3:{structure:H,memory:{array:Or},slots:{0:{structure:ye,memory:{array:u},address:-1431655766}}},4:{structure:J,memory:{array:wr},slots:{0:{structure:ce,memory:{array:u},address:-1431655766}}},5:{structure:N,memory:{array:Ar},slots:{0:{structure:be,memory:{array:u},address:-1431655766}}}}}},slot:12});Object.assign(Q,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:11});const Rr=new Uint8Array([]),qr=new Uint8Array([0,252,15,0]),Ur=new Uint8Array([4,0,0,0]);Object.assign(P,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:Rr},slots:{0:{structure:f,memory:{array:qr},slots:{0:{structure:p,memory:{array:Ur}}}}}}},slot:48});Object.assign(w,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:P}],methods:[],template:null},slot:47});const jr=new Uint8Array([]),Pr=new Uint8Array([170,170,170,170]);Object.assign(fe,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:w}],methods:[],template:{memory:{array:jr},slots:{0:{structure:w,memory:{array:Pr},slots:{0:{structure:P,memory:{array:u},address:-1431655766}}}}}},slot:14});Object.assign(W,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:13});const Vr=new Uint8Array([]),Cr=new Uint8Array([170,170,170,170]);Object.assign(de,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:w}],methods:[],template:{memory:{array:Vr},slots:{0:{structure:w,memory:{array:Cr},slots:{0:{structure:P,memory:{array:u},address:-1431655766}}}}}},slot:16});Object.assign(X,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:de}],methods:[],template:null},slot:15});const kr=new Uint8Array([]),Ir=new Uint8Array([]),xr=new Uint8Array([12,253,15,0]),vr=new Uint8Array([242,36,16,0]),De=new Uint8Array([67,105,114,99,108,101,80,97,116,116,101,114,110,0]),Er=new Uint8Array([68,253,15,0]),Kr=new Uint8Array([227,36,16,0]),Dr=new Uint8Array([80,101,116,114,105,32,76,101,115,107,105,110,101,110,0]),Fr=new Uint8Array([100,253,15,0]),Mr=new Uint8Array([1,0,0,0]),_r=new Uint8Array([156,253,15,0]),Tr=new Uint8Array([242,36,16,0]),$r=new Uint8Array([170,170,170,170]),Br=new Uint8Array([170,170,170,170]),Lr=new Uint8Array([170,170,170,170]);Object.assign(qe,{...t,type:2,name:"circle-pattern.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:kr}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:g},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:K},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:f},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:g},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:Q},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:W},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:X}],methods:[],template:{memory:{array:Ir},slots:{0:{structure:g,memory:{array:xr},slots:{0:{structure:U,memory:{array:vr},slots:{0:{structure:q,memory:{array:De},address:1058034}}}}},1:{structure:K,memory:{array:Er},slots:{0:{structure:te,memory:{array:Kr},slots:{0:{structure:ee,memory:{array:Dr},address:1058019}}}}},2:{structure:f,memory:{array:Fr},slots:{0:{structure:p,memory:{array:Mr}}}},3:{structure:g,memory:{array:_r},slots:{0:{structure:U,memory:{array:Tr},slots:{0:{structure:q,memory:{array:De},address:1058034}}}}},4:{structure:Q,memory:{array:$r},slots:{0:{structure:pe,memory:{array:u},address:-1431655766}}},5:{structure:W,memory:{array:Br},slots:{0:{structure:fe,memory:{array:u},address:-1431655766}}},6:{structure:X,memory:{array:Lr},slots:{0:{structure:de,memory:{array:u},address:-1431655766}}}}}},slot:1});Object.assign(A,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:z}],methods:[],template:null},slot:21});Object.assign(Se,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:A}],methods:[],template:null},slot:20});Object.assign(he,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Se}],methods:[],template:null},slot:19});Object.assign(c,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:22});const Gr=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(ge,{...t,type:9,name:"circle-pattern.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:p},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:p}],methods:[],template:{memory:{array:Gr}}},slot:23});Object.assign(j,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:j}],methods:[],template:null},slot:24});Object.assign(ze,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:49});const Hr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Jr=new Uint8Array([]),Nr=new Uint8Array([168,251,15,0]),Qr=new Uint8Array([4,0,0,0]);Object.assign(Y,{...t,type:2,name:"circle-pattern.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:he},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ge},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:j}],methods:[],template:{memory:{array:Hr}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:A},{...e,type:7,isRequired:!1,name:"FPixel",structure:ze},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:Jr},slots:{0:{structure:f,memory:{array:Nr},slots:{0:{structure:p,memory:{array:Qr}}}}}}},slot:18});const Wr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Xr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Yr=new Uint8Array([0,0,0,0,0,0,0,0]),xe=new Uint8Array([]);Object.assign(V,{...t,type:2,name:"circle-pattern.KernelInput(u8,circle-pattern.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:Y}],methods:[],template:{memory:{array:Wr},slots:{0:{structure:Y,memory:{array:Xr},slots:{0:{structure:he,memory:{array:Yr},slots:{0:{structure:Se,memory:{array:xe}}}}}}}}},slot:17});Object.assign(Oe,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:A}],methods:[],template:null},slot:20});Object.assign(we,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Oe}],methods:[],template:null},slot:27});const Zr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),es=new Uint8Array([]),ts=new Uint8Array([168,251,15,0]),rs=new Uint8Array([4,0,0,0]);Object.assign(Z,{...t,type:2,name:"circle-pattern.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:we},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ge},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:j}],methods:[],template:{memory:{array:Zr}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:A},{...e,type:7,isRequired:!1,name:"FPixel",structure:ze},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:es},slots:{0:{structure:f,memory:{array:ts},slots:{0:{structure:p,memory:{array:rs}}}}}}},slot:26});const ss=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),as=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ns=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(C,{...t,type:2,name:"circle-pattern.KernelOutput(u8,circle-pattern.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:Z}],methods:[],template:{memory:{array:ss},slots:{0:{structure:Z,memory:{array:as},slots:{0:{structure:we,memory:{array:ns},slots:{0:{structure:Oe,memory:{array:xe}}}}}}}}},slot:25});const is=new Uint8Array([0,0,64,64,215,179,221,63,0,0,240,66,0,0,2,67,31,133,107,62,0,0,128,63,10,215,163,59,205,204,76,61]);Object.assign(k,{...t,type:2,name:"circle-pattern.KernelParameters(circle-pattern.kernel)",length:1,byteSize:32,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:0,name:"fill",structure:y},{...e,type:4,isRequired:!1,bitOffset:160,bitSize:32,byteSize:4,slot:1,name:"scale",structure:y},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,slot:2,name:"distort",structure:O},{...e,type:6,isRequired:!1,bitOffset:64,bitSize:64,byteSize:8,slot:3,name:"center",structure:O},{...e,type:4,isRequired:!1,bitOffset:192,bitSize:32,byteSize:4,slot:4,name:"minSolid",structure:y},{...e,type:4,isRequired:!1,bitOffset:224,bitSize:32,byteSize:4,slot:5,name:"maxSolid",structure:y}],methods:[],template:{memory:{array:is}}},slot:28});Object.assign(Ue,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(circle-pattern.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:50});Object.assign(je,{...t,type:7,name:"ErrorSet0000!circle-pattern.KernelOutput(u8,circle-pattern.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:C},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Ue}],methods:[],template:null},slot:33});Object.assign(Pe,{...t,type:3,name:"createOutput",length:1,byteSize:96,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:c},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:c},{...e,type:6,bitOffset:320,bitSize:192,byteSize:24,slot:2,name:"2",structure:V},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:3,name:"3",structure:k},{...e,type:6,bitOffset:512,bitSize:224,byteSize:28,slot:4,name:"retval",structure:je}],methods:[],template:null},slot:31});Object.assign(Ve,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(circle-pattern.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:51});Object.assign(Ce,{...t,type:7,name:"ErrorSet0001!circle-pattern.KernelOutput(u8,circle-pattern.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:C},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Ve}],methods:[],template:null},slot:34});Object.assign(ke,{...t,type:3,name:"createPartialOutput",length:1,byteSize:104,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:c},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:c},{...e,type:3,bitOffset:320,bitSize:32,byteSize:4,slot:2,name:"2",structure:c},{...e,type:3,bitOffset:352,bitSize:32,byteSize:4,slot:3,name:"3",structure:c},{...e,type:6,bitOffset:384,bitSize:192,byteSize:24,slot:4,name:"4",structure:V},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:5,name:"5",structure:k},{...e,type:6,bitOffset:576,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Ce}],methods:[],template:null},slot:32});const us={argStruct:Pe,thunk:4,name:"createOutput"},os={argStruct:ke,thunk:7,name:"createPartialOutput"};Object.assign(Ie,{...t,type:2,name:"circle-pattern",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:xe}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:qe},{...e,type:7,isRequired:!1,name:"Input",structure:V},{...e,type:7,isRequired:!1,name:"Output",structure:C},{...e,type:7,isRequired:!1,name:"Parameters",structure:k}],methods:[us,os],template:null},slot:0});const ms=[z,q,U,g,ee,te,K,p,f,y,s,r,re,D,se,F,O,ae,M,ne,_,ie,T,ue,$,oe,B,me,L,le,G,ye,H,ce,J,be,N,pe,Q,P,w,fe,W,de,X,qe,A,Se,he,c,ge,j,ze,Y,V,Oe,we,Z,C,k,Ue,je,Pe,Ve,Ce,ke,Ie],ls=st(ms),ys=Ie.constructor,cs=(async()=>{const o=new URL("circle-pattern-b6cf0582.wasm",import.meta.url).href;return fetch(o)})();at(cs,{...ls,writeBack:!0});const{createOutput:zs,createPartialOutput:bs,kernel:Re,Input:ps,Output:Os,Parameters:ws}=ys;function fs(o,l,n,a,i={},S={}){if(Array.isArray(i)){const d=i;i={};for(const[b,h]of Object.keys(Re.inputImages).entries())i[h]=d[b]}const I=new ps(void 0),x=Object.keys(Re.inputImages),m=[];let R;for(const d of x){let b=i[d];if(b||(x.length===1&&["data","width","height"].every(h=>!!i[h])?b=i:m.push(d)),I[d]=b,R){if(b.colorSpace!==R)throw new Error(`Input images must all use the same color space: ${R}`)}else R=b.colorSpace}if(m.length>0)throw new Error(`Missing input image${m.length>1?"s":""}: ${m.join(", ")}`);const Ae=bs(o,l,n,a,I,S),ve=d=>{const b=Object.keys(d),h={};for(const Ee of b){const{data:{typedArray:v},width:Ke,height:Me}=d[Ee];let E;if(typeof ImageData=="function"){const _e=new Uint8ClampedArray(v.buffer,v.byteOffset,v.byteLength);E=new ImageData(_e,Ke,a,{colorSpace:R})}else E={data:v,width:Ke,height:Me};if(b.length===1)return E;h[Ee]=E}return h};return Ae[Symbol.toStringTag]==="Promise"?Ae.then(ve):ve(Ae)}function ds(){const o={};for(let[l,n]of Object.entries(Re)){if(l==="parameters"){const a={};for(const[i,S]of Object.entries(n)){const I=a[i]={};for(let[x,m]of Object.entries(S))typeof m=="object"?"string"in m?m=m.string:m=Fe(m):typeof m=="function"&&(m=Ss(m.name)),I[x]=m}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());o[l]=n}return o}function Fe(o){const l=[];for(let[n,a]of Object.entries(o))typeof a=="object"&&(a=Fe(a)),l[n]=a;return l}function Ss(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[l,n,...a]=o.data;hs(l,a).then(([i,S])=>{postMessage([l,n,i],{transfer:S})}).catch(i=>{postMessage(["error",n,i])})};async function hs(o,l){switch(o){case"getKernelInfo":return[ds(...l)];case"createPartialImageData":const a=await fs(...l),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const S of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${o}`)}}
