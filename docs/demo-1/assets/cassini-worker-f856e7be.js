import{u as tt,a as st,b as rt,c as at,d as it,e as mt,f as nt,g as ot,h as ut,i as ct,j as lt,k as yt,l as pt,m as ft,n as bt,o as dt,p as ht,q as gt,r as St}from"./index-778418ea.js";tt();st();rt();at();it();mt();nt();ot();ut();ct();lt();yt();pt();ft();bt();dt();ht();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},f={},_={},A={},z={},ae={},ie={},D={},y={},h={},b={},O={},a={},s={},me={},T={},ne={},M={},P={},R={},oe={},ue={},H={},ce={},W={},le={},$={},ye={},B={},pe={},fe={},L={},be={},G={},de={},he={},J={},ge={},N={},Se={},ze={},Q={},Oe={},X={},Re={},Y={},Z={},x={},q={},qe={},ee={},we={},te={},ve={},w={},Ve={},_e={},l={},Ae={},U={},j={},Ue={},se={},I={},je={},Pe={},re={},C={},k={},Ee={},Ke={},Fe={},De={},Te={},Me={},He={};Object.assign(f,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[],template:null},slot:5});Object.assign(_,{...t,type:1,name:"[15:0]u8",length:15,byteSize:16,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:f}],methods:[],template:null},slot:4});Object.assign(A,{...t,type:11,name:"*const [15:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[],template:null},slot:3});Object.assign(z,{...t,type:11,name:"**const [15:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:A}],methods:[],template:null},slot:2});Object.assign(ae,{...t,type:1,name:"[16:0]u8",length:16,byteSize:17,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:f}],methods:[],template:null},slot:8});Object.assign(ie,{...t,type:11,name:"*const [16:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:7});Object.assign(D,{...t,type:11,name:"**const [16:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:6});Object.assign(y,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:10});Object.assign(h,{...t,type:11,name:"*i32",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:y}],methods:[],template:null},slot:9});Object.assign(b,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:31});Object.assign(O,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:30});Object.assign(a,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:a}],methods:[],template:null},slot:66});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:a}],methods:[],template:null},slot:65});const zt=new Uint8Array([]),Ot=new Uint8Array([112,30,16,0]),Ie=new Uint8Array([0,0,0,0,0,0,240,63]),Rt=new Uint8Array([112,30,16,0]);Object.assign(me,{...t,type:2,name:"struct{comptime comptime_float = 1, comptime comptime_float = 1}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:zt},slots:{0:{structure:s,memory:{array:Ot},slots:{0:{structure:a,memory:{array:Ie},address:1056368}}},1:{structure:s,memory:{array:Rt},slots:{0:{structure:a,memory:{array:Ie},address:1056368}}}}}},slot:50});Object.assign(T,{...t,type:11,name:"*const struct{comptime comptime_float = 1, comptime comptime_float = 1}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:49});const qt=new Uint8Array([]),wt=new Uint8Array([104,30,16,0]),Ge=new Uint8Array([0,0,0,0,0,64,159,64]),Vt=new Uint8Array([104,30,16,0]);Object.assign(ne,{...t,type:2,name:"struct{comptime comptime_float = 2000, comptime comptime_float = 2000}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:qt},slots:{0:{structure:s,memory:{array:wt},slots:{0:{structure:a,memory:{array:Ge},address:1056360}}},1:{structure:s,memory:{array:Vt},slots:{0:{structure:a,memory:{array:Ge},address:1056360}}}}}},slot:52});Object.assign(M,{...t,type:11,name:"*const struct{comptime comptime_float = 2000, comptime comptime_float = 2000}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:51});const _t=new Uint8Array([]),At=new Uint8Array([96,30,16,0]),Je=new Uint8Array([0,0,0,0,0,160,118,64]),Ut=new Uint8Array([96,30,16,0]);Object.assign(P,{...t,type:2,name:"struct{comptime comptime_float = 362, comptime comptime_float = 362}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:_t},slots:{0:{structure:s,memory:{array:At},slots:{0:{structure:a,memory:{array:Je},address:1056352}}},1:{structure:s,memory:{array:Ut},slots:{0:{structure:a,memory:{array:Je},address:1056352}}}}}},slot:54});Object.assign(R,{...t,type:11,name:"*const struct{comptime comptime_float = 362, comptime comptime_float = 362}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:P}],methods:[],template:null},slot:53});Object.assign(oe,{...t,type:1,name:"[29:0]u8",length:29,byteSize:30,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:f}],methods:[],template:null},slot:57});Object.assign(ue,{...t,type:11,name:"*const [29:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:56});Object.assign(H,{...t,type:11,name:"*const *const [29:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:55});const jt=new Uint8Array([]),Pt=new Uint8Array([170,170,170,170]),u=new Uint8Array([]),xt=new Uint8Array([170,170,170,170]),It=new Uint8Array([170,170,170,170]),Ct=new Uint8Array([164,30,16,0]),kt=new Uint8Array([198,30,16,0]),vt=new Uint8Array([105,110,112,117,116,32,105,109,97,103,101,32,119,105,100,116,104,45,32,97,110,100,32,104,101,105,103,104,116,0]);Object.assign(ce,{...t,type:2,name:'struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1}, comptime maxValue: struct{comptime comptime_float = 2000, comptime comptime_float = 2000} = .{2000, 2000}, comptime defaultValue: struct{comptime comptime_float = 362, comptime comptime_float = 362} = .{362, 362}, comptime description: *const [29:0]u8 = "input image width- and height"}',length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:O},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:T},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:M},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:R},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:H}],methods:[],template:{memory:{array:jt},slots:{0:{structure:T,memory:{array:Pt},slots:{0:{structure:me,memory:{array:u},address:-1431655766}}},1:{structure:M,memory:{array:xt},slots:{0:{structure:ne,memory:{array:u},address:-1431655766}}},2:{structure:R,memory:{array:It},slots:{0:{structure:P,memory:{array:u},address:-1431655766}}},3:{structure:H,memory:{array:Ct},slots:{0:{structure:ue,memory:{array:kt},address:1056420,slots:{0:{structure:oe,memory:{array:vt},address:1056454}}}}}}}},slot:37});Object.assign(W,{...t,type:11,name:'*const struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1}, comptime maxValue: struct{comptime comptime_float = 2000, comptime comptime_float = 2000} = .{2000, 2000}, comptime defaultValue: struct{comptime comptime_float = 362, comptime comptime_float = 362} = .{362, 362}, comptime description: *const [29:0]u8 = "input image width- and height"}',length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:36});const Et=new Uint8Array([]),Kt=new Uint8Array([88,30,16,0]),Ce=new Uint8Array([0,0,0,0,0,0,89,64]),Ft=new Uint8Array([88,30,16,0]);Object.assign(le,{...t,type:2,name:"struct{comptime comptime_float = 100, comptime comptime_float = 100}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Et},slots:{0:{structure:s,memory:{array:Kt},slots:{0:{structure:a,memory:{array:Ce},address:1056344}}},1:{structure:s,memory:{array:Ft},slots:{0:{structure:a,memory:{array:Ce},address:1056344}}}}}},slot:59});Object.assign($,{...t,type:11,name:"*const struct{comptime comptime_float = 100, comptime comptime_float = 100}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:58});const Dt=new Uint8Array([]),Tt=new Uint8Array([80,30,16,0]),Ne=new Uint8Array([0,0,0,0,0,64,127,64]),Mt=new Uint8Array([80,30,16,0]);Object.assign(ye,{...t,type:2,name:"struct{comptime comptime_float = 500, comptime comptime_float = 500}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Dt},slots:{0:{structure:s,memory:{array:Tt},slots:{0:{structure:a,memory:{array:Ne},address:1056336}}},1:{structure:s,memory:{array:Mt},slots:{0:{structure:a,memory:{array:Ne},address:1056336}}}}}},slot:61});Object.assign(B,{...t,type:11,name:"*const struct{comptime comptime_float = 500, comptime comptime_float = 500}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:60});Object.assign(pe,{...t,type:1,name:"[9:0]u8",length:9,byteSize:10,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:f}],methods:[],template:null},slot:64});Object.assign(fe,{...t,type:11,name:"*const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:63});Object.assign(L,{...t,type:11,name:"*const *const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:62});const Ht=new Uint8Array([]),Wt=new Uint8Array([170,170,170,170]),$t=new Uint8Array([170,170,170,170]),Bt=new Uint8Array([170,170,170,170]),Lt=new Uint8Array([160,30,16,0]),Gt=new Uint8Array([188,30,16,0]),Jt=new Uint8Array([114,101,103,105,111,110,40,115,41,0]);Object.assign(be,{...t,type:2,name:'struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 100, comptime comptime_float = 100} = .{100, 100}, comptime maxValue: struct{comptime comptime_float = 500, comptime comptime_float = 500} = .{500, 500}, comptime defaultValue: struct{comptime comptime_float = 362, comptime comptime_float = 362} = .{362, 362}, comptime description: *const [9:0]u8 = "region(s)"}',length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:O},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:$},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:B},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:R},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:L}],methods:[],template:{memory:{array:Ht},slots:{0:{structure:$,memory:{array:Wt},slots:{0:{structure:le,memory:{array:u},address:-1431655766}}},1:{structure:B,memory:{array:$t},slots:{0:{structure:ye,memory:{array:u},address:-1431655766}}},2:{structure:R,memory:{array:Bt},slots:{0:{structure:P,memory:{array:u},address:-1431655766}}},3:{structure:L,memory:{array:Lt},slots:{0:{structure:fe,memory:{array:Gt},address:1056416,slots:{0:{structure:pe,memory:{array:Jt},address:1056444}}}}}}}},slot:39});Object.assign(G,{...t,type:11,name:'*const struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 100, comptime comptime_float = 100} = .{100, 100}, comptime maxValue: struct{comptime comptime_float = 500, comptime comptime_float = 500} = .{500, 500}, comptime defaultValue: struct{comptime comptime_float = 362, comptime comptime_float = 362} = .{362, 362}, comptime description: *const [9:0]u8 = "region(s)"}',length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:38});Object.assign(de,{...t,type:1,name:"[7:0]u8",length:7,byteSize:8,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:f}],methods:[],template:null},slot:69});Object.assign(he,{...t,type:11,name:"*const [7:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:de}],methods:[],template:null},slot:68});Object.assign(J,{...t,type:11,name:"*const *const [7:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:he}],methods:[],template:null},slot:67});const Nt=new Uint8Array([]),Qt=new Uint8Array([112,30,16,0]),Xt=new Uint8Array([88,30,16,0]),Yt=new Uint8Array([152,30,16,0]),Zt=new Uint8Array([0,0,0,0,0,0,20,64]),es=new Uint8Array([144,30,16,0]),ts=new Uint8Array([180,30,16,0]),ss=new Uint8Array([122,111,111,109,105,110,103,0]);Object.assign(ge,{...t,type:2,name:'struct{comptime type: type = f32, comptime minValue: comptime_float = 1, comptime maxValue: comptime_float = 100, comptime defaultValue: comptime_float = 5, comptime description: *const [7:0]u8 = "zooming"}',length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:b},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:J}],methods:[],template:{memory:{array:Nt},slots:{0:{structure:s,memory:{array:Qt},slots:{0:{structure:a,memory:{array:Ie},address:1056368}}},1:{structure:s,memory:{array:Xt},slots:{0:{structure:a,memory:{array:Ce},address:1056344}}},2:{structure:s,memory:{array:Yt},slots:{0:{structure:a,memory:{array:Zt},address:1056408}}},3:{structure:J,memory:{array:es},slots:{0:{structure:he,memory:{array:ts},address:1056400,slots:{0:{structure:de,memory:{array:ss},address:1056436}}}}}}}},slot:41});Object.assign(N,{...t,type:11,name:'*const struct{comptime type: type = f32, comptime minValue: comptime_float = 1, comptime maxValue: comptime_float = 100, comptime defaultValue: comptime_float = 5, comptime description: *const [7:0]u8 = "zooming"}',length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ge}],methods:[],template:null},slot:40});Object.assign(Se,{...t,type:1,name:"[11:0]u8",length:11,byteSize:12,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:f}],methods:[],template:null},slot:72});Object.assign(ze,{...t,type:11,name:"*const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Se}],methods:[],template:null},slot:71});Object.assign(Q,{...t,type:11,name:"*const *const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ze}],methods:[],template:null},slot:70});const rs=new Uint8Array([]),as=new Uint8Array([128,30,16,0]),Qe=new Uint8Array([0,0,0,0,0,0,0,0]),is=new Uint8Array([136,30,16,0]),ms=new Uint8Array([31,133,235,81,184,30,25,64]),ns=new Uint8Array([128,30,16,0]),os=new Uint8Array([124,30,16,0]),us=new Uint8Array([168,30,16,0]),cs=new Uint8Array([114,111,116,97,116,105,111,110,40,115,41,0]);Object.assign(Oe,{...t,type:2,name:'struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 6.28, comptime defaultValue: comptime_float = 0, comptime description: *const [11:0]u8 = "rotation(s)"}',length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:b},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:Q}],methods:[],template:{memory:{array:rs},slots:{0:{structure:s,memory:{array:as},slots:{0:{structure:a,memory:{array:Qe},address:1056384}}},1:{structure:s,memory:{array:is},slots:{0:{structure:a,memory:{array:ms},address:1056392}}},2:{structure:s,memory:{array:ns},slots:{0:{structure:a,memory:{array:Qe},address:1056384}}},3:{structure:Q,memory:{array:os},slots:{0:{structure:ze,memory:{array:us},address:1056380,slots:{0:{structure:Se,memory:{array:cs},address:1056424}}}}}}}},slot:43});Object.assign(X,{...t,type:11,name:'*const struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 6.28, comptime defaultValue: comptime_float = 0, comptime description: *const [11:0]u8 = "rotation(s)"}',length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Oe}],methods:[],template:null},slot:42});const ls=new Uint8Array([]),ys=new Uint8Array([170,170,170,170]),ps=new Uint8Array([170,170,170,170]),fs=new Uint8Array([170,170,170,170]),bs=new Uint8Array([170,170,170,170]);Object.assign(Re,{...t,type:2,name:'struct{comptime imageWH: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1}, comptime maxValue: struct{comptime comptime_float = 2000, comptime comptime_float = 2000} = .{2000, 2000}, comptime defaultValue: struct{comptime comptime_float = 362, comptime comptime_float = 362} = .{362, 362}, comptime description: *const [29:0]u8 = "input image width- and height"} = .{.type = @Vector(2, f32), .minValue = .{1, 1}, .maxValue = .{2000, 2000}, .defaultValue = .{362, 362}, .description = "input image width- and height"}, comptime poi: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 100, comptime comptime_float = 100} = .{100, 100}, comptime maxValue: struct{comptime comptime_float = 500, comptime comptime_float = 500} = .{500, 500}, comptime defaultValue: struct{comptime comptime_float = 362, comptime comptime_float = 362} = .{362, 362}, comptime description: *const [9:0]u8 = "region(s)"} = .{.type = @Vector(2, f32), .minValue = .{100, 100}, .maxValue = .{500, 500}, .defaultValue = .{362, 362}, .description = "region(s)"}, comptime zoom: struct{comptime type: type = f32, comptime minValue: comptime_float = 1, comptime maxValue: comptime_float = 100, comptime defaultValue: comptime_float = 5, comptime description: *const [7:0]u8 = "zooming"} = .{.type = f32, .minValue = 1, .maxValue = 100, .defaultValue = 5, .description = "zooming"}, comptime lambda: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 6.28, comptime defaultValue: comptime_float = 0, comptime description: *const [11:0]u8 = "rotation(s)"} = .{.type = f32, .minValue = 0, .maxValue = 6.28, .defaultValue = 0, .description = "rotation(s)"}}',length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"imageWH",structure:W},{...e,type:8,isRequired:!1,slot:1,name:"poi",structure:G},{...e,type:8,isRequired:!1,slot:2,name:"zoom",structure:N},{...e,type:8,isRequired:!1,slot:3,name:"lambda",structure:X}],methods:[],template:{memory:{array:ls},slots:{0:{structure:W,memory:{array:ys},slots:{0:{structure:ce,memory:{array:u},address:-1431655766}}},1:{structure:G,memory:{array:ps},slots:{0:{structure:be,memory:{array:u},address:-1431655766}}},2:{structure:N,memory:{array:fs},slots:{0:{structure:ge,memory:{array:u},address:-1431655766}}},3:{structure:X,memory:{array:bs},slots:{0:{structure:Oe,memory:{array:u},address:-1431655766}}}}}},slot:12});Object.assign(Y,{...t,type:11,name:'*struct{comptime imageWH: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1}, comptime maxValue: struct{comptime comptime_float = 2000, comptime comptime_float = 2000} = .{2000, 2000}, comptime defaultValue: struct{comptime comptime_float = 362, comptime comptime_float = 362} = .{362, 362}, comptime description: *const [29:0]u8 = "input image width- and height"} = .{.type = @Vector(2, f32), .minValue = .{1, 1}, .maxValue = .{2000, 2000}, .defaultValue = .{362, 362}, .description = "input image width- and height"}, comptime poi: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 100, comptime comptime_float = 100} = .{100, 100}, comptime maxValue: struct{comptime comptime_float = 500, comptime comptime_float = 500} = .{500, 500}, comptime defaultValue: struct{comptime comptime_float = 362, comptime comptime_float = 362} = .{362, 362}, comptime description: *const [9:0]u8 = "region(s)"} = .{.type = @Vector(2, f32), .minValue = .{100, 100}, .maxValue = .{500, 500}, .defaultValue = .{362, 362}, .description = "region(s)"}, comptime zoom: struct{comptime type: type = f32, comptime minValue: comptime_float = 1, comptime maxValue: comptime_float = 100, comptime defaultValue: comptime_float = 5, comptime description: *const [7:0]u8 = "zooming"} = .{.type = f32, .minValue = 1, .maxValue = 100, .defaultValue = 5, .description = "zooming"}, comptime lambda: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 6.28, comptime defaultValue: comptime_float = 0, comptime description: *const [11:0]u8 = "rotation(s)"} = .{.type = f32, .minValue = 0, .maxValue = 6.28, .defaultValue = 0, .description = "rotation(s)"}}',length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Re}],methods:[],template:null},slot:11});Object.assign(Z,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:y}],methods:[],template:null},slot:73});const ds=new Uint8Array([]),hs=new Uint8Array([120,30,16,0]),gs=new Uint8Array([4,0,0,0]);Object.assign(x,{...t,type:2,name:"struct{comptime channels: comptime_int = 4}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:Z}],methods:[],template:{memory:{array:ds},slots:{0:{structure:Z,memory:{array:hs},slots:{0:{structure:y,memory:{array:gs},address:1056376}}}}}},slot:45});Object.assign(q,{...t,type:11,name:"*const struct{comptime channels: comptime_int = 4}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:x}],methods:[],template:null},slot:44});const Ss=new Uint8Array([]),zs=new Uint8Array([170,170,170,170]);Object.assign(qe,{...t,type:2,name:"struct{comptime src: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:q}],methods:[],template:{memory:{array:Ss},slots:{0:{structure:q,memory:{array:zs},slots:{0:{structure:x,memory:{array:u},address:-1431655766}}}}}},slot:14});Object.assign(ee,{...t,type:11,name:"*struct{comptime src: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:qe}],methods:[],template:null},slot:13});const Os=new Uint8Array([]),Rs=new Uint8Array([170,170,170,170]);Object.assign(we,{...t,type:2,name:"struct{comptime dst: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:q}],methods:[],template:{memory:{array:Os},slots:{0:{structure:q,memory:{array:Rs},slots:{0:{structure:x,memory:{array:u},address:-1431655766}}}}}},slot:16});Object.assign(te,{...t,type:11,name:"*struct{comptime dst: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:we}],methods:[],template:null},slot:15});const qs=new Uint8Array([]),ws=new Uint8Array([]),Vs=new Uint8Array([20,253,15,0]),_s=new Uint8Array([43,66,16,0]),Xe=new Uint8Array([99,97,115,115,105,110,105,32,112,97,116,116,101,114,110,0]),As=new Uint8Array([76,253,15,0]),Us=new Uint8Array([26,66,16,0]),js=new Uint8Array([102,114,97,110,107,32,114,101,105,116,98,101,114,103,101,114,0]),Ps=new Uint8Array([108,253,15,0]),xs=new Uint8Array([1,0,0,0]),Is=new Uint8Array([164,253,15,0]),Cs=new Uint8Array([43,66,16,0]),ks=new Uint8Array([170,170,170,170]),vs=new Uint8Array([170,170,170,170]),Es=new Uint8Array([170,170,170,170]);Object.assign(ve,{...t,type:2,name:"cassini.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:qs}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:z},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:D},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:h},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:z},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:Y},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:ee},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:te}],methods:[],template:{memory:{array:ws},slots:{0:{structure:z,memory:{array:Vs},slots:{0:{structure:A,memory:{array:_s},slots:{0:{structure:_,memory:{array:Xe},address:1065515}}}}},1:{structure:D,memory:{array:As},slots:{0:{structure:ie,memory:{array:Us},slots:{0:{structure:ae,memory:{array:js},address:1065498}}}}},2:{structure:h,memory:{array:Ps},slots:{0:{structure:y,memory:{array:xs}}}},3:{structure:z,memory:{array:Is},slots:{0:{structure:A,memory:{array:Cs},slots:{0:{structure:_,memory:{array:Xe},address:1065515}}}}},4:{structure:Y,memory:{array:ks},slots:{0:{structure:Re,memory:{array:u},address:-1431655766}}},5:{structure:ee,memory:{array:vs},slots:{0:{structure:qe,memory:{array:u},address:-1431655766}}},6:{structure:te,memory:{array:Es},slots:{0:{structure:we,memory:{array:u},address:-1431655766}}}}}},slot:1});Object.assign(w,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:f}],methods:[],template:null},slot:21});Object.assign(Ve,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:w}],methods:[],template:null},slot:20});Object.assign(_e,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Ve}],methods:[],template:null},slot:19});Object.assign(l,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:l}],methods:[],template:null},slot:22});const Ks=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(Ae,{...t,type:9,name:"cassini.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:y},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:y}],methods:[],template:{memory:{array:Ks}}},slot:23});Object.assign(U,{...t,name:"bool",length:1,byteSize:1,align:0,instance:{members:[{...e,type:1,isRequired:!1,bitOffset:0,bitSize:1,byteSize:1,structure:U}],methods:[],template:null},slot:24});Object.assign(j,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:j}],methods:[],template:null},slot:25});Object.assign(Ue,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:46});const Fs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ds=new Uint8Array([]),Ts=new Uint8Array([200,251,15,0]),Ms=new Uint8Array([4,0,0,0]);Object.assign(se,{...t,type:2,name:"cassini.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:_e},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Ae},{...e,type:1,isRequired:!1,bitOffset:168,bitSize:1,byteSize:1,slot:4,name:"premultiplied",structure:U},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:5,name:"offset",structure:j}],methods:[],template:{memory:{array:Fs}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:w},{...e,type:7,isRequired:!1,name:"FPixel",structure:Ue},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:h}],methods:[],template:{memory:{array:Ds},slots:{0:{structure:h,memory:{array:Ts},slots:{0:{structure:y,memory:{array:Ms}}}}}}},slot:18});const Hs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ws=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),$s=new Uint8Array([0,0,0,0,0,0,0,0]),We=new Uint8Array([]);Object.assign(I,{...t,type:2,name:"cassini.KernelInput(u8,cassini.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:se}],methods:[],template:{memory:{array:Hs},slots:{0:{structure:se,memory:{array:Ws},slots:{0:{structure:_e,memory:{array:$s},slots:{0:{structure:Ve,memory:{array:We}}}}}}}}},slot:17});Object.assign(je,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:w}],methods:[],template:null},slot:20});Object.assign(Pe,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:je}],methods:[],template:null},slot:28});const Bs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ls=new Uint8Array([]),Gs=new Uint8Array([200,251,15,0]),Js=new Uint8Array([4,0,0,0]);Object.assign(re,{...t,type:2,name:"cassini.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Pe},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Ae},{...e,type:1,isRequired:!1,bitOffset:168,bitSize:1,byteSize:1,slot:4,name:"premultiplied",structure:U},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:5,name:"offset",structure:j}],methods:[],template:{memory:{array:Bs}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:w},{...e,type:7,isRequired:!1,name:"FPixel",structure:Ue},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:h}],methods:[],template:{memory:{array:Ls},slots:{0:{structure:h,memory:{array:Gs},slots:{0:{structure:y,memory:{array:Js}}}}}}},slot:27});const Ns=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Qs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Xs=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(C,{...t,type:2,name:"cassini.KernelOutput(u8,cassini.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:re}],methods:[],template:{memory:{array:Ns},slots:{0:{structure:re,memory:{array:Qs},slots:{0:{structure:Pe,memory:{array:Xs},slots:{0:{structure:je,memory:{array:We}}}}}}}}},slot:26});const Ys=new Uint8Array([0,0,181,67,0,0,181,67,0,0,181,67,0,0,181,67,0,0,160,64,0,0,0,0]);Object.assign(k,{...t,type:2,name:"cassini.KernelParameters(cassini.kernel)",length:1,byteSize:24,align:3,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"imageWH",structure:O},{...e,type:6,isRequired:!1,bitOffset:64,bitSize:64,byteSize:8,slot:1,name:"poi",structure:O},{...e,type:4,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:2,name:"zoom",structure:b},{...e,type:4,isRequired:!1,bitOffset:160,bitSize:32,byteSize:4,slot:3,name:"lambda",structure:b}],methods:[],template:{memory:{array:Ys}}},slot:29});Object.assign(Ee,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(cassini.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:47});Object.assign(Ke,{...t,type:7,name:"@typeInfo(@typeInfo(@TypeOf(cassini.createOutput)).Fn.return_type.?).ErrorUnion.error_set!cassini.KernelOutput(u8,cassini.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:C},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Ee}],methods:[],template:null},slot:34});Object.assign(Fe,{...t,type:3,name:"createOutput",length:1,byteSize:88,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:192,bitSize:32,byteSize:4,slot:0,name:"0",structure:l},{...e,type:3,bitOffset:224,bitSize:32,byteSize:4,slot:1,name:"1",structure:l},{...e,type:6,bitOffset:256,bitSize:192,byteSize:24,slot:2,name:"2",structure:I},{...e,type:6,bitOffset:0,bitSize:192,byteSize:24,slot:3,name:"3",structure:k},{...e,type:6,bitOffset:448,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Ke}],methods:[],template:null},slot:32});Object.assign(De,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(cassini.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:48});Object.assign(Te,{...t,type:7,name:"@typeInfo(@typeInfo(@TypeOf(cassini.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set!cassini.KernelOutput(u8,cassini.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:C},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:De}],methods:[],template:null},slot:35});Object.assign(Me,{...t,type:3,name:"createPartialOutput",length:1,byteSize:96,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:192,bitSize:32,byteSize:4,slot:0,name:"0",structure:l},{...e,type:3,bitOffset:224,bitSize:32,byteSize:4,slot:1,name:"1",structure:l},{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:2,name:"2",structure:l},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:3,name:"3",structure:l},{...e,type:6,bitOffset:320,bitSize:192,byteSize:24,slot:4,name:"4",structure:I},{...e,type:6,bitOffset:0,bitSize:192,byteSize:24,slot:5,name:"5",structure:k},{...e,type:6,bitOffset:512,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Te}],methods:[],template:null},slot:33});const Zs={argStruct:Fe,thunk:2,name:"createOutput"},er={argStruct:Me,thunk:1,name:"createPartialOutput"};Object.assign(He,{...t,type:2,name:"cassini",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:We}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:ve},{...e,type:7,isRequired:!1,name:"Input",structure:I},{...e,type:7,isRequired:!1,name:"Output",structure:C},{...e,type:7,isRequired:!1,name:"Parameters",structure:k}],methods:[Zs,er],template:null},slot:0});const tr=[f,_,A,z,ae,ie,D,y,h,b,O,a,s,me,T,ne,M,P,R,oe,ue,H,ce,W,le,$,ye,B,pe,fe,L,be,G,de,he,J,ge,N,Se,ze,Q,Oe,X,Re,Y,Z,x,q,qe,ee,we,te,ve,w,Ve,_e,l,Ae,U,j,Ue,se,I,je,Pe,re,C,k,Ee,Ke,Fe,De,Te,Me,He],sr=gt(tr),rr=He.constructor,ar=(async()=>{const n=new URL("cassini-e3c1b695.wasm",import.meta.url).href;return fetch(n)})();St(ar,{...sr,writeBack:!0});const{createOutput:yr,createPartialOutput:ir,kernel:ke,Input:mr,Output:pr,Parameters:fr}=rr;function nr(n,c,i,r,m={},g={}){if(Array.isArray(m)){const d=m;m={};for(const[p,S]of Object.keys(ke.inputImages).entries())m[S]=d[p]}const v=new mr(void 0),E=Object.keys(ke.inputImages),o=[];let V;for(const d of E){let p=m[d];if(p||(E.length===1&&["data","width","height"].every(S=>!!m[S])?p=m:o.push(d)),v[d]=p,V){if(p.colorSpace!==V)throw new Error(`Input images must all use the same color space: ${V}`)}else V=p.colorSpace}if(o.length>0)throw new Error(`Missing input image${o.length>1?"s":""}: ${o.join(", ")}`);const xe=ir(n,c,i,r,v,g),$e=d=>{const p=Object.keys(d),S={};for(const Be of p){const{data:{typedArray:K},width:Le,height:Ze}=d[Be];let F;if(typeof ImageData=="function"){const et=new Uint8ClampedArray(K.buffer,K.byteOffset,K.byteLength);F=new ImageData(et,Le,r,{colorSpace:V})}else F={data:K,width:Le,height:Ze};if(p.length===1)return F;S[Be]=F}return S};return xe[Symbol.toStringTag]==="Promise"?xe.then($e):$e(xe)}function or(){const n={};for(let[c,i]of Object.entries(ke)){if(c==="parameters"){const r={};for(const[m,g]of Object.entries(i)){const v=r[m]={};for(let[E,o]of Object.entries(g))typeof o=="object"?"string"in o?o=o.string:o=Ye(o):typeof o=="function"&&(o=ur(o.name)),v[E]=o}i=r}else typeof i=="object"&&("string"in i?i=i.string:i=i.valueOf());n[c]=i}return n}function Ye(n){const c=[];for(let[i,r]of Object.entries(n))typeof r=="object"&&(r=Ye(r)),c[i]=r;return c}function ur(n){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[n]}onmessage=n=>{const[c,i,...r]=n.data;cr(c,r).then(([m,g])=>{postMessage([c,i,m],{transfer:g})}).catch(m=>{postMessage(["error",i,m])})};async function cr(n,c){switch(n){case"getKernelInfo":return[or(...c)];case"createPartialImageData":const r=await nr(...c),m=[];if("data"in r&&"width"in r&&"height"in r)m.push(r.data.buffer);else for(const g of Object.entries(r))m.push(r.data.buffer);return[r,m];default:throw new Error(`Unknown function: ${n}`)}}
