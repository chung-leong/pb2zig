import{u as Te,a as Fe,b as Me,c as _e,d as $e,e as Be,f as Le,g as Ye,h as Ge,i as He,j as Je,k as Ne,l as Qe,m as We,o as Xe,n as Ze,p as et,q as tt}from"./index-d64bc850.js";Te();Fe();Me();_e();$e();Be();Le();Ye();Ge();He();Je();Ne();Qe();We();Xe();Ze();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},d={},N={},Q={},C={},W={},X={},k={},b={},c={},Z={},ee={},I={},l={},s={},r={},te={},v={},re={},x={},O={},se={},E={},ae={},D={},ne={},K={},ie={},T={},ue={},F={},oe={},M={},le={},_={},me={},$={},ye={},B={},ce={},L={},be={},Y={},pe={},G={},Oe={},g={},fe={},de={},y={},Se={},w={},Ae={},H={},A={},he={},ge={},J={},U={},R={},Ue={},Re={},qe={},je={},Pe={},Ve={},Ce={};Object.assign(d,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:5});Object.assign(N,{...t,type:1,name:"[14:0]u8",length:14,byteSize:15,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:4});Object.assign(Q,{...t,type:11,name:"*const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:N}],methods:[],template:null},slot:3});Object.assign(C,{...t,type:11,name:"*const *const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[],template:null},slot:2});Object.assign(W,{...t,type:1,name:"[11:0]u8",length:11,byteSize:12,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:8});Object.assign(X,{...t,type:11,name:"*const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:7});Object.assign(k,{...t,type:11,name:"*const *const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:6});Object.assign(b,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:10});Object.assign(c,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:b}],methods:[],template:null},slot:9});Object.assign(Z,{...t,type:1,name:"[32:0]u8",length:32,byteSize:33,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:13});Object.assign(ee,{...t,type:11,name:"*const [32:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:12});Object.assign(I,{...t,type:11,name:"*const *const [32:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:11});Object.assign(l,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:l}],methods:[],template:null},slot:32});Object.assign(s,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:s}],methods:[],template:null},slot:58});Object.assign(r,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:s}],methods:[],template:null},slot:57});const rt=new Uint8Array,st=new Uint8Array([96,248,15,0]),at=new Uint8Array([0,0,0,0,0,0,137,64]);Object.assign(te,{...t,type:2,name:"Struct0014",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:l},{...e,type:8,isRequired:!1,slot:0,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:rt},slots:{0:{structure:r,memory:{array:st},slots:{0:{structure:s,memory:{array:at}}}}}}},slot:39});Object.assign(v,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:38});const nt=new Uint8Array,it=new Uint8Array([96,248,15,0]),ut=new Uint8Array([0,0,0,0,0,192,130,64]);Object.assign(re,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:l},{...e,type:8,isRequired:!1,slot:0,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:nt},slots:{0:{structure:r,memory:{array:it},slots:{0:{structure:s,memory:{array:ut}}}}}}},slot:41});Object.assign(x,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:40});Object.assign(O,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:l}],methods:[],template:null},slot:33});const ot=new Uint8Array,lt=new Uint8Array([112,249,15,0]),mt=new Uint8Array([0,0,0,0,0,0,240,191]),yt=new Uint8Array([184,249,15,0]),ct=new Uint8Array([0,0,0,0,0,0,240,191]),bt=new Uint8Array([16,250,15,0]),pt=new Uint8Array([0,0,0,0,0,0,0,192]),ft=new Uint8Array([136,250,15,0]),dt=new Uint8Array([0,0,0,0,0,0,224,191]);Object.assign(se,{...t,type:2,name:"Struct0025",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:r}],methods:[],template:{memory:{array:ot},slots:{0:{structure:r,memory:{array:lt},slots:{0:{structure:s,memory:{array:mt}}}},1:{structure:r,memory:{array:yt},slots:{0:{structure:s,memory:{array:ct}}}},2:{structure:r,memory:{array:bt},slots:{0:{structure:s,memory:{array:pt}}}},3:{structure:r,memory:{array:ft},slots:{0:{structure:s,memory:{array:dt}}}}}}},slot:60});Object.assign(E,{...t,type:11,name:"Struct0022",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:59});const St=new Uint8Array,ht=new Uint8Array([112,249,15,0]),gt=new Uint8Array([0,0,0,0,0,0,240,63]),zt=new Uint8Array([184,249,15,0]),wt=new Uint8Array([0,0,0,0,0,0,240,63]),Ot=new Uint8Array([16,250,15,0]),At=new Uint8Array([0,0,0,0,0,0,0,64]),Ut=new Uint8Array([136,250,15,0]),Rt=new Uint8Array([0,0,0,0,0,0,224,63]);Object.assign(ae,{...t,type:2,name:"Struct0026",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:r}],methods:[],template:{memory:{array:St},slots:{0:{structure:r,memory:{array:ht},slots:{0:{structure:s,memory:{array:gt}}}},1:{structure:r,memory:{array:zt},slots:{0:{structure:s,memory:{array:wt}}}},2:{structure:r,memory:{array:Ot},slots:{0:{structure:s,memory:{array:At}}}},3:{structure:r,memory:{array:Ut},slots:{0:{structure:s,memory:{array:Rt}}}}}}},slot:62});Object.assign(D,{...t,type:11,name:"Struct0023",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:61});const qt=new Uint8Array,jt=new Uint8Array([112,249,15,0]),Pt=new Uint8Array([154,153,153,153,153,153,217,191]),Vt=new Uint8Array([184,249,15,0]),Ct=new Uint8Array([195,245,40,92,143,194,229,191]),kt=new Uint8Array([16,250,15,0]),It=new Uint8Array([10,215,163,112,61,10,215,191]),vt=new Uint8Array([136,250,15,0]),xt=new Uint8Array([123,20,174,71,225,122,164,191]);Object.assign(ne,{...t,type:2,name:"Struct0027",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:r}],methods:[],template:{memory:{array:qt},slots:{0:{structure:r,memory:{array:jt},slots:{0:{structure:s,memory:{array:Pt}}}},1:{structure:r,memory:{array:Vt},slots:{0:{structure:s,memory:{array:Ct}}}},2:{structure:r,memory:{array:kt},slots:{0:{structure:s,memory:{array:It}}}},3:{structure:r,memory:{array:vt},slots:{0:{structure:s,memory:{array:xt}}}}}}},slot:64});Object.assign(K,{...t,type:11,name:"Struct0024",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:63});const Et=new Uint8Array,Dt=new Uint8Array([170,170,170,170]),Kt=new Uint8Array,Tt=new Uint8Array([170,170,170,170]),Ft=new Uint8Array,Mt=new Uint8Array([170,170,170,170]),_t=new Uint8Array;Object.assign(ie,{...t,type:2,name:"Struct0016",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:O},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:E},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:D},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:K}],methods:[],template:{memory:{array:Et},slots:{0:{structure:E,memory:{array:Dt},slots:{0:{structure:se,memory:{array:Kt}}}},1:{structure:D,memory:{array:Tt},slots:{0:{structure:ae,memory:{array:Ft}}}},2:{structure:K,memory:{array:Mt},slots:{0:{structure:ne,memory:{array:_t}}}}}}},slot:43});Object.assign(T,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:42});const $t=new Uint8Array,Bt=new Uint8Array([144,250,15,0]),Lt=new Uint8Array([0,0,0,0,0,0,240,191]),Yt=new Uint8Array([24,248,15,0]),Gt=new Uint8Array([0,0,0,0,0,0,240,63]),Ht=new Uint8Array([248,247,15,0]),Jt=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(ue,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:l},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:$t},slots:{0:{structure:r,memory:{array:Bt},slots:{0:{structure:s,memory:{array:Lt}}}},1:{structure:r,memory:{array:Yt},slots:{0:{structure:s,memory:{array:Gt}}}},2:{structure:r,memory:{array:Ht},slots:{0:{structure:s,memory:{array:Jt}}}}}}},slot:45});Object.assign(F,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:44});const Nt=new Uint8Array,Qt=new Uint8Array([144,250,15,0]),Wt=new Uint8Array([0,0,0,0,0,0,0,0]),Xt=new Uint8Array([24,248,15,0]),Zt=new Uint8Array([0,0,0,0,0,0,36,64]),er=new Uint8Array([248,247,15,0]),tr=new Uint8Array([0,0,0,0,0,0,8,64]);Object.assign(oe,{...t,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:l},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:Nt},slots:{0:{structure:r,memory:{array:Qt},slots:{0:{structure:s,memory:{array:Wt}}}},1:{structure:r,memory:{array:Xt},slots:{0:{structure:s,memory:{array:Zt}}}},2:{structure:r,memory:{array:er},slots:{0:{structure:s,memory:{array:tr}}}}}}},slot:47});Object.assign(M,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:46});const rr=new Uint8Array,sr=new Uint8Array([144,250,15,0]),ar=new Uint8Array([0,0,0,0,0,0,20,192]),nr=new Uint8Array([24,248,15,0]),ir=new Uint8Array([0,0,0,0,0,0,20,64]),ur=new Uint8Array([248,247,15,0]),or=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(le,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:l},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:rr},slots:{0:{structure:r,memory:{array:sr},slots:{0:{structure:s,memory:{array:ar}}}},1:{structure:r,memory:{array:nr},slots:{0:{structure:s,memory:{array:ir}}}},2:{structure:r,memory:{array:ur},slots:{0:{structure:s,memory:{array:or}}}}}}},slot:49});Object.assign(_,{...t,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:48});const lr=new Uint8Array,mr=new Uint8Array([170,170,170,170]),yr=new Uint8Array,cr=new Uint8Array([170,170,170,170]),br=new Uint8Array,pr=new Uint8Array([170,170,170,170]),fr=new Uint8Array,dr=new Uint8Array([170,170,170,170]),Sr=new Uint8Array,hr=new Uint8Array([170,170,170,170]),gr=new Uint8Array,zr=new Uint8Array([170,170,170,170]),wr=new Uint8Array;Object.assign(me,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"width",structure:v},{...e,type:8,isRequired:!1,slot:1,name:"height",structure:x},{...e,type:8,isRequired:!1,slot:2,name:"c",structure:T},{...e,type:8,isRequired:!1,slot:3,name:"w",structure:F},{...e,type:8,isRequired:!1,slot:4,name:"camDistance",structure:M},{...e,type:8,isRequired:!1,slot:5,name:"rotationY",structure:_}],methods:[],template:{memory:{array:lr},slots:{0:{structure:v,memory:{array:mr},slots:{0:{structure:te,memory:{array:yr}}}},1:{structure:x,memory:{array:cr},slots:{0:{structure:re,memory:{array:br}}}},2:{structure:T,memory:{array:pr},slots:{0:{structure:ie,memory:{array:fr}}}},3:{structure:F,memory:{array:dr},slots:{0:{structure:ue,memory:{array:Sr}}}},4:{structure:M,memory:{array:hr},slots:{0:{structure:oe,memory:{array:gr}}}},5:{structure:_,memory:{array:zr},slots:{0:{structure:le,memory:{array:wr}}}}}}},slot:15});Object.assign($,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:14});const Or=new Uint8Array,Ar=new Uint8Array([176,253,15,0]),Ur=new Uint8Array([3,0,0,0]);Object.assign(ye,{...t,type:2,name:"Struct0020",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:c}],methods:[],template:{memory:{array:Or},slots:{0:{structure:c,memory:{array:Ar},slots:{0:{structure:b,memory:{array:Ur}}}}}}},slot:51});Object.assign(B,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:50});const Rr=new Uint8Array,qr=new Uint8Array([170,170,170,170]),jr=new Uint8Array;Object.assign(ce,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"inputUsedToTest",structure:B}],methods:[],template:{memory:{array:Rr},slots:{0:{structure:B,memory:{array:qr},slots:{0:{structure:ye,memory:{array:jr}}}}}}},slot:17});Object.assign(L,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:16});const Pr=new Uint8Array,Vr=new Uint8Array([176,253,15,0]),Cr=new Uint8Array([4,0,0,0]);Object.assign(be,{...t,type:2,name:"Struct0021",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:c}],methods:[],template:{memory:{array:Pr},slots:{0:{structure:c,memory:{array:Vr},slots:{0:{structure:b,memory:{array:Cr}}}}}}},slot:53});Object.assign(Y,{...t,type:11,name:"Struct0013",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:52});const kr=new Uint8Array,Ir=new Uint8Array([170,170,170,170]),vr=new Uint8Array;Object.assign(pe,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:Y}],methods:[],template:{memory:{array:kr},slots:{0:{structure:Y,memory:{array:Ir},slots:{0:{structure:be,memory:{array:vr}}}}}}},slot:19});Object.assign(G,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:18});const xr=new Uint8Array,Er=new Uint8Array,Dr=new Uint8Array([204,36,16,0]),Kr=new Uint8Array([125,36,16,0]),Tr=new Uint8Array([100,101,114,115,99,104,109,97,108,101,46,99,111,109,0]),Fr=new Uint8Array([200,36,16,0]),Mr=new Uint8Array([102,36,16,0]),_r=new Uint8Array([68,101,114,32,83,99,104,109,97,108,101,0]),$r=new Uint8Array([196,36,16,0]),Br=new Uint8Array([1,0,0,0]),Lr=new Uint8Array([192,36,16,0]),Yr=new Uint8Array([52,36,16,0]),Gr=new Uint8Array([82,97,121,116,114,97,99,101,115,32,97,32,81,117,97,116,101,114,110,105,111,110,32,74,117,108,105,97,32,115,101,116,0]),Hr=new Uint8Array([170,170,170,170]),Jr=new Uint8Array,Nr=new Uint8Array([170,170,170,170]),Qr=new Uint8Array,Wr=new Uint8Array([170,170,170,170]),Xr=new Uint8Array;Object.assign(Oe,{...t,type:2,name:"rt-julia.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:xr}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:C},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:k},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:c},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:I},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:$},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:L},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:G}],methods:[],template:{memory:{array:Er},slots:{0:{structure:C,memory:{array:Dr},slots:{0:{structure:Q,memory:{array:Kr},slots:{0:{structure:N,memory:{array:Tr}}}}}},1:{structure:k,memory:{array:Fr},slots:{0:{structure:X,memory:{array:Mr},slots:{0:{structure:W,memory:{array:_r}}}}}},2:{structure:c,memory:{array:$r},slots:{0:{structure:b,memory:{array:Br}}}},3:{structure:I,memory:{array:Lr},slots:{0:{structure:ee,memory:{array:Yr},slots:{0:{structure:Z,memory:{array:Gr}}}}}},4:{structure:$,memory:{array:Hr},slots:{0:{structure:me,memory:{array:Jr}}}},5:{structure:L,memory:{array:Nr},slots:{0:{structure:ce,memory:{array:Qr}}}},6:{structure:G,memory:{array:Wr},slots:{0:{structure:pe,memory:{array:Xr}}}}}}},slot:1});Object.assign(g,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:24});Object.assign(fe,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:g}],methods:[],template:null},slot:23});Object.assign(de,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:fe}],methods:[],template:null},slot:22});Object.assign(y,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:25});const Zr=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(Se,{...t,type:9,name:"rt-julia.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:b},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:b}],methods:[],template:{memory:{array:Zr}}},slot:26});Object.assign(w,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:w}],methods:[],template:null},slot:27});Object.assign(Ae,{...t,type:13,name:"@Vector(3, f32)",length:3,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:l}],methods:[],template:null},slot:54});const es=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ts=new Uint8Array,rs=new Uint8Array([252,35,16,0]),ss=new Uint8Array([3,0,0,0]);Object.assign(H,{...t,type:2,name:"rt-julia.Image(u8,3,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:de},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Se},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:w}],methods:[],template:{memory:{array:es}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:g},{...e,type:7,isRequired:!1,name:"FPixel",structure:Ae},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:c}],methods:[],template:{memory:{array:ts},slots:{0:{structure:c,memory:{array:rs},slots:{0:{structure:b,memory:{array:ss}}}}}}},slot:21});const as=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ns=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),xe=new Uint8Array([0,0,0,0,0,0,0,0]),is=new Uint8Array;Object.assign(A,{...t,type:2,name:"rt-julia.KernelInput(u8,rt-julia.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"inputUsedToTest",structure:H}],methods:[],template:{memory:{array:as},slots:{0:{structure:H,memory:{array:ns},slots:{0:{structure:de,memory:{array:xe},address:1047568,slots:{0:{structure:fe,memory:{array:is},address:0}}}}}}}},slot:20});Object.assign(he,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:g}],methods:[],template:null},slot:23});Object.assign(ge,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:he}],methods:[],template:null},slot:30});const us=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),os=new Uint8Array,ls=new Uint8Array([248,35,16,0]),ms=new Uint8Array([4,0,0,0]);Object.assign(J,{...t,type:2,name:"rt-julia.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:ge},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Se},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:w}],methods:[],template:{memory:{array:us}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:g},{...e,type:7,isRequired:!1,name:"FPixel",structure:O},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:c}],methods:[],template:{memory:{array:os},slots:{0:{structure:c,memory:{array:ls},slots:{0:{structure:b,memory:{array:ms}}}}}}},slot:29});const ys=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),cs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),bs=new Uint8Array;Object.assign(U,{...t,type:2,name:"rt-julia.KernelOutput(u8,rt-julia.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:J}],methods:[],template:{memory:{array:ys},slots:{0:{structure:J,memory:{array:cs},slots:{0:{structure:ge,memory:{array:xe},address:1047568,slots:{0:{structure:he,memory:{array:bs},address:0}}}}}}}},slot:28});const ps=new Uint8Array([205,204,204,190,123,20,46,191,236,81,184,190,10,215,35,189,0,0,72,68,0,0,22,68,0,0,0,0,0,0,64,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);Object.assign(R,{...t,type:2,name:"rt-julia.KernelParameters(rt-julia.kernel)",length:1,byteSize:48,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:0,name:"width",structure:l},{...e,type:4,isRequired:!1,bitOffset:160,bitSize:32,byteSize:4,slot:1,name:"height",structure:l},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:128,byteSize:16,slot:2,name:"c",structure:O},{...e,type:4,isRequired:!1,bitOffset:192,bitSize:32,byteSize:4,slot:3,name:"w",structure:l},{...e,type:4,isRequired:!1,bitOffset:224,bitSize:32,byteSize:4,slot:4,name:"camDistance",structure:l},{...e,type:4,isRequired:!1,bitOffset:256,bitSize:32,byteSize:4,slot:5,name:"rotationY",structure:l}],methods:[],template:{memory:{array:ps}}},slot:31});Object.assign(Ue,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(rt-julia.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:55});Object.assign(Re,{...t,type:7,name:"ErrorSet0000!rt-julia.KernelOutput(u8,rt-julia.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:U},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Ue}],methods:[],template:null},slot:36});Object.assign(qe,{...t,type:3,name:"createOutput",length:1,byteSize:112,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:6,bitOffset:448,bitSize:192,byteSize:24,slot:2,name:"2",structure:A},{...e,type:6,bitOffset:0,bitSize:384,byteSize:48,slot:3,name:"3",structure:R},{...e,type:6,bitOffset:640,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Re}],methods:[],template:null},slot:34});Object.assign(je,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(rt-julia.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:56});Object.assign(Pe,{...t,type:7,name:"ErrorSet0001!rt-julia.KernelOutput(u8,rt-julia.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:U},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:je}],methods:[],template:null},slot:37});Object.assign(Ve,{...t,type:3,name:"createPartialOutput",length:1,byteSize:128,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:3,bitOffset:448,bitSize:32,byteSize:4,slot:2,name:"2",structure:y},{...e,type:3,bitOffset:480,bitSize:32,byteSize:4,slot:3,name:"3",structure:y},{...e,type:6,bitOffset:512,bitSize:192,byteSize:24,slot:4,name:"4",structure:A},{...e,type:6,bitOffset:0,bitSize:384,byteSize:48,slot:5,name:"5",structure:R},{...e,type:6,bitOffset:704,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Pe}],methods:[],template:null},slot:35});const fs=new Uint8Array,ds={argStruct:qe,thunk:8,name:"createOutput"},Ss={argStruct:Ve,thunk:2,name:"createPartialOutput"};Object.assign(Ce,{...t,type:2,name:"rt-julia",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:fs}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:Oe},{...e,type:7,isRequired:!1,name:"Input",structure:A},{...e,type:7,isRequired:!1,name:"Output",structure:U},{...e,type:7,isRequired:!1,name:"Parameters",structure:R}],methods:[ds,Ss],template:null},slot:0});const hs=[d,N,Q,C,W,X,k,b,c,Z,ee,I,l,s,r,te,v,re,x,O,se,E,ae,D,ne,K,ie,T,ue,F,oe,M,le,_,me,$,ye,B,ce,L,be,Y,pe,G,Oe,g,fe,de,y,Se,w,Ae,H,A,he,ge,J,U,R,Ue,Re,qe,je,Pe,Ve,Ce],gs=et(hs),zs=Ce.constructor,ws=(async()=>{const u=new URL("rt-julia-3963d2e3.wasm",import.meta.url).href;return fetch(u)})();tt(ws,{...gs,writeBack:!0});const{createOutput:Vs,createPartialOutput:Os,kernel:we,Input:As,Output:Cs,Parameters:ks}=zs;function Us(u,m,n,a,i={},S={}){if(Array.isArray(i)){const f=i;i={};for(const[p,h]of Object.keys(we.inputImages).entries())i[h]=f[p]}const q=new As(void 0),j=Object.keys(we.inputImages),o=[];let z;for(const f of j){let p=i[f];if(p||(j.length===1&&["data","width","height"].every(h=>!!i[h])?p=i:o.push(f)),q[f]=p,z){if(p.colorSpace!==z)throw new Error(`Input images must all use the same color space: ${z}`)}else z=p.colorSpace}if(o.length>0)throw new Error(`Missing input image${o.length>1?"s":""}: ${o.join(", ")}`);const ze=Os(u,m,n,a,q,S),ke=f=>{const p=Object.keys(f),h={};for(const Ie of p){const{data:{typedArray:P},width:ve,height:De}=f[Ie];let V;if(typeof ImageData=="function"){const Ke=new Uint8ClampedArray(P.buffer,P.byteOffset,P.byteLength);V=new ImageData(Ke,ve,a,{colorSpace:z})}else V={data:P,width:ve,height:De};if(p.length===1)return V;h[Ie]=V}return h};return ze[Symbol.toStringTag]==="Promise"?ze.then(ke):ke(ze)}function Rs(){const u={};for(let[m,n]of Object.entries(we)){if(m==="parameters"){const a={};for(const[i,S]of Object.entries(n)){const q=a[i]={};for(let[j,o]of Object.entries(S))typeof o=="object"?"string"in o?o=o.string:o=Ee(o):typeof o=="function"&&(o=qs(o.name)),q[j]=o}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());u[m]=n}return u}function Ee(u){const m=[];for(let[n,a]of Object.entries(u))typeof a=="object"&&(a=Ee(a)),m[n]=a;return m}function qs(u){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[u]}onmessage=u=>{const[m,n,...a]=u.data;js(m,a).then(([i,S])=>{postMessage([m,n,i],{transfer:S})}).catch(i=>{postMessage(["error",n,i])})};async function js(u,m){switch(u){case"getKernelInfo":return[Rs(...m)];case"createPartialImageData":const a=await Us(...m),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const S of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${u}`)}}
