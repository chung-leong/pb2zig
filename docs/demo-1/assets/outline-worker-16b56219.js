import{u as $e,a as Be,b as Le,d as Ge,c as He,e as Je,f as Ne,g as Qe,h as We,i as Xe,j as Ye,k as Ze,l as et,m as tt,o as st,n as rt,p as at,q as nt}from"./index-d64bc850.js";$e();Be();Le();Ge();He();Je();Ne();Qe();We();Xe();Ye();Ze();et();tt();st();rt();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},p={},te={},se={},M={},re={},ae={},_={},c={},b={},ne={},ie={},T={},q={},ue={},r={},s={},oe={},$={},le={},B={},me={},L={},ye={},ce={},G={},be={},H={},S={},P={},z={},w={},d={},pe={},J={},C={},V={},O={},fe={},N={},de={},Q={},Se={},W={},k={},A={},he={},X={},ge={},Y={},je={},U={},ze={},we={},m={},Oe={},j={},Z={},I={},Ae={},Ue={},ee={},v={},x={},Pe={},Ce={},Ve={},ke={},Ie={},ve={},xe={};Object.assign(p,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:5});Object.assign(te,{...t,type:1,name:"[7:0]u8",length:7,byteSize:8,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:4});Object.assign(se,{...t,type:11,name:"*const [7:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:3});Object.assign(M,{...t,type:11,name:"*const *const [7:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:2});Object.assign(re,{...t,type:1,name:"[12:0]u8",length:12,byteSize:13,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:8});Object.assign(ae,{...t,type:11,name:"*const [12:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:7});Object.assign(_,{...t,type:11,name:"*const *const [12:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:6});Object.assign(c,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:10});Object.assign(b,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:c}],methods:[],template:null},slot:9});Object.assign(ne,{...t,type:1,name:"[0:0]u8",length:0,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:13});Object.assign(ie,{...t,type:11,name:"*const [0:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:12});Object.assign(T,{...t,type:11,name:"*const *const [0:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:11});Object.assign(q,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:46});Object.assign(ue,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:32});Object.assign(r,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[],template:null},slot:68});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:r}],methods:[],template:null},slot:67});const it=new Uint8Array,ut=new Uint8Array([0,252,15,0]),ot=new Uint8Array([0,0,0,0,0,0,0,0]),lt=new Uint8Array([88,252,15,0]),mt=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(oe,{...t,type:2,name:"Struct0020",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:it},slots:{0:{structure:s,memory:{array:ut},slots:{0:{structure:r,memory:{array:ot}}}},1:{structure:s,memory:{array:lt},slots:{0:{structure:r,memory:{array:mt}}}}}}},slot:50});Object.assign($,{...t,type:11,name:"Struct0014",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:49});const yt=new Uint8Array,ct=new Uint8Array([0,252,15,0]),bt=new Uint8Array([0,0,0,0,0,0,240,63]),pt=new Uint8Array([88,252,15,0]),ft=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(le,{...t,type:2,name:"Struct0021",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:yt},slots:{0:{structure:s,memory:{array:ct},slots:{0:{structure:r,memory:{array:bt}}}},1:{structure:s,memory:{array:pt},slots:{0:{structure:r,memory:{array:ft}}}}}}},slot:52});Object.assign(B,{...t,type:11,name:"Struct0015",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:51});const dt=new Uint8Array,St=new Uint8Array([0,252,15,0]),ht=new Uint8Array([154,153,153,153,153,153,185,63]),gt=new Uint8Array([88,252,15,0]),zt=new Uint8Array([123,20,174,71,225,122,132,63]);Object.assign(me,{...t,type:2,name:"Struct0022",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:dt},slots:{0:{structure:s,memory:{array:St},slots:{0:{structure:r,memory:{array:ht}}}},1:{structure:s,memory:{array:gt},slots:{0:{structure:r,memory:{array:zt}}}}}}},slot:54});Object.assign(L,{...t,type:11,name:"Struct0016",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:53});Object.assign(ye,{...t,type:1,name:"[33:0]u8",length:33,byteSize:34,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:57});Object.assign(ce,{...t,type:11,name:"*const [33:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:56});Object.assign(G,{...t,type:11,name:"*const *const [33:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:55});const wt=new Uint8Array,Ot=new Uint8Array([170,170,170,170]),At=new Uint8Array,Ut=new Uint8Array([170,170,170,170]),Rt=new Uint8Array,qt=new Uint8Array([170,170,170,170]),jt=new Uint8Array,Pt=new Uint8Array([88,250,15,0]),Ct=new Uint8Array([125,33,16,0]),Vt=new Uint8Array([49,58,109,97,120,32,100,105,102,102,101,114,101,110,99,101,32,50,58,109,105,110,32,100,105,102,102,101,114,101,110,99,101,0]);Object.assign(be,{...t,type:2,name:"Struct0010",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:ue},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:$},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:B},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:L},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:G}],methods:[],template:{memory:{array:wt},slots:{0:{structure:$,memory:{array:Ot},slots:{0:{structure:oe,memory:{array:At}}}},1:{structure:B,memory:{array:Ut},slots:{0:{structure:le,memory:{array:Rt}}}},2:{structure:L,memory:{array:qt},slots:{0:{structure:me,memory:{array:jt}}}},3:{structure:G,memory:{array:Pt},slots:{0:{structure:ce,memory:{array:Ct},slots:{0:{structure:ye,memory:{array:Vt}}}}}}}}},slot:39});Object.assign(H,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:38});Object.assign(S,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:33});const kt=new Uint8Array,It=new Uint8Array([224,247,15,0]),vt=new Uint8Array([0,0,0,0,0,0,0,0]),xt=new Uint8Array([8,248,15,0]),Et=new Uint8Array([0,0,0,0,0,0,0,0]),Kt=new Uint8Array([48,248,15,0]),Dt=new Uint8Array([0,0,0,0,0,0,0,0]),Ft=new Uint8Array([88,248,15,0]),Mt=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(P,{...t,type:2,name:"Struct0023",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:s}],methods:[],template:{memory:{array:kt},slots:{0:{structure:s,memory:{array:It},slots:{0:{structure:r,memory:{array:vt}}}},1:{structure:s,memory:{array:xt},slots:{0:{structure:r,memory:{array:Et}}}},2:{structure:s,memory:{array:Kt},slots:{0:{structure:r,memory:{array:Dt}}}},3:{structure:s,memory:{array:Ft},slots:{0:{structure:r,memory:{array:Mt}}}}}}},slot:59});Object.assign(z,{...t,type:11,name:"Struct0017",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:P}],methods:[],template:null},slot:58});const _t=new Uint8Array,Tt=new Uint8Array([224,247,15,0]),$t=new Uint8Array([0,0,0,0,0,0,240,63]),Bt=new Uint8Array([8,248,15,0]),Lt=new Uint8Array([0,0,0,0,0,0,240,63]),Gt=new Uint8Array([48,248,15,0]),Ht=new Uint8Array([0,0,0,0,0,0,240,63]),Jt=new Uint8Array([88,248,15,0]),Nt=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(w,{...t,type:2,name:"Struct0024",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:s}],methods:[],template:{memory:{array:_t},slots:{0:{structure:s,memory:{array:Tt},slots:{0:{structure:r,memory:{array:$t}}}},1:{structure:s,memory:{array:Bt},slots:{0:{structure:r,memory:{array:Lt}}}},2:{structure:s,memory:{array:Gt},slots:{0:{structure:r,memory:{array:Ht}}}},3:{structure:s,memory:{array:Jt},slots:{0:{structure:r,memory:{array:Nt}}}}}}},slot:61});Object.assign(d,{...t,type:11,name:"Struct0018",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:w}],methods:[],template:null},slot:60});const Qt=new Uint8Array,Wt=new Uint8Array([16,251,15,0]),Xt=new Uint8Array([0,0,0,0,0,0,0,0]),Yt=new Uint8Array([88,251,15,0]),Zt=new Uint8Array([0,0,0,0,0,0,0,0]),es=new Uint8Array([176,251,15,0]),ts=new Uint8Array([0,0,0,0,0,0,0,0]),ss=new Uint8Array([40,252,15,0]),rs=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(pe,{...t,type:2,name:"Struct0025",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:s}],methods:[],template:{memory:{array:Qt},slots:{0:{structure:s,memory:{array:Wt},slots:{0:{structure:r,memory:{array:Xt}}}},1:{structure:s,memory:{array:Yt},slots:{0:{structure:r,memory:{array:Zt}}}},2:{structure:s,memory:{array:es},slots:{0:{structure:r,memory:{array:ts}}}},3:{structure:s,memory:{array:ss},slots:{0:{structure:r,memory:{array:rs}}}}}}},slot:63});Object.assign(J,{...t,type:11,name:"Struct0019",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:62});Object.assign(C,{...t,type:1,name:"[16:0]u8",length:16,byteSize:17,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:66});Object.assign(V,{...t,type:11,name:"*const [16:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:C}],methods:[],template:null},slot:65});Object.assign(O,{...t,type:11,name:"*const *const [16:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:V}],methods:[],template:null},slot:64});const as=new Uint8Array,ns=new Uint8Array([170,170,170,170]),is=new Uint8Array,us=new Uint8Array([170,170,170,170]),os=new Uint8Array,ls=new Uint8Array([170,170,170,170]),ms=new Uint8Array,ys=new Uint8Array([128,250,15,0]),cs=new Uint8Array([108,33,16,0]),bs=new Uint8Array([102,111,114,101,103,114,111,117,110,100,32,99,111,108,111,114,0]);Object.assign(fe,{...t,type:2,name:"Struct0011",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:S},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:z},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:d},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:J},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:O}],methods:[],template:{memory:{array:as},slots:{0:{structure:z,memory:{array:ns},slots:{0:{structure:P,memory:{array:is}}}},1:{structure:d,memory:{array:us},slots:{0:{structure:w,memory:{array:os}}}},2:{structure:J,memory:{array:ls},slots:{0:{structure:pe,memory:{array:ms}}}},3:{structure:O,memory:{array:ys},slots:{0:{structure:V,memory:{array:cs},slots:{0:{structure:C,memory:{array:bs}}}}}}}}},slot:41});Object.assign(N,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:40});const ps=new Uint8Array,fs=new Uint8Array([170,170,170,170]),ds=new Uint8Array,Ss=new Uint8Array([170,170,170,170]),hs=new Uint8Array,gs=new Uint8Array([170,170,170,170]),zs=new Uint8Array,ws=new Uint8Array([16,251,15,0]),Os=new Uint8Array([91,33,16,0]),As=new Uint8Array([98,97,99,107,103,114,111,117,110,100,32,99,111,108,111,114,0]);Object.assign(de,{...t,type:2,name:"Struct0012",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:S},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:z},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:d},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:d},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:O}],methods:[],template:{memory:{array:ps},slots:{0:{structure:z,memory:{array:fs},slots:{0:{structure:P,memory:{array:ds}}}},1:{structure:d,memory:{array:Ss},slots:{0:{structure:w,memory:{array:hs}}}},2:{structure:d,memory:{array:gs},slots:{0:{structure:w,memory:{array:zs}}}},3:{structure:O,memory:{array:ws},slots:{0:{structure:V,memory:{array:Os},slots:{0:{structure:C,memory:{array:As}}}}}}}}},slot:43});Object.assign(Q,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:de}],methods:[],template:null},slot:42});const Us=new Uint8Array,Rs=new Uint8Array([170,170,170,170]),qs=new Uint8Array,js=new Uint8Array([170,170,170,170]),Ps=new Uint8Array,Cs=new Uint8Array([170,170,170,170]),Vs=new Uint8Array;Object.assign(Se,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"difference",structure:H},{...e,type:8,isRequired:!1,slot:1,name:"color",structure:N},{...e,type:8,isRequired:!1,slot:2,name:"bgcolor",structure:Q}],methods:[],template:{memory:{array:Us},slots:{0:{structure:H,memory:{array:Rs},slots:{0:{structure:be,memory:{array:qs}}}},1:{structure:N,memory:{array:js},slots:{0:{structure:fe,memory:{array:Ps}}}},2:{structure:Q,memory:{array:Cs},slots:{0:{structure:de,memory:{array:Vs}}}}}}},slot:15});Object.assign(W,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Se}],methods:[],template:null},slot:14});const ks=new Uint8Array,Is=new Uint8Array([48,252,15,0]),vs=new Uint8Array([4,0,0,0]);Object.assign(k,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:b}],methods:[],template:{memory:{array:ks},slots:{0:{structure:b,memory:{array:Is},slots:{0:{structure:c,memory:{array:vs}}}}}}},slot:45});Object.assign(A,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:k}],methods:[],template:null},slot:44});const xs=new Uint8Array,Es=new Uint8Array([170,170,170,170]),Ks=new Uint8Array;Object.assign(he,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:A}],methods:[],template:{memory:{array:xs},slots:{0:{structure:A,memory:{array:Es},slots:{0:{structure:k,memory:{array:Ks}}}}}}},slot:17});Object.assign(X,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:he}],methods:[],template:null},slot:16});const Ds=new Uint8Array,Fs=new Uint8Array([170,170,170,170]),Ms=new Uint8Array;Object.assign(ge,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:A}],methods:[],template:{memory:{array:Ds},slots:{0:{structure:A,memory:{array:Fs},slots:{0:{structure:k,memory:{array:Ms}}}}}}},slot:19});Object.assign(Y,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ge}],methods:[],template:null},slot:18});const _s=new Uint8Array,Ts=new Uint8Array,$s=new Uint8Array([16,37,16,0]),Bs=new Uint8Array([201,36,16,0]),Ls=new Uint8Array([111,117,116,108,105,110,101,0]),Gs=new Uint8Array([12,37,16,0]),Hs=new Uint8Array([177,36,16,0]),Js=new Uint8Array([83,104,111,103,111,32,75,105,109,117,114,97,0]),Ns=new Uint8Array([8,37,16,0]),Qs=new Uint8Array([1,0,0,0]),Ws=new Uint8Array([4,37,16,0]),Xs=new Uint8Array([159,36,16,0]),Ys=new Uint8Array([0]),Zs=new Uint8Array([170,170,170,170]),er=new Uint8Array,tr=new Uint8Array([170,170,170,170]),sr=new Uint8Array,rr=new Uint8Array([170,170,170,170]),ar=new Uint8Array;Object.assign(je,{...t,type:2,name:"outline.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:_s}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:M},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:_},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:b},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:T},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:W},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:X},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:Y}],methods:[],template:{memory:{array:Ts},slots:{0:{structure:M,memory:{array:$s},slots:{0:{structure:se,memory:{array:Bs},slots:{0:{structure:te,memory:{array:Ls}}}}}},1:{structure:_,memory:{array:Gs},slots:{0:{structure:ae,memory:{array:Hs},slots:{0:{structure:re,memory:{array:Js}}}}}},2:{structure:b,memory:{array:Ns},slots:{0:{structure:c,memory:{array:Qs}}}},3:{structure:T,memory:{array:Ws},slots:{0:{structure:ie,memory:{array:Xs},slots:{0:{structure:ne,memory:{array:Ys}}}}}},4:{structure:W,memory:{array:Zs},slots:{0:{structure:Se,memory:{array:er}}}},5:{structure:X,memory:{array:tr},slots:{0:{structure:he,memory:{array:sr}}}},6:{structure:Y,memory:{array:rr},slots:{0:{structure:ge,memory:{array:ar}}}}}}},slot:1});Object.assign(U,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:p}],methods:[],template:null},slot:24});Object.assign(ze,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:U}],methods:[],template:null},slot:23});Object.assign(we,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:ze}],methods:[],template:null},slot:22});Object.assign(m,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[],template:null},slot:25});const nr=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(Oe,{...t,type:9,name:"outline.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:c},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:c}],methods:[],template:{memory:{array:nr}}},slot:26});Object.assign(j,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:j}],methods:[],template:null},slot:27});const ir=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ur=new Uint8Array,or=new Uint8Array([116,36,16,0]),lr=new Uint8Array([4,0,0,0]);Object.assign(Z,{...t,type:2,name:"outline.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:we},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Oe},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:j}],methods:[],template:{memory:{array:ir}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:U},{...e,type:7,isRequired:!1,name:"FPixel",structure:S},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:b}],methods:[],template:{memory:{array:ur},slots:{0:{structure:b,memory:{array:or},slots:{0:{structure:c,memory:{array:lr}}}}}}},slot:21});const mr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),yr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Fe=new Uint8Array([0,0,0,0,0,0,0,0]),cr=new Uint8Array;Object.assign(I,{...t,type:2,name:"outline.KernelInput(u8,outline.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:Z}],methods:[],template:{memory:{array:mr},slots:{0:{structure:Z,memory:{array:yr},slots:{0:{structure:we,memory:{array:Fe},address:1047200,slots:{0:{structure:ze,memory:{array:cr},address:0}}}}}}}},slot:20});Object.assign(Ae,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:U}],methods:[],template:null},slot:23});Object.assign(Ue,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Ae}],methods:[],template:null},slot:30});const br=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),pr=new Uint8Array,fr=new Uint8Array([116,36,16,0]),dr=new Uint8Array([4,0,0,0]);Object.assign(ee,{...t,type:2,name:"outline.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Ue},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Oe},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:j}],methods:[],template:{memory:{array:br}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:U},{...e,type:7,isRequired:!1,name:"FPixel",structure:S},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:b}],methods:[],template:{memory:{array:pr},slots:{0:{structure:b,memory:{array:fr},slots:{0:{structure:c,memory:{array:dr}}}}}}},slot:29});const Sr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),hr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),gr=new Uint8Array;Object.assign(v,{...t,type:2,name:"outline.KernelOutput(u8,outline.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:ee}],methods:[],template:{memory:{array:Sr},slots:{0:{structure:ee,memory:{array:hr},slots:{0:{structure:Ue,memory:{array:Fe},address:1047200,slots:{0:{structure:Ae,memory:{array:gr},address:0}}}}}}}},slot:28});const zr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,205,204,204,61,10,215,35,60,0,0,0,0,0,0,0,0]);Object.assign(x,{...t,type:2,name:"outline.KernelParameters(outline.kernel)",length:1,byteSize:48,align:4,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:256,bitSize:64,byteSize:8,slot:0,name:"difference",structure:ue},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:128,byteSize:16,slot:1,name:"color",structure:S},{...e,type:6,isRequired:!1,bitOffset:128,bitSize:128,byteSize:16,slot:2,name:"bgcolor",structure:S}],methods:[],template:{memory:{array:zr}}},slot:31});Object.assign(Pe,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(outline.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:47});Object.assign(Ce,{...t,type:7,name:"ErrorSet0000!outline.KernelOutput(u8,outline.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Pe}],methods:[],template:null},slot:36});Object.assign(Ve,{...t,type:3,name:"createOutput",length:1,byteSize:112,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:0,name:"0",structure:m},{...e,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:1,name:"1",structure:m},{...e,type:6,bitOffset:448,bitSize:192,byteSize:24,slot:2,name:"2",structure:I},{...e,type:6,bitOffset:0,bitSize:384,byteSize:48,slot:3,name:"3",structure:x},{...e,type:6,bitOffset:640,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Ce}],methods:[],template:null},slot:34});Object.assign(ke,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(outline.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:48});Object.assign(Ie,{...t,type:7,name:"ErrorSet0001!outline.KernelOutput(u8,outline.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:ke}],methods:[],template:null},slot:37});Object.assign(ve,{...t,type:3,name:"createPartialOutput",length:1,byteSize:128,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:0,name:"0",structure:m},{...e,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:1,name:"1",structure:m},{...e,type:3,bitOffset:448,bitSize:32,byteSize:4,slot:2,name:"2",structure:m},{...e,type:3,bitOffset:480,bitSize:32,byteSize:4,slot:3,name:"3",structure:m},{...e,type:6,bitOffset:512,bitSize:192,byteSize:24,slot:4,name:"4",structure:I},{...e,type:6,bitOffset:0,bitSize:384,byteSize:48,slot:5,name:"5",structure:x},{...e,type:6,bitOffset:704,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Ie}],methods:[],template:null},slot:35});const wr=new Uint8Array,Or={argStruct:Ve,thunk:6,name:"createOutput"},Ar={argStruct:ve,thunk:1,name:"createPartialOutput"};Object.assign(xe,{...t,type:2,name:"outline",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:wr}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:je},{...e,type:7,isRequired:!1,name:"Input",structure:I},{...e,type:7,isRequired:!1,name:"Output",structure:v},{...e,type:7,isRequired:!1,name:"Parameters",structure:x}],methods:[Or,Ar],template:null},slot:0});const Ur=[p,te,se,M,re,ae,_,c,b,ne,ie,T,q,ue,r,s,oe,$,le,B,me,L,ye,ce,G,be,H,S,P,z,w,d,pe,J,C,V,O,fe,N,de,Q,Se,W,k,A,he,X,ge,Y,je,U,ze,we,m,Oe,j,Z,I,Ae,Ue,ee,v,x,Pe,Ce,Ve,ke,Ie,ve,xe],Rr=at(Ur),qr=xe.constructor,jr=(async()=>{const u=new URL("outline-6ae47937.wasm",import.meta.url).href;return fetch(u)})();nt(jr,{...Rr,writeBack:!0});const{createOutput:Er,createPartialOutput:Pr,kernel:qe,Input:Cr,Output:Kr,Parameters:Dr}=qr;function Vr(u,l,n,a,i={},h={}){if(Array.isArray(i)){const f=i;i={};for(const[y,g]of Object.keys(qe.inputImages).entries())i[g]=f[y]}const E=new Cr(void 0),K=Object.keys(qe.inputImages),o=[];let R;for(const f of K){let y=i[f];if(y||(K.length===1&&["data","width","height"].every(g=>!!i[g])?y=i:o.push(f)),E[f]=y,R){if(y.colorSpace!==R)throw new Error(`Input images must all use the same color space: ${R}`)}else R=y.colorSpace}if(o.length>0)throw new Error(`Missing input image${o.length>1?"s":""}: ${o.join(", ")}`);const Re=Pr(u,l,n,a,E,h),Ee=f=>{const y=Object.keys(f),g={};for(const Ke of y){const{data:{typedArray:D},width:De,height:_e}=f[Ke];let F;if(typeof ImageData=="function"){const Te=new Uint8ClampedArray(D.buffer,D.byteOffset,D.byteLength);F=new ImageData(Te,De,a,{colorSpace:R})}else F={data:D,width:De,height:_e};if(y.length===1)return F;g[Ke]=F}return g};return Re[Symbol.toStringTag]==="Promise"?Re.then(Ee):Ee(Re)}function kr(){const u={};for(let[l,n]of Object.entries(qe)){if(l==="parameters"){const a={};for(const[i,h]of Object.entries(n)){const E=a[i]={};for(let[K,o]of Object.entries(h))typeof o=="object"?"string"in o?o=o.string:o=Me(o):typeof o=="function"&&(o=Ir(o.name)),E[K]=o}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());u[l]=n}return u}function Me(u){const l=[];for(let[n,a]of Object.entries(u))typeof a=="object"&&(a=Me(a)),l[n]=a;return l}function Ir(u){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[u]}onmessage=u=>{const[l,n,...a]=u.data;vr(l,a).then(([i,h])=>{postMessage([l,n,i],{transfer:h})}).catch(i=>{postMessage(["error",n,i])})};async function vr(u,l){switch(u){case"getKernelInfo":return[kr(...l)];case"createPartialImageData":const a=await Vr(...l),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const h of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${u}`)}}
