import{u as $e,a as Fe,b as Te,c as _e,d as Le,e as Be,f as Ge,g as He,h as Je,i as Ne,j as Qe,k as We,l as Xe,m as Ye,n as Ze,o as ts,p as es,q as ss}from"./index-aed2612b.js";$e();Xe();Ye();Fe();Te();Ze();ts();es();_e();Le();Be();Ge();He();ss();Je();Ne();Qe();const r={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,isIterator:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},e={type:0,isRequired:!1},o={},S={},E={},R={},p={},T={},_={},i={},d={},h={},L={},B={},G={},k={},H={},J={},et={},N={},A={},x={},c={},z={},v={},st={},Q={},K={},j={},W={},U={},C={},V={},rt={},ot={},w={},at={},nt={},ut={},qt={},it={},mt={},ct={},It={},yt={},vt={},lt={},Et={},At={},bt={},pt={},xt={},ft={},Kt={},St={},jt={},Ut={},zt={},ht={},Ct={},X={},Mt={},Dt={},dt={},$t={},gt={},Ft={},Tt={},_t={},Lt={},Bt={},Gt={},Ht={},Jt={},Nt={},Qt={},Wt={},Xt={},Yt={},Zt={},te={},ee={},se={},M={},re={},oe={},Ot={},ae={},Pt={},ne={},ue={},ie={},me={},ce={},ye={},le={},be={},pe={},fe={},Se={},ze={},he={},de={},ge={},Oe={},Pe={},Ve={},we={},Re={},ke={},qe={},Ie={},ve={},Ee={},Ae={},xe={},Ke={},je={},s=n=>new Uint8Array(n),rs=s(),os=s(),as=s(8),ns=s(),us=s([0,0,0,0,0,0,52,64]),is=s(),ms=s([0,0,0,0,0,0,240,63]),cs=s(),ys=s(),ls=s(8),bs=s(),ps=s([0,0,0,0,0,0,240,63]),fs=s(),Ss=s([154,153,153,153,153,153,185,63]),zs=s(),hs=s(),ds=s(),gs=s([4]),Os=s(),Ps=s(),Vs=s([163,2,0,1]),ws=s([99,111,109,46,114,112,104,101,108,97,110,0]),Rs=s([175,2,0,1]),ks=s([82,121,97,110,32,80,104,101,108,97,110,0]),qs=s(),Is=s([1]),vs=s([55,5,0,1]),Es=s([65,112,112,108,105,101,115,32,97,32,115,104,97,114,112,101,110,32,101,102,102,101,99,116,32,116,111,32,97,110,32,105,109,97,103,101,46,0]),As=s(),xs=s(),Ks=s(),js=s(1),Us=s([1]),Ue=s(24),Cs=s(),Ms=s(),Ds=s(),$s=s(),Fs=s([4]),Vt=s(24),Ce=s(24),Ts=s(),_s=s(),Ls=s(),Bs=s([4]),wt=s(24),Gs=s([0,0,128,63,205,204,204,61]),Hs=s([8,0]),Js=s([8,0]),Ns=s(),Qs=s(),Ws=s(),Xs=s(),t=Object.assign;t(qt,{slots:{0:it,1:ct,2:yt,3:lt}});t(it,{structure:o,memory:{array:rs},const:!0,slots:{0:mt}});t(mt,{structure:d});t(ct,{structure:i,memory:{array:os},const:!0,slots:{0:It}});t(It,{structure:h,memory:{array:as},const:!0});t(yt,{structure:i,memory:{array:ns},const:!0,slots:{0:vt}});t(vt,{structure:h,memory:{array:us},const:!0});t(lt,{structure:i,memory:{array:is},const:!0,slots:{0:Et}});t(Et,{structure:h,memory:{array:ms},const:!0});t(At,{slots:{0:bt,1:pt,2:ft,3:St}});t(bt,{structure:o,memory:{array:cs},const:!0,slots:{0:mt}});t(pt,{structure:i,memory:{array:ys},const:!0,slots:{0:xt}});t(xt,{structure:h,memory:{array:ls},const:!0});t(ft,{structure:i,memory:{array:bs},const:!0,slots:{0:Kt}});t(Kt,{structure:h,memory:{array:ps},const:!0});t(St,{structure:i,memory:{array:fs},const:!0,slots:{0:jt}});t(jt,{structure:h,memory:{array:Ss},const:!0});t(Ut,{slots:{0:zt,1:ht}});t(zt,{structure:L,memory:{array:zs},const:!0,slots:{0:it,1:ct,2:yt,3:lt}});t(ht,{structure:B,memory:{array:hs},const:!0,slots:{0:bt,1:pt,2:ft,3:St}});t(Ct,{slots:{0:X}});t(X,{structure:p,memory:{array:ds},const:!0,slots:{0:Mt}});t(Mt,{structure:S,memory:{array:gs},const:!0});t(Dt,{slots:{0:dt}});t(dt,{structure:k,memory:{array:Os},const:!0,slots:{0:X}});t($t,{slots:{0:gt}});t(gt,{structure:k,memory:{array:Ps},const:!0,slots:{0:X}});t(Ft,{slots:{0:Tt,1:Lt,2:Gt,3:Jt,4:Qt,5:Wt,6:Xt}});t(Tt,{structure:R,memory:{array:Vs},const:!0,slots:{0:_t}});t(_t,{structure:E,memory:{array:ws},reloc:16777891});t(Lt,{structure:R,memory:{array:Rs},const:!0,slots:{0:Bt}});t(Bt,{structure:E,memory:{array:ks},reloc:16777903});t(Gt,{structure:p,memory:{array:qs},const:!0,slots:{0:Ht}});t(Ht,{structure:S,memory:{array:Is},const:!0});t(Jt,{structure:_,memory:{array:vs},const:!0,slots:{0:Nt}});t(Nt,{structure:T,memory:{array:Es},reloc:16778551});t(Qt,{structure:G,memory:{array:As},const:!0,slots:{0:zt,1:ht}});t(Wt,{structure:H,memory:{array:xs},const:!0,slots:{0:dt}});t(Xt,{structure:J,memory:{array:Ks},const:!0,slots:{0:gt}});t(Yt,{slots:{0:Zt,1:te}});t(Zt,{structure:z,memory:{array:js},const:!0});t(te,{structure:z,memory:{array:Us},const:!0});t(ee,{memory:{array:Ue},slots:{0:se}});t(se,{structure:x,memory:{array:Ue,offset:0,length:8},slots:{0:M}});t(M,{structure:A,memory:{array:Cs},reloc:0});t(re,{slots:{0:oe,1:ae,2:ne}});t(oe,{structure:o,memory:{array:Ms},const:!0,slots:{0:Ot}});t(Ot,{structure:N});t(ae,{structure:o,memory:{array:Ds},const:!0,slots:{0:Pt}});t(Pt,{structure:st});t(ne,{structure:p,memory:{array:$s},const:!0,slots:{0:ue}});t(ue,{structure:S,memory:{array:Fs},const:!0});t(ie,{memory:{array:Vt},slots:{0:me}});t(me,{structure:Q,memory:{array:Vt},slots:{0:ce}});t(ce,{structure:x,memory:{array:Vt,offset:0,length:8},slots:{0:M}});t(ye,{memory:{array:Ce},slots:{0:le}});t(le,{structure:j,memory:{array:Ce,offset:0,length:8},slots:{0:M}});t(be,{slots:{0:pe,1:fe,2:Se}});t(pe,{structure:o,memory:{array:Ts},const:!0,slots:{0:Ot}});t(fe,{structure:o,memory:{array:_s},const:!0,slots:{0:Pt}});t(Se,{structure:p,memory:{array:Ls},const:!0,slots:{0:ze}});t(ze,{structure:S,memory:{array:Bs},const:!0});t(he,{memory:{array:wt},slots:{0:de}});t(de,{structure:W,memory:{array:wt},slots:{0:ge}});t(ge,{structure:j,memory:{array:wt,offset:0,length:8},slots:{0:M}});t(Oe,{memory:{array:Gs}});t(Pe,{slots:{0:Ve}});t(Ve,{structure:V,memory:{array:Hs},const:!0});t(we,{slots:{0:Re}});t(Re,{structure:w,memory:{array:Js},const:!0});t(ke,{slots:{0:qe,1:ve,2:Ae,3:Ke}});t(qe,{structure:o,memory:{array:Ns},const:!0,slots:{0:Ie}});t(Ie,{structure:et});t(ve,{structure:o,memory:{array:Qs},const:!0,slots:{0:Ee}});t(Ee,{structure:K});t(Ae,{structure:o,memory:{array:Ws},const:!0,slots:{0:xe}});t(xe,{structure:U});t(Ke,{structure:o,memory:{array:Xs},const:!0,slots:{0:je}});t(je,{structure:C});const Ys={argStruct:ot,thunkId:2,name:"createOutput"},Zs={argStruct:nt,thunkId:3,name:"createPartialOutput"};t(o,{...r,name:"type",align:1,instance:{members:[{...e,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:o}],methods:[]}});t(S,{...r,name:"u8",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});t(E,{...r,type:1,name:"[11:0]u8",length:11,byteSize:12,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});t(R,{...r,type:14,name:"*const [11:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,slot:0,structure:E}],methods:[]}});t(p,{...r,name:"comptime_int",align:1,instance:{members:[{...e,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:p}],methods:[]}});t(T,{...r,type:1,name:"[37:0]u8",length:37,byteSize:38,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});t(_,{...r,type:14,name:"*const [37:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[]}});t(i,{...r,name:"comptime_float",align:1,instance:{members:[{...e,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:i}],methods:[]}});t(d,{...r,name:"f32",byteSize:4,align:4,instance:{members:[{...e,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:d}],methods:[]}});t(h,{...r,name:"f64",byteSize:8,align:8,instance:{members:[{...e,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:h}],methods:[]}});t(L,{...r,type:2,name:"Struct0017",align:1,instance:{members:[{...e,type:7,slot:0,name:"type",structure:o},{...e,type:7,slot:1,name:"minValue",structure:i},{...e,type:7,slot:2,name:"maxValue",structure:i},{...e,type:7,slot:3,name:"defaultValue",structure:i}],methods:[],template:qt}});t(B,{...r,type:2,name:"Struct0022",align:1,instance:{members:[{...e,type:7,slot:0,name:"type",structure:o},{...e,type:7,slot:1,name:"minValue",structure:i},{...e,type:7,slot:2,name:"maxValue",structure:i},{...e,type:7,slot:3,name:"defaultValue",structure:i}],methods:[],template:At}});t(G,{...r,type:2,name:"Struct0016",align:1,instance:{members:[{...e,type:7,slot:0,name:"amount",structure:L},{...e,type:7,slot:1,name:"radius",structure:B}],methods:[],template:Ut}});t(k,{...r,type:2,name:"Struct0025",align:1,instance:{members:[{...e,type:7,slot:0,name:"channels",structure:p}],methods:[],template:Ct}});t(H,{...r,type:2,name:"Struct0024",align:1,instance:{members:[{...e,type:7,slot:0,name:"src",structure:k}],methods:[],template:Dt}});t(J,{...r,type:2,name:"Struct0027",align:1,instance:{members:[{...e,type:7,slot:0,name:"dst",structure:k}],methods:[],template:$t}});t(et,{...r,type:2,name:"sharpen.kernel",align:1,static:{members:[{...e,type:7,slot:0,name:"namespace",structure:R},{...e,type:7,slot:1,name:"vendor",structure:R},{...e,type:7,slot:2,name:"version",structure:p},{...e,type:7,slot:3,name:"description",structure:_},{...e,type:7,slot:4,name:"parameters",structure:G},{...e,type:7,slot:5,name:"inputImages",structure:H},{...e,type:7,slot:6,name:"outputImages",structure:J}],methods:[],template:Ft}});t(N,{...r,type:19,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});t(A,{...r,type:18,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...e,type:5,bitSize:32,byteSize:4,structure:N}],methods:[]}});t(x,{...r,type:15,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:64,byteSize:8,slot:0,structure:A}],methods:[]}});t(c,{...r,name:"u32",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[]}});t(z,{...r,type:12,name:"sharpen.ColorSpace",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:z}],methods:[]},static:{members:[{...e,type:7,slot:0,name:"srgb",structure:z},{...e,type:7,slot:1,name:"display-p3",structure:z}],methods:[],template:Yt}});t(v,{...r,name:"usize",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:v}],methods:[]}});t(st,{...r,type:19,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...e,type:4,bitSize:32,byteSize:4,structure:d}],methods:[]}});t(Q,{...r,type:2,name:"sharpen.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:x},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...e,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:z},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:v}],methods:[],template:ee},static:{members:[{...e,type:7,slot:0,name:"Pixel",structure:o},{...e,type:7,slot:1,name:"FPixel",structure:o},{...e,type:7,slot:2,name:"channels",structure:p}],methods:[],template:re}});t(K,{...r,type:2,name:"sharpen.KernelInput(u8,sharpen.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:Q}],methods:[],template:ie}});t(j,{...r,type:15,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitSize:64,byteSize:8,slot:0,structure:A}],methods:[]}});t(W,{...r,type:2,name:"sharpen.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:j},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...e,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:z},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:v}],methods:[],template:ye},static:{members:[{...e,type:7,slot:0,name:"Pixel",structure:o},{...e,type:7,slot:1,name:"FPixel",structure:o},{...e,type:7,slot:2,name:"channels",structure:p}],methods:[],template:be}});t(U,{...r,type:2,name:"sharpen.KernelOutput(u8,sharpen.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:W}],methods:[],template:he}});t(C,{...r,type:2,name:"sharpen.KernelParameters(sharpen.kernel)",byteSize:8,align:4,instance:{members:[{...e,type:4,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"amount",structure:d},{...e,type:4,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"radius",structure:d}],methods:[],template:Oe}});t(V,{...r,type:11,name:"ErrorSet0041",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:V}],methods:[]},static:{members:[{...e,type:7,slot:0,name:"OutOfMemory",structure:V}],methods:[],template:Pe}});t(rt,{...r,type:10,name:"ErrorSet0041!sharpen.KernelOutput(u8,sharpen.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:U},{...e,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:V}],methods:[]}});t(ot,{...r,type:5,name:"Arg0045",byteSize:68,align:4,hasPointer:!0,instance:{members:[{...e,type:5,isRequired:!0,bitOffset:0,bitSize:224,byteSize:28,slot:0,name:"retval",structure:rt},{...e,type:3,isRequired:!0,bitOffset:224,bitSize:32,byteSize:4,slot:1,name:"0",structure:c},{...e,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:2,name:"1",structure:c},{...e,type:5,isRequired:!0,bitOffset:288,bitSize:192,byteSize:24,slot:3,name:"2",structure:K},{...e,type:5,isRequired:!0,bitOffset:480,bitSize:64,byteSize:8,slot:4,name:"3",structure:C}],methods:[]}});t(w,{...r,type:11,name:"ErrorSet0044",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:w}],methods:[]},static:{members:[{...e,type:7,slot:0,name:"OutOfMemory",structure:w}],methods:[],template:we}});t(at,{...r,type:10,name:"ErrorSet0044!sharpen.KernelOutput(u8,sharpen.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:U},{...e,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:w}],methods:[]}});t(nt,{...r,type:5,name:"Arg0046",byteSize:76,align:4,hasPointer:!0,instance:{members:[{...e,type:5,isRequired:!0,bitOffset:0,bitSize:224,byteSize:28,slot:0,name:"retval",structure:at},{...e,type:3,isRequired:!0,bitOffset:224,bitSize:32,byteSize:4,slot:1,name:"0",structure:c},{...e,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:2,name:"1",structure:c},{...e,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:3,name:"2",structure:c},{...e,type:3,isRequired:!0,bitOffset:320,bitSize:32,byteSize:4,slot:4,name:"3",structure:c},{...e,type:5,isRequired:!0,bitOffset:352,bitSize:192,byteSize:24,slot:5,name:"4",structure:K},{...e,type:5,isRequired:!0,bitOffset:544,bitSize:64,byteSize:8,slot:6,name:"5",structure:C}],methods:[]}});t(ut,{...r,type:2,name:"sharpen",align:1,static:{members:[{...e,type:7,slot:0,name:"kernel",structure:o},{...e,type:7,slot:1,name:"Input",structure:o},{...e,type:7,slot:2,name:"Output",structure:o},{...e,type:7,slot:3,name:"Parameters",structure:o}],methods:[Ys,Zs],template:ke}});const tr=[o,S,E,R,p,T,_,i,d,h,L,B,G,k,H,J,et,N,A,x,c,z,v,st,Q,K,j,W,U,C,V,rt,ot,w,at,nt,ut],er=ut,sr={runtimeSafety:!1,littleEndian:!0},Y=We();Y.recreateStructures(tr,sr);const rr=(async()=>{const n=new URL("sharpen-515f2dca.wasm",import.meta.url).href;return fetch(n)})();Y.loadModule(rr);Y.linkVariables(!0);const{constructor:or}=er;Y.getSpecialExports();const{createPartialOutput:ar,Input:nr,kernel:tt}=or;function ur(n,y,m,u,a={},g={}){const O=[];for(const[b]of tt.inputImages)O.push(b);const q=[];for(const[b]of tt.outputImages)q.push(b);if(Array.isArray(a)){const b=a;a={};for(const[f,P]of O.entries())a[P]=b[f]}const l=new nr(void 0),D=[];let I;for(const b of O){let f=a[b];if(f||(O.length===1&&["data","width","height"].every(P=>!!a[P])?f=a:D.push(b)),l[b]=f,I){if(f.colorSpace!==I)throw new Error(`Input images must all use the same color space: ${I}`)}else I=f.colorSpace}if(D.length>0)throw new Error(`Missing input image${D.length>1?"s":""}: ${D.join(", ")}`);const Z=ar(n,y,m,u,l,g),Rt=b=>{const f={};for(const P of q){const{data:{typedArray:$},width:kt,height:Me}=b[P];let F;if(typeof ImageData=="function"){const De=new Uint8ClampedArray($.buffer,$.byteOffset,$.byteLength);F=new ImageData(De,kt,u,{colorSpace:I})}else F={data:$,width:kt,height:Me};if(q.length===1)return F;f[P]=F}return f};return Z[Symbol.toStringTag]==="Promise"?Z.then(Rt):Rt(Z)}function ir(){const n={};for(let[y,m]of tt){if(y==="parameters"){const u={};for(const[a,g]of m){const O=u[a]={};for(let[q,l]of g)typeof l=="object"?l=l.string??l.valueOf():typeof l=="function"&&(l=mr(l.name)),O[q]=l}m=u}else typeof m=="object"&&(m=m.string??m.valueOf());n[y]=m}return n}function mr(n){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[n]}onmessage=async n=>{if(!Array.isArray(n.data))return;const[y,m,...u]=n.data;try{const[a,g]=await cr(y,u);postMessage([y,m,a],{transfer:g})}catch(a){postMessage(["error",m,a])}};async function cr(n,y){switch(n){case"getKernelInfo":return[ir(...y)];case"createPartialImageData":const u=await ur(...y),a=[];if("data"in u&&"width"in u&&"height"in u)a.push(u.data.buffer);else for(const g of Object.entries(u))a.push(u.data.buffer);return[u,a];default:throw new Error(`Unknown function: ${n}`)}}postMessage("ready");
