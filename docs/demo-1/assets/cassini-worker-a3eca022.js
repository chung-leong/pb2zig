import{u as Ge,a as Je,b as Ne,d as Qe,c as Xe,e as Ye,f as Ze,g as et,h as tt,i as st,j as rt,k as at,l as nt,m as it,o as ut,n as ot,p as mt,q as lt}from"./index-422d9c98.js";Ge();Je();Ne();Qe();Xe();Ye();Ze();et();tt();st();rt();at();nt();it();ut();ot();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},b={},U={},j={},z={},se={},re={},F={},p={},f={},d={},O={},a={},s={},ae={},M={},ne={},_={},V={},w={},ie={},ue={},T={},oe={},$={},me={},B={},le={},H={},ye={},ce={},L={},be={},W={},pe={},fe={},G={},de={},J={},Se={},he={},N={},ge={},Q={},ze={},X={},C={},R={},Oe={},Y={},we={},Z={},ke={},q={},Re={},qe={},y={},Ae={},P={},Ue={},ee={},k={},je={},Pe={},te={},I={},v={},Ie={},ve={},xe={},Ee={},Ke={},De={},Fe={};Object.assign(b,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:5});Object.assign(U,{...t,type:1,name:"[15:0]u8",length:15,byteSize:16,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:4});Object.assign(j,{...t,type:11,name:"*const [15:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:U}],methods:[],template:null},slot:3});Object.assign(z,{...t,type:11,name:"*const *const [15:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:j}],methods:[],template:null},slot:2});Object.assign(se,{...t,type:1,name:"[16:0]u8",length:16,byteSize:17,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:8});Object.assign(re,{...t,type:11,name:"*const [16:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:7});Object.assign(F,{...t,type:11,name:"*const *const [16:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:6});Object.assign(p,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[],template:null},slot:10});Object.assign(f,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:p}],methods:[],template:null},slot:9});Object.assign(d,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:d}],methods:[],template:null},slot:30});Object.assign(O,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:d}],methods:[],template:null},slot:29});Object.assign(a,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:a}],methods:[],template:null},slot:65});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:a}],methods:[],template:null},slot:64});const yt=new Uint8Array([]),ct=new Uint8Array([96,251,15,0]),bt=new Uint8Array([0,0,0,0,0,0,240,63]),pt=new Uint8Array([0,252,15,0]),ft=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(ae,{...t,type:2,name:"Struct0021",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:yt},slots:{0:{structure:s,memory:{array:ct},slots:{0:{structure:a,memory:{array:bt}}}},1:{structure:s,memory:{array:pt},slots:{0:{structure:a,memory:{array:ft}}}}}}},slot:49});Object.assign(M,{...t,type:11,name:"Struct0016",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:48});const dt=new Uint8Array([]),St=new Uint8Array([96,251,15,0]),ht=new Uint8Array([0,0,0,0,0,64,159,64]),gt=new Uint8Array([0,252,15,0]),zt=new Uint8Array([0,0,0,0,0,64,159,64]);Object.assign(ne,{...t,type:2,name:"Struct0022",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:dt},slots:{0:{structure:s,memory:{array:St},slots:{0:{structure:a,memory:{array:ht}}}},1:{structure:s,memory:{array:gt},slots:{0:{structure:a,memory:{array:zt}}}}}}},slot:51});Object.assign(_,{...t,type:11,name:"Struct0017",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:50});const Ot=new Uint8Array([]),wt=new Uint8Array([128,248,15,0]),Rt=new Uint8Array([0,0,0,0,0,160,118,64]),qt=new Uint8Array([168,248,15,0]),At=new Uint8Array([0,0,0,0,0,160,118,64]);Object.assign(V,{...t,type:2,name:"Struct0023",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Ot},slots:{0:{structure:s,memory:{array:wt},slots:{0:{structure:a,memory:{array:Rt}}}},1:{structure:s,memory:{array:qt},slots:{0:{structure:a,memory:{array:At}}}}}}},slot:53});Object.assign(w,{...t,type:11,name:"Struct0018",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:V}],methods:[],template:null},slot:52});Object.assign(ie,{...t,type:1,name:"[29:0]u8",length:29,byteSize:30,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:56});Object.assign(ue,{...t,type:11,name:"*const [29:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:55});Object.assign(T,{...t,type:11,name:"*const *const [29:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:54});const Ut=new Uint8Array([]),jt=new Uint8Array([170,170,170,170]),m=new Uint8Array([]),Pt=new Uint8Array([170,170,170,170]),Vt=new Uint8Array([170,170,170,170]),Ct=new Uint8Array([20,251,15,0]),kt=new Uint8Array([24,34,16,0]),It=new Uint8Array([105,110,112,117,116,32,105,109,97,103,101,32,119,105,100,116,104,45,32,97,110,100,32,104,101,105,103,104,116,0]);Object.assign(oe,{...t,type:2,name:"Struct0011",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:O},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:M},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:_},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:w},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:T}],methods:[],template:{memory:{array:Ut},slots:{0:{structure:M,memory:{array:jt},slots:{0:{structure:ae,memory:{array:m},address:-1431655766}}},1:{structure:_,memory:{array:Pt},slots:{0:{structure:ne,memory:{array:m},address:-1431655766}}},2:{structure:w,memory:{array:Vt},slots:{0:{structure:V,memory:{array:m},address:-1431655766}}},3:{structure:T,memory:{array:Ct},slots:{0:{structure:ue,memory:{array:kt},slots:{0:{structure:ie,memory:{array:It},address:1057304}}}}}}}},slot:36});Object.assign($,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:35});const vt=new Uint8Array([]),xt=new Uint8Array([96,251,15,0]),Et=new Uint8Array([0,0,0,0,0,0,89,64]),Kt=new Uint8Array([0,252,15,0]),Dt=new Uint8Array([0,0,0,0,0,0,89,64]);Object.assign(me,{...t,type:2,name:"Struct0024",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:vt},slots:{0:{structure:s,memory:{array:xt},slots:{0:{structure:a,memory:{array:Et}}}},1:{structure:s,memory:{array:Kt},slots:{0:{structure:a,memory:{array:Dt}}}}}}},slot:58});Object.assign(B,{...t,type:11,name:"Struct0019",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:57});const Ft=new Uint8Array([]),Mt=new Uint8Array([96,251,15,0]),_t=new Uint8Array([0,0,0,0,0,64,127,64]),Tt=new Uint8Array([0,252,15,0]),$t=new Uint8Array([0,0,0,0,0,64,127,64]);Object.assign(le,{...t,type:2,name:"Struct0025",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Ft},slots:{0:{structure:s,memory:{array:Mt},slots:{0:{structure:a,memory:{array:_t}}}},1:{structure:s,memory:{array:Tt},slots:{0:{structure:a,memory:{array:$t}}}}}}},slot:60});Object.assign(H,{...t,type:11,name:"Struct0020",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:59});Object.assign(ye,{...t,type:1,name:"[9:0]u8",length:9,byteSize:10,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:63});Object.assign(ce,{...t,type:11,name:"*const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:62});Object.assign(L,{...t,type:11,name:"*const *const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:61});const Bt=new Uint8Array([]),Ht=new Uint8Array([170,170,170,170]),Lt=new Uint8Array([170,170,170,170]),Wt=new Uint8Array([170,170,170,170]),Gt=new Uint8Array([20,251,15,0]),Jt=new Uint8Array([14,34,16,0]),Nt=new Uint8Array([114,101,103,105,111,110,40,115,41,0]);Object.assign(be,{...t,type:2,name:"Struct0012",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:O},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:B},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:H},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:w},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:L}],methods:[],template:{memory:{array:Bt},slots:{0:{structure:B,memory:{array:Ht},slots:{0:{structure:me,memory:{array:m},address:-1431655766}}},1:{structure:H,memory:{array:Lt},slots:{0:{structure:le,memory:{array:m},address:-1431655766}}},2:{structure:w,memory:{array:Wt},slots:{0:{structure:V,memory:{array:m},address:-1431655766}}},3:{structure:L,memory:{array:Gt},slots:{0:{structure:ce,memory:{array:Jt},slots:{0:{structure:ye,memory:{array:Nt},address:1057294}}}}}}}},slot:38});Object.assign(W,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:37});Object.assign(pe,{...t,type:1,name:"[7:0]u8",length:7,byteSize:8,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:68});Object.assign(fe,{...t,type:11,name:"*const [7:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:67});Object.assign(G,{...t,type:11,name:"*const *const [7:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:66});const Qt=new Uint8Array([]),Xt=new Uint8Array([224,250,15,0]),Yt=new Uint8Array([0,0,0,0,0,0,240,63]),Zt=new Uint8Array([8,251,15,0]),es=new Uint8Array([0,0,0,0,0,0,89,64]),ts=new Uint8Array([48,251,15,0]),ss=new Uint8Array([0,0,0,0,0,0,20,64]),rs=new Uint8Array([88,251,15,0]),as=new Uint8Array([6,34,16,0]),ns=new Uint8Array([122,111,111,109,105,110,103,0]);Object.assign(de,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:d},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:G}],methods:[],template:{memory:{array:Qt},slots:{0:{structure:s,memory:{array:Xt},slots:{0:{structure:a,memory:{array:Yt}}}},1:{structure:s,memory:{array:Zt},slots:{0:{structure:a,memory:{array:es}}}},2:{structure:s,memory:{array:ts},slots:{0:{structure:a,memory:{array:ss}}}},3:{structure:G,memory:{array:rs},slots:{0:{structure:fe,memory:{array:as},slots:{0:{structure:pe,memory:{array:ns},address:1057286}}}}}}}},slot:40});Object.assign(J,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:de}],methods:[],template:null},slot:39});Object.assign(Se,{...t,type:1,name:"[11:0]u8",length:11,byteSize:12,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:71});Object.assign(he,{...t,type:11,name:"*const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Se}],methods:[],template:null},slot:70});Object.assign(N,{...t,type:11,name:"*const *const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:he}],methods:[],template:null},slot:69});const is=new Uint8Array([]),us=new Uint8Array([224,250,15,0]),os=new Uint8Array([0,0,0,0,0,0,0,0]),ms=new Uint8Array([8,251,15,0]),ls=new Uint8Array([31,133,235,81,184,30,25,64]),ys=new Uint8Array([48,251,15,0]),cs=new Uint8Array([0,0,0,0,0,0,0,0]),bs=new Uint8Array([88,251,15,0]),ps=new Uint8Array([250,33,16,0]),fs=new Uint8Array([114,111,116,97,116,105,111,110,40,115,41,0]);Object.assign(ge,{...t,type:2,name:"Struct0014",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:d},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:N}],methods:[],template:{memory:{array:is},slots:{0:{structure:s,memory:{array:us},slots:{0:{structure:a,memory:{array:os}}}},1:{structure:s,memory:{array:ms},slots:{0:{structure:a,memory:{array:ls}}}},2:{structure:s,memory:{array:ys},slots:{0:{structure:a,memory:{array:cs}}}},3:{structure:N,memory:{array:bs},slots:{0:{structure:he,memory:{array:ps},slots:{0:{structure:Se,memory:{array:fs},address:1057274}}}}}}}},slot:42});Object.assign(Q,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ge}],methods:[],template:null},slot:41});const ds=new Uint8Array([]),Ss=new Uint8Array([170,170,170,170]),hs=new Uint8Array([170,170,170,170]),gs=new Uint8Array([170,170,170,170]),zs=new Uint8Array([170,170,170,170]);Object.assign(ze,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"imageWH",structure:$},{...e,type:8,isRequired:!1,slot:1,name:"poi",structure:W},{...e,type:8,isRequired:!1,slot:2,name:"zoom",structure:J},{...e,type:8,isRequired:!1,slot:3,name:"lambda",structure:Q}],methods:[],template:{memory:{array:ds},slots:{0:{structure:$,memory:{array:Ss},slots:{0:{structure:oe,memory:{array:m},address:-1431655766}}},1:{structure:W,memory:{array:hs},slots:{0:{structure:be,memory:{array:m},address:-1431655766}}},2:{structure:J,memory:{array:gs},slots:{0:{structure:de,memory:{array:m},address:-1431655766}}},3:{structure:Q,memory:{array:zs},slots:{0:{structure:ge,memory:{array:m},address:-1431655766}}}}}},slot:12});Object.assign(X,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ze}],methods:[],template:null},slot:11});const Os=new Uint8Array([]),ws=new Uint8Array([0,252,15,0]),Rs=new Uint8Array([4,0,0,0]);Object.assign(C,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:Os},slots:{0:{structure:f,memory:{array:ws},slots:{0:{structure:p,memory:{array:Rs}}}}}}},slot:44});Object.assign(R,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:C}],methods:[],template:null},slot:43});const qs=new Uint8Array([]),As=new Uint8Array([170,170,170,170]);Object.assign(Oe,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:R}],methods:[],template:{memory:{array:qs},slots:{0:{structure:R,memory:{array:As},slots:{0:{structure:C,memory:{array:m},address:-1431655766}}}}}},slot:14});Object.assign(Y,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Oe}],methods:[],template:null},slot:13});const Us=new Uint8Array([]),js=new Uint8Array([170,170,170,170]);Object.assign(we,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:R}],methods:[],template:{memory:{array:Us},slots:{0:{structure:R,memory:{array:js},slots:{0:{structure:C,memory:{array:m},address:-1431655766}}}}}},slot:16});Object.assign(Z,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:we}],methods:[],template:null},slot:15});const Ps=new Uint8Array([]),Vs=new Uint8Array([]),Cs=new Uint8Array([12,253,15,0]),ks=new Uint8Array([100,37,16,0]),Be=new Uint8Array([99,97,115,115,105,110,105,32,112,97,116,116,101,114,110,0]),Is=new Uint8Array([68,253,15,0]),vs=new Uint8Array([83,37,16,0]),xs=new Uint8Array([102,114,97,110,107,32,114,101,105,116,98,101,114,103,101,114,0]),Es=new Uint8Array([100,253,15,0]),Ks=new Uint8Array([1,0,0,0]),Ds=new Uint8Array([156,253,15,0]),Fs=new Uint8Array([100,37,16,0]),Ms=new Uint8Array([170,170,170,170]),_s=new Uint8Array([170,170,170,170]),Ts=new Uint8Array([170,170,170,170]);Object.assign(ke,{...t,type:2,name:"cassini.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Ps}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:z},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:F},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:f},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:z},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:X},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:Y},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:Z}],methods:[],template:{memory:{array:Vs},slots:{0:{structure:z,memory:{array:Cs},slots:{0:{structure:j,memory:{array:ks},slots:{0:{structure:U,memory:{array:Be},address:1058148}}}}},1:{structure:F,memory:{array:Is},slots:{0:{structure:re,memory:{array:vs},slots:{0:{structure:se,memory:{array:xs},address:1058131}}}}},2:{structure:f,memory:{array:Es},slots:{0:{structure:p,memory:{array:Ks}}}},3:{structure:z,memory:{array:Ds},slots:{0:{structure:j,memory:{array:Fs},slots:{0:{structure:U,memory:{array:Be},address:1058148}}}}},4:{structure:X,memory:{array:Ms},slots:{0:{structure:ze,memory:{array:m},address:-1431655766}}},5:{structure:Y,memory:{array:_s},slots:{0:{structure:Oe,memory:{array:m},address:-1431655766}}},6:{structure:Z,memory:{array:Ts},slots:{0:{structure:we,memory:{array:m},address:-1431655766}}}}}},slot:1});Object.assign(q,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:21});Object.assign(Re,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:20});Object.assign(qe,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Re}],methods:[],template:null},slot:19});Object.assign(y,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:22});const $s=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(Ae,{...t,type:9,name:"cassini.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:p},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:p}],methods:[],template:{memory:{array:$s}}},slot:23});Object.assign(P,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:P}],methods:[],template:null},slot:24});Object.assign(Ue,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:d}],methods:[],template:null},slot:45});const Bs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Hs=new Uint8Array([]),Ls=new Uint8Array([168,251,15,0]),Ws=new Uint8Array([4,0,0,0]);Object.assign(ee,{...t,type:2,name:"cassini.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:qe},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Ae},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:{memory:{array:Bs}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:q},{...e,type:7,isRequired:!1,name:"FPixel",structure:Ue},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:Hs},slots:{0:{structure:f,memory:{array:Ls},slots:{0:{structure:p,memory:{array:Ws}}}}}}},slot:18});const Gs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Js=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ns=new Uint8Array([0,0,0,0,0,0,0,0]),Me=new Uint8Array([]);Object.assign(k,{...t,type:2,name:"cassini.KernelInput(u8,cassini.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:ee}],methods:[],template:{memory:{array:Gs},slots:{0:{structure:ee,memory:{array:Js},slots:{0:{structure:qe,memory:{array:Ns},slots:{0:{structure:Re,memory:{array:Me}}}}}}}}},slot:17});Object.assign(je,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:20});Object.assign(Pe,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:je}],methods:[],template:null},slot:27});const Qs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Xs=new Uint8Array([]),Ys=new Uint8Array([168,251,15,0]),Zs=new Uint8Array([4,0,0,0]);Object.assign(te,{...t,type:2,name:"cassini.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Pe},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Ae},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:{memory:{array:Qs}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:q},{...e,type:7,isRequired:!1,name:"FPixel",structure:Ue},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:Xs},slots:{0:{structure:f,memory:{array:Ys},slots:{0:{structure:p,memory:{array:Zs}}}}}}},slot:26});const er=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),tr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),sr=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(I,{...t,type:2,name:"cassini.KernelOutput(u8,cassini.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:te}],methods:[],template:{memory:{array:er},slots:{0:{structure:te,memory:{array:tr},slots:{0:{structure:Pe,memory:{array:sr},slots:{0:{structure:je,memory:{array:Me}}}}}}}}},slot:25});const rr=new Uint8Array([0,0,181,67,0,0,181,67,0,0,181,67,0,0,181,67,0,0,160,64,0,0,0,0]);Object.assign(v,{...t,type:2,name:"cassini.KernelParameters(cassini.kernel)",length:1,byteSize:24,align:3,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"imageWH",structure:O},{...e,type:6,isRequired:!1,bitOffset:64,bitSize:64,byteSize:8,slot:1,name:"poi",structure:O},{...e,type:4,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:2,name:"zoom",structure:d},{...e,type:4,isRequired:!1,bitOffset:160,bitSize:32,byteSize:4,slot:3,name:"lambda",structure:d}],methods:[],template:{memory:{array:rr}}},slot:28});Object.assign(Ie,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(cassini.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:46});Object.assign(ve,{...t,type:7,name:"ErrorSet0000!cassini.KernelOutput(u8,cassini.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:I},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Ie}],methods:[],template:null},slot:33});Object.assign(xe,{...t,type:3,name:"createOutput",length:1,byteSize:88,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:192,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:224,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:6,bitOffset:256,bitSize:192,byteSize:24,slot:2,name:"2",structure:k},{...e,type:6,bitOffset:0,bitSize:192,byteSize:24,slot:3,name:"3",structure:v},{...e,type:6,bitOffset:448,bitSize:224,byteSize:28,slot:4,name:"retval",structure:ve}],methods:[],template:null},slot:31});Object.assign(Ee,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(cassini.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:47});Object.assign(Ke,{...t,type:7,name:"ErrorSet0001!cassini.KernelOutput(u8,cassini.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:I},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Ee}],methods:[],template:null},slot:34});Object.assign(De,{...t,type:3,name:"createPartialOutput",length:1,byteSize:96,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:192,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:224,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:2,name:"2",structure:y},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:3,name:"3",structure:y},{...e,type:6,bitOffset:320,bitSize:192,byteSize:24,slot:4,name:"4",structure:k},{...e,type:6,bitOffset:0,bitSize:192,byteSize:24,slot:5,name:"5",structure:v},{...e,type:6,bitOffset:512,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Ke}],methods:[],template:null},slot:32});const ar={argStruct:xe,thunk:3,name:"createOutput"},nr={argStruct:De,thunk:7,name:"createPartialOutput"};Object.assign(Fe,{...t,type:2,name:"cassini",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Me}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:ke},{...e,type:7,isRequired:!1,name:"Input",structure:k},{...e,type:7,isRequired:!1,name:"Output",structure:I},{...e,type:7,isRequired:!1,name:"Parameters",structure:v}],methods:[ar,nr],template:null},slot:0});const ir=[b,U,j,z,se,re,F,p,f,d,O,a,s,ae,M,ne,_,V,w,ie,ue,T,oe,$,me,B,le,H,ye,ce,L,be,W,pe,fe,G,de,J,Se,he,N,ge,Q,ze,X,C,R,Oe,Y,we,Z,ke,q,Re,qe,y,Ae,P,Ue,ee,k,je,Pe,te,I,v,Ie,ve,xe,Ee,Ke,De,Fe],ur=mt(ir),or=Fe.constructor,mr=(async()=>{const u=new URL("cassini-e321904e.wasm",import.meta.url).href;return fetch(u)})();lt(mr,{...ur,writeBack:!0});const{createOutput:Sr,createPartialOutput:lr,kernel:Ce,Input:yr,Output:hr,Parameters:gr}=or;function cr(u,l,n,r,i={},h={}){if(Array.isArray(i)){const S=i;i={};for(const[c,g]of Object.keys(Ce.inputImages).entries())i[g]=S[c]}const x=new yr(void 0),E=Object.keys(Ce.inputImages),o=[];let A;for(const S of E){let c=i[S];if(c||(E.length===1&&["data","width","height"].every(g=>!!i[g])?c=i:o.push(S)),x[S]=c,A){if(c.colorSpace!==A)throw new Error(`Input images must all use the same color space: ${A}`)}else A=c.colorSpace}if(o.length>0)throw new Error(`Missing input image${o.length>1?"s":""}: ${o.join(", ")}`);const Ve=lr(u,l,n,r,x,h),_e=S=>{const c=Object.keys(S),g={};for(const Te of c){const{data:{typedArray:K},width:$e,height:Le}=S[Te];let D;if(typeof ImageData=="function"){const We=new Uint8ClampedArray(K.buffer,K.byteOffset,K.byteLength);D=new ImageData(We,$e,r,{colorSpace:A})}else D={data:K,width:$e,height:Le};if(c.length===1)return D;g[Te]=D}return g};return Ve[Symbol.toStringTag]==="Promise"?Ve.then(_e):_e(Ve)}function br(){const u={};for(let[l,n]of Object.entries(Ce)){if(l==="parameters"){const r={};for(const[i,h]of Object.entries(n)){const x=r[i]={};for(let[E,o]of Object.entries(h))typeof o=="object"?"string"in o?o=o.string:o=He(o):typeof o=="function"&&(o=pr(o.name)),x[E]=o}n=r}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());u[l]=n}return u}function He(u){const l=[];for(let[n,r]of Object.entries(u))typeof r=="object"&&(r=He(r)),l[n]=r;return l}function pr(u){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[u]}onmessage=u=>{const[l,n,...r]=u.data;fr(l,r).then(([i,h])=>{postMessage([l,n,i],{transfer:h})}).catch(i=>{postMessage(["error",n,i])})};async function fr(u,l){switch(u){case"getKernelInfo":return[br(...l)];case"createPartialImageData":const r=await cr(...l),i=[];if("data"in r&&"width"in r&&"height"in r)i.push(r.data.buffer);else for(const h of Object.entries(r))i.push(r.data.buffer);return[r,i];default:throw new Error(`Unknown function: ${u}`)}}
