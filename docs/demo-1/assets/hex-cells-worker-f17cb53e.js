import{u as ls,a as gs,b as ps,c as Os,d as fs,e as Ss,f as zs,g as js,h as hs,i as ds,j as ws,k as As,l as Us,m as Ps,n as xs,o as Vs,p as Rs,q as ks}from"./index-270629a1.js";ls();As();Us();gs();ps();Ps();xs();Vs();Rs();Os();fs();Ss();zs();ks();js();hs();ds();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},O={},D={},T={},M={},F={},l={},f={},_={},$={},r={},L={},B={},S={},u={},G={},H={},J={},N={},Q={},W={},X={},Y={},Z={},A={},tt={},et={},mt={},V={},st={},R={},c={},p={},x={},yt={},rt={},k={},nt={},q={},at={},I={},v={},d={},bt={},lt={},w={},gt={},pt={},Ot={},Gt={},ft={},Ht={},St={},Jt={},zt={},Nt={},jt={},Qt={},ht={},Wt={},Xt={},dt={},Yt={},wt={},Zt={},te={},At={},ee={},Ut={},se={},re={},Pt={},ne={},xt={},ae={},ie={},Vt={},oe={},Rt={},kt={},qt={},It={},ce={},ue={},vt={},Et={},me={},it={},ye={},be={},Ct={},le={},Kt={},ge={},pe={},Oe={},fe={},Se={},ze={},je={},he={},de={},we={},Ae={},Ue={},Pe={},xe={},Ve={},Re={},ke={},Dt={},qe={},Ie={},Tt={},ve={},Mt={},Ee={},Ce={},Ke={},De={},Te={},Me={},Fe={},Ft={},_e={},$e={},Le={},Be={},Ge={},He={},Je={},Ne={},Qe={},We={},Xe={},Ye={},Ze={},ts={},es={},ss={},rs={},ns={},as={},is={},os={},cs={},qs=new Uint8Array,Is=new Uint8Array,vs=new Uint8Array([0,0,0,0,0,0,240,63]),Es=new Uint8Array,Cs=new Uint8Array([0,0,0,0,0,0,105,64]),Ks=new Uint8Array,Ds=new Uint8Array([0,0,0,0,0,0,73,64]),Ts=new Uint8Array([228,6,0,1]),Ms=new Uint8Array([72,101,120,97,103,111,110,32,83,105,122,101,0]),Fs=new Uint8Array,_s=new Uint8Array([0,0,0,0,0,0,105,192]),$s=new Uint8Array,Ls=new Uint8Array([0,0,0,0,0,0,105,192]),Bs=new Uint8Array,Gs=new Uint8Array([0,0,0,0,0,0,137,64]),Hs=new Uint8Array,Js=new Uint8Array([0,0,0,0,0,64,127,64]),Ns=new Uint8Array,Qs=new Uint8Array([0,0,0,0,0,0,121,64]),Ws=new Uint8Array,Xs=new Uint8Array([0,0,0,0,0,64,111,64]),Ys=new Uint8Array,Zs=new Uint8Array,tr=new Uint8Array,er=new Uint8Array,sr=new Uint8Array([248,6,0,1]),rr=new Uint8Array([98,97,115,101,32,112,111,105,110,116,0]),nr=new Uint8Array,ar=new Uint8Array,ir=new Uint8Array,or=new Uint8Array([4]),cr=new Uint8Array,ur=new Uint8Array,mr=new Uint8Array([250,4,0,1]),yr=new Uint8Array([72,101,120,32,99,101,108,108,115,32,239,191,189,32,110,111,116,32,106,117,115,116,32,112,105,120,101,108,115,0]),br=new Uint8Array([35,5,0,1]),lr=new Uint8Array([80,101,116,114,105,32,76,101,115,107,105,110,101,110,0]),gr=new Uint8Array,pr=new Uint8Array([1]),Or=new Uint8Array([67,5,0,1]),fr=new Uint8Array([72,101,120,97,103,111,110,97,108,32,84,105,108,105,110,103,0]),Sr=new Uint8Array,zr=new Uint8Array,jr=new Uint8Array,hr=new Uint8Array([0]),dr=new Uint8Array([1]),us=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),wr=new Uint8Array,Ar=new Uint8Array,Ur=new Uint8Array,Pr=new Uint8Array,xr=new Uint8Array([4]),_t=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ms=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Vr=new Uint8Array,Rr=new Uint8Array,kr=new Uint8Array,qr=new Uint8Array,Ir=new Uint8Array([4]),$t=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),vr=new Uint8Array([0,0,200,67,0,0,122,67,0,0,72,66,0,0,0,0]),Er=new Uint8Array([27,0]),Cr=new Uint8Array([27,0]),Kr=new Uint8Array,Dr=new Uint8Array,Tr=new Uint8Array,Mr=new Uint8Array;Object.assign(Gt,{slots:{0:ft,1:St,2:zt,3:jt,4:ht}});Object.assign(ft,{structure:s,memory:{array:qs},const:!0,slots:{0:Ht}});Object.assign(Ht,{structure:S});Object.assign(St,{structure:r,memory:{array:Is},const:!0,slots:{0:Jt}});Object.assign(Jt,{structure:u,memory:{array:vs},const:!0});Object.assign(zt,{structure:r,memory:{array:Es},const:!0,slots:{0:Nt}});Object.assign(Nt,{structure:u,memory:{array:Cs},const:!0});Object.assign(jt,{structure:r,memory:{array:Ks},const:!0,slots:{0:Qt}});Object.assign(Qt,{structure:u,memory:{array:Ds},const:!0});Object.assign(ht,{structure:B,memory:{array:Ts},const:!0,slots:{0:Wt}});Object.assign(Wt,{structure:L,memory:{array:Ms},reloc:16778980});Object.assign(Xt,{slots:{0:dt,1:wt}});Object.assign(dt,{structure:r,memory:{array:Fs},const:!0,slots:{0:Yt}});Object.assign(Yt,{structure:u,memory:{array:_s},const:!0});Object.assign(wt,{structure:r,memory:{array:$s},const:!0,slots:{0:Zt}});Object.assign(Zt,{structure:u,memory:{array:Ls},const:!0});Object.assign(te,{slots:{0:At,1:Ut}});Object.assign(At,{structure:r,memory:{array:Bs},const:!0,slots:{0:ee}});Object.assign(ee,{structure:u,memory:{array:Gs},const:!0});Object.assign(Ut,{structure:r,memory:{array:Hs},const:!0,slots:{0:se}});Object.assign(se,{structure:u,memory:{array:Js},const:!0});Object.assign(re,{slots:{0:Pt,1:xt}});Object.assign(Pt,{structure:r,memory:{array:Ns},const:!0,slots:{0:ne}});Object.assign(ne,{structure:u,memory:{array:Qs},const:!0});Object.assign(xt,{structure:r,memory:{array:Ws},const:!0,slots:{0:ae}});Object.assign(ae,{structure:u,memory:{array:Xs},const:!0});Object.assign(ie,{slots:{0:Vt,1:Rt,2:kt,3:qt,4:It}});Object.assign(Vt,{structure:s,memory:{array:Ys},const:!0,slots:{0:oe}});Object.assign(oe,{structure:X});Object.assign(Rt,{structure:H,memory:{array:Zs},const:!0,slots:{0:dt,1:wt}});Object.assign(kt,{structure:J,memory:{array:tr},const:!0,slots:{0:At,1:Ut}});Object.assign(qt,{structure:N,memory:{array:er},const:!0,slots:{0:Pt,1:xt}});Object.assign(It,{structure:W,memory:{array:sr},const:!0,slots:{0:ce}});Object.assign(ce,{structure:Q,memory:{array:rr},reloc:16779e3});Object.assign(ue,{slots:{0:vt,1:Et}});Object.assign(vt,{structure:G,memory:{array:nr},const:!0,slots:{0:ft,1:St,2:zt,3:jt,4:ht}});Object.assign(Et,{structure:Y,memory:{array:ar},const:!0,slots:{0:Vt,1:Rt,2:kt,3:qt,4:It}});Object.assign(me,{slots:{0:it}});Object.assign(it,{structure:l,memory:{array:ir},const:!0,slots:{0:ye}});Object.assign(ye,{structure:f,memory:{array:or},const:!0});Object.assign(be,{slots:{0:Ct}});Object.assign(Ct,{structure:A,memory:{array:cr},const:!0,slots:{0:it}});Object.assign(le,{slots:{0:Kt}});Object.assign(Kt,{structure:A,memory:{array:ur},const:!0,slots:{0:it}});Object.assign(ge,{slots:{0:pe,1:fe,2:ze,3:he,4:we,5:Ae,6:Ue}});Object.assign(pe,{structure:T,memory:{array:mr},const:!0,slots:{0:Oe}});Object.assign(Oe,{structure:D,memory:{array:yr},reloc:16778490});Object.assign(fe,{structure:F,memory:{array:br},const:!0,slots:{0:Se}});Object.assign(Se,{structure:M,memory:{array:lr},reloc:16778531});Object.assign(ze,{structure:l,memory:{array:gr},const:!0,slots:{0:je}});Object.assign(je,{structure:f,memory:{array:pr},const:!0});Object.assign(he,{structure:$,memory:{array:Or},const:!0,slots:{0:de}});Object.assign(de,{structure:_,memory:{array:fr},reloc:16778563});Object.assign(we,{structure:Z,memory:{array:Sr},const:!0,slots:{0:vt,1:Et}});Object.assign(Ae,{structure:tt,memory:{array:zr},const:!0,slots:{0:Ct}});Object.assign(Ue,{structure:et,memory:{array:jr},const:!0,slots:{0:Kt}});Object.assign(Pe,{slots:{0:xe,1:Ve}});Object.assign(xe,{structure:p,memory:{array:hr},const:!0});Object.assign(Ve,{structure:p,memory:{array:dr},const:!0});Object.assign(Re,{memory:{array:us},slots:{0:ke}});Object.assign(ke,{structure:R,memory:{array:us,offset:0,length:8},slots:{0:Dt}});Object.assign(Dt,{structure:st,memory:{array:wr},reloc:0});Object.assign(qe,{slots:{0:Ie,1:ve,2:Ee}});Object.assign(Ie,{structure:s,memory:{array:Ar},const:!0,slots:{0:Tt}});Object.assign(Tt,{structure:V});Object.assign(ve,{structure:s,memory:{array:Ur},const:!0,slots:{0:Mt}});Object.assign(Mt,{structure:yt});Object.assign(Ee,{structure:l,memory:{array:Pr},const:!0,slots:{0:Ce}});Object.assign(Ce,{structure:f,memory:{array:xr},const:!0});Object.assign(Ke,{memory:{array:_t},slots:{0:De}});Object.assign(De,{structure:rt,memory:{array:_t},slots:{0:Te}});Object.assign(Te,{structure:R,memory:{array:_t,offset:0,length:8},slots:{0:Dt}});Object.assign(Me,{memory:{array:ms},slots:{0:Fe}});Object.assign(Fe,{structure:q,memory:{array:ms,offset:0,length:8},slots:{0:Ft}});Object.assign(Ft,{structure:nt,memory:{array:Vr},reloc:0});Object.assign(_e,{slots:{0:$e,1:Le,2:Be}});Object.assign($e,{structure:s,memory:{array:Rr},const:!0,slots:{0:Tt}});Object.assign(Le,{structure:s,memory:{array:kr},const:!0,slots:{0:Mt}});Object.assign(Be,{structure:l,memory:{array:qr},const:!0,slots:{0:Ge}});Object.assign(Ge,{structure:f,memory:{array:Ir},const:!0});Object.assign(He,{memory:{array:$t},slots:{0:Je}});Object.assign(Je,{structure:at,memory:{array:$t},slots:{0:Ne}});Object.assign(Ne,{structure:q,memory:{array:$t,offset:0,length:8},slots:{0:Ft}});Object.assign(Qe,{memory:{array:vr}});Object.assign(We,{slots:{0:Xe}});Object.assign(Xe,{structure:d,memory:{array:Er},const:!0});Object.assign(Ye,{slots:{0:Ze}});Object.assign(Ze,{structure:w,memory:{array:Cr},const:!0});Object.assign(ts,{slots:{0:es,1:rs,2:as,3:os}});Object.assign(es,{structure:s,memory:{array:Kr},const:!0,slots:{0:ss}});Object.assign(ss,{structure:mt});Object.assign(rs,{structure:s,memory:{array:Dr},const:!0,slots:{0:ns}});Object.assign(ns,{structure:k});Object.assign(as,{structure:s,memory:{array:Tr},const:!0,slots:{0:is}});Object.assign(is,{structure:I});Object.assign(os,{structure:s,memory:{array:Mr},const:!0,slots:{0:cs}});Object.assign(cs,{structure:v});const Fr={argStruct:lt,thunkId:2,name:"createOutput"},_r={argStruct:pt,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(O,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(D,{...e,type:1,name:"[29:0]u8",length:29,byteSize:30,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(T,{...e,type:13,name:"*const [29:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:D}],methods:[]}});Object.assign(M,{...e,type:1,name:"[14:0]u8",length:14,byteSize:15,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(F,{...e,type:13,name:"*const [14:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(l,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:l}],methods:[]}});Object.assign(f,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(_,{...e,type:1,name:"[16:0]u8",length:16,byteSize:17,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign($,{...e,type:13,name:"*const [16:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[]}});Object.assign(r,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(L,{...e,type:1,name:"[12:0]u8",length:12,byteSize:13,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(B,{...e,type:13,name:"*const [12:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[]}});Object.assign(S,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(u,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:u}],methods:[]}});Object.assign(G,{...e,type:2,name:"Struct992839402",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:r},{...t,type:7,slot:2,name:"maxValue",structure:r},{...t,type:7,slot:3,name:"defaultValue",structure:r},{...t,type:7,slot:4,name:"description",structure:B}],methods:[],template:Gt}});Object.assign(H,{...e,type:2,name:"Struct761432325",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:r},{...t,type:7,slot:1,name:"1",structure:r}],methods:[],template:Xt}});Object.assign(J,{...e,type:2,name:"Struct4139784567",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:r},{...t,type:7,slot:1,name:"1",structure:r}],methods:[],template:te}});Object.assign(N,{...e,type:2,name:"Struct517141147",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:r},{...t,type:7,slot:1,name:"1",structure:r}],methods:[],template:re}});Object.assign(Q,{...e,type:1,name:"[10:0]u8",length:10,byteSize:11,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(W,{...e,type:13,name:"*const [10:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[]}});Object.assign(X,{...e,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(Y,{...e,type:2,name:"Struct2512182532",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:H},{...t,type:7,slot:2,name:"maxValue",structure:J},{...t,type:7,slot:3,name:"defaultValue",structure:N},{...t,type:7,slot:4,name:"description",structure:W}],methods:[],template:ie}});Object.assign(Z,{...e,type:2,name:"Struct1489984691",align:1,instance:{members:[{...t,type:7,slot:0,name:"size",structure:G},{...t,type:7,slot:1,name:"base",structure:Y}],methods:[],template:ue}});Object.assign(A,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:l}],methods:[],template:me}});Object.assign(tt,{...e,type:2,name:"Struct80678618",align:1,instance:{members:[{...t,type:7,slot:0,name:"img",structure:A}],methods:[],template:be}});Object.assign(et,{...e,type:2,name:"Struct199712073",align:1,instance:{members:[{...t,type:7,slot:0,name:"pxl",structure:A}],methods:[],template:le}});Object.assign(mt,{...e,type:2,name:"hex-cells.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:T},{...t,type:7,slot:1,name:"vendor",structure:F},{...t,type:7,slot:2,name:"version",structure:l},{...t,type:7,slot:3,name:"description",structure:$},{...t,type:7,slot:4,name:"parameters",structure:Z},{...t,type:7,slot:5,name:"inputImages",structure:tt},{...t,type:7,slot:6,name:"outputImages",structure:et}],methods:[],template:ge}});Object.assign(V,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(st,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(R,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:st}],methods:[]}});Object.assign(c,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[]}});Object.assign(p,{...e,type:11,name:"hex-cells.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:p}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:p},{...t,type:7,slot:1,name:"display-p3",structure:p}],methods:[],template:Pe}});Object.assign(x,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:x}],methods:[]}});Object.assign(yt,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:S}],methods:[]}});Object.assign(rt,{...e,type:2,name:"hex-cells.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:R},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:x}],methods:[],template:Re},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:l}],methods:[],template:qe}});Object.assign(k,{...e,type:2,name:"hex-cells.KernelInput(u8,hex-cells.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"img",structure:rt}],methods:[],template:Ke}});Object.assign(nt,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(q,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:nt}],methods:[]}});Object.assign(at,{...e,type:2,name:"hex-cells.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:q},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:x}],methods:[],template:Me},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:l}],methods:[],template:_e}});Object.assign(I,{...e,type:2,name:"hex-cells.KernelOutput(u8,hex-cells.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"pxl",structure:at}],methods:[],template:He}});Object.assign(v,{...e,type:2,name:"hex-cells.KernelParameters(hex-cells.kernel)",byteSize:16,align:8,instance:{members:[{...t,type:4,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"size",structure:S},{...t,type:5,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"base",structure:X}],methods:[],template:Qe}});Object.assign(d,{...e,type:10,name:"ErrorSet2387374520",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:d}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:d}],methods:[],template:We}});Object.assign(bt,{...e,type:9,name:"ErrorSet2387374520!hex-cells.KernelOutput(u8,hex-cells.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:I},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:d}],methods:[]}});Object.assign(lt,{...e,type:5,name:"createOutput",byteSize:80,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"0",structure:c},{...t,type:3,isRequired:!0,bitOffset:160,bitSize:32,byteSize:4,slot:4,name:"1",structure:c},{...t,type:5,isRequired:!0,bitOffset:192,bitSize:192,byteSize:24,slot:0,name:"2",structure:k},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:128,byteSize:16,slot:1,name:"3",structure:v},{...t,type:5,isRequired:!0,bitOffset:384,bitSize:224,byteSize:28,slot:2,name:"retval",structure:bt}],methods:[]}});Object.assign(w,{...e,type:10,name:"ErrorSet4096678769",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:w}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:w}],methods:[],template:Ye}});Object.assign(gt,{...e,type:9,name:"ErrorSet4096678769!hex-cells.KernelOutput(u8,hex-cells.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:I},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:w}],methods:[]}});Object.assign(pt,{...e,type:5,name:"createPartialOutput",byteSize:88,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"0",structure:c},{...t,type:3,isRequired:!0,bitOffset:160,bitSize:32,byteSize:4,slot:4,name:"1",structure:c},{...t,type:3,isRequired:!0,bitOffset:192,bitSize:32,byteSize:4,slot:5,name:"2",structure:c},{...t,type:3,isRequired:!0,bitOffset:224,bitSize:32,byteSize:4,slot:6,name:"3",structure:c},{...t,type:5,isRequired:!0,bitOffset:256,bitSize:192,byteSize:24,slot:0,name:"4",structure:k},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:128,byteSize:16,slot:1,name:"5",structure:v},{...t,type:5,isRequired:!0,bitOffset:448,bitSize:224,byteSize:28,slot:2,name:"retval",structure:gt}],methods:[]}});Object.assign(Ot,{...e,type:2,name:"hex-cells",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:s},{...t,type:7,slot:1,name:"Input",structure:s},{...t,type:7,slot:2,name:"Output",structure:s},{...t,type:7,slot:3,name:"Parameters",structure:s}],methods:[Fr,_r],template:ts}});const $r=[s,O,D,T,M,F,l,f,_,$,r,L,B,S,u,G,H,J,N,Q,W,X,Y,Z,A,tt,et,mt,V,st,R,c,p,x,yt,rt,k,nt,q,at,I,v,d,bt,lt,w,gt,pt,Ot],Lr=Ot,Br={runtimeSafety:!1,littleEndian:!0},ot=ws();ot.getSpecialExports();ot.recreateStructures($r,Br);const Gr=(async()=>{const i=new URL("hex-cells-9193bc68.wasm",import.meta.url).href;return fetch(i)})();ot.loadModule(Gr);ot.linkVariables(!0);const{constructor:Hr}=Lr,{createPartialOutput:Jr,Input:Nr,kernel:ut}=Hr;function Qr(i,m,o,a,n={},z={}){const j=[];for(const[b]of ut.inputImages)j.push(b);const U=[];for(const[b]of ut.outputImages)U.push(b);if(Array.isArray(n)){const b=n;n={};for(const[g,h]of j.entries())n[h]=b[g]}const y=new Nr(void 0),E=[];let P;for(const b of j){let g=n[b];if(g||(j.length===1&&["data","width","height"].every(h=>!!n[h])?g=n:E.push(b)),y[b]=g,P){if(g.colorSpace!==P)throw new Error(`Input images must all use the same color space: ${P}`)}else P=g.colorSpace}if(E.length>0)throw new Error(`Missing input image${E.length>1?"s":""}: ${E.join(", ")}`);const ct=Jr(i,m,o,a,y,z),Lt=b=>{const g={};for(const h of U){const{data:{typedArray:C},width:Bt,height:ys}=b[h];let K;if(typeof ImageData=="function"){const bs=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);K=new ImageData(bs,Bt,a,{colorSpace:P})}else K={data:C,width:Bt,height:ys};if(U.length===1)return K;g[h]=K}return g};return ct[Symbol.toStringTag]==="Promise"?ct.then(Lt):Lt(ct)}function Wr(){const i={};for(let[m,o]of ut){if(m==="parameters"){const a={};for(const[n,z]of o){const j=a[n]={};for(let[U,y]of z)typeof y=="object"?y=y.string??y.valueOf():typeof y=="function"&&(y=Xr(y.name)),j[U]=y}o=a}else typeof o=="object"&&(o=o.string??o.valueOf());i[m]=o}return i}function Xr(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[m,o,...a]=i.data;Yr(m,a).then(([n,z])=>{postMessage([m,o,n],{transfer:z})}).catch(n=>{postMessage(["error",o,n])})};async function Yr(i,m){switch(i){case"getKernelInfo":return[Wr(...m)];case"createPartialImageData":const a=await Qr(...m),n=[];if("data"in a&&"width"in a&&"height"in a)n.push(a.data.buffer);else for(const z of Object.entries(a))n.push(a.data.buffer);return[a,n];default:throw new Error(`Unknown function: ${i}`)}}
