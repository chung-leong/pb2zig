import{u as Xe,a as Ye,b as Ze,d as et,c as tt,e as st,f as rt,g as at,h as nt,i as it,j as ut,k as ot,l as lt,m as mt,o as yt,n as ct,p as bt,q as pt}from"./index-d64bc850.js";Xe();Ye();Ze();et();tt();st();rt();at();nt();it();ut();ot();lt();mt();yt();ct();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},y={},ae={},ne={},F={},ie={},ue={},M={},p={},f={},oe={},le={},_={},U={},b={},l={},s={},g={},h={},me={},ye={},T={},ce={},$={},P={},C={},w={},be={},B={},pe={},fe={},L={},he={},G={},de={},H={},S={},Se={},J={},ge={},ze={},N={},Oe={},Q={},we={},W={},Re={},qe={},X={},Ae={},Y={},Ue={},Z={},V={},R={},je={},ee={},Pe={},te={},Ke={},q={},Ce={},Ve={},m={},ke={},j={},se={},k={},Ie={},ve={},re={},I={},v={},De={},Fe={},Me={},_e={},Te={},$e={},Be={};Object.assign(y,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:y}],methods:[],template:null},slot:5});Object.assign(ae,{...t,type:1,name:"[22:0]u8",length:22,byteSize:23,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:y}],methods:[],template:null},slot:4});Object.assign(ne,{...t,type:11,name:"*const [22:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:3});Object.assign(F,{...t,type:11,name:"*const *const [22:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:2});Object.assign(ie,{...t,type:1,name:"[7:0]u8",length:7,byteSize:8,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:y}],methods:[],template:null},slot:8});Object.assign(ue,{...t,type:11,name:"*const [7:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:7});Object.assign(M,{...t,type:11,name:"*const *const [7:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:6});Object.assign(p,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[],template:null},slot:10});Object.assign(f,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:p}],methods:[],template:null},slot:9});Object.assign(oe,{...t,type:1,name:"[112:0]u8",length:112,byteSize:113,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:y}],methods:[],template:null},slot:13});Object.assign(le,{...t,type:11,name:"*const [112:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:12});Object.assign(_,{...t,type:11,name:"*const *const [112:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:11});Object.assign(U,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:U}],methods:[],template:null},slot:52});Object.assign(b,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:U}],methods:[],template:null},slot:32});Object.assign(l,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:l}],methods:[],template:null},slot:77});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:l}],methods:[],template:null},slot:76});const ft=new Uint8Array,ht=new Uint8Array([48,248,15,0]),dt=new Uint8Array([0,0,0,0,0,0,0,0]),St=new Uint8Array([88,248,15,0]),gt=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(g,{...t,type:2,name:"Struct0023",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:ft},slots:{0:{structure:s,memory:{array:ht},slots:{0:{structure:l,memory:{array:dt}}}},1:{structure:s,memory:{array:St},slots:{0:{structure:l,memory:{array:gt}}}}}}},slot:56});Object.assign(h,{...t,type:11,name:"Struct0020",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:g}],methods:[],template:null},slot:55});Object.assign(me,{...t,type:1,name:"[16:0]u8",length:16,byteSize:17,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:y}],methods:[],template:null},slot:59});Object.assign(ye,{...t,type:11,name:"*const [16:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:58});Object.assign(T,{...t,type:11,name:"*const *const [16:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:57});const zt=new Uint8Array,Ot=new Uint8Array([170,170,170,170]),wt=new Uint8Array,Rt=new Uint8Array([64,251,15,0]),qt=new Uint8Array([131,34,16,0]),At=new Uint8Array([70,111,114,32,114,101,100,32,99,104,97,110,110,101,108,46,0]);Object.assign(ce,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:b},{...e,type:8,isRequired:!1,slot:0,name:"defaultValue",structure:h},{...e,type:8,isRequired:!1,slot:1,name:"description",structure:T}],methods:[],template:{memory:{array:zt},slots:{0:{structure:h,memory:{array:Ot},slots:{0:{structure:g,memory:{array:wt}}}},1:{structure:T,memory:{array:Rt},slots:{0:{structure:ye,memory:{array:qt},slots:{0:{structure:me,memory:{array:At}}}}}}}}},slot:39});Object.assign($,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:38});Object.assign(P,{...t,type:1,name:"[18:0]u8",length:18,byteSize:19,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:y}],methods:[],template:null},slot:62});Object.assign(C,{...t,type:11,name:"*const [18:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:P}],methods:[],template:null},slot:61});Object.assign(w,{...t,type:11,name:"*const *const [18:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:C}],methods:[],template:null},slot:60});const Ut=new Uint8Array,jt=new Uint8Array([170,170,170,170]),Pt=new Uint8Array,Ct=new Uint8Array([152,251,15,0]),Vt=new Uint8Array([112,34,16,0]),kt=new Uint8Array([70,111,114,32,103,114,101,101,110,32,99,104,97,110,110,101,108,46,0]);Object.assign(be,{...t,type:2,name:"Struct0014",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:b},{...e,type:8,isRequired:!1,slot:0,name:"defaultValue",structure:h},{...e,type:8,isRequired:!1,slot:1,name:"description",structure:w}],methods:[],template:{memory:{array:Ut},slots:{0:{structure:h,memory:{array:jt},slots:{0:{structure:g,memory:{array:Pt}}}},1:{structure:w,memory:{array:Ct},slots:{0:{structure:C,memory:{array:Vt},slots:{0:{structure:P,memory:{array:kt}}}}}}}}},slot:41});Object.assign(B,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:40});Object.assign(pe,{...t,type:1,name:"[17:0]u8",length:17,byteSize:18,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:y}],methods:[],template:null},slot:65});Object.assign(fe,{...t,type:11,name:"*const [17:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:64});Object.assign(L,{...t,type:11,name:"*const *const [17:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:63});const It=new Uint8Array,vt=new Uint8Array([170,170,170,170]),Et=new Uint8Array,xt=new Uint8Array([64,251,15,0]),Kt=new Uint8Array([94,34,16,0]),Dt=new Uint8Array([70,111,114,32,98,108,117,101,32,99,104,97,110,110,101,108,46,0]);Object.assign(he,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:b},{...e,type:8,isRequired:!1,slot:0,name:"defaultValue",structure:h},{...e,type:8,isRequired:!1,slot:1,name:"description",structure:L}],methods:[],template:{memory:{array:It},slots:{0:{structure:h,memory:{array:vt},slots:{0:{structure:g,memory:{array:Et}}}},1:{structure:L,memory:{array:xt},slots:{0:{structure:fe,memory:{array:Kt},slots:{0:{structure:pe,memory:{array:Dt}}}}}}}}},slot:43});Object.assign(G,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:he}],methods:[],template:null},slot:42});const Ft=new Uint8Array,Mt=new Uint8Array([170,170,170,170]),_t=new Uint8Array,Tt=new Uint8Array([152,251,15,0]),$t=new Uint8Array([75,34,16,0]),Bt=new Uint8Array([70,111,114,32,97,108,112,104,97,32,99,104,97,110,110,101,108,46,0]);Object.assign(de,{...t,type:2,name:"Struct0016",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:b},{...e,type:8,isRequired:!1,slot:0,name:"defaultValue",structure:h},{...e,type:8,isRequired:!1,slot:1,name:"description",structure:w}],methods:[],template:{memory:{array:Ft},slots:{0:{structure:h,memory:{array:Mt},slots:{0:{structure:g,memory:{array:_t}}}},1:{structure:w,memory:{array:Tt},slots:{0:{structure:C,memory:{array:$t},slots:{0:{structure:P,memory:{array:Bt}}}}}}}}},slot:45});Object.assign(H,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:de}],methods:[],template:null},slot:44});Object.assign(S,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:U}],methods:[],template:null},slot:33});const Lt=new Uint8Array,Gt=new Uint8Array([72,251,15,0]),Ht=new Uint8Array([0,0,0,0,0,0,0,0]),Jt=new Uint8Array([112,251,15,0]),Nt=new Uint8Array([0,0,0,0,0,0,0,0]),Qt=new Uint8Array([152,251,15,0]),Wt=new Uint8Array([0,0,0,0,0,0,0,0]),Xt=new Uint8Array([232,251,15,0]),Yt=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(Se,{...t,type:2,name:"Struct0024",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:s}],methods:[],template:{memory:{array:Lt},slots:{0:{structure:s,memory:{array:Gt},slots:{0:{structure:l,memory:{array:Ht}}}},1:{structure:s,memory:{array:Jt},slots:{0:{structure:l,memory:{array:Nt}}}},2:{structure:s,memory:{array:Qt},slots:{0:{structure:l,memory:{array:Wt}}}},3:{structure:s,memory:{array:Xt},slots:{0:{structure:l,memory:{array:Yt}}}}}}},slot:67});Object.assign(J,{...t,type:11,name:"Struct0021",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Se}],methods:[],template:null},slot:66});Object.assign(ge,{...t,type:1,name:"[48:0]u8",length:48,byteSize:49,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:y}],methods:[],template:null},slot:70});Object.assign(ze,{...t,type:11,name:"*const [48:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ge}],methods:[],template:null},slot:69});Object.assign(N,{...t,type:11,name:"*const *const [48:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ze}],methods:[],template:null},slot:68});const Zt=new Uint8Array,es=new Uint8Array([170,170,170,170]),ts=new Uint8Array,ss=new Uint8Array([160,250,15,0]),rs=new Uint8Array([26,34,16,0]),as=new Uint8Array([67,111,108,111,114,32,102,111,114,32,116,104,114,101,115,104,111,108,100,101,100,32,97,114,101,97,46,99,111,108,111,114,70,111,114,65,108,108,80,97,115,115,101,100,65,114,101,97,0]);Object.assign(Oe,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:S},{...e,type:8,isRequired:!1,slot:0,name:"defaultValue",structure:J},{...e,type:8,isRequired:!1,slot:1,name:"description",structure:N}],methods:[],template:{memory:{array:Zt},slots:{0:{structure:J,memory:{array:es},slots:{0:{structure:Se,memory:{array:ts}}}},1:{structure:N,memory:{array:ss},slots:{0:{structure:ze,memory:{array:rs},slots:{0:{structure:ge,memory:{array:as}}}}}}}}},slot:47});Object.assign(Q,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Oe}],methods:[],template:null},slot:46});const ns=new Uint8Array,is=new Uint8Array([72,251,15,0]),us=new Uint8Array([0,0,0,0,0,0,240,63]),os=new Uint8Array([112,251,15,0]),ls=new Uint8Array([0,0,0,0,0,0,240,63]),ms=new Uint8Array([152,251,15,0]),ys=new Uint8Array([0,0,0,0,0,0,240,63]),cs=new Uint8Array([232,251,15,0]),bs=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(we,{...t,type:2,name:"Struct0025",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:s}],methods:[],template:{memory:{array:ns},slots:{0:{structure:s,memory:{array:is},slots:{0:{structure:l,memory:{array:us}}}},1:{structure:s,memory:{array:os},slots:{0:{structure:l,memory:{array:ls}}}},2:{structure:s,memory:{array:ms},slots:{0:{structure:l,memory:{array:ys}}}},3:{structure:s,memory:{array:cs},slots:{0:{structure:l,memory:{array:bs}}}}}}},slot:72});Object.assign(W,{...t,type:11,name:"Struct0022",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:we}],methods:[],template:null},slot:71});Object.assign(Re,{...t,type:1,name:"[25:0]u8",length:25,byteSize:26,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:y}],methods:[],template:null},slot:75});Object.assign(qe,{...t,type:11,name:"*const [25:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Re}],methods:[],template:null},slot:74});Object.assign(X,{...t,type:11,name:"*const *const [25:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:qe}],methods:[],template:null},slot:73});const ps=new Uint8Array,fs=new Uint8Array([170,170,170,170]),hs=new Uint8Array,ds=new Uint8Array([160,250,15,0]),Ss=new Uint8Array([0,34,16,0]),gs=new Uint8Array([67,111,108,111,114,32,102,111,114,32,97,108,108,32,112,97,115,115,101,100,32,97,114,101,97,0]);Object.assign(Ae,{...t,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:S},{...e,type:8,isRequired:!1,slot:0,name:"defaultValue",structure:W},{...e,type:8,isRequired:!1,slot:1,name:"description",structure:X}],methods:[],template:{memory:{array:ps},slots:{0:{structure:W,memory:{array:fs},slots:{0:{structure:we,memory:{array:hs}}}},1:{structure:X,memory:{array:ds},slots:{0:{structure:qe,memory:{array:Ss},slots:{0:{structure:Re,memory:{array:gs}}}}}}}}},slot:49});Object.assign(Y,{...t,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ae}],methods:[],template:null},slot:48});const zs=new Uint8Array,Os=new Uint8Array([170,170,170,170]),ws=new Uint8Array,Rs=new Uint8Array([170,170,170,170]),qs=new Uint8Array,As=new Uint8Array([170,170,170,170]),Us=new Uint8Array,js=new Uint8Array([170,170,170,170]),Ps=new Uint8Array,Cs=new Uint8Array([170,170,170,170]),Vs=new Uint8Array,ks=new Uint8Array([170,170,170,170]),Is=new Uint8Array;Object.assign(Ue,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"threshold0",structure:$},{...e,type:8,isRequired:!1,slot:1,name:"threshold1",structure:B},{...e,type:8,isRequired:!1,slot:2,name:"threshold2",structure:G},{...e,type:8,isRequired:!1,slot:3,name:"threshold3",structure:H},{...e,type:8,isRequired:!1,slot:4,name:"outputColor1",structure:Q},{...e,type:8,isRequired:!1,slot:5,name:"outputColor2",structure:Y}],methods:[],template:{memory:{array:zs},slots:{0:{structure:$,memory:{array:Os},slots:{0:{structure:ce,memory:{array:ws}}}},1:{structure:B,memory:{array:Rs},slots:{0:{structure:be,memory:{array:qs}}}},2:{structure:G,memory:{array:As},slots:{0:{structure:he,memory:{array:Us}}}},3:{structure:H,memory:{array:js},slots:{0:{structure:de,memory:{array:Ps}}}},4:{structure:Q,memory:{array:Cs},slots:{0:{structure:Oe,memory:{array:Vs}}}},5:{structure:Y,memory:{array:ks},slots:{0:{structure:Ae,memory:{array:Is}}}}}}},slot:15});Object.assign(Z,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ue}],methods:[],template:null},slot:14});const vs=new Uint8Array,Es=new Uint8Array([48,252,15,0]),xs=new Uint8Array([4,0,0,0]);Object.assign(V,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:vs},slots:{0:{structure:f,memory:{array:Es},slots:{0:{structure:p,memory:{array:xs}}}}}}},slot:51});Object.assign(R,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:V}],methods:[],template:null},slot:50});const Ks=new Uint8Array,Ds=new Uint8Array([170,170,170,170]),Fs=new Uint8Array;Object.assign(je,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"source",structure:R}],methods:[],template:{memory:{array:Ks},slots:{0:{structure:R,memory:{array:Ds},slots:{0:{structure:V,memory:{array:Fs}}}}}}},slot:17});Object.assign(ee,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:je}],methods:[],template:null},slot:16});const Ms=new Uint8Array,_s=new Uint8Array([170,170,170,170]),Ts=new Uint8Array;Object.assign(Pe,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"target",structure:R}],methods:[],template:{memory:{array:Ms},slots:{0:{structure:R,memory:{array:_s},slots:{0:{structure:V,memory:{array:Ts}}}}}}},slot:19});Object.assign(te,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Pe}],methods:[],template:null},slot:18});const $s=new Uint8Array,Bs=new Uint8Array,Ls=new Uint8Array([68,39,16,0]),Gs=new Uint8Array([228,38,16,0]),Hs=new Uint8Array([110,101,116,46,111,110,116,104,101,119,105,110,103,115,46,102,105,108,116,101,114,115,0]),Js=new Uint8Array([64,39,16,0]),Ns=new Uint8Array([209,38,16,0]),Qs=new Uint8Array([65,110,100,121,32,76,105,0]),Ws=new Uint8Array([60,39,16,0]),Xs=new Uint8Array([1,0,0,0]),Ys=new Uint8Array([56,39,16,0]),Zs=new Uint8Array([79,38,16,0]),er=new Uint8Array([84,104,114,101,115,104,111,108,100,105,110,103,32,98,97,115,101,115,32,111,110,32,116,104,101,32,99,104,97,110,110,101,108,115,46,32,79,110,108,121,32,116,104,101,32,112,105,120,101,108,115,32,112,97,115,115,101,100,32,65,76,76,32,116,104,114,101,115,104,111,108,100,115,32,119,105,108,108,32,98,101,32,119,104,105,116,101,32,40,111,114,32,99,111,108,111,114,32,121,111,117,32,99,111,110,102,105,103,101,100,41,46,0]),tr=new Uint8Array([170,170,170,170]),sr=new Uint8Array,rr=new Uint8Array([170,170,170,170]),ar=new Uint8Array,nr=new Uint8Array([170,170,170,170]),ir=new Uint8Array;Object.assign(Ke,{...t,type:2,name:"channel-threshold.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:$s}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:F},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:M},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:f},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:_},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:Z},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:ee},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:te}],methods:[],template:{memory:{array:Bs},slots:{0:{structure:F,memory:{array:Ls},slots:{0:{structure:ne,memory:{array:Gs},slots:{0:{structure:ae,memory:{array:Hs}}}}}},1:{structure:M,memory:{array:Js},slots:{0:{structure:ue,memory:{array:Ns},slots:{0:{structure:ie,memory:{array:Qs}}}}}},2:{structure:f,memory:{array:Ws},slots:{0:{structure:p,memory:{array:Xs}}}},3:{structure:_,memory:{array:Ys},slots:{0:{structure:le,memory:{array:Zs},slots:{0:{structure:oe,memory:{array:er}}}}}},4:{structure:Z,memory:{array:tr},slots:{0:{structure:Ue,memory:{array:sr}}}},5:{structure:ee,memory:{array:rr},slots:{0:{structure:je,memory:{array:ar}}}},6:{structure:te,memory:{array:nr},slots:{0:{structure:Pe,memory:{array:ir}}}}}}},slot:1});Object.assign(q,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:y}],methods:[],template:null},slot:24});Object.assign(Ce,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:23});Object.assign(Ve,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Ce}],methods:[],template:null},slot:22});Object.assign(m,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[],template:null},slot:25});const ur=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(ke,{...t,type:9,name:"channel-threshold.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:p},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:p}],methods:[],template:{memory:{array:ur}}},slot:26});Object.assign(j,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:j}],methods:[],template:null},slot:27});const or=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),lr=new Uint8Array,mr=new Uint8Array([36,38,16,0]),yr=new Uint8Array([4,0,0,0]);Object.assign(se,{...t,type:2,name:"channel-threshold.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Ve},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ke},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:j}],methods:[],template:{memory:{array:or}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:q},{...e,type:7,isRequired:!1,name:"FPixel",structure:S},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:lr},slots:{0:{structure:f,memory:{array:mr},slots:{0:{structure:p,memory:{array:yr}}}}}}},slot:21});const cr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),br=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Je=new Uint8Array([0,0,0,0,0,0,0,0]),pr=new Uint8Array;Object.assign(k,{...t,type:2,name:"channel-threshold.KernelInput(u8,channel-threshold.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"source",structure:se}],methods:[],template:{memory:{array:cr},slots:{0:{structure:se,memory:{array:br},slots:{0:{structure:Ve,memory:{array:Je},address:1047200,slots:{0:{structure:Ce,memory:{array:pr},address:0}}}}}}}},slot:20});Object.assign(Ie,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:23});Object.assign(ve,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Ie}],methods:[],template:null},slot:30});const fr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),hr=new Uint8Array,dr=new Uint8Array([36,38,16,0]),Sr=new Uint8Array([4,0,0,0]);Object.assign(re,{...t,type:2,name:"channel-threshold.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:ve},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ke},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:j}],methods:[],template:{memory:{array:fr}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:q},{...e,type:7,isRequired:!1,name:"FPixel",structure:S},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:hr},slots:{0:{structure:f,memory:{array:dr},slots:{0:{structure:p,memory:{array:Sr}}}}}}},slot:29});const gr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),zr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Or=new Uint8Array;Object.assign(I,{...t,type:2,name:"channel-threshold.KernelOutput(u8,channel-threshold.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"target",structure:re}],methods:[],template:{memory:{array:gr},slots:{0:{structure:re,memory:{array:zr},slots:{0:{structure:ve,memory:{array:Je},address:1047200,slots:{0:{structure:Ie,memory:{array:Or},address:0}}}}}}}},slot:28});const wr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,0,0,0,0,128,63,0,0,0,0,0,0,128,63,0,0,0,0,0,0,128,63,0,0,0,0,0,0,128,63]);Object.assign(v,{...t,type:2,name:"channel-threshold.KernelParameters(channel-threshold.kernel)",length:1,byteSize:64,align:4,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:256,bitSize:64,byteSize:8,slot:0,name:"threshold0",structure:b},{...e,type:6,isRequired:!1,bitOffset:320,bitSize:64,byteSize:8,slot:1,name:"threshold1",structure:b},{...e,type:6,isRequired:!1,bitOffset:384,bitSize:64,byteSize:8,slot:2,name:"threshold2",structure:b},{...e,type:6,isRequired:!1,bitOffset:448,bitSize:64,byteSize:8,slot:3,name:"threshold3",structure:b},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:128,byteSize:16,slot:4,name:"outputColor1",structure:S},{...e,type:6,isRequired:!1,bitOffset:128,bitSize:128,byteSize:16,slot:5,name:"outputColor2",structure:S}],methods:[],template:{memory:{array:wr}}},slot:31});Object.assign(De,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(channel-threshold.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:53});Object.assign(Fe,{...t,type:7,name:"ErrorSet0000!channel-threshold.KernelOutput(u8,channel-threshold.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:I},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:De}],methods:[],template:null},slot:36});Object.assign(Me,{...t,type:3,name:"createOutput",length:1,byteSize:128,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:512,bitSize:32,byteSize:4,slot:0,name:"0",structure:m},{...e,type:3,bitOffset:544,bitSize:32,byteSize:4,slot:1,name:"1",structure:m},{...e,type:6,bitOffset:576,bitSize:192,byteSize:24,slot:2,name:"2",structure:k},{...e,type:6,bitOffset:0,bitSize:512,byteSize:64,slot:3,name:"3",structure:v},{...e,type:6,bitOffset:768,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Fe}],methods:[],template:null},slot:34});Object.assign(_e,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(channel-threshold.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:54});Object.assign(Te,{...t,type:7,name:"ErrorSet0001!channel-threshold.KernelOutput(u8,channel-threshold.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:I},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:_e}],methods:[],template:null},slot:37});Object.assign($e,{...t,type:3,name:"createPartialOutput",length:1,byteSize:144,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:512,bitSize:32,byteSize:4,slot:0,name:"0",structure:m},{...e,type:3,bitOffset:544,bitSize:32,byteSize:4,slot:1,name:"1",structure:m},{...e,type:3,bitOffset:576,bitSize:32,byteSize:4,slot:2,name:"2",structure:m},{...e,type:3,bitOffset:608,bitSize:32,byteSize:4,slot:3,name:"3",structure:m},{...e,type:6,bitOffset:640,bitSize:192,byteSize:24,slot:4,name:"4",structure:k},{...e,type:6,bitOffset:0,bitSize:512,byteSize:64,slot:5,name:"5",structure:v},{...e,type:6,bitOffset:832,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Te}],methods:[],template:null},slot:35});const Rr=new Uint8Array,qr={argStruct:Me,thunk:5,name:"createOutput"},Ar={argStruct:$e,thunk:1,name:"createPartialOutput"};Object.assign(Be,{...t,type:2,name:"channel-threshold",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Rr}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:Ke},{...e,type:7,isRequired:!1,name:"Input",structure:k},{...e,type:7,isRequired:!1,name:"Output",structure:I},{...e,type:7,isRequired:!1,name:"Parameters",structure:v}],methods:[qr,Ar],template:null},slot:0});const Ur=[y,ae,ne,F,ie,ue,M,p,f,oe,le,_,U,b,l,s,g,h,me,ye,T,ce,$,P,C,w,be,B,pe,fe,L,he,G,de,H,S,Se,J,ge,ze,N,Oe,Q,we,W,Re,qe,X,Ae,Y,Ue,Z,V,R,je,ee,Pe,te,Ke,q,Ce,Ve,m,ke,j,se,k,Ie,ve,re,I,v,De,Fe,Me,_e,Te,$e,Be],jr=bt(Ur),Pr=Be.constructor,Cr=(async()=>{const i=new URL("channel-threshold-da9d6f65.wasm",import.meta.url).href;return fetch(i)})();pt(Cr,{...jr,writeBack:!0});const{createOutput:Dr,createPartialOutput:Vr,kernel:xe,Input:kr,Output:Fr,Parameters:Mr}=Pr;function Ir(i,o,a,r,n={},z={}){if(Array.isArray(n)){const d=n;n={};for(const[c,O]of Object.keys(xe.inputImages).entries())n[O]=d[c]}const E=new kr(void 0),x=Object.keys(xe.inputImages),u=[];let A;for(const d of x){let c=n[d];if(c||(x.length===1&&["data","width","height"].every(O=>!!n[O])?c=n:u.push(d)),E[d]=c,A){if(c.colorSpace!==A)throw new Error(`Input images must all use the same color space: ${A}`)}else A=c.colorSpace}if(u.length>0)throw new Error(`Missing input image${u.length>1?"s":""}: ${u.join(", ")}`);const Ee=Vr(i,o,a,r,E,z),Le=d=>{const c=Object.keys(d),O={};for(const Ge of c){const{data:{typedArray:K},width:He,height:Qe}=d[Ge];let D;if(typeof ImageData=="function"){const We=new Uint8ClampedArray(K.buffer,K.byteOffset,K.byteLength);D=new ImageData(We,He,r,{colorSpace:A})}else D={data:K,width:He,height:Qe};if(c.length===1)return D;O[Ge]=D}return O};return Ee[Symbol.toStringTag]==="Promise"?Ee.then(Le):Le(Ee)}function vr(){const i={};for(let[o,a]of Object.entries(xe)){if(o==="parameters"){const r={};for(const[n,z]of Object.entries(a)){const E=r[n]={};for(let[x,u]of Object.entries(z))typeof u=="object"?"string"in u?u=u.string:u=Ne(u):typeof u=="function"&&(u=Er(u.name)),E[x]=u}a=r}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());i[o]=a}return i}function Ne(i){const o=[];for(let[a,r]of Object.entries(i))typeof r=="object"&&(r=Ne(r)),o[a]=r;return o}function Er(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[o,a,...r]=i.data;xr(o,r).then(([n,z])=>{postMessage([o,a,n],{transfer:z})}).catch(n=>{postMessage(["error",a,n])})};async function xr(i,o){switch(i){case"getKernelInfo":return[vr(...o)];case"createPartialImageData":const r=await Ir(...o),n=[];if("data"in r&&"width"in r&&"height"in r)n.push(r.data.buffer);else for(const z of Object.entries(r))n.push(r.data.buffer);return[r,n];default:throw new Error(`Unknown function: ${i}`)}}
