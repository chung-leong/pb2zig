import{u as Zs,a as tr,b as er,c as sr,d as rr,e as ar,f as nr,g as or,h as ir,i as cr,j as ur,k as mr,l as yr,m as br,n as lr,o as gr,p as pr,q as Or}from"./index-67c7daa1.js";Zs();mr();yr();tr();er();br();lr();gr();pr();sr();rr();ar();nr();Or();or();ir();cr();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},r={},f={},C={},D={},M={},F={},m={},j={},_={},$={},s={},g={},a={},L={},Y={},B={},G={},H={},J={},N={},Q={},W={},X={},Z={},tt={},et={},st={},rt={},yt={},R={},at={},k={},u={},O={},P={},bt={},nt={},q={},ot={},I={},it={},v={},x={},d={},lt={},gt={},w={},pt={},Ot={},jt={},ge={},ft={},A={},St={},pe={},Oe={},zt={},ht={},je={},fe={},dt={},Se={},wt={},ze={},At={},he={},Ut={},de={},we={},Vt={},Ae={},Pt={},Ue={},Rt={},Ve={},kt={},Pe={},Re={},qt={},ke={},It={},qe={},vt={},Ie={},xt={},ve={},xe={},Et={},Tt={},Kt={},Ct={},Dt={},Ee={},Mt={},Ft={},Te={},_t={},Ke={},$t={},Ce={},De={},Lt={},Yt={},Me={},Bt={},Fe={},Gt={},_e={},$e={},Ht={},Jt={},Le={},Nt={},Ye={},Qt={},Be={},Ge={},Wt={},Xt={},Zt={},te={},ee={},se={},He={},re={},Je={},Ne={},ae={},Qe={},ne={},We={},Xe={},oe={},Ze={},ts={},es={},ss={},rs={},as={},ns={},os={},is={},cs={},us={},ms={},ys={},bs={},ls={},gs={},ps={},ie={},Os={},js={},ce={},fs={},Ss={},zs={},hs={},ds={},ws={},As={},Us={},Vs={},ue={},Ps={},Rs={},ks={},qs={},Is={},vs={},xs={},Es={},Ts={},Ks={},Cs={},Ds={},Ms={},Fs={},_s={},$s={},Ls={},Ys={},Bs={},Gs={},Hs={},Js={},jr=new Uint8Array,fr=new Uint8Array,Sr=new Uint8Array([0,0,0,0,0,0,137,64]),zr=new Uint8Array,hr=new Uint8Array,dr=new Uint8Array([0,0,0,0,0,192,130,64]),wr=new Uint8Array,Ar=new Uint8Array([0,0,0,0,0,0,240,191]),Ur=new Uint8Array,Vr=new Uint8Array([0,0,0,0,0,0,240,191]),Pr=new Uint8Array,Rr=new Uint8Array([0,0,0,0,0,0,0,192]),kr=new Uint8Array,qr=new Uint8Array([0,0,0,0,0,0,224,191]),Ir=new Uint8Array,vr=new Uint8Array([0,0,0,0,0,0,240,63]),xr=new Uint8Array,Er=new Uint8Array([0,0,0,0,0,0,240,63]),Tr=new Uint8Array,Kr=new Uint8Array([0,0,0,0,0,0,0,64]),Cr=new Uint8Array,Dr=new Uint8Array([0,0,0,0,0,0,224,63]),Mr=new Uint8Array,Fr=new Uint8Array([154,153,153,153,153,153,217,191]),_r=new Uint8Array,$r=new Uint8Array([195,245,40,92,143,194,229,191]),Lr=new Uint8Array,Yr=new Uint8Array([10,215,163,112,61,10,215,191]),Br=new Uint8Array,Gr=new Uint8Array([123,20,174,71,225,122,164,191]),Hr=new Uint8Array,Jr=new Uint8Array,Nr=new Uint8Array,Qr=new Uint8Array,Wr=new Uint8Array,Xr=new Uint8Array,Zr=new Uint8Array([0,0,0,0,0,0,240,191]),ta=new Uint8Array,ea=new Uint8Array([0,0,0,0,0,0,240,63]),sa=new Uint8Array,ra=new Uint8Array([0,0,0,0,0,0,0,0]),aa=new Uint8Array,na=new Uint8Array,oa=new Uint8Array([0,0,0,0,0,0,0,0]),ia=new Uint8Array,ca=new Uint8Array([0,0,0,0,0,0,36,64]),ua=new Uint8Array,ma=new Uint8Array([0,0,0,0,0,0,8,64]),ya=new Uint8Array,ba=new Uint8Array,la=new Uint8Array([0,0,0,0,0,0,20,192]),ga=new Uint8Array,pa=new Uint8Array([0,0,0,0,0,0,20,64]),Oa=new Uint8Array,ja=new Uint8Array([0,0,0,0,0,0,0,0]),fa=new Uint8Array,Sa=new Uint8Array,za=new Uint8Array,ha=new Uint8Array,da=new Uint8Array,wa=new Uint8Array,Aa=new Uint8Array,Ua=new Uint8Array([3]),Va=new Uint8Array,Pa=new Uint8Array,Ra=new Uint8Array([4]),ka=new Uint8Array,qa=new Uint8Array([24,16,0,1]),Ia=new Uint8Array([100,101,114,115,99,104,109,97,108,101,46,99,111,109,0]),va=new Uint8Array([50,16,0,1]),xa=new Uint8Array([68,101,114,32,83,99,104,109,97,108,101,0]),Ea=new Uint8Array,Ta=new Uint8Array([1]),Ka=new Uint8Array([79,16,0,1]),Ca=new Uint8Array([82,97,121,116,114,97,99,101,115,32,97,32,81,117,97,116,101,114,110,105,111,110,32,74,117,108,105,97,32,115,101,116,0]),Da=new Uint8Array,Ma=new Uint8Array,Fa=new Uint8Array,_a=new Uint8Array([0]),$a=new Uint8Array([1]),Ns=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),La=new Uint8Array,Ya=new Uint8Array,Ba=new Uint8Array,Ga=new Uint8Array,Ha=new Uint8Array([3]),me=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Qs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ja=new Uint8Array,Na=new Uint8Array,Qa=new Uint8Array,Wa=new Uint8Array,Xa=new Uint8Array([4]),ye=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Za=new Uint8Array([205,204,204,190,123,20,46,191,236,81,184,190,10,215,35,189,0,0,72,68,0,0,22,68,0,0,0,0,0,0,64,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),tn=new Uint8Array([27,0]),en=new Uint8Array([27,0]),sn=new Uint8Array,rn=new Uint8Array,an=new Uint8Array,nn=new Uint8Array;Object.assign(ge,{slots:{0:ft,1:St}});Object.assign(ft,{structure:r,memory:{array:jr},const:!0,slots:{0:A}});Object.assign(A,{structure:g});Object.assign(St,{structure:s,memory:{array:fr},const:!0,slots:{0:pe}});Object.assign(pe,{structure:a,memory:{array:Sr},const:!0});Object.assign(Oe,{slots:{0:zt,1:ht}});Object.assign(zt,{structure:r,memory:{array:zr},const:!0,slots:{0:A}});Object.assign(ht,{structure:s,memory:{array:hr},const:!0,slots:{0:je}});Object.assign(je,{structure:a,memory:{array:dr},const:!0});Object.assign(fe,{slots:{0:dt,1:wt,2:At,3:Ut}});Object.assign(dt,{structure:s,memory:{array:wr},const:!0,slots:{0:Se}});Object.assign(Se,{structure:a,memory:{array:Ar},const:!0});Object.assign(wt,{structure:s,memory:{array:Ur},const:!0,slots:{0:ze}});Object.assign(ze,{structure:a,memory:{array:Vr},const:!0});Object.assign(At,{structure:s,memory:{array:Pr},const:!0,slots:{0:he}});Object.assign(he,{structure:a,memory:{array:Rr},const:!0});Object.assign(Ut,{structure:s,memory:{array:kr},const:!0,slots:{0:de}});Object.assign(de,{structure:a,memory:{array:qr},const:!0});Object.assign(we,{slots:{0:Vt,1:Pt,2:Rt,3:kt}});Object.assign(Vt,{structure:s,memory:{array:Ir},const:!0,slots:{0:Ae}});Object.assign(Ae,{structure:a,memory:{array:vr},const:!0});Object.assign(Pt,{structure:s,memory:{array:xr},const:!0,slots:{0:Ue}});Object.assign(Ue,{structure:a,memory:{array:Er},const:!0});Object.assign(Rt,{structure:s,memory:{array:Tr},const:!0,slots:{0:Ve}});Object.assign(Ve,{structure:a,memory:{array:Kr},const:!0});Object.assign(kt,{structure:s,memory:{array:Cr},const:!0,slots:{0:Pe}});Object.assign(Pe,{structure:a,memory:{array:Dr},const:!0});Object.assign(Re,{slots:{0:qt,1:It,2:vt,3:xt}});Object.assign(qt,{structure:s,memory:{array:Mr},const:!0,slots:{0:ke}});Object.assign(ke,{structure:a,memory:{array:Fr},const:!0});Object.assign(It,{structure:s,memory:{array:_r},const:!0,slots:{0:qe}});Object.assign(qe,{structure:a,memory:{array:$r},const:!0});Object.assign(vt,{structure:s,memory:{array:Lr},const:!0,slots:{0:Ie}});Object.assign(Ie,{structure:a,memory:{array:Yr},const:!0});Object.assign(xt,{structure:s,memory:{array:Br},const:!0,slots:{0:ve}});Object.assign(ve,{structure:a,memory:{array:Gr},const:!0});Object.assign(xe,{slots:{0:Et,1:Kt,2:Ct,3:Dt}});Object.assign(Et,{structure:r,memory:{array:Hr},const:!0,slots:{0:Tt}});Object.assign(Tt,{structure:J});Object.assign(Kt,{structure:B,memory:{array:Jr},const:!0,slots:{0:dt,1:wt,2:At,3:Ut}});Object.assign(Ct,{structure:G,memory:{array:Nr},const:!0,slots:{0:Vt,1:Pt,2:Rt,3:kt}});Object.assign(Dt,{structure:H,memory:{array:Qr},const:!0,slots:{0:qt,1:It,2:vt,3:xt}});Object.assign(Ee,{slots:{0:Mt,1:Ft,2:_t,3:$t}});Object.assign(Mt,{structure:r,memory:{array:Wr},const:!0,slots:{0:A}});Object.assign(Ft,{structure:s,memory:{array:Xr},const:!0,slots:{0:Te}});Object.assign(Te,{structure:a,memory:{array:Zr},const:!0});Object.assign(_t,{structure:s,memory:{array:ta},const:!0,slots:{0:Ke}});Object.assign(Ke,{structure:a,memory:{array:ea},const:!0});Object.assign($t,{structure:s,memory:{array:sa},const:!0,slots:{0:Ce}});Object.assign(Ce,{structure:a,memory:{array:ra},const:!0});Object.assign(De,{slots:{0:Lt,1:Yt,2:Bt,3:Gt}});Object.assign(Lt,{structure:r,memory:{array:aa},const:!0,slots:{0:A}});Object.assign(Yt,{structure:s,memory:{array:na},const:!0,slots:{0:Me}});Object.assign(Me,{structure:a,memory:{array:oa},const:!0});Object.assign(Bt,{structure:s,memory:{array:ia},const:!0,slots:{0:Fe}});Object.assign(Fe,{structure:a,memory:{array:ca},const:!0});Object.assign(Gt,{structure:s,memory:{array:ua},const:!0,slots:{0:_e}});Object.assign(_e,{structure:a,memory:{array:ma},const:!0});Object.assign($e,{slots:{0:Ht,1:Jt,2:Nt,3:Qt}});Object.assign(Ht,{structure:r,memory:{array:ya},const:!0,slots:{0:A}});Object.assign(Jt,{structure:s,memory:{array:ba},const:!0,slots:{0:Le}});Object.assign(Le,{structure:a,memory:{array:la},const:!0});Object.assign(Nt,{structure:s,memory:{array:ga},const:!0,slots:{0:Ye}});Object.assign(Ye,{structure:a,memory:{array:pa},const:!0});Object.assign(Qt,{structure:s,memory:{array:Oa},const:!0,slots:{0:Be}});Object.assign(Be,{structure:a,memory:{array:ja},const:!0});Object.assign(Ge,{slots:{0:Wt,1:Xt,2:Zt,3:te,4:ee,5:se}});Object.assign(Wt,{structure:L,memory:{array:fa},const:!0,slots:{0:ft,1:St}});Object.assign(Xt,{structure:Y,memory:{array:Sa},const:!0,slots:{0:zt,1:ht}});Object.assign(Zt,{structure:N,memory:{array:za},const:!0,slots:{0:Et,1:Kt,2:Ct,3:Dt}});Object.assign(te,{structure:Q,memory:{array:ha},const:!0,slots:{0:Mt,1:Ft,2:_t,3:$t}});Object.assign(ee,{structure:W,memory:{array:da},const:!0,slots:{0:Lt,1:Yt,2:Bt,3:Gt}});Object.assign(se,{structure:X,memory:{array:wa},const:!0,slots:{0:Ht,1:Jt,2:Nt,3:Qt}});Object.assign(He,{slots:{0:re}});Object.assign(re,{structure:m,memory:{array:Aa},const:!0,slots:{0:Je}});Object.assign(Je,{structure:j,memory:{array:Ua},const:!0});Object.assign(Ne,{slots:{0:ae}});Object.assign(ae,{structure:tt,memory:{array:Va},const:!0,slots:{0:re}});Object.assign(Qe,{slots:{0:ne}});Object.assign(ne,{structure:m,memory:{array:Pa},const:!0,slots:{0:We}});Object.assign(We,{structure:j,memory:{array:Ra},const:!0});Object.assign(Xe,{slots:{0:oe}});Object.assign(oe,{structure:st,memory:{array:ka},const:!0,slots:{0:ne}});Object.assign(Ze,{slots:{0:ts,1:ss,2:as,3:os,4:cs,5:us,6:ms}});Object.assign(ts,{structure:D,memory:{array:qa},const:!0,slots:{0:es}});Object.assign(es,{structure:C,memory:{array:Ia},reloc:16781336});Object.assign(ss,{structure:F,memory:{array:va},const:!0,slots:{0:rs}});Object.assign(rs,{structure:M,memory:{array:xa},reloc:16781362});Object.assign(as,{structure:m,memory:{array:Ea},const:!0,slots:{0:ns}});Object.assign(ns,{structure:j,memory:{array:Ta},const:!0});Object.assign(os,{structure:$,memory:{array:Ka},const:!0,slots:{0:is}});Object.assign(is,{structure:_,memory:{array:Ca},reloc:16781391});Object.assign(cs,{structure:Z,memory:{array:Da},const:!0,slots:{0:Wt,1:Xt,2:Zt,3:te,4:ee,5:se}});Object.assign(us,{structure:et,memory:{array:Ma},const:!0,slots:{0:ae}});Object.assign(ms,{structure:rt,memory:{array:Fa},const:!0,slots:{0:oe}});Object.assign(ys,{slots:{0:bs,1:ls}});Object.assign(bs,{structure:O,memory:{array:_a},const:!0});Object.assign(ls,{structure:O,memory:{array:$a},const:!0});Object.assign(gs,{memory:{array:Ns},slots:{0:ps}});Object.assign(ps,{structure:k,memory:{array:Ns,offset:0,length:8},slots:{0:ie}});Object.assign(ie,{structure:at,memory:{array:La},reloc:0});Object.assign(Os,{slots:{0:js,1:fs,2:zs}});Object.assign(js,{structure:r,memory:{array:Ya},const:!0,slots:{0:ce}});Object.assign(ce,{structure:R});Object.assign(fs,{structure:r,memory:{array:Ba},const:!0,slots:{0:Ss}});Object.assign(Ss,{structure:bt});Object.assign(zs,{structure:m,memory:{array:Ga},const:!0,slots:{0:hs}});Object.assign(hs,{structure:j,memory:{array:Ha},const:!0});Object.assign(ds,{memory:{array:me},slots:{0:ws}});Object.assign(ws,{structure:nt,memory:{array:me},slots:{0:As}});Object.assign(As,{structure:k,memory:{array:me,offset:0,length:8},slots:{0:ie}});Object.assign(Us,{memory:{array:Qs},slots:{0:Vs}});Object.assign(Vs,{structure:I,memory:{array:Qs,offset:0,length:8},slots:{0:ue}});Object.assign(ue,{structure:ot,memory:{array:Ja},reloc:0});Object.assign(Ps,{slots:{0:Rs,1:ks,2:qs}});Object.assign(Rs,{structure:r,memory:{array:Na},const:!0,slots:{0:ce}});Object.assign(ks,{structure:r,memory:{array:Qa},const:!0,slots:{0:Tt}});Object.assign(qs,{structure:m,memory:{array:Wa},const:!0,slots:{0:Is}});Object.assign(Is,{structure:j,memory:{array:Xa},const:!0});Object.assign(vs,{memory:{array:ye},slots:{0:xs}});Object.assign(xs,{structure:it,memory:{array:ye},slots:{0:Es}});Object.assign(Es,{structure:I,memory:{array:ye,offset:0,length:8},slots:{0:ue}});Object.assign(Ts,{memory:{array:Za}});Object.assign(Ks,{slots:{0:Cs}});Object.assign(Cs,{structure:d,memory:{array:tn},const:!0});Object.assign(Ds,{slots:{0:Ms}});Object.assign(Ms,{structure:w,memory:{array:en},const:!0});Object.assign(Fs,{slots:{0:_s,1:Ls,2:Bs,3:Hs}});Object.assign(_s,{structure:r,memory:{array:sn},const:!0,slots:{0:$s}});Object.assign($s,{structure:yt});Object.assign(Ls,{structure:r,memory:{array:rn},const:!0,slots:{0:Ys}});Object.assign(Ys,{structure:q});Object.assign(Bs,{structure:r,memory:{array:an},const:!0,slots:{0:Gs}});Object.assign(Gs,{structure:v});Object.assign(Hs,{structure:r,memory:{array:nn},const:!0,slots:{0:Js}});Object.assign(Js,{structure:x});const on={argStruct:gt,thunkId:2,name:"createOutput"},cn={argStruct:Ot,thunkId:3,name:"createPartialOutput"};Object.assign(r,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(f,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(C,{...e,type:1,name:"[14:0]u8",length:14,byteSize:15,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(D,{...e,type:13,name:"*const [14:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:C}],methods:[]}});Object.assign(M,{...e,type:1,name:"[11:0]u8",length:11,byteSize:12,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(F,{...e,type:13,name:"*const [11:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(m,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:m}],methods:[]}});Object.assign(j,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:j}],methods:[]}});Object.assign(_,{...e,type:1,name:"[32:0]u8",length:32,byteSize:33,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign($,{...e,type:13,name:"*const [32:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[]}});Object.assign(s,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(g,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:g}],methods:[]}});Object.assign(a,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:a}],methods:[]}});Object.assign(L,{...e,type:2,name:"Struct3317305511",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"defaultValue",structure:s}],methods:[],template:ge}});Object.assign(Y,{...e,type:2,name:"Struct1920690990",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"defaultValue",structure:s}],methods:[],template:Oe}});Object.assign(B,{...e,type:2,name:"Struct1307934727",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s},{...t,type:7,slot:2,name:"2",structure:s},{...t,type:7,slot:3,name:"3",structure:s}],methods:[],template:fe}});Object.assign(G,{...e,type:2,name:"Struct567241631",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s},{...t,type:7,slot:2,name:"2",structure:s},{...t,type:7,slot:3,name:"3",structure:s}],methods:[],template:we}});Object.assign(H,{...e,type:2,name:"Struct774457094",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s},{...t,type:7,slot:2,name:"2",structure:s},{...t,type:7,slot:3,name:"3",structure:s}],methods:[],template:Re}});Object.assign(J,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:g}],methods:[]}});Object.assign(N,{...e,type:2,name:"Struct3326991185",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:B},{...t,type:7,slot:2,name:"maxValue",structure:G},{...t,type:7,slot:3,name:"defaultValue",structure:H}],methods:[],template:xe}});Object.assign(Q,{...e,type:2,name:"Struct3347425011",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:s},{...t,type:7,slot:2,name:"maxValue",structure:s},{...t,type:7,slot:3,name:"defaultValue",structure:s}],methods:[],template:Ee}});Object.assign(W,{...e,type:2,name:"Struct2425327588",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:s},{...t,type:7,slot:2,name:"maxValue",structure:s},{...t,type:7,slot:3,name:"defaultValue",structure:s}],methods:[],template:De}});Object.assign(X,{...e,type:2,name:"Struct382720152",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:s},{...t,type:7,slot:2,name:"maxValue",structure:s},{...t,type:7,slot:3,name:"defaultValue",structure:s}],methods:[],template:$e}});Object.assign(Z,{...e,type:2,name:"Struct3697324396",align:1,instance:{members:[{...t,type:7,slot:0,name:"width",structure:L},{...t,type:7,slot:1,name:"height",structure:Y},{...t,type:7,slot:2,name:"c",structure:N},{...t,type:7,slot:3,name:"w",structure:Q},{...t,type:7,slot:4,name:"camDistance",structure:W},{...t,type:7,slot:5,name:"rotationY",structure:X}],methods:[],template:Ge}});Object.assign(tt,{...e,type:2,name:"Struct3196272719",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:m}],methods:[],template:He}});Object.assign(et,{...e,type:2,name:"Struct3216239817",align:1,instance:{members:[{...t,type:7,slot:0,name:"inputUsedToTest",structure:tt}],methods:[],template:Ne}});Object.assign(st,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:m}],methods:[],template:Qe}});Object.assign(rt,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:st}],methods:[],template:Xe}});Object.assign(yt,{...e,type:2,name:"rt-julia.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:D},{...t,type:7,slot:1,name:"vendor",structure:F},{...t,type:7,slot:2,name:"version",structure:m},{...t,type:7,slot:3,name:"description",structure:$},{...t,type:7,slot:4,name:"parameters",structure:Z},{...t,type:7,slot:5,name:"inputImages",structure:et},{...t,type:7,slot:6,name:"outputImages",structure:rt}],methods:[],template:Ze}});Object.assign(R,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(at,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(k,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:at}],methods:[]}});Object.assign(u,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:u}],methods:[]}});Object.assign(O,{...e,type:11,name:"rt-julia.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:O}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:O},{...t,type:7,slot:1,name:"display-p3",structure:O}],methods:[],template:ys}});Object.assign(P,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(bt,{...e,type:15,name:"@Vector(3, f32)",length:3,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:g}],methods:[]}});Object.assign(nt,{...e,type:2,name:"rt-julia.Image(u8,3,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:k},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:gs},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:r},{...t,type:7,slot:1,name:"FPixel",structure:r},{...t,type:7,slot:2,name:"channels",structure:m}],methods:[],template:Os}});Object.assign(q,{...e,type:2,name:"rt-julia.KernelInput(u8,rt-julia.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"inputUsedToTest",structure:nt}],methods:[],template:ds}});Object.assign(ot,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(I,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:ot}],methods:[]}});Object.assign(it,{...e,type:2,name:"rt-julia.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:I},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:Us},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:r},{...t,type:7,slot:1,name:"FPixel",structure:r},{...t,type:7,slot:2,name:"channels",structure:m}],methods:[],template:Ps}});Object.assign(v,{...e,type:2,name:"rt-julia.KernelOutput(u8,rt-julia.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:it}],methods:[],template:vs}});Object.assign(x,{...e,type:2,name:"rt-julia.KernelParameters(rt-julia.kernel)",byteSize:48,align:16,instance:{members:[{...t,type:4,bitOffset:128,bitSize:32,byteSize:4,slot:1,name:"width",structure:g},{...t,type:4,bitOffset:160,bitSize:32,byteSize:4,slot:2,name:"height",structure:g},{...t,type:5,bitOffset:0,bitSize:128,byteSize:16,slot:0,name:"c",structure:J},{...t,type:4,bitOffset:192,bitSize:32,byteSize:4,slot:3,name:"w",structure:g},{...t,type:4,bitOffset:224,bitSize:32,byteSize:4,slot:4,name:"camDistance",structure:g},{...t,type:4,bitOffset:256,bitSize:32,byteSize:4,slot:5,name:"rotationY",structure:g}],methods:[],template:Ts}});Object.assign(d,{...e,type:10,name:"ErrorSet3950631824",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:d}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:d}],methods:[],template:Ks}});Object.assign(lt,{...e,type:9,name:"ErrorSet3950631824!rt-julia.KernelOutput(u8,rt-julia.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:d}],methods:[]}});Object.assign(gt,{...e,type:5,name:"createOutput",byteSize:112,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:384,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...t,type:3,isRequired:!0,bitOffset:416,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...t,type:5,isRequired:!0,bitOffset:448,bitSize:192,byteSize:24,slot:0,name:"2",structure:q},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:384,byteSize:48,slot:1,name:"3",structure:x},{...t,type:5,isRequired:!0,bitOffset:640,bitSize:224,byteSize:28,slot:2,name:"retval",structure:lt}],methods:[]}});Object.assign(w,{...e,type:10,name:"ErrorSet4030816959",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:w}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:w}],methods:[],template:Ds}});Object.assign(pt,{...e,type:9,name:"ErrorSet4030816959!rt-julia.KernelOutput(u8,rt-julia.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:w}],methods:[]}});Object.assign(Ot,{...e,type:5,name:"createPartialOutput",byteSize:128,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:384,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...t,type:3,isRequired:!0,bitOffset:416,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...t,type:3,isRequired:!0,bitOffset:448,bitSize:32,byteSize:4,slot:5,name:"2",structure:u},{...t,type:3,isRequired:!0,bitOffset:480,bitSize:32,byteSize:4,slot:6,name:"3",structure:u},{...t,type:5,isRequired:!0,bitOffset:512,bitSize:192,byteSize:24,slot:0,name:"4",structure:q},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:384,byteSize:48,slot:1,name:"5",structure:x},{...t,type:5,isRequired:!0,bitOffset:704,bitSize:224,byteSize:28,slot:2,name:"retval",structure:pt}],methods:[]}});Object.assign(jt,{...e,type:2,name:"rt-julia",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:r},{...t,type:7,slot:1,name:"Input",structure:r},{...t,type:7,slot:2,name:"Output",structure:r},{...t,type:7,slot:3,name:"Parameters",structure:r}],methods:[on,cn],template:Fs}});const un=[r,f,C,D,M,F,m,j,_,$,s,g,a,L,Y,B,G,H,J,N,Q,W,X,Z,tt,et,st,rt,yt,R,at,k,u,O,P,bt,nt,q,ot,I,it,v,x,d,lt,gt,w,pt,Ot,jt],mn=jt,yn={runtimeSafety:!1,littleEndian:!0},ct=ur();ct.getSpecialExports();ct.recreateStructures(un,yn);const bn=(async()=>{const i=new URL("rt-julia-0b84c6e8.wasm",import.meta.url).href;return fetch(i)})();ct.loadModule(bn);ct.linkVariables(!0);const{constructor:ln}=mn,{createPartialOutput:gn,Input:pn,kernel:mt}=ln;function On(i,y,c,o,n={},S={}){const z=[];for(const[l]of mt.inputImages)z.push(l);const U=[];for(const[l]of mt.outputImages)U.push(l);if(Array.isArray(n)){const l=n;n={};for(const[p,h]of z.entries())n[h]=l[p]}const b=new pn(void 0),E=[];let V;for(const l of z){let p=n[l];if(p||(z.length===1&&["data","width","height"].every(h=>!!n[h])?p=n:E.push(l)),b[l]=p,V){if(p.colorSpace!==V)throw new Error(`Input images must all use the same color space: ${V}`)}else V=p.colorSpace}if(E.length>0)throw new Error(`Missing input image${E.length>1?"s":""}: ${E.join(", ")}`);const ut=gn(i,y,c,o,b,S),be=l=>{const p={};for(const h of U){const{data:{typedArray:T},width:le,height:Ws}=l[h];let K;if(typeof ImageData=="function"){const Xs=new Uint8ClampedArray(T.buffer,T.byteOffset,T.byteLength);K=new ImageData(Xs,le,o,{colorSpace:V})}else K={data:T,width:le,height:Ws};if(U.length===1)return K;p[h]=K}return p};return ut[Symbol.toStringTag]==="Promise"?ut.then(be):be(ut)}function jn(){const i={};for(let[y,c]of mt){if(y==="parameters"){const o={};for(const[n,S]of c){const z=o[n]={};for(let[U,b]of S)typeof b=="object"?b=b.string??b.valueOf():typeof b=="function"&&(b=fn(b.name)),z[U]=b}c=o}else typeof c=="object"&&(c=c.string??c.valueOf());i[y]=c}return i}function fn(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=async i=>{if(!Array.isArray(i.data))return;const[y,c,...o]=i.data;try{const[n,S]=await Sn(y,o);postMessage([y,c,n],{transfer:S})}catch(n){postMessage(["error",c,n])}};async function Sn(i,y){switch(i){case"getKernelInfo":return[jn(...y)];case"createPartialImageData":const o=await On(...y),n=[];if("data"in o&&"width"in o&&"height"in o)n.push(o.data.buffer);else for(const S of Object.entries(o))n.push(o.data.buffer);return[o,n];default:throw new Error(`Unknown function: ${i}`)}}postMessage("ready");
