import{u as Js,a as Ns,b as Qs,c as Ws,d as Xs,e as Ys,f as Zs,g as tr,h as er,i as sr,j as rr,k as nr,l as ar,m as or,n as ir,o as cr,p as ur,q as mr}from"./index-33238b17.js";Js();nr();ar();Ns();Qs();or();ir();cr();ur();Ws();Xs();Ys();Zs();mr();tr();er();sr();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},r={},S={},D={},F={},_={},$={},o={},O={},H={},L={},s={},p={},n={},B={},G={},J={},N={},Q={},W={},X={},P={},Y={},Z={},tt={},et={},A={},st={},rt={},bt={},k={},nt={},q={},m={},f={},R={},lt={},at={},I={},ot={},v={},it={},x={},E={},h={},gt={},pt={},w={},Ot={},ft={},St={},ye={},jt={},K={},zt={},be={},dt={},le={},ht={},ge={},pe={},wt={},Oe={},At={},fe={},Se={},Ut={},je={},Vt={},ze={},de={},Pt={},he={},Rt={},we={},Ae={},kt={},Ue={},qt={},It={},vt={},Ve={},xt={},Et={},Pe={},Kt={},Re={},Ct={},ke={},qe={},Mt={},Ie={},Tt={},ve={},Dt={},xe={},Ft={},Ee={},Ke={},_t={},$t={},Ce={},Ht={},Me={},Lt={},Te={},De={},Bt={},Gt={},Fe={},Jt={},_e={},Nt={},$e={},He={},Qt={},Wt={},Xt={},Yt={},Zt={},te={},Le={},ct={},Be={},Ge={},ee={},Je={},se={},Ne={},Qe={},We={},Xe={},Ye={},Ze={},ts={},es={},ss={},rs={},ns={},as={},os={},is={},cs={},us={},ms={},re={},ys={},bs={},ne={},ls={},ae={},gs={},ps={},Os={},fs={},Ss={},js={},zs={},oe={},ds={},hs={},ws={},As={},Us={},Vs={},Ps={},Rs={},ks={},qs={},Is={},vs={},xs={},Es={},Ks={},Cs={},Ms={},Ts={},Ds={},Fs={},_s={},$s={},yr=new Uint8Array,br=new Uint8Array,lr=new Uint8Array([0,0,0,0,0,0,0,0]),gr=new Uint8Array,pr=new Uint8Array([0,0,0,0,0,0,224,63]),Or=new Uint8Array,fr=new Uint8Array([0,0,0,0,0,0,208,63]),Sr=new Uint8Array,jr=new Uint8Array([0,0,0,0,0,0,0,0]),zr=new Uint8Array,dr=new Uint8Array([0,0,0,0,0,0,0,0]),hr=new Uint8Array,wr=new Uint8Array([0,0,0,0,0,32,140,64]),Ar=new Uint8Array,Ur=new Uint8Array([0,0,0,0,0,32,140,64]),Vr=new Uint8Array,Pr=new Uint8Array([0,0,0,0,0,0,105,64]),Rr=new Uint8Array,kr=new Uint8Array([0,0,0,0,0,0,105,64]),qr=new Uint8Array,Ir=new Uint8Array,vr=new Uint8Array,xr=new Uint8Array,Er=new Uint8Array,Kr=new Uint8Array,Cr=new Uint8Array([0,0,0,0,0,0,0,0]),Mr=new Uint8Array,Tr=new Uint8Array([0,0,0,0,0,64,127,64]),Dr=new Uint8Array,Fr=new Uint8Array([0,0,0,0,0,0,89,64]),_r=new Uint8Array,$r=new Uint8Array,Hr=new Uint8Array([0]),Lr=new Uint8Array,Br=new Uint8Array([1]),Gr=new Uint8Array,Jr=new Uint8Array([0]),Nr=new Uint8Array,Qr=new Uint8Array,Wr=new Uint8Array([0,0,0,0,0,0,0,0]),Xr=new Uint8Array,Yr=new Uint8Array([0,0,0,0,0,0,240,63]),Zr=new Uint8Array,tn=new Uint8Array([51,51,51,51,51,51,227,63]),en=new Uint8Array,sn=new Uint8Array,rn=new Uint8Array([0,0,0,0,0,0,0,0]),nn=new Uint8Array,an=new Uint8Array([0,0,0,0,0,0,240,63]),on=new Uint8Array,cn=new Uint8Array([0,0,0,0,0,0,0,0]),un=new Uint8Array,mn=new Uint8Array,yn=new Uint8Array,bn=new Uint8Array,ln=new Uint8Array,gn=new Uint8Array,pn=new Uint8Array,On=new Uint8Array([4]),fn=new Uint8Array,Sn=new Uint8Array,jn=new Uint8Array([6,5,0,1]),zn=new Uint8Array([99,111,109,46,97,98,114,105,108,0]),dn=new Uint8Array([27,5,0,1]),hn=new Uint8Array([68,97,110,105,101,108,32,65,108,108,101,103,114,101,116,116,105,0]),wn=new Uint8Array,An=new Uint8Array([1]),Un=new Uint8Array([62,5,0,1]),Vn=new Uint8Array([65,106,117,115,116,97,98,108,101,32,122,111,111,109,32,98,108,117,114,44,32,121,111,117,32,99,97,110,32,99,111,110,116,114,111,108,32,102,111,99,97,108,32,115,105,122,101,44,32,101,100,103,101,32,104,97,114,100,110,101,115,115,32,97,110,100,32,108,105,103,104,116,46,32,66,97,115,101,100,32,111,110,32,90,111,111,109,66,108,117,114,32,98,121,32,82,121,97,110,32,80,104,101,108,97,110,46,0]),Pn=new Uint8Array,Rn=new Uint8Array,kn=new Uint8Array,qn=new Uint8Array([0]),In=new Uint8Array([1]),Hs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),vn=new Uint8Array,xn=new Uint8Array,En=new Uint8Array,Kn=new Uint8Array,Cn=new Uint8Array([4]),ie=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ls=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Mn=new Uint8Array,Tn=new Uint8Array,Dn=new Uint8Array,Fn=new Uint8Array,_n=new Uint8Array([4]),ce=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),$n=new Uint8Array([0,0,72,67,0,0,72,67,0,0,128,62,0,0,200,66,0,0,0,0,154,153,25,63,0,0,0,0,0,0,0,0]),Hn=new Uint8Array([27,0]),Ln=new Uint8Array([27,0]),Bn=new Uint8Array,Gn=new Uint8Array,Jn=new Uint8Array,Nn=new Uint8Array;Object.assign(ye,{slots:{0:jt,1:zt,2:dt,3:ht}});Object.assign(jt,{structure:r,memory:{array:yr},const:!0,slots:{0:K}});Object.assign(K,{structure:p});Object.assign(zt,{structure:s,memory:{array:br},const:!0,slots:{0:be}});Object.assign(be,{structure:n,memory:{array:lr},const:!0});Object.assign(dt,{structure:s,memory:{array:gr},const:!0,slots:{0:le}});Object.assign(le,{structure:n,memory:{array:pr},const:!0});Object.assign(ht,{structure:s,memory:{array:Or},const:!0,slots:{0:ge}});Object.assign(ge,{structure:n,memory:{array:fr},const:!0});Object.assign(pe,{slots:{0:wt,1:At}});Object.assign(wt,{structure:s,memory:{array:Sr},const:!0,slots:{0:Oe}});Object.assign(Oe,{structure:n,memory:{array:jr},const:!0});Object.assign(At,{structure:s,memory:{array:zr},const:!0,slots:{0:fe}});Object.assign(fe,{structure:n,memory:{array:dr},const:!0});Object.assign(Se,{slots:{0:Ut,1:Vt}});Object.assign(Ut,{structure:s,memory:{array:hr},const:!0,slots:{0:je}});Object.assign(je,{structure:n,memory:{array:wr},const:!0});Object.assign(Vt,{structure:s,memory:{array:Ar},const:!0,slots:{0:ze}});Object.assign(ze,{structure:n,memory:{array:Ur},const:!0});Object.assign(de,{slots:{0:Pt,1:Rt}});Object.assign(Pt,{structure:s,memory:{array:Vr},const:!0,slots:{0:he}});Object.assign(he,{structure:n,memory:{array:Pr},const:!0});Object.assign(Rt,{structure:s,memory:{array:Rr},const:!0,slots:{0:we}});Object.assign(we,{structure:n,memory:{array:kr},const:!0});Object.assign(Ae,{slots:{0:kt,1:qt,2:It,3:vt}});Object.assign(kt,{structure:r,memory:{array:qr},const:!0,slots:{0:Ue}});Object.assign(Ue,{structure:Q});Object.assign(qt,{structure:G,memory:{array:Ir},const:!0,slots:{0:wt,1:At}});Object.assign(It,{structure:J,memory:{array:vr},const:!0,slots:{0:Ut,1:Vt}});Object.assign(vt,{structure:N,memory:{array:xr},const:!0,slots:{0:Pt,1:Rt}});Object.assign(Ve,{slots:{0:xt,1:Et,2:Kt,3:Ct}});Object.assign(xt,{structure:r,memory:{array:Er},const:!0,slots:{0:K}});Object.assign(Et,{structure:s,memory:{array:Kr},const:!0,slots:{0:Pe}});Object.assign(Pe,{structure:n,memory:{array:Cr},const:!0});Object.assign(Kt,{structure:s,memory:{array:Mr},const:!0,slots:{0:Re}});Object.assign(Re,{structure:n,memory:{array:Tr},const:!0});Object.assign(Ct,{structure:s,memory:{array:Dr},const:!0,slots:{0:ke}});Object.assign(ke,{structure:n,memory:{array:Fr},const:!0});Object.assign(qe,{slots:{0:Mt,1:Tt,2:Dt,3:Ft}});Object.assign(Mt,{structure:r,memory:{array:_r},const:!0,slots:{0:Ie}});Object.assign(Ie,{structure:P});Object.assign(Tt,{structure:o,memory:{array:$r},const:!0,slots:{0:ve}});Object.assign(ve,{structure:O,memory:{array:Hr},const:!0});Object.assign(Dt,{structure:o,memory:{array:Lr},const:!0,slots:{0:xe}});Object.assign(xe,{structure:O,memory:{array:Br},const:!0});Object.assign(Ft,{structure:o,memory:{array:Gr},const:!0,slots:{0:Ee}});Object.assign(Ee,{structure:O,memory:{array:Jr},const:!0});Object.assign(Ke,{slots:{0:_t,1:$t,2:Ht,3:Lt}});Object.assign(_t,{structure:r,memory:{array:Nr},const:!0,slots:{0:K}});Object.assign($t,{structure:s,memory:{array:Qr},const:!0,slots:{0:Ce}});Object.assign(Ce,{structure:n,memory:{array:Wr},const:!0});Object.assign(Ht,{structure:s,memory:{array:Xr},const:!0,slots:{0:Me}});Object.assign(Me,{structure:n,memory:{array:Yr},const:!0});Object.assign(Lt,{structure:s,memory:{array:Zr},const:!0,slots:{0:Te}});Object.assign(Te,{structure:n,memory:{array:tn},const:!0});Object.assign(De,{slots:{0:Bt,1:Gt,2:Jt,3:Nt}});Object.assign(Bt,{structure:r,memory:{array:en},const:!0,slots:{0:K}});Object.assign(Gt,{structure:s,memory:{array:sn},const:!0,slots:{0:Fe}});Object.assign(Fe,{structure:n,memory:{array:rn},const:!0});Object.assign(Jt,{structure:s,memory:{array:nn},const:!0,slots:{0:_e}});Object.assign(_e,{structure:n,memory:{array:an},const:!0});Object.assign(Nt,{structure:s,memory:{array:on},const:!0,slots:{0:$e}});Object.assign($e,{structure:n,memory:{array:cn},const:!0});Object.assign(He,{slots:{0:Qt,1:Wt,2:Xt,3:Yt,4:Zt,5:te}});Object.assign(Qt,{structure:B,memory:{array:un},const:!0,slots:{0:jt,1:zt,2:dt,3:ht}});Object.assign(Wt,{structure:W,memory:{array:mn},const:!0,slots:{0:kt,1:qt,2:It,3:vt}});Object.assign(Xt,{structure:X,memory:{array:yn},const:!0,slots:{0:xt,1:Et,2:Kt,3:Ct}});Object.assign(Yt,{structure:Y,memory:{array:bn},const:!0,slots:{0:Mt,1:Tt,2:Dt,3:Ft}});Object.assign(Zt,{structure:Z,memory:{array:ln},const:!0,slots:{0:_t,1:$t,2:Ht,3:Lt}});Object.assign(te,{structure:tt,memory:{array:gn},const:!0,slots:{0:Bt,1:Gt,2:Jt,3:Nt}});Object.assign(Le,{slots:{0:ct}});Object.assign(ct,{structure:o,memory:{array:pn},const:!0,slots:{0:Be}});Object.assign(Be,{structure:O,memory:{array:On},const:!0});Object.assign(Ge,{slots:{0:ee}});Object.assign(ee,{structure:A,memory:{array:fn},const:!0,slots:{0:ct}});Object.assign(Je,{slots:{0:se}});Object.assign(se,{structure:A,memory:{array:Sn},const:!0,slots:{0:ct}});Object.assign(Ne,{slots:{0:Qe,1:Xe,2:Ze,3:es,4:rs,5:ns,6:as}});Object.assign(Qe,{structure:F,memory:{array:jn},const:!0,slots:{0:We}});Object.assign(We,{structure:D,memory:{array:zn},reloc:16778502});Object.assign(Xe,{structure:$,memory:{array:dn},const:!0,slots:{0:Ye}});Object.assign(Ye,{structure:_,memory:{array:hn},reloc:16778523});Object.assign(Ze,{structure:o,memory:{array:wn},const:!0,slots:{0:ts}});Object.assign(ts,{structure:O,memory:{array:An},const:!0});Object.assign(es,{structure:L,memory:{array:Un},const:!0,slots:{0:ss}});Object.assign(ss,{structure:H,memory:{array:Vn},reloc:16778558});Object.assign(rs,{structure:et,memory:{array:Pn},const:!0,slots:{0:Qt,1:Wt,2:Xt,3:Yt,4:Zt,5:te}});Object.assign(ns,{structure:st,memory:{array:Rn},const:!0,slots:{0:ee}});Object.assign(as,{structure:rt,memory:{array:kn},const:!0,slots:{0:se}});Object.assign(os,{slots:{0:is,1:cs}});Object.assign(is,{structure:f,memory:{array:qn},const:!0});Object.assign(cs,{structure:f,memory:{array:In},const:!0});Object.assign(us,{memory:{array:Hs},slots:{0:ms}});Object.assign(ms,{structure:q,memory:{array:Hs,offset:0,length:8},slots:{0:re}});Object.assign(re,{structure:nt,memory:{array:vn},reloc:0});Object.assign(ys,{slots:{0:bs,1:ls,2:gs}});Object.assign(bs,{structure:r,memory:{array:xn},const:!0,slots:{0:ne}});Object.assign(ne,{structure:k});Object.assign(ls,{structure:r,memory:{array:En},const:!0,slots:{0:ae}});Object.assign(ae,{structure:lt});Object.assign(gs,{structure:o,memory:{array:Kn},const:!0,slots:{0:ps}});Object.assign(ps,{structure:O,memory:{array:Cn},const:!0});Object.assign(Os,{memory:{array:ie},slots:{0:fs}});Object.assign(fs,{structure:at,memory:{array:ie},slots:{0:Ss}});Object.assign(Ss,{structure:q,memory:{array:ie,offset:0,length:8},slots:{0:re}});Object.assign(js,{memory:{array:Ls},slots:{0:zs}});Object.assign(zs,{structure:v,memory:{array:Ls,offset:0,length:8},slots:{0:oe}});Object.assign(oe,{structure:ot,memory:{array:Mn},reloc:0});Object.assign(ds,{slots:{0:hs,1:ws,2:As}});Object.assign(hs,{structure:r,memory:{array:Tn},const:!0,slots:{0:ne}});Object.assign(ws,{structure:r,memory:{array:Dn},const:!0,slots:{0:ae}});Object.assign(As,{structure:o,memory:{array:Fn},const:!0,slots:{0:Us}});Object.assign(Us,{structure:O,memory:{array:_n},const:!0});Object.assign(Vs,{memory:{array:ce},slots:{0:Ps}});Object.assign(Ps,{structure:it,memory:{array:ce},slots:{0:Rs}});Object.assign(Rs,{structure:v,memory:{array:ce,offset:0,length:8},slots:{0:oe}});Object.assign(ks,{memory:{array:$n}});Object.assign(qs,{slots:{0:Is}});Object.assign(Is,{structure:h,memory:{array:Hn},const:!0});Object.assign(vs,{slots:{0:xs}});Object.assign(xs,{structure:w,memory:{array:Ln},const:!0});Object.assign(Es,{slots:{0:Ks,1:Ms,2:Ds,3:_s}});Object.assign(Ks,{structure:r,memory:{array:Bn},const:!0,slots:{0:Cs}});Object.assign(Cs,{structure:bt});Object.assign(Ms,{structure:r,memory:{array:Gn},const:!0,slots:{0:Ts}});Object.assign(Ts,{structure:I});Object.assign(Ds,{structure:r,memory:{array:Jn},const:!0,slots:{0:Fs}});Object.assign(Fs,{structure:x});Object.assign(_s,{structure:r,memory:{array:Nn},const:!0,slots:{0:$s}});Object.assign($s,{structure:E});const Qn={argStruct:pt,thunkId:2,name:"createOutput"},Wn={argStruct:ft,thunkId:3,name:"createPartialOutput"};Object.assign(r,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(S,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(D,{...e,type:1,name:"[9:0]u8",length:9,byteSize:10,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(F,{...e,type:13,name:"*const [9:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:D}],methods:[]}});Object.assign(_,{...e,type:1,name:"[17:0]u8",length:17,byteSize:18,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign($,{...e,type:13,name:"*const [17:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[]}});Object.assign(o,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:o}],methods:[]}});Object.assign(O,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(H,{...e,type:1,name:"[107:0]u8",length:107,byteSize:108,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(L,{...e,type:13,name:"*const [107:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[]}});Object.assign(s,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(p,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[]}});Object.assign(n,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:n}],methods:[]}});Object.assign(B,{...e,type:2,name:"Struct1495336213",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:s},{...t,type:7,slot:2,name:"maxValue",structure:s},{...t,type:7,slot:3,name:"defaultValue",structure:s}],methods:[],template:ye}});Object.assign(G,{...e,type:2,name:"Struct738220547",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s}],methods:[],template:pe}});Object.assign(J,{...e,type:2,name:"Struct1537436541",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s}],methods:[],template:Se}});Object.assign(N,{...e,type:2,name:"Struct3083189896",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:s},{...t,type:7,slot:1,name:"1",structure:s}],methods:[],template:de}});Object.assign(Q,{...e,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:p}],methods:[]}});Object.assign(W,{...e,type:2,name:"Struct2844764361",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:G},{...t,type:7,slot:2,name:"maxValue",structure:J},{...t,type:7,slot:3,name:"defaultValue",structure:N}],methods:[],template:Ae}});Object.assign(X,{...e,type:2,name:"Struct1292653519",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:s},{...t,type:7,slot:2,name:"maxValue",structure:s},{...t,type:7,slot:3,name:"defaultValue",structure:s}],methods:[],template:Ve}});Object.assign(P,{...e,name:"i32",byteSize:4,align:4,instance:{members:[{...t,type:2,bitOffset:0,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(Y,{...e,type:2,name:"Struct152411989",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:o},{...t,type:7,slot:2,name:"maxValue",structure:o},{...t,type:7,slot:3,name:"defaultValue",structure:o}],methods:[],template:qe}});Object.assign(Z,{...e,type:2,name:"Struct82611127",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:s},{...t,type:7,slot:2,name:"maxValue",structure:s},{...t,type:7,slot:3,name:"defaultValue",structure:s}],methods:[],template:Ke}});Object.assign(tt,{...e,type:2,name:"Struct2890073165",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:s},{...t,type:7,slot:2,name:"maxValue",structure:s},{...t,type:7,slot:3,name:"defaultValue",structure:s}],methods:[],template:De}});Object.assign(et,{...e,type:2,name:"Struct1880754694",align:1,instance:{members:[{...t,type:7,slot:0,name:"amount",structure:B},{...t,type:7,slot:1,name:"center",structure:W},{...t,type:7,slot:2,name:"focalSize",structure:X},{...t,type:7,slot:3,name:"invert",structure:Y},{...t,type:7,slot:4,name:"vignette",structure:Z},{...t,type:7,slot:5,name:"edgeHardness",structure:tt}],methods:[],template:He}});Object.assign(A,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:o}],methods:[],template:Le}});Object.assign(st,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:7,slot:0,name:"src",structure:A}],methods:[],template:Ge}});Object.assign(rt,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:A}],methods:[],template:Je}});Object.assign(bt,{...e,type:2,name:"zoom-blur-focus.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:F},{...t,type:7,slot:1,name:"vendor",structure:$},{...t,type:7,slot:2,name:"version",structure:o},{...t,type:7,slot:3,name:"description",structure:L},{...t,type:7,slot:4,name:"parameters",structure:et},{...t,type:7,slot:5,name:"inputImages",structure:st},{...t,type:7,slot:6,name:"outputImages",structure:rt}],methods:[],template:Ne}});Object.assign(k,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(nt,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(q,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:nt}],methods:[]}});Object.assign(m,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[]}});Object.assign(f,{...e,type:11,name:"zoom-blur-focus.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:f}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:f},{...t,type:7,slot:1,name:"display-p3",structure:f}],methods:[],template:os}});Object.assign(R,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:R}],methods:[]}});Object.assign(lt,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:p}],methods:[]}});Object.assign(at,{...e,type:2,name:"zoom-blur-focus.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:q},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:f},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:us},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:r},{...t,type:7,slot:1,name:"FPixel",structure:r},{...t,type:7,slot:2,name:"channels",structure:o}],methods:[],template:ys}});Object.assign(I,{...e,type:2,name:"zoom-blur-focus.KernelInput(u8,zoom-blur-focus.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:at}],methods:[],template:Os}});Object.assign(ot,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(v,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:ot}],methods:[]}});Object.assign(it,{...e,type:2,name:"zoom-blur-focus.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:v},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:f},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:js},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:r},{...t,type:7,slot:1,name:"FPixel",structure:r},{...t,type:7,slot:2,name:"channels",structure:o}],methods:[],template:ds}});Object.assign(x,{...e,type:2,name:"zoom-blur-focus.KernelOutput(u8,zoom-blur-focus.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:it}],methods:[],template:Vs}});Object.assign(E,{...e,type:2,name:"zoom-blur-focus.KernelParameters(zoom-blur-focus.kernel)",byteSize:32,align:8,instance:{members:[{...t,type:4,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"amount",structure:p},{...t,type:5,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"center",structure:Q},{...t,type:4,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"focalSize",structure:p},{...t,type:2,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"invert",structure:P},{...t,type:4,bitOffset:160,bitSize:32,byteSize:4,slot:4,name:"vignette",structure:p},{...t,type:4,bitOffset:192,bitSize:32,byteSize:4,slot:5,name:"edgeHardness",structure:p}],methods:[],template:ks}});Object.assign(h,{...e,type:10,name:"ErrorSet545391364",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:h}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:h}],methods:[],template:qs}});Object.assign(gt,{...e,type:9,name:"ErrorSet545391364!zoom-blur-focus.KernelOutput(u8,zoom-blur-focus.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:x},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:h}],methods:[]}});Object.assign(pt,{...e,type:5,name:"createOutput",byteSize:96,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...t,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...t,type:5,isRequired:!0,bitOffset:320,bitSize:192,byteSize:24,slot:0,name:"2",structure:I},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:256,byteSize:32,slot:1,name:"3",structure:E},{...t,type:5,isRequired:!0,bitOffset:512,bitSize:224,byteSize:28,slot:2,name:"retval",structure:gt}],methods:[]}});Object.assign(w,{...e,type:10,name:"ErrorSet2309932075",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:w}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:w}],methods:[],template:vs}});Object.assign(Ot,{...e,type:9,name:"ErrorSet2309932075!zoom-blur-focus.KernelOutput(u8,zoom-blur-focus.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:x},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:w}],methods:[]}});Object.assign(ft,{...e,type:5,name:"createPartialOutput",byteSize:104,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...t,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...t,type:3,isRequired:!0,bitOffset:320,bitSize:32,byteSize:4,slot:5,name:"2",structure:m},{...t,type:3,isRequired:!0,bitOffset:352,bitSize:32,byteSize:4,slot:6,name:"3",structure:m},{...t,type:5,isRequired:!0,bitOffset:384,bitSize:192,byteSize:24,slot:0,name:"4",structure:I},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:256,byteSize:32,slot:1,name:"5",structure:E},{...t,type:5,isRequired:!0,bitOffset:576,bitSize:224,byteSize:28,slot:2,name:"retval",structure:Ot}],methods:[]}});Object.assign(St,{...e,type:2,name:"zoom-blur-focus",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:r},{...t,type:7,slot:1,name:"Input",structure:r},{...t,type:7,slot:2,name:"Output",structure:r},{...t,type:7,slot:3,name:"Parameters",structure:r}],methods:[Qn,Wn],template:Es}});const Xn=[r,S,D,F,_,$,o,O,H,L,s,p,n,B,G,J,N,Q,W,X,P,Y,Z,tt,et,A,st,rt,bt,k,nt,q,m,f,R,lt,at,I,ot,v,it,x,E,h,gt,pt,w,Ot,ft,St],Yn=St,Zn={runtimeSafety:!1,littleEndian:!0},ut=rr();ut.getSpecialExports();ut.recreateStructures(Xn,Zn);const ta=(async()=>{const c=new URL("zoom-blur-focus-6314e43a.wasm",import.meta.url).href;return fetch(c)})();ut.loadModule(ta);ut.linkVariables(!0);const{constructor:ea}=Yn,{createPartialOutput:sa,Input:ra,kernel:yt}=ea;function na(c,y,u,i,a={},j={}){const z=[];for(const[l]of yt.inputImages)z.push(l);const U=[];for(const[l]of yt.outputImages)U.push(l);if(Array.isArray(a)){const l=a;a={};for(const[g,d]of z.entries())a[d]=l[g]}const b=new ra(void 0),C=[];let V;for(const l of z){let g=a[l];if(g||(z.length===1&&["data","width","height"].every(d=>!!a[d])?g=a:C.push(l)),b[l]=g,V){if(g.colorSpace!==V)throw new Error(`Input images must all use the same color space: ${V}`)}else V=g.colorSpace}if(C.length>0)throw new Error(`Missing input image${C.length>1?"s":""}: ${C.join(", ")}`);const mt=sa(c,y,u,i,b,j),ue=l=>{const g={};for(const d of U){const{data:{typedArray:M},width:me,height:Bs}=l[d];let T;if(typeof ImageData=="function"){const Gs=new Uint8ClampedArray(M.buffer,M.byteOffset,M.byteLength);T=new ImageData(Gs,me,i,{colorSpace:V})}else T={data:M,width:me,height:Bs};if(U.length===1)return T;g[d]=T}return g};return mt[Symbol.toStringTag]==="Promise"?mt.then(ue):ue(mt)}function aa(){const c={};for(let[y,u]of yt){if(y==="parameters"){const i={};for(const[a,j]of u){const z=i[a]={};for(let[U,b]of j)typeof b=="object"?b=b.string??b.valueOf():typeof b=="function"&&(b=oa(b.name)),z[U]=b}u=i}else typeof u=="object"&&(u=u.string??u.valueOf());c[y]=u}return c}function oa(c){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[c]}onmessage=async c=>{if(!Array.isArray(c.data))return;const[y,u,...i]=c.data;try{const[a,j]=await ia(y,i);postMessage([y,u,a],{transfer:j})}catch(a){postMessage(["error",u,a])}};async function ia(c,y){switch(c){case"getKernelInfo":return[aa(...y)];case"createPartialImageData":const i=await na(...y),a=[];if("data"in i&&"width"in i&&"height"in i)a.push(i.data.buffer);else for(const j of Object.entries(i))a.push(i.data.buffer);return[i,a];default:throw new Error(`Unknown function: ${c}`)}}postMessage("ready");
