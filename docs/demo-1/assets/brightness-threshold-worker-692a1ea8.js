import{u as ds,a as ws,b as As,c as Us,d as Ps,e as Is,f as Vs,g as Rs,h as ks,i as qs,j as Cs,k as vs,l as Es,m as xs,n as Ks,p as _s,o as Ds,q as Fs,r as Ms,s as Ts}from"./index-58d89d46.js";ds();Cs();vs();ws();As();Es();xs();Ks();_s();Us();Ps();Is();Vs();Ds();Ts();Rs();Fs();ks();qs();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},p={},F={},M={},T={},$={},l={},f={},L={},B={},r={},y={},G={},H={},J={},A={},N={},Q={},W={},X={},Y={},U={},Z={},tt={},et={},st={},rt={},nt={},z={},at={},it={},pt={},V={},ot={},R={},m={},O={},P={},ct={},k={},ut={},q={},mt={},C={},v={},I={},Ot={},ft={},D={},St={},ht={},jt={},Zt={},zt={},te={},dt={},ee={},se={},wt={},re={},At={},Ut={},ne={},ae={},Pt={},ie={},It={},oe={},Vt={},ce={},Rt={},ue={},me={},kt={},E={},qt={},Ct={},ye={},be={},vt={},le={},Et={},ge={},xt={},pe={},Kt={},Oe={},fe={},_t={},Dt={},Ft={},Se={},he={},Mt={},Tt={},$t={},je={},yt={},ze={},de={},Lt={},we={},Bt={},Ae={},Ue={},Pe={},Ie={},Ve={},Re={},ke={},qe={},Ce={},ve={},Ee={},xe={},Ke={},_e={},De={},Fe={},Me={},Gt={},Te={},$e={},Ht={},Le={},Be={},Ge={},He={},Je={},Ne={},Qe={},We={},Jt={},Xe={},Ye={},Ze={},ts={},es={},ss={},rs={},ns={},as={},is={},Nt={},os={},cs={},us={},ms={},ys={},bs={},ls={},gs={},ps={},Os={},$s=new Uint8Array,Ls=new Uint8Array([0,0,0,0,0,0,0,0]),Bs=new Uint8Array,Gs=new Uint8Array([0,0,0,0,0,0,240,63]),Hs=new Uint8Array,Js=new Uint8Array,Ns=new Uint8Array([16,7,0,1]),Qs=new Uint8Array([77,105,110,32,97,110,100,32,109,97,120,32,108,105,109,105,116,115,46,0]),Ws=new Uint8Array,Xs=new Uint8Array([0,0,0,0,0,0,0,0]),Ys=new Uint8Array,Zs=new Uint8Array([0,0,0,0,0,0,0,0]),tr=new Uint8Array,er=new Uint8Array([0,0,0,0,0,0,0,0]),sr=new Uint8Array,rr=new Uint8Array([0,0,0,0,0,0,240,63]),nr=new Uint8Array,ar=new Uint8Array,ir=new Uint8Array([40,7,0,1]),or=new Uint8Array([67,111,108,111,114,32,102,111,114,32,116,104,114,101,115,104,111,108,100,101,100,32,97,114,101,97,46,99,111,108,111,114,70,111,114,65,108,108,80,97,115,115,101,100,65,114,101,97,0]),cr=new Uint8Array,ur=new Uint8Array([0,0,0,0,0,0,240,63]),mr=new Uint8Array,yr=new Uint8Array([0,0,0,0,0,0,240,63]),br=new Uint8Array,lr=new Uint8Array([0,0,0,0,0,0,240,63]),gr=new Uint8Array,pr=new Uint8Array([0,0,0,0,0,0,240,63]),Or=new Uint8Array,fr=new Uint8Array,Sr=new Uint8Array([96,7,0,1]),hr=new Uint8Array([67,111,108,111,114,32,102,111,114,32,97,108,108,32,112,97,115,115,101,100,32,97,114,101,97,0]),jr=new Uint8Array,zr=new Uint8Array,dr=new Uint8Array,wr=new Uint8Array,Ar=new Uint8Array([4]),Ur=new Uint8Array,Pr=new Uint8Array,Ir=new Uint8Array([8,5,0,1]),Vr=new Uint8Array([110,101,116,46,111,110,116,104,101,119,105,110,103,115,46,102,105,108,116,101,114,115,0]),Rr=new Uint8Array([42,5,0,1]),kr=new Uint8Array([65,110,100,121,32,76,105,0]),qr=new Uint8Array,Cr=new Uint8Array([1]),vr=new Uint8Array([67,5,0,1]),Er=new Uint8Array([84,104,114,101,115,104,111,108,100,105,110,103,32,98,97,115,101,115,32,111,110,32,98,114,105,103,104,116,110,101,115,115,46,0]),xr=new Uint8Array,Kr=new Uint8Array,_r=new Uint8Array,Dr=new Uint8Array([0]),Fr=new Uint8Array([1]),fs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Mr=new Uint8Array,Tr=new Uint8Array,$r=new Uint8Array,Lr=new Uint8Array,Br=new Uint8Array([4]),Qt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ss=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Gr=new Uint8Array,Hr=new Uint8Array,Jr=new Uint8Array,Nr=new Uint8Array,Qr=new Uint8Array([4]),Wt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Wr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,0,0,0,0,128,63,0,0,0,0,0,0,0,0]),Xr=new Uint8Array([27,0]),Yr=new Uint8Array,Zr=new Uint8Array,tn=new Uint8Array,en=new Uint8Array;Object.assign(Zt,{slots:{0:zt,1:dt}});Object.assign(zt,{structure:r,memory:{array:$s},slots:{0:te}});Object.assign(te,{structure:y,memory:{array:Ls}});Object.assign(dt,{structure:r,memory:{array:Bs},slots:{0:ee}});Object.assign(ee,{structure:y,memory:{array:Gs}});Object.assign(se,{slots:{0:wt,1:At,2:Ut}});Object.assign(wt,{structure:s,memory:{array:Hs},slots:{0:re}});Object.assign(re,{structure:N});Object.assign(At,{structure:G,memory:{array:Js},slots:{0:zt,1:dt}});Object.assign(Ut,{structure:J,memory:{array:Ns},slots:{0:ne}});Object.assign(ne,{structure:H,memory:{array:Qs},reloc:16779024,const:!0});Object.assign(ae,{slots:{0:Pt,1:It,2:Vt,3:Rt}});Object.assign(Pt,{structure:r,memory:{array:Ws},slots:{0:ie}});Object.assign(ie,{structure:y,memory:{array:Xs}});Object.assign(It,{structure:r,memory:{array:Ys},slots:{0:oe}});Object.assign(oe,{structure:y,memory:{array:Zs}});Object.assign(Vt,{structure:r,memory:{array:tr},slots:{0:ce}});Object.assign(ce,{structure:y,memory:{array:er}});Object.assign(Rt,{structure:r,memory:{array:sr},slots:{0:ue}});Object.assign(ue,{structure:y,memory:{array:rr}});Object.assign(me,{slots:{0:kt,1:qt,2:Ct}});Object.assign(kt,{structure:s,memory:{array:nr},slots:{0:E}});Object.assign(E,{structure:U});Object.assign(qt,{structure:W,memory:{array:ar},slots:{0:Pt,1:It,2:Vt,3:Rt}});Object.assign(Ct,{structure:Y,memory:{array:ir},slots:{0:ye}});Object.assign(ye,{structure:X,memory:{array:or},reloc:16779048,const:!0});Object.assign(be,{slots:{0:vt,1:Et,2:xt,3:Kt}});Object.assign(vt,{structure:r,memory:{array:cr},slots:{0:le}});Object.assign(le,{structure:y,memory:{array:ur}});Object.assign(Et,{structure:r,memory:{array:mr},slots:{0:ge}});Object.assign(ge,{structure:y,memory:{array:yr}});Object.assign(xt,{structure:r,memory:{array:br},slots:{0:pe}});Object.assign(pe,{structure:y,memory:{array:lr}});Object.assign(Kt,{structure:r,memory:{array:gr},slots:{0:Oe}});Object.assign(Oe,{structure:y,memory:{array:pr}});Object.assign(fe,{slots:{0:_t,1:Dt,2:Ft}});Object.assign(_t,{structure:s,memory:{array:Or},slots:{0:E}});Object.assign(Dt,{structure:tt,memory:{array:fr},slots:{0:vt,1:Et,2:xt,3:Kt}});Object.assign(Ft,{structure:st,memory:{array:Sr},slots:{0:Se}});Object.assign(Se,{structure:et,memory:{array:hr},reloc:16779104,const:!0});Object.assign(he,{slots:{0:Mt,1:Tt,2:$t}});Object.assign(Mt,{structure:Q,memory:{array:jr},slots:{0:wt,1:At,2:Ut}});Object.assign(Tt,{structure:Z,memory:{array:zr},slots:{0:kt,1:qt,2:Ct}});Object.assign($t,{structure:rt,memory:{array:dr},slots:{0:_t,1:Dt,2:Ft}});Object.assign(je,{slots:{0:yt}});Object.assign(yt,{structure:l,memory:{array:wr},slots:{0:ze}});Object.assign(ze,{structure:f,memory:{array:Ar}});Object.assign(de,{slots:{0:Lt}});Object.assign(Lt,{structure:z,memory:{array:Ur},slots:{0:yt}});Object.assign(we,{slots:{0:Bt}});Object.assign(Bt,{structure:z,memory:{array:Pr},slots:{0:yt}});Object.assign(Ae,{slots:{0:Ue,1:Ie,2:Re,3:qe,4:ve,5:Ee,6:xe}});Object.assign(Ue,{structure:M,memory:{array:Ir},slots:{0:Pe}});Object.assign(Pe,{structure:F,memory:{array:Vr},reloc:16778504,const:!0});Object.assign(Ie,{structure:$,memory:{array:Rr},slots:{0:Ve}});Object.assign(Ve,{structure:T,memory:{array:kr},reloc:16778538,const:!0});Object.assign(Re,{structure:l,memory:{array:qr},slots:{0:ke}});Object.assign(ke,{structure:f,memory:{array:Cr}});Object.assign(qe,{structure:B,memory:{array:vr},slots:{0:Ce}});Object.assign(Ce,{structure:L,memory:{array:Er},reloc:16778563,const:!0});Object.assign(ve,{structure:nt,memory:{array:xr},slots:{0:Mt,1:Tt,2:$t}});Object.assign(Ee,{structure:at,memory:{array:Kr},slots:{0:Lt}});Object.assign(xe,{structure:it,memory:{array:_r},slots:{0:Bt}});Object.assign(Ke,{slots:{0:_e,1:De}});Object.assign(_e,{structure:O,memory:{array:Dr}});Object.assign(De,{structure:O,memory:{array:Fr}});Object.assign(Fe,{memory:{array:fs},slots:{0:Me}});Object.assign(Me,{structure:R,memory:{array:fs,offset:0,length:8},slots:{0:Gt}});Object.assign(Gt,{structure:ot,memory:{array:Mr},reloc:0,const:!0});Object.assign(Te,{slots:{0:$e,1:Le,2:Be}});Object.assign($e,{structure:s,memory:{array:Tr},slots:{0:Ht}});Object.assign(Ht,{structure:V});Object.assign(Le,{structure:s,memory:{array:$r},slots:{0:E}});Object.assign(Be,{structure:l,memory:{array:Lr},slots:{0:Ge}});Object.assign(Ge,{structure:f,memory:{array:Br}});Object.assign(He,{memory:{array:Qt},slots:{0:Je}});Object.assign(Je,{structure:ct,memory:{array:Qt},slots:{0:Ne}});Object.assign(Ne,{structure:R,memory:{array:Qt,offset:0,length:8},slots:{0:Gt}});Object.assign(Qe,{memory:{array:Ss},slots:{0:We}});Object.assign(We,{structure:q,memory:{array:Ss,offset:0,length:8},slots:{0:Jt}});Object.assign(Jt,{structure:ut,memory:{array:Gr},reloc:0});Object.assign(Xe,{slots:{0:Ye,1:Ze,2:ts}});Object.assign(Ye,{structure:s,memory:{array:Hr},slots:{0:Ht}});Object.assign(Ze,{structure:s,memory:{array:Jr},slots:{0:E}});Object.assign(ts,{structure:l,memory:{array:Nr},slots:{0:es}});Object.assign(es,{structure:f,memory:{array:Qr}});Object.assign(ss,{memory:{array:Wt},slots:{0:rs}});Object.assign(rs,{structure:mt,memory:{array:Wt},slots:{0:ns}});Object.assign(ns,{structure:q,memory:{array:Wt,offset:0,length:8},slots:{0:Jt}});Object.assign(as,{memory:{array:Wr}});Object.assign(is,{slots:{0:Nt}});Object.assign(Nt,{structure:I,memory:{array:Xr}});Object.assign(os,{slots:{0:Nt}});Object.assign(cs,{slots:{0:us,1:ys,2:ls,3:ps}});Object.assign(us,{structure:s,memory:{array:Yr},slots:{0:ms}});Object.assign(ms,{structure:pt});Object.assign(ys,{structure:s,memory:{array:Zr},slots:{0:bs}});Object.assign(bs,{structure:k});Object.assign(ls,{structure:s,memory:{array:tn},slots:{0:gs}});Object.assign(gs,{structure:C});Object.assign(ps,{structure:s,memory:{array:en},slots:{0:Os}});Object.assign(Os,{structure:v});const sn={argStruct:ft,thunkId:2,name:"createOutput"},rn={argStruct:ht,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(p,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(F,{...e,type:1,name:"[22:0]u8",length:22,byteSize:23,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(M,{...e,type:13,name:"*const [22:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(T,{...e,type:1,name:"[7:0]u8",length:7,byteSize:8,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign($,{...e,type:13,name:"*const [7:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[]}});Object.assign(l,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:l}],methods:[]}});Object.assign(f,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(L,{...e,type:1,name:"[33:0]u8",length:33,byteSize:34,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(B,{...e,type:13,name:"*const [33:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[]}});Object.assign(r,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(y,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:y}],methods:[]}});Object.assign(G,{...e,type:2,name:"Struct3223285779",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:r},{...t,type:9,slot:1,name:"1",structure:r}],methods:[],template:Zt}});Object.assign(H,{...e,type:1,name:"[19:0]u8",length:19,byteSize:20,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(J,{...e,type:13,name:"*const [19:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[]}});Object.assign(A,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:A}],methods:[]}});Object.assign(N,{...e,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:A}],methods:[]}});Object.assign(Q,{...e,type:2,name:"Struct3040821119",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"defaultValue",structure:G},{...t,type:9,slot:2,name:"description",structure:J}],methods:[],template:se}});Object.assign(W,{...e,type:2,name:"Struct2874091690",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:r},{...t,type:9,slot:1,name:"1",structure:r},{...t,type:9,slot:2,name:"2",structure:r},{...t,type:9,slot:3,name:"3",structure:r}],methods:[],template:ae}});Object.assign(X,{...e,type:1,name:"[48:0]u8",length:48,byteSize:49,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(Y,{...e,type:13,name:"*const [48:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[]}});Object.assign(U,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:A}],methods:[]}});Object.assign(Z,{...e,type:2,name:"Struct617544428",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"defaultValue",structure:W},{...t,type:9,slot:2,name:"description",structure:Y}],methods:[],template:me}});Object.assign(tt,{...e,type:2,name:"Struct2121898850",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:r},{...t,type:9,slot:1,name:"1",structure:r},{...t,type:9,slot:2,name:"2",structure:r},{...t,type:9,slot:3,name:"3",structure:r}],methods:[],template:be}});Object.assign(et,{...e,type:1,name:"[25:0]u8",length:25,byteSize:26,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(st,{...e,type:13,name:"*const [25:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:et}],methods:[]}});Object.assign(rt,{...e,type:2,name:"Struct1022917282",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:s},{...t,type:9,slot:1,name:"defaultValue",structure:tt},{...t,type:9,slot:2,name:"description",structure:st}],methods:[],template:fe}});Object.assign(nt,{...e,type:2,name:"Struct3519533351",align:1,instance:{members:[{...t,type:9,slot:0,name:"threshold",structure:Q},{...t,type:9,slot:1,name:"outputColor1",structure:Z},{...t,type:9,slot:2,name:"outputColor2",structure:rt}],methods:[],template:he}});Object.assign(z,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:l}],methods:[],template:je}});Object.assign(at,{...e,type:2,name:"Struct4227900966",align:1,instance:{members:[{...t,type:9,slot:0,name:"source",structure:z}],methods:[],template:de}});Object.assign(it,{...e,type:2,name:"Struct1665656598",align:1,instance:{members:[{...t,type:9,slot:0,name:"target",structure:z}],methods:[],template:we}});Object.assign(pt,{...e,type:2,name:"brightness-threshold.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:M},{...t,type:9,slot:1,name:"vendor",structure:$},{...t,type:9,slot:2,name:"version",structure:l},{...t,type:9,slot:3,name:"description",structure:B},{...t,type:9,slot:4,name:"parameters",structure:nt},{...t,type:9,slot:5,name:"inputImages",structure:at},{...t,type:9,slot:6,name:"outputImages",structure:it}],methods:[],template:Ae}});Object.assign(V,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:p}],methods:[]}});Object.assign(ot,{...e,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(R,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:ot}],methods:[]}});Object.assign(m,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[]}});Object.assign(O,{...e,type:11,name:"brightness-threshold.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:O},{...t,type:9,slot:1,name:"display-p3",structure:O}],methods:[],template:Ke}});Object.assign(P,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(ct,{...e,type:2,name:"brightness-threshold.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:R},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:Fe},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:l}],methods:[],template:Te}});Object.assign(k,{...e,type:2,name:"brightness-threshold.KernelInput(u8,brightness-threshold.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"source",structure:ct}],methods:[],template:He}});Object.assign(ut,{...e,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(q,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:ut}],methods:[]}});Object.assign(mt,{...e,type:2,name:"brightness-threshold.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:q},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:Qe},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:s},{...t,type:9,slot:1,name:"FPixel",structure:s},{...t,type:9,slot:2,name:"channels",structure:l}],methods:[],template:Xe}});Object.assign(C,{...e,type:2,name:"brightness-threshold.KernelOutput(u8,brightness-threshold.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"target",structure:mt}],methods:[],template:ss}});Object.assign(v,{...e,type:2,name:"brightness-threshold.KernelParameters(brightness-threshold.kernel)",byteSize:48,align:16,instance:{members:[{...t,type:7,bitOffset:256,bitSize:64,byteSize:8,slot:0,name:"threshold",structure:N},{...t,type:7,bitOffset:0,bitSize:128,byteSize:16,slot:1,name:"outputColor1",structure:U},{...t,type:7,bitOffset:128,bitSize:128,byteSize:16,slot:2,name:"outputColor2",structure:U}],methods:[],template:as}});Object.assign(I,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(brightness-threshold.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:I}],methods:[],template:is}});Object.assign(Ot,{...e,type:9,name:"ErrorSet310723721!brightness-threshold.KernelOutput(u8,brightness-threshold.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:C},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:I}],methods:[]}});Object.assign(ft,{...e,type:5,name:"createOutput",byteSize:112,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:384,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...t,type:3,isRequired:!0,bitOffset:416,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...t,type:7,isRequired:!0,bitOffset:448,bitSize:192,byteSize:24,slot:0,name:"2",structure:k},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:384,byteSize:48,slot:1,name:"3",structure:v},{...t,type:7,isRequired:!0,bitOffset:640,bitSize:224,byteSize:28,slot:2,name:"retval",structure:Ot}],methods:[]}});Object.assign(D,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(brightness-threshold.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:D}],methods:[],template:os}});Object.assign(St,{...e,type:9,name:"ErrorSet1229835588!brightness-threshold.KernelOutput(u8,brightness-threshold.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:C},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:D}],methods:[]}});Object.assign(ht,{...e,type:5,name:"createPartialOutput",byteSize:128,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:384,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...t,type:3,isRequired:!0,bitOffset:416,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...t,type:3,isRequired:!0,bitOffset:448,bitSize:32,byteSize:4,slot:5,name:"2",structure:m},{...t,type:3,isRequired:!0,bitOffset:480,bitSize:32,byteSize:4,slot:6,name:"3",structure:m},{...t,type:7,isRequired:!0,bitOffset:512,bitSize:192,byteSize:24,slot:0,name:"4",structure:k},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:384,byteSize:48,slot:1,name:"5",structure:v},{...t,type:7,isRequired:!0,bitOffset:704,bitSize:224,byteSize:28,slot:2,name:"retval",structure:St}],methods:[]}});Object.assign(jt,{...e,type:2,name:"brightness-threshold",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:s},{...t,type:9,slot:1,name:"Input",structure:s},{...t,type:9,slot:2,name:"Output",structure:s},{...t,type:9,slot:3,name:"Parameters",structure:s}],methods:[sn,rn],template:cs}});const nn=[s,p,F,M,T,$,l,f,L,B,r,y,G,H,J,A,N,Q,W,X,Y,U,Z,tt,et,st,rt,nt,z,at,it,pt,V,ot,R,m,O,P,ct,k,ut,q,mt,C,v,I,Ot,ft,D,St,ht,jt],an=jt,on={runtimeSafety:!1,littleEndian:!0},bt=Ms();bt.getControlObject();bt.recreateStructures(nn,on);const cn=(async()=>{const o=new URL("brightness-threshold-c84751df.wasm",import.meta.url).href;return fetch(o)})();bt.loadModule(cn);bt.linkVariables(!0);const{constructor:un}=an,{createPartialOutput:mn,Input:yn,kernel:gt}=un;function bn(o,c,a,n,i={},S={}){const h=[];for(const[b]of gt.inputImages)h.push(b);const d=[];for(const[b]of gt.outputImages)d.push(b);if(Array.isArray(i)){const b=i;i={};for(const[g,j]of h.entries())i[j]=b[g]}const u=new yn(void 0),x=[];let w;for(const b of h){let g=i[b];if(g||(h.length===1&&["data","width","height"].every(j=>!!i[j])?g=i:x.push(b)),u[b]=g,w){if(g.colorSpace!==w)throw new Error(`Input images must all use the same color space: ${w}`)}else w=g.colorSpace}if(x.length>0)throw new Error(`Missing input image${x.length>1?"s":""}: ${x.join(", ")}`);const lt=mn(o,c,a,n,u,S),Xt=b=>{const g={};for(const j of d){const{data:{typedArray:K},width:Yt,height:js}=b[j];let _;if(typeof ImageData=="function"){const zs=new Uint8ClampedArray(K.buffer,K.byteOffset,K.byteLength);_=new ImageData(zs,Yt,n,{colorSpace:w})}else _={data:K,width:Yt,height:js};if(d.length===1)return _;g[j]=_}return g};return lt[Symbol.toStringTag]==="Promise"?lt.then(Xt):Xt(lt)}function ln(){const o={};for(let[c,a]of gt){if(c==="parameters"){const n={};for(const[i,S]of a){const h=n[i]={};for(let[d,u]of S)typeof u=="object"?"string"in u?u=u.string:u=hs(u):typeof u=="function"&&(u=gn(u.name)),h[d]=u}a=n}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());o[c]=a}return o}function hs(o){const c=[];for(let[a,n]of o)typeof n=="object"&&(n=hs(n)),c[a]=n;return c}function gn(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[c,a,...n]=o.data;pn(c,n).then(([i,S])=>{postMessage([c,a,i],{transfer:S})}).catch(i=>{postMessage(["error",a,i])})};async function pn(o,c){switch(o){case"getKernelInfo":return[ln(...c)];case"createPartialImageData":const n=await bn(...c),i=[];if("data"in n&&"width"in n&&"height"in n)i.push(n.data.buffer);else for(const S of Object.entries(n))i.push(n.data.buffer);return[n,i];default:throw new Error(`Unknown function: ${o}`)}}
