import{u as cs,a as us,b as ms,c as ys,d as bs,e as ls,f as gs,g as ps,h as fs,i as Os,j as Ss,k as js,l as zs,m as hs,n as ds,o as ws,p as As,q as Us}from"./index-270629a1.js";cs();js();zs();us();ms();hs();ds();ws();As();ys();bs();ls();gs();Us();ps();fs();Os();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},O={},D={},F={},T={},_={},l={},S={},$={},L={},r={},p={},o={},B={},G={},H={},J={},N={},A={},Q={},W={},at={},P={},X={},R={},u={},f={},V={},ot={},Y={},q={},Z={},I={},tt={},x={},C={},d={},it={},ct={},w={},ut={},mt={},yt={},$t={},bt={},v={},lt={},Lt={},gt={},Bt={},pt={},Gt={},Ht={},ft={},Ot={},Jt={},St={},Nt={},jt={},Qt={},Wt={},zt={},ht={},Xt={},dt={},Yt={},wt={},Zt={},te={},At={},Ut={},ee={},kt={},se={},Vt={},re={},ne={},Pt={},Rt={},qt={},It={},ae={},et={},oe={},ie={},xt={},ce={},Ct={},ue={},me={},ye={},be={},le={},ge={},pe={},fe={},Oe={},Se={},je={},ze={},he={},de={},we={},Ae={},Ue={},vt={},ke={},Ve={},Et={},Pe={},Mt={},Re={},qe={},Ie={},xe={},Ce={},ve={},Ee={},Kt={},Me={},Ke={},De={},Fe={},Te={},_e={},$e={},Le={},Be={},Ge={},He={},Je={},Ne={},Qe={},We={},Xe={},Ye={},Ze={},ts={},es={},ss={},rs={},ks=new Uint8Array,Vs=new Uint8Array,Ps=new Uint8Array([0,0,0,0,0,0,0,0]),Rs=new Uint8Array,qs=new Uint8Array([0,0,0,0,0,0,240,63]),Is=new Uint8Array,xs=new Uint8Array([90,90,90,90,90,90,218,63]),Cs=new Uint8Array,vs=new Uint8Array,Es=new Uint8Array([0,0,0,0,0,0,0,0]),Ms=new Uint8Array,Ks=new Uint8Array([0,0,0,0,0,0,240,63]),Ds=new Uint8Array,Fs=new Uint8Array([241,240,240,240,240,240,224,63]),Ts=new Uint8Array,_s=new Uint8Array,$s=new Uint8Array([0,0,0,0,0,0,0,0]),Ls=new Uint8Array,Bs=new Uint8Array([0,0,0,0,0,0,240,63]),Gs=new Uint8Array,Hs=new Uint8Array([146,145,145,145,145,145,225,63]),Js=new Uint8Array,Ns=new Uint8Array,Qs=new Uint8Array([0,0,0,0,0,0,0,0]),Ws=new Uint8Array,Xs=new Uint8Array([0,0,0,0,0,0,240,63]),Ys=new Uint8Array,Zs=new Uint8Array([181,180,180,180,180,180,228,63]),tr=new Uint8Array,er=new Uint8Array,sr=new Uint8Array,rr=new Uint8Array,nr=new Uint8Array,ar=new Uint8Array([4]),or=new Uint8Array,ir=new Uint8Array,cr=new Uint8Array([10,5,0,1]),ur=new Uint8Array([109,101,46,99,111,115,109,111,100,114,111,46,102,105,108,116,101,114,115,0]),mr=new Uint8Array([41,5,0,1]),yr=new Uint8Array([83,116,101,118,101,32,83,104,105,112,109,97,110,0]),br=new Uint8Array,lr=new Uint8Array([1]),gr=new Uint8Array([72,5,0,1]),pr=new Uint8Array([83,107,105,110,32,67,111,108,111,114,32,102,105,108,116,101,114,0]),fr=new Uint8Array,Or=new Uint8Array,Sr=new Uint8Array,jr=new Uint8Array([0]),zr=new Uint8Array([1]),ns=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),hr=new Uint8Array,dr=new Uint8Array,wr=new Uint8Array,Ar=new Uint8Array,Ur=new Uint8Array([4]),Dt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),as=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),kr=new Uint8Array,Vr=new Uint8Array,Pr=new Uint8Array,Rr=new Uint8Array,qr=new Uint8Array([4]),Ft=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ir=new Uint8Array([211,210,210,62,136,135,7,63,141,140,12,63,166,165,37,63]),xr=new Uint8Array([27,0]),Cr=new Uint8Array([27,0]),vr=new Uint8Array,Er=new Uint8Array,Mr=new Uint8Array,Kr=new Uint8Array;Object.assign($t,{slots:{0:bt,1:lt,2:gt,3:pt}});Object.assign(bt,{structure:s,memory:{array:ks},const:!0,slots:{0:v}});Object.assign(v,{structure:p});Object.assign(lt,{structure:r,memory:{array:Vs},const:!0,slots:{0:Lt}});Object.assign(Lt,{structure:o,memory:{array:Ps},const:!0});Object.assign(gt,{structure:r,memory:{array:Rs},const:!0,slots:{0:Bt}});Object.assign(Bt,{structure:o,memory:{array:qs},const:!0});Object.assign(pt,{structure:r,memory:{array:Is},const:!0,slots:{0:Gt}});Object.assign(Gt,{structure:o,memory:{array:xs},const:!0});Object.assign(Ht,{slots:{0:ft,1:Ot,2:St,3:jt}});Object.assign(ft,{structure:s,memory:{array:Cs},const:!0,slots:{0:v}});Object.assign(Ot,{structure:r,memory:{array:vs},const:!0,slots:{0:Jt}});Object.assign(Jt,{structure:o,memory:{array:Es},const:!0});Object.assign(St,{structure:r,memory:{array:Ms},const:!0,slots:{0:Nt}});Object.assign(Nt,{structure:o,memory:{array:Ks},const:!0});Object.assign(jt,{structure:r,memory:{array:Ds},const:!0,slots:{0:Qt}});Object.assign(Qt,{structure:o,memory:{array:Fs},const:!0});Object.assign(Wt,{slots:{0:zt,1:ht,2:dt,3:wt}});Object.assign(zt,{structure:s,memory:{array:Ts},const:!0,slots:{0:v}});Object.assign(ht,{structure:r,memory:{array:_s},const:!0,slots:{0:Xt}});Object.assign(Xt,{structure:o,memory:{array:$s},const:!0});Object.assign(dt,{structure:r,memory:{array:Ls},const:!0,slots:{0:Yt}});Object.assign(Yt,{structure:o,memory:{array:Bs},const:!0});Object.assign(wt,{structure:r,memory:{array:Gs},const:!0,slots:{0:Zt}});Object.assign(Zt,{structure:o,memory:{array:Hs},const:!0});Object.assign(te,{slots:{0:At,1:Ut,2:kt,3:Vt}});Object.assign(At,{structure:s,memory:{array:Js},const:!0,slots:{0:v}});Object.assign(Ut,{structure:r,memory:{array:Ns},const:!0,slots:{0:ee}});Object.assign(ee,{structure:o,memory:{array:Qs},const:!0});Object.assign(kt,{structure:r,memory:{array:Ws},const:!0,slots:{0:se}});Object.assign(se,{structure:o,memory:{array:Xs},const:!0});Object.assign(Vt,{structure:r,memory:{array:Ys},const:!0,slots:{0:re}});Object.assign(re,{structure:o,memory:{array:Zs},const:!0});Object.assign(ne,{slots:{0:Pt,1:Rt,2:qt,3:It}});Object.assign(Pt,{structure:B,memory:{array:tr},const:!0,slots:{0:bt,1:lt,2:gt,3:pt}});Object.assign(Rt,{structure:G,memory:{array:er},const:!0,slots:{0:ft,1:Ot,2:St,3:jt}});Object.assign(qt,{structure:H,memory:{array:sr},const:!0,slots:{0:zt,1:ht,2:dt,3:wt}});Object.assign(It,{structure:J,memory:{array:rr},const:!0,slots:{0:At,1:Ut,2:kt,3:Vt}});Object.assign(ae,{slots:{0:et}});Object.assign(et,{structure:l,memory:{array:nr},const:!0,slots:{0:oe}});Object.assign(oe,{structure:S,memory:{array:ar},const:!0});Object.assign(ie,{slots:{0:xt}});Object.assign(xt,{structure:A,memory:{array:or},const:!0,slots:{0:et}});Object.assign(ce,{slots:{0:Ct}});Object.assign(Ct,{structure:A,memory:{array:ir},const:!0,slots:{0:et}});Object.assign(ue,{slots:{0:me,1:be,2:ge,3:fe,4:Se,5:je,6:ze}});Object.assign(me,{structure:F,memory:{array:cr},const:!0,slots:{0:ye}});Object.assign(ye,{structure:D,memory:{array:ur},reloc:16778506});Object.assign(be,{structure:_,memory:{array:mr},const:!0,slots:{0:le}});Object.assign(le,{structure:T,memory:{array:yr},reloc:16778537});Object.assign(ge,{structure:l,memory:{array:br},const:!0,slots:{0:pe}});Object.assign(pe,{structure:S,memory:{array:lr},const:!0});Object.assign(fe,{structure:L,memory:{array:gr},const:!0,slots:{0:Oe}});Object.assign(Oe,{structure:$,memory:{array:pr},reloc:16778568});Object.assign(Se,{structure:N,memory:{array:fr},const:!0,slots:{0:Pt,1:Rt,2:qt,3:It}});Object.assign(je,{structure:Q,memory:{array:Or},const:!0,slots:{0:xt}});Object.assign(ze,{structure:W,memory:{array:Sr},const:!0,slots:{0:Ct}});Object.assign(he,{slots:{0:de,1:we}});Object.assign(de,{structure:f,memory:{array:jr},const:!0});Object.assign(we,{structure:f,memory:{array:zr},const:!0});Object.assign(Ae,{memory:{array:ns},slots:{0:Ue}});Object.assign(Ue,{structure:R,memory:{array:ns,offset:0,length:8},slots:{0:vt}});Object.assign(vt,{structure:X,memory:{array:hr},reloc:0});Object.assign(ke,{slots:{0:Ve,1:Pe,2:Re}});Object.assign(Ve,{structure:s,memory:{array:dr},const:!0,slots:{0:Et}});Object.assign(Et,{structure:P});Object.assign(Pe,{structure:s,memory:{array:wr},const:!0,slots:{0:Mt}});Object.assign(Mt,{structure:ot});Object.assign(Re,{structure:l,memory:{array:Ar},const:!0,slots:{0:qe}});Object.assign(qe,{structure:S,memory:{array:Ur},const:!0});Object.assign(Ie,{memory:{array:Dt},slots:{0:xe}});Object.assign(xe,{structure:Y,memory:{array:Dt},slots:{0:Ce}});Object.assign(Ce,{structure:R,memory:{array:Dt,offset:0,length:8},slots:{0:vt}});Object.assign(ve,{memory:{array:as},slots:{0:Ee}});Object.assign(Ee,{structure:I,memory:{array:as,offset:0,length:8},slots:{0:Kt}});Object.assign(Kt,{structure:Z,memory:{array:kr},reloc:0});Object.assign(Me,{slots:{0:Ke,1:De,2:Fe}});Object.assign(Ke,{structure:s,memory:{array:Vr},const:!0,slots:{0:Et}});Object.assign(De,{structure:s,memory:{array:Pr},const:!0,slots:{0:Mt}});Object.assign(Fe,{structure:l,memory:{array:Rr},const:!0,slots:{0:Te}});Object.assign(Te,{structure:S,memory:{array:qr},const:!0});Object.assign(_e,{memory:{array:Ft},slots:{0:$e}});Object.assign($e,{structure:tt,memory:{array:Ft},slots:{0:Le}});Object.assign(Le,{structure:I,memory:{array:Ft,offset:0,length:8},slots:{0:Kt}});Object.assign(Be,{memory:{array:Ir}});Object.assign(Ge,{slots:{0:He}});Object.assign(He,{structure:d,memory:{array:xr},const:!0});Object.assign(Je,{slots:{0:Ne}});Object.assign(Ne,{structure:w,memory:{array:Cr},const:!0});Object.assign(Qe,{slots:{0:We,1:Ye,2:ts,3:ss}});Object.assign(We,{structure:s,memory:{array:vr},const:!0,slots:{0:Xe}});Object.assign(Xe,{structure:at});Object.assign(Ye,{structure:s,memory:{array:Er},const:!0,slots:{0:Ze}});Object.assign(Ze,{structure:q});Object.assign(ts,{structure:s,memory:{array:Mr},const:!0,slots:{0:es}});Object.assign(es,{structure:x});Object.assign(ss,{structure:s,memory:{array:Kr},const:!0,slots:{0:rs}});Object.assign(rs,{structure:C});const Dr={argStruct:ct,thunkId:2,name:"createOutput"},Fr={argStruct:mt,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(O,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(D,{...e,type:1,name:"[19:0]u8",length:19,byteSize:20,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(F,{...e,type:13,name:"*const [19:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:D}],methods:[]}});Object.assign(T,{...e,type:1,name:"[13:0]u8",length:13,byteSize:14,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(_,{...e,type:13,name:"*const [13:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[]}});Object.assign(l,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:l}],methods:[]}});Object.assign(S,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign($,{...e,type:1,name:"[17:0]u8",length:17,byteSize:18,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(L,{...e,type:13,name:"*const [17:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[]}});Object.assign(r,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(p,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[]}});Object.assign(o,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:o}],methods:[]}});Object.assign(B,{...e,type:2,name:"Struct2361882108",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:r},{...t,type:7,slot:2,name:"maxValue",structure:r},{...t,type:7,slot:3,name:"defaultValue",structure:r}],methods:[],template:$t}});Object.assign(G,{...e,type:2,name:"Struct2591150647",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:r},{...t,type:7,slot:2,name:"maxValue",structure:r},{...t,type:7,slot:3,name:"defaultValue",structure:r}],methods:[],template:Ht}});Object.assign(H,{...e,type:2,name:"Struct3344065547",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:r},{...t,type:7,slot:2,name:"maxValue",structure:r},{...t,type:7,slot:3,name:"defaultValue",structure:r}],methods:[],template:Wt}});Object.assign(J,{...e,type:2,name:"Struct3756800795",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:r},{...t,type:7,slot:2,name:"maxValue",structure:r},{...t,type:7,slot:3,name:"defaultValue",structure:r}],methods:[],template:te}});Object.assign(N,{...e,type:2,name:"Struct2131766377",align:1,instance:{members:[{...t,type:7,slot:0,name:"CbMin",structure:B},{...t,type:7,slot:1,name:"CbMax",structure:G},{...t,type:7,slot:2,name:"CrMin",structure:H},{...t,type:7,slot:3,name:"CrMax",structure:J}],methods:[],template:ne}});Object.assign(A,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:l}],methods:[],template:ae}});Object.assign(Q,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:7,slot:0,name:"src",structure:A}],methods:[],template:ie}});Object.assign(W,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:A}],methods:[],template:ce}});Object.assign(at,{...e,type:2,name:"skin-color-filter.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:F},{...t,type:7,slot:1,name:"vendor",structure:_},{...t,type:7,slot:2,name:"version",structure:l},{...t,type:7,slot:3,name:"description",structure:L},{...t,type:7,slot:4,name:"parameters",structure:N},{...t,type:7,slot:5,name:"inputImages",structure:Q},{...t,type:7,slot:6,name:"outputImages",structure:W}],methods:[],template:ue}});Object.assign(P,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(X,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(R,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:X}],methods:[]}});Object.assign(u,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:u}],methods:[]}});Object.assign(f,{...e,type:11,name:"skin-color-filter.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:f}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:f},{...t,type:7,slot:1,name:"display-p3",structure:f}],methods:[],template:he}});Object.assign(V,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(ot,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:p}],methods:[]}});Object.assign(Y,{...e,type:2,name:"skin-color-filter.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:R},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:f},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:Ae},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:l}],methods:[],template:ke}});Object.assign(q,{...e,type:2,name:"skin-color-filter.KernelInput(u8,skin-color-filter.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:Y}],methods:[],template:Ie}});Object.assign(Z,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(I,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:Z}],methods:[]}});Object.assign(tt,{...e,type:2,name:"skin-color-filter.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:I},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:f},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:V}],methods:[],template:ve},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:l}],methods:[],template:Me}});Object.assign(x,{...e,type:2,name:"skin-color-filter.KernelOutput(u8,skin-color-filter.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:tt}],methods:[],template:_e}});Object.assign(C,{...e,type:2,name:"skin-color-filter.KernelParameters(skin-color-filter.kernel)",byteSize:16,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"CbMin",structure:p},{...t,type:4,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"CbMax",structure:p},{...t,type:4,bitOffset:64,bitSize:32,byteSize:4,slot:2,name:"CrMin",structure:p},{...t,type:4,bitOffset:96,bitSize:32,byteSize:4,slot:3,name:"CrMax",structure:p}],methods:[],template:Be}});Object.assign(d,{...e,type:10,name:"ErrorSet3558221809",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:d}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:d}],methods:[],template:Ge}});Object.assign(it,{...e,type:9,name:"ErrorSet3558221809!skin-color-filter.KernelOutput(u8,skin-color-filter.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:x},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:d}],methods:[]}});Object.assign(ct,{...e,type:5,name:"createOutput",byteSize:76,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...t,type:5,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:q},{...t,type:5,isRequired:!0,bitOffset:256,bitSize:128,byteSize:16,slot:1,name:"3",structure:C},{...t,type:5,isRequired:!0,bitOffset:384,bitSize:224,byteSize:28,slot:2,name:"retval",structure:it}],methods:[]}});Object.assign(w,{...e,type:10,name:"ErrorSet3201149335",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:w}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:w}],methods:[],template:Je}});Object.assign(ut,{...e,type:9,name:"ErrorSet3201149335!skin-color-filter.KernelOutput(u8,skin-color-filter.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:x},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:w}],methods:[]}});Object.assign(mt,{...e,type:5,name:"createPartialOutput",byteSize:84,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:u},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:u},{...t,type:5,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:q},{...t,type:5,isRequired:!0,bitOffset:320,bitSize:128,byteSize:16,slot:1,name:"5",structure:C},{...t,type:5,isRequired:!0,bitOffset:448,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ut}],methods:[]}});Object.assign(yt,{...e,type:2,name:"skin-color-filter",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:s},{...t,type:7,slot:1,name:"Input",structure:s},{...t,type:7,slot:2,name:"Output",structure:s},{...t,type:7,slot:3,name:"Parameters",structure:s}],methods:[Dr,Fr],template:Qe}});const Tr=[s,O,D,F,T,_,l,S,$,L,r,p,o,B,G,H,J,N,A,Q,W,at,P,X,R,u,f,V,ot,Y,q,Z,I,tt,x,C,d,it,ct,w,ut,mt,yt],_r=yt,$r={runtimeSafety:!1,littleEndian:!0},st=Ss();st.getSpecialExports();st.recreateStructures(Tr,$r);const Lr=(async()=>{const i=new URL("skin-color-filter-7d58333c.wasm",import.meta.url).href;return fetch(i)})();st.loadModule(Lr);st.linkVariables(!0);const{constructor:Br}=_r,{createPartialOutput:Gr,Input:Hr,kernel:nt}=Br;function Jr(i,m,c,a,n={},j={}){const z=[];for(const[b]of nt.inputImages)z.push(b);const U=[];for(const[b]of nt.outputImages)U.push(b);if(Array.isArray(n)){const b=n;n={};for(const[g,h]of z.entries())n[h]=b[g]}const y=new Hr(void 0),E=[];let k;for(const b of z){let g=n[b];if(g||(z.length===1&&["data","width","height"].every(h=>!!n[h])?g=n:E.push(b)),y[b]=g,k){if(g.colorSpace!==k)throw new Error(`Input images must all use the same color space: ${k}`)}else k=g.colorSpace}if(E.length>0)throw new Error(`Missing input image${E.length>1?"s":""}: ${E.join(", ")}`);const rt=Gr(i,m,c,a,y,j),Tt=b=>{const g={};for(const h of U){const{data:{typedArray:M},width:_t,height:os}=b[h];let K;if(typeof ImageData=="function"){const is=new Uint8ClampedArray(M.buffer,M.byteOffset,M.byteLength);K=new ImageData(is,_t,a,{colorSpace:k})}else K={data:M,width:_t,height:os};if(U.length===1)return K;g[h]=K}return g};return rt[Symbol.toStringTag]==="Promise"?rt.then(Tt):Tt(rt)}function Nr(){const i={};for(let[m,c]of nt){if(m==="parameters"){const a={};for(const[n,j]of c){const z=a[n]={};for(let[U,y]of j)typeof y=="object"?y=y.string??y.valueOf():typeof y=="function"&&(y=Qr(y.name)),z[U]=y}c=a}else typeof c=="object"&&(c=c.string??c.valueOf());i[m]=c}return i}function Qr(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[m,c,...a]=i.data;Wr(m,a).then(([n,j])=>{postMessage([m,c,n],{transfer:j})}).catch(n=>{postMessage(["error",c,n])})};async function Wr(i,m){switch(i){case"getKernelInfo":return[Nr(...m)];case"createPartialImageData":const a=await Jr(...m),n=[];if("data"in a&&"width"in a&&"height"in a)n.push(a.data.buffer);else for(const j of Object.entries(a))n.push(a.data.buffer);return[a,n];default:throw new Error(`Unknown function: ${i}`)}}
