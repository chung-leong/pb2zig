import{u as bs,a as ls,b as gs,c as ps,d as fs,e as Os,f as Ss,g as js,h as zs,i as hs,j as ds,k as ws,l as As,m as Us,n as Ps,p as Vs,o as Is,q as qs,r as Rs,s as ks}from"./index-58d89d46.js";bs();ds();ws();ls();gs();As();Us();Ps();Vs();ps();fs();Os();Ss();Is();ks();js();qs();zs();hs();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},r={},O={},D={},F={},M={},T={},l={},S={},$={},L={},s={},c={},B={},G={},H={},f={},J={},N={},d={},Q={},w={},W={},X={},mt={},I={},Y={},q={},y={},p={},P={},yt={},Z={},R={},tt={},k={},et={},v={},E={},V={},bt={},lt={},_={},gt={},pt={},ft={},Bt={},Ot={},Gt={},St={},Ht={},jt={},Jt={},Nt={},zt={},Qt={},ht={},Wt={},dt={},Xt={},Yt={},wt={},Zt={},At={},te={},Ut={},ee={},se={},Pt={},re={},Vt={},It={},qt={},ae={},st={},ne={},rt={},ie={},at={},oe={},nt={},ce={},ue={},Rt={},kt={},vt={},me={},it={},ye={},be={},Et={},le={},xt={},ge={},pe={},fe={},Oe={},Se={},je={},ze={},he={},de={},we={},Ae={},Ue={},Pe={},Ve={},Ie={},qe={},Re={},Ct={},ke={},ve={},Kt={},Ee={},_t={},xe={},Ce={},Ke={},_e={},De={},Fe={},Me={},Dt={},Te={},$e={},Le={},Be={},Ge={},He={},Je={},Ne={},Qe={},We={},Ft={},Xe={},Ye={},Ze={},ts={},es={},ss={},rs={},as={},ns={},is={},vs=new Uint8Array,Es=new Uint8Array([0,0,0,0,0,0,240,191]),xs=new Uint8Array,Cs=new Uint8Array([0,0,0,0,0,0,240,191]),Ks=new Uint8Array,_s=new Uint8Array([0,0,0,0,0,0,89,192]),Ds=new Uint8Array,Fs=new Uint8Array([0,0,0,0,0,0,240,63]),Ms=new Uint8Array,Ts=new Uint8Array([0,0,0,0,0,0,240,63]),$s=new Uint8Array,Ls=new Uint8Array([0,0,0,0,0,0,89,64]),Bs=new Uint8Array,Gs=new Uint8Array([57,180,200,118,190,159,230,63]),Hs=new Uint8Array,Js=new Uint8Array([57,180,200,118,190,159,230,191]),Ns=new Uint8Array,Qs=new Uint8Array([0,0,0,0,0,0,62,64]),Ws=new Uint8Array,Xs=new Uint8Array,Ys=new Uint8Array,Zs=new Uint8Array,tr=new Uint8Array,er=new Uint8Array,sr=new Uint8Array([0,0,0,0,0,0,0,0]),rr=new Uint8Array,ar=new Uint8Array([0,0,0,0,0,0,36,64]),nr=new Uint8Array,ir=new Uint8Array([0,0,0,0,0,0,240,63]),or=new Uint8Array,cr=new Uint8Array,ur=new Uint8Array,mr=new Uint8Array,yr=new Uint8Array([4]),br=new Uint8Array,lr=new Uint8Array,gr=new Uint8Array([2,5,0,1]),pr=new Uint8Array([70,111,99,117,115,105,110,103,76,105,110,101,97,114,66,108,117,114,0]),fr=new Uint8Array([32,5,0,1]),Or=new Uint8Array([80,101,116,114,105,32,76,101,115,107,105,110,101,110,0]),Sr=new Uint8Array,jr=new Uint8Array([1]),zr=new Uint8Array([64,5,0,1]),hr=new Uint8Array([108,105,110,101,97,114,32,98,108,117,114,32,98,121,32,97,32,108,105,110,101,32,101,113,117,97,116,105,111,110,0]),dr=new Uint8Array,wr=new Uint8Array,Ar=new Uint8Array,Ur=new Uint8Array([0]),Pr=new Uint8Array([1]),os=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Vr=new Uint8Array,Ir=new Uint8Array,qr=new Uint8Array,Rr=new Uint8Array,kr=new Uint8Array([4]),Mt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),cs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),vr=new Uint8Array,Er=new Uint8Array,xr=new Uint8Array,Cr=new Uint8Array,Kr=new Uint8Array([4]),Tt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),_r=new Uint8Array([244,253,52,63,244,253,52,191,0,0,240,65,0,0,0,0,0,0,128,63,0,0,128,63,0,0,0,0,0,0,0,0]),Dr=new Uint8Array([27,0]),Fr=new Uint8Array,Mr=new Uint8Array,Tr=new Uint8Array,$r=new Uint8Array;Object.assign(Bt,{slots:{0:Ot,1:St,2:jt}});Object.assign(Ot,{structure:s,memory:{array:vs},slots:{0:Gt}});Object.assign(Gt,{structure:c,memory:{array:Es}});Object.assign(St,{structure:s,memory:{array:xs},slots:{0:Ht}});Object.assign(Ht,{structure:c,memory:{array:Cs}});Object.assign(jt,{structure:s,memory:{array:Ks},slots:{0:Jt}});Object.assign(Jt,{structure:c,memory:{array:_s}});Object.assign(Nt,{slots:{0:zt,1:ht,2:dt}});Object.assign(zt,{structure:s,memory:{array:Ds},slots:{0:Qt}});Object.assign(Qt,{structure:c,memory:{array:Fs}});Object.assign(ht,{structure:s,memory:{array:Ms},slots:{0:Wt}});Object.assign(Wt,{structure:c,memory:{array:Ts}});Object.assign(dt,{structure:s,memory:{array:$s},slots:{0:Xt}});Object.assign(Xt,{structure:c,memory:{array:Ls}});Object.assign(Yt,{slots:{0:wt,1:At,2:Ut}});Object.assign(wt,{structure:s,memory:{array:Bs},slots:{0:Zt}});Object.assign(Zt,{structure:c,memory:{array:Gs}});Object.assign(At,{structure:s,memory:{array:Hs},slots:{0:te}});Object.assign(te,{structure:c,memory:{array:Js}});Object.assign(Ut,{structure:s,memory:{array:Ns},slots:{0:ee}});Object.assign(ee,{structure:c,memory:{array:Qs}});Object.assign(se,{slots:{0:Pt,1:Vt,2:It,3:qt}});Object.assign(Pt,{structure:r,memory:{array:Ws},slots:{0:re}});Object.assign(re,{structure:J});Object.assign(Vt,{structure:B,memory:{array:Xs},slots:{0:Ot,1:St,2:jt}});Object.assign(It,{structure:G,memory:{array:Ys},slots:{0:zt,1:ht,2:dt}});Object.assign(qt,{structure:H,memory:{array:Zs},slots:{0:wt,1:At,2:Ut}});Object.assign(ae,{slots:{0:st,1:rt,2:at,3:nt}});Object.assign(st,{structure:r,memory:{array:tr},slots:{0:ne}});Object.assign(ne,{structure:f});Object.assign(rt,{structure:s,memory:{array:er},slots:{0:ie}});Object.assign(ie,{structure:c,memory:{array:sr}});Object.assign(at,{structure:s,memory:{array:rr},slots:{0:oe}});Object.assign(oe,{structure:c,memory:{array:ar}});Object.assign(nt,{structure:s,memory:{array:nr},slots:{0:ce}});Object.assign(ce,{structure:c,memory:{array:ir}});Object.assign(ue,{slots:{0:Rt,1:kt,2:vt}});Object.assign(Rt,{structure:N,memory:{array:or},slots:{0:Pt,1:Vt,2:It,3:qt}});Object.assign(kt,{structure:d,memory:{array:cr},slots:{0:st,1:rt,2:at,3:nt}});Object.assign(vt,{structure:d,memory:{array:ur},slots:{0:st,1:rt,2:at,3:nt}});Object.assign(me,{slots:{0:it}});Object.assign(it,{structure:l,memory:{array:mr},slots:{0:ye}});Object.assign(ye,{structure:S,memory:{array:yr}});Object.assign(be,{slots:{0:Et}});Object.assign(Et,{structure:w,memory:{array:br},slots:{0:it}});Object.assign(le,{slots:{0:xt}});Object.assign(xt,{structure:w,memory:{array:lr},slots:{0:it}});Object.assign(ge,{slots:{0:pe,1:Oe,2:je,3:he,4:we,5:Ae,6:Ue}});Object.assign(pe,{structure:F,memory:{array:gr},slots:{0:fe}});Object.assign(fe,{structure:D,memory:{array:pr},reloc:16778498,const:!0});Object.assign(Oe,{structure:T,memory:{array:fr},slots:{0:Se}});Object.assign(Se,{structure:M,memory:{array:Or},reloc:16778528,const:!0});Object.assign(je,{structure:l,memory:{array:Sr},slots:{0:ze}});Object.assign(ze,{structure:S,memory:{array:jr}});Object.assign(he,{structure:L,memory:{array:zr},slots:{0:de}});Object.assign(de,{structure:$,memory:{array:hr},reloc:16778560,const:!0});Object.assign(we,{structure:Q,memory:{array:dr},slots:{0:Rt,1:kt,2:vt}});Object.assign(Ae,{structure:W,memory:{array:wr},slots:{0:Et}});Object.assign(Ue,{structure:X,memory:{array:Ar},slots:{0:xt}});Object.assign(Pe,{slots:{0:Ve,1:Ie}});Object.assign(Ve,{structure:p,memory:{array:Ur}});Object.assign(Ie,{structure:p,memory:{array:Pr}});Object.assign(qe,{memory:{array:os},slots:{0:Re}});Object.assign(Re,{structure:q,memory:{array:os,offset:0,length:8},slots:{0:Ct}});Object.assign(Ct,{structure:Y,memory:{array:Vr},reloc:0,const:!0});Object.assign(ke,{slots:{0:ve,1:Ee,2:xe}});Object.assign(ve,{structure:r,memory:{array:Ir},slots:{0:Kt}});Object.assign(Kt,{structure:I});Object.assign(Ee,{structure:r,memory:{array:qr},slots:{0:_t}});Object.assign(_t,{structure:yt});Object.assign(xe,{structure:l,memory:{array:Rr},slots:{0:Ce}});Object.assign(Ce,{structure:S,memory:{array:kr}});Object.assign(Ke,{memory:{array:Mt},slots:{0:_e}});Object.assign(_e,{structure:Z,memory:{array:Mt},slots:{0:De}});Object.assign(De,{structure:q,memory:{array:Mt,offset:0,length:8},slots:{0:Ct}});Object.assign(Fe,{memory:{array:cs},slots:{0:Me}});Object.assign(Me,{structure:k,memory:{array:cs,offset:0,length:8},slots:{0:Dt}});Object.assign(Dt,{structure:tt,memory:{array:vr},reloc:0});Object.assign(Te,{slots:{0:$e,1:Le,2:Be}});Object.assign($e,{structure:r,memory:{array:Er},slots:{0:Kt}});Object.assign(Le,{structure:r,memory:{array:xr},slots:{0:_t}});Object.assign(Be,{structure:l,memory:{array:Cr},slots:{0:Ge}});Object.assign(Ge,{structure:S,memory:{array:Kr}});Object.assign(He,{memory:{array:Tt},slots:{0:Je}});Object.assign(Je,{structure:et,memory:{array:Tt},slots:{0:Ne}});Object.assign(Ne,{structure:k,memory:{array:Tt,offset:0,length:8},slots:{0:Dt}});Object.assign(Qe,{memory:{array:_r}});Object.assign(We,{slots:{0:Ft}});Object.assign(Ft,{structure:V,memory:{array:Dr}});Object.assign(Xe,{slots:{0:Ft}});Object.assign(Ye,{slots:{0:Ze,1:es,2:rs,3:ns}});Object.assign(Ze,{structure:r,memory:{array:Fr},slots:{0:ts}});Object.assign(ts,{structure:mt});Object.assign(es,{structure:r,memory:{array:Mr},slots:{0:ss}});Object.assign(ss,{structure:R});Object.assign(rs,{structure:r,memory:{array:Tr},slots:{0:as}});Object.assign(as,{structure:v});Object.assign(ns,{structure:r,memory:{array:$r},slots:{0:is}});Object.assign(is,{structure:E});const Lr={argStruct:lt,thunkId:2,name:"createOutput"},Br={argStruct:pt,thunkId:3,name:"createPartialOutput"};Object.assign(r,{...e,name:"type",align:1,instance:{members:[{...t,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(O,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(D,{...e,type:1,name:"[18:0]u8",length:18,byteSize:19,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(F,{...e,type:13,name:"*const [18:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:D}],methods:[]}});Object.assign(M,{...e,type:1,name:"[14:0]u8",length:14,byteSize:15,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(T,{...e,type:13,name:"*const [14:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[]}});Object.assign(l,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:l}],methods:[]}});Object.assign(S,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign($,{...e,type:1,name:"[30:0]u8",length:30,byteSize:31,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(L,{...e,type:13,name:"*const [30:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[]}});Object.assign(s,{...e,name:"comptime_float",align:1,instance:{members:[{...t,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(c,{...e,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:c}],methods:[]}});Object.assign(B,{...e,type:2,name:"Struct1228912940",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:s},{...t,type:9,slot:1,name:"1",structure:s},{...t,type:9,slot:2,name:"2",structure:s}],methods:[],template:Bt}});Object.assign(G,{...e,type:2,name:"Struct2233907836",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:s},{...t,type:9,slot:1,name:"1",structure:s},{...t,type:9,slot:2,name:"2",structure:s}],methods:[],template:Nt}});Object.assign(H,{...e,type:2,name:"Struct472551018",align:1,instance:{members:[{...t,type:9,slot:0,name:"0",structure:s},{...t,type:9,slot:1,name:"1",structure:s},{...t,type:9,slot:2,name:"2",structure:s}],methods:[],template:Yt}});Object.assign(f,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:f}],methods:[]}});Object.assign(J,{...e,type:15,name:"@Vector(3, f32)",length:3,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:f}],methods:[]}});Object.assign(N,{...e,type:2,name:"Struct149436235",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:B},{...t,type:9,slot:2,name:"maxValue",structure:G},{...t,type:9,slot:3,name:"defaultValue",structure:H}],methods:[],template:se}});Object.assign(d,{...e,type:2,name:"Struct2255363975",align:1,instance:{members:[{...t,type:9,slot:0,name:"type",structure:r},{...t,type:9,slot:1,name:"minValue",structure:s},{...t,type:9,slot:2,name:"maxValue",structure:s},{...t,type:9,slot:3,name:"defaultValue",structure:s}],methods:[],template:ae}});Object.assign(Q,{...e,type:2,name:"Struct798344954",align:1,instance:{members:[{...t,type:9,slot:0,name:"lineEquation",structure:N},{...t,type:9,slot:1,name:"uScale",structure:d},{...t,type:9,slot:2,name:"vScale",structure:d}],methods:[],template:ue}});Object.assign(w,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:9,slot:0,name:"channels",structure:l}],methods:[],template:me}});Object.assign(W,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:9,slot:0,name:"src",structure:w}],methods:[],template:be}});Object.assign(X,{...e,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:9,slot:0,name:"dst",structure:w}],methods:[],template:le}});Object.assign(mt,{...e,type:2,name:"focus-linear-blur.kernel",align:1,static:{members:[{...t,type:9,slot:0,name:"namespace",structure:F},{...t,type:9,slot:1,name:"vendor",structure:T},{...t,type:9,slot:2,name:"version",structure:l},{...t,type:9,slot:3,name:"description",structure:L},{...t,type:9,slot:4,name:"parameters",structure:Q},{...t,type:9,slot:5,name:"inputImages",structure:W},{...t,type:9,slot:6,name:"outputImages",structure:X}],methods:[],template:ge}});Object.assign(I,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(Y,{...e,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(q,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:Y}],methods:[]}});Object.assign(y,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[]}});Object.assign(p,{...e,type:11,name:"focus-linear-blur.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"srgb",structure:p},{...t,type:9,slot:1,name:"display-p3",structure:p}],methods:[],template:Pe}});Object.assign(P,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(yt,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:f}],methods:[]}});Object.assign(Z,{...e,type:2,name:"focus-linear-blur.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:q},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:qe},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:r},{...t,type:9,slot:1,name:"FPixel",structure:r},{...t,type:9,slot:2,name:"channels",structure:l}],methods:[],template:ke}});Object.assign(R,{...e,type:2,name:"focus-linear-blur.KernelInput(u8,focus-linear-blur.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:Z}],methods:[],template:Ke}});Object.assign(tt,{...e,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...t,type:7,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(k,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitSize:64,byteSize:8,slot:0,structure:tt}],methods:[]}});Object.assign(et,{...e,type:2,name:"focus-linear-blur.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:k},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...t,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:Fe},static:{members:[{...t,type:9,slot:0,name:"Pixel",structure:r},{...t,type:9,slot:1,name:"FPixel",structure:r},{...t,type:9,slot:2,name:"channels",structure:l}],methods:[],template:Te}});Object.assign(v,{...e,type:2,name:"focus-linear-blur.KernelOutput(u8,focus-linear-blur.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:et}],methods:[],template:He}});Object.assign(E,{...e,type:2,name:"focus-linear-blur.KernelParameters(focus-linear-blur.kernel)",byteSize:32,align:16,instance:{members:[{...t,type:7,bitOffset:0,bitSize:96,byteSize:16,slot:0,name:"lineEquation",structure:J},{...t,type:4,bitOffset:128,bitSize:32,byteSize:4,slot:1,name:"uScale",structure:f},{...t,type:4,bitOffset:160,bitSize:32,byteSize:4,slot:2,name:"vScale",structure:f}],methods:[],template:Qe}});Object.assign(V,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(focus-linear-blur.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:V}],methods:[],template:We}});Object.assign(bt,{...e,type:9,name:"ErrorSet210340914!focus-linear-blur.KernelOutput(u8,focus-linear-blur.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:V}],methods:[]}});Object.assign(lt,{...e,type:5,name:"createOutput",byteSize:96,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:3,name:"0",structure:y},{...t,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:4,name:"1",structure:y},{...t,type:7,isRequired:!0,bitOffset:320,bitSize:192,byteSize:24,slot:0,name:"2",structure:R},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:256,byteSize:32,slot:1,name:"3",structure:E},{...t,type:7,isRequired:!0,bitOffset:512,bitSize:224,byteSize:28,slot:2,name:"retval",structure:bt}],methods:[]}});Object.assign(_,{...e,type:10,name:"@typeInfo(@typeInfo(@TypeOf(focus-linear-blur.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...t,type:9,slot:0,name:"OutOfMemory",structure:_}],methods:[],template:Xe}});Object.assign(gt,{...e,type:9,name:"ErrorSet1082675225!focus-linear-blur.KernelOutput(u8,focus-linear-blur.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...t,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:_}],methods:[]}});Object.assign(pt,{...e,type:5,name:"createPartialOutput",byteSize:112,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:3,name:"0",structure:y},{...t,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:4,name:"1",structure:y},{...t,type:3,isRequired:!0,bitOffset:320,bitSize:32,byteSize:4,slot:5,name:"2",structure:y},{...t,type:3,isRequired:!0,bitOffset:352,bitSize:32,byteSize:4,slot:6,name:"3",structure:y},{...t,type:7,isRequired:!0,bitOffset:384,bitSize:192,byteSize:24,slot:0,name:"4",structure:R},{...t,type:7,isRequired:!0,bitOffset:0,bitSize:256,byteSize:32,slot:1,name:"5",structure:E},{...t,type:7,isRequired:!0,bitOffset:576,bitSize:224,byteSize:28,slot:2,name:"retval",structure:gt}],methods:[]}});Object.assign(ft,{...e,type:2,name:"focus-linear-blur",align:1,static:{members:[{...t,type:9,slot:0,name:"kernel",structure:r},{...t,type:9,slot:1,name:"Input",structure:r},{...t,type:9,slot:2,name:"Output",structure:r},{...t,type:9,slot:3,name:"Parameters",structure:r}],methods:[Lr,Br],template:Ye}});const Gr=[r,O,D,F,M,T,l,S,$,L,s,c,B,G,H,f,J,N,d,Q,w,W,X,mt,I,Y,q,y,p,P,yt,Z,R,tt,k,et,v,E,V,bt,lt,_,gt,pt,ft],Hr=ft,Jr={runtimeSafety:!1,littleEndian:!0},ot=Rs();ot.getControlObject();ot.recreateStructures(Gr,Jr);const Nr=(async()=>{const o=new URL("focus-linear-blur-3bd5b20d.wasm",import.meta.url).href;return fetch(o)})();ot.loadModule(Nr);ot.linkVariables(!0);const{constructor:Qr}=Hr,{createPartialOutput:Wr,Input:Xr,kernel:ut}=Qr;function Yr(o,u,n,a,i={},j={}){const z=[];for(const[b]of ut.inputImages)z.push(b);const A=[];for(const[b]of ut.outputImages)A.push(b);if(Array.isArray(i)){const b=i;i={};for(const[g,h]of z.entries())i[h]=b[g]}const m=new Xr(void 0),x=[];let U;for(const b of z){let g=i[b];if(g||(z.length===1&&["data","width","height"].every(h=>!!i[h])?g=i:x.push(b)),m[b]=g,U){if(g.colorSpace!==U)throw new Error(`Input images must all use the same color space: ${U}`)}else U=g.colorSpace}if(x.length>0)throw new Error(`Missing input image${x.length>1?"s":""}: ${x.join(", ")}`);const ct=Wr(o,u,n,a,m,j),$t=b=>{const g={};for(const h of A){const{data:{typedArray:C},width:Lt,height:ms}=b[h];let K;if(typeof ImageData=="function"){const ys=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);K=new ImageData(ys,Lt,a,{colorSpace:U})}else K={data:C,width:Lt,height:ms};if(A.length===1)return K;g[h]=K}return g};return ct[Symbol.toStringTag]==="Promise"?ct.then($t):$t(ct)}function Zr(){const o={};for(let[u,n]of ut){if(u==="parameters"){const a={};for(const[i,j]of n){const z=a[i]={};for(let[A,m]of j)typeof m=="object"?"string"in m?m=m.string:m=us(m):typeof m=="function"&&(m=ta(m.name)),z[A]=m}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());o[u]=n}return o}function us(o){const u=[];for(let[n,a]of o)typeof a=="object"&&(a=us(a)),u[n]=a;return u}function ta(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[u,n,...a]=o.data;ea(u,a).then(([i,j])=>{postMessage([u,n,i],{transfer:j})}).catch(i=>{postMessage(["error",n,i])})};async function ea(o,u){switch(o){case"getKernelInfo":return[Zr(...u)];case"createPartialImageData":const a=await Yr(...u),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const j of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${o}`)}}
