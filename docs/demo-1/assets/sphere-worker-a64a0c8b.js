import{u as ns,a as is,b as os,c as cs,d as us,e as ms,f as ys,g as bs,h as ls,i as ps,j as gs,k as fs,l as Os,m as Ss,n as zs,p as js,o as hs,q as ds,r as ws,s as As}from"./index-25a52593.js";ns();gs();fs();is();os();Os();Ss();zs();js();cs();us();ms();ys();hs();As();bs();ds();ls();ps();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},e={type:0,isRequired:!1},s={},O={},$={},L={},B={},G={},b={},S={},H={},J={},o={},p={},w={},f={},V={},d={},N={},Q={},W={},X={},Y={},A={},Z={},ee={},be={},k={},te={},q={},m={},g={},I={},le={},se={},v={},re={},E={},ae={},x={},C={},R={},pe={},ge={},T={},fe={},Oe={},Se={},Be={},ne={},Ge={},ie={},He={},Je={},K={},Ne={},_={},Qe={},We={},ze={},oe={},je={},he={},de={},Xe={},we={},Ye={},Ae={},Ze={},et={},Ue={},Pe={},Ve={},Ie={},tt={},Re={},st={},ke={},qe={},ve={},rt={},ce={},at={},nt={},Ee={},it={},xe={},ot={},ct={},ut={},mt={},yt={},bt={},lt={},pt={},gt={},ft={},Ot={},St={},zt={},jt={},ht={},dt={},wt={},Ce={},At={},Ut={},Ke={},Pt={},_e={},Vt={},It={},Rt={},kt={},qt={},vt={},Et={},De={},xt={},Ct={},Kt={},_t={},Dt={},Ft={},Mt={},Tt={},$t={},Lt={},Fe={},Bt={},Gt={},Ht={},Jt={},Nt={},Qt={},Wt={},Xt={},Yt={},Zt={},Us=new Uint8Array,Ps=new Uint8Array([0,0,0,0,0,0,0,0]),Vs=new Uint8Array,Is=new Uint8Array([0,0,0,0,0,0,0,0]),Rs=new Uint8Array,ks=new Uint8Array([0,0,0,0,0,0,128,64]),qs=new Uint8Array,vs=new Uint8Array([0,0,0,0,0,0,128,64]),Es=new Uint8Array,xs=new Uint8Array,Cs=new Uint8Array,Ks=new Uint8Array,_s=new Uint8Array,Ds=new Uint8Array([0,0,0,0,0,0,112,64]),Fs=new Uint8Array,Ms=new Uint8Array([0,0,0,0,0,0,112,64]),Ts=new Uint8Array,$s=new Uint8Array,Ls=new Uint8Array,Bs=new Uint8Array,Gs=new Uint8Array,Hs=new Uint8Array,Js=new Uint8Array,Ns=new Uint8Array,Qs=new Uint8Array,Ws=new Uint8Array([4]),Xs=new Uint8Array,Ys=new Uint8Array,Zs=new Uint8Array([244,4,0,1]),er=new Uint8Array([83,112,104,101,114,101,0]),tr=new Uint8Array([6,5,0,1]),sr=new Uint8Array([77,114,46,100,111,111,98,0]),rr=new Uint8Array,ar=new Uint8Array([1]),nr=new Uint8Array([31,5,0,1]),ir=new Uint8Array([83,112,104,101,114,101,32,101,102,102,101,99,116,0]),or=new Uint8Array,cr=new Uint8Array,ur=new Uint8Array,mr=new Uint8Array([0]),yr=new Uint8Array([1]),es=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),br=new Uint8Array,lr=new Uint8Array,pr=new Uint8Array,gr=new Uint8Array,fr=new Uint8Array([4]),Me=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ts=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Or=new Uint8Array,Sr=new Uint8Array,zr=new Uint8Array,jr=new Uint8Array,hr=new Uint8Array([4]),Te=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),dr=new Uint8Array([0,0,0,68,0,0,0,68,0,0,128,67,0,0,128,67,0,0,0,0,0,0,0,0]),wr=new Uint8Array([27,0]),Ar=new Uint8Array,Ur=new Uint8Array,Pr=new Uint8Array,Vr=new Uint8Array;Object.assign(Be,{slots:{0:ne,1:ie}});Object.assign(ne,{structure:o,memory:{array:Us},slots:{0:Ge}});Object.assign(Ge,{structure:p,memory:{array:Ps}});Object.assign(ie,{structure:o,memory:{array:Vs},slots:{0:He}});Object.assign(He,{structure:p,memory:{array:Is}});Object.assign(Je,{slots:{0:K,1:_}});Object.assign(K,{structure:o,memory:{array:Rs},slots:{0:Ne}});Object.assign(Ne,{structure:p,memory:{array:ks}});Object.assign(_,{structure:o,memory:{array:qs},slots:{0:Qe}});Object.assign(Qe,{structure:p,memory:{array:vs}});Object.assign(We,{slots:{0:ze,1:je,2:he,3:de}});Object.assign(ze,{structure:s,memory:{array:Es},slots:{0:oe}});Object.assign(oe,{structure:d});Object.assign(je,{structure:w,memory:{array:xs},slots:{0:ne,1:ie}});Object.assign(he,{structure:f,memory:{array:Cs},slots:{0:K,1:_}});Object.assign(de,{structure:f,memory:{array:Ks},slots:{0:K,1:_}});Object.assign(Xe,{slots:{0:we,1:Ae}});Object.assign(we,{structure:o,memory:{array:_s},slots:{0:Ye}});Object.assign(Ye,{structure:p,memory:{array:Ds}});Object.assign(Ae,{structure:o,memory:{array:Fs},slots:{0:Ze}});Object.assign(Ze,{structure:p,memory:{array:Ms}});Object.assign(et,{slots:{0:Ue,1:Pe,2:Ve,3:Ie}});Object.assign(Ue,{structure:s,memory:{array:Ts},slots:{0:oe}});Object.assign(Pe,{structure:w,memory:{array:$s},slots:{0:ne,1:ie}});Object.assign(Ve,{structure:f,memory:{array:Ls},slots:{0:K,1:_}});Object.assign(Ie,{structure:Q,memory:{array:Bs},slots:{0:we,1:Ae}});Object.assign(tt,{slots:{0:Re}});Object.assign(Re,{structure:s,memory:{array:Gs},slots:{0:oe}});Object.assign(st,{slots:{0:ke,1:qe,2:ve}});Object.assign(ke,{structure:N,memory:{array:Hs},slots:{0:ze,1:je,2:he,3:de}});Object.assign(qe,{structure:W,memory:{array:Js},slots:{0:Ue,1:Pe,2:Ve,3:Ie}});Object.assign(ve,{structure:X,memory:{array:Ns},slots:{0:Re}});Object.assign(rt,{slots:{0:ce}});Object.assign(ce,{structure:b,memory:{array:Qs},slots:{0:at}});Object.assign(at,{structure:S,memory:{array:Ws}});Object.assign(nt,{slots:{0:Ee}});Object.assign(Ee,{structure:A,memory:{array:Xs},slots:{0:ce}});Object.assign(it,{slots:{0:xe}});Object.assign(xe,{structure:A,memory:{array:Ys},slots:{0:ce}});Object.assign(ot,{slots:{0:ct,1:mt,2:bt,3:pt,4:ft,5:Ot,6:St}});Object.assign(ct,{structure:L,memory:{array:Zs},slots:{0:ut}});Object.assign(ut,{structure:$,memory:{array:er},reloc:16778484,const:!0});Object.assign(mt,{structure:G,memory:{array:tr},slots:{0:yt}});Object.assign(yt,{structure:B,memory:{array:sr},reloc:16778502,const:!0});Object.assign(bt,{structure:b,memory:{array:rr},slots:{0:lt}});Object.assign(lt,{structure:S,memory:{array:ar}});Object.assign(pt,{structure:J,memory:{array:nr},slots:{0:gt}});Object.assign(gt,{structure:H,memory:{array:ir},reloc:16778527,const:!0});Object.assign(ft,{structure:Y,memory:{array:or},slots:{0:ke,1:qe,2:ve}});Object.assign(Ot,{structure:Z,memory:{array:cr},slots:{0:Ee}});Object.assign(St,{structure:ee,memory:{array:ur},slots:{0:xe}});Object.assign(zt,{slots:{0:jt,1:ht}});Object.assign(jt,{structure:g,memory:{array:mr}});Object.assign(ht,{structure:g,memory:{array:yr}});Object.assign(dt,{memory:{array:es},slots:{0:wt}});Object.assign(wt,{structure:q,memory:{array:es,offset:0,length:8},slots:{0:Ce}});Object.assign(Ce,{structure:te,memory:{array:br},reloc:0,const:!0});Object.assign(At,{slots:{0:Ut,1:Pt,2:Vt}});Object.assign(Ut,{structure:s,memory:{array:lr},slots:{0:Ke}});Object.assign(Ke,{structure:k});Object.assign(Pt,{structure:s,memory:{array:pr},slots:{0:_e}});Object.assign(_e,{structure:le});Object.assign(Vt,{structure:b,memory:{array:gr},slots:{0:It}});Object.assign(It,{structure:S,memory:{array:fr}});Object.assign(Rt,{memory:{array:Me},slots:{0:kt}});Object.assign(kt,{structure:se,memory:{array:Me},slots:{0:qt}});Object.assign(qt,{structure:q,memory:{array:Me,offset:0,length:8},slots:{0:Ce}});Object.assign(vt,{memory:{array:ts},slots:{0:Et}});Object.assign(Et,{structure:E,memory:{array:ts,offset:0,length:8},slots:{0:De}});Object.assign(De,{structure:re,memory:{array:Or},reloc:0});Object.assign(xt,{slots:{0:Ct,1:Kt,2:_t}});Object.assign(Ct,{structure:s,memory:{array:Sr},slots:{0:Ke}});Object.assign(Kt,{structure:s,memory:{array:zr},slots:{0:_e}});Object.assign(_t,{structure:b,memory:{array:jr},slots:{0:Dt}});Object.assign(Dt,{structure:S,memory:{array:hr}});Object.assign(Ft,{memory:{array:Te},slots:{0:Mt}});Object.assign(Mt,{structure:ae,memory:{array:Te},slots:{0:Tt}});Object.assign(Tt,{structure:E,memory:{array:Te,offset:0,length:8},slots:{0:De}});Object.assign($t,{memory:{array:dr}});Object.assign(Lt,{slots:{0:Fe}});Object.assign(Fe,{structure:R,memory:{array:wr}});Object.assign(Bt,{slots:{0:Fe}});Object.assign(Gt,{slots:{0:Ht,1:Nt,2:Wt,3:Yt}});Object.assign(Ht,{structure:s,memory:{array:Ar},slots:{0:Jt}});Object.assign(Jt,{structure:be});Object.assign(Nt,{structure:s,memory:{array:Ur},slots:{0:Qt}});Object.assign(Qt,{structure:v});Object.assign(Wt,{structure:s,memory:{array:Pr},slots:{0:Xt}});Object.assign(Xt,{structure:x});Object.assign(Yt,{structure:s,memory:{array:Vr},slots:{0:Zt}});Object.assign(Zt,{structure:C});const Ir={argStruct:ge,thunkId:2,name:"createOutput"},Rr={argStruct:Oe,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...t,name:"type",align:1,instance:{members:[{...e,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(O,{...t,name:"u8",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign($,{...t,type:1,name:"[6:0]u8",length:6,byteSize:7,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(L,{...t,type:13,name:"*const [6:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[]}});Object.assign(B,{...t,type:1,name:"[7:0]u8",length:7,byteSize:8,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(G,{...t,type:13,name:"*const [7:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:B}],methods:[]}});Object.assign(b,{...t,name:"comptime_int",align:1,instance:{members:[{...e,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:b}],methods:[]}});Object.assign(S,{...t,name:"i8",byteSize:1,align:1,instance:{members:[{...e,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[]}});Object.assign(H,{...t,type:1,name:"[13:0]u8",length:13,byteSize:14,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(J,{...t,type:13,name:"*const [13:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[]}});Object.assign(o,{...t,name:"comptime_float",align:1,instance:{members:[{...e,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:o}],methods:[]}});Object.assign(p,{...t,name:"f64",byteSize:8,align:8,instance:{members:[{...e,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:p}],methods:[]}});Object.assign(w,{...t,type:2,name:"Struct738220547",align:1,instance:{members:[{...e,type:9,slot:0,name:"0",structure:o},{...e,type:9,slot:1,name:"1",structure:o}],methods:[],template:Be}});Object.assign(f,{...t,type:2,name:"Struct2210712367",align:1,instance:{members:[{...e,type:9,slot:0,name:"0",structure:o},{...e,type:9,slot:1,name:"1",structure:o}],methods:[],template:Je}});Object.assign(V,{...t,name:"f32",byteSize:4,align:4,instance:{members:[{...e,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(d,{...t,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...e,type:4,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(N,{...t,type:2,name:"Struct42009499",align:1,instance:{members:[{...e,type:9,slot:0,name:"type",structure:s},{...e,type:9,slot:1,name:"minValue",structure:w},{...e,type:9,slot:2,name:"maxValue",structure:f},{...e,type:9,slot:3,name:"defaultValue",structure:f}],methods:[],template:We}});Object.assign(Q,{...t,type:2,name:"Struct1632360224",align:1,instance:{members:[{...e,type:9,slot:0,name:"0",structure:o},{...e,type:9,slot:1,name:"1",structure:o}],methods:[],template:Xe}});Object.assign(W,{...t,type:2,name:"Struct738476154",align:1,instance:{members:[{...e,type:9,slot:0,name:"type",structure:s},{...e,type:9,slot:1,name:"minValue",structure:w},{...e,type:9,slot:2,name:"maxValue",structure:f},{...e,type:9,slot:3,name:"defaultValue",structure:Q}],methods:[],template:et}});Object.assign(X,{...t,type:2,name:"Struct1916818985",align:1,instance:{members:[{...e,type:9,slot:0,name:"type",structure:s}],methods:[],template:tt}});Object.assign(Y,{...t,type:2,name:"Struct1432184459",align:1,instance:{members:[{...e,type:9,slot:0,name:"imgSize",structure:N},{...e,type:9,slot:1,name:"center",structure:W},{...e,type:9,slot:2,name:"offset",structure:X}],methods:[],template:st}});Object.assign(A,{...t,type:2,name:"Struct3832472641",align:1,instance:{members:[{...e,type:9,slot:0,name:"channels",structure:b}],methods:[],template:rt}});Object.assign(Z,{...t,type:2,name:"Struct2242867897",align:1,instance:{members:[{...e,type:9,slot:0,name:"src",structure:A}],methods:[],template:nt}});Object.assign(ee,{...t,type:2,name:"Struct172100005",align:1,instance:{members:[{...e,type:9,slot:0,name:"dst",structure:A}],methods:[],template:it}});Object.assign(be,{...t,type:2,name:"sphere.kernel",align:1,static:{members:[{...e,type:9,slot:0,name:"namespace",structure:L},{...e,type:9,slot:1,name:"vendor",structure:G},{...e,type:9,slot:2,name:"version",structure:b},{...e,type:9,slot:3,name:"description",structure:J},{...e,type:9,slot:4,name:"parameters",structure:Y},{...e,type:9,slot:5,name:"inputImages",structure:Z},{...e,type:9,slot:6,name:"outputImages",structure:ee}],methods:[],template:ot}});Object.assign(k,{...t,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:O}],methods:[]}});Object.assign(te,{...t,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(q,{...t,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:64,byteSize:8,slot:0,structure:te}],methods:[]}});Object.assign(m,{...t,name:"u32",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[]}});Object.assign(g,{...t,type:11,name:"sphere.ColorSpace",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"srgb",structure:g},{...e,type:9,slot:1,name:"display-p3",structure:g}],methods:[],template:zt}});Object.assign(I,{...t,name:"usize",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(le,{...t,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...e,type:4,bitSize:32,byteSize:4,structure:V}],methods:[]}});Object.assign(se,{...t,type:2,name:"sphere.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:q},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:g},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:I}],methods:[],template:dt},static:{members:[{...e,type:9,slot:0,name:"Pixel",structure:s},{...e,type:9,slot:1,name:"FPixel",structure:s},{...e,type:9,slot:2,name:"channels",structure:b}],methods:[],template:At}});Object.assign(v,{...t,type:2,name:"sphere.KernelInput(u8,sphere.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:se}],methods:[],template:Rt}});Object.assign(re,{...t,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(E,{...t,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:64,byteSize:8,slot:0,structure:re}],methods:[]}});Object.assign(ae,{...t,type:2,name:"sphere.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:E},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:g},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:I}],methods:[],template:vt},static:{members:[{...e,type:9,slot:0,name:"Pixel",structure:s},{...e,type:9,slot:1,name:"FPixel",structure:s},{...e,type:9,slot:2,name:"channels",structure:b}],methods:[],template:xt}});Object.assign(x,{...t,type:2,name:"sphere.KernelOutput(u8,sphere.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:ae}],methods:[],template:Ft}});Object.assign(C,{...t,type:2,name:"sphere.KernelParameters(sphere.kernel)",byteSize:24,align:8,instance:{members:[{...e,type:7,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"imgSize",structure:d},{...e,type:7,bitOffset:64,bitSize:64,byteSize:8,slot:1,name:"center",structure:d},{...e,type:7,bitOffset:128,bitSize:64,byteSize:8,slot:2,name:"offset",structure:d}],methods:[],template:$t}});Object.assign(R,{...t,type:10,name:"@typeInfo(@typeInfo(@TypeOf(sphere.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"OutOfMemory",structure:R}],methods:[],template:Lt}});Object.assign(pe,{...t,type:9,name:"ErrorSet4008449167!sphere.KernelOutput(u8,sphere.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:x},{...e,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:R}],methods:[]}});Object.assign(ge,{...t,type:5,name:"createOutput",byteSize:88,align:8,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:192,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...e,type:3,isRequired:!0,bitOffset:224,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...e,type:7,isRequired:!0,bitOffset:256,bitSize:192,byteSize:24,slot:0,name:"2",structure:v},{...e,type:7,isRequired:!0,bitOffset:0,bitSize:192,byteSize:24,slot:1,name:"3",structure:C},{...e,type:7,isRequired:!0,bitOffset:448,bitSize:224,byteSize:28,slot:2,name:"retval",structure:pe}],methods:[]}});Object.assign(T,{...t,type:10,name:"@typeInfo(@typeInfo(@TypeOf(sphere.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"OutOfMemory",structure:T}],methods:[],template:Bt}});Object.assign(fe,{...t,type:9,name:"ErrorSet181898486!sphere.KernelOutput(u8,sphere.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:x},{...e,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:T}],methods:[]}});Object.assign(Oe,{...t,type:5,name:"createPartialOutput",byteSize:96,align:8,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:192,bitSize:32,byteSize:4,slot:3,name:"0",structure:m},{...e,type:3,isRequired:!0,bitOffset:224,bitSize:32,byteSize:4,slot:4,name:"1",structure:m},{...e,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:5,name:"2",structure:m},{...e,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:6,name:"3",structure:m},{...e,type:7,isRequired:!0,bitOffset:320,bitSize:192,byteSize:24,slot:0,name:"4",structure:v},{...e,type:7,isRequired:!0,bitOffset:0,bitSize:192,byteSize:24,slot:1,name:"5",structure:C},{...e,type:7,isRequired:!0,bitOffset:512,bitSize:224,byteSize:28,slot:2,name:"retval",structure:fe}],methods:[]}});Object.assign(Se,{...t,type:2,name:"sphere",align:1,static:{members:[{...e,type:9,slot:0,name:"kernel",structure:s},{...e,type:9,slot:1,name:"Input",structure:s},{...e,type:9,slot:2,name:"Output",structure:s},{...e,type:9,slot:3,name:"Parameters",structure:s}],methods:[Ir,Rr],template:Gt}});const kr=[s,O,$,L,B,G,b,S,H,J,o,p,w,f,V,d,N,Q,W,X,Y,A,Z,ee,be,k,te,q,m,g,I,le,se,v,re,E,ae,x,C,R,pe,ge,T,fe,Oe,Se],qr=Se,vr={runtimeSafety:!1,littleEndian:!0},ue=ws();ue.getControlObject();ue.recreateStructures(kr,vr);const Er=(async()=>{const i=new URL("sphere-02e0d26d.wasm",import.meta.url).href;return fetch(i)})();ue.loadModule(Er);ue.linkVariables(!0);const{constructor:xr}=qr,{createPartialOutput:Cr,Input:Kr,kernel:ye}=xr;function _r(i,c,a,r,n={},z={}){const j=[];for(const[y]of ye.inputImages)j.push(y);const U=[];for(const[y]of ye.outputImages)U.push(y);if(Array.isArray(n)){const y=n;n={};for(const[l,h]of j.entries())n[h]=y[l]}const u=new Kr(void 0),D=[];let P;for(const y of j){let l=n[y];if(l||(j.length===1&&["data","width","height"].every(h=>!!n[h])?l=n:D.push(y)),u[y]=l,P){if(l.colorSpace!==P)throw new Error(`Input images must all use the same color space: ${P}`)}else P=l.colorSpace}if(D.length>0)throw new Error(`Missing input image${D.length>1?"s":""}: ${D.join(", ")}`);const me=Cr(i,c,a,r,u,z),$e=y=>{const l={};for(const h of U){const{data:{typedArray:F},width:Le,height:rs}=y[h];let M;if(typeof ImageData=="function"){const as=new Uint8ClampedArray(F.buffer,F.byteOffset,F.byteLength);M=new ImageData(as,Le,r,{colorSpace:P})}else M={data:F,width:Le,height:rs};if(U.length===1)return M;l[h]=M}return l};return me[Symbol.toStringTag]==="Promise"?me.then($e):$e(me)}function Dr(){const i={};for(let[c,a]of ye){if(c==="parameters"){const r={};for(const[n,z]of a){const j=r[n]={};for(let[U,u]of z)typeof u=="object"?"string"in u?u=u.string:u=ss(u):typeof u=="function"&&(u=Fr(u.name)),j[U]=u}a=r}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());i[c]=a}return i}function ss(i){const c=[];for(let[a,r]of i)typeof r=="object"&&(r=ss(r)),c[a]=r;return c}function Fr(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[c,a,...r]=i.data;Mr(c,r).then(([n,z])=>{postMessage([c,a,n],{transfer:z})}).catch(n=>{postMessage(["error",a,n])})};async function Mr(i,c){switch(i){case"getKernelInfo":return[Dr(...c)];case"createPartialImageData":const r=await _r(...c),n=[];if("data"in r&&"width"in r&&"height"in r)n.push(r.data.buffer);else for(const z of Object.entries(r))n.push(r.data.buffer);return[r,n];default:throw new Error(`Unknown function: ${i}`)}}
