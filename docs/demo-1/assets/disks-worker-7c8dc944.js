import{u as st,a as rt,b as at,c as nt,d as it,e as ut,f as ot,g as mt,h as lt,i as yt,j as ct,k as bt,l as pt,m as ft,o as dt,n as St,p as ht,q as gt}from"./index-d64bc850.js";st();rt();at();nt();it();ut();ot();mt();lt();yt();ct();bt();pt();ft();dt();St();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},c={},ue={},oe={},M={},me={},le={},_={},b={},p={},P={},k={},w={},f={},r={},s={},ye={},T={},ce={},be={},$={},pe={},B={},C={},fe={},L={},de={},G={},Se={},H={},he={},ge={},J={},ze={},N={},we={},R={},g={},Ae={},Q={},q={},z={},Oe={},W={},Ue={},X={},Re={},Y={},qe={},Z={},je={},Pe={},ee={},ke={},te={},Ce={},se={},V={},A={},Ve={},re={},Ie={},ae={},Te={},O={},xe={},ve={},l={},Ee={},j={},Ke={},ne={},I={},De={},Fe={},ie={},x={},v={},$e={},Be={},Le={},Ge={},He={},Je={},Ne={};Object.assign(c,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:5});Object.assign(ue,{...t,type:1,name:"[5:0]u8",length:5,byteSize:6,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:4});Object.assign(oe,{...t,type:11,name:"*const [5:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:3});Object.assign(M,{...t,type:11,name:"*const *const [5:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:2});Object.assign(me,{...t,type:1,name:"[14:0]u8",length:14,byteSize:15,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:8});Object.assign(le,{...t,type:11,name:"*const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:7});Object.assign(_,{...t,type:11,name:"*const *const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:6});Object.assign(b,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:10});Object.assign(p,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:b}],methods:[],template:null},slot:9});Object.assign(P,{...t,type:1,name:"[12:0]u8",length:12,byteSize:13,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:13});Object.assign(k,{...t,type:11,name:"*const [12:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:P}],methods:[],template:null},slot:12});Object.assign(w,{...t,type:11,name:"*const *const [12:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:k}],methods:[],template:null},slot:11});Object.assign(f,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:f}],methods:[],template:null},slot:32});Object.assign(r,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[],template:null},slot:53});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:r}],methods:[],template:null},slot:52});const zt=new Uint8Array,wt=new Uint8Array([200,251,15,0]),At=new Uint8Array([0,0,0,0,0,0,240,63]),Ot=new Uint8Array([72,249,15,0]),Ut=new Uint8Array([0,0,0,0,0,0,105,64]),Rt=new Uint8Array([48,251,15,0]),qt=new Uint8Array([0,0,0,0,0,0,64,64]),jt=new Uint8Array([8,251,15,0]),Pt=new Uint8Array([169,6,16,0]),kt=new Uint8Array([80,97,116,116,101,114,110,32,83,105,122,101,0]);Object.assign(ye,{...t,type:2,name:"Struct0011",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:f},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:w}],methods:[],template:{memory:{array:zt},slots:{0:{structure:s,memory:{array:wt},slots:{0:{structure:r,memory:{array:At}}}},1:{structure:s,memory:{array:Ot},slots:{0:{structure:r,memory:{array:Ut}}}},2:{structure:s,memory:{array:Rt},slots:{0:{structure:r,memory:{array:qt}}}},3:{structure:w,memory:{array:jt},slots:{0:{structure:k,memory:{array:Pt},slots:{0:{structure:P,memory:{array:kt}}}}}}}}},slot:40});Object.assign(T,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:39});Object.assign(ce,{...t,type:1,name:"[43:0]u8",length:43,byteSize:44,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:56});Object.assign(be,{...t,type:11,name:"*const [43:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:55});Object.assign($,{...t,type:11,name:"*const *const [43:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:54});const Ct=new Uint8Array,Vt=new Uint8Array([104,251,15,0]),It=new Uint8Array([154,153,153,153,153,153,185,63]),xt=new Uint8Array([136,251,15,0]),vt=new Uint8Array([154,153,153,153,153,153,17,64]),Et=new Uint8Array([176,251,15,0]),Kt=new Uint8Array([113,61,10,215,163,112,229,63]),Dt=new Uint8Array([56,250,15,0]),Ft=new Uint8Array([125,6,16,0]),Mt=new Uint8Array([114,97,100,105,117,115,58,32,104,111,119,32,109,117,99,104,32,97,32,100,105,115,107,115,32,102,105,108,108,115,32,117,112,32,105,116,115,32,115,112,97,99,101,0]);Object.assign(pe,{...t,type:2,name:"Struct0012",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:f},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:$}],methods:[],template:{memory:{array:Ct},slots:{0:{structure:s,memory:{array:Vt},slots:{0:{structure:r,memory:{array:It}}}},1:{structure:s,memory:{array:xt},slots:{0:{structure:r,memory:{array:vt}}}},2:{structure:s,memory:{array:Et},slots:{0:{structure:r,memory:{array:Kt}}}},3:{structure:$,memory:{array:Dt},slots:{0:{structure:be,memory:{array:Ft},slots:{0:{structure:ce,memory:{array:Mt}}}}}}}}},slot:42});Object.assign(B,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:41});Object.assign(C,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:f}],methods:[],template:null},slot:33});const _t=new Uint8Array,Tt=new Uint8Array([216,251,15,0]),$t=new Uint8Array([0,0,0,0,0,0,105,192]),Bt=new Uint8Array([96,250,15,0]),Lt=new Uint8Array([0,0,0,0,0,0,105,192]);Object.assign(fe,{...t,type:2,name:"Struct0022",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:_t},slots:{0:{structure:s,memory:{array:Tt},slots:{0:{structure:r,memory:{array:$t}}}},1:{structure:s,memory:{array:Bt},slots:{0:{structure:r,memory:{array:Lt}}}}}}},slot:58});Object.assign(L,{...t,type:11,name:"Struct0016",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:57});const Gt=new Uint8Array,Ht=new Uint8Array([216,251,15,0]),Jt=new Uint8Array([0,0,0,0,0,0,137,64]),Nt=new Uint8Array([96,250,15,0]),Qt=new Uint8Array([0,0,0,0,0,64,127,64]);Object.assign(de,{...t,type:2,name:"Struct0023",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Gt},slots:{0:{structure:s,memory:{array:Ht},slots:{0:{structure:r,memory:{array:Jt}}}},1:{structure:s,memory:{array:Nt},slots:{0:{structure:r,memory:{array:Qt}}}}}}},slot:60});Object.assign(G,{...t,type:11,name:"Struct0017",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:de}],methods:[],template:null},slot:59});const Wt=new Uint8Array,Xt=new Uint8Array([216,251,15,0]),Yt=new Uint8Array([0,0,0,0,0,0,0,0]),Zt=new Uint8Array([96,250,15,0]),es=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(Se,{...t,type:2,name:"Struct0024",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Wt},slots:{0:{structure:s,memory:{array:Xt},slots:{0:{structure:r,memory:{array:Yt}}}},1:{structure:s,memory:{array:Zt},slots:{0:{structure:r,memory:{array:es}}}}}}},slot:62});Object.assign(H,{...t,type:11,name:"Struct0018",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Se}],methods:[],template:null},slot:61});Object.assign(he,{...t,type:1,name:"[10:0]u8",length:10,byteSize:11,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:65});Object.assign(ge,{...t,type:11,name:"*const [10:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:he}],methods:[],template:null},slot:64});Object.assign(J,{...t,type:11,name:"*const *const [10:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ge}],methods:[],template:null},slot:63});const ts=new Uint8Array,ss=new Uint8Array([170,170,170,170]),rs=new Uint8Array,as=new Uint8Array([170,170,170,170]),ns=new Uint8Array,is=new Uint8Array([170,170,170,170]),us=new Uint8Array,os=new Uint8Array([24,250,15,0]),ms=new Uint8Array([114,6,16,0]),ls=new Uint8Array([66,97,115,101,32,80,111,105,110,116,0]);Object.assign(ze,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:C},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:L},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:G},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:H},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:J}],methods:[],template:{memory:{array:ts},slots:{0:{structure:L,memory:{array:ss},slots:{0:{structure:fe,memory:{array:rs}}}},1:{structure:G,memory:{array:as},slots:{0:{structure:de,memory:{array:ns}}}},2:{structure:H,memory:{array:is},slots:{0:{structure:Se,memory:{array:us}}}},3:{structure:J,memory:{array:os},slots:{0:{structure:ge,memory:{array:ms},slots:{0:{structure:he,memory:{array:ls}}}}}}}}},slot:44});Object.assign(N,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ze}],methods:[],template:null},slot:43});Object.assign(we,{...t,type:1,name:"[2]@Vector(2, f32)",length:2,byteSize:16,align:3,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,structure:C}],methods:[],template:null},slot:34});const ys=new Uint8Array,cs=new Uint8Array([224,247,15,0]),bs=new Uint8Array([0,0,0,0,0,0,240,191]),ps=new Uint8Array([8,248,15,0]),fs=new Uint8Array([0,0,0,0,0,0,240,191]);Object.assign(R,{...t,type:2,name:"Struct0032",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:ys},slots:{0:{structure:s,memory:{array:cs},slots:{0:{structure:r,memory:{array:bs}}}},1:{structure:s,memory:{array:ps},slots:{0:{structure:r,memory:{array:fs}}}}}}},slot:76});Object.assign(g,{...t,type:11,name:"Struct0028",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:R}],methods:[],template:null},slot:75});const ds=new Uint8Array,Ss=new Uint8Array([170,170,170,170]),hs=new Uint8Array,gs=new Uint8Array([170,170,170,170]),zs=new Uint8Array;Object.assign(Ae,{...t,type:2,name:"Struct0025",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:g},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:g}],methods:[],template:{memory:{array:ds},slots:{0:{structure:g,memory:{array:Ss},slots:{0:{structure:R,memory:{array:hs}}}},1:{structure:g,memory:{array:gs},slots:{0:{structure:R,memory:{array:zs}}}}}}},slot:67});Object.assign(Q,{...t,type:11,name:"Struct0019",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ae}],methods:[],template:null},slot:66});const ws=new Uint8Array,As=new Uint8Array([224,247,15,0]),Os=new Uint8Array([0,0,0,0,0,0,240,63]),Us=new Uint8Array([8,248,15,0]),Rs=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(q,{...t,type:2,name:"Struct0033",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:ws},slots:{0:{structure:s,memory:{array:As},slots:{0:{structure:r,memory:{array:Os}}}},1:{structure:s,memory:{array:Us},slots:{0:{structure:r,memory:{array:Rs}}}}}}},slot:78});Object.assign(z,{...t,type:11,name:"Struct0029",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:q}],methods:[],template:null},slot:77});const qs=new Uint8Array,js=new Uint8Array([170,170,170,170]),Ps=new Uint8Array,ks=new Uint8Array([170,170,170,170]),Cs=new Uint8Array;Object.assign(Oe,{...t,type:2,name:"Struct0026",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:z},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:z}],methods:[],template:{memory:{array:qs},slots:{0:{structure:z,memory:{array:js},slots:{0:{structure:q,memory:{array:Ps}}}},1:{structure:z,memory:{array:ks},slots:{0:{structure:q,memory:{array:Cs}}}}}}},slot:69});Object.assign(W,{...t,type:11,name:"Struct0020",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Oe}],methods:[],template:null},slot:68});const Vs=new Uint8Array,Is=new Uint8Array([144,251,15,0]),xs=new Uint8Array([0,0,0,0,0,0,240,63]),vs=new Uint8Array([184,251,15,0]),Es=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(Ue,{...t,type:2,name:"Struct0034",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Vs},slots:{0:{structure:s,memory:{array:Is},slots:{0:{structure:r,memory:{array:xs}}}},1:{structure:s,memory:{array:vs},slots:{0:{structure:r,memory:{array:Es}}}}}}},slot:80});Object.assign(X,{...t,type:11,name:"Struct0030",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ue}],methods:[],template:null},slot:79});const Ks=new Uint8Array,Ds=new Uint8Array([144,251,15,0]),Fs=new Uint8Array([0,0,0,0,0,0,0,0]),Ms=new Uint8Array([184,251,15,0]),_s=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(Re,{...t,type:2,name:"Struct0035",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Ks},slots:{0:{structure:s,memory:{array:Ds},slots:{0:{structure:r,memory:{array:Fs}}}},1:{structure:s,memory:{array:Ms},slots:{0:{structure:r,memory:{array:_s}}}}}}},slot:82});Object.assign(Y,{...t,type:11,name:"Struct0031",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Re}],methods:[],template:null},slot:81});const Ts=new Uint8Array,$s=new Uint8Array([170,170,170,170]),Bs=new Uint8Array,Ls=new Uint8Array([170,170,170,170]),Gs=new Uint8Array;Object.assign(qe,{...t,type:2,name:"Struct0027",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:X},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:Y}],methods:[],template:{memory:{array:Ts},slots:{0:{structure:X,memory:{array:$s},slots:{0:{structure:Ue,memory:{array:Bs}}}},1:{structure:Y,memory:{array:Ls},slots:{0:{structure:Re,memory:{array:Gs}}}}}}},slot:71});Object.assign(Z,{...t,type:11,name:"Struct0021",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:qe}],methods:[],template:null},slot:70});Object.assign(je,{...t,type:1,name:"[26:0]u8",length:26,byteSize:27,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:74});Object.assign(Pe,{...t,type:11,name:"*const [26:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:je}],methods:[],template:null},slot:73});Object.assign(ee,{...t,type:11,name:"*const *const [26:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Pe}],methods:[],template:null},slot:72});const Hs=new Uint8Array,Js=new Uint8Array([170,170,170,170]),Ns=new Uint8Array,Qs=new Uint8Array([170,170,170,170]),Ws=new Uint8Array,Xs=new Uint8Array([170,170,170,170]),Ys=new Uint8Array,Zs=new Uint8Array([80,250,15,0]),er=new Uint8Array([87,6,16,0]),tr=new Uint8Array([82,111,116,97,116,105,111,110,32,97,114,111,117,110,100,32,66,97,115,101,32,80,111,105,110,116,0]);Object.assign(ke,{...t,type:2,name:"Struct0014",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:we},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:Q},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:W},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:Z},{...e,type:8,isRequired:!1,slot:3,name:"description",structure:ee}],methods:[],template:{memory:{array:Hs},slots:{0:{structure:Q,memory:{array:Js},slots:{0:{structure:Ae,memory:{array:Ns}}}},1:{structure:W,memory:{array:Qs},slots:{0:{structure:Oe,memory:{array:Ws}}}},2:{structure:Z,memory:{array:Xs},slots:{0:{structure:qe,memory:{array:Ys}}}},3:{structure:ee,memory:{array:Zs},slots:{0:{structure:Pe,memory:{array:er},slots:{0:{structure:je,memory:{array:tr}}}}}}}}},slot:46});Object.assign(te,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ke}],methods:[],template:null},slot:45});const sr=new Uint8Array,rr=new Uint8Array([170,170,170,170]),ar=new Uint8Array,nr=new Uint8Array([170,170,170,170]),ir=new Uint8Array,ur=new Uint8Array([170,170,170,170]),or=new Uint8Array,mr=new Uint8Array([170,170,170,170]),lr=new Uint8Array;Object.assign(Ce,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"size",structure:T},{...e,type:8,isRequired:!1,slot:1,name:"radius",structure:B},{...e,type:8,isRequired:!1,slot:2,name:"base",structure:N},{...e,type:8,isRequired:!1,slot:3,name:"rotation",structure:te}],methods:[],template:{memory:{array:sr},slots:{0:{structure:T,memory:{array:rr},slots:{0:{structure:ye,memory:{array:ar}}}},1:{structure:B,memory:{array:nr},slots:{0:{structure:pe,memory:{array:ir}}}},2:{structure:N,memory:{array:ur},slots:{0:{structure:ze,memory:{array:or}}}},3:{structure:te,memory:{array:mr},slots:{0:{structure:ke,memory:{array:lr}}}}}}},slot:15});Object.assign(se,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ce}],methods:[],template:null},slot:14});const yr=new Uint8Array,cr=new Uint8Array([16,252,15,0]),br=new Uint8Array([4,0,0,0]);Object.assign(V,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:yr},slots:{0:{structure:p,memory:{array:cr},slots:{0:{structure:b,memory:{array:br}}}}}}},slot:48});Object.assign(A,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:V}],methods:[],template:null},slot:47});const pr=new Uint8Array,fr=new Uint8Array([170,170,170,170]),dr=new Uint8Array;Object.assign(Ve,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:A}],methods:[],template:{memory:{array:pr},slots:{0:{structure:A,memory:{array:fr},slots:{0:{structure:V,memory:{array:dr}}}}}}},slot:17});Object.assign(re,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ve}],methods:[],template:null},slot:16});const Sr=new Uint8Array,hr=new Uint8Array([170,170,170,170]),gr=new Uint8Array;Object.assign(Ie,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"pxlOut",structure:A}],methods:[],template:{memory:{array:Sr},slots:{0:{structure:A,memory:{array:hr},slots:{0:{structure:V,memory:{array:gr}}}}}}},slot:19});Object.assign(ae,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ie}],methods:[],template:null},slot:18});const zr=new Uint8Array,wr=new Uint8Array,Ar=new Uint8Array([76,10,16,0]),Or=new Uint8Array([251,9,16,0]),Ur=new Uint8Array([68,105,115,107,115,0]),Rr=new Uint8Array([72,10,16,0]),qr=new Uint8Array([225,9,16,0]),jr=new Uint8Array([80,101,116,114,105,32,76,101,115,107,105,110,101,110,0]),Pr=new Uint8Array([68,10,16,0]),kr=new Uint8Array([1,0,0,0]),Cr=new Uint8Array([64,10,16,0]),Vr=new Uint8Array([195,9,16,0]),Ir=new Uint8Array([68,105,115,107,32,116,105,108,105,110,103,32,0]),xr=new Uint8Array([170,170,170,170]),vr=new Uint8Array,Er=new Uint8Array([170,170,170,170]),Kr=new Uint8Array,Dr=new Uint8Array([170,170,170,170]),Fr=new Uint8Array;Object.assign(Te,{...t,type:2,name:"disks.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:zr}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:M},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:_},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:p},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:w},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:se},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:re},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:ae}],methods:[],template:{memory:{array:wr},slots:{0:{structure:M,memory:{array:Ar},slots:{0:{structure:oe,memory:{array:Or},slots:{0:{structure:ue,memory:{array:Ur}}}}}},1:{structure:_,memory:{array:Rr},slots:{0:{structure:le,memory:{array:qr},slots:{0:{structure:me,memory:{array:jr}}}}}},2:{structure:p,memory:{array:Pr},slots:{0:{structure:b,memory:{array:kr}}}},3:{structure:w,memory:{array:Cr},slots:{0:{structure:k,memory:{array:Vr},slots:{0:{structure:P,memory:{array:Ir}}}}}},4:{structure:se,memory:{array:xr},slots:{0:{structure:Ce,memory:{array:vr}}}},5:{structure:re,memory:{array:Er},slots:{0:{structure:Ve,memory:{array:Kr}}}},6:{structure:ae,memory:{array:Dr},slots:{0:{structure:Ie,memory:{array:Fr}}}}}}},slot:1});Object.assign(O,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:24});Object.assign(xe,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:23});Object.assign(ve,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:xe}],methods:[],template:null},slot:22});Object.assign(l,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:l}],methods:[],template:null},slot:25});const Mr=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(Ee,{...t,type:9,name:"disks.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:b},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:b}],methods:[],template:{memory:{array:Mr}}},slot:26});Object.assign(j,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:j}],methods:[],template:null},slot:27});Object.assign(Ke,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:f}],methods:[],template:null},slot:49});const _r=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Tr=new Uint8Array,$r=new Uint8Array([152,9,16,0]),Br=new Uint8Array([4,0,0,0]);Object.assign(ne,{...t,type:2,name:"disks.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:ve},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Ee},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:j}],methods:[],template:{memory:{array:_r}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:Ke},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:Tr},slots:{0:{structure:p,memory:{array:$r},slots:{0:{structure:b,memory:{array:Br}}}}}}},slot:21});const Lr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Gr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ye=new Uint8Array([0,0,0,0,0,0,0,0]),Hr=new Uint8Array;Object.assign(I,{...t,type:2,name:"disks.KernelInput(u8,disks.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:ne}],methods:[],template:{memory:{array:Lr},slots:{0:{structure:ne,memory:{array:Gr},slots:{0:{structure:ve,memory:{array:Ye},address:1047168,slots:{0:{structure:xe,memory:{array:Hr},address:0}}}}}}}},slot:20});Object.assign(De,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:23});Object.assign(Fe,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:De}],methods:[],template:null},slot:30});const Jr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Nr=new Uint8Array,Qr=new Uint8Array([152,9,16,0]),Wr=new Uint8Array([4,0,0,0]);Object.assign(ie,{...t,type:2,name:"disks.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Fe},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Ee},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:j}],methods:[],template:{memory:{array:Jr}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:Ke},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:Nr},slots:{0:{structure:p,memory:{array:Qr},slots:{0:{structure:b,memory:{array:Wr}}}}}}},slot:29});const Xr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Yr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Zr=new Uint8Array;Object.assign(x,{...t,type:2,name:"disks.KernelOutput(u8,disks.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"pxlOut",structure:ie}],methods:[],template:{memory:{array:Xr},slots:{0:{structure:ie,memory:{array:Yr},slots:{0:{structure:Fe,memory:{array:Ye},address:1047168,slots:{0:{structure:De,memory:{array:Zr},address:0}}}}}}}},slot:28});const ea=new Uint8Array([0,0,0,0,0,0,0,0,0,0,128,63,0,0,0,0,0,0,0,0,0,0,128,63,0,0,0,66,31,133,43,63]);Object.assign(v,{...t,type:2,name:"disks.KernelParameters(disks.kernel)",length:1,byteSize:32,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:192,bitSize:32,byteSize:4,slot:0,name:"size",structure:f},{...e,type:4,isRequired:!1,bitOffset:224,bitSize:32,byteSize:4,slot:1,name:"radius",structure:f},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,slot:2,name:"base",structure:C},{...e,type:6,isRequired:!1,bitOffset:64,bitSize:128,byteSize:16,slot:3,name:"rotation",structure:we}],methods:[],template:{memory:{array:ea}}},slot:31});Object.assign($e,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(disks.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:50});Object.assign(Be,{...t,type:7,name:"ErrorSet0000!disks.KernelOutput(u8,disks.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:x},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:$e}],methods:[],template:null},slot:37});Object.assign(Le,{...t,type:3,name:"createOutput",length:1,byteSize:96,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:l},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:l},{...e,type:6,bitOffset:320,bitSize:192,byteSize:24,slot:2,name:"2",structure:I},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:3,name:"3",structure:v},{...e,type:6,bitOffset:512,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Be}],methods:[],template:null},slot:35});Object.assign(Ge,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(disks.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:51});Object.assign(He,{...t,type:7,name:"ErrorSet0001!disks.KernelOutput(u8,disks.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:x},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Ge}],methods:[],template:null},slot:38});Object.assign(Je,{...t,type:3,name:"createPartialOutput",length:1,byteSize:104,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:l},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:l},{...e,type:3,bitOffset:320,bitSize:32,byteSize:4,slot:2,name:"2",structure:l},{...e,type:3,bitOffset:352,bitSize:32,byteSize:4,slot:3,name:"3",structure:l},{...e,type:6,bitOffset:384,bitSize:192,byteSize:24,slot:4,name:"4",structure:I},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:5,name:"5",structure:v},{...e,type:6,bitOffset:576,bitSize:224,byteSize:28,slot:6,name:"retval",structure:He}],methods:[],template:null},slot:36});const ta=new Uint8Array,sa={argStruct:Le,thunk:5,name:"createOutput"},ra={argStruct:Je,thunk:6,name:"createPartialOutput"};Object.assign(Ne,{...t,type:2,name:"disks",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:ta}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:Te},{...e,type:7,isRequired:!1,name:"Input",structure:I},{...e,type:7,isRequired:!1,name:"Output",structure:x},{...e,type:7,isRequired:!1,name:"Parameters",structure:v}],methods:[sa,ra],template:null},slot:0});const aa=[c,ue,oe,M,me,le,_,b,p,P,k,w,f,r,s,ye,T,ce,be,$,pe,B,C,fe,L,de,G,Se,H,he,ge,J,ze,N,we,R,g,Ae,Q,q,z,Oe,W,Ue,X,Re,Y,qe,Z,je,Pe,ee,ke,te,Ce,se,V,A,Ve,re,Ie,ae,Te,O,xe,ve,l,Ee,j,Ke,ne,I,De,Fe,ie,x,v,$e,Be,Le,Ge,He,Je,Ne],na=ht(aa),ia=Ne.constructor,ua=(async()=>{const u=new URL("disks-93cda9b1.wasm",import.meta.url).href;return fetch(u)})();gt(ua,{...na,writeBack:!0});const{createOutput:fa,createPartialOutput:oa,kernel:_e,Input:ma,Output:da,Parameters:Sa}=ia;function la(u,m,n,a,i={},S={}){if(Array.isArray(i)){const d=i;i={};for(const[y,h]of Object.keys(_e.inputImages).entries())i[h]=d[y]}const E=new ma(void 0),K=Object.keys(_e.inputImages),o=[];let U;for(const d of K){let y=i[d];if(y||(K.length===1&&["data","width","height"].every(h=>!!i[h])?y=i:o.push(d)),E[d]=y,U){if(y.colorSpace!==U)throw new Error(`Input images must all use the same color space: ${U}`)}else U=y.colorSpace}if(o.length>0)throw new Error(`Missing input image${o.length>1?"s":""}: ${o.join(", ")}`);const Me=oa(u,m,n,a,E,S),Qe=d=>{const y=Object.keys(d),h={};for(const We of y){const{data:{typedArray:D},width:Xe,height:et}=d[We];let F;if(typeof ImageData=="function"){const tt=new Uint8ClampedArray(D.buffer,D.byteOffset,D.byteLength);F=new ImageData(tt,Xe,a,{colorSpace:U})}else F={data:D,width:Xe,height:et};if(y.length===1)return F;h[We]=F}return h};return Me[Symbol.toStringTag]==="Promise"?Me.then(Qe):Qe(Me)}function ya(){const u={};for(let[m,n]of Object.entries(_e)){if(m==="parameters"){const a={};for(const[i,S]of Object.entries(n)){const E=a[i]={};for(let[K,o]of Object.entries(S))typeof o=="object"?"string"in o?o=o.string:o=Ze(o):typeof o=="function"&&(o=ca(o.name)),E[K]=o}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());u[m]=n}return u}function Ze(u){const m=[];for(let[n,a]of Object.entries(u))typeof a=="object"&&(a=Ze(a)),m[n]=a;return m}function ca(u){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[u]}onmessage=u=>{const[m,n,...a]=u.data;ba(m,a).then(([i,S])=>{postMessage([m,n,i],{transfer:S})}).catch(i=>{postMessage(["error",n,i])})};async function ba(u,m){switch(u){case"getKernelInfo":return[ya(...m)];case"createPartialImageData":const a=await la(...m),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const S of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${u}`)}}
