import{u as vt,a as Et,b as xt,c as Ct,d as Kt,e as _t,f as Dt,g as Ft,h as Mt,i as Tt,j as $t,k as Lt,l as Bt,m as Gt,n as Ht,p as Jt,o as Nt,q as Qt,r as Wt,s as Xt}from"./index-25a52593.js";vt();$t();Lt();Et();xt();Bt();Gt();Ht();Jt();Ct();Kt();_t();Dt();Nt();Xt();Ft();Qt();Mt();Tt();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},e={type:0,isRequired:!1},s={},g={},_={},D={},F={},M={},y={},f={},T={},$={},l={},j={},h={},L={},B={},d={},G={},H={},te={},I={},J={},V={},u={},p={},U={},se={},N={},R={},Q={},k={},W={},q={},v={},P={},re={},ae={},K={},ne={},ie={},oe={},Ae={},ce={},Ue={},ue={},Pe={},me={},Ie={},ye={},Ve={},Re={},be={},ke={},X={},qe={},ve={},le={},Ee={},pe={},xe={},Ce={},Ke={},_e={},De={},Fe={},Me={},Te={},$e={},Le={},Be={},Ge={},He={},Je={},Ne={},Qe={},We={},ge={},Xe={},Ye={},fe={},Ze={},Oe={},et={},tt={},st={},rt={},at={},nt={},it={},Se={},ot={},ct={},ut={},mt={},yt={},bt={},lt={},pt={},gt={},ft={},ze={},Ot={},St={},zt={},jt={},ht={},dt={},wt={},At={},Ut={},Pt={},Yt=new Uint8Array,Zt=new Uint8Array,es=new Uint8Array([0,0,0,0,0,0,0,0]),ts=new Uint8Array,ss=new Uint8Array([0,0,0,0,0,0,240,63]),rs=new Uint8Array,as=new Uint8Array([0,0,0,0,0,0,0,0]),ns=new Uint8Array,is=new Uint8Array,os=new Uint8Array([4]),cs=new Uint8Array,us=new Uint8Array,ms=new Uint8Array([114,5,0,1]),ys=new Uint8Array([65,73,70,0]),bs=new Uint8Array([129,5,0,1]),ls=new Uint8Array([65,100,111,98,101,32,83,121,115,116,101,109,115,0]),ps=new Uint8Array,gs=new Uint8Array([2]),fs=new Uint8Array([160,5,0,1]),Os=new Uint8Array([97,32,118,97,114,105,97,98,108,101,32,115,101,112,105,97,32,102,105,108,116,101,114,0]),Ss=new Uint8Array,zs=new Uint8Array,js=new Uint8Array,hs=new Uint8Array([0]),ds=new Uint8Array([1]),It=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ws=new Uint8Array,As=new Uint8Array,Us=new Uint8Array,Ps=new Uint8Array,Is=new Uint8Array([4]),je=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Vt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Vs=new Uint8Array,Rs=new Uint8Array,ks=new Uint8Array,qs=new Uint8Array,vs=new Uint8Array([4]),he=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Es=new Uint8Array([0,0,0,0]),xs=new Uint8Array([27,0]),Cs=new Uint8Array,Ks=new Uint8Array,_s=new Uint8Array,Ds=new Uint8Array;Object.assign(Ae,{slots:{0:ce,1:ue,2:me,3:ye}});Object.assign(ce,{structure:s,memory:{array:Yt},slots:{0:Ue}});Object.assign(Ue,{structure:j});Object.assign(ue,{structure:l,memory:{array:Zt},slots:{0:Pe}});Object.assign(Pe,{structure:h,memory:{array:es}});Object.assign(me,{structure:l,memory:{array:ts},slots:{0:Ie}});Object.assign(Ie,{structure:h,memory:{array:ss}});Object.assign(ye,{structure:l,memory:{array:rs},slots:{0:Ve}});Object.assign(Ve,{structure:h,memory:{array:as}});Object.assign(Re,{slots:{0:be}});Object.assign(be,{structure:L,memory:{array:ns},slots:{0:ce,1:ue,2:me,3:ye}});Object.assign(ke,{slots:{0:X}});Object.assign(X,{structure:y,memory:{array:is},slots:{0:qe}});Object.assign(qe,{structure:f,memory:{array:os}});Object.assign(ve,{slots:{0:le}});Object.assign(le,{structure:d,memory:{array:cs},slots:{0:X}});Object.assign(Ee,{slots:{0:pe}});Object.assign(pe,{structure:d,memory:{array:us},slots:{0:X}});Object.assign(xe,{slots:{0:Ce,1:_e,2:Fe,3:Te,4:Le,5:Be,6:Ge}});Object.assign(Ce,{structure:D,memory:{array:ms},slots:{0:Ke}});Object.assign(Ke,{structure:_,memory:{array:ys},reloc:16778610,const:!0});Object.assign(_e,{structure:M,memory:{array:bs},slots:{0:De}});Object.assign(De,{structure:F,memory:{array:ls},reloc:16778625,const:!0});Object.assign(Fe,{structure:y,memory:{array:ps},slots:{0:Me}});Object.assign(Me,{structure:f,memory:{array:gs}});Object.assign(Te,{structure:$,memory:{array:fs},slots:{0:$e}});Object.assign($e,{structure:T,memory:{array:Os},reloc:16778656,const:!0});Object.assign(Le,{structure:B,memory:{array:Ss},slots:{0:be}});Object.assign(Be,{structure:G,memory:{array:zs},slots:{0:le}});Object.assign(Ge,{structure:H,memory:{array:js},slots:{0:pe}});Object.assign(He,{slots:{0:Je,1:Ne}});Object.assign(Je,{structure:p,memory:{array:hs}});Object.assign(Ne,{structure:p,memory:{array:ds}});Object.assign(Qe,{memory:{array:It},slots:{0:We}});Object.assign(We,{structure:V,memory:{array:It,offset:0,length:8},slots:{0:ge}});Object.assign(ge,{structure:J,memory:{array:ws},reloc:0,const:!0});Object.assign(Xe,{slots:{0:Ye,1:Ze,2:et}});Object.assign(Ye,{structure:s,memory:{array:As},slots:{0:fe}});Object.assign(fe,{structure:I});Object.assign(Ze,{structure:s,memory:{array:Us},slots:{0:Oe}});Object.assign(Oe,{structure:se});Object.assign(et,{structure:y,memory:{array:Ps},slots:{0:tt}});Object.assign(tt,{structure:f,memory:{array:Is}});Object.assign(st,{memory:{array:je},slots:{0:rt}});Object.assign(rt,{structure:N,memory:{array:je},slots:{0:at}});Object.assign(at,{structure:V,memory:{array:je,offset:0,length:8},slots:{0:ge}});Object.assign(nt,{memory:{array:Vt},slots:{0:it}});Object.assign(it,{structure:k,memory:{array:Vt,offset:0,length:8},slots:{0:Se}});Object.assign(Se,{structure:Q,memory:{array:Vs},reloc:0});Object.assign(ot,{slots:{0:ct,1:ut,2:mt}});Object.assign(ct,{structure:s,memory:{array:Rs},slots:{0:fe}});Object.assign(ut,{structure:s,memory:{array:ks},slots:{0:Oe}});Object.assign(mt,{structure:y,memory:{array:qs},slots:{0:yt}});Object.assign(yt,{structure:f,memory:{array:vs}});Object.assign(bt,{memory:{array:he},slots:{0:lt}});Object.assign(lt,{structure:W,memory:{array:he},slots:{0:pt}});Object.assign(pt,{structure:k,memory:{array:he,offset:0,length:8},slots:{0:Se}});Object.assign(gt,{memory:{array:Es}});Object.assign(ft,{slots:{0:ze}});Object.assign(ze,{structure:P,memory:{array:xs}});Object.assign(Ot,{slots:{0:ze}});Object.assign(St,{slots:{0:zt,1:ht,2:wt,3:Ut}});Object.assign(zt,{structure:s,memory:{array:Cs},slots:{0:jt}});Object.assign(jt,{structure:te});Object.assign(ht,{structure:s,memory:{array:Ks},slots:{0:dt}});Object.assign(dt,{structure:R});Object.assign(wt,{structure:s,memory:{array:_s},slots:{0:At}});Object.assign(At,{structure:q});Object.assign(Ut,{structure:s,memory:{array:Ds},slots:{0:Pt}});Object.assign(Pt,{structure:v});const Fs={argStruct:ae,thunkId:2,name:"createOutput"},Ms={argStruct:ie,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...t,name:"type",align:1,instance:{members:[{...e,type:8,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(g,{...t,name:"u8",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(_,{...t,type:1,name:"[3:0]u8",length:3,byteSize:4,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(D,{...t,type:13,name:"*const [3:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[]}});Object.assign(F,{...t,type:1,name:"[13:0]u8",length:13,byteSize:14,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(M,{...t,type:13,name:"*const [13:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(y,{...t,name:"comptime_int",align:1,instance:{members:[{...e,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:y}],methods:[]}});Object.assign(f,{...t,name:"i8",byteSize:1,align:1,instance:{members:[{...e,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(T,{...t,type:1,name:"[23:0]u8",length:23,byteSize:24,align:1,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign($,{...t,type:13,name:"*const [23:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[]}});Object.assign(l,{...t,name:"comptime_float",align:1,instance:{members:[{...e,type:9,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:l}],methods:[]}});Object.assign(j,{...t,name:"f32",byteSize:4,align:4,instance:{members:[{...e,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:j}],methods:[]}});Object.assign(h,{...t,name:"f64",byteSize:8,align:8,instance:{members:[{...e,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:h}],methods:[]}});Object.assign(L,{...t,type:2,name:"Struct2890073165",align:1,instance:{members:[{...e,type:9,slot:0,name:"type",structure:s},{...e,type:9,slot:1,name:"minValue",structure:l},{...e,type:9,slot:2,name:"maxValue",structure:l},{...e,type:9,slot:3,name:"defaultValue",structure:l}],methods:[],template:Ae}});Object.assign(B,{...t,type:2,name:"Struct1446025373",align:1,instance:{members:[{...e,type:9,slot:0,name:"intensity",structure:L}],methods:[],template:Re}});Object.assign(d,{...t,type:2,name:"Struct3832472641",align:1,instance:{members:[{...e,type:9,slot:0,name:"channels",structure:y}],methods:[],template:ke}});Object.assign(G,{...t,type:2,name:"Struct2242867897",align:1,instance:{members:[{...e,type:9,slot:0,name:"src",structure:d}],methods:[],template:ve}});Object.assign(H,{...t,type:2,name:"Struct172100005",align:1,instance:{members:[{...e,type:9,slot:0,name:"dst",structure:d}],methods:[],template:Ee}});Object.assign(te,{...t,type:2,name:"sepia.kernel",align:1,static:{members:[{...e,type:9,slot:0,name:"namespace",structure:D},{...e,type:9,slot:1,name:"vendor",structure:M},{...e,type:9,slot:2,name:"version",structure:y},{...e,type:9,slot:3,name:"description",structure:$},{...e,type:9,slot:4,name:"parameters",structure:B},{...e,type:9,slot:5,name:"inputImages",structure:G},{...e,type:9,slot:6,name:"outputImages",structure:H}],methods:[],template:xe}});Object.assign(I,{...t,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...e,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(J,{...t,type:14,name:"[_]const @Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(V,{...t,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:64,byteSize:8,slot:0,structure:J}],methods:[]}});Object.assign(u,{...t,name:"u32",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:u}],methods:[]}});Object.assign(p,{...t,type:11,name:"sepia.ColorSpace",byteSize:1,align:1,instance:{members:[{...e,type:3,bitOffset:0,bitSize:8,byteSize:1}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"srgb",structure:p},{...e,type:9,slot:1,name:"display-p3",structure:p}],methods:[],template:He}});Object.assign(U,{...t,name:"usize",byteSize:4,align:4,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:U}],methods:[]}});Object.assign(se,{...t,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...e,type:4,bitSize:32,byteSize:4,structure:j}],methods:[]}});Object.assign(N,{...t,type:2,name:"sepia.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:V},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...e,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:Qe},static:{members:[{...e,type:9,slot:0,name:"Pixel",structure:s},{...e,type:9,slot:1,name:"FPixel",structure:s},{...e,type:9,slot:2,name:"channels",structure:y}],methods:[],template:Xe}});Object.assign(R,{...t,type:2,name:"sepia.KernelInput(u8,sepia.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:N}],methods:[],template:st}});Object.assign(Q,{...t,type:14,name:"[_]@Vector(4, u8)",length:0,byteSize:4,align:4,instance:{members:[{...e,type:7,bitSize:32,byteSize:4,structure:I}],methods:[]}});Object.assign(k,{...t,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitSize:64,byteSize:8,slot:0,structure:Q}],methods:[]}});Object.assign(W,{...t,type:2,name:"sepia.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:k},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...e,type:5,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:nt},static:{members:[{...e,type:9,slot:0,name:"Pixel",structure:s},{...e,type:9,slot:1,name:"FPixel",structure:s},{...e,type:9,slot:2,name:"channels",structure:y}],methods:[],template:ot}});Object.assign(q,{...t,type:2,name:"sepia.KernelOutput(u8,sepia.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:W}],methods:[],template:bt}});Object.assign(v,{...t,type:2,name:"sepia.KernelParameters(sepia.kernel)",byteSize:4,align:4,instance:{members:[{...e,type:4,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"intensity",structure:j}],methods:[],template:gt}});Object.assign(P,{...t,type:10,name:"@typeInfo(@typeInfo(@TypeOf(sepia.createOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"OutOfMemory",structure:P}],methods:[],template:ft}});Object.assign(re,{...t,type:9,name:"ErrorSet3691325303!sepia.KernelOutput(u8,sepia.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:q},{...e,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:P}],methods:[]}});Object.assign(ae,{...t,type:5,name:"createOutput",byteSize:64,align:4,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...e,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...e,type:7,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:R},{...e,type:7,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:1,name:"3",structure:v},{...e,type:7,isRequired:!0,bitOffset:288,bitSize:224,byteSize:28,slot:2,name:"retval",structure:re}],methods:[]}});Object.assign(K,{...t,type:10,name:"@typeInfo(@typeInfo(@TypeOf(sepia.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",byteSize:2,align:2,instance:{members:[{...e,type:3,bitOffset:0,bitSize:16,byteSize:2}],methods:[]},static:{members:[{...e,type:9,slot:0,name:"OutOfMemory",structure:K}],methods:[],template:Ot}});Object.assign(ne,{...t,type:9,name:"ErrorSet4203942675!sepia.KernelOutput(u8,sepia.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...e,type:7,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:q},{...e,type:6,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:K}],methods:[]}});Object.assign(ie,{...t,type:5,name:"createPartialOutput",byteSize:72,align:4,hasPointer:!0,instance:{members:[{...e,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...e,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...e,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:u},{...e,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:u},{...e,type:7,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:R},{...e,type:7,isRequired:!0,bitOffset:320,bitSize:32,byteSize:4,slot:1,name:"5",structure:v},{...e,type:7,isRequired:!0,bitOffset:352,bitSize:224,byteSize:28,slot:2,name:"retval",structure:ne}],methods:[]}});Object.assign(oe,{...t,type:2,name:"sepia",align:1,static:{members:[{...e,type:9,slot:0,name:"kernel",structure:s},{...e,type:9,slot:1,name:"Input",structure:s},{...e,type:9,slot:2,name:"Output",structure:s},{...e,type:9,slot:3,name:"Parameters",structure:s}],methods:[Fs,Ms],template:St}});const Ts=[s,g,_,D,F,M,y,f,T,$,l,j,h,L,B,d,G,H,te,I,J,V,u,p,U,se,N,R,Q,k,W,q,v,P,re,ae,K,ne,ie,oe],$s=oe,Ls={runtimeSafety:!1,littleEndian:!0},Y=Wt();Y.getControlObject();Y.recreateStructures(Ts,Ls);const Bs=(async()=>{const i=new URL("sepia-bbbfd7f4.wasm",import.meta.url).href;return fetch(i)})();Y.loadModule(Bs);Y.linkVariables(!0);const{constructor:Gs}=$s,{createPartialOutput:Hs,Input:Js,kernel:ee}=Gs;function Ns(i,o,a,r,n={},O={}){const S=[];for(const[m]of ee.inputImages)S.push(m);const w=[];for(const[m]of ee.outputImages)w.push(m);if(Array.isArray(n)){const m=n;n={};for(const[b,z]of S.entries())n[z]=m[b]}const c=new Js(void 0),E=[];let A;for(const m of S){let b=n[m];if(b||(S.length===1&&["data","width","height"].every(z=>!!n[z])?b=n:E.push(m)),c[m]=b,A){if(b.colorSpace!==A)throw new Error(`Input images must all use the same color space: ${A}`)}else A=b.colorSpace}if(E.length>0)throw new Error(`Missing input image${E.length>1?"s":""}: ${E.join(", ")}`);const Z=Hs(i,o,a,r,c,O),de=m=>{const b={};for(const z of w){const{data:{typedArray:x},width:we,height:kt}=m[z];let C;if(typeof ImageData=="function"){const qt=new Uint8ClampedArray(x.buffer,x.byteOffset,x.byteLength);C=new ImageData(qt,we,r,{colorSpace:A})}else C={data:x,width:we,height:kt};if(w.length===1)return C;b[z]=C}return b};return Z[Symbol.toStringTag]==="Promise"?Z.then(de):de(Z)}function Qs(){const i={};for(let[o,a]of ee){if(o==="parameters"){const r={};for(const[n,O]of a){const S=r[n]={};for(let[w,c]of O)typeof c=="object"?"string"in c?c=c.string:c=Rt(c):typeof c=="function"&&(c=Ws(c.name)),S[w]=c}a=r}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());i[o]=a}return i}function Rt(i){const o=[];for(let[a,r]of i)typeof r=="object"&&(r=Rt(r)),o[a]=r;return o}function Ws(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[o,a,...r]=i.data;Xs(o,r).then(([n,O])=>{postMessage([o,a,n],{transfer:O})}).catch(n=>{postMessage(["error",a,n])})};async function Xs(i,o){switch(i){case"getKernelInfo":return[Qs(...o)];case"createPartialImageData":const r=await Ns(...o),n=[];if("data"in r&&"width"in r&&"height"in r)n.push(r.data.buffer);else for(const O of Object.entries(r))n.push(r.data.buffer);return[r,n];default:throw new Error(`Unknown function: ${i}`)}}
