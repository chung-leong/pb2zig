import{u as Ye,a as Ze,b as et,d as tt,c as st,e as rt,f as at,g as nt,h as it,i as ut,j as ot,k as lt,l as mt,m as yt,o as ct,n as bt,p as pt,q as dt}from"./index-422d9c98.js";Ye();Ze();et();tt();st();rt();at();nt();it();ut();ot();lt();mt();yt();ct();bt();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},c={},ne={},ie={},M={},ue={},oe={},_={},d={},f={},le={},me={},T={},j={},p={},m={},s={},z={},h={},ye={},ce={},$={},be={},B={},C={},V={},q={},pe={},L={},de={},fe={},G={},he={},H={},Se={},J={},g={},ge={},N={},ze={},Oe={},Q={},Re={},W={},qe={},X={},we={},Ae={},Y={},Ue={},Z={},je={},ee={},k={},w={},Pe={},te={},Ce={},se={},De={},A={},Ve={},ke={},y={},Ie={},P={},re={},I={},ve={},Ee={},ae={},v={},E={},Fe={},Me={},_e={},Te={},$e={},Be={},Le={};Object.assign(c,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:5});Object.assign(ne,{...t,type:1,name:"[22:0]u8",length:22,byteSize:23,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:4});Object.assign(ie,{...t,type:11,name:"*const [22:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:3});Object.assign(M,{...t,type:11,name:"*const *const [22:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:2});Object.assign(ue,{...t,type:1,name:"[7:0]u8",length:7,byteSize:8,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:8});Object.assign(oe,{...t,type:11,name:"*const [7:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:7});Object.assign(_,{...t,type:11,name:"*const *const [7:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:6});Object.assign(d,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:d}],methods:[],template:null},slot:10});Object.assign(f,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:d}],methods:[],template:null},slot:9});Object.assign(le,{...t,type:1,name:"[112:0]u8",length:112,byteSize:113,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:13});Object.assign(me,{...t,type:11,name:"*const [112:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:12});Object.assign(T,{...t,type:11,name:"*const *const [112:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:11});Object.assign(j,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:j}],methods:[],template:null},slot:52});Object.assign(p,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:j}],methods:[],template:null},slot:32});Object.assign(m,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:m}],methods:[],template:null},slot:77});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:m}],methods:[],template:null},slot:76});const ft=new Uint8Array([]),ht=new Uint8Array([48,246,15,0]),St=new Uint8Array([0,0,0,0,0,0,0,0]),gt=new Uint8Array([88,246,15,0]),zt=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(z,{...t,type:2,name:"Struct0023",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:ft},slots:{0:{structure:s,memory:{array:ht},slots:{0:{structure:m,memory:{array:St}}}},1:{structure:s,memory:{array:gt},slots:{0:{structure:m,memory:{array:zt}}}}}}},slot:56});Object.assign(h,{...t,type:11,name:"Struct0020",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:z}],methods:[],template:null},slot:55});Object.assign(ye,{...t,type:1,name:"[16:0]u8",length:16,byteSize:17,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:59});Object.assign(ce,{...t,type:11,name:"*const [16:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:58});Object.assign($,{...t,type:11,name:"*const *const [16:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:57});const Ot=new Uint8Array([]),Rt=new Uint8Array([170,170,170,170]),i=new Uint8Array([]),qt=new Uint8Array([64,249,15,0]),wt=new Uint8Array([131,34,16,0]),At=new Uint8Array([70,111,114,32,114,101,100,32,99,104,97,110,110,101,108,46,0]);Object.assign(be,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:p},{...e,type:8,isRequired:!1,slot:0,name:"defaultValue",structure:h},{...e,type:8,isRequired:!1,slot:1,name:"description",structure:$}],methods:[],template:{memory:{array:Ot},slots:{0:{structure:h,memory:{array:Rt},slots:{0:{structure:z,memory:{array:i},address:-1431655766}}},1:{structure:$,memory:{array:qt},slots:{0:{structure:ce,memory:{array:wt},slots:{0:{structure:ye,memory:{array:At},address:1057411}}}}}}}},slot:39});Object.assign(B,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:38});Object.assign(C,{...t,type:1,name:"[18:0]u8",length:18,byteSize:19,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:62});Object.assign(V,{...t,type:11,name:"*const [18:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:C}],methods:[],template:null},slot:61});Object.assign(q,{...t,type:11,name:"*const *const [18:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:V}],methods:[],template:null},slot:60});const Ut=new Uint8Array([]),jt=new Uint8Array([170,170,170,170]),Pt=new Uint8Array([152,249,15,0]),Ct=new Uint8Array([112,34,16,0]),Vt=new Uint8Array([70,111,114,32,103,114,101,101,110,32,99,104,97,110,110,101,108,46,0]);Object.assign(pe,{...t,type:2,name:"Struct0014",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:p},{...e,type:8,isRequired:!1,slot:0,name:"defaultValue",structure:h},{...e,type:8,isRequired:!1,slot:1,name:"description",structure:q}],methods:[],template:{memory:{array:Ut},slots:{0:{structure:h,memory:{array:jt},slots:{0:{structure:z,memory:{array:i},address:-1431655766}}},1:{structure:q,memory:{array:Pt},slots:{0:{structure:V,memory:{array:Ct},slots:{0:{structure:C,memory:{array:Vt},address:1057392}}}}}}}},slot:41});Object.assign(L,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:40});Object.assign(de,{...t,type:1,name:"[17:0]u8",length:17,byteSize:18,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:65});Object.assign(fe,{...t,type:11,name:"*const [17:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:de}],methods:[],template:null},slot:64});Object.assign(G,{...t,type:11,name:"*const *const [17:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:63});const kt=new Uint8Array([]),It=new Uint8Array([170,170,170,170]),vt=new Uint8Array([64,249,15,0]),Et=new Uint8Array([94,34,16,0]),xt=new Uint8Array([70,111,114,32,98,108,117,101,32,99,104,97,110,110,101,108,46,0]);Object.assign(he,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:p},{...e,type:8,isRequired:!1,slot:0,name:"defaultValue",structure:h},{...e,type:8,isRequired:!1,slot:1,name:"description",structure:G}],methods:[],template:{memory:{array:kt},slots:{0:{structure:h,memory:{array:It},slots:{0:{structure:z,memory:{array:i},address:-1431655766}}},1:{structure:G,memory:{array:vt},slots:{0:{structure:fe,memory:{array:Et},slots:{0:{structure:de,memory:{array:xt},address:1057374}}}}}}}},slot:43});Object.assign(H,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:he}],methods:[],template:null},slot:42});const Kt=new Uint8Array([]),Dt=new Uint8Array([170,170,170,170]),Ft=new Uint8Array([152,249,15,0]),Mt=new Uint8Array([75,34,16,0]),_t=new Uint8Array([70,111,114,32,97,108,112,104,97,32,99,104,97,110,110,101,108,46,0]);Object.assign(Se,{...t,type:2,name:"Struct0016",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:p},{...e,type:8,isRequired:!1,slot:0,name:"defaultValue",structure:h},{...e,type:8,isRequired:!1,slot:1,name:"description",structure:q}],methods:[],template:{memory:{array:Kt},slots:{0:{structure:h,memory:{array:Dt},slots:{0:{structure:z,memory:{array:i},address:-1431655766}}},1:{structure:q,memory:{array:Ft},slots:{0:{structure:V,memory:{array:Mt},slots:{0:{structure:C,memory:{array:_t},address:1057355}}}}}}}},slot:45});Object.assign(J,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Se}],methods:[],template:null},slot:44});Object.assign(g,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:j}],methods:[],template:null},slot:33});const Tt=new Uint8Array([]),$t=new Uint8Array([72,249,15,0]),Bt=new Uint8Array([0,0,0,0,0,0,0,0]),Lt=new Uint8Array([112,249,15,0]),Gt=new Uint8Array([0,0,0,0,0,0,0,0]),Ht=new Uint8Array([152,249,15,0]),Jt=new Uint8Array([0,0,0,0,0,0,0,0]),Nt=new Uint8Array([232,249,15,0]),Qt=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(ge,{...t,type:2,name:"Struct0024",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:s}],methods:[],template:{memory:{array:Tt},slots:{0:{structure:s,memory:{array:$t},slots:{0:{structure:m,memory:{array:Bt}}}},1:{structure:s,memory:{array:Lt},slots:{0:{structure:m,memory:{array:Gt}}}},2:{structure:s,memory:{array:Ht},slots:{0:{structure:m,memory:{array:Jt}}}},3:{structure:s,memory:{array:Nt},slots:{0:{structure:m,memory:{array:Qt}}}}}}},slot:67});Object.assign(N,{...t,type:11,name:"Struct0021",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ge}],methods:[],template:null},slot:66});Object.assign(ze,{...t,type:1,name:"[48:0]u8",length:48,byteSize:49,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:70});Object.assign(Oe,{...t,type:11,name:"*const [48:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ze}],methods:[],template:null},slot:69});Object.assign(Q,{...t,type:11,name:"*const *const [48:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Oe}],methods:[],template:null},slot:68});const Wt=new Uint8Array([]),Xt=new Uint8Array([170,170,170,170]),Yt=new Uint8Array([160,248,15,0]),Zt=new Uint8Array([26,34,16,0]),es=new Uint8Array([67,111,108,111,114,32,102,111,114,32,116,104,114,101,115,104,111,108,100,101,100,32,97,114,101,97,46,99,111,108,111,114,70,111,114,65,108,108,80,97,115,115,101,100,65,114,101,97,0]);Object.assign(Re,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:g},{...e,type:8,isRequired:!1,slot:0,name:"defaultValue",structure:N},{...e,type:8,isRequired:!1,slot:1,name:"description",structure:Q}],methods:[],template:{memory:{array:Wt},slots:{0:{structure:N,memory:{array:Xt},slots:{0:{structure:ge,memory:{array:i},address:-1431655766}}},1:{structure:Q,memory:{array:Yt},slots:{0:{structure:Oe,memory:{array:Zt},slots:{0:{structure:ze,memory:{array:es},address:1057306}}}}}}}},slot:47});Object.assign(W,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Re}],methods:[],template:null},slot:46});const ts=new Uint8Array([]),ss=new Uint8Array([72,249,15,0]),rs=new Uint8Array([0,0,0,0,0,0,240,63]),as=new Uint8Array([112,249,15,0]),ns=new Uint8Array([0,0,0,0,0,0,240,63]),is=new Uint8Array([152,249,15,0]),us=new Uint8Array([0,0,0,0,0,0,240,63]),os=new Uint8Array([232,249,15,0]),ls=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(qe,{...t,type:2,name:"Struct0025",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:s}],methods:[],template:{memory:{array:ts},slots:{0:{structure:s,memory:{array:ss},slots:{0:{structure:m,memory:{array:rs}}}},1:{structure:s,memory:{array:as},slots:{0:{structure:m,memory:{array:ns}}}},2:{structure:s,memory:{array:is},slots:{0:{structure:m,memory:{array:us}}}},3:{structure:s,memory:{array:os},slots:{0:{structure:m,memory:{array:ls}}}}}}},slot:72});Object.assign(X,{...t,type:11,name:"Struct0022",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:qe}],methods:[],template:null},slot:71});Object.assign(we,{...t,type:1,name:"[25:0]u8",length:25,byteSize:26,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:75});Object.assign(Ae,{...t,type:11,name:"*const [25:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:we}],methods:[],template:null},slot:74});Object.assign(Y,{...t,type:11,name:"*const *const [25:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ae}],methods:[],template:null},slot:73});const ms=new Uint8Array([]),ys=new Uint8Array([170,170,170,170]),cs=new Uint8Array([160,248,15,0]),bs=new Uint8Array([0,34,16,0]),ps=new Uint8Array([67,111,108,111,114,32,102,111,114,32,97,108,108,32,112,97,115,115,101,100,32,97,114,101,97,0]);Object.assign(Ue,{...t,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:g},{...e,type:8,isRequired:!1,slot:0,name:"defaultValue",structure:X},{...e,type:8,isRequired:!1,slot:1,name:"description",structure:Y}],methods:[],template:{memory:{array:ms},slots:{0:{structure:X,memory:{array:ys},slots:{0:{structure:qe,memory:{array:i},address:-1431655766}}},1:{structure:Y,memory:{array:cs},slots:{0:{structure:Ae,memory:{array:bs},slots:{0:{structure:we,memory:{array:ps},address:1057280}}}}}}}},slot:49});Object.assign(Z,{...t,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ue}],methods:[],template:null},slot:48});const ds=new Uint8Array([]),fs=new Uint8Array([170,170,170,170]),hs=new Uint8Array([170,170,170,170]),Ss=new Uint8Array([170,170,170,170]),gs=new Uint8Array([170,170,170,170]),zs=new Uint8Array([170,170,170,170]),Os=new Uint8Array([170,170,170,170]);Object.assign(je,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"threshold0",structure:B},{...e,type:8,isRequired:!1,slot:1,name:"threshold1",structure:L},{...e,type:8,isRequired:!1,slot:2,name:"threshold2",structure:H},{...e,type:8,isRequired:!1,slot:3,name:"threshold3",structure:J},{...e,type:8,isRequired:!1,slot:4,name:"outputColor1",structure:W},{...e,type:8,isRequired:!1,slot:5,name:"outputColor2",structure:Z}],methods:[],template:{memory:{array:ds},slots:{0:{structure:B,memory:{array:fs},slots:{0:{structure:be,memory:{array:i},address:-1431655766}}},1:{structure:L,memory:{array:hs},slots:{0:{structure:pe,memory:{array:i},address:-1431655766}}},2:{structure:H,memory:{array:Ss},slots:{0:{structure:he,memory:{array:i},address:-1431655766}}},3:{structure:J,memory:{array:gs},slots:{0:{structure:Se,memory:{array:i},address:-1431655766}}},4:{structure:W,memory:{array:zs},slots:{0:{structure:Re,memory:{array:i},address:-1431655766}}},5:{structure:Z,memory:{array:Os},slots:{0:{structure:Ue,memory:{array:i},address:-1431655766}}}}}},slot:15});Object.assign(ee,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:je}],methods:[],template:null},slot:14});const Rs=new Uint8Array([]),qs=new Uint8Array([48,250,15,0]),ws=new Uint8Array([4,0,0,0]);Object.assign(k,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:Rs},slots:{0:{structure:f,memory:{array:qs},slots:{0:{structure:d,memory:{array:ws}}}}}}},slot:51});Object.assign(w,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:k}],methods:[],template:null},slot:50});const As=new Uint8Array([]),Us=new Uint8Array([170,170,170,170]);Object.assign(Pe,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"source",structure:w}],methods:[],template:{memory:{array:As},slots:{0:{structure:w,memory:{array:Us},slots:{0:{structure:k,memory:{array:i},address:-1431655766}}}}}},slot:17});Object.assign(te,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Pe}],methods:[],template:null},slot:16});const js=new Uint8Array([]),Ps=new Uint8Array([170,170,170,170]);Object.assign(Ce,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"target",structure:w}],methods:[],template:{memory:{array:js},slots:{0:{structure:w,memory:{array:Ps},slots:{0:{structure:k,memory:{array:i},address:-1431655766}}}}}},slot:19});Object.assign(se,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ce}],methods:[],template:null},slot:18});const Cs=new Uint8Array([]),Vs=new Uint8Array([]),ks=new Uint8Array([28,251,15,0]),Is=new Uint8Array([24,39,16,0]),vs=new Uint8Array([110,101,116,46,111,110,116,104,101,119,105,110,103,115,46,102,105,108,116,101,114,115,0]),Es=new Uint8Array([92,251,15,0]),xs=new Uint8Array([16,39,16,0]),Ks=new Uint8Array([65,110,100,121,32,76,105,0]),Ds=new Uint8Array([156,251,15,0]),Fs=new Uint8Array([1,0,0,0]),Ms=new Uint8Array([244,251,15,0]),_s=new Uint8Array([159,38,16,0]),Ts=new Uint8Array([84,104,114,101,115,104,111,108,100,105,110,103,32,98,97,115,101,115,32,111,110,32,116,104,101,32,99,104,97,110,110,101,108,115,46,32,79,110,108,121,32,116,104,101,32,112,105,120,101,108,115,32,112,97,115,115,101,100,32,65,76,76,32,116,104,114,101,115,104,111,108,100,115,32,119,105,108,108,32,98,101,32,119,104,105,116,101,32,40,111,114,32,99,111,108,111,114,32,121,111,117,32,99,111,110,102,105,103,101,100,41,46,0]),$s=new Uint8Array([170,170,170,170]),Bs=new Uint8Array([170,170,170,170]),Ls=new Uint8Array([170,170,170,170]);Object.assign(De,{...t,type:2,name:"channel-threshold.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Cs}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:M},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:_},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:f},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:T},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:ee},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:te},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:se}],methods:[],template:{memory:{array:Vs},slots:{0:{structure:M,memory:{array:ks},slots:{0:{structure:ie,memory:{array:Is},slots:{0:{structure:ne,memory:{array:vs},address:1058584}}}}},1:{structure:_,memory:{array:Es},slots:{0:{structure:oe,memory:{array:xs},slots:{0:{structure:ue,memory:{array:Ks},address:1058576}}}}},2:{structure:f,memory:{array:Ds},slots:{0:{structure:d,memory:{array:Fs}}}},3:{structure:T,memory:{array:Ms},slots:{0:{structure:me,memory:{array:_s},slots:{0:{structure:le,memory:{array:Ts},address:1058463}}}}},4:{structure:ee,memory:{array:$s},slots:{0:{structure:je,memory:{array:i},address:-1431655766}}},5:{structure:te,memory:{array:Bs},slots:{0:{structure:Pe,memory:{array:i},address:-1431655766}}},6:{structure:se,memory:{array:Ls},slots:{0:{structure:Ce,memory:{array:i},address:-1431655766}}}}}},slot:1});Object.assign(A,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:c}],methods:[],template:null},slot:24});Object.assign(Ve,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:A}],methods:[],template:null},slot:23});Object.assign(ke,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Ve}],methods:[],template:null},slot:22});Object.assign(y,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:25});const Gs=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(Ie,{...t,type:9,name:"channel-threshold.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:d},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:d}],methods:[],template:{memory:{array:Gs}}},slot:26});Object.assign(P,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:P}],methods:[],template:null},slot:27});const Hs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Js=new Uint8Array([]),Ns=new Uint8Array([216,249,15,0]),Qs=new Uint8Array([4,0,0,0]);Object.assign(re,{...t,type:2,name:"channel-threshold.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:ke},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Ie},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:{memory:{array:Hs}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:A},{...e,type:7,isRequired:!1,name:"FPixel",structure:g},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:Js},slots:{0:{structure:f,memory:{array:Ns},slots:{0:{structure:d,memory:{array:Qs}}}}}}},slot:21});const Ws=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Xs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ys=new Uint8Array([0,0,0,0,0,0,0,0]),Ge=new Uint8Array([]);Object.assign(I,{...t,type:2,name:"channel-threshold.KernelInput(u8,channel-threshold.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"source",structure:re}],methods:[],template:{memory:{array:Ws},slots:{0:{structure:re,memory:{array:Xs},slots:{0:{structure:ke,memory:{array:Ys},slots:{0:{structure:Ve,memory:{array:Ge}}}}}}}}},slot:20});Object.assign(ve,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:A}],methods:[],template:null},slot:23});Object.assign(Ee,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:ve}],methods:[],template:null},slot:30});const Zs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),er=new Uint8Array([]),tr=new Uint8Array([216,249,15,0]),sr=new Uint8Array([4,0,0,0]);Object.assign(ae,{...t,type:2,name:"channel-threshold.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Ee},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Ie},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:P}],methods:[],template:{memory:{array:Zs}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:A},{...e,type:7,isRequired:!1,name:"FPixel",structure:g},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:er},slots:{0:{structure:f,memory:{array:tr},slots:{0:{structure:d,memory:{array:sr}}}}}}},slot:29});const rr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ar=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),nr=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(v,{...t,type:2,name:"channel-threshold.KernelOutput(u8,channel-threshold.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"target",structure:ae}],methods:[],template:{memory:{array:rr},slots:{0:{structure:ae,memory:{array:ar},slots:{0:{structure:Ee,memory:{array:nr},slots:{0:{structure:ve,memory:{array:Ge}}}}}}}}},slot:28});const ir=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63,0,0,0,0,0,0,128,63,0,0,0,0,0,0,128,63,0,0,0,0,0,0,128,63,0,0,0,0,0,0,128,63]);Object.assign(E,{...t,type:2,name:"channel-threshold.KernelParameters(channel-threshold.kernel)",length:1,byteSize:64,align:4,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:256,bitSize:64,byteSize:8,slot:0,name:"threshold0",structure:p},{...e,type:6,isRequired:!1,bitOffset:320,bitSize:64,byteSize:8,slot:1,name:"threshold1",structure:p},{...e,type:6,isRequired:!1,bitOffset:384,bitSize:64,byteSize:8,slot:2,name:"threshold2",structure:p},{...e,type:6,isRequired:!1,bitOffset:448,bitSize:64,byteSize:8,slot:3,name:"threshold3",structure:p},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:128,byteSize:16,slot:4,name:"outputColor1",structure:g},{...e,type:6,isRequired:!1,bitOffset:128,bitSize:128,byteSize:16,slot:5,name:"outputColor2",structure:g}],methods:[],template:{memory:{array:ir}}},slot:31});Object.assign(Fe,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(channel-threshold.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:53});Object.assign(Me,{...t,type:7,name:"ErrorSet0000!channel-threshold.KernelOutput(u8,channel-threshold.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Fe}],methods:[],template:null},slot:36});Object.assign(_e,{...t,type:3,name:"createOutput",length:1,byteSize:128,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:512,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:544,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:6,bitOffset:576,bitSize:192,byteSize:24,slot:2,name:"2",structure:I},{...e,type:6,bitOffset:0,bitSize:512,byteSize:64,slot:3,name:"3",structure:E},{...e,type:6,bitOffset:768,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Me}],methods:[],template:null},slot:34});Object.assign(Te,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(channel-threshold.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:54});Object.assign($e,{...t,type:7,name:"ErrorSet0001!channel-threshold.KernelOutput(u8,channel-threshold.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:v},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Te}],methods:[],template:null},slot:37});Object.assign(Be,{...t,type:3,name:"createPartialOutput",length:1,byteSize:144,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:512,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:544,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:3,bitOffset:576,bitSize:32,byteSize:4,slot:2,name:"2",structure:y},{...e,type:3,bitOffset:608,bitSize:32,byteSize:4,slot:3,name:"3",structure:y},{...e,type:6,bitOffset:640,bitSize:192,byteSize:24,slot:4,name:"4",structure:I},{...e,type:6,bitOffset:0,bitSize:512,byteSize:64,slot:5,name:"5",structure:E},{...e,type:6,bitOffset:832,bitSize:224,byteSize:28,slot:6,name:"retval",structure:$e}],methods:[],template:null},slot:35});const ur={argStruct:_e,thunk:1,name:"createOutput"},or={argStruct:Be,thunk:5,name:"createPartialOutput"};Object.assign(Le,{...t,type:2,name:"channel-threshold",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Ge}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:De},{...e,type:7,isRequired:!1,name:"Input",structure:I},{...e,type:7,isRequired:!1,name:"Output",structure:v},{...e,type:7,isRequired:!1,name:"Parameters",structure:E}],methods:[ur,or],template:null},slot:0});const lr=[c,ne,ie,M,ue,oe,_,d,f,le,me,T,j,p,m,s,z,h,ye,ce,$,be,B,C,V,q,pe,L,de,fe,G,he,H,Se,J,g,ge,N,ze,Oe,Q,Re,W,qe,X,we,Ae,Y,Ue,Z,je,ee,k,w,Pe,te,Ce,se,De,A,Ve,ke,y,Ie,P,re,I,ve,Ee,ae,v,E,Fe,Me,_e,Te,$e,Be,Le],mr=pt(lr),yr=Le.constructor,cr=(async()=>{const u=new URL("channel-threshold-bc2e7886.wasm",import.meta.url).href;return fetch(u)})();dt(cr,{...mr,writeBack:!0});const{createOutput:zr,createPartialOutput:br,kernel:Ke,Input:pr,Output:Or,Parameters:Rr}=yr;function dr(u,l,a,r,n={},O={}){if(Array.isArray(n)){const S=n;n={};for(const[b,R]of Object.keys(Ke.inputImages).entries())n[R]=S[b]}const x=new pr(void 0),K=Object.keys(Ke.inputImages),o=[];let U;for(const S of K){let b=n[S];if(b||(K.length===1&&["data","width","height"].every(R=>!!n[R])?b=n:o.push(S)),x[S]=b,U){if(b.colorSpace!==U)throw new Error(`Input images must all use the same color space: ${U}`)}else U=b.colorSpace}if(o.length>0)throw new Error(`Missing input image${o.length>1?"s":""}: ${o.join(", ")}`);const xe=br(u,l,a,r,x,O),He=S=>{const b=Object.keys(S),R={};for(const Je of b){const{data:{typedArray:D},width:Ne,height:We}=S[Je];let F;if(typeof ImageData=="function"){const Xe=new Uint8ClampedArray(D.buffer,D.byteOffset,D.byteLength);F=new ImageData(Xe,Ne,r,{colorSpace:U})}else F={data:D,width:Ne,height:We};if(b.length===1)return F;R[Je]=F}return R};return xe[Symbol.toStringTag]==="Promise"?xe.then(He):He(xe)}function fr(){const u={};for(let[l,a]of Object.entries(Ke)){if(l==="parameters"){const r={};for(const[n,O]of Object.entries(a)){const x=r[n]={};for(let[K,o]of Object.entries(O))typeof o=="object"?"string"in o?o=o.string:o=Qe(o):typeof o=="function"&&(o=hr(o.name)),x[K]=o}a=r}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());u[l]=a}return u}function Qe(u){const l=[];for(let[a,r]of Object.entries(u))typeof r=="object"&&(r=Qe(r)),l[a]=r;return l}function hr(u){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[u]}onmessage=u=>{const[l,a,...r]=u.data;Sr(l,r).then(([n,O])=>{postMessage([l,a,n],{transfer:O})}).catch(n=>{postMessage(["error",a,n])})};async function Sr(u,l){switch(u){case"getKernelInfo":return[fr(...l)];case"createPartialImageData":const r=await dr(...l),n=[];if("data"in r&&"width"in r&&"height"in r)n.push(r.data.buffer);else for(const O of Object.entries(r))n.push(r.data.buffer);return[r,n];default:throw new Error(`Unknown function: ${u}`)}}
