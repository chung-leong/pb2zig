import{u as ve,a as Ee,b as xe,d as Ke,c as De,e as Fe,f as Me,g as _e,h as Te,i as $e,j as Be,k as Le,l as Ge,m as He,o as Je,n as Ne,p as Qe,q as We}from"./index-d64bc850.js";ve();Ee();xe();Ke();De();Fe();Me();_e();Te();$e();Be();Le();Ge();He();Je();Ne();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},w={},W={},X={},x={},Y={},Z={},K={},c={},b={},D={},q={},ee={},a={},s={},g={},f={},te={},F={},z={},S={},se={},M={},re={},_={},ae={},T={},ne={},$={},ie={},B={},ue={},L={},oe={},G={},j={},O={},me={},H={},le={},J={},he={},A={},ye={},ce={},l={},be={},R={},N={},P={},pe={},fe={},Q={},k={},C={},ge={},ze={},we={},Oe={},Ae={},Ue={},Re={};Object.assign(w,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:w}],methods:[],template:null},slot:5});Object.assign(W,{...t,type:1,name:"[14:0]u8",length:14,byteSize:15,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:w}],methods:[],template:null},slot:4});Object.assign(X,{...t,type:11,name:"*const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:3});Object.assign(x,{...t,type:11,name:"*const *const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:2});Object.assign(Y,{...t,type:1,name:"[11:0]u8",length:11,byteSize:12,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:w}],methods:[],template:null},slot:8});Object.assign(Z,{...t,type:11,name:"*const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[],template:null},slot:7});Object.assign(K,{...t,type:11,name:"*const *const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:6});Object.assign(c,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:10});Object.assign(b,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:c}],methods:[],template:null},slot:9});Object.assign(D,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:D}],methods:[],template:null},slot:41});Object.assign(q,{...t,type:13,name:"@Vector(3, f32)",length:3,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:D}],methods:[],template:null},slot:30});Object.assign(ee,{...t,type:1,name:"[3]@Vector(3, f32)",length:3,byteSize:48,align:4,instance:{members:[{...e,type:6,isRequired:!1,bitSize:96,byteSize:16,structure:q}],methods:[],template:null},slot:29});Object.assign(a,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:a}],methods:[],template:null},slot:59});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:a}],methods:[],template:null},slot:58});const Xe=new Uint8Array,Ye=new Uint8Array([184,248,15,0]),Ze=new Uint8Array([0,0,0,0,0,0,240,191]),et=new Uint8Array([224,248,15,0]),tt=new Uint8Array([0,0,0,0,0,0,240,191]),st=new Uint8Array([8,249,15,0]),rt=new Uint8Array([0,0,0,0,0,0,240,191]);Object.assign(g,{...t,type:2,name:"Struct0021",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:Xe},slots:{0:{structure:s,memory:{array:Ye},slots:{0:{structure:a,memory:{array:Ze}}}},1:{structure:s,memory:{array:et},slots:{0:{structure:a,memory:{array:tt}}}},2:{structure:s,memory:{array:st},slots:{0:{structure:a,memory:{array:rt}}}}}}},slot:49});Object.assign(f,{...t,type:11,name:"Struct0016",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:g}],methods:[],template:null},slot:48});const at=new Uint8Array,nt=new Uint8Array([170,170,170,170]),it=new Uint8Array,ut=new Uint8Array([170,170,170,170]),ot=new Uint8Array,mt=new Uint8Array([170,170,170,170]),lt=new Uint8Array;Object.assign(te,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:f},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:f},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:f}],methods:[],template:{memory:{array:at},slots:{0:{structure:f,memory:{array:nt},slots:{0:{structure:g,memory:{array:it}}}},1:{structure:f,memory:{array:ut},slots:{0:{structure:g,memory:{array:ot}}}},2:{structure:f,memory:{array:mt},slots:{0:{structure:g,memory:{array:lt}}}}}}},slot:43});Object.assign(F,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:42});const yt=new Uint8Array,ct=new Uint8Array([184,248,15,0]),bt=new Uint8Array([0,0,0,0,0,0,240,63]),pt=new Uint8Array([224,248,15,0]),ft=new Uint8Array([0,0,0,0,0,0,240,63]),St=new Uint8Array([8,249,15,0]),dt=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(z,{...t,type:2,name:"Struct0022",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:yt},slots:{0:{structure:s,memory:{array:ct},slots:{0:{structure:a,memory:{array:bt}}}},1:{structure:s,memory:{array:pt},slots:{0:{structure:a,memory:{array:ft}}}},2:{structure:s,memory:{array:St},slots:{0:{structure:a,memory:{array:dt}}}}}}},slot:51});Object.assign(S,{...t,type:11,name:"Struct0017",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:z}],methods:[],template:null},slot:50});const ht=new Uint8Array,gt=new Uint8Array([170,170,170,170]),zt=new Uint8Array,wt=new Uint8Array([170,170,170,170]),Ot=new Uint8Array,At=new Uint8Array([170,170,170,170]),Ut=new Uint8Array;Object.assign(se,{...t,type:2,name:"Struct0014",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:S},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:S},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:S}],methods:[],template:{memory:{array:ht},slots:{0:{structure:S,memory:{array:gt},slots:{0:{structure:z,memory:{array:zt}}}},1:{structure:S,memory:{array:wt},slots:{0:{structure:z,memory:{array:Ot}}}},2:{structure:S,memory:{array:At},slots:{0:{structure:z,memory:{array:Ut}}}}}}},slot:45});Object.assign(M,{...t,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:44});const Rt=new Uint8Array,qt=new Uint8Array([8,252,15,0]),jt=new Uint8Array([0,0,0,0,0,0,224,63]),Pt=new Uint8Array([48,252,15,0]),kt=new Uint8Array([0,0,0,0,0,0,0,0]),Ct=new Uint8Array([88,252,15,0]),It=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(re,{...t,type:2,name:"Struct0023",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:Rt},slots:{0:{structure:s,memory:{array:qt},slots:{0:{structure:a,memory:{array:jt}}}},1:{structure:s,memory:{array:Pt},slots:{0:{structure:a,memory:{array:kt}}}},2:{structure:s,memory:{array:Ct},slots:{0:{structure:a,memory:{array:It}}}}}}},slot:53});Object.assign(_,{...t,type:11,name:"Struct0018",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:52});const Vt=new Uint8Array,vt=new Uint8Array([8,252,15,0]),Et=new Uint8Array([51,51,51,51,51,51,211,63]),xt=new Uint8Array([48,252,15,0]),Kt=new Uint8Array([0,0,0,0,0,0,240,63]),Dt=new Uint8Array([88,252,15,0]),Ft=new Uint8Array([102,102,102,102,102,102,230,63]);Object.assign(ae,{...t,type:2,name:"Struct0024",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:Vt},slots:{0:{structure:s,memory:{array:vt},slots:{0:{structure:a,memory:{array:Et}}}},1:{structure:s,memory:{array:xt},slots:{0:{structure:a,memory:{array:Kt}}}},2:{structure:s,memory:{array:Dt},slots:{0:{structure:a,memory:{array:Ft}}}}}}},slot:55});Object.assign(T,{...t,type:11,name:"Struct0019",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:54});const Mt=new Uint8Array,_t=new Uint8Array([8,252,15,0]),Tt=new Uint8Array([154,153,153,153,153,153,185,63]),$t=new Uint8Array([48,252,15,0]),Bt=new Uint8Array([51,51,51,51,51,51,211,63]),Lt=new Uint8Array([88,252,15,0]),Gt=new Uint8Array([154,153,153,153,153,153,233,63]);Object.assign(ne,{...t,type:2,name:"Struct0025",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:s}],methods:[],template:{memory:{array:Mt},slots:{0:{structure:s,memory:{array:_t},slots:{0:{structure:a,memory:{array:Tt}}}},1:{structure:s,memory:{array:$t},slots:{0:{structure:a,memory:{array:Bt}}}},2:{structure:s,memory:{array:Lt},slots:{0:{structure:a,memory:{array:Gt}}}}}}},slot:57});Object.assign($,{...t,type:11,name:"Struct0020",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:56});const Ht=new Uint8Array,Jt=new Uint8Array([170,170,170,170]),Nt=new Uint8Array,Qt=new Uint8Array([170,170,170,170]),Wt=new Uint8Array,Xt=new Uint8Array([170,170,170,170]),Yt=new Uint8Array;Object.assign(ie,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:_},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:T},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:$}],methods:[],template:{memory:{array:Ht},slots:{0:{structure:_,memory:{array:Jt},slots:{0:{structure:re,memory:{array:Nt}}}},1:{structure:T,memory:{array:Qt},slots:{0:{structure:ae,memory:{array:Wt}}}},2:{structure:$,memory:{array:Xt},slots:{0:{structure:ne,memory:{array:Yt}}}}}}},slot:47});Object.assign(B,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:46});const Zt=new Uint8Array,es=new Uint8Array([170,170,170,170]),ts=new Uint8Array,ss=new Uint8Array([170,170,170,170]),rs=new Uint8Array,as=new Uint8Array([170,170,170,170]),ns=new Uint8Array;Object.assign(ue,{...t,type:2,name:"Struct0008",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:ee},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:F},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:M},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:B}],methods:[],template:{memory:{array:Zt},slots:{0:{structure:F,memory:{array:es},slots:{0:{structure:te,memory:{array:ts}}}},1:{structure:M,memory:{array:ss},slots:{0:{structure:se,memory:{array:rs}}}},2:{structure:B,memory:{array:as},slots:{0:{structure:ie,memory:{array:ns}}}}}}},slot:36});Object.assign(L,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:35});const is=new Uint8Array,us=new Uint8Array([170,170,170,170]),os=new Uint8Array;Object.assign(oe,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"transform",structure:L}],methods:[],template:{memory:{array:is},slots:{0:{structure:L,memory:{array:us},slots:{0:{structure:ue,memory:{array:os}}}}}}},slot:12});Object.assign(G,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:11});const ms=new Uint8Array,ls=new Uint8Array([80,252,15,0]),ys=new Uint8Array([3,0,0,0]);Object.assign(j,{...t,type:2,name:"Struct0009",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:b}],methods:[],template:{memory:{array:ms},slots:{0:{structure:b,memory:{array:ls},slots:{0:{structure:c,memory:{array:ys}}}}}}},slot:38});Object.assign(O,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:j}],methods:[],template:null},slot:37});const cs=new Uint8Array,bs=new Uint8Array([170,170,170,170]),ps=new Uint8Array;Object.assign(me,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:O}],methods:[],template:{memory:{array:cs},slots:{0:{structure:O,memory:{array:bs},slots:{0:{structure:j,memory:{array:ps}}}}}}},slot:14});Object.assign(H,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:13});const fs=new Uint8Array,Ss=new Uint8Array([170,170,170,170]),ds=new Uint8Array;Object.assign(le,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:O}],methods:[],template:{memory:{array:fs},slots:{0:{structure:O,memory:{array:Ss},slots:{0:{structure:j,memory:{array:ds}}}}}}},slot:16});Object.assign(J,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:15});const hs=new Uint8Array,gs=new Uint8Array,zs=new Uint8Array([64,36,16,0]),ws=new Uint8Array([195,35,16,0]),Os=new Uint8Array([89,111,117,114,32,78,97,109,101,115,112,97,99,101,0]),As=new Uint8Array([60,36,16,0]),Us=new Uint8Array([172,35,16,0]),Rs=new Uint8Array([89,111,117,114,32,86,101,110,100,111,114,0]),qs=new Uint8Array([56,36,16,0]),js=new Uint8Array([1,0,0,0]),Ps=new Uint8Array([170,170,170,170]),ks=new Uint8Array,Cs=new Uint8Array([170,170,170,170]),Is=new Uint8Array,Vs=new Uint8Array([170,170,170,170]),vs=new Uint8Array;Object.assign(he,{...t,type:2,name:"simple.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:hs}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:x},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:K},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:b},{...e,type:6,isRequired:!1,slot:3,name:"parameters",structure:G},{...e,type:6,isRequired:!1,slot:4,name:"inputImages",structure:H},{...e,type:6,isRequired:!1,slot:5,name:"outputImages",structure:J}],methods:[],template:{memory:{array:gs},slots:{0:{structure:x,memory:{array:zs},slots:{0:{structure:X,memory:{array:ws},slots:{0:{structure:W,memory:{array:Os}}}}}},1:{structure:K,memory:{array:As},slots:{0:{structure:Z,memory:{array:Us},slots:{0:{structure:Y,memory:{array:Rs}}}}}},2:{structure:b,memory:{array:qs},slots:{0:{structure:c,memory:{array:js}}}},3:{structure:G,memory:{array:Ps},slots:{0:{structure:oe,memory:{array:ks}}}},4:{structure:H,memory:{array:Cs},slots:{0:{structure:me,memory:{array:Is}}}},5:{structure:J,memory:{array:Vs},slots:{0:{structure:le,memory:{array:vs}}}}}}},slot:1});Object.assign(A,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:w}],methods:[],template:null},slot:21});Object.assign(ye,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:A}],methods:[],template:null},slot:20});Object.assign(ce,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:ye}],methods:[],template:null},slot:19});Object.assign(l,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:l}],methods:[],template:null},slot:22});const Es=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(be,{...t,type:9,name:"simple.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:c},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:c}],methods:[],template:{memory:{array:Es}}},slot:23});Object.assign(R,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:R}],methods:[],template:null},slot:24});const xs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ks=new Uint8Array,Ds=new Uint8Array([112,35,16,0]),Fs=new Uint8Array([3,0,0,0]);Object.assign(N,{...t,type:2,name:"simple.Image(u8,3,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:ce},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:be},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:{memory:{array:xs}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:A},{...e,type:7,isRequired:!1,name:"FPixel",structure:q},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:b}],methods:[],template:{memory:{array:Ks},slots:{0:{structure:b,memory:{array:Ds},slots:{0:{structure:c,memory:{array:Fs}}}}}}},slot:18});const Ms=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),_s=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ke=new Uint8Array([0,0,0,0,0,0,0,0]),Ts=new Uint8Array;Object.assign(P,{...t,type:2,name:"simple.KernelInput(u8,simple.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:N}],methods:[],template:{memory:{array:Ms},slots:{0:{structure:N,memory:{array:_s},slots:{0:{structure:ce,memory:{array:ke},address:1047232,slots:{0:{structure:ye,memory:{array:Ts},address:0}}}}}}}},slot:17});Object.assign(pe,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:A}],methods:[],template:null},slot:20});Object.assign(fe,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:pe}],methods:[],template:null},slot:27});const $s=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Bs=new Uint8Array,Ls=new Uint8Array([112,35,16,0]),Gs=new Uint8Array([3,0,0,0]);Object.assign(Q,{...t,type:2,name:"simple.Image(u8,3,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:fe},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:l},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:l},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:be},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:{memory:{array:$s}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:A},{...e,type:7,isRequired:!1,name:"FPixel",structure:q},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:b}],methods:[],template:{memory:{array:Bs},slots:{0:{structure:b,memory:{array:Ls},slots:{0:{structure:c,memory:{array:Gs}}}}}}},slot:26});const Hs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Js=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ns=new Uint8Array;Object.assign(k,{...t,type:2,name:"simple.KernelOutput(u8,simple.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:Q}],methods:[],template:{memory:{array:Hs},slots:{0:{structure:Q,memory:{array:Js},slots:{0:{structure:fe,memory:{array:ke},address:1047232,slots:{0:{structure:pe,memory:{array:Ns},address:0}}}}}}}},slot:25});const Qs=new Uint8Array([0,0,0,63,0,0,0,0,0,0,0,0,0,0,0,0,154,153,153,62,0,0,128,63,51,51,51,63,0,0,0,0,205,204,204,61,154,153,153,62,205,204,76,63,0,0,0,0]);Object.assign(C,{...t,type:2,name:"simple.KernelParameters(simple.kernel)",length:1,byteSize:48,align:4,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:352,byteSize:48,slot:0,name:"transform",structure:ee}],methods:[],template:{memory:{array:Qs}}},slot:28});Object.assign(ge,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(simple.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:39});Object.assign(ze,{...t,type:7,name:"ErrorSet0000!simple.KernelOutput(u8,simple.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:k},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:ge}],methods:[],template:null},slot:33});Object.assign(we,{...t,type:3,name:"createOutput",length:1,byteSize:112,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:0,name:"0",structure:l},{...e,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:1,name:"1",structure:l},{...e,type:6,bitOffset:448,bitSize:192,byteSize:24,slot:2,name:"2",structure:P},{...e,type:6,bitOffset:0,bitSize:384,byteSize:48,slot:3,name:"3",structure:C},{...e,type:6,bitOffset:640,bitSize:224,byteSize:28,slot:4,name:"retval",structure:ze}],methods:[],template:null},slot:31});Object.assign(Oe,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(simple.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:40});Object.assign(Ae,{...t,type:7,name:"ErrorSet0001!simple.KernelOutput(u8,simple.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:k},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Oe}],methods:[],template:null},slot:34});Object.assign(Ue,{...t,type:3,name:"createPartialOutput",length:1,byteSize:128,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:0,name:"0",structure:l},{...e,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:1,name:"1",structure:l},{...e,type:3,bitOffset:448,bitSize:32,byteSize:4,slot:2,name:"2",structure:l},{...e,type:3,bitOffset:480,bitSize:32,byteSize:4,slot:3,name:"3",structure:l},{...e,type:6,bitOffset:512,bitSize:192,byteSize:24,slot:4,name:"4",structure:P},{...e,type:6,bitOffset:0,bitSize:384,byteSize:48,slot:5,name:"5",structure:C},{...e,type:6,bitOffset:704,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Ae}],methods:[],template:null},slot:32});const Ws=new Uint8Array,Xs={argStruct:we,thunk:5,name:"createOutput"},Ys={argStruct:Ue,thunk:1,name:"createPartialOutput"};Object.assign(Re,{...t,type:2,name:"simple",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Ws}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:he},{...e,type:7,isRequired:!1,name:"Input",structure:P},{...e,type:7,isRequired:!1,name:"Output",structure:k},{...e,type:7,isRequired:!1,name:"Parameters",structure:C}],methods:[Xs,Ys],template:null},slot:0});const Zs=[w,W,X,x,Y,Z,K,c,b,D,q,ee,a,s,g,f,te,F,z,S,se,M,re,_,ae,T,ne,$,ie,B,ue,L,oe,G,j,O,me,H,le,J,he,A,ye,ce,l,be,R,N,P,pe,fe,Q,k,C,ge,ze,we,Oe,Ae,Ue,Re],er=Qe(Zs),tr=Re.constructor,sr=(async()=>{const u=new URL("simple-02f2c365.wasm",import.meta.url).href;return fetch(u)})();We(sr,{...er,writeBack:!0});const{createOutput:lr,createPartialOutput:rr,kernel:de,Input:ar,Output:yr,Parameters:cr}=tr;function nr(u,m,n,r,i={},d={}){if(Array.isArray(i)){const p=i;i={};for(const[y,h]of Object.keys(de.inputImages).entries())i[h]=p[y]}const I=new ar(void 0),V=Object.keys(de.inputImages),o=[];let U;for(const p of V){let y=i[p];if(y||(V.length===1&&["data","width","height"].every(h=>!!i[h])?y=i:o.push(p)),I[p]=y,U){if(y.colorSpace!==U)throw new Error(`Input images must all use the same color space: ${U}`)}else U=y.colorSpace}if(o.length>0)throw new Error(`Missing input image${o.length>1?"s":""}: ${o.join(", ")}`);const Se=rr(u,m,n,r,I,d),qe=p=>{const y=Object.keys(p),h={};for(const je of y){const{data:{typedArray:v},width:Pe,height:Ie}=p[je];let E;if(typeof ImageData=="function"){const Ve=new Uint8ClampedArray(v.buffer,v.byteOffset,v.byteLength);E=new ImageData(Ve,Pe,r,{colorSpace:U})}else E={data:v,width:Pe,height:Ie};if(y.length===1)return E;h[je]=E}return h};return Se[Symbol.toStringTag]==="Promise"?Se.then(qe):qe(Se)}function ir(){const u={};for(let[m,n]of Object.entries(de)){if(m==="parameters"){const r={};for(const[i,d]of Object.entries(n)){const I=r[i]={};for(let[V,o]of Object.entries(d))typeof o=="object"?"string"in o?o=o.string:o=Ce(o):typeof o=="function"&&(o=ur(o.name)),I[V]=o}n=r}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());u[m]=n}return u}function Ce(u){const m=[];for(let[n,r]of Object.entries(u))typeof r=="object"&&(r=Ce(r)),m[n]=r;return m}function ur(u){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[u]}onmessage=u=>{const[m,n,...r]=u.data;or(m,r).then(([i,d])=>{postMessage([m,n,i],{transfer:d})}).catch(i=>{postMessage(["error",n,i])})};async function or(u,m){switch(u){case"getKernelInfo":return[ir(...m)];case"createPartialImageData":const r=await nr(...m),i=[];if("data"in r&&"width"in r&&"height"in r)i.push(r.data.buffer);else for(const d of Object.entries(r))i.push(r.data.buffer);return[r,i];default:throw new Error(`Unknown function: ${u}`)}}
