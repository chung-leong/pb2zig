import{u as De,a as Fe,b as Me,c as _e,d as Te,e as $e,f as Be,g as He,h as Le,i as Ge,j as Je,k as Ne,l as Qe,m as We,o as Xe,n as Ye,p as Ze,q as et}from"./index-422d9c98.js";De();Fe();Me();_e();Te();$e();Be();He();Le();Ge();Je();Ne();Qe();We();Xe();Ye();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},S={},Q={},W={},I={},X={},Y={},v={},l={},u={},Z={},ee={},x={},b={},r={},s={},te={},E={},se={},re={},K={},ae={},D={},ne={},F={},ie={},M={},ue={},_={},oe={},T={},me={},$={},le={},B={},ye={},H={},q={},z={},ce={},L={},be={},G={},we={},O={},pe={},fe={},p={},de={},R={},Se={},J={},A={},ge={},he={},N={},U={},j={},Re={},qe={},Ae={},Ue={},je={},Pe={},Ve={};Object.assign(S,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:5});Object.assign(Q,{...t,type:1,name:"[9:0]u8",length:9,byteSize:10,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:4});Object.assign(W,{...t,type:11,name:"*const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[],template:null},slot:3});Object.assign(I,{...t,type:11,name:"*const *const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:2});Object.assign(X,{...t,type:1,name:"[17:0]u8",length:17,byteSize:18,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:8});Object.assign(Y,{...t,type:11,name:"*const [17:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:7});Object.assign(v,{...t,type:11,name:"*const *const [17:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[],template:null},slot:6});Object.assign(l,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:l}],methods:[],template:null},slot:10});Object.assign(u,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:l}],methods:[],template:null},slot:9});Object.assign(Z,{...t,type:1,name:"[107:0]u8",length:107,byteSize:108,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:13});Object.assign(ee,{...t,type:11,name:"*const [107:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:12});Object.assign(x,{...t,type:11,name:"*const *const [107:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:11});Object.assign(b,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:32});Object.assign(r,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[],template:null},slot:56});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:r}],methods:[],template:null},slot:55});const tt=new Uint8Array([]),st=new Uint8Array([64,250,15,0]),rt=new Uint8Array([0,0,0,0,0,0,0,0]),at=new Uint8Array([88,250,15,0]),nt=new Uint8Array([0,0,0,0,0,0,224,63]),it=new Uint8Array([32,249,15,0]),ut=new Uint8Array([0,0,0,0,0,0,208,63]);Object.assign(te,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:b},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:tt},slots:{0:{structure:s,memory:{array:st},slots:{0:{structure:r,memory:{array:rt}}}},1:{structure:s,memory:{array:at},slots:{0:{structure:r,memory:{array:nt}}}},2:{structure:s,memory:{array:it},slots:{0:{structure:r,memory:{array:ut}}}}}}},slot:39});Object.assign(E,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:38});Object.assign(se,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:33});const ot=new Uint8Array([]),mt=new Uint8Array([16,250,15,0]),lt=new Uint8Array([0,0,0,0,0,0,0,0]),yt=new Uint8Array([72,250,15,0]),ct=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(re,{...t,type:2,name:"Struct0023",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:ot},slots:{0:{structure:s,memory:{array:mt},slots:{0:{structure:r,memory:{array:lt}}}},1:{structure:s,memory:{array:yt},slots:{0:{structure:r,memory:{array:ct}}}}}}},slot:58});Object.assign(K,{...t,type:11,name:"Struct0020",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:57});const bt=new Uint8Array([]),pt=new Uint8Array([16,250,15,0]),ft=new Uint8Array([0,0,0,0,0,32,140,64]),dt=new Uint8Array([72,250,15,0]),St=new Uint8Array([0,0,0,0,0,32,140,64]);Object.assign(ae,{...t,type:2,name:"Struct0024",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:bt},slots:{0:{structure:s,memory:{array:pt},slots:{0:{structure:r,memory:{array:ft}}}},1:{structure:s,memory:{array:dt},slots:{0:{structure:r,memory:{array:St}}}}}}},slot:60});Object.assign(D,{...t,type:11,name:"Struct0021",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:59});const gt=new Uint8Array([]),ht=new Uint8Array([16,250,15,0]),zt=new Uint8Array([0,0,0,0,0,0,105,64]),Ot=new Uint8Array([72,250,15,0]),wt=new Uint8Array([0,0,0,0,0,0,105,64]);Object.assign(ne,{...t,type:2,name:"Struct0025",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:gt},slots:{0:{structure:s,memory:{array:ht},slots:{0:{structure:r,memory:{array:zt}}}},1:{structure:s,memory:{array:Ot},slots:{0:{structure:r,memory:{array:wt}}}}}}},slot:62});Object.assign(F,{...t,type:11,name:"Struct0022",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:61});const Rt=new Uint8Array([]),qt=new Uint8Array([170,170,170,170]),c=new Uint8Array([]),At=new Uint8Array([170,170,170,170]),Ut=new Uint8Array([170,170,170,170]);Object.assign(ie,{...t,type:2,name:"Struct0014",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:se},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:K},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:D},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:F}],methods:[],template:{memory:{array:Rt},slots:{0:{structure:K,memory:{array:qt},slots:{0:{structure:re,memory:{array:c},address:-1431655766}}},1:{structure:D,memory:{array:At},slots:{0:{structure:ae,memory:{array:c},address:-1431655766}}},2:{structure:F,memory:{array:Ut},slots:{0:{structure:ne,memory:{array:c},address:-1431655766}}}}}},slot:41});Object.assign(M,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:40});const jt=new Uint8Array([]),Pt=new Uint8Array([64,250,15,0]),Vt=new Uint8Array([0,0,0,0,0,0,0,0]),Ct=new Uint8Array([88,250,15,0]),kt=new Uint8Array([0,0,0,0,0,64,127,64]),It=new Uint8Array([32,249,15,0]),vt=new Uint8Array([0,0,0,0,0,0,89,64]);Object.assign(ue,{...t,type:2,name:"Struct0015",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:b},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:jt},slots:{0:{structure:s,memory:{array:Pt},slots:{0:{structure:r,memory:{array:Vt}}}},1:{structure:s,memory:{array:Ct},slots:{0:{structure:r,memory:{array:kt}}}},2:{structure:s,memory:{array:It},slots:{0:{structure:r,memory:{array:vt}}}}}}},slot:43});Object.assign(_,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:42});const xt=new Uint8Array([]),Et=new Uint8Array([144,248,15,0]),Kt=new Uint8Array([0,0,0,0]),Dt=new Uint8Array([248,248,15,0]),Ft=new Uint8Array([1,0,0,0]),Mt=new Uint8Array([104,249,15,0]),_t=new Uint8Array([0,0,0,0]);Object.assign(oe,{...t,type:2,name:"Struct0016",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:l},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:u},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:u},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:u}],methods:[],template:{memory:{array:xt},slots:{0:{structure:u,memory:{array:Et},slots:{0:{structure:l,memory:{array:Kt}}}},1:{structure:u,memory:{array:Dt},slots:{0:{structure:l,memory:{array:Ft}}}},2:{structure:u,memory:{array:Mt},slots:{0:{structure:l,memory:{array:_t}}}}}}},slot:45});Object.assign(T,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:44});const Tt=new Uint8Array([]),$t=new Uint8Array([64,250,15,0]),Bt=new Uint8Array([0,0,0,0,0,0,0,0]),Ht=new Uint8Array([88,250,15,0]),Lt=new Uint8Array([0,0,0,0,0,0,240,63]),Gt=new Uint8Array([32,249,15,0]),Jt=new Uint8Array([51,51,51,51,51,51,227,63]);Object.assign(me,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:b},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:Tt},slots:{0:{structure:s,memory:{array:$t},slots:{0:{structure:r,memory:{array:Bt}}}},1:{structure:s,memory:{array:Ht},slots:{0:{structure:r,memory:{array:Lt}}}},2:{structure:s,memory:{array:Gt},slots:{0:{structure:r,memory:{array:Jt}}}}}}},slot:47});Object.assign($,{...t,type:11,name:"Struct0010",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:46});const Nt=new Uint8Array([]),Qt=new Uint8Array([64,250,15,0]),Wt=new Uint8Array([0,0,0,0,0,0,0,0]),Xt=new Uint8Array([88,250,15,0]),Yt=new Uint8Array([0,0,0,0,0,0,240,63]),Zt=new Uint8Array([32,249,15,0]),es=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(le,{...t,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:b},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:Nt},slots:{0:{structure:s,memory:{array:Qt},slots:{0:{structure:r,memory:{array:Wt}}}},1:{structure:s,memory:{array:Xt},slots:{0:{structure:r,memory:{array:Yt}}}},2:{structure:s,memory:{array:Zt},slots:{0:{structure:r,memory:{array:es}}}}}}},slot:49});Object.assign(B,{...t,type:11,name:"Struct0011",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:48});const ts=new Uint8Array([]),ss=new Uint8Array([170,170,170,170]),rs=new Uint8Array([170,170,170,170]),as=new Uint8Array([170,170,170,170]),ns=new Uint8Array([170,170,170,170]),is=new Uint8Array([170,170,170,170]),us=new Uint8Array([170,170,170,170]);Object.assign(ye,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"amount",structure:E},{...e,type:8,isRequired:!1,slot:1,name:"center",structure:M},{...e,type:8,isRequired:!1,slot:2,name:"focalSize",structure:_},{...e,type:8,isRequired:!1,slot:3,name:"invert",structure:T},{...e,type:8,isRequired:!1,slot:4,name:"vignette",structure:$},{...e,type:8,isRequired:!1,slot:5,name:"edgeHardness",structure:B}],methods:[],template:{memory:{array:ts},slots:{0:{structure:E,memory:{array:ss},slots:{0:{structure:te,memory:{array:c},address:-1431655766}}},1:{structure:M,memory:{array:rs},slots:{0:{structure:ie,memory:{array:c},address:-1431655766}}},2:{structure:_,memory:{array:as},slots:{0:{structure:ue,memory:{array:c},address:-1431655766}}},3:{structure:T,memory:{array:ns},slots:{0:{structure:oe,memory:{array:c},address:-1431655766}}},4:{structure:$,memory:{array:is},slots:{0:{structure:me,memory:{array:c},address:-1431655766}}},5:{structure:B,memory:{array:us},slots:{0:{structure:le,memory:{array:c},address:-1431655766}}}}}},slot:15});Object.assign(H,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:14});const os=new Uint8Array([]),ms=new Uint8Array([64,250,15,0]),ls=new Uint8Array([4,0,0,0]);Object.assign(q,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:u}],methods:[],template:{memory:{array:os},slots:{0:{structure:u,memory:{array:ms},slots:{0:{structure:l,memory:{array:ls}}}}}}},slot:51});Object.assign(z,{...t,type:11,name:"Struct0012",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:q}],methods:[],template:null},slot:50});const ys=new Uint8Array([]),cs=new Uint8Array([170,170,170,170]);Object.assign(ce,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:z}],methods:[],template:{memory:{array:ys},slots:{0:{structure:z,memory:{array:cs},slots:{0:{structure:q,memory:{array:c},address:-1431655766}}}}}},slot:17});Object.assign(L,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:16});const bs=new Uint8Array([]),ps=new Uint8Array([170,170,170,170]);Object.assign(be,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:z}],methods:[],template:{memory:{array:bs},slots:{0:{structure:z,memory:{array:ps},slots:{0:{structure:q,memory:{array:c},address:-1431655766}}}}}},slot:19});Object.assign(G,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:18});const fs=new Uint8Array([]),ds=new Uint8Array([]),Ss=new Uint8Array([28,251,15,0]),gs=new Uint8Array([185,9,16,0]),hs=new Uint8Array([99,111,109,46,97,98,114,105,108,0]),zs=new Uint8Array([92,251,15,0]),Os=new Uint8Array([167,9,16,0]),ws=new Uint8Array([68,97,110,105,101,108,32,65,108,108,101,103,114,101,116,116,105,0]),Rs=new Uint8Array([156,251,15,0]),qs=new Uint8Array([1,0,0,0]),As=new Uint8Array([244,251,15,0]),Us=new Uint8Array([59,9,16,0]),js=new Uint8Array([65,106,117,115,116,97,98,108,101,32,122,111,111,109,32,98,108,117,114,44,32,121,111,117,32,99,97,110,32,99,111,110,116,114,111,108,32,102,111,99,97,108,32,115,105,122,101,44,32,101,100,103,101,32,104,97,114,100,110,101,115,115,32,97,110,100,32,108,105,103,104,116,46,32,66,97,115,101,100,32,111,110,32,90,111,111,109,66,108,117,114,32,98,121,32,82,121,97,110,32,80,104,101,108,97,110,46,0]),Ps=new Uint8Array([170,170,170,170]),Vs=new Uint8Array([170,170,170,170]),Cs=new Uint8Array([170,170,170,170]);Object.assign(we,{...t,type:2,name:"zoom-blur-focus.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:fs}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:I},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:v},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:u},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:x},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:H},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:L},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:G}],methods:[],template:{memory:{array:ds},slots:{0:{structure:I,memory:{array:Ss},slots:{0:{structure:W,memory:{array:gs},slots:{0:{structure:Q,memory:{array:hs},address:1051065}}}}},1:{structure:v,memory:{array:zs},slots:{0:{structure:Y,memory:{array:Os},slots:{0:{structure:X,memory:{array:ws},address:1051047}}}}},2:{structure:u,memory:{array:Rs},slots:{0:{structure:l,memory:{array:qs}}}},3:{structure:x,memory:{array:As},slots:{0:{structure:ee,memory:{array:Us},slots:{0:{structure:Z,memory:{array:js},address:1050939}}}}},4:{structure:H,memory:{array:Ps},slots:{0:{structure:ye,memory:{array:c},address:-1431655766}}},5:{structure:L,memory:{array:Vs},slots:{0:{structure:ce,memory:{array:c},address:-1431655766}}},6:{structure:G,memory:{array:Cs},slots:{0:{structure:be,memory:{array:c},address:-1431655766}}}}}},slot:1});Object.assign(O,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:24});Object.assign(pe,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:23});Object.assign(fe,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:pe}],methods:[],template:null},slot:22});Object.assign(p,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[],template:null},slot:25});const ks=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(de,{...t,type:9,name:"zoom-blur-focus.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:l},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:l}],methods:[],template:{memory:{array:ks}}},slot:26});Object.assign(R,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:R}],methods:[],template:null},slot:27});Object.assign(Se,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:b}],methods:[],template:null},slot:52});const Is=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),vs=new Uint8Array([]),xs=new Uint8Array([216,249,15,0]),Es=new Uint8Array([4,0,0,0]);Object.assign(J,{...t,type:2,name:"zoom-blur-focus.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:fe},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:p},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:p},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:de},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:{memory:{array:Is}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:Se},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:u}],methods:[],template:{memory:{array:vs},slots:{0:{structure:u,memory:{array:xs},slots:{0:{structure:l,memory:{array:Es}}}}}}},slot:21});const Ks=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ds=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Fs=new Uint8Array([0,0,0,0,0,0,0,0]),Ce=new Uint8Array([]);Object.assign(A,{...t,type:2,name:"zoom-blur-focus.KernelInput(u8,zoom-blur-focus.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:J}],methods:[],template:{memory:{array:Ks},slots:{0:{structure:J,memory:{array:Ds},slots:{0:{structure:fe,memory:{array:Fs},slots:{0:{structure:pe,memory:{array:Ce}}}}}}}}},slot:20});Object.assign(ge,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:23});Object.assign(he,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:ge}],methods:[],template:null},slot:30});const Ms=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),_s=new Uint8Array([]),Ts=new Uint8Array([216,249,15,0]),$s=new Uint8Array([4,0,0,0]);Object.assign(N,{...t,type:2,name:"zoom-blur-focus.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:he},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:p},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:p},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:de},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:R}],methods:[],template:{memory:{array:Ms}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:Se},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:u}],methods:[],template:{memory:{array:_s},slots:{0:{structure:u,memory:{array:Ts},slots:{0:{structure:l,memory:{array:$s}}}}}}},slot:29});const Bs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Hs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ls=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(U,{...t,type:2,name:"zoom-blur-focus.KernelOutput(u8,zoom-blur-focus.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:N}],methods:[],template:{memory:{array:Bs},slots:{0:{structure:N,memory:{array:Hs},slots:{0:{structure:he,memory:{array:Ls},slots:{0:{structure:ge,memory:{array:Ce}}}}}}}}},slot:28});const Gs=new Uint8Array([0,0,72,67,0,0,72,67,0,0,128,62,0,0,200,66,0,0,0,0,154,153,25,63,0,0,0,0,0,0,0,0]);Object.assign(j,{...t,type:2,name:"zoom-blur-focus.KernelParameters(zoom-blur-focus.kernel)",length:1,byteSize:32,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:64,bitSize:32,byteSize:4,slot:0,name:"amount",structure:b},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,slot:1,name:"center",structure:se},{...e,type:4,isRequired:!1,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"focalSize",structure:b},{...e,type:2,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:3,name:"invert",structure:l},{...e,type:4,isRequired:!1,bitOffset:160,bitSize:32,byteSize:4,slot:4,name:"vignette",structure:b},{...e,type:4,isRequired:!1,bitOffset:192,bitSize:32,byteSize:4,slot:5,name:"edgeHardness",structure:b}],methods:[],template:{memory:{array:Gs}}},slot:31});Object.assign(Re,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(zoom-blur-focus.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:53});Object.assign(qe,{...t,type:7,name:"ErrorSet0000!zoom-blur-focus.KernelOutput(u8,zoom-blur-focus.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:U},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Re}],methods:[],template:null},slot:36});Object.assign(Ae,{...t,type:3,name:"createOutput",length:1,byteSize:96,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:p},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:p},{...e,type:6,bitOffset:320,bitSize:192,byteSize:24,slot:2,name:"2",structure:A},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:3,name:"3",structure:j},{...e,type:6,bitOffset:512,bitSize:224,byteSize:28,slot:4,name:"retval",structure:qe}],methods:[],template:null},slot:34});Object.assign(Ue,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(zoom-blur-focus.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:54});Object.assign(je,{...t,type:7,name:"ErrorSet0001!zoom-blur-focus.KernelOutput(u8,zoom-blur-focus.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:U},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Ue}],methods:[],template:null},slot:37});Object.assign(Pe,{...t,type:3,name:"createPartialOutput",length:1,byteSize:104,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:p},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:p},{...e,type:3,bitOffset:320,bitSize:32,byteSize:4,slot:2,name:"2",structure:p},{...e,type:3,bitOffset:352,bitSize:32,byteSize:4,slot:3,name:"3",structure:p},{...e,type:6,bitOffset:384,bitSize:192,byteSize:24,slot:4,name:"4",structure:A},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:5,name:"5",structure:j},{...e,type:6,bitOffset:576,bitSize:224,byteSize:28,slot:6,name:"retval",structure:je}],methods:[],template:null},slot:35});const Js={argStruct:Ae,thunk:1,name:"createOutput"},Ns={argStruct:Pe,thunk:5,name:"createPartialOutput"};Object.assign(Ve,{...t,type:2,name:"zoom-blur-focus",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Ce}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:we},{...e,type:7,isRequired:!1,name:"Input",structure:A},{...e,type:7,isRequired:!1,name:"Output",structure:U},{...e,type:7,isRequired:!1,name:"Parameters",structure:j}],methods:[Js,Ns],template:null},slot:0});const Qs=[S,Q,W,I,X,Y,v,l,u,Z,ee,x,b,r,s,te,E,se,re,K,ae,D,ne,F,ie,M,ue,_,oe,T,me,$,le,B,ye,H,q,z,ce,L,be,G,we,O,pe,fe,p,de,R,Se,J,A,ge,he,N,U,j,Re,qe,Ae,Ue,je,Pe,Ve],Ws=Ze(Qs),Xs=Ve.constructor,Ys=(async()=>{const o=new URL("zoom-blur-focus-5dc97e22.wasm",import.meta.url).href;return fetch(o)})();et(Ys,{...Ws,writeBack:!0});const{createOutput:ir,createPartialOutput:Zs,kernel:Oe,Input:er,Output:ur,Parameters:or}=Xs;function tr(o,y,n,a,i={},g={}){if(Array.isArray(i)){const d=i;i={};for(const[f,h]of Object.keys(Oe.inputImages).entries())i[h]=d[f]}const P=new er(void 0),V=Object.keys(Oe.inputImages),m=[];let w;for(const d of V){let f=i[d];if(f||(V.length===1&&["data","width","height"].every(h=>!!i[h])?f=i:m.push(d)),P[d]=f,w){if(f.colorSpace!==w)throw new Error(`Input images must all use the same color space: ${w}`)}else w=f.colorSpace}if(m.length>0)throw new Error(`Missing input image${m.length>1?"s":""}: ${m.join(", ")}`);const ze=Zs(o,y,n,a,P,g),ke=d=>{const f=Object.keys(d),h={};for(const Ie of f){const{data:{typedArray:C},width:ve,height:Ee}=d[Ie];let k;if(typeof ImageData=="function"){const Ke=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);k=new ImageData(Ke,ve,a,{colorSpace:w})}else k={data:C,width:ve,height:Ee};if(f.length===1)return k;h[Ie]=k}return h};return ze[Symbol.toStringTag]==="Promise"?ze.then(ke):ke(ze)}function sr(){const o={};for(let[y,n]of Object.entries(Oe)){if(y==="parameters"){const a={};for(const[i,g]of Object.entries(n)){const P=a[i]={};for(let[V,m]of Object.entries(g))typeof m=="object"?"string"in m?m=m.string:m=xe(m):typeof m=="function"&&(m=rr(m.name)),P[V]=m}n=a}else typeof n=="object"&&("string"in n?n=n.string:n=n.valueOf());o[y]=n}return o}function xe(o){const y=[];for(let[n,a]of Object.entries(o))typeof a=="object"&&(a=xe(a)),y[n]=a;return y}function rr(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[y,n,...a]=o.data;ar(y,a).then(([i,g])=>{postMessage([y,n,i],{transfer:g})}).catch(i=>{postMessage(["error",n,i])})};async function ar(o,y){switch(o){case"getKernelInfo":return[sr(...y)];case"createPartialImageData":const a=await tr(...y),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const g of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${o}`)}}
