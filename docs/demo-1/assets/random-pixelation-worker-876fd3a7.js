import{u as Me,a as $e,b as Be,c as Le,d as Ge,e as He,f as Je,g as Ne,h as Qe,i as We,j as Xe,k as Ye,l as Ze,m as et,n as tt,o as st,p as rt,q as at,r as mt}from"./index-9f315e7a.js";Me();$e();Be();Le();Ge();He();Je();Ne();Qe();We();Xe();Ye();Ze();et();tt();st();rt();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},z={},q={},w={},g={},ee={},te={},F={},p={},d={},u={},r={},s={},se={},D={},re={},T={},ae={},M={},me={},$={},ie={},B={},oe={},ne={},L={},ue={},G={},le={},H={},ce={},J={},ye={},N={},Q={},U={},V={},pe={},W={},fe={},X={},Re={},O={},be={},de={},y={},he={},_={},A={},Se={},Y={},j={},ge={},ze={},Z={},x={},P={},qe={},we={},_e={},Ae={},Ue={},je={},xe={};Object.assign(z,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:z}],methods:[],template:null},slot:5});Object.assign(q,{...t,type:1,name:"[22:0]u8",length:22,byteSize:23,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:z}],methods:[],template:null},slot:4});Object.assign(w,{...t,type:11,name:"*const [22:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:q}],methods:[],template:null},slot:3});Object.assign(g,{...t,type:11,name:"**const [22:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:w}],methods:[],template:null},slot:2});Object.assign(ee,{...t,type:1,name:"[8:0]u8",length:8,byteSize:9,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:z}],methods:[],template:null},slot:8});Object.assign(te,{...t,type:11,name:"*const [8:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:7});Object.assign(F,{...t,type:11,name:"**const [8:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:6});Object.assign(p,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[],template:null},slot:10});Object.assign(d,{...t,type:11,name:"*i32",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:p}],methods:[],template:null},slot:9});Object.assign(u,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:u}],methods:[],template:null},slot:30});Object.assign(r,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[],template:null},slot:54});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:r}],methods:[],template:null},slot:53});const it=new Uint8Array([]),ot=new Uint8Array([104,30,16,0]),I=new Uint8Array([0,0,0,0,0,0,240,63]),nt=new Uint8Array([96,30,16,0]),k=new Uint8Array([0,0,0,0,0,0,89,64]),ut=new Uint8Array([136,30,16,0]),lt=new Uint8Array([0,0,0,0,0,0,42,64]);Object.assign(se,{...t,type:2,name:"struct{comptime type: type = f32, comptime minValue: comptime_float = 1, comptime maxValue: comptime_float = 100, comptime defaultValue: comptime_float = 13}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:it},slots:{0:{structure:s,memory:{array:ot},slots:{0:{structure:r,memory:{array:I},address:1056360}}},1:{structure:s,memory:{array:nt},slots:{0:{structure:r,memory:{array:k},address:1056352}}},2:{structure:s,memory:{array:ut},slots:{0:{structure:r,memory:{array:lt},address:1056392}}}}}},slot:37});Object.assign(D,{...t,type:11,name:"*const struct{comptime type: type = f32, comptime minValue: comptime_float = 1, comptime maxValue: comptime_float = 100, comptime defaultValue: comptime_float = 13}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:36});const ct=new Uint8Array([]),yt=new Uint8Array([104,30,16,0]),pt=new Uint8Array([96,30,16,0]),ft=new Uint8Array([128,30,16,0]),bt=new Uint8Array([0,0,0,0,0,0,49,64]);Object.assign(re,{...t,type:2,name:"struct{comptime type: type = f32, comptime minValue: comptime_float = 1, comptime maxValue: comptime_float = 100, comptime defaultValue: comptime_float = 17}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:ct},slots:{0:{structure:s,memory:{array:yt},slots:{0:{structure:r,memory:{array:I},address:1056360}}},1:{structure:s,memory:{array:pt},slots:{0:{structure:r,memory:{array:k},address:1056352}}},2:{structure:s,memory:{array:ft},slots:{0:{structure:r,memory:{array:bt},address:1056384}}}}}},slot:39});Object.assign(T,{...t,type:11,name:"*const struct{comptime type: type = f32, comptime minValue: comptime_float = 1, comptime maxValue: comptime_float = 100, comptime defaultValue: comptime_float = 17}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:38});const dt=new Uint8Array([]),ht=new Uint8Array([104,30,16,0]),St=new Uint8Array([96,30,16,0]),gt=new Uint8Array([120,30,16,0]),zt=new Uint8Array([0,0,0,0,0,0,51,64]);Object.assign(ae,{...t,type:2,name:"struct{comptime type: type = f32, comptime minValue: comptime_float = 1, comptime maxValue: comptime_float = 100, comptime defaultValue: comptime_float = 19}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:dt},slots:{0:{structure:s,memory:{array:ht},slots:{0:{structure:r,memory:{array:I},address:1056360}}},1:{structure:s,memory:{array:St},slots:{0:{structure:r,memory:{array:k},address:1056352}}},2:{structure:s,memory:{array:gt},slots:{0:{structure:r,memory:{array:zt},address:1056376}}}}}},slot:41});Object.assign(M,{...t,type:11,name:"*const struct{comptime type: type = f32, comptime minValue: comptime_float = 1, comptime maxValue: comptime_float = 100, comptime defaultValue: comptime_float = 19}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:40});const Vt=new Uint8Array([]),Ot=new Uint8Array([104,30,16,0]),Rt=new Uint8Array([96,30,16,0]),qt=new Uint8Array([112,30,16,0]),wt=new Uint8Array([0,0,0,0,0,0,53,64]);Object.assign(me,{...t,type:2,name:"struct{comptime type: type = f32, comptime minValue: comptime_float = 1, comptime maxValue: comptime_float = 100, comptime defaultValue: comptime_float = 21}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:Vt},slots:{0:{structure:s,memory:{array:Ot},slots:{0:{structure:r,memory:{array:I},address:1056360}}},1:{structure:s,memory:{array:Rt},slots:{0:{structure:r,memory:{array:k},address:1056352}}},2:{structure:s,memory:{array:qt},slots:{0:{structure:r,memory:{array:wt},address:1056368}}}}}},slot:43});Object.assign($,{...t,type:11,name:"*const struct{comptime type: type = f32, comptime minValue: comptime_float = 1, comptime maxValue: comptime_float = 100, comptime defaultValue: comptime_float = 21}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:42});const _t=new Uint8Array([]),At=new Uint8Array([104,30,16,0]),Ut=new Uint8Array([96,30,16,0]),jt=new Uint8Array([88,30,16,0]),xt=new Uint8Array([0,0,0,0,0,0,55,64]);Object.assign(ie,{...t,type:2,name:"struct{comptime type: type = f32, comptime minValue: comptime_float = 1, comptime maxValue: comptime_float = 100, comptime defaultValue: comptime_float = 23}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:s},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:_t},slots:{0:{structure:s,memory:{array:At},slots:{0:{structure:r,memory:{array:I},address:1056360}}},1:{structure:s,memory:{array:Ut},slots:{0:{structure:r,memory:{array:k},address:1056352}}},2:{structure:s,memory:{array:jt},slots:{0:{structure:r,memory:{array:xt},address:1056344}}}}}},slot:45});Object.assign(B,{...t,type:11,name:"*const struct{comptime type: type = f32, comptime minValue: comptime_float = 1, comptime maxValue: comptime_float = 100, comptime defaultValue: comptime_float = 23}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:44});Object.assign(oe,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:u}],methods:[],template:null},slot:31});const Pt=new Uint8Array([]),It=new Uint8Array([72,30,16,0]),ve=new Uint8Array([0,0,0,0,0,0,89,192]),kt=new Uint8Array([72,30,16,0]);Object.assign(ne,{...t,type:2,name:"struct{comptime comptime_float = -100, comptime comptime_float = -100}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Pt},slots:{0:{structure:s,memory:{array:It},slots:{0:{structure:r,memory:{array:ve},address:1056328}}},1:{structure:s,memory:{array:kt},slots:{0:{structure:r,memory:{array:ve},address:1056328}}}}}},slot:56});Object.assign(L,{...t,type:11,name:"*const struct{comptime comptime_float = -100, comptime comptime_float = -100}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:55});const Ct=new Uint8Array([]),vt=new Uint8Array([64,30,16,0]),Ee=new Uint8Array([0,0,0,0,0,64,143,64]),Et=new Uint8Array([64,30,16,0]);Object.assign(ue,{...t,type:2,name:"struct{comptime comptime_float = 1000, comptime comptime_float = 1000}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Ct},slots:{0:{structure:s,memory:{array:vt},slots:{0:{structure:r,memory:{array:Ee},address:1056320}}},1:{structure:s,memory:{array:Et},slots:{0:{structure:r,memory:{array:Ee},address:1056320}}}}}},slot:58});Object.assign(G,{...t,type:11,name:"*const struct{comptime comptime_float = 1000, comptime comptime_float = 1000}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:57});const Kt=new Uint8Array([]),Ft=new Uint8Array([56,30,16,0]),Dt=new Uint8Array([0,0,0,0,0,48,107,64]),Tt=new Uint8Array([48,30,16,0]),Mt=new Uint8Array([205,204,204,204,204,108,136,64]);Object.assign(le,{...t,type:2,name:"struct{comptime comptime_float = 217.5, comptime comptime_float = 781.6}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Kt},slots:{0:{structure:s,memory:{array:Ft},slots:{0:{structure:r,memory:{array:Dt},address:1056312}}},1:{structure:s,memory:{array:Tt},slots:{0:{structure:r,memory:{array:Mt},address:1056304}}}}}},slot:60});Object.assign(H,{...t,type:11,name:"*const struct{comptime comptime_float = 217.5, comptime comptime_float = 781.6}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:le}],methods:[],template:null},slot:59});const $t=new Uint8Array([]),Bt=new Uint8Array([170,170,170,170]),c=new Uint8Array([]),Lt=new Uint8Array([170,170,170,170]),Gt=new Uint8Array([170,170,170,170]);Object.assign(ce,{...t,type:2,name:"struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = -100, comptime comptime_float = -100} = .{-100, -100}, comptime maxValue: struct{comptime comptime_float = 1000, comptime comptime_float = 1000} = .{1000, 1000}, comptime defaultValue: struct{comptime comptime_float = 217.5, comptime comptime_float = 781.6} = .{217.5, 781.6}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:oe},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:L},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:G},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:H}],methods:[],template:{memory:{array:$t},slots:{0:{structure:L,memory:{array:Bt},slots:{0:{structure:ne,memory:{array:c},address:-1431655766}}},1:{structure:G,memory:{array:Lt},slots:{0:{structure:ue,memory:{array:c},address:-1431655766}}},2:{structure:H,memory:{array:Gt},slots:{0:{structure:le,memory:{array:c},address:-1431655766}}}}}},slot:47});Object.assign(J,{...t,type:11,name:"*const struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = -100, comptime comptime_float = -100} = .{-100, -100}, comptime maxValue: struct{comptime comptime_float = 1000, comptime comptime_float = 1000} = .{1000, 1000}, comptime defaultValue: struct{comptime comptime_float = 217.5, comptime comptime_float = 781.6} = .{217.5, 781.6}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ce}],methods:[],template:null},slot:46});const Ht=new Uint8Array([]),Jt=new Uint8Array([170,170,170,170]),Nt=new Uint8Array([170,170,170,170]),Qt=new Uint8Array([170,170,170,170]),Wt=new Uint8Array([170,170,170,170]),Xt=new Uint8Array([170,170,170,170]),Yt=new Uint8Array([170,170,170,170]);Object.assign(ye,{...t,type:2,name:"struct{comptime n0: struct{comptime type: type = f32, comptime minValue: comptime_float = 1, comptime maxValue: comptime_float = 100, comptime defaultValue: comptime_float = 13} = .{.type = f32, .minValue = 1, .maxValue = 100, .defaultValue = 13}, comptime n1: struct{comptime type: type = f32, comptime minValue: comptime_float = 1, comptime maxValue: comptime_float = 100, comptime defaultValue: comptime_float = 17} = .{.type = f32, .minValue = 1, .maxValue = 100, .defaultValue = 17}, comptime n2: struct{comptime type: type = f32, comptime minValue: comptime_float = 1, comptime maxValue: comptime_float = 100, comptime defaultValue: comptime_float = 19} = .{.type = f32, .minValue = 1, .maxValue = 100, .defaultValue = 19}, comptime n3: struct{comptime type: type = f32, comptime minValue: comptime_float = 1, comptime maxValue: comptime_float = 100, comptime defaultValue: comptime_float = 21} = .{.type = f32, .minValue = 1, .maxValue = 100, .defaultValue = 21}, comptime n4: struct{comptime type: type = f32, comptime minValue: comptime_float = 1, comptime maxValue: comptime_float = 100, comptime defaultValue: comptime_float = 23} = .{.type = f32, .minValue = 1, .maxValue = 100, .defaultValue = 23}, comptime randomPoint: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = -100, comptime comptime_float = -100} = .{-100, -100}, comptime maxValue: struct{comptime comptime_float = 1000, comptime comptime_float = 1000} = .{1000, 1000}, comptime defaultValue: struct{comptime comptime_float = 217.5, comptime comptime_float = 781.6} = .{217.5, 781.6}} = .{.type = @Vector(2, f32), .minValue = .{-100, -100}, .maxValue = .{1000, 1000}, .defaultValue = .{217.5, 781.6}}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"n0",structure:D},{...e,type:8,isRequired:!1,slot:1,name:"n1",structure:T},{...e,type:8,isRequired:!1,slot:2,name:"n2",structure:M},{...e,type:8,isRequired:!1,slot:3,name:"n3",structure:$},{...e,type:8,isRequired:!1,slot:4,name:"n4",structure:B},{...e,type:8,isRequired:!1,slot:5,name:"randomPoint",structure:J}],methods:[],template:{memory:{array:Ht},slots:{0:{structure:D,memory:{array:Jt},slots:{0:{structure:se,memory:{array:c},address:-1431655766}}},1:{structure:T,memory:{array:Nt},slots:{0:{structure:re,memory:{array:c},address:-1431655766}}},2:{structure:M,memory:{array:Qt},slots:{0:{structure:ae,memory:{array:c},address:-1431655766}}},3:{structure:$,memory:{array:Wt},slots:{0:{structure:me,memory:{array:c},address:-1431655766}}},4:{structure:B,memory:{array:Xt},slots:{0:{structure:ie,memory:{array:c},address:-1431655766}}},5:{structure:J,memory:{array:Yt},slots:{0:{structure:ce,memory:{array:c},address:-1431655766}}}}}},slot:12});Object.assign(N,{...t,type:11,name:"*struct{comptime n0: struct{comptime type: type = f32, comptime minValue: comptime_float = 1, comptime maxValue: comptime_float = 100, comptime defaultValue: comptime_float = 13} = .{.type = f32, .minValue = 1, .maxValue = 100, .defaultValue = 13}, comptime n1: struct{comptime type: type = f32, comptime minValue: comptime_float = 1, comptime maxValue: comptime_float = 100, comptime defaultValue: comptime_float = 17} = .{.type = f32, .minValue = 1, .maxValue = 100, .defaultValue = 17}, comptime n2: struct{comptime type: type = f32, comptime minValue: comptime_float = 1, comptime maxValue: comptime_float = 100, comptime defaultValue: comptime_float = 19} = .{.type = f32, .minValue = 1, .maxValue = 100, .defaultValue = 19}, comptime n3: struct{comptime type: type = f32, comptime minValue: comptime_float = 1, comptime maxValue: comptime_float = 100, comptime defaultValue: comptime_float = 21} = .{.type = f32, .minValue = 1, .maxValue = 100, .defaultValue = 21}, comptime n4: struct{comptime type: type = f32, comptime minValue: comptime_float = 1, comptime maxValue: comptime_float = 100, comptime defaultValue: comptime_float = 23} = .{.type = f32, .minValue = 1, .maxValue = 100, .defaultValue = 23}, comptime randomPoint: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = -100, comptime comptime_float = -100} = .{-100, -100}, comptime maxValue: struct{comptime comptime_float = 1000, comptime comptime_float = 1000} = .{1000, 1000}, comptime defaultValue: struct{comptime comptime_float = 217.5, comptime comptime_float = 781.6} = .{217.5, 781.6}} = .{.type = @Vector(2, f32), .minValue = .{-100, -100}, .maxValue = .{1000, 1000}, .defaultValue = .{217.5, 781.6}}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:11});Object.assign(Q,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:p}],methods:[],template:null},slot:61});const Zt=new Uint8Array([]),es=new Uint8Array([80,30,16,0]),ts=new Uint8Array([4,0,0,0]);Object.assign(U,{...t,type:2,name:"struct{comptime channels: comptime_int = 4}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:Q}],methods:[],template:{memory:{array:Zt},slots:{0:{structure:Q,memory:{array:es},slots:{0:{structure:p,memory:{array:ts},address:1056336}}}}}},slot:49});Object.assign(V,{...t,type:11,name:"*const struct{comptime channels: comptime_int = 4}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:U}],methods:[],template:null},slot:48});const ss=new Uint8Array([]),rs=new Uint8Array([170,170,170,170]);Object.assign(pe,{...t,type:2,name:"struct{comptime src: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:V}],methods:[],template:{memory:{array:ss},slots:{0:{structure:V,memory:{array:rs},slots:{0:{structure:U,memory:{array:c},address:-1431655766}}}}}},slot:14});Object.assign(W,{...t,type:11,name:"*struct{comptime src: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:13});const as=new Uint8Array([]),ms=new Uint8Array([170,170,170,170]);Object.assign(fe,{...t,type:2,name:"struct{comptime dst: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:V}],methods:[],template:{memory:{array:as},slots:{0:{structure:V,memory:{array:ms},slots:{0:{structure:U,memory:{array:c},address:-1431655766}}}}}},slot:16});Object.assign(X,{...t,type:11,name:"*struct{comptime dst: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:15});const is=new Uint8Array([]),os=new Uint8Array([]),ns=new Uint8Array([20,253,15,0]),us=new Uint8Array([55,63,16,0]),Ke=new Uint8Array([114,97,110,100,111,109,32,115,105,122,101,32,112,105,120,101,108,97,116,105,111,110,0]),ls=new Uint8Array([76,253,15,0]),cs=new Uint8Array([46,63,16,0]),ys=new Uint8Array([112,105,120,101,108,101,114,111,0]),ps=new Uint8Array([108,253,15,0]),fs=new Uint8Array([1,0,0,0]),bs=new Uint8Array([164,253,15,0]),ds=new Uint8Array([55,63,16,0]),hs=new Uint8Array([170,170,170,170]),Ss=new Uint8Array([170,170,170,170]),gs=new Uint8Array([170,170,170,170]);Object.assign(Re,{...t,type:2,name:"random-pixelation.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:is}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:g},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:F},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:d},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:g},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:N},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:W},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:X}],methods:[],template:{memory:{array:os},slots:{0:{structure:g,memory:{array:ns},slots:{0:{structure:w,memory:{array:us},slots:{0:{structure:q,memory:{array:Ke},address:1064759}}}}},1:{structure:F,memory:{array:ls},slots:{0:{structure:te,memory:{array:cs},slots:{0:{structure:ee,memory:{array:ys},address:1064750}}}}},2:{structure:d,memory:{array:ps},slots:{0:{structure:p,memory:{array:fs}}}},3:{structure:g,memory:{array:bs},slots:{0:{structure:w,memory:{array:ds},slots:{0:{structure:q,memory:{array:Ke},address:1064759}}}}},4:{structure:N,memory:{array:hs},slots:{0:{structure:ye,memory:{array:c},address:-1431655766}}},5:{structure:W,memory:{array:Ss},slots:{0:{structure:pe,memory:{array:c},address:-1431655766}}},6:{structure:X,memory:{array:gs},slots:{0:{structure:fe,memory:{array:c},address:-1431655766}}}}}},slot:1});Object.assign(O,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:z}],methods:[],template:null},slot:21});Object.assign(be,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:20});Object.assign(de,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:be}],methods:[],template:null},slot:19});Object.assign(y,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:22});const zs=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(he,{...t,type:9,name:"random-pixelation.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:p},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:p}],methods:[],template:{memory:{array:zs}}},slot:23});Object.assign(_,{...t,name:"bool",length:1,byteSize:1,align:0,instance:{members:[{...e,type:1,isRequired:!1,bitOffset:0,bitSize:1,byteSize:1,structure:_}],methods:[],template:null},slot:24});Object.assign(A,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:A}],methods:[],template:null},slot:25});Object.assign(Se,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:u}],methods:[],template:null},slot:50});const Vs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Os=new Uint8Array([]),Rs=new Uint8Array([200,251,15,0]),qs=new Uint8Array([4,0,0,0]);Object.assign(Y,{...t,type:2,name:"random-pixelation.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:de},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:he},{...e,type:1,isRequired:!1,bitOffset:168,bitSize:1,byteSize:1,slot:4,name:"premultiplied",structure:_},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:5,name:"offset",structure:A}],methods:[],template:{memory:{array:Vs}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:Se},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:d}],methods:[],template:{memory:{array:Os},slots:{0:{structure:d,memory:{array:Rs},slots:{0:{structure:p,memory:{array:qs}}}}}}},slot:18});const ws=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),_s=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),As=new Uint8Array([0,0,0,0,0,0,0,0]),Pe=new Uint8Array([]);Object.assign(j,{...t,type:2,name:"random-pixelation.KernelInput(u8,random-pixelation.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:Y}],methods:[],template:{memory:{array:ws},slots:{0:{structure:Y,memory:{array:_s},slots:{0:{structure:de,memory:{array:As},slots:{0:{structure:be,memory:{array:Pe}}}}}}}}},slot:17});Object.assign(ge,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:20});Object.assign(ze,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:ge}],methods:[],template:null},slot:28});const Us=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),js=new Uint8Array([]),xs=new Uint8Array([200,251,15,0]),Ps=new Uint8Array([4,0,0,0]);Object.assign(Z,{...t,type:2,name:"random-pixelation.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:ze},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:y},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:y},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:he},{...e,type:1,isRequired:!1,bitOffset:168,bitSize:1,byteSize:1,slot:4,name:"premultiplied",structure:_},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:5,name:"offset",structure:A}],methods:[],template:{memory:{array:Us}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:O},{...e,type:7,isRequired:!1,name:"FPixel",structure:Se},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:d}],methods:[],template:{memory:{array:js},slots:{0:{structure:d,memory:{array:xs},slots:{0:{structure:p,memory:{array:Ps}}}}}}},slot:27});const Is=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ks=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Cs=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(x,{...t,type:2,name:"random-pixelation.KernelOutput(u8,random-pixelation.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:Z}],methods:[],template:{memory:{array:Is},slots:{0:{structure:Z,memory:{array:ks},slots:{0:{structure:ze,memory:{array:Cs},slots:{0:{structure:ge,memory:{array:Pe}}}}}}}}},slot:26});const vs=new Uint8Array([0,128,89,67,102,102,67,68,0,0,80,65,0,0,136,65,0,0,152,65,0,0,168,65,0,0,184,65,0,0,0,0]);Object.assign(P,{...t,type:2,name:"random-pixelation.KernelParameters(random-pixelation.kernel)",length:1,byteSize:32,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:64,bitSize:32,byteSize:4,slot:0,name:"n0",structure:u},{...e,type:4,isRequired:!1,bitOffset:96,bitSize:32,byteSize:4,slot:1,name:"n1",structure:u},{...e,type:4,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:2,name:"n2",structure:u},{...e,type:4,isRequired:!1,bitOffset:160,bitSize:32,byteSize:4,slot:3,name:"n3",structure:u},{...e,type:4,isRequired:!1,bitOffset:192,bitSize:32,byteSize:4,slot:4,name:"n4",structure:u},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,slot:5,name:"randomPoint",structure:oe}],methods:[],template:{memory:{array:vs}}},slot:29});Object.assign(qe,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(random-pixelation.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:51});Object.assign(we,{...t,type:7,name:"@typeInfo(@typeInfo(@TypeOf(random-pixelation.createOutput)).Fn.return_type.?).ErrorUnion.error_set!random-pixelation.KernelOutput(u8,random-pixelation.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:x},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:qe}],methods:[],template:null},slot:34});Object.assign(_e,{...t,type:3,name:"createOutput",length:1,byteSize:96,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:6,bitOffset:320,bitSize:192,byteSize:24,slot:2,name:"2",structure:j},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:3,name:"3",structure:P},{...e,type:6,bitOffset:512,bitSize:224,byteSize:28,slot:4,name:"retval",structure:we}],methods:[],template:null},slot:32});Object.assign(Ae,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(random-pixelation.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:52});Object.assign(Ue,{...t,type:7,name:"@typeInfo(@typeInfo(@TypeOf(random-pixelation.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set!random-pixelation.KernelOutput(u8,random-pixelation.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:x},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Ae}],methods:[],template:null},slot:35});Object.assign(je,{...t,type:3,name:"createPartialOutput",length:1,byteSize:104,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:y},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:y},{...e,type:3,bitOffset:320,bitSize:32,byteSize:4,slot:2,name:"2",structure:y},{...e,type:3,bitOffset:352,bitSize:32,byteSize:4,slot:3,name:"3",structure:y},{...e,type:6,bitOffset:384,bitSize:192,byteSize:24,slot:4,name:"4",structure:j},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:5,name:"5",structure:P},{...e,type:6,bitOffset:576,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Ue}],methods:[],template:null},slot:33});const Es={argStruct:_e,thunk:3,name:"createOutput"},Ks={argStruct:je,thunk:1,name:"createPartialOutput"};Object.assign(xe,{...t,type:2,name:"random-pixelation",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Pe}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:Re},{...e,type:7,isRequired:!1,name:"Input",structure:j},{...e,type:7,isRequired:!1,name:"Output",structure:x},{...e,type:7,isRequired:!1,name:"Parameters",structure:P}],methods:[Es,Ks],template:null},slot:0});const Fs=[z,q,w,g,ee,te,F,p,d,u,r,s,se,D,re,T,ae,M,me,$,ie,B,oe,ne,L,ue,G,le,H,ce,J,ye,N,Q,U,V,pe,W,fe,X,Re,O,be,de,y,he,_,A,Se,Y,j,ge,ze,Z,x,P,qe,we,_e,Ae,Ue,je,xe],Ds=at(Fs),Ts=xe.constructor,Ms=(async()=>{const o=new URL("random-pixelation-3988dc46.wasm",import.meta.url).href;return fetch(o)})();mt(Ms,{...Ds,writeBack:!0});const{createOutput:Qs,createPartialOutput:$s,kernel:Oe,Input:Bs,Output:Ws,Parameters:Xs}=Ts;function Ls(o,l,m,a,i={},h={}){if(Array.isArray(i)){const b=i;i={};for(const[f,S]of Object.keys(Oe.inputImages).entries())i[S]=b[f]}const C=new Bs(void 0),v=Object.keys(Oe.inputImages),n=[];let R;for(const b of v){let f=i[b];if(f||(v.length===1&&["data","width","height"].every(S=>!!i[S])?f=i:n.push(b)),C[b]=f,R){if(f.colorSpace!==R)throw new Error(`Input images must all use the same color space: ${R}`)}else R=f.colorSpace}if(n.length>0)throw new Error(`Missing input image${n.length>1?"s":""}: ${n.join(", ")}`);const Ve=$s(o,l,m,a,C,h),Ie=b=>{const f=Object.keys(b),S={};for(const ke of f){const{data:{typedArray:E},width:Ce,height:De}=b[ke];let K;if(typeof ImageData=="function"){const Te=new Uint8ClampedArray(E.buffer,E.byteOffset,E.byteLength);K=new ImageData(Te,Ce,a,{colorSpace:R})}else K={data:E,width:Ce,height:De};if(f.length===1)return K;S[ke]=K}return S};return Ve[Symbol.toStringTag]==="Promise"?Ve.then(Ie):Ie(Ve)}function Gs(){const o={};for(let[l,m]of Object.entries(Oe)){if(l==="parameters"){const a={};for(const[i,h]of Object.entries(m)){const C=a[i]={};for(let[v,n]of Object.entries(h))typeof n=="object"?"string"in n?n=n.string:n=Fe(n):typeof n=="function"&&(n=Hs(n.name)),C[v]=n}m=a}else typeof m=="object"&&("string"in m?m=m.string:m=m.valueOf());o[l]=m}return o}function Fe(o){const l=[];for(let[m,a]of Object.entries(o))typeof a=="object"&&(a=Fe(a)),l[m]=a;return l}function Hs(o){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[o]}onmessage=o=>{const[l,m,...a]=o.data;Js(l,a).then(([i,h])=>{postMessage([l,m,i],{transfer:h})}).catch(i=>{postMessage(["error",m,i])})};async function Js(o,l){switch(o){case"getKernelInfo":return[Gs(...l)];case"createPartialImageData":const a=await Ls(...l),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const h of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${o}`)}}
