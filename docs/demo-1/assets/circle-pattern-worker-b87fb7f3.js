import{u as rr,a as nr,b as ar,c as or,d as cr,e as ir,f as ur,g as mr,h as yr,i as lr,j as br,k as pr,l as gr,m as Or,n as fr,o as jr,p as Sr,q as zr}from"./index-270629a1.js";rr();pr();gr();nr();ar();Or();fr();jr();Sr();or();cr();ir();ur();zr();mr();yr();lr();const s={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},r={},h={},F={},A={},_={},$={},b={},f={},e={},g={},n={},L={},B={},G={},H={},J={},R={},N={},Q={},W={},X={},Y={},Z={},tt={},et={},U={},st={},rt={},lt={},q={},nt={},I={},u={},O={},k={},bt={},at={},x={},ot={},v={},ct={},E={},T={},d={},pt={},gt={},w={},Ot={},ft={},jt={},Se={},St={},K={},zt={},ze={},dt={},de={},wt={},we={},he={},ht={},At={},Ae={},Ut={},Ue={},Vt={},Ve={},Pe={},Pt={},Re={},Rt={},ke={},qe={},kt={},Ie={},qt={},xe={},ve={},It={},Ee={},xt={},Te={},Ke={},vt={},Et={},Tt={},Kt={},Ct={},Ce={},Dt={},De={},Mt={},Me={},Fe={},Ft={},_e={},_t={},$e={},Le={},$t={},Be={},Lt={},Ge={},He={},Bt={},Gt={},Ht={},Jt={},Je={},Nt={},Qt={},Ne={},Wt={},Qe={},Xt={},We={},Xe={},Yt={},Zt={},Ye={},te={},Ze={},ee={},ts={},es={},se={},re={},ne={},ae={},oe={},ce={},ss={},it={},rs={},ns={},ie={},as={},ue={},os={},cs={},me={},is={},us={},ms={},ys={},ls={},bs={},ps={},gs={},Os={},fs={},js={},Ss={},zs={},ye={},ds={},ws={},le={},hs={},be={},As={},Us={},Vs={},Ps={},Rs={},ks={},qs={},pe={},Is={},xs={},vs={},Es={},Ts={},Ks={},Cs={},Ds={},Ms={},Fs={},_s={},$s={},Ls={},Bs={},Gs={},Hs={},Js={},Ns={},Qs={},Ws={},Xs={},Ys={},dr=new Uint8Array,wr=new Uint8Array,hr=new Uint8Array([0,0,0,0,0,0,0,0]),Ar=new Uint8Array,Ur=new Uint8Array([31,133,235,81,184,30,213,63]),Vr=new Uint8Array,Pr=new Uint8Array([113,61,10,215,163,112,205,63]),Rr=new Uint8Array,kr=new Uint8Array,qr=new Uint8Array([0,0,0,0,0,0,240,63]),Ir=new Uint8Array,xr=new Uint8Array([0,0,0,0,0,0,52,64]),vr=new Uint8Array,Er=new Uint8Array([0,0,0,0,0,0,240,63]),Tr=new Uint8Array,Kr=new Uint8Array([154,153,153,153,153,153,185,63]),Cr=new Uint8Array,Dr=new Uint8Array([154,153,153,153,153,153,185,63]),Mr=new Uint8Array,Fr=new Uint8Array([0,0,0,0,0,0,32,64]),_r=new Uint8Array,$r=new Uint8Array([0,0,0,0,0,0,32,64]),Lr=new Uint8Array,Br=new Uint8Array([0,0,0,0,0,0,8,64]),Gr=new Uint8Array,Hr=new Uint8Array([145,43,80,230,122,182,251,63]),Jr=new Uint8Array,Nr=new Uint8Array,Qr=new Uint8Array,Wr=new Uint8Array,Xr=new Uint8Array,Yr=new Uint8Array([0,0,0,0,0,0,52,192]),Zr=new Uint8Array,tn=new Uint8Array([0,0,0,0,0,0,52,192]),en=new Uint8Array,sn=new Uint8Array([0,0,0,0,0,0,121,64]),rn=new Uint8Array,nn=new Uint8Array([0,0,0,0,0,0,121,64]),an=new Uint8Array,on=new Uint8Array([0,0,0,0,0,0,94,64]),cn=new Uint8Array,un=new Uint8Array([0,0,0,0,0,64,96,64]),mn=new Uint8Array,yn=new Uint8Array,ln=new Uint8Array,bn=new Uint8Array,pn=new Uint8Array,gn=new Uint8Array,On=new Uint8Array([252,169,241,210,77,98,80,63]),fn=new Uint8Array,jn=new Uint8Array([154,153,153,153,153,153,185,63]),Sn=new Uint8Array,zn=new Uint8Array([123,20,174,71,225,122,116,63]),dn=new Uint8Array,wn=new Uint8Array,hn=new Uint8Array([252,169,241,210,77,98,80,63]),An=new Uint8Array,Un=new Uint8Array([0,0,0,0,0,0,240,63]),Vn=new Uint8Array,Pn=new Uint8Array([154,153,153,153,153,153,169,63]),Rn=new Uint8Array,kn=new Uint8Array,qn=new Uint8Array,In=new Uint8Array,xn=new Uint8Array,vn=new Uint8Array,En=new Uint8Array,Tn=new Uint8Array([4]),Kn=new Uint8Array,Cn=new Uint8Array,Dn=new Uint8Array([252,4,0,1]),Mn=new Uint8Array([67,105,114,99,108,101,80,97,116,116,101,114,110,0]),Fn=new Uint8Array([21,5,0,1]),_n=new Uint8Array([80,101,116,114,105,32,76,101,115,107,105,110,101,110,0]),$n=new Uint8Array,Ln=new Uint8Array([1]),Bn=new Uint8Array([252,4,0,1]),Gn=new Uint8Array,Hn=new Uint8Array,Jn=new Uint8Array,Nn=new Uint8Array([0]),Qn=new Uint8Array([1]),Zs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Wn=new Uint8Array,Xn=new Uint8Array,Yn=new Uint8Array,Zn=new Uint8Array,ta=new Uint8Array([4]),ge=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),tr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ea=new Uint8Array,sa=new Uint8Array,ra=new Uint8Array,na=new Uint8Array,aa=new Uint8Array([4]),Oe=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),oa=new Uint8Array([0,0,64,64,215,179,221,63,0,0,240,66,0,0,2,67,31,133,107,62,0,0,128,63,10,215,163,59,205,204,76,61]),ca=new Uint8Array([27,0]),ia=new Uint8Array([27,0]),ua=new Uint8Array,ma=new Uint8Array,ya=new Uint8Array,la=new Uint8Array;Object.assign(Se,{slots:{0:St,1:zt,2:dt,3:wt}});Object.assign(St,{structure:r,memory:{array:dr},const:!0,slots:{0:K}});Object.assign(K,{structure:g});Object.assign(zt,{structure:e,memory:{array:wr},const:!0,slots:{0:ze}});Object.assign(ze,{structure:n,memory:{array:hr},const:!0});Object.assign(dt,{structure:e,memory:{array:Ar},const:!0,slots:{0:de}});Object.assign(de,{structure:n,memory:{array:Ur},const:!0});Object.assign(wt,{structure:e,memory:{array:Vr},const:!0,slots:{0:we}});Object.assign(we,{structure:n,memory:{array:Pr},const:!0});Object.assign(he,{slots:{0:ht,1:At,2:Ut,3:Vt}});Object.assign(ht,{structure:r,memory:{array:Rr},const:!0,slots:{0:K}});Object.assign(At,{structure:e,memory:{array:kr},const:!0,slots:{0:Ae}});Object.assign(Ae,{structure:n,memory:{array:qr},const:!0});Object.assign(Ut,{structure:e,memory:{array:Ir},const:!0,slots:{0:Ue}});Object.assign(Ue,{structure:n,memory:{array:xr},const:!0});Object.assign(Vt,{structure:e,memory:{array:vr},const:!0,slots:{0:Ve}});Object.assign(Ve,{structure:n,memory:{array:Er},const:!0});Object.assign(Pe,{slots:{0:Pt,1:Rt}});Object.assign(Pt,{structure:e,memory:{array:Tr},const:!0,slots:{0:Re}});Object.assign(Re,{structure:n,memory:{array:Kr},const:!0});Object.assign(Rt,{structure:e,memory:{array:Cr},const:!0,slots:{0:ke}});Object.assign(ke,{structure:n,memory:{array:Dr},const:!0});Object.assign(qe,{slots:{0:kt,1:qt}});Object.assign(kt,{structure:e,memory:{array:Mr},const:!0,slots:{0:Ie}});Object.assign(Ie,{structure:n,memory:{array:Fr},const:!0});Object.assign(qt,{structure:e,memory:{array:_r},const:!0,slots:{0:xe}});Object.assign(xe,{structure:n,memory:{array:$r},const:!0});Object.assign(ve,{slots:{0:It,1:xt}});Object.assign(It,{structure:e,memory:{array:Lr},const:!0,slots:{0:Ee}});Object.assign(Ee,{structure:n,memory:{array:Br},const:!0});Object.assign(xt,{structure:e,memory:{array:Gr},const:!0,slots:{0:Te}});Object.assign(Te,{structure:n,memory:{array:Hr},const:!0});Object.assign(Ke,{slots:{0:vt,1:Tt,2:Kt,3:Ct}});Object.assign(vt,{structure:r,memory:{array:Jr},const:!0,slots:{0:Et}});Object.assign(Et,{structure:R});Object.assign(Tt,{structure:G,memory:{array:Nr},const:!0,slots:{0:Pt,1:Rt}});Object.assign(Kt,{structure:H,memory:{array:Qr},const:!0,slots:{0:kt,1:qt}});Object.assign(Ct,{structure:J,memory:{array:Wr},const:!0,slots:{0:It,1:xt}});Object.assign(Ce,{slots:{0:Dt,1:Mt}});Object.assign(Dt,{structure:e,memory:{array:Xr},const:!0,slots:{0:De}});Object.assign(De,{structure:n,memory:{array:Yr},const:!0});Object.assign(Mt,{structure:e,memory:{array:Zr},const:!0,slots:{0:Me}});Object.assign(Me,{structure:n,memory:{array:tn},const:!0});Object.assign(Fe,{slots:{0:Ft,1:_t}});Object.assign(Ft,{structure:e,memory:{array:en},const:!0,slots:{0:_e}});Object.assign(_e,{structure:n,memory:{array:sn},const:!0});Object.assign(_t,{structure:e,memory:{array:rn},const:!0,slots:{0:$e}});Object.assign($e,{structure:n,memory:{array:nn},const:!0});Object.assign(Le,{slots:{0:$t,1:Lt}});Object.assign($t,{structure:e,memory:{array:an},const:!0,slots:{0:Be}});Object.assign(Be,{structure:n,memory:{array:on},const:!0});Object.assign(Lt,{structure:e,memory:{array:cn},const:!0,slots:{0:Ge}});Object.assign(Ge,{structure:n,memory:{array:un},const:!0});Object.assign(He,{slots:{0:Bt,1:Gt,2:Ht,3:Jt}});Object.assign(Bt,{structure:r,memory:{array:mn},const:!0,slots:{0:Et}});Object.assign(Gt,{structure:Q,memory:{array:yn},const:!0,slots:{0:Dt,1:Mt}});Object.assign(Ht,{structure:W,memory:{array:ln},const:!0,slots:{0:Ft,1:_t}});Object.assign(Jt,{structure:X,memory:{array:bn},const:!0,slots:{0:$t,1:Lt}});Object.assign(Je,{slots:{0:Nt,1:Qt,2:Wt,3:Xt}});Object.assign(Nt,{structure:r,memory:{array:pn},const:!0,slots:{0:K}});Object.assign(Qt,{structure:e,memory:{array:gn},const:!0,slots:{0:Ne}});Object.assign(Ne,{structure:n,memory:{array:On},const:!0});Object.assign(Wt,{structure:e,memory:{array:fn},const:!0,slots:{0:Qe}});Object.assign(Qe,{structure:n,memory:{array:jn},const:!0});Object.assign(Xt,{structure:e,memory:{array:Sn},const:!0,slots:{0:We}});Object.assign(We,{structure:n,memory:{array:zn},const:!0});Object.assign(Xe,{slots:{0:Yt,1:Zt,2:te,3:ee}});Object.assign(Yt,{structure:r,memory:{array:dn},const:!0,slots:{0:K}});Object.assign(Zt,{structure:e,memory:{array:wn},const:!0,slots:{0:Ye}});Object.assign(Ye,{structure:n,memory:{array:hn},const:!0});Object.assign(te,{structure:e,memory:{array:An},const:!0,slots:{0:Ze}});Object.assign(Ze,{structure:n,memory:{array:Un},const:!0});Object.assign(ee,{structure:e,memory:{array:Vn},const:!0,slots:{0:ts}});Object.assign(ts,{structure:n,memory:{array:Pn},const:!0});Object.assign(es,{slots:{0:se,1:re,2:ne,3:ae,4:oe,5:ce}});Object.assign(se,{structure:L,memory:{array:Rn},const:!0,slots:{0:St,1:zt,2:dt,3:wt}});Object.assign(re,{structure:B,memory:{array:kn},const:!0,slots:{0:ht,1:At,2:Ut,3:Vt}});Object.assign(ne,{structure:N,memory:{array:qn},const:!0,slots:{0:vt,1:Tt,2:Kt,3:Ct}});Object.assign(ae,{structure:Y,memory:{array:In},const:!0,slots:{0:Bt,1:Gt,2:Ht,3:Jt}});Object.assign(oe,{structure:Z,memory:{array:xn},const:!0,slots:{0:Nt,1:Qt,2:Wt,3:Xt}});Object.assign(ce,{structure:tt,memory:{array:vn},const:!0,slots:{0:Yt,1:Zt,2:te,3:ee}});Object.assign(ss,{slots:{0:it}});Object.assign(it,{structure:b,memory:{array:En},const:!0,slots:{0:rs}});Object.assign(rs,{structure:f,memory:{array:Tn},const:!0});Object.assign(ns,{slots:{0:ie}});Object.assign(ie,{structure:U,memory:{array:Kn},const:!0,slots:{0:it}});Object.assign(as,{slots:{0:ue}});Object.assign(ue,{structure:U,memory:{array:Cn},const:!0,slots:{0:it}});Object.assign(os,{slots:{0:cs,1:is,2:ms,3:ls,4:bs,5:ps,6:gs}});Object.assign(cs,{structure:A,memory:{array:Dn},const:!0,slots:{0:me}});Object.assign(me,{structure:F,memory:{array:Mn},reloc:16778492});Object.assign(is,{structure:$,memory:{array:Fn},const:!0,slots:{0:us}});Object.assign(us,{structure:_,memory:{array:_n},reloc:16778517});Object.assign(ms,{structure:b,memory:{array:$n},const:!0,slots:{0:ys}});Object.assign(ys,{structure:f,memory:{array:Ln},const:!0});Object.assign(ls,{structure:A,memory:{array:Bn},const:!0,slots:{0:me}});Object.assign(bs,{structure:et,memory:{array:Gn},const:!0,slots:{0:se,1:re,2:ne,3:ae,4:oe,5:ce}});Object.assign(ps,{structure:st,memory:{array:Hn},const:!0,slots:{0:ie}});Object.assign(gs,{structure:rt,memory:{array:Jn},const:!0,slots:{0:ue}});Object.assign(Os,{slots:{0:fs,1:js}});Object.assign(fs,{structure:O,memory:{array:Nn},const:!0});Object.assign(js,{structure:O,memory:{array:Qn},const:!0});Object.assign(Ss,{memory:{array:Zs},slots:{0:zs}});Object.assign(zs,{structure:I,memory:{array:Zs,offset:0,length:8},slots:{0:ye}});Object.assign(ye,{structure:nt,memory:{array:Wn},reloc:0});Object.assign(ds,{slots:{0:ws,1:hs,2:As}});Object.assign(ws,{structure:r,memory:{array:Xn},const:!0,slots:{0:le}});Object.assign(le,{structure:q});Object.assign(hs,{structure:r,memory:{array:Yn},const:!0,slots:{0:be}});Object.assign(be,{structure:bt});Object.assign(As,{structure:b,memory:{array:Zn},const:!0,slots:{0:Us}});Object.assign(Us,{structure:f,memory:{array:ta},const:!0});Object.assign(Vs,{memory:{array:ge},slots:{0:Ps}});Object.assign(Ps,{structure:at,memory:{array:ge},slots:{0:Rs}});Object.assign(Rs,{structure:I,memory:{array:ge,offset:0,length:8},slots:{0:ye}});Object.assign(ks,{memory:{array:tr},slots:{0:qs}});Object.assign(qs,{structure:v,memory:{array:tr,offset:0,length:8},slots:{0:pe}});Object.assign(pe,{structure:ot,memory:{array:ea},reloc:0});Object.assign(Is,{slots:{0:xs,1:vs,2:Es}});Object.assign(xs,{structure:r,memory:{array:sa},const:!0,slots:{0:le}});Object.assign(vs,{structure:r,memory:{array:ra},const:!0,slots:{0:be}});Object.assign(Es,{structure:b,memory:{array:na},const:!0,slots:{0:Ts}});Object.assign(Ts,{structure:f,memory:{array:aa},const:!0});Object.assign(Ks,{memory:{array:Oe},slots:{0:Cs}});Object.assign(Cs,{structure:ct,memory:{array:Oe},slots:{0:Ds}});Object.assign(Ds,{structure:v,memory:{array:Oe,offset:0,length:8},slots:{0:pe}});Object.assign(Ms,{memory:{array:oa}});Object.assign(Fs,{slots:{0:_s}});Object.assign(_s,{structure:d,memory:{array:ca},const:!0});Object.assign($s,{slots:{0:Ls}});Object.assign(Ls,{structure:w,memory:{array:ia},const:!0});Object.assign(Bs,{slots:{0:Gs,1:Js,2:Qs,3:Xs}});Object.assign(Gs,{structure:r,memory:{array:ua},const:!0,slots:{0:Hs}});Object.assign(Hs,{structure:lt});Object.assign(Js,{structure:r,memory:{array:ma},const:!0,slots:{0:Ns}});Object.assign(Ns,{structure:x});Object.assign(Qs,{structure:r,memory:{array:ya},const:!0,slots:{0:Ws}});Object.assign(Ws,{structure:E});Object.assign(Xs,{structure:r,memory:{array:la},const:!0,slots:{0:Ys}});Object.assign(Ys,{structure:T});const ba={argStruct:gt,thunkId:2,name:"createOutput"},pa={argStruct:ft,thunkId:3,name:"createPartialOutput"};Object.assign(r,{...s,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:r}],methods:[]}});Object.assign(h,{...s,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:h}],methods:[]}});Object.assign(F,{...s,type:1,name:"[13:0]u8",length:13,byteSize:14,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:h}],methods:[]}});Object.assign(A,{...s,type:13,name:"*const [13:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:F}],methods:[]}});Object.assign(_,{...s,type:1,name:"[14:0]u8",length:14,byteSize:15,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:h}],methods:[]}});Object.assign($,{...s,type:13,name:"*const [14:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[]}});Object.assign(b,{...s,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:b}],methods:[]}});Object.assign(f,{...s,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:f}],methods:[]}});Object.assign(e,{...s,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:e}],methods:[]}});Object.assign(g,{...s,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:g}],methods:[]}});Object.assign(n,{...s,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:n}],methods:[]}});Object.assign(L,{...s,type:2,name:"Struct2593231189",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:e},{...t,type:7,slot:2,name:"maxValue",structure:e},{...t,type:7,slot:3,name:"defaultValue",structure:e}],methods:[],template:Se}});Object.assign(B,{...s,type:2,name:"Struct2780449832",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:e},{...t,type:7,slot:2,name:"maxValue",structure:e},{...t,type:7,slot:3,name:"defaultValue",structure:e}],methods:[],template:he}});Object.assign(G,{...s,type:2,name:"Struct3785042217",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:Pe}});Object.assign(H,{...s,type:2,name:"Struct1233730324",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:qe}});Object.assign(J,{...s,type:2,name:"Struct4112446434",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:ve}});Object.assign(R,{...s,type:15,name:"@Vector(2, f32)",length:2,byteSize:8,align:8,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:g}],methods:[]}});Object.assign(N,{...s,type:2,name:"Struct2663496776",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:G},{...t,type:7,slot:2,name:"maxValue",structure:H},{...t,type:7,slot:3,name:"defaultValue",structure:J}],methods:[],template:Ke}});Object.assign(Q,{...s,type:2,name:"Struct4062680865",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:Ce}});Object.assign(W,{...s,type:2,name:"Struct2796675710",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:Fe}});Object.assign(X,{...s,type:2,name:"Struct2998406273",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e}],methods:[],template:Le}});Object.assign(Y,{...s,type:2,name:"Struct2179746371",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:Q},{...t,type:7,slot:2,name:"maxValue",structure:W},{...t,type:7,slot:3,name:"defaultValue",structure:X}],methods:[],template:He}});Object.assign(Z,{...s,type:2,name:"Struct1194800752",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:e},{...t,type:7,slot:2,name:"maxValue",structure:e},{...t,type:7,slot:3,name:"defaultValue",structure:e}],methods:[],template:Je}});Object.assign(tt,{...s,type:2,name:"Struct2598084961",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:r},{...t,type:7,slot:1,name:"minValue",structure:e},{...t,type:7,slot:2,name:"maxValue",structure:e},{...t,type:7,slot:3,name:"defaultValue",structure:e}],methods:[],template:Xe}});Object.assign(et,{...s,type:2,name:"Struct2672905034",align:1,instance:{members:[{...t,type:7,slot:0,name:"fill",structure:L},{...t,type:7,slot:1,name:"scale",structure:B},{...t,type:7,slot:2,name:"distort",structure:N},{...t,type:7,slot:3,name:"center",structure:Y},{...t,type:7,slot:4,name:"minSolid",structure:Z},{...t,type:7,slot:5,name:"maxSolid",structure:tt}],methods:[],template:es}});Object.assign(U,{...s,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:b}],methods:[],template:ss}});Object.assign(st,{...s,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:7,slot:0,name:"src",structure:U}],methods:[],template:ns}});Object.assign(rt,{...s,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:U}],methods:[],template:as}});Object.assign(lt,{...s,type:2,name:"circle-pattern.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:A},{...t,type:7,slot:1,name:"vendor",structure:$},{...t,type:7,slot:2,name:"version",structure:b},{...t,type:7,slot:3,name:"description",structure:A},{...t,type:7,slot:4,name:"parameters",structure:et},{...t,type:7,slot:5,name:"inputImages",structure:st},{...t,type:7,slot:6,name:"outputImages",structure:rt}],methods:[],template:os}});Object.assign(q,{...s,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:h}],methods:[]}});Object.assign(nt,{...s,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:q}],methods:[]}});Object.assign(I,{...s,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:nt}],methods:[]}});Object.assign(u,{...s,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:u}],methods:[]}});Object.assign(O,{...s,type:11,name:"circle-pattern.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:O}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:O},{...t,type:7,slot:1,name:"display-p3",structure:O}],methods:[],template:Os}});Object.assign(k,{...s,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:k}],methods:[]}});Object.assign(bt,{...s,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:g}],methods:[]}});Object.assign(at,{...s,type:2,name:"circle-pattern.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:I},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:k}],methods:[],template:Ss},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:r},{...t,type:7,slot:1,name:"FPixel",structure:r},{...t,type:7,slot:2,name:"channels",structure:b}],methods:[],template:ds}});Object.assign(x,{...s,type:2,name:"circle-pattern.KernelInput(u8,circle-pattern.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:at}],methods:[],template:Vs}});Object.assign(ot,{...s,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:q}],methods:[]}});Object.assign(v,{...s,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:ot}],methods:[]}});Object.assign(ct,{...s,type:2,name:"circle-pattern.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:v},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:O},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:k}],methods:[],template:ks},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:r},{...t,type:7,slot:1,name:"FPixel",structure:r},{...t,type:7,slot:2,name:"channels",structure:b}],methods:[],template:Is}});Object.assign(E,{...s,type:2,name:"circle-pattern.KernelOutput(u8,circle-pattern.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:ct}],methods:[],template:Ks}});Object.assign(T,{...s,type:2,name:"circle-pattern.KernelParameters(circle-pattern.kernel)",byteSize:32,align:8,instance:{members:[{...t,type:4,bitOffset:128,bitSize:32,byteSize:4,slot:2,name:"fill",structure:g},{...t,type:4,bitOffset:160,bitSize:32,byteSize:4,slot:3,name:"scale",structure:g},{...t,type:5,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"distort",structure:R},{...t,type:5,bitOffset:64,bitSize:64,byteSize:8,slot:1,name:"center",structure:R},{...t,type:4,bitOffset:192,bitSize:32,byteSize:4,slot:4,name:"minSolid",structure:g},{...t,type:4,bitOffset:224,bitSize:32,byteSize:4,slot:5,name:"maxSolid",structure:g}],methods:[],template:Ms}});Object.assign(d,{...s,type:10,name:"ErrorSet4231652996",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:d}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:d}],methods:[],template:Fs}});Object.assign(pt,{...s,type:9,name:"ErrorSet4231652996!circle-pattern.KernelOutput(u8,circle-pattern.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:E},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:d}],methods:[]}});Object.assign(gt,{...s,type:5,name:"createOutput",byteSize:96,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...t,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...t,type:5,isRequired:!0,bitOffset:320,bitSize:192,byteSize:24,slot:0,name:"2",structure:x},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:256,byteSize:32,slot:1,name:"3",structure:T},{...t,type:5,isRequired:!0,bitOffset:512,bitSize:224,byteSize:28,slot:2,name:"retval",structure:pt}],methods:[]}});Object.assign(w,{...s,type:10,name:"ErrorSet3730776520",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:w}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:w}],methods:[],template:$s}});Object.assign(Ot,{...s,type:9,name:"ErrorSet3730776520!circle-pattern.KernelOutput(u8,circle-pattern.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:E},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:w}],methods:[]}});Object.assign(ft,{...s,type:5,name:"createPartialOutput",byteSize:104,align:8,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:3,name:"0",structure:u},{...t,type:3,isRequired:!0,bitOffset:288,bitSize:32,byteSize:4,slot:4,name:"1",structure:u},{...t,type:3,isRequired:!0,bitOffset:320,bitSize:32,byteSize:4,slot:5,name:"2",structure:u},{...t,type:3,isRequired:!0,bitOffset:352,bitSize:32,byteSize:4,slot:6,name:"3",structure:u},{...t,type:5,isRequired:!0,bitOffset:384,bitSize:192,byteSize:24,slot:0,name:"4",structure:x},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:256,byteSize:32,slot:1,name:"5",structure:T},{...t,type:5,isRequired:!0,bitOffset:576,bitSize:224,byteSize:28,slot:2,name:"retval",structure:Ot}],methods:[]}});Object.assign(jt,{...s,type:2,name:"circle-pattern",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:r},{...t,type:7,slot:1,name:"Input",structure:r},{...t,type:7,slot:2,name:"Output",structure:r},{...t,type:7,slot:3,name:"Parameters",structure:r}],methods:[ba,pa],template:Bs}});const ga=[r,h,F,A,_,$,b,f,e,g,n,L,B,G,H,J,R,N,Q,W,X,Y,Z,tt,et,U,st,rt,lt,q,nt,I,u,O,k,bt,at,x,ot,v,ct,E,T,d,pt,gt,w,Ot,ft,jt],Oa=jt,fa={runtimeSafety:!1,littleEndian:!0},ut=br();ut.getSpecialExports();ut.recreateStructures(ga,fa);const ja=(async()=>{const c=new URL("circle-pattern-e324546f.wasm",import.meta.url).href;return fetch(c)})();ut.loadModule(ja);ut.linkVariables(!0);const{constructor:Sa}=Oa,{createPartialOutput:za,Input:da,kernel:yt}=Sa;function wa(c,m,i,o,a={},j={}){const S=[];for(const[l]of yt.inputImages)S.push(l);const V=[];for(const[l]of yt.outputImages)V.push(l);if(Array.isArray(a)){const l=a;a={};for(const[p,z]of S.entries())a[z]=l[p]}const y=new da(void 0),C=[];let P;for(const l of S){let p=a[l];if(p||(S.length===1&&["data","width","height"].every(z=>!!a[z])?p=a:C.push(l)),y[l]=p,P){if(p.colorSpace!==P)throw new Error(`Input images must all use the same color space: ${P}`)}else P=p.colorSpace}if(C.length>0)throw new Error(`Missing input image${C.length>1?"s":""}: ${C.join(", ")}`);const mt=za(c,m,i,o,y,j),fe=l=>{const p={};for(const z of V){const{data:{typedArray:D},width:je,height:er}=l[z];let M;if(typeof ImageData=="function"){const sr=new Uint8ClampedArray(D.buffer,D.byteOffset,D.byteLength);M=new ImageData(sr,je,o,{colorSpace:P})}else M={data:D,width:je,height:er};if(V.length===1)return M;p[z]=M}return p};return mt[Symbol.toStringTag]==="Promise"?mt.then(fe):fe(mt)}function ha(){const c={};for(let[m,i]of yt){if(m==="parameters"){const o={};for(const[a,j]of i){const S=o[a]={};for(let[V,y]of j)typeof y=="object"?y=y.string??y.valueOf():typeof y=="function"&&(y=Aa(y.name)),S[V]=y}i=o}else typeof i=="object"&&(i=i.string??i.valueOf());c[m]=i}return c}function Aa(c){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[c]}onmessage=c=>{const[m,i,...o]=c.data;Ua(m,o).then(([a,j])=>{postMessage([m,i,a],{transfer:j})}).catch(a=>{postMessage(["error",i,a])})};async function Ua(c,m){switch(c){case"getKernelInfo":return[ha(...m)];case"createPartialImageData":const o=await wa(...m),a=[];if("data"in o&&"width"in o&&"height"in o)a.push(o.data.buffer);else for(const j of Object.entries(o))a.push(o.data.buffer);return[o,a];default:throw new Error(`Unknown function: ${c}`)}}
