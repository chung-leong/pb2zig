import{u as Ie,a as ve,b as xe,c as Ee,d as Ke,e as De,f as Fe,g as Me,h as _e,i as Te,j as $e,k as Be,l as Le,m as Ge,o as He,n as Je,p as Ne,q as Qe}from"./index-422d9c98.js";Ie();ve();xe();Ee();Ke();De();Fe();Me();_e();Te();$e();Be();Le();Ge();He();Je();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},S={},J={},N={},v={},Q={},W={},x={},p={},f={},X={},Y={},E={},c={},l={},s={},z={},Z={},K={},ee={},D={},te={},se={},F={},re={},M={},ae={},_={},ne={},T={},ie={},$={},A={},O={},ue={},B={},oe={},L={},Se={},w={},le={},me={},m={},ce={},q={},ye={},G={},U={},be={},pe={},H={},j={},P={},he={},ge={},ze={},Oe={},we={},Re={},qe={};Object.assign(S,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:5});Object.assign(J,{...t,type:1,name:"[18:0]u8",length:18,byteSize:19,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:4});Object.assign(N,{...t,type:11,name:"*const [18:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:J}],methods:[],template:null},slot:3});Object.assign(v,{...t,type:11,name:"*const *const [18:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:N}],methods:[],template:null},slot:2});Object.assign(Q,{...t,type:1,name:"[14:0]u8",length:14,byteSize:15,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:8});Object.assign(W,{...t,type:11,name:"*const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[],template:null},slot:7});Object.assign(x,{...t,type:11,name:"*const *const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:6});Object.assign(p,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[],template:null},slot:10});Object.assign(f,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:p}],methods:[],template:null},slot:9});Object.assign(X,{...t,type:1,name:"[42:0]u8",length:42,byteSize:43,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:13});Object.assign(Y,{...t,type:11,name:"*const [42:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:12});Object.assign(E,{...t,type:11,name:"*const *const [42:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[],template:null},slot:11});Object.assign(c,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:32});Object.assign(l,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:l}],methods:[],template:null},slot:50});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:l}],methods:[],template:null},slot:49});Object.assign(z,{...t,type:11,name:"*const f32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:c}],methods:[],template:null},slot:51});const We=new Uint8Array([]),Xe=new Uint8Array([104,253,15,0]),Ye=new Uint8Array([45,67,28,235,226,54,26,63]),Ze=new Uint8Array([136,252,15,0]),et=new Uint8Array([216,15,73,64]),tt=new Uint8Array([192,252,15,0]),st=new Uint8Array([83,180,195,118,47,27,228,63]);Object.assign(Z,{...t,type:2,name:"Struct0010",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:c},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:z},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:We},slots:{0:{structure:s,memory:{array:Xe},slots:{0:{structure:l,memory:{array:Ye}}}},1:{structure:z,memory:{array:Ze},slots:{0:{structure:c,memory:{array:et}}}},2:{structure:s,memory:{array:tt},slots:{0:{structure:l,memory:{array:st}}}}}}},slot:39});Object.assign(K,{...t,type:11,name:"Struct0006",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:38});const rt=new Uint8Array([]),at=new Uint8Array([104,253,15,0]),nt=new Uint8Array([0,0,0,0,0,0,0,0]),it=new Uint8Array([136,252,15,0]),ut=new Uint8Array([219,15,201,64]),ot=new Uint8Array([192,252,15,0]),lt=new Uint8Array([45,67,28,235,226,54,26,63]);Object.assign(ee,{...t,type:2,name:"Struct0011",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:c},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:z},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:s}],methods:[],template:{memory:{array:rt},slots:{0:{structure:s,memory:{array:at},slots:{0:{structure:l,memory:{array:nt}}}},1:{structure:z,memory:{array:it},slots:{0:{structure:c,memory:{array:ut}}}},2:{structure:s,memory:{array:ot},slots:{0:{structure:l,memory:{array:lt}}}}}}},slot:41});Object.assign(D,{...t,type:11,name:"Struct0007",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:40});Object.assign(te,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:33});const mt=new Uint8Array([]),ct=new Uint8Array([64,253,15,0]),yt=new Uint8Array([123,20,174,71,225,122,132,63]),bt=new Uint8Array([104,253,15,0]),pt=new Uint8Array([123,20,174,71,225,122,132,63]);Object.assign(se,{...t,type:2,name:"Struct0017",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:mt},slots:{0:{structure:s,memory:{array:ct},slots:{0:{structure:l,memory:{array:yt}}}},1:{structure:s,memory:{array:bt},slots:{0:{structure:l,memory:{array:pt}}}}}}},slot:53});Object.assign(F,{...t,type:11,name:"Struct0014",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:se}],methods:[],template:null},slot:52});const ft=new Uint8Array([]),dt=new Uint8Array([64,253,15,0]),St=new Uint8Array([92,143,194,245,40,0,127,64]),ht=new Uint8Array([104,253,15,0]),gt=new Uint8Array([92,143,194,245,40,0,127,64]);Object.assign(re,{...t,type:2,name:"Struct0018",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:ft},slots:{0:{structure:s,memory:{array:dt},slots:{0:{structure:l,memory:{array:St}}}},1:{structure:s,memory:{array:ht},slots:{0:{structure:l,memory:{array:gt}}}}}}},slot:55});Object.assign(M,{...t,type:11,name:"Struct0015",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:54});const zt=new Uint8Array([]),Ot=new Uint8Array([64,253,15,0]),wt=new Uint8Array([184,30,133,235,81,192,98,64]),Rt=new Uint8Array([104,253,15,0]),qt=new Uint8Array([184,30,133,235,81,192,98,64]);Object.assign(ae,{...t,type:2,name:"Struct0019",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:zt},slots:{0:{structure:s,memory:{array:Ot},slots:{0:{structure:l,memory:{array:wt}}}},1:{structure:s,memory:{array:Rt},slots:{0:{structure:l,memory:{array:qt}}}}}}},slot:57});Object.assign(_,{...t,type:11,name:"Struct0016",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:56});const At=new Uint8Array([]),Ut=new Uint8Array([170,170,170,170]),y=new Uint8Array([]),jt=new Uint8Array([170,170,170,170]),Pt=new Uint8Array([170,170,170,170]);Object.assign(ne,{...t,type:2,name:"Struct0012",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:te},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:F},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:M},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:_}],methods:[],template:{memory:{array:At},slots:{0:{structure:F,memory:{array:Ut},slots:{0:{structure:se,memory:{array:y},address:-1431655766}}},1:{structure:M,memory:{array:jt},slots:{0:{structure:re,memory:{array:y},address:-1431655766}}},2:{structure:_,memory:{array:Pt},slots:{0:{structure:ae,memory:{array:y},address:-1431655766}}}}}},slot:43});Object.assign(T,{...t,type:11,name:"Struct0008",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:42});const Vt=new Uint8Array([]),kt=new Uint8Array([170,170,170,170]),Ct=new Uint8Array([170,170,170,170]),It=new Uint8Array([170,170,170,170]);Object.assign(ie,{...t,type:2,name:"Struct0003",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"angle",structure:K},{...e,type:8,isRequired:!1,slot:1,name:"direction",structure:D},{...e,type:8,isRequired:!1,slot:2,name:"basepoint",structure:T}],methods:[],template:{memory:{array:Vt},slots:{0:{structure:K,memory:{array:kt},slots:{0:{structure:Z,memory:{array:y},address:-1431655766}}},1:{structure:D,memory:{array:Ct},slots:{0:{structure:ee,memory:{array:y},address:-1431655766}}},2:{structure:T,memory:{array:It},slots:{0:{structure:ne,memory:{array:y},address:-1431655766}}}}}},slot:15});Object.assign($,{...t,type:11,name:"Struct0000",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:14});const vt=new Uint8Array([]),xt=new Uint8Array([144,248,15,0]),Et=new Uint8Array([4,0,0,0]);Object.assign(A,{...t,type:2,name:"Struct0013",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:vt},slots:{0:{structure:f,memory:{array:xt},slots:{0:{structure:p,memory:{array:Et}}}}}}},slot:45});Object.assign(O,{...t,type:11,name:"Struct0009",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:A}],methods:[],template:null},slot:44});const Kt=new Uint8Array([]),Dt=new Uint8Array([170,170,170,170]);Object.assign(ue,{...t,type:2,name:"Struct0004",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:O}],methods:[],template:{memory:{array:Kt},slots:{0:{structure:O,memory:{array:Dt},slots:{0:{structure:A,memory:{array:y},address:-1431655766}}}}}},slot:17});Object.assign(B,{...t,type:11,name:"Struct0001",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ue}],methods:[],template:null},slot:16});const Ft=new Uint8Array([]),Mt=new Uint8Array([170,170,170,170]);Object.assign(oe,{...t,type:2,name:"Struct0005",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:O}],methods:[],template:{memory:{array:Ft},slots:{0:{structure:O,memory:{array:Mt},slots:{0:{structure:A,memory:{array:y},address:-1431655766}}}}}},slot:19});Object.assign(L,{...t,type:11,name:"Struct0002",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:oe}],methods:[],template:null},slot:18});const _t=new Uint8Array([]),Tt=new Uint8Array([]),$t=new Uint8Array([196,248,15,0]),Bt=new Uint8Array([77,37,16,0]),Lt=new Uint8Array([82,97,100,105,97,108,67,97,108,101,105,100,111,115,99,111,112,101,0]),Gt=new Uint8Array([4,249,15,0]),Ht=new Uint8Array([62,37,16,0]),Jt=new Uint8Array([80,101,116,114,105,32,76,101,115,107,105,110,101,110,0]),Nt=new Uint8Array([68,249,15,0]),Qt=new Uint8Array([1,0,0,0]),Wt=new Uint8Array([156,249,15,0]),Xt=new Uint8Array([19,37,16,0]),Yt=new Uint8Array([67,97,108,101,105,100,111,115,99,111,112,101,32,45,101,102,102,101,99,116,32,102,111,114,32,114,97,100,105,97,108,32,114,101,102,108,101,99,116,105,111,110,0]),Zt=new Uint8Array([170,170,170,170]),es=new Uint8Array([170,170,170,170]),ts=new Uint8Array([170,170,170,170]);Object.assign(Se,{...t,type:2,name:"radial-caleidoscope.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:_t}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:v},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:x},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:f},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:E},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:$},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:B},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:L}],methods:[],template:{memory:{array:Tt},slots:{0:{structure:v,memory:{array:$t},slots:{0:{structure:N,memory:{array:Bt},slots:{0:{structure:J,memory:{array:Lt},address:1058125}}}}},1:{structure:x,memory:{array:Gt},slots:{0:{structure:W,memory:{array:Ht},slots:{0:{structure:Q,memory:{array:Jt},address:1058110}}}}},2:{structure:f,memory:{array:Nt},slots:{0:{structure:p,memory:{array:Qt}}}},3:{structure:E,memory:{array:Wt},slots:{0:{structure:Y,memory:{array:Xt},slots:{0:{structure:X,memory:{array:Yt},address:1058067}}}}},4:{structure:$,memory:{array:Zt},slots:{0:{structure:ie,memory:{array:y},address:-1431655766}}},5:{structure:B,memory:{array:es},slots:{0:{structure:ue,memory:{array:y},address:-1431655766}}},6:{structure:L,memory:{array:ts},slots:{0:{structure:oe,memory:{array:y},address:-1431655766}}}}}},slot:1});Object.assign(w,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:S}],methods:[],template:null},slot:24});Object.assign(le,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:w}],methods:[],template:null},slot:23});Object.assign(me,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:le}],methods:[],template:null},slot:22});Object.assign(m,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:m}],methods:[],template:null},slot:25});const ss=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(ce,{...t,type:9,name:"radial-caleidoscope.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:p},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:p}],methods:[],template:{memory:{array:ss}}},slot:26});Object.assign(q,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:27});Object.assign(ye,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:46});const rs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),as=new Uint8Array([]),ns=new Uint8Array([72,253,15,0]),is=new Uint8Array([4,0,0,0]);Object.assign(G,{...t,type:2,name:"radial-caleidoscope.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:me},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ce},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:q}],methods:[],template:{memory:{array:rs}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:w},{...e,type:7,isRequired:!1,name:"FPixel",structure:ye},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:as},slots:{0:{structure:f,memory:{array:ns},slots:{0:{structure:p,memory:{array:is}}}}}}},slot:21});const us=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),os=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ls=new Uint8Array([0,0,0,0,0,0,0,0]),Ae=new Uint8Array([]);Object.assign(U,{...t,type:2,name:"radial-caleidoscope.KernelInput(u8,radial-caleidoscope.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:G}],methods:[],template:{memory:{array:us},slots:{0:{structure:G,memory:{array:os},slots:{0:{structure:me,memory:{array:ls},slots:{0:{structure:le,memory:{array:Ae}}}}}}}}},slot:20});Object.assign(be,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:w}],methods:[],template:null},slot:23});Object.assign(pe,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:be}],methods:[],template:null},slot:30});const ms=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),cs=new Uint8Array([]),ys=new Uint8Array([72,253,15,0]),bs=new Uint8Array([4,0,0,0]);Object.assign(H,{...t,type:2,name:"radial-caleidoscope.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:pe},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:m},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:m},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ce},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:q}],methods:[],template:{memory:{array:ms}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:w},{...e,type:7,isRequired:!1,name:"FPixel",structure:ye},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:f}],methods:[],template:{memory:{array:cs},slots:{0:{structure:f,memory:{array:ys},slots:{0:{structure:p,memory:{array:bs}}}}}}},slot:29});const ps=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),fs=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ds=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(j,{...t,type:2,name:"radial-caleidoscope.KernelOutput(u8,radial-caleidoscope.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:H}],methods:[],template:{memory:{array:ps},slots:{0:{structure:H,memory:{array:fs},slots:{0:{structure:pe,memory:{array:ds},slots:{0:{structure:be,memory:{array:Ae}}}}}}}}},slot:28});const Ss=new Uint8Array([143,2,22,67,143,2,22,67,124,217,32,63,23,183,209,56]);Object.assign(P,{...t,type:2,name:"radial-caleidoscope.KernelParameters(radial-caleidoscope.kernel)",length:1,byteSize:16,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:64,bitSize:32,byteSize:4,slot:0,name:"angle",structure:c},{...e,type:4,isRequired:!1,bitOffset:96,bitSize:32,byteSize:4,slot:1,name:"direction",structure:c},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,slot:2,name:"basepoint",structure:te}],methods:[],template:{memory:{array:Ss}}},slot:31});Object.assign(he,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(radial-caleidoscope.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:47});Object.assign(ge,{...t,type:7,name:"ErrorSet0000!radial-caleidoscope.KernelOutput(u8,radial-caleidoscope.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:j},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:he}],methods:[],template:null},slot:36});Object.assign(ze,{...t,type:3,name:"createOutput",length:1,byteSize:80,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:0,name:"0",structure:m},{...e,type:3,bitOffset:160,bitSize:32,byteSize:4,slot:1,name:"1",structure:m},{...e,type:6,bitOffset:192,bitSize:192,byteSize:24,slot:2,name:"2",structure:U},{...e,type:6,bitOffset:0,bitSize:128,byteSize:16,slot:3,name:"3",structure:P},{...e,type:6,bitOffset:384,bitSize:224,byteSize:28,slot:4,name:"retval",structure:ge}],methods:[],template:null},slot:34});Object.assign(Oe,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(radial-caleidoscope.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:48});Object.assign(we,{...t,type:7,name:"ErrorSet0001!radial-caleidoscope.KernelOutput(u8,radial-caleidoscope.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:j},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Oe}],methods:[],template:null},slot:37});Object.assign(Re,{...t,type:3,name:"createPartialOutput",length:1,byteSize:88,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:0,name:"0",structure:m},{...e,type:3,bitOffset:160,bitSize:32,byteSize:4,slot:1,name:"1",structure:m},{...e,type:3,bitOffset:192,bitSize:32,byteSize:4,slot:2,name:"2",structure:m},{...e,type:3,bitOffset:224,bitSize:32,byteSize:4,slot:3,name:"3",structure:m},{...e,type:6,bitOffset:256,bitSize:192,byteSize:24,slot:4,name:"4",structure:U},{...e,type:6,bitOffset:0,bitSize:128,byteSize:16,slot:5,name:"5",structure:P},{...e,type:6,bitOffset:448,bitSize:224,byteSize:28,slot:6,name:"retval",structure:we}],methods:[],template:null},slot:35});const hs={argStruct:ze,thunk:6,name:"createOutput"},gs={argStruct:Re,thunk:2,name:"createPartialOutput"};Object.assign(qe,{...t,type:2,name:"radial-caleidoscope",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:Ae}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:Se},{...e,type:7,isRequired:!1,name:"Input",structure:U},{...e,type:7,isRequired:!1,name:"Output",structure:j},{...e,type:7,isRequired:!1,name:"Parameters",structure:P}],methods:[hs,gs],template:null},slot:0});const zs=[S,J,N,v,Q,W,x,p,f,X,Y,E,c,l,s,z,Z,K,ee,D,te,se,F,re,M,ae,_,ne,T,ie,$,A,O,ue,B,oe,L,Se,w,le,me,m,ce,q,ye,G,U,be,pe,H,j,P,he,ge,ze,Oe,we,Re,qe],Os=Ne(zs),ws=qe.constructor,Rs=(async()=>{const i=new URL("radial-caleidoscope-7f54275b.wasm",import.meta.url).href;return fetch(i)})();Qe(Rs,{...Os,writeBack:!0});const{createOutput:Cs,createPartialOutput:qs,kernel:de,Input:As,Output:Is,Parameters:vs}=ws;function Us(i,o,a,r,n={},h={}){if(Array.isArray(n)){const d=n;n={};for(const[b,g]of Object.keys(de.inputImages).entries())n[g]=d[b]}const V=new As(void 0),k=Object.keys(de.inputImages),u=[];let R;for(const d of k){let b=n[d];if(b||(k.length===1&&["data","width","height"].every(g=>!!n[g])?b=n:u.push(d)),V[d]=b,R){if(b.colorSpace!==R)throw new Error(`Input images must all use the same color space: ${R}`)}else R=b.colorSpace}if(u.length>0)throw new Error(`Missing input image${u.length>1?"s":""}: ${u.join(", ")}`);const fe=qs(i,o,a,r,V,h),Ue=d=>{const b=Object.keys(d),g={};for(const je of b){const{data:{typedArray:C},width:Pe,height:ke}=d[je];let I;if(typeof ImageData=="function"){const Ce=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);I=new ImageData(Ce,Pe,r,{colorSpace:R})}else I={data:C,width:Pe,height:ke};if(b.length===1)return I;g[je]=I}return g};return fe[Symbol.toStringTag]==="Promise"?fe.then(Ue):Ue(fe)}function js(){const i={};for(let[o,a]of Object.entries(de)){if(o==="parameters"){const r={};for(const[n,h]of Object.entries(a)){const V=r[n]={};for(let[k,u]of Object.entries(h))typeof u=="object"?"string"in u?u=u.string:u=Ve(u):typeof u=="function"&&(u=Ps(u.name)),V[k]=u}a=r}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());i[o]=a}return i}function Ve(i){const o=[];for(let[a,r]of Object.entries(i))typeof r=="object"&&(r=Ve(r)),o[a]=r;return o}function Ps(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=i=>{const[o,a,...r]=i.data;Vs(o,r).then(([n,h])=>{postMessage([o,a,n],{transfer:h})}).catch(n=>{postMessage(["error",a,n])})};async function Vs(i,o){switch(i){case"getKernelInfo":return[js(...o)];case"createPartialImageData":const r=await Us(...o),n=[];if("data"in r&&"width"in r&&"height"in r)n.push(r.data.buffer);else for(const h of Object.entries(r))n.push(r.data.buffer);return[r,n];default:throw new Error(`Unknown function: ${i}`)}}
