import{u as Qa,a as Wa,b as Xa,c as Ya,d as Za,e as tn,f as en,g as sn,h as rn,i as an,j as nn,k as on,l as cn,m as un,n as yn,o as mn,p as ln,q as bn}from"./index-33238b17.js";Qa();on();cn();Wa();Xa();un();yn();mn();ln();Ya();Za();tn();en();bn();sn();rn();an();const s={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},a={},q={},Y={},Z={},tt={},et={},i={},w={},st={},rt={},e={},r={},n={},o={},at={},nt={},c={},K={},j={},ot={},ct={},ut={},it={},yt={},mt={},lt={},bt={},gt={},pt={},Ot={},jt={},ft={},St={},wt={},_={},At={},Ut={},zt={},M={},dt={},ht={},vt={},L={},Vt={},B={},b={},R={},$={},Pt={},G={},Tt={},H={},Rt={},J={},N={},E={},Et={},Ct={},C={},Kt={},Mt={},Dt={},qs={},A={},xs={},U={},Is={},z={},vs={},d={},Es={},Cs={},h={},Ks={},V={},Ms={},P={},Ds={},T={},Fs={},_s={},Ft={},$s={},_t={},Ls={},$t={},Bs={},Lt={},Gs={},Hs={},Bt={},f={},Gt={},Ht={},Jt={},Nt={},k={},Js={},Qt={},Ns={},Wt={},Qs={},Xt={},Ws={},Yt={},Xs={},Ys={},Zt={},te={},ee={},se={},re={},Zs={},ae={},tr={},ne={},er={},oe={},sr={},ce={},rr={},ar={},ue={},ie={},ye={},me={},le={},nr={},be={},or={},ge={},cr={},pe={},ur={},Oe={},ir={},yr={},je={},fe={},Se={},we={},Ae={},mr={},Ue={},lr={},ze={},br={},de={},gr={},he={},pr={},Or={},Ve={},Pe={},Te={},Re={},ke={},jr={},qe={},fr={},xe={},Sr={},Ie={},wr={},ve={},Ar={},Ur={},Ee={},Ce={},Ke={},Me={},De={},zr={},Fe={},dr={},_e={},hr={},$e={},Vr={},Le={},Pr={},Tr={},Be={},Ge={},He={},Je={},Ne={},Rr={},Qe={},kr={},We={},qr={},Xe={},xr={},Ye={},Ir={},vr={},Ze={},ts={},es={},ss={},rs={},Er={},as={},Cr={},ns={},Kr={},os={},Mr={},cs={},Dr={},Fr={},us={},_r={},is={},$r={},ys={},Lr={},ms={},Br={},Gr={},ls={},bs={},gs={},ps={},Os={},js={},fs={},Ss={},ws={},As={},Hr={},kt={},Jr={},Nr={},Us={},Qr={},zs={},Wr={},Xr={},Yr={},Zr={},ta={},ea={},sa={},ra={},aa={},na={},oa={},ca={},ua={},ia={},ya={},ma={},la={},ds={},ba={},ga={},hs={},pa={},Oa={},ja={},fa={},Sa={},wa={},Aa={},Ua={},Vs={},za={},da={},ha={},Va={},Pa={},Ta={},Ra={},ka={},qa={},xa={},Ia={},va={},Ea={},Ca={},Ka={},Ma={},Da={},Fa={},_a={},$a={},La={},Ba={},gn=new Uint8Array,pn=new Uint8Array([0,0,0,0,0,0,0,0]),On=new Uint8Array,jn=new Uint8Array([0,0,0,0,0,0,0,0]),fn=new Uint8Array,Sn=new Uint8Array([0,0,0,0,0,0,0,0]),wn=new Uint8Array,An=new Uint8Array([0,0,0,0,0,0,0,0]),Un=new Uint8Array,zn=new Uint8Array([0,0,0,0,0,0,240,63]),dn=new Uint8Array,hn=new Uint8Array([0,0,0,0,0,0,240,63]),Vn=new Uint8Array,Pn=new Uint8Array([0,0,0,0,0,0,240,63]),Tn=new Uint8Array,Rn=new Uint8Array([0,0,0,0,0,0,240,63]),kn=new Uint8Array,qn=new Uint8Array([211,77,98,16,88,57,220,63]),xn=new Uint8Array,In=new Uint8Array([0,0,0,0,0,192,226,63]),vn=new Uint8Array,En=new Uint8Array([0,0,0,0,0,224,227,63]),Cn=new Uint8Array,Kn=new Uint8Array([0,0,0,0,0,0,240,63]),Mn=new Uint8Array,Dn=new Uint8Array,Fn=new Uint8Array,_n=new Uint8Array,$n=new Uint8Array([24,7,0,1]),Ln=new Uint8Array([99,111,108,111,114,82,71,66,65,0]),Bn=new Uint8Array,Gn=new Uint8Array([12,2,43,135,22,217,234,63]),Hn=new Uint8Array,Jn=new Uint8Array([66,96,229,208,34,219,185,63]),Nn=new Uint8Array,Qn=new Uint8Array([199,41,58,146,203,127,192,63]),Wn=new Uint8Array,Xn=new Uint8Array([0,0,0,0,0,0,240,63]),Yn=new Uint8Array,Zn=new Uint8Array,to=new Uint8Array,eo=new Uint8Array,so=new Uint8Array([24,7,0,1]),ro=new Uint8Array,ao=new Uint8Array([0,0,0,0,0,0,0,0]),no=new Uint8Array,oo=new Uint8Array([246,40,92,143,194,245,200,63]),co=new Uint8Array,uo=new Uint8Array([51,51,51,51,51,51,211,63]),io=new Uint8Array,yo=new Uint8Array([0,0,0,0,0,0,240,63]),mo=new Uint8Array,lo=new Uint8Array,bo=new Uint8Array,go=new Uint8Array,po=new Uint8Array([24,7,0,1]),Oo=new Uint8Array,jo=new Uint8Array([219,249,126,106,188,116,239,63]),fo=new Uint8Array,So=new Uint8Array([123,20,174,71,225,122,236,63]),wo=new Uint8Array,Ao=new Uint8Array([203,161,69,182,243,253,228,63]),Uo=new Uint8Array,zo=new Uint8Array([0,0,0,0,0,0,240,63]),ho=new Uint8Array,Vo=new Uint8Array,Po=new Uint8Array,To=new Uint8Array,Ro=new Uint8Array([24,7,0,1]),ko=new Uint8Array,qo=new Uint8Array([0,0,0,0,0,0,0,0]),xo=new Uint8Array,Io=new Uint8Array([0,0,0,0,0,0,0,0]),vo=new Uint8Array,Eo=new Uint8Array([0,0,0,0,0,0,0,0]),Co=new Uint8Array,Ko=new Uint8Array([0,0,0,0,0,0,240,63]),Mo=new Uint8Array,Do=new Uint8Array,Fo=new Uint8Array,_o=new Uint8Array,$o=new Uint8Array([24,7,0,1]),Lo=new Uint8Array,Bo=new Uint8Array([0,0,0,0,0,0,240,63]),Go=new Uint8Array,Ho=new Uint8Array([0,0,0,0,0,0,0,0]),Jo=new Uint8Array,No=new Uint8Array([0,0,0,0,0,0,0,0]),Qo=new Uint8Array,Wo=new Uint8Array([0,0,0,0,0,0,240,63]),Xo=new Uint8Array,Yo=new Uint8Array,Zo=new Uint8Array,tc=new Uint8Array,ec=new Uint8Array([24,7,0,1]),sc=new Uint8Array,rc=new Uint8Array([0,0,0,0,0,0,0,0]),ac=new Uint8Array,nc=new Uint8Array([0,0,0,0,0,0,240,63]),oc=new Uint8Array,cc=new Uint8Array([0,0,0,0,0,0,0,0]),uc=new Uint8Array,ic=new Uint8Array([0,0,0,0,0,0,240,63]),yc=new Uint8Array,mc=new Uint8Array,lc=new Uint8Array,bc=new Uint8Array,gc=new Uint8Array([24,7,0,1]),pc=new Uint8Array,Oc=new Uint8Array([0,0,0,0,0,0,0,0]),jc=new Uint8Array,fc=new Uint8Array([0,0,0,0,0,0,0,0]),Sc=new Uint8Array,wc=new Uint8Array([0,0,0,0,0,0,240,63]),Ac=new Uint8Array,Uc=new Uint8Array([0,0,0,0,0,0,240,63]),zc=new Uint8Array,dc=new Uint8Array,hc=new Uint8Array,Vc=new Uint8Array,Pc=new Uint8Array([24,7,0,1]),Tc=new Uint8Array,Rc=new Uint8Array,kc=new Uint8Array([2]),qc=new Uint8Array,xc=new Uint8Array([8]),Ic=new Uint8Array,vc=new Uint8Array([4]),Ec=new Uint8Array,Cc=new Uint8Array,Kc=new Uint8Array([0,0,0,0,0,0,0,0]),Mc=new Uint8Array,Dc=new Uint8Array([0,0,0,0,0,0,16,64]),Fc=new Uint8Array,_c=new Uint8Array([0,0,0,0,0,0,224,63]),$c=new Uint8Array,Lc=new Uint8Array,Bc=new Uint8Array,Gc=new Uint8Array,Hc=new Uint8Array,Jc=new Uint8Array,Nc=new Uint8Array,Qc=new Uint8Array,Wc=new Uint8Array,Xc=new Uint8Array,Yc=new Uint8Array,Zc=new Uint8Array([4]),tu=new Uint8Array,eu=new Uint8Array,su=new Uint8Array([250,4,0,1]),ru=new Uint8Array([80,111,115,116,101,114,105,122,101,114,0]),au=new Uint8Array([16,5,0,1]),nu=new Uint8Array([80,101,116,114,105,32,76,101,115,107,105,110,101,110,0]),ou=new Uint8Array,cu=new Uint8Array([1]),uu=new Uint8Array([48,5,0,1]),iu=new Uint8Array([80,111,115,116,101,114,105,122,101,115,32,97,110,32,105,109,97,103,101,32,117,115,105,110,103,32,50,32,116,111,32,56,32,115,112,101,99,105,102,105,101,100,32,99,111,108,111,114,115,0]),yu=new Uint8Array,mu=new Uint8Array,lu=new Uint8Array,bu=new Uint8Array([0]),gu=new Uint8Array([1]),Ga=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),pu=new Uint8Array,Ou=new Uint8Array,ju=new Uint8Array,fu=new Uint8Array,Su=new Uint8Array([4]),Ps=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ha=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),wu=new Uint8Array,Au=new Uint8Array,Uu=new Uint8Array,zu=new Uint8Array,du=new Uint8Array([4]),Ts=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),hu=new Uint8Array([193,202,225,62,0,0,22,63,0,0,31,63,0,0,128,63,180,200,86,63,23,217,206,61,93,254,3,62,0,0,128,63,0,0,0,0,20,174,71,62,154,153,153,62,0,0,128,63,227,165,123,63,10,215,99,63,158,239,39,63,0,0,128,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,128,63,0,0,0,0,0,0,0,0,0,0,128,63,0,0,0,0,0,0,128,63,0,0,0,0,0,0,128,63,0,0,0,0,0,0,0,0,0,0,128,63,0,0,128,63,4,0,0,0,0,0,0,63,0,0,0,0,0,0,0,0]),Vu=new Uint8Array([27,0]),Pu=new Uint8Array([27,0]),Tu=new Uint8Array,Ru=new Uint8Array,ku=new Uint8Array,qu=new Uint8Array;Object.assign(qs,{slots:{0:A,1:U,2:z,3:d}});Object.assign(A,{structure:e,memory:{array:gn},const:!0,slots:{0:xs}});Object.assign(xs,{structure:r,memory:{array:pn},const:!0});Object.assign(U,{structure:e,memory:{array:On},const:!0,slots:{0:Is}});Object.assign(Is,{structure:r,memory:{array:jn},const:!0});Object.assign(z,{structure:e,memory:{array:fn},const:!0,slots:{0:vs}});Object.assign(vs,{structure:r,memory:{array:Sn},const:!0});Object.assign(d,{structure:e,memory:{array:wn},const:!0,slots:{0:Es}});Object.assign(Es,{structure:r,memory:{array:An},const:!0});Object.assign(Cs,{slots:{0:h,1:V,2:P,3:T}});Object.assign(h,{structure:e,memory:{array:Un},const:!0,slots:{0:Ks}});Object.assign(Ks,{structure:r,memory:{array:zn},const:!0});Object.assign(V,{structure:e,memory:{array:dn},const:!0,slots:{0:Ms}});Object.assign(Ms,{structure:r,memory:{array:hn},const:!0});Object.assign(P,{structure:e,memory:{array:Vn},const:!0,slots:{0:Ds}});Object.assign(Ds,{structure:r,memory:{array:Pn},const:!0});Object.assign(T,{structure:e,memory:{array:Tn},const:!0,slots:{0:Fs}});Object.assign(Fs,{structure:r,memory:{array:Rn},const:!0});Object.assign(_s,{slots:{0:Ft,1:_t,2:$t,3:Lt}});Object.assign(Ft,{structure:e,memory:{array:kn},const:!0,slots:{0:$s}});Object.assign($s,{structure:r,memory:{array:qn},const:!0});Object.assign(_t,{structure:e,memory:{array:xn},const:!0,slots:{0:Ls}});Object.assign(Ls,{structure:r,memory:{array:In},const:!0});Object.assign($t,{structure:e,memory:{array:vn},const:!0,slots:{0:Bs}});Object.assign(Bs,{structure:r,memory:{array:En},const:!0});Object.assign(Lt,{structure:e,memory:{array:Cn},const:!0,slots:{0:Gs}});Object.assign(Gs,{structure:r,memory:{array:Kn},const:!0});Object.assign(Hs,{slots:{0:Bt,1:Gt,2:Ht,3:Jt,4:Nt}});Object.assign(Bt,{structure:a,memory:{array:Mn},const:!0,slots:{0:f}});Object.assign(f,{structure:j});Object.assign(Gt,{structure:n,memory:{array:Dn},const:!0,slots:{0:A,1:U,2:z,3:d}});Object.assign(Ht,{structure:o,memory:{array:Fn},const:!0,slots:{0:h,1:V,2:P,3:T}});Object.assign(Jt,{structure:at,memory:{array:_n},const:!0,slots:{0:Ft,1:_t,2:$t,3:Lt}});Object.assign(Nt,{structure:c,memory:{array:$n},const:!0,slots:{0:k}});Object.assign(k,{structure:nt,memory:{array:Ln},reloc:16779032});Object.assign(Js,{slots:{0:Qt,1:Wt,2:Xt,3:Yt}});Object.assign(Qt,{structure:e,memory:{array:Bn},const:!0,slots:{0:Ns}});Object.assign(Ns,{structure:r,memory:{array:Gn},const:!0});Object.assign(Wt,{structure:e,memory:{array:Hn},const:!0,slots:{0:Qs}});Object.assign(Qs,{structure:r,memory:{array:Jn},const:!0});Object.assign(Xt,{structure:e,memory:{array:Nn},const:!0,slots:{0:Ws}});Object.assign(Ws,{structure:r,memory:{array:Qn},const:!0});Object.assign(Yt,{structure:e,memory:{array:Wn},const:!0,slots:{0:Xs}});Object.assign(Xs,{structure:r,memory:{array:Xn},const:!0});Object.assign(Ys,{slots:{0:Zt,1:te,2:ee,3:se,4:re}});Object.assign(Zt,{structure:a,memory:{array:Yn},const:!0,slots:{0:f}});Object.assign(te,{structure:n,memory:{array:Zn},const:!0,slots:{0:A,1:U,2:z,3:d}});Object.assign(ee,{structure:o,memory:{array:to},const:!0,slots:{0:h,1:V,2:P,3:T}});Object.assign(se,{structure:ct,memory:{array:eo},const:!0,slots:{0:Qt,1:Wt,2:Xt,3:Yt}});Object.assign(re,{structure:c,memory:{array:so},const:!0,slots:{0:k}});Object.assign(Zs,{slots:{0:ae,1:ne,2:oe,3:ce}});Object.assign(ae,{structure:e,memory:{array:ro},const:!0,slots:{0:tr}});Object.assign(tr,{structure:r,memory:{array:ao},const:!0});Object.assign(ne,{structure:e,memory:{array:no},const:!0,slots:{0:er}});Object.assign(er,{structure:r,memory:{array:oo},const:!0});Object.assign(oe,{structure:e,memory:{array:co},const:!0,slots:{0:sr}});Object.assign(sr,{structure:r,memory:{array:uo},const:!0});Object.assign(ce,{structure:e,memory:{array:io},const:!0,slots:{0:rr}});Object.assign(rr,{structure:r,memory:{array:yo},const:!0});Object.assign(ar,{slots:{0:ue,1:ie,2:ye,3:me,4:le}});Object.assign(ue,{structure:a,memory:{array:mo},const:!0,slots:{0:f}});Object.assign(ie,{structure:n,memory:{array:lo},const:!0,slots:{0:A,1:U,2:z,3:d}});Object.assign(ye,{structure:o,memory:{array:bo},const:!0,slots:{0:h,1:V,2:P,3:T}});Object.assign(me,{structure:it,memory:{array:go},const:!0,slots:{0:ae,1:ne,2:oe,3:ce}});Object.assign(le,{structure:c,memory:{array:po},const:!0,slots:{0:k}});Object.assign(nr,{slots:{0:be,1:ge,2:pe,3:Oe}});Object.assign(be,{structure:e,memory:{array:Oo},const:!0,slots:{0:or}});Object.assign(or,{structure:r,memory:{array:jo},const:!0});Object.assign(ge,{structure:e,memory:{array:fo},const:!0,slots:{0:cr}});Object.assign(cr,{structure:r,memory:{array:So},const:!0});Object.assign(pe,{structure:e,memory:{array:wo},const:!0,slots:{0:ur}});Object.assign(ur,{structure:r,memory:{array:Ao},const:!0});Object.assign(Oe,{structure:e,memory:{array:Uo},const:!0,slots:{0:ir}});Object.assign(ir,{structure:r,memory:{array:zo},const:!0});Object.assign(yr,{slots:{0:je,1:fe,2:Se,3:we,4:Ae}});Object.assign(je,{structure:a,memory:{array:ho},const:!0,slots:{0:f}});Object.assign(fe,{structure:n,memory:{array:Vo},const:!0,slots:{0:A,1:U,2:z,3:d}});Object.assign(Se,{structure:o,memory:{array:Po},const:!0,slots:{0:h,1:V,2:P,3:T}});Object.assign(we,{structure:mt,memory:{array:To},const:!0,slots:{0:be,1:ge,2:pe,3:Oe}});Object.assign(Ae,{structure:c,memory:{array:Ro},const:!0,slots:{0:k}});Object.assign(mr,{slots:{0:Ue,1:ze,2:de,3:he}});Object.assign(Ue,{structure:e,memory:{array:ko},const:!0,slots:{0:lr}});Object.assign(lr,{structure:r,memory:{array:qo},const:!0});Object.assign(ze,{structure:e,memory:{array:xo},const:!0,slots:{0:br}});Object.assign(br,{structure:r,memory:{array:Io},const:!0});Object.assign(de,{structure:e,memory:{array:vo},const:!0,slots:{0:gr}});Object.assign(gr,{structure:r,memory:{array:Eo},const:!0});Object.assign(he,{structure:e,memory:{array:Co},const:!0,slots:{0:pr}});Object.assign(pr,{structure:r,memory:{array:Ko},const:!0});Object.assign(Or,{slots:{0:Ve,1:Pe,2:Te,3:Re,4:ke}});Object.assign(Ve,{structure:a,memory:{array:Mo},const:!0,slots:{0:f}});Object.assign(Pe,{structure:n,memory:{array:Do},const:!0,slots:{0:A,1:U,2:z,3:d}});Object.assign(Te,{structure:o,memory:{array:Fo},const:!0,slots:{0:h,1:V,2:P,3:T}});Object.assign(Re,{structure:bt,memory:{array:_o},const:!0,slots:{0:Ue,1:ze,2:de,3:he}});Object.assign(ke,{structure:c,memory:{array:$o},const:!0,slots:{0:k}});Object.assign(jr,{slots:{0:qe,1:xe,2:Ie,3:ve}});Object.assign(qe,{structure:e,memory:{array:Lo},const:!0,slots:{0:fr}});Object.assign(fr,{structure:r,memory:{array:Bo},const:!0});Object.assign(xe,{structure:e,memory:{array:Go},const:!0,slots:{0:Sr}});Object.assign(Sr,{structure:r,memory:{array:Ho},const:!0});Object.assign(Ie,{structure:e,memory:{array:Jo},const:!0,slots:{0:wr}});Object.assign(wr,{structure:r,memory:{array:No},const:!0});Object.assign(ve,{structure:e,memory:{array:Qo},const:!0,slots:{0:Ar}});Object.assign(Ar,{structure:r,memory:{array:Wo},const:!0});Object.assign(Ur,{slots:{0:Ee,1:Ce,2:Ke,3:Me,4:De}});Object.assign(Ee,{structure:a,memory:{array:Xo},const:!0,slots:{0:f}});Object.assign(Ce,{structure:n,memory:{array:Yo},const:!0,slots:{0:A,1:U,2:z,3:d}});Object.assign(Ke,{structure:o,memory:{array:Zo},const:!0,slots:{0:h,1:V,2:P,3:T}});Object.assign(Me,{structure:pt,memory:{array:tc},const:!0,slots:{0:qe,1:xe,2:Ie,3:ve}});Object.assign(De,{structure:c,memory:{array:ec},const:!0,slots:{0:k}});Object.assign(zr,{slots:{0:Fe,1:_e,2:$e,3:Le}});Object.assign(Fe,{structure:e,memory:{array:sc},const:!0,slots:{0:dr}});Object.assign(dr,{structure:r,memory:{array:rc},const:!0});Object.assign(_e,{structure:e,memory:{array:ac},const:!0,slots:{0:hr}});Object.assign(hr,{structure:r,memory:{array:nc},const:!0});Object.assign($e,{structure:e,memory:{array:oc},const:!0,slots:{0:Vr}});Object.assign(Vr,{structure:r,memory:{array:cc},const:!0});Object.assign(Le,{structure:e,memory:{array:uc},const:!0,slots:{0:Pr}});Object.assign(Pr,{structure:r,memory:{array:ic},const:!0});Object.assign(Tr,{slots:{0:Be,1:Ge,2:He,3:Je,4:Ne}});Object.assign(Be,{structure:a,memory:{array:yc},const:!0,slots:{0:f}});Object.assign(Ge,{structure:n,memory:{array:mc},const:!0,slots:{0:A,1:U,2:z,3:d}});Object.assign(He,{structure:o,memory:{array:lc},const:!0,slots:{0:h,1:V,2:P,3:T}});Object.assign(Je,{structure:jt,memory:{array:bc},const:!0,slots:{0:Fe,1:_e,2:$e,3:Le}});Object.assign(Ne,{structure:c,memory:{array:gc},const:!0,slots:{0:k}});Object.assign(Rr,{slots:{0:Qe,1:We,2:Xe,3:Ye}});Object.assign(Qe,{structure:e,memory:{array:pc},const:!0,slots:{0:kr}});Object.assign(kr,{structure:r,memory:{array:Oc},const:!0});Object.assign(We,{structure:e,memory:{array:jc},const:!0,slots:{0:qr}});Object.assign(qr,{structure:r,memory:{array:fc},const:!0});Object.assign(Xe,{structure:e,memory:{array:Sc},const:!0,slots:{0:xr}});Object.assign(xr,{structure:r,memory:{array:wc},const:!0});Object.assign(Ye,{structure:e,memory:{array:Ac},const:!0,slots:{0:Ir}});Object.assign(Ir,{structure:r,memory:{array:Uc},const:!0});Object.assign(vr,{slots:{0:Ze,1:ts,2:es,3:ss,4:rs}});Object.assign(Ze,{structure:a,memory:{array:zc},const:!0,slots:{0:f}});Object.assign(ts,{structure:n,memory:{array:dc},const:!0,slots:{0:A,1:U,2:z,3:d}});Object.assign(es,{structure:o,memory:{array:hc},const:!0,slots:{0:h,1:V,2:P,3:T}});Object.assign(ss,{structure:St,memory:{array:Vc},const:!0,slots:{0:Qe,1:We,2:Xe,3:Ye}});Object.assign(rs,{structure:c,memory:{array:Pc},const:!0,slots:{0:k}});Object.assign(Er,{slots:{0:as,1:ns,2:os,3:cs}});Object.assign(as,{structure:a,memory:{array:Tc},const:!0,slots:{0:Cr}});Object.assign(Cr,{structure:_});Object.assign(ns,{structure:i,memory:{array:Rc},const:!0,slots:{0:Kr}});Object.assign(Kr,{structure:w,memory:{array:kc},const:!0});Object.assign(os,{structure:i,memory:{array:qc},const:!0,slots:{0:Mr}});Object.assign(Mr,{structure:w,memory:{array:xc},const:!0});Object.assign(cs,{structure:i,memory:{array:Ic},const:!0,slots:{0:Dr}});Object.assign(Dr,{structure:w,memory:{array:vc},const:!0});Object.assign(Fr,{slots:{0:us,1:is,2:ys,3:ms}});Object.assign(us,{structure:a,memory:{array:Ec},const:!0,slots:{0:_r}});Object.assign(_r,{structure:K});Object.assign(is,{structure:e,memory:{array:Cc},const:!0,slots:{0:$r}});Object.assign($r,{structure:r,memory:{array:Kc},const:!0});Object.assign(ys,{structure:e,memory:{array:Mc},const:!0,slots:{0:Lr}});Object.assign(Lr,{structure:r,memory:{array:Dc},const:!0});Object.assign(ms,{structure:e,memory:{array:Fc},const:!0,slots:{0:Br}});Object.assign(Br,{structure:r,memory:{array:_c},const:!0});Object.assign(Gr,{slots:{0:ls,1:bs,2:gs,3:ps,4:Os,5:js,6:fs,7:Ss,8:ws,9:As}});Object.assign(ls,{structure:ot,memory:{array:$c},const:!0,slots:{0:Bt,1:Gt,2:Ht,3:Jt,4:Nt}});Object.assign(bs,{structure:ut,memory:{array:Lc},const:!0,slots:{0:Zt,1:te,2:ee,3:se,4:re}});Object.assign(gs,{structure:yt,memory:{array:Bc},const:!0,slots:{0:ue,1:ie,2:ye,3:me,4:le}});Object.assign(ps,{structure:lt,memory:{array:Gc},const:!0,slots:{0:je,1:fe,2:Se,3:we,4:Ae}});Object.assign(Os,{structure:gt,memory:{array:Hc},const:!0,slots:{0:Ve,1:Pe,2:Te,3:Re,4:ke}});Object.assign(js,{structure:Ot,memory:{array:Jc},const:!0,slots:{0:Ee,1:Ce,2:Ke,3:Me,4:De}});Object.assign(fs,{structure:ft,memory:{array:Nc},const:!0,slots:{0:Be,1:Ge,2:He,3:Je,4:Ne}});Object.assign(Ss,{structure:wt,memory:{array:Qc},const:!0,slots:{0:Ze,1:ts,2:es,3:ss,4:rs}});Object.assign(ws,{structure:At,memory:{array:Wc},const:!0,slots:{0:as,1:ns,2:os,3:cs}});Object.assign(As,{structure:Ut,memory:{array:Xc},const:!0,slots:{0:us,1:is,2:ys,3:ms}});Object.assign(Hr,{slots:{0:kt}});Object.assign(kt,{structure:i,memory:{array:Yc},const:!0,slots:{0:Jr}});Object.assign(Jr,{structure:w,memory:{array:Zc},const:!0});Object.assign(Nr,{slots:{0:Us}});Object.assign(Us,{structure:M,memory:{array:tu},const:!0,slots:{0:kt}});Object.assign(Qr,{slots:{0:zs}});Object.assign(zs,{structure:M,memory:{array:eu},const:!0,slots:{0:kt}});Object.assign(Wr,{slots:{0:Xr,1:Zr,2:ea,3:ra,4:na,5:oa,6:ca}});Object.assign(Xr,{structure:Z,memory:{array:su},const:!0,slots:{0:Yr}});Object.assign(Yr,{structure:Y,memory:{array:ru},reloc:16778490});Object.assign(Zr,{structure:et,memory:{array:au},const:!0,slots:{0:ta}});Object.assign(ta,{structure:tt,memory:{array:nu},reloc:16778512});Object.assign(ea,{structure:i,memory:{array:ou},const:!0,slots:{0:sa}});Object.assign(sa,{structure:w,memory:{array:cu},const:!0});Object.assign(ra,{structure:rt,memory:{array:uu},const:!0,slots:{0:aa}});Object.assign(aa,{structure:st,memory:{array:iu},reloc:16778544});Object.assign(na,{structure:zt,memory:{array:yu},const:!0,slots:{0:ls,1:bs,2:gs,3:ps,4:Os,5:js,6:fs,7:Ss,8:ws,9:As}});Object.assign(oa,{structure:dt,memory:{array:mu},const:!0,slots:{0:Us}});Object.assign(ca,{structure:ht,memory:{array:lu},const:!0,slots:{0:zs}});Object.assign(ua,{slots:{0:ia,1:ya}});Object.assign(ia,{structure:R,memory:{array:bu},const:!0});Object.assign(ya,{structure:R,memory:{array:gu},const:!0});Object.assign(ma,{memory:{array:Ga},slots:{0:la}});Object.assign(la,{structure:B,memory:{array:Ga,offset:0,length:8},slots:{0:ds}});Object.assign(ds,{structure:Vt,memory:{array:pu},reloc:0});Object.assign(ba,{slots:{0:ga,1:pa,2:Oa}});Object.assign(ga,{structure:a,memory:{array:Ou},const:!0,slots:{0:hs}});Object.assign(hs,{structure:L});Object.assign(pa,{structure:a,memory:{array:ju},const:!0,slots:{0:f}});Object.assign(Oa,{structure:i,memory:{array:fu},const:!0,slots:{0:ja}});Object.assign(ja,{structure:w,memory:{array:Su},const:!0});Object.assign(fa,{memory:{array:Ps},slots:{0:Sa}});Object.assign(Sa,{structure:Pt,memory:{array:Ps},slots:{0:wa}});Object.assign(wa,{structure:B,memory:{array:Ps,offset:0,length:8},slots:{0:ds}});Object.assign(Aa,{memory:{array:Ha},slots:{0:Ua}});Object.assign(Ua,{structure:H,memory:{array:Ha,offset:0,length:8},slots:{0:Vs}});Object.assign(Vs,{structure:Tt,memory:{array:wu},reloc:0});Object.assign(za,{slots:{0:da,1:ha,2:Va}});Object.assign(da,{structure:a,memory:{array:Au},const:!0,slots:{0:hs}});Object.assign(ha,{structure:a,memory:{array:Uu},const:!0,slots:{0:f}});Object.assign(Va,{structure:i,memory:{array:zu},const:!0,slots:{0:Pa}});Object.assign(Pa,{structure:w,memory:{array:du},const:!0});Object.assign(Ta,{memory:{array:Ts},slots:{0:Ra}});Object.assign(Ra,{structure:Rt,memory:{array:Ts},slots:{0:ka}});Object.assign(ka,{structure:H,memory:{array:Ts,offset:0,length:8},slots:{0:Vs}});Object.assign(qa,{memory:{array:hu}});Object.assign(xa,{slots:{0:Ia}});Object.assign(Ia,{structure:E,memory:{array:Vu},const:!0});Object.assign(va,{slots:{0:Ea}});Object.assign(Ea,{structure:C,memory:{array:Pu},const:!0});Object.assign(Ca,{slots:{0:Ka,1:Da,2:_a,3:La}});Object.assign(Ka,{structure:a,memory:{array:Tu},const:!0,slots:{0:Ma}});Object.assign(Ma,{structure:vt});Object.assign(Da,{structure:a,memory:{array:Ru},const:!0,slots:{0:Fa}});Object.assign(Fa,{structure:G});Object.assign(_a,{structure:a,memory:{array:ku},const:!0,slots:{0:$a}});Object.assign($a,{structure:J});Object.assign(La,{structure:a,memory:{array:qu},const:!0,slots:{0:Ba}});Object.assign(Ba,{structure:N});const xu={argStruct:Ct,thunkId:2,name:"createOutput"},Iu={argStruct:Mt,thunkId:3,name:"createPartialOutput"};Object.assign(a,{...s,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:a}],methods:[]}});Object.assign(q,{...s,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:q}],methods:[]}});Object.assign(Y,{...s,type:1,name:"[10:0]u8",length:10,byteSize:11,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:q}],methods:[]}});Object.assign(Z,{...s,type:13,name:"*const [10:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[]}});Object.assign(tt,{...s,type:1,name:"[14:0]u8",length:14,byteSize:15,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:q}],methods:[]}});Object.assign(et,{...s,type:13,name:"*const [14:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:tt}],methods:[]}});Object.assign(i,{...s,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:i}],methods:[]}});Object.assign(w,{...s,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:w}],methods:[]}});Object.assign(st,{...s,type:1,name:"[49:0]u8",length:49,byteSize:50,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:q}],methods:[]}});Object.assign(rt,{...s,type:13,name:"*const [49:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:st}],methods:[]}});Object.assign(e,{...s,name:"comptime_float",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:e}],methods:[]}});Object.assign(r,{...s,name:"f64",byteSize:8,align:8,instance:{members:[{...t,type:4,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[]}});Object.assign(n,{...s,type:2,name:"Struct142040656",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e},{...t,type:7,slot:3,name:"3",structure:e}],methods:[],template:qs}});Object.assign(o,{...s,type:2,name:"Struct2121898850",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e},{...t,type:7,slot:3,name:"3",structure:e}],methods:[],template:Cs}});Object.assign(at,{...s,type:2,name:"Struct413760942",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e},{...t,type:7,slot:3,name:"3",structure:e}],methods:[],template:_s}});Object.assign(nt,{...s,type:1,name:"[9:0]u8",length:9,byteSize:10,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:q}],methods:[]}});Object.assign(c,{...s,type:13,name:"*const [9:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:nt}],methods:[]}});Object.assign(K,{...s,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:K}],methods:[]}});Object.assign(j,{...s,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:K}],methods:[]}});Object.assign(ot,{...s,type:2,name:"Struct1163597102",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:a},{...t,type:7,slot:1,name:"minValue",structure:n},{...t,type:7,slot:2,name:"maxValue",structure:o},{...t,type:7,slot:3,name:"defaultValue",structure:at},{...t,type:7,slot:4,name:"parameterType",structure:c}],methods:[],template:Hs}});Object.assign(ct,{...s,type:2,name:"Struct3546317060",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e},{...t,type:7,slot:3,name:"3",structure:e}],methods:[],template:Js}});Object.assign(ut,{...s,type:2,name:"Struct3998178236",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:a},{...t,type:7,slot:1,name:"minValue",structure:n},{...t,type:7,slot:2,name:"maxValue",structure:o},{...t,type:7,slot:3,name:"defaultValue",structure:ct},{...t,type:7,slot:4,name:"parameterType",structure:c}],methods:[],template:Ys}});Object.assign(it,{...s,type:2,name:"Struct3839836959",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e},{...t,type:7,slot:3,name:"3",structure:e}],methods:[],template:Zs}});Object.assign(yt,{...s,type:2,name:"Struct3308816589",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:a},{...t,type:7,slot:1,name:"minValue",structure:n},{...t,type:7,slot:2,name:"maxValue",structure:o},{...t,type:7,slot:3,name:"defaultValue",structure:it},{...t,type:7,slot:4,name:"parameterType",structure:c}],methods:[],template:ar}});Object.assign(mt,{...s,type:2,name:"Struct1454273995",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e},{...t,type:7,slot:3,name:"3",structure:e}],methods:[],template:nr}});Object.assign(lt,{...s,type:2,name:"Struct2208787243",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:a},{...t,type:7,slot:1,name:"minValue",structure:n},{...t,type:7,slot:2,name:"maxValue",structure:o},{...t,type:7,slot:3,name:"defaultValue",structure:mt},{...t,type:7,slot:4,name:"parameterType",structure:c}],methods:[],template:yr}});Object.assign(bt,{...s,type:2,name:"Struct2874091690",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e},{...t,type:7,slot:3,name:"3",structure:e}],methods:[],template:mr}});Object.assign(gt,{...s,type:2,name:"Struct1696468167",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:a},{...t,type:7,slot:1,name:"minValue",structure:n},{...t,type:7,slot:2,name:"maxValue",structure:o},{...t,type:7,slot:3,name:"defaultValue",structure:bt},{...t,type:7,slot:4,name:"parameterType",structure:c}],methods:[],template:Or}});Object.assign(pt,{...s,type:2,name:"Struct4114888521",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e},{...t,type:7,slot:3,name:"3",structure:e}],methods:[],template:jr}});Object.assign(Ot,{...s,type:2,name:"Struct227071032",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:a},{...t,type:7,slot:1,name:"minValue",structure:n},{...t,type:7,slot:2,name:"maxValue",structure:o},{...t,type:7,slot:3,name:"defaultValue",structure:pt},{...t,type:7,slot:4,name:"parameterType",structure:c}],methods:[],template:Ur}});Object.assign(jt,{...s,type:2,name:"Struct1993262044",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e},{...t,type:7,slot:3,name:"3",structure:e}],methods:[],template:zr}});Object.assign(ft,{...s,type:2,name:"Struct2546739610",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:a},{...t,type:7,slot:1,name:"minValue",structure:n},{...t,type:7,slot:2,name:"maxValue",structure:o},{...t,type:7,slot:3,name:"defaultValue",structure:jt},{...t,type:7,slot:4,name:"parameterType",structure:c}],methods:[],template:Tr}});Object.assign(St,{...s,type:2,name:"Struct4102345435",align:1,isTuple:!0,instance:{members:[{...t,type:7,slot:0,name:"0",structure:e},{...t,type:7,slot:1,name:"1",structure:e},{...t,type:7,slot:2,name:"2",structure:e},{...t,type:7,slot:3,name:"3",structure:e}],methods:[],template:Rr}});Object.assign(wt,{...s,type:2,name:"Struct2572396083",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:a},{...t,type:7,slot:1,name:"minValue",structure:n},{...t,type:7,slot:2,name:"maxValue",structure:o},{...t,type:7,slot:3,name:"defaultValue",structure:St},{...t,type:7,slot:4,name:"parameterType",structure:c}],methods:[],template:vr}});Object.assign(_,{...s,name:"i32",byteSize:4,align:4,instance:{members:[{...t,type:2,bitOffset:0,bitSize:32,byteSize:4,structure:_}],methods:[]}});Object.assign(At,{...s,type:2,name:"Struct4269958088",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:a},{...t,type:7,slot:1,name:"minValue",structure:i},{...t,type:7,slot:2,name:"maxValue",structure:i},{...t,type:7,slot:3,name:"defaultValue",structure:i}],methods:[],template:Er}});Object.assign(Ut,{...s,type:2,name:"Struct2773683585",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:a},{...t,type:7,slot:1,name:"minValue",structure:e},{...t,type:7,slot:2,name:"maxValue",structure:e},{...t,type:7,slot:3,name:"defaultValue",structure:e}],methods:[],template:Fr}});Object.assign(zt,{...s,type:2,name:"Struct4147323189",align:1,instance:{members:[{...t,type:7,slot:0,name:"color1",structure:ot},{...t,type:7,slot:1,name:"color2",structure:ut},{...t,type:7,slot:2,name:"color3",structure:yt},{...t,type:7,slot:3,name:"color4",structure:lt},{...t,type:7,slot:4,name:"color5",structure:gt},{...t,type:7,slot:5,name:"color6",structure:Ot},{...t,type:7,slot:6,name:"color7",structure:ft},{...t,type:7,slot:7,name:"color8",structure:wt},{...t,type:7,slot:8,name:"numColors",structure:At},{...t,type:7,slot:9,name:"blur",structure:Ut}],methods:[],template:Gr}});Object.assign(M,{...s,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:i}],methods:[],template:Hr}});Object.assign(dt,{...s,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:7,slot:0,name:"src",structure:M}],methods:[],template:Nr}});Object.assign(ht,{...s,type:2,name:"Struct172100005",align:1,instance:{members:[{...t,type:7,slot:0,name:"dst",structure:M}],methods:[],template:Qr}});Object.assign(vt,{...s,type:2,name:"posterize.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:Z},{...t,type:7,slot:1,name:"vendor",structure:et},{...t,type:7,slot:2,name:"version",structure:i},{...t,type:7,slot:3,name:"description",structure:rt},{...t,type:7,slot:4,name:"parameters",structure:zt},{...t,type:7,slot:5,name:"inputImages",structure:dt},{...t,type:7,slot:6,name:"outputImages",structure:ht}],methods:[],template:Wr}});Object.assign(L,{...s,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:q}],methods:[]}});Object.assign(Vt,{...s,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:L}],methods:[]}});Object.assign(B,{...s,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:Vt}],methods:[]}});Object.assign(b,{...s,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:b}],methods:[]}});Object.assign(R,{...s,type:11,name:"posterize.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:R}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:R},{...t,type:7,slot:1,name:"display-p3",structure:R}],methods:[],template:ua}});Object.assign($,{...s,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:$}],methods:[]}});Object.assign(Pt,{...s,type:2,name:"posterize.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:B},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:b},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:b},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:R},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:$}],methods:[],template:ma},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:a},{...t,type:7,slot:1,name:"FPixel",structure:a},{...t,type:7,slot:2,name:"channels",structure:i}],methods:[],template:ba}});Object.assign(G,{...s,type:2,name:"posterize.KernelInput(u8,posterize.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:Pt}],methods:[],template:fa}});Object.assign(Tt,{...s,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:L}],methods:[]}});Object.assign(H,{...s,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:Tt}],methods:[]}});Object.assign(Rt,{...s,type:2,name:"posterize.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:H},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:b},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:b},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:R},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:$}],methods:[],template:Aa},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:a},{...t,type:7,slot:1,name:"FPixel",structure:a},{...t,type:7,slot:2,name:"channels",structure:i}],methods:[],template:za}});Object.assign(J,{...s,type:2,name:"posterize.KernelOutput(u8,posterize.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:Rt}],methods:[],template:Ta}});Object.assign(N,{...s,type:2,name:"posterize.KernelParameters(posterize.kernel)",byteSize:144,align:16,instance:{members:[{...t,type:5,bitOffset:0,bitSize:128,byteSize:16,slot:0,name:"color1",structure:j},{...t,type:5,bitOffset:128,bitSize:128,byteSize:16,slot:1,name:"color2",structure:j},{...t,type:5,bitOffset:256,bitSize:128,byteSize:16,slot:2,name:"color3",structure:j},{...t,type:5,bitOffset:384,bitSize:128,byteSize:16,slot:3,name:"color4",structure:j},{...t,type:5,bitOffset:512,bitSize:128,byteSize:16,slot:4,name:"color5",structure:j},{...t,type:5,bitOffset:640,bitSize:128,byteSize:16,slot:5,name:"color6",structure:j},{...t,type:5,bitOffset:768,bitSize:128,byteSize:16,slot:6,name:"color7",structure:j},{...t,type:5,bitOffset:896,bitSize:128,byteSize:16,slot:7,name:"color8",structure:j},{...t,type:2,bitOffset:1024,bitSize:32,byteSize:4,slot:8,name:"numColors",structure:_},{...t,type:4,bitOffset:1056,bitSize:32,byteSize:4,slot:9,name:"blur",structure:K}],methods:[],template:qa}});Object.assign(E,{...s,type:10,name:"ErrorSet2218577139",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:E}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:E}],methods:[],template:xa}});Object.assign(Et,{...s,type:9,name:"ErrorSet2218577139!posterize.KernelOutput(u8,posterize.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:J},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:E}],methods:[]}});Object.assign(Ct,{...s,type:5,name:"createOutput",byteSize:208,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:1152,bitSize:32,byteSize:4,slot:3,name:"0",structure:b},{...t,type:3,isRequired:!0,bitOffset:1184,bitSize:32,byteSize:4,slot:4,name:"1",structure:b},{...t,type:5,isRequired:!0,bitOffset:1216,bitSize:192,byteSize:24,slot:0,name:"2",structure:G},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:1152,byteSize:144,slot:1,name:"3",structure:N},{...t,type:5,isRequired:!0,bitOffset:1408,bitSize:224,byteSize:28,slot:2,name:"retval",structure:Et}],methods:[]}});Object.assign(C,{...s,type:10,name:"ErrorSet1354927590",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:C}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:C}],methods:[],template:va}});Object.assign(Kt,{...s,type:9,name:"ErrorSet1354927590!posterize.KernelOutput(u8,posterize.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:J},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:C}],methods:[]}});Object.assign(Mt,{...s,type:5,name:"createPartialOutput",byteSize:224,align:16,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:1152,bitSize:32,byteSize:4,slot:3,name:"0",structure:b},{...t,type:3,isRequired:!0,bitOffset:1184,bitSize:32,byteSize:4,slot:4,name:"1",structure:b},{...t,type:3,isRequired:!0,bitOffset:1216,bitSize:32,byteSize:4,slot:5,name:"2",structure:b},{...t,type:3,isRequired:!0,bitOffset:1248,bitSize:32,byteSize:4,slot:6,name:"3",structure:b},{...t,type:5,isRequired:!0,bitOffset:1280,bitSize:192,byteSize:24,slot:0,name:"4",structure:G},{...t,type:5,isRequired:!0,bitOffset:0,bitSize:1152,byteSize:144,slot:1,name:"5",structure:N},{...t,type:5,isRequired:!0,bitOffset:1472,bitSize:224,byteSize:28,slot:2,name:"retval",structure:Kt}],methods:[]}});Object.assign(Dt,{...s,type:2,name:"posterize",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:a},{...t,type:7,slot:1,name:"Input",structure:a},{...t,type:7,slot:2,name:"Output",structure:a},{...t,type:7,slot:3,name:"Parameters",structure:a}],methods:[xu,Iu],template:Ca}});const vu=[a,q,Y,Z,tt,et,i,w,st,rt,e,r,n,o,at,nt,c,K,j,ot,ct,ut,it,yt,mt,lt,bt,gt,pt,Ot,jt,ft,St,wt,_,At,Ut,zt,M,dt,ht,vt,L,Vt,B,b,R,$,Pt,G,Tt,H,Rt,J,N,E,Et,Ct,C,Kt,Mt,Dt],Eu=Dt,Cu={runtimeSafety:!1,littleEndian:!0},qt=nn();qt.getSpecialExports();qt.recreateStructures(vu,Cu);const Ku=(async()=>{const m=new URL("posterize-5a826dac.wasm",import.meta.url).href;return fetch(m)})();qt.loadModule(Ku);qt.linkVariables(!0);const{constructor:Mu}=Eu,{createPartialOutput:Du,Input:Fu,kernel:It}=Mu;function _u(m,g,l,y,u={},x={}){const I=[];for(const[O]of It.inputImages)I.push(O);const D=[];for(const[O]of It.outputImages)D.push(O);if(Array.isArray(u)){const O=u;u={};for(const[S,v]of I.entries())u[v]=O[S]}const p=new Fu(void 0),Q=[];let F;for(const O of I){let S=u[O];if(S||(I.length===1&&["data","width","height"].every(v=>!!u[v])?S=u:Q.push(O)),p[O]=S,F){if(S.colorSpace!==F)throw new Error(`Input images must all use the same color space: ${F}`)}else F=S.colorSpace}if(Q.length>0)throw new Error(`Missing input image${Q.length>1?"s":""}: ${Q.join(", ")}`);const xt=Du(m,g,l,y,p,x),Rs=O=>{const S={};for(const v of D){const{data:{typedArray:W},width:ks,height:Ja}=O[v];let X;if(typeof ImageData=="function"){const Na=new Uint8ClampedArray(W.buffer,W.byteOffset,W.byteLength);X=new ImageData(Na,ks,y,{colorSpace:F})}else X={data:W,width:ks,height:Ja};if(D.length===1)return X;S[v]=X}return S};return xt[Symbol.toStringTag]==="Promise"?xt.then(Rs):Rs(xt)}function $u(){const m={};for(let[g,l]of It){if(g==="parameters"){const y={};for(const[u,x]of l){const I=y[u]={};for(let[D,p]of x)typeof p=="object"?p=p.string??p.valueOf():typeof p=="function"&&(p=Lu(p.name)),I[D]=p}l=y}else typeof l=="object"&&(l=l.string??l.valueOf());m[g]=l}return m}function Lu(m){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[m]}onmessage=async m=>{if(!Array.isArray(m.data))return;const[g,l,...y]=m.data;try{const[u,x]=await Bu(g,y);postMessage([g,l,u],{transfer:x})}catch(u){postMessage(["error",l,u])}};async function Bu(m,g){switch(m){case"getKernelInfo":return[$u(...g)];case"createPartialImageData":const y=await _u(...g),u=[];if("data"in y&&"width"in y&&"height"in y)u.push(y.data.buffer);else for(const x of Object.entries(y))u.push(y.data.buffer);return[y,u];default:throw new Error(`Unknown function: ${m}`)}}postMessage("ready");
