import{u as Ce,a as Ke,b as Me,c as De,d as Fe,e as Te,f as $e,g as _e,h as Le,i as Be,j as Ge,k as He,l as Je,m as Ne,n as Qe,o as We,p as Xe,q as Ye}from"./index-67c7daa1.js";Ce();He();Je();Ke();Me();Ne();Qe();We();De();Fe();Te();$e();Ye();Xe();_e();Le();Be();const e={constructor:null,typedArray:null,type:0,name:void 0,byteSize:0,align:0,isConst:!1,isTuple:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null}},t={type:0,isRequired:!1},s={},g={},K={},M={},D={},F={},n={},l={},T={},$={},_={},L={},A={},B={},G={},j={},H={},J={},st={},P={},N={},V={},c={},p={},U={},C={},rt={},Q={},R={},W={},k={},X={},q={},I={},z={},nt={},at={},h={},it={},ot={},ct={},Ut={},ut={},Pt={},mt={},Vt={},yt={},Rt={},bt={},kt={},lt={},qt={},It={},pt={},vt={},Y={},Et={},xt={},gt={},Ct={},ft={},Kt={},Mt={},Dt={},Ft={},Tt={},$t={},_t={},Lt={},Bt={},Gt={},Ht={},Jt={},Nt={},Qt={},Wt={},Xt={},Yt={},Ot={},Zt={},te={},St={},ee={},zt={},se={},re={},ne={},ae={},ie={},oe={},ce={},ht={},ue={},me={},ye={},be={},le={},pe={},ge={},fe={},Oe={},Se={},ze={},he={},je={},de={},we={},Ae={},Ue={},Pe={},Ve={},Re={},ke={},qe={},Ze=new Uint8Array,ts=new Uint8Array,es=new Uint8Array([1]),ss=new Uint8Array,rs=new Uint8Array([10]),ns=new Uint8Array,as=new Uint8Array([5]),is=new Uint8Array([200,6,0,1]),os=new Uint8Array([115,105,122,101,32,111,102,32,116,104,101,32,115,116,105,116,99,104,105,110,103,0]),cs=new Uint8Array,us=new Uint8Array,ms=new Uint8Array([4]),ys=new Uint8Array,bs=new Uint8Array,ls=new Uint8Array([252,4,0,1]),ps=new Uint8Array([110,101,116,46,103,104,111,115,116,114,97,100,105,111,46,112,98,0]),gs=new Uint8Array([25,5,0,1]),fs=new Uint8Array([103,104,111,115,116,82,97,100,105,111,46,110,101,116,0]),Os=new Uint8Array,Ss=new Uint8Array([1]),zs=new Uint8Array([57,5,0,1]),hs=new Uint8Array([67,114,111,115,115,45,115,116,105,116,99,104,32,101,102,102,101,99,116,0]),js=new Uint8Array,ds=new Uint8Array,ws=new Uint8Array,As=new Uint8Array([0]),Us=new Uint8Array([1]),Ie=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ps=new Uint8Array,Vs=new Uint8Array,Rs=new Uint8Array,ks=new Uint8Array,qs=new Uint8Array([4]),jt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ve=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Is=new Uint8Array,vs=new Uint8Array,Es=new Uint8Array,xs=new Uint8Array,Cs=new Uint8Array([4]),dt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ks=new Uint8Array([5,0,0,0]),Ms=new Uint8Array([27,0]),Ds=new Uint8Array([27,0]),Fs=new Uint8Array,Ts=new Uint8Array,$s=new Uint8Array,_s=new Uint8Array;Object.assign(Ut,{slots:{0:ut,1:mt,2:yt,3:bt,4:lt}});Object.assign(ut,{structure:s,memory:{array:Ze},const:!0,slots:{0:Pt}});Object.assign(Pt,{structure:A});Object.assign(mt,{structure:n,memory:{array:ts},const:!0,slots:{0:Vt}});Object.assign(Vt,{structure:l,memory:{array:es},const:!0});Object.assign(yt,{structure:n,memory:{array:ss},const:!0,slots:{0:Rt}});Object.assign(Rt,{structure:l,memory:{array:rs},const:!0});Object.assign(bt,{structure:n,memory:{array:ns},const:!0,slots:{0:kt}});Object.assign(kt,{structure:l,memory:{array:as},const:!0});Object.assign(lt,{structure:L,memory:{array:is},const:!0,slots:{0:qt}});Object.assign(qt,{structure:_,memory:{array:os},reloc:16778952});Object.assign(It,{slots:{0:pt}});Object.assign(pt,{structure:B,memory:{array:cs},const:!0,slots:{0:ut,1:mt,2:yt,3:bt,4:lt}});Object.assign(vt,{slots:{0:Y}});Object.assign(Y,{structure:n,memory:{array:us},const:!0,slots:{0:Et}});Object.assign(Et,{structure:l,memory:{array:ms},const:!0});Object.assign(xt,{slots:{0:gt}});Object.assign(gt,{structure:j,memory:{array:ys},const:!0,slots:{0:Y}});Object.assign(Ct,{slots:{0:ft}});Object.assign(ft,{structure:j,memory:{array:bs},const:!0,slots:{0:Y}});Object.assign(Kt,{slots:{0:Mt,1:Ft,2:$t,3:Lt,4:Gt,5:Ht,6:Jt}});Object.assign(Mt,{structure:M,memory:{array:ls},const:!0,slots:{0:Dt}});Object.assign(Dt,{structure:K,memory:{array:ps},reloc:16778492});Object.assign(Ft,{structure:F,memory:{array:gs},const:!0,slots:{0:Tt}});Object.assign(Tt,{structure:D,memory:{array:fs},reloc:16778521});Object.assign($t,{structure:n,memory:{array:Os},const:!0,slots:{0:_t}});Object.assign(_t,{structure:l,memory:{array:Ss},const:!0});Object.assign(Lt,{structure:$,memory:{array:zs},const:!0,slots:{0:Bt}});Object.assign(Bt,{structure:T,memory:{array:hs},reloc:16778553});Object.assign(Gt,{structure:G,memory:{array:js},const:!0,slots:{0:pt}});Object.assign(Ht,{structure:H,memory:{array:ds},const:!0,slots:{0:gt}});Object.assign(Jt,{structure:J,memory:{array:ws},const:!0,slots:{0:ft}});Object.assign(Nt,{slots:{0:Qt,1:Wt}});Object.assign(Qt,{structure:p,memory:{array:As},const:!0});Object.assign(Wt,{structure:p,memory:{array:Us},const:!0});Object.assign(Xt,{memory:{array:Ie},slots:{0:Yt}});Object.assign(Yt,{structure:V,memory:{array:Ie,offset:0,length:8},slots:{0:Ot}});Object.assign(Ot,{structure:N,memory:{array:Ps},reloc:0});Object.assign(Zt,{slots:{0:te,1:ee,2:se}});Object.assign(te,{structure:s,memory:{array:Vs},const:!0,slots:{0:St}});Object.assign(St,{structure:P});Object.assign(ee,{structure:s,memory:{array:Rs},const:!0,slots:{0:zt}});Object.assign(zt,{structure:rt});Object.assign(se,{structure:n,memory:{array:ks},const:!0,slots:{0:re}});Object.assign(re,{structure:l,memory:{array:qs},const:!0});Object.assign(ne,{memory:{array:jt},slots:{0:ae}});Object.assign(ae,{structure:Q,memory:{array:jt},slots:{0:ie}});Object.assign(ie,{structure:V,memory:{array:jt,offset:0,length:8},slots:{0:Ot}});Object.assign(oe,{memory:{array:ve},slots:{0:ce}});Object.assign(ce,{structure:k,memory:{array:ve,offset:0,length:8},slots:{0:ht}});Object.assign(ht,{structure:W,memory:{array:Is},reloc:0});Object.assign(ue,{slots:{0:me,1:ye,2:be}});Object.assign(me,{structure:s,memory:{array:vs},const:!0,slots:{0:St}});Object.assign(ye,{structure:s,memory:{array:Es},const:!0,slots:{0:zt}});Object.assign(be,{structure:n,memory:{array:xs},const:!0,slots:{0:le}});Object.assign(le,{structure:l,memory:{array:Cs},const:!0});Object.assign(pe,{memory:{array:dt},slots:{0:ge}});Object.assign(ge,{structure:X,memory:{array:dt},slots:{0:fe}});Object.assign(fe,{structure:k,memory:{array:dt,offset:0,length:8},slots:{0:ht}});Object.assign(Oe,{memory:{array:Ks}});Object.assign(Se,{slots:{0:ze}});Object.assign(ze,{structure:z,memory:{array:Ms},const:!0});Object.assign(he,{slots:{0:je}});Object.assign(je,{structure:h,memory:{array:Ds},const:!0});Object.assign(de,{slots:{0:we,1:Ue,2:Ve,3:ke}});Object.assign(we,{structure:s,memory:{array:Fs},const:!0,slots:{0:Ae}});Object.assign(Ae,{structure:st});Object.assign(Ue,{structure:s,memory:{array:Ts},const:!0,slots:{0:Pe}});Object.assign(Pe,{structure:R});Object.assign(Ve,{structure:s,memory:{array:$s},const:!0,slots:{0:Re}});Object.assign(Re,{structure:q});Object.assign(ke,{structure:s,memory:{array:_s},const:!0,slots:{0:qe}});Object.assign(qe,{structure:I});const Ls={argStruct:at,thunkId:2,name:"createOutput"},Bs={argStruct:ot,thunkId:3,name:"createPartialOutput"};Object.assign(s,{...e,name:"type",align:1,instance:{members:[{...t,type:6,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:s}],methods:[]}});Object.assign(g,{...e,name:"u8",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(K,{...e,type:1,name:"[17:0]u8",length:17,byteSize:18,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(M,{...e,type:13,name:"*const [17:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:K}],methods:[]}});Object.assign(D,{...e,type:1,name:"[14:0]u8",length:14,byteSize:15,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(F,{...e,type:13,name:"*const [14:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:D}],methods:[]}});Object.assign(n,{...e,name:"comptime_int",align:1,instance:{members:[{...t,type:7,bitOffset:0,bitSize:0,byteSize:0,slot:0,structure:n}],methods:[]}});Object.assign(l,{...e,name:"i8",byteSize:1,align:1,instance:{members:[{...t,type:2,bitOffset:0,bitSize:8,byteSize:1,structure:l}],methods:[]}});Object.assign(T,{...e,type:1,name:"[19:0]u8",length:19,byteSize:20,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign($,{...e,type:13,name:"*const [19:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:T}],methods:[]}});Object.assign(_,{...e,type:1,name:"[21:0]u8",length:21,byteSize:22,align:1,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(L,{...e,type:13,name:"*const [21:0]u8",byteSize:4,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,slot:0,structure:_}],methods:[]}});Object.assign(A,{...e,name:"i32",byteSize:4,align:4,instance:{members:[{...t,type:2,bitOffset:0,bitSize:32,byteSize:4,structure:A}],methods:[]}});Object.assign(B,{...e,type:2,name:"Struct3932231439",align:1,instance:{members:[{...t,type:7,slot:0,name:"type",structure:s},{...t,type:7,slot:1,name:"minValue",structure:n},{...t,type:7,slot:2,name:"maxValue",structure:n},{...t,type:7,slot:3,name:"defaultValue",structure:n},{...t,type:7,slot:4,name:"description",structure:L}],methods:[],template:Ut}});Object.assign(G,{...e,type:2,name:"Struct577318470",align:1,instance:{members:[{...t,type:7,slot:0,name:"size",structure:B}],methods:[],template:It}});Object.assign(j,{...e,type:2,name:"Struct3832472641",align:1,instance:{members:[{...t,type:7,slot:0,name:"channels",structure:n}],methods:[],template:vt}});Object.assign(H,{...e,type:2,name:"Struct2242867897",align:1,instance:{members:[{...t,type:7,slot:0,name:"src",structure:j}],methods:[],template:xt}});Object.assign(J,{...e,type:2,name:"Struct319638128",align:1,instance:{members:[{...t,type:7,slot:0,name:"outputPx",structure:j}],methods:[],template:Ct}});Object.assign(st,{...e,type:2,name:"cross-stitch.kernel",align:1,static:{members:[{...t,type:7,slot:0,name:"namespace",structure:M},{...t,type:7,slot:1,name:"vendor",structure:F},{...t,type:7,slot:2,name:"version",structure:n},{...t,type:7,slot:3,name:"description",structure:$},{...t,type:7,slot:4,name:"parameters",structure:G},{...t,type:7,slot:5,name:"inputImages",structure:H},{...t,type:7,slot:6,name:"outputImages",structure:J}],methods:[],template:Kt}});Object.assign(P,{...e,type:15,name:"@Vector(4, u8)",length:4,byteSize:4,align:4,instance:{members:[{...t,type:3,bitSize:8,byteSize:1,structure:g}],methods:[]}});Object.assign(N,{...e,type:14,name:"[_]const @Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(V,{...e,type:13,name:"[]const @Vector(4, u8)",byteSize:8,align:4,isConst:!0,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:N}],methods:[]}});Object.assign(c,{...e,name:"u32",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[]}});Object.assign(p,{...e,type:11,name:"cross-stitch.ColorSpace",byteSize:1,align:1,instance:{members:[{...t,type:3,bitOffset:0,bitSize:1,byteSize:1,structure:p}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"srgb",structure:p},{...t,type:7,slot:1,name:"display-p3",structure:p}],methods:[],template:Nt}});Object.assign(U,{...e,name:"usize",byteSize:4,align:4,instance:{members:[{...t,type:3,bitOffset:0,bitSize:32,byteSize:4,structure:U}],methods:[]}});Object.assign(C,{...e,name:"f32",byteSize:4,align:4,instance:{members:[{...t,type:4,bitOffset:0,bitSize:32,byteSize:4,structure:C}],methods:[]}});Object.assign(rt,{...e,type:15,name:"@Vector(4, f32)",length:4,byteSize:16,align:16,instance:{members:[{...t,type:4,bitSize:32,byteSize:4,structure:C}],methods:[]}});Object.assign(Q,{...e,type:2,name:"cross-stitch.Image(u8,4,false)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:V},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:Xt},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:n}],methods:[],template:Zt}});Object.assign(R,{...e,type:2,name:"cross-stitch.KernelInput(u8,cross-stitch.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:Q}],methods:[],template:ne}});Object.assign(W,{...e,type:14,name:"[_]@Vector(4, u8)",byteSize:4,align:4,instance:{members:[{...t,type:5,bitSize:32,byteSize:4,structure:P}],methods:[]}});Object.assign(k,{...e,type:13,name:"[]@Vector(4, u8)",byteSize:8,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitSize:64,byteSize:8,slot:0,structure:W}],methods:[]}});Object.assign(X,{...e,type:2,name:"cross-stitch.Image(u8,4,true)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,isRequired:!0,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:k},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:c},{...t,type:3,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:p},{...t,type:3,bitOffset:128,bitSize:32,byteSize:4,slot:4,name:"offset",structure:U}],methods:[],template:oe},static:{members:[{...t,type:7,slot:0,name:"Pixel",structure:s},{...t,type:7,slot:1,name:"FPixel",structure:s},{...t,type:7,slot:2,name:"channels",structure:n}],methods:[],template:ue}});Object.assign(q,{...e,type:2,name:"cross-stitch.KernelOutput(u8,cross-stitch.kernel)",byteSize:24,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"outputPx",structure:X}],methods:[],template:pe}});Object.assign(I,{...e,type:2,name:"cross-stitch.KernelParameters(cross-stitch.kernel)",byteSize:4,align:4,instance:{members:[{...t,type:2,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"size",structure:A}],methods:[],template:Oe}});Object.assign(z,{...e,type:10,name:"ErrorSet1513772705",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:z}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:z}],methods:[],template:Se}});Object.assign(nt,{...e,type:9,name:"ErrorSet1513772705!cross-stitch.KernelOutput(u8,cross-stitch.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:q},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:z}],methods:[]}});Object.assign(at,{...e,type:5,name:"createOutput",byteSize:64,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:c},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:c},{...t,type:5,isRequired:!0,bitOffset:64,bitSize:192,byteSize:24,slot:0,name:"2",structure:R},{...t,type:5,isRequired:!0,bitOffset:256,bitSize:32,byteSize:4,slot:1,name:"3",structure:I},{...t,type:5,isRequired:!0,bitOffset:288,bitSize:224,byteSize:28,slot:2,name:"retval",structure:nt}],methods:[]}});Object.assign(h,{...e,type:10,name:"ErrorSet2379280976",byteSize:2,align:2,instance:{members:[{...t,type:3,bitOffset:0,bitSize:16,byteSize:2,structure:h}],methods:[]},static:{members:[{...t,type:7,slot:0,name:"OutOfMemory",structure:h}],methods:[],template:he}});Object.assign(it,{...e,type:9,name:"ErrorSet2379280976!cross-stitch.KernelOutput(u8,cross-stitch.kernel)",byteSize:28,align:4,hasPointer:!0,instance:{members:[{...t,type:5,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:q},{...t,type:3,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:h}],methods:[]}});Object.assign(ot,{...e,type:5,name:"createPartialOutput",byteSize:72,align:4,hasPointer:!0,instance:{members:[{...t,type:3,isRequired:!0,bitOffset:0,bitSize:32,byteSize:4,slot:3,name:"0",structure:c},{...t,type:3,isRequired:!0,bitOffset:32,bitSize:32,byteSize:4,slot:4,name:"1",structure:c},{...t,type:3,isRequired:!0,bitOffset:64,bitSize:32,byteSize:4,slot:5,name:"2",structure:c},{...t,type:3,isRequired:!0,bitOffset:96,bitSize:32,byteSize:4,slot:6,name:"3",structure:c},{...t,type:5,isRequired:!0,bitOffset:128,bitSize:192,byteSize:24,slot:0,name:"4",structure:R},{...t,type:5,isRequired:!0,bitOffset:320,bitSize:32,byteSize:4,slot:1,name:"5",structure:I},{...t,type:5,isRequired:!0,bitOffset:352,bitSize:224,byteSize:28,slot:2,name:"retval",structure:it}],methods:[]}});Object.assign(ct,{...e,type:2,name:"cross-stitch",align:1,static:{members:[{...t,type:7,slot:0,name:"kernel",structure:s},{...t,type:7,slot:1,name:"Input",structure:s},{...t,type:7,slot:2,name:"Output",structure:s},{...t,type:7,slot:3,name:"Parameters",structure:s}],methods:[Ls,Bs],template:de}});const Gs=[s,g,K,M,D,F,n,l,T,$,_,L,A,B,G,j,H,J,st,P,N,V,c,p,U,C,rt,Q,R,W,k,X,q,I,z,nt,at,h,it,ot,ct],Hs=ct,Js={runtimeSafety:!1,littleEndian:!0},Z=Ge();Z.getSpecialExports();Z.recreateStructures(Gs,Js);const Ns=(async()=>{const i=new URL("cross-stitch-5b5518f1.wasm",import.meta.url).href;return fetch(i)})();Z.loadModule(Ns);Z.linkVariables(!0);const{constructor:Qs}=Hs,{createPartialOutput:Ws,Input:Xs,kernel:et}=Qs;function Ys(i,u,o,a,r={},f={}){const O=[];for(const[y]of et.inputImages)O.push(y);const d=[];for(const[y]of et.outputImages)d.push(y);if(Array.isArray(r)){const y=r;r={};for(const[b,S]of O.entries())r[S]=y[b]}const m=new Xs(void 0),v=[];let w;for(const y of O){let b=r[y];if(b||(O.length===1&&["data","width","height"].every(S=>!!r[S])?b=r:v.push(y)),m[y]=b,w){if(b.colorSpace!==w)throw new Error(`Input images must all use the same color space: ${w}`)}else w=b.colorSpace}if(v.length>0)throw new Error(`Missing input image${v.length>1?"s":""}: ${v.join(", ")}`);const tt=Ws(i,u,o,a,m,f),wt=y=>{const b={};for(const S of d){const{data:{typedArray:E},width:At,height:Ee}=y[S];let x;if(typeof ImageData=="function"){const xe=new Uint8ClampedArray(E.buffer,E.byteOffset,E.byteLength);x=new ImageData(xe,At,a,{colorSpace:w})}else x={data:E,width:At,height:Ee};if(d.length===1)return x;b[S]=x}return b};return tt[Symbol.toStringTag]==="Promise"?tt.then(wt):wt(tt)}function Zs(){const i={};for(let[u,o]of et){if(u==="parameters"){const a={};for(const[r,f]of o){const O=a[r]={};for(let[d,m]of f)typeof m=="object"?m=m.string??m.valueOf():typeof m=="function"&&(m=tr(m.name)),O[d]=m}o=a}else typeof o=="object"&&(o=o.string??o.valueOf());i[u]=o}return i}function tr(i){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[i]}onmessage=async i=>{if(!Array.isArray(i.data))return;const[u,o,...a]=i.data;try{const[r,f]=await er(u,a);postMessage([u,o,r],{transfer:f})}catch(r){postMessage(["error",o,r])}};async function er(i,u){switch(i){case"getKernelInfo":return[Zs(...u)];case"createPartialImageData":const a=await Ys(...u),r=[];if("data"in a&&"width"in a&&"height"in a)r.push(a.data.buffer);else for(const f of Object.entries(a))r.push(a.data.buffer);return[a,r];default:throw new Error(`Unknown function: ${i}`)}}postMessage("ready");
