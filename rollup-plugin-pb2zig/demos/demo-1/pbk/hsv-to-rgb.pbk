<languageVersion: 1.0;>
kernel rgbToHSV
<
	namespace: "net.onthewings.filters";
	vendor: "Andy Li";
	version: 1;
	description: "Convert HSV input to RGB.";
>
{
	input image4 src;
	output pixel4 target;

	void evaluatePixel()
	{
		pixel4 ori = sampleNearest(src,outCoord());
        float h = ori[0]*360.0;
        float s = ori[1];
        float v = ori[2];
        
        //Modified from mojocolor http://code.google.com/p/mojocolors/		
		float i, f, p, q, t;
		float red = 0.0;
		float green = 0.0;
		float blue = 0.0;

		if( s == 0.0 ) {
			// achromatic (grey)
			red = green = blue = v;
		} else {
			if(h > 360.0) {
				h = h - 360.0;
			}
			if(h < 0.0) {
				h = 360.0 + h;
			}
			h = h / 60.0;			
			// sector 0 to 5
			i = floor(h);
			f = h - i;			
			// factorial part of h
			p = v * ( 1.0 - s );
			q = v * ( 1.0 - s * f );
			t = v * ( 1.0 - s * ( 1.0 - f ) );
			
			if (i == 0.0){
				red = v;
				green = t;
				blue = p;
			} else if (i == 1.0){
				red = q;
				green = v;
				blue = p;
			} else if (i == 2.0){
				red = p;
				green = v;
				blue = t;
			} else if (i == 3.0){
				red = p;
				green = q;
				blue = v;
			} else if (i == 4.0){
				red = t;
				green = p;
				blue = v;
			} else {
				// case 5:
				red = v;
				green = p;
				blue = q;
			}
        }
        target = float4(red,green,blue,ori.a);
	}
}
