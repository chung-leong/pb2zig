import{u as St,a as zt,b as _t,d as Vt,c as Ot,e as wt,f as Rt,g as qt,h as At,i as Ut,j as jt,k as xt,l as Pt,n as Ct,p as It,m as kt,o as vt,q as Et,r as Kt}from"./index-cfb20c86.js";St();zt();_t();Vt();Ot();wt();Rt();qt();At();Ut();jt();xt();Pt();Ct();It();kt();vt();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},g={},pe={},ye={},F={},fe={},be={},D={},y={},d={},de={},he={},T={},q={},u={},r={},s={},ge={},M={},Se={},$={},ze={},B={},_e={},L={},Ve={},G={},Oe={},H={},we={},J={},Re={},N={},qe={},Q={},O={},h={},Ae={},W={},Ue={},X={},je={},Y={},xe={},Z={},Pe={},ee={},Ce={},te={},j={},_={},Ie={},se={},ke={},re={},ve={},me={},Ee={},ae={},Ke={},oe={},ie={},x={},V={},Fe={},ce={},De={},ne={},We={},w={},Te={},Me={},p={},$e={},A={},U={},Be={},le={},P={},Le={},Ge={},ue={},C={},I={},Xe={},Ye={},Ze={},et={},tt={},st={},rt={};Object.assign(g,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:5});Object.assign(pe,{...t,type:1,name:"[16:0]u8",length:16,byteSize:17,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:4});Object.assign(ye,{...t,type:11,name:"*const [16:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:pe}],methods:[],template:null},slot:3});Object.assign(F,{...t,type:11,name:"**const [16:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ye}],methods:[],template:null},slot:2});Object.assign(fe,{...t,type:1,name:"[8:0]u8",length:8,byteSize:9,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:8});Object.assign(be,{...t,type:11,name:"*const [8:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:fe}],methods:[],template:null},slot:7});Object.assign(D,{...t,type:11,name:"**const [8:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:be}],methods:[],template:null},slot:6});Object.assign(y,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:y}],methods:[],template:null},slot:10});Object.assign(d,{...t,type:11,name:"*i32",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:y}],methods:[],template:null},slot:9});Object.assign(de,{...t,type:1,name:"[37:0]u8",length:37,byteSize:38,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:13});Object.assign(he,{...t,type:11,name:"*const [37:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:de}],methods:[],template:null},slot:12});Object.assign(T,{...t,type:11,name:"**const [37:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:he}],methods:[],template:null},slot:11});Object.assign(q,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:53});Object.assign(u,{...t,type:13,name:"@Vector(2, f32)",length:2,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:33});Object.assign(r,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:r}],methods:[],template:null},slot:88});Object.assign(s,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:r}],methods:[],template:null},slot:87});const Ft=new Uint8Array([]),Dt=new Uint8Array([184,30,16,0]),ct=new Uint8Array([0,0,0,0,0,0,36,192]),Tt=new Uint8Array([184,30,16,0]);Object.assign(ge,{...t,type:2,name:"struct{comptime comptime_float = -10, comptime comptime_float = -10}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Ft},slots:{0:{structure:s,memory:{array:Dt},slots:{0:{structure:r,memory:{array:ct},address:1056440}}},1:{structure:s,memory:{array:Tt},slots:{0:{structure:r,memory:{array:ct},address:1056440}}}}}},slot:57});Object.assign(M,{...t,type:11,name:"*const struct{comptime comptime_float = -10, comptime comptime_float = -10}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ge}],methods:[],template:null},slot:56});const Mt=new Uint8Array([]),$t=new Uint8Array([88,30,16,0]),Je=new Uint8Array([0,0,0,0,0,0,36,64]),Bt=new Uint8Array([88,30,16,0]);Object.assign(Se,{...t,type:2,name:"struct{comptime comptime_float = 10, comptime comptime_float = 10}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Mt},slots:{0:{structure:s,memory:{array:$t},slots:{0:{structure:r,memory:{array:Je},address:1056344}}},1:{structure:s,memory:{array:Bt},slots:{0:{structure:r,memory:{array:Je},address:1056344}}}}}},slot:59});Object.assign($,{...t,type:11,name:"*const struct{comptime comptime_float = 10, comptime comptime_float = 10}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Se}],methods:[],template:null},slot:58});const Lt=new Uint8Array([]),Gt=new Uint8Array([128,30,16,0]),Ne=new Uint8Array([0,0,0,0,0,0,240,63]),Ht=new Uint8Array([176,30,16,0]),Jt=new Uint8Array([215,163,112,61,10,215,227,63]);Object.assign(ze,{...t,type:2,name:"struct{comptime comptime_float = 1, comptime comptime_float = 0.62}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Lt},slots:{0:{structure:s,memory:{array:Gt},slots:{0:{structure:r,memory:{array:Ne},address:1056384}}},1:{structure:s,memory:{array:Ht},slots:{0:{structure:r,memory:{array:Jt},address:1056432}}}}}},slot:61});Object.assign(B,{...t,type:11,name:"*const struct{comptime comptime_float = 1, comptime comptime_float = 0.62}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ze}],methods:[],template:null},slot:60});const Nt=new Uint8Array([]),Qt=new Uint8Array([170,170,170,170]),m=new Uint8Array([]),Wt=new Uint8Array([170,170,170,170]),Xt=new Uint8Array([170,170,170,170]);Object.assign(_e,{...t,type:2,name:"struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = -10, comptime comptime_float = -10} = .{-10, -10}, comptime maxValue: struct{comptime comptime_float = 10, comptime comptime_float = 10} = .{10, 10}, comptime defaultValue: struct{comptime comptime_float = 1, comptime comptime_float = 0.62} = .{1, 0.62}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:M},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:$},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:B}],methods:[],template:{memory:{array:Nt},slots:{0:{structure:M,memory:{array:Qt},slots:{0:{structure:ge,memory:{array:m},address:-1431655766}}},1:{structure:$,memory:{array:Wt},slots:{0:{structure:Se,memory:{array:m},address:-1431655766}}},2:{structure:B,memory:{array:Xt},slots:{0:{structure:ze,memory:{array:m},address:-1431655766}}}}}},slot:39});Object.assign(L,{...t,type:11,name:"*const struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = -10, comptime comptime_float = -10} = .{-10, -10}, comptime maxValue: struct{comptime comptime_float = 10, comptime comptime_float = 10} = .{10, 10}, comptime defaultValue: struct{comptime comptime_float = 1, comptime comptime_float = 0.62} = .{1, 0.62}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:_e}],methods:[],template:null},slot:38});const Yt=new Uint8Array([]),Zt=new Uint8Array([168,30,16,0]),nt=new Uint8Array([0,0,0,0,0,64,127,192]),es=new Uint8Array([168,30,16,0]);Object.assign(Ve,{...t,type:2,name:"struct{comptime comptime_float = -500, comptime comptime_float = -500}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Yt},slots:{0:{structure:s,memory:{array:Zt},slots:{0:{structure:r,memory:{array:nt},address:1056424}}},1:{structure:s,memory:{array:es},slots:{0:{structure:r,memory:{array:nt},address:1056424}}}}}},slot:63});Object.assign(G,{...t,type:11,name:"*const struct{comptime comptime_float = -500, comptime comptime_float = -500}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ve}],methods:[],template:null},slot:62});const ts=new Uint8Array([]),ss=new Uint8Array([160,30,16,0]),lt=new Uint8Array([0,0,0,0,0,64,127,64]),rs=new Uint8Array([160,30,16,0]);Object.assign(Oe,{...t,type:2,name:"struct{comptime comptime_float = 500, comptime comptime_float = 500}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:ts},slots:{0:{structure:s,memory:{array:ss},slots:{0:{structure:r,memory:{array:lt},address:1056416}}},1:{structure:s,memory:{array:rs},slots:{0:{structure:r,memory:{array:lt},address:1056416}}}}}},slot:65});Object.assign(H,{...t,type:11,name:"*const struct{comptime comptime_float = 500, comptime comptime_float = 500}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Oe}],methods:[],template:null},slot:64});const ms=new Uint8Array([]),as=new Uint8Array([152,30,16,0]),os=new Uint8Array([0,0,0,0,0,128,85,192]),is=new Uint8Array([144,30,16,0]),cs=new Uint8Array([0,0,0,0,0,0,54,64]);Object.assign(we,{...t,type:2,name:"struct{comptime comptime_float = -86, comptime comptime_float = 22}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:ms},slots:{0:{structure:s,memory:{array:as},slots:{0:{structure:r,memory:{array:os},address:1056408}}},1:{structure:s,memory:{array:is},slots:{0:{structure:r,memory:{array:cs},address:1056400}}}}}},slot:67});Object.assign(J,{...t,type:11,name:"*const struct{comptime comptime_float = -86, comptime comptime_float = 22}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:we}],methods:[],template:null},slot:66});const ns=new Uint8Array([]),ls=new Uint8Array([170,170,170,170]),us=new Uint8Array([170,170,170,170]),ps=new Uint8Array([170,170,170,170]);Object.assign(Re,{...t,type:2,name:"struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = -500, comptime comptime_float = -500} = .{-500, -500}, comptime maxValue: struct{comptime comptime_float = 500, comptime comptime_float = 500} = .{500, 500}, comptime defaultValue: struct{comptime comptime_float = -86, comptime comptime_float = 22} = .{-86, 22}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:G},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:H},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:J}],methods:[],template:{memory:{array:ns},slots:{0:{structure:G,memory:{array:ls},slots:{0:{structure:Ve,memory:{array:m},address:-1431655766}}},1:{structure:H,memory:{array:us},slots:{0:{structure:Oe,memory:{array:m},address:-1431655766}}},2:{structure:J,memory:{array:ps},slots:{0:{structure:we,memory:{array:m},address:-1431655766}}}}}},slot:41});Object.assign(N,{...t,type:11,name:"*const struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = -500, comptime comptime_float = -500} = .{-500, -500}, comptime maxValue: struct{comptime comptime_float = 500, comptime comptime_float = 500} = .{500, 500}, comptime defaultValue: struct{comptime comptime_float = -86, comptime comptime_float = 22} = .{-86, 22}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Re}],methods:[],template:null},slot:40});const ys=new Uint8Array([]),fs=new Uint8Array([136,30,16,0]),ut=new Uint8Array([0,0,0,0,0,0,240,191]),bs=new Uint8Array([136,30,16,0]);Object.assign(qe,{...t,type:2,name:"struct{comptime comptime_float = -1, comptime comptime_float = -1}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:ys},slots:{0:{structure:s,memory:{array:fs},slots:{0:{structure:r,memory:{array:ut},address:1056392}}},1:{structure:s,memory:{array:bs},slots:{0:{structure:r,memory:{array:ut},address:1056392}}}}}},slot:69});Object.assign(Q,{...t,type:11,name:"*const struct{comptime comptime_float = -1, comptime comptime_float = -1}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:qe}],methods:[],template:null},slot:68});const ds=new Uint8Array([]),hs=new Uint8Array([128,30,16,0]),gs=new Uint8Array([128,30,16,0]);Object.assign(O,{...t,type:2,name:"struct{comptime comptime_float = 1, comptime comptime_float = 1}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:ds},slots:{0:{structure:s,memory:{array:hs},slots:{0:{structure:r,memory:{array:Ne},address:1056384}}},1:{structure:s,memory:{array:gs},slots:{0:{structure:r,memory:{array:Ne},address:1056384}}}}}},slot:71});Object.assign(h,{...t,type:11,name:"*const struct{comptime comptime_float = 1, comptime comptime_float = 1}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:O}],methods:[],template:null},slot:70});const Ss=new Uint8Array([]),zs=new Uint8Array([120,30,16,0]),pt=new Uint8Array([123,20,174,71,225,122,148,191]),_s=new Uint8Array([120,30,16,0]);Object.assign(Ae,{...t,type:2,name:"struct{comptime comptime_float = -0.02, comptime comptime_float = -0.02}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Ss},slots:{0:{structure:s,memory:{array:zs},slots:{0:{structure:r,memory:{array:pt},address:1056376}}},1:{structure:s,memory:{array:_s},slots:{0:{structure:r,memory:{array:pt},address:1056376}}}}}},slot:73});Object.assign(W,{...t,type:11,name:"*const struct{comptime comptime_float = -0.02, comptime comptime_float = -0.02}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ae}],methods:[],template:null},slot:72});const Vs=new Uint8Array([]),Os=new Uint8Array([170,170,170,170]),ws=new Uint8Array([170,170,170,170]),Rs=new Uint8Array([170,170,170,170]);Object.assign(Ue,{...t,type:2,name:"struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = -1, comptime comptime_float = -1} = .{-1, -1}, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1}, comptime defaultValue: struct{comptime comptime_float = -0.02, comptime comptime_float = -0.02} = .{-0.02, -0.02}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:Q},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:h},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:W}],methods:[],template:{memory:{array:Vs},slots:{0:{structure:Q,memory:{array:Os},slots:{0:{structure:qe,memory:{array:m},address:-1431655766}}},1:{structure:h,memory:{array:ws},slots:{0:{structure:O,memory:{array:m},address:-1431655766}}},2:{structure:W,memory:{array:Rs},slots:{0:{structure:Ae,memory:{array:m},address:-1431655766}}}}}},slot:43});Object.assign(X,{...t,type:11,name:"*const struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = -1, comptime comptime_float = -1} = .{-1, -1}, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1}, comptime defaultValue: struct{comptime comptime_float = -0.02, comptime comptime_float = -0.02} = .{-0.02, -0.02}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ue}],methods:[],template:null},slot:42});const qs=new Uint8Array([]),As=new Uint8Array([112,30,16,0]),yt=new Uint8Array([0,0,0,0,0,0,89,192]),Us=new Uint8Array([112,30,16,0]);Object.assign(je,{...t,type:2,name:"struct{comptime comptime_float = -100, comptime comptime_float = -100}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:qs},slots:{0:{structure:s,memory:{array:As},slots:{0:{structure:r,memory:{array:yt},address:1056368}}},1:{structure:s,memory:{array:Us},slots:{0:{structure:r,memory:{array:yt},address:1056368}}}}}},slot:75});Object.assign(Y,{...t,type:11,name:"*const struct{comptime comptime_float = -100, comptime comptime_float = -100}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:je}],methods:[],template:null},slot:74});const js=new Uint8Array([]),xs=new Uint8Array([104,30,16,0]),ft=new Uint8Array([0,0,0,0,0,0,89,64]),Ps=new Uint8Array([104,30,16,0]);Object.assign(xe,{...t,type:2,name:"struct{comptime comptime_float = 100, comptime comptime_float = 100}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:js},slots:{0:{structure:s,memory:{array:xs},slots:{0:{structure:r,memory:{array:ft},address:1056360}}},1:{structure:s,memory:{array:Ps},slots:{0:{structure:r,memory:{array:ft},address:1056360}}}}}},slot:77});Object.assign(Z,{...t,type:11,name:"*const struct{comptime comptime_float = 100, comptime comptime_float = 100}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:xe}],methods:[],template:null},slot:76});const Cs=new Uint8Array([]),Is=new Uint8Array([96,30,16,0]),ks=new Uint8Array([0,0,0,0,0,0,0,192]),vs=new Uint8Array([88,30,16,0]);Object.assign(Pe,{...t,type:2,name:"struct{comptime comptime_float = -2, comptime comptime_float = 10}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Cs},slots:{0:{structure:s,memory:{array:Is},slots:{0:{structure:r,memory:{array:ks},address:1056352}}},1:{structure:s,memory:{array:vs},slots:{0:{structure:r,memory:{array:Je},address:1056344}}}}}},slot:79});Object.assign(ee,{...t,type:11,name:"*const struct{comptime comptime_float = -2, comptime comptime_float = 10}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Pe}],methods:[],template:null},slot:78});const Es=new Uint8Array([]),Ks=new Uint8Array([170,170,170,170]),Fs=new Uint8Array([170,170,170,170]),Ds=new Uint8Array([170,170,170,170]);Object.assign(Ce,{...t,type:2,name:"struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = -100, comptime comptime_float = -100} = .{-100, -100}, comptime maxValue: struct{comptime comptime_float = 100, comptime comptime_float = 100} = .{100, 100}, comptime defaultValue: struct{comptime comptime_float = -2, comptime comptime_float = 10} = .{-2, 10}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:Y},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:Z},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:ee}],methods:[],template:{memory:{array:Es},slots:{0:{structure:Y,memory:{array:Ks},slots:{0:{structure:je,memory:{array:m},address:-1431655766}}},1:{structure:Z,memory:{array:Fs},slots:{0:{structure:xe,memory:{array:m},address:-1431655766}}},2:{structure:ee,memory:{array:Ds},slots:{0:{structure:Pe,memory:{array:m},address:-1431655766}}}}}},slot:45});Object.assign(te,{...t,type:11,name:"*const struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = -100, comptime comptime_float = -100} = .{-100, -100}, comptime maxValue: struct{comptime comptime_float = 100, comptime comptime_float = 100} = .{100, 100}, comptime defaultValue: struct{comptime comptime_float = -2, comptime comptime_float = 10} = .{-2, 10}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ce}],methods:[],template:null},slot:44});const Ts=new Uint8Array([]),Ms=new Uint8Array([80,30,16,0]),bt=new Uint8Array([0,0,0,0,0,64,143,64]),$s=new Uint8Array([80,30,16,0]);Object.assign(j,{...t,type:2,name:"struct{comptime comptime_float = 1000, comptime comptime_float = 1000}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Ts},slots:{0:{structure:s,memory:{array:Ms},slots:{0:{structure:r,memory:{array:bt},address:1056336}}},1:{structure:s,memory:{array:$s},slots:{0:{structure:r,memory:{array:bt},address:1056336}}}}}},slot:81});Object.assign(_,{...t,type:11,name:"*const struct{comptime comptime_float = 1000, comptime comptime_float = 1000}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:j}],methods:[],template:null},slot:80});const Bs=new Uint8Array([]),Ls=new Uint8Array([72,30,16,0]),Gs=new Uint8Array([0,0,0,0,0,0,119,64]),Hs=new Uint8Array([64,30,16,0]),Js=new Uint8Array([0,0,0,0,0,208,113,64]);Object.assign(Ie,{...t,type:2,name:"struct{comptime comptime_float = 368, comptime comptime_float = 285}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Bs},slots:{0:{structure:s,memory:{array:Ls},slots:{0:{structure:r,memory:{array:Gs},address:1056328}}},1:{structure:s,memory:{array:Hs},slots:{0:{structure:r,memory:{array:Js},address:1056320}}}}}},slot:83});Object.assign(se,{...t,type:11,name:"*const struct{comptime comptime_float = 368, comptime comptime_float = 285}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ie}],methods:[],template:null},slot:82});const Ns=new Uint8Array([]),Qs=new Uint8Array([170,170,170,170]),Ws=new Uint8Array([170,170,170,170]),Xs=new Uint8Array([170,170,170,170]);Object.assign(ke,{...t,type:2,name:"struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1}, comptime maxValue: struct{comptime comptime_float = 1000, comptime comptime_float = 1000} = .{1000, 1000}, comptime defaultValue: struct{comptime comptime_float = 368, comptime comptime_float = 285} = .{368, 285}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:h},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:_},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:se}],methods:[],template:{memory:{array:Ns},slots:{0:{structure:h,memory:{array:Qs},slots:{0:{structure:O,memory:{array:m},address:-1431655766}}},1:{structure:_,memory:{array:Ws},slots:{0:{structure:j,memory:{array:m},address:-1431655766}}},2:{structure:se,memory:{array:Xs},slots:{0:{structure:Ie,memory:{array:m},address:-1431655766}}}}}},slot:47});Object.assign(re,{...t,type:11,name:"*const struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1}, comptime maxValue: struct{comptime comptime_float = 1000, comptime comptime_float = 1000} = .{1000, 1000}, comptime defaultValue: struct{comptime comptime_float = 368, comptime comptime_float = 285} = .{368, 285}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ke}],methods:[],template:null},slot:46});const Ys=new Uint8Array([]),Zs=new Uint8Array([56,30,16,0]),er=new Uint8Array([0,0,0,0,0,0,101,64]),tr=new Uint8Array([48,30,16,0]),sr=new Uint8Array([0,0,0,0,0,32,103,64]);Object.assign(ve,{...t,type:2,name:"struct{comptime comptime_float = 168, comptime comptime_float = 185}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:s},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:s}],methods:[],template:{memory:{array:Ys},slots:{0:{structure:s,memory:{array:Zs},slots:{0:{structure:r,memory:{array:er},address:1056312}}},1:{structure:s,memory:{array:tr},slots:{0:{structure:r,memory:{array:sr},address:1056304}}}}}},slot:85});Object.assign(me,{...t,type:11,name:"*const struct{comptime comptime_float = 168, comptime comptime_float = 185}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ve}],methods:[],template:null},slot:84});const rr=new Uint8Array([]),mr=new Uint8Array([170,170,170,170]),ar=new Uint8Array([170,170,170,170]),or=new Uint8Array([170,170,170,170]);Object.assign(Ee,{...t,type:2,name:"struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1}, comptime maxValue: struct{comptime comptime_float = 1000, comptime comptime_float = 1000} = .{1000, 1000}, comptime defaultValue: struct{comptime comptime_float = 168, comptime comptime_float = 185} = .{168, 185}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:u},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:h},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:_},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:me}],methods:[],template:{memory:{array:rr},slots:{0:{structure:h,memory:{array:mr},slots:{0:{structure:O,memory:{array:m},address:-1431655766}}},1:{structure:_,memory:{array:ar},slots:{0:{structure:j,memory:{array:m},address:-1431655766}}},2:{structure:me,memory:{array:or},slots:{0:{structure:ve,memory:{array:m},address:-1431655766}}}}}},slot:49});Object.assign(ae,{...t,type:11,name:"*const struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1}, comptime maxValue: struct{comptime comptime_float = 1000, comptime comptime_float = 1000} = .{1000, 1000}, comptime defaultValue: struct{comptime comptime_float = 168, comptime comptime_float = 185} = .{168, 185}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ee}],methods:[],template:null},slot:48});const ir=new Uint8Array([]),cr=new Uint8Array([170,170,170,170]),nr=new Uint8Array([170,170,170,170]),lr=new Uint8Array([170,170,170,170]),ur=new Uint8Array([170,170,170,170]),pr=new Uint8Array([170,170,170,170]),yr=new Uint8Array([170,170,170,170]);Object.assign(Ke,{...t,type:2,name:"struct{comptime a: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = -10, comptime comptime_float = -10} = .{-10, -10}, comptime maxValue: struct{comptime comptime_float = 10, comptime comptime_float = 10} = .{10, 10}, comptime defaultValue: struct{comptime comptime_float = 1, comptime comptime_float = 0.62} = .{1, 0.62}} = .{.type = @Vector(2, f32), .minValue = .{-10, -10}, .maxValue = .{10, 10}, .defaultValue = .{1, 0.62}}, comptime b: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = -500, comptime comptime_float = -500} = .{-500, -500}, comptime maxValue: struct{comptime comptime_float = 500, comptime comptime_float = 500} = .{500, 500}, comptime defaultValue: struct{comptime comptime_float = -86, comptime comptime_float = 22} = .{-86, 22}} = .{.type = @Vector(2, f32), .minValue = .{-500, -500}, .maxValue = .{500, 500}, .defaultValue = .{-86, 22}}, comptime c: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = -1, comptime comptime_float = -1} = .{-1, -1}, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1}, comptime defaultValue: struct{comptime comptime_float = -0.02, comptime comptime_float = -0.02} = .{-0.02, -0.02}} = .{.type = @Vector(2, f32), .minValue = .{-1, -1}, .maxValue = .{1, 1}, .defaultValue = .{-0.02, -0.02}}, comptime d: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = -100, comptime comptime_float = -100} = .{-100, -100}, comptime maxValue: struct{comptime comptime_float = 100, comptime comptime_float = 100} = .{100, 100}, comptime defaultValue: struct{comptime comptime_float = -2, comptime comptime_float = 10} = .{-2, 10}} = .{.type = @Vector(2, f32), .minValue = .{-100, -100}, .maxValue = .{100, 100}, .defaultValue = .{-2, 10}}, comptime size: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1}, comptime maxValue: struct{comptime comptime_float = 1000, comptime comptime_float = 1000} = .{1000, 1000}, comptime defaultValue: struct{comptime comptime_float = 368, comptime comptime_float = 285} = .{368, 285}} = .{.type = @Vector(2, f32), .minValue = .{1, 1}, .maxValue = .{1000, 1000}, .defaultValue = .{368, 285}}, comptime center: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1}, comptime maxValue: struct{comptime comptime_float = 1000, comptime comptime_float = 1000} = .{1000, 1000}, comptime defaultValue: struct{comptime comptime_float = 168, comptime comptime_float = 185} = .{168, 185}} = .{.type = @Vector(2, f32), .minValue = .{1, 1}, .maxValue = .{1000, 1000}, .defaultValue = .{168, 185}}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"a",structure:L},{...e,type:8,isRequired:!1,slot:1,name:"b",structure:N},{...e,type:8,isRequired:!1,slot:2,name:"c",structure:X},{...e,type:8,isRequired:!1,slot:3,name:"d",structure:te},{...e,type:8,isRequired:!1,slot:4,name:"size",structure:re},{...e,type:8,isRequired:!1,slot:5,name:"center",structure:ae}],methods:[],template:{memory:{array:ir},slots:{0:{structure:L,memory:{array:cr},slots:{0:{structure:_e,memory:{array:m},address:-1431655766}}},1:{structure:N,memory:{array:nr},slots:{0:{structure:Re,memory:{array:m},address:-1431655766}}},2:{structure:X,memory:{array:lr},slots:{0:{structure:Ue,memory:{array:m},address:-1431655766}}},3:{structure:te,memory:{array:ur},slots:{0:{structure:Ce,memory:{array:m},address:-1431655766}}},4:{structure:re,memory:{array:pr},slots:{0:{structure:ke,memory:{array:m},address:-1431655766}}},5:{structure:ae,memory:{array:yr},slots:{0:{structure:Ee,memory:{array:m},address:-1431655766}}}}}},slot:15});Object.assign(oe,{...t,type:11,name:"*struct{comptime a: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = -10, comptime comptime_float = -10} = .{-10, -10}, comptime maxValue: struct{comptime comptime_float = 10, comptime comptime_float = 10} = .{10, 10}, comptime defaultValue: struct{comptime comptime_float = 1, comptime comptime_float = 0.62} = .{1, 0.62}} = .{.type = @Vector(2, f32), .minValue = .{-10, -10}, .maxValue = .{10, 10}, .defaultValue = .{1, 0.62}}, comptime b: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = -500, comptime comptime_float = -500} = .{-500, -500}, comptime maxValue: struct{comptime comptime_float = 500, comptime comptime_float = 500} = .{500, 500}, comptime defaultValue: struct{comptime comptime_float = -86, comptime comptime_float = 22} = .{-86, 22}} = .{.type = @Vector(2, f32), .minValue = .{-500, -500}, .maxValue = .{500, 500}, .defaultValue = .{-86, 22}}, comptime c: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = -1, comptime comptime_float = -1} = .{-1, -1}, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1}, comptime defaultValue: struct{comptime comptime_float = -0.02, comptime comptime_float = -0.02} = .{-0.02, -0.02}} = .{.type = @Vector(2, f32), .minValue = .{-1, -1}, .maxValue = .{1, 1}, .defaultValue = .{-0.02, -0.02}}, comptime d: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = -100, comptime comptime_float = -100} = .{-100, -100}, comptime maxValue: struct{comptime comptime_float = 100, comptime comptime_float = 100} = .{100, 100}, comptime defaultValue: struct{comptime comptime_float = -2, comptime comptime_float = 10} = .{-2, 10}} = .{.type = @Vector(2, f32), .minValue = .{-100, -100}, .maxValue = .{100, 100}, .defaultValue = .{-2, 10}}, comptime size: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1}, comptime maxValue: struct{comptime comptime_float = 1000, comptime comptime_float = 1000} = .{1000, 1000}, comptime defaultValue: struct{comptime comptime_float = 368, comptime comptime_float = 285} = .{368, 285}} = .{.type = @Vector(2, f32), .minValue = .{1, 1}, .maxValue = .{1000, 1000}, .defaultValue = .{368, 285}}, comptime center: struct{comptime type: type = @Vector(2, f32), comptime minValue: struct{comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1}, comptime maxValue: struct{comptime comptime_float = 1000, comptime comptime_float = 1000} = .{1000, 1000}, comptime defaultValue: struct{comptime comptime_float = 168, comptime comptime_float = 185} = .{168, 185}} = .{.type = @Vector(2, f32), .minValue = .{1, 1}, .maxValue = .{1000, 1000}, .defaultValue = .{168, 185}}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ke}],methods:[],template:null},slot:14});Object.assign(ie,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:y}],methods:[],template:null},slot:86});const fr=new Uint8Array([]),br=new Uint8Array([192,30,16,0]),dr=new Uint8Array([4,0,0,0]);Object.assign(x,{...t,type:2,name:"struct{comptime channels: comptime_int = 4}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:ie}],methods:[],template:{memory:{array:fr},slots:{0:{structure:ie,memory:{array:br},slots:{0:{structure:y,memory:{array:dr},address:1056448}}}}}},slot:51});Object.assign(V,{...t,type:11,name:"*const struct{comptime channels: comptime_int = 4}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:x}],methods:[],template:null},slot:50});const hr=new Uint8Array([]),gr=new Uint8Array([170,170,170,170]);Object.assign(Fe,{...t,type:2,name:"struct{comptime src: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:V}],methods:[],template:{memory:{array:hr},slots:{0:{structure:V,memory:{array:gr},slots:{0:{structure:x,memory:{array:m},address:-1431655766}}}}}},slot:17});Object.assign(ce,{...t,type:11,name:"*struct{comptime src: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Fe}],methods:[],template:null},slot:16});const Sr=new Uint8Array([]),zr=new Uint8Array([170,170,170,170]);Object.assign(De,{...t,type:2,name:"struct{comptime dst: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:V}],methods:[],template:{memory:{array:Sr},slots:{0:{structure:V,memory:{array:zr},slots:{0:{structure:x,memory:{array:m},address:-1431655766}}}}}},slot:19});Object.assign(ne,{...t,type:11,name:"*struct{comptime dst: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:De}],methods:[],template:null},slot:18});const _r=new Uint8Array([]),Vr=new Uint8Array([]),Or=new Uint8Array([44,251,15,0]),wr=new Uint8Array([61,87,16,0]),Rr=new Uint8Array([99,111,109,112,108,101,120,32,114,97,116,105,111,110,97,108,0]),qr=new Uint8Array([108,251,15,0]),Ar=new Uint8Array([52,87,16,0]),Ur=new Uint8Array([112,105,120,101,108,101,114,111,0]),jr=new Uint8Array([172,251,15,0]),xr=new Uint8Array([1,0,0,0]),Pr=new Uint8Array([4,252,15,0]),Cr=new Uint8Array([14,87,16,0]),Ir=new Uint8Array([99,111,109,112,108,101,120,32,109,97,112,112,105,110,103,32,102,40,122,41,61,32,40,97,122,50,43,98,41,47,40,99,122,50,43,100,41,0]),kr=new Uint8Array([170,170,170,170]),vr=new Uint8Array([170,170,170,170]),Er=new Uint8Array([170,170,170,170]);Object.assign(We,{...t,type:2,name:"complex-rational.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:_r}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:F},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:D},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:d},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:T},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:oe},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:ce},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:ne}],methods:[],template:{memory:{array:Vr},slots:{0:{structure:F,memory:{array:Or},slots:{0:{structure:ye,memory:{array:wr},slots:{0:{structure:pe,memory:{array:Rr},address:1070909}}}}},1:{structure:D,memory:{array:qr},slots:{0:{structure:be,memory:{array:Ar},slots:{0:{structure:fe,memory:{array:Ur},address:1070900}}}}},2:{structure:d,memory:{array:jr},slots:{0:{structure:y,memory:{array:xr}}}},3:{structure:T,memory:{array:Pr},slots:{0:{structure:he,memory:{array:Cr},slots:{0:{structure:de,memory:{array:Ir},address:1070862}}}}},4:{structure:oe,memory:{array:kr},slots:{0:{structure:Ke,memory:{array:m},address:-1431655766}}},5:{structure:ce,memory:{array:vr},slots:{0:{structure:Fe,memory:{array:m},address:-1431655766}}},6:{structure:ne,memory:{array:Er},slots:{0:{structure:De,memory:{array:m},address:-1431655766}}}}}},slot:1});Object.assign(w,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:g}],methods:[],template:null},slot:24});Object.assign(Te,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:w}],methods:[],template:null},slot:23});Object.assign(Me,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Te}],methods:[],template:null},slot:22});Object.assign(p,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:p}],methods:[],template:null},slot:25});const Kr=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign($e,{...t,type:9,name:"complex-rational.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:y},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:y}],methods:[],template:{memory:{array:Kr}}},slot:26});Object.assign(A,{...t,name:"bool",length:1,byteSize:1,align:0,instance:{members:[{...e,type:1,isRequired:!1,bitOffset:0,bitSize:1,byteSize:1,structure:A}],methods:[],template:null},slot:27});Object.assign(U,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:U}],methods:[],template:null},slot:28});Object.assign(Be,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:52});const Fr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Dr=new Uint8Array([]),Tr=new Uint8Array([8,250,15,0]),Mr=new Uint8Array([4,0,0,0]);Object.assign(le,{...t,type:2,name:"complex-rational.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Me},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:p},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:p},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:$e},{...e,type:1,isRequired:!1,bitOffset:168,bitSize:1,byteSize:1,slot:4,name:"premultiplied",structure:A},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:5,name:"offset",structure:U}],methods:[],template:{memory:{array:Fr}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:w},{...e,type:7,isRequired:!1,name:"FPixel",structure:Be},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:d}],methods:[],template:{memory:{array:Dr},slots:{0:{structure:d,memory:{array:Tr},slots:{0:{structure:y,memory:{array:Mr}}}}}}},slot:21});const $r=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Br=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Lr=new Uint8Array([0,0,0,0,0,0,0,0]),mt=new Uint8Array([]);Object.assign(P,{...t,type:2,name:"complex-rational.KernelInput(u8,complex-rational.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:le}],methods:[],template:{memory:{array:$r},slots:{0:{structure:le,memory:{array:Br},slots:{0:{structure:Me,memory:{array:Lr},slots:{0:{structure:Te,memory:{array:mt}}}}}}}}},slot:20});Object.assign(Le,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:w}],methods:[],template:null},slot:23});Object.assign(Ge,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Le}],methods:[],template:null},slot:31});const Gr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Hr=new Uint8Array([]),Jr=new Uint8Array([8,250,15,0]),Nr=new Uint8Array([4,0,0,0]);Object.assign(ue,{...t,type:2,name:"complex-rational.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Ge},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:p},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:p},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:$e},{...e,type:1,isRequired:!1,bitOffset:168,bitSize:1,byteSize:1,slot:4,name:"premultiplied",structure:A},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:5,name:"offset",structure:U}],methods:[],template:{memory:{array:Gr}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:w},{...e,type:7,isRequired:!1,name:"FPixel",structure:Be},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:d}],methods:[],template:{memory:{array:Hr},slots:{0:{structure:d,memory:{array:Jr},slots:{0:{structure:y,memory:{array:Nr}}}}}}},slot:30});const Qr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Wr=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Xr=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(C,{...t,type:2,name:"complex-rational.KernelOutput(u8,complex-rational.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:ue}],methods:[],template:{memory:{array:Qr},slots:{0:{structure:ue,memory:{array:Wr},slots:{0:{structure:Ge,memory:{array:Xr},slots:{0:{structure:Le,memory:{array:mt}}}}}}}}},slot:29});const Yr=new Uint8Array([0,0,128,63,82,184,30,63,0,0,172,194,0,0,176,65,10,215,163,188,10,215,163,188,0,0,0,192,0,0,32,65,0,0,184,67,0,128,142,67,0,0,40,67,0,0,57,67]);Object.assign(I,{...t,type:2,name:"complex-rational.KernelParameters(complex-rational.kernel)",length:1,byteSize:48,align:3,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"a",structure:u},{...e,type:6,isRequired:!1,bitOffset:64,bitSize:64,byteSize:8,slot:1,name:"b",structure:u},{...e,type:6,isRequired:!1,bitOffset:128,bitSize:64,byteSize:8,slot:2,name:"c",structure:u},{...e,type:6,isRequired:!1,bitOffset:192,bitSize:64,byteSize:8,slot:3,name:"d",structure:u},{...e,type:6,isRequired:!1,bitOffset:256,bitSize:64,byteSize:8,slot:4,name:"size",structure:u},{...e,type:6,isRequired:!1,bitOffset:320,bitSize:64,byteSize:8,slot:5,name:"center",structure:u}],methods:[],template:{memory:{array:Yr}}},slot:32});Object.assign(Xe,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(complex-rational.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:54});Object.assign(Ye,{...t,type:7,name:"@typeInfo(@typeInfo(@TypeOf(complex-rational.createOutput)).Fn.return_type.?).ErrorUnion.error_set!complex-rational.KernelOutput(u8,complex-rational.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:C},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Xe}],methods:[],template:null},slot:36});Object.assign(Ze,{...t,type:3,name:"createOutput",length:1,byteSize:112,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:0,name:"0",structure:p},{...e,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:1,name:"1",structure:p},{...e,type:6,bitOffset:448,bitSize:192,byteSize:24,slot:2,name:"2",structure:P},{...e,type:6,bitOffset:0,bitSize:384,byteSize:48,slot:3,name:"3",structure:I},{...e,type:6,bitOffset:640,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Ye}],methods:[],template:null},slot:34});Object.assign(et,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(complex-rational.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:55});Object.assign(tt,{...t,type:7,name:"@typeInfo(@typeInfo(@TypeOf(complex-rational.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set!complex-rational.KernelOutput(u8,complex-rational.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:C},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:et}],methods:[],template:null},slot:37});Object.assign(st,{...t,type:3,name:"createPartialOutput",length:1,byteSize:120,align:3,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:384,bitSize:32,byteSize:4,slot:0,name:"0",structure:p},{...e,type:3,bitOffset:416,bitSize:32,byteSize:4,slot:1,name:"1",structure:p},{...e,type:3,bitOffset:448,bitSize:32,byteSize:4,slot:2,name:"2",structure:p},{...e,type:3,bitOffset:480,bitSize:32,byteSize:4,slot:3,name:"3",structure:p},{...e,type:6,bitOffset:512,bitSize:192,byteSize:24,slot:4,name:"4",structure:P},{...e,type:6,bitOffset:0,bitSize:384,byteSize:48,slot:5,name:"5",structure:I},{...e,type:6,bitOffset:704,bitSize:224,byteSize:28,slot:6,name:"retval",structure:tt}],methods:[],template:null},slot:35});const Zr={argStruct:Ze,thunk:1,name:"createOutput"},em={argStruct:st,thunk:6,name:"createPartialOutput"};Object.assign(rt,{...t,type:2,name:"complex-rational",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:mt}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:We},{...e,type:7,isRequired:!1,name:"Input",structure:P},{...e,type:7,isRequired:!1,name:"Output",structure:C},{...e,type:7,isRequired:!1,name:"Parameters",structure:I}],methods:[Zr,em],template:null},slot:0});const tm=[g,pe,ye,F,fe,be,D,y,d,de,he,T,q,u,r,s,ge,M,Se,$,ze,B,_e,L,Ve,G,Oe,H,we,J,Re,N,qe,Q,O,h,Ae,W,Ue,X,je,Y,xe,Z,Pe,ee,Ce,te,j,_,Ie,se,ke,re,ve,me,Ee,ae,Ke,oe,ie,x,V,Fe,ce,De,ne,We,w,Te,Me,p,$e,A,U,Be,le,P,Le,Ge,ue,C,I,Xe,Ye,Ze,et,tt,st,rt],sm=Et(tm),rm=rt.constructor,mm=(async()=>{const c=new URL("complex-rational-16b92484.wasm",import.meta.url).href;return fetch(c)})();Kt(mm,{...sm,writeBack:!0});const{createOutput:pm,createPartialOutput:am,kernel:Qe,Input:om,Output:ym,Parameters:fm}=rm;function im(c,l,o,a,i={},S={}){if(Array.isArray(i)){const b=i;i={};for(const[f,z]of Object.keys(Qe.inputImages).entries())i[z]=b[f]}const k=new om(void 0),v=Object.keys(Qe.inputImages),n=[];let R;for(const b of v){let f=i[b];if(f||(v.length===1&&["data","width","height"].every(z=>!!i[z])?f=i:n.push(b)),k[b]=f,R){if(f.colorSpace!==R)throw new Error(`Input images must all use the same color space: ${R}`)}else R=f.colorSpace}if(n.length>0)throw new Error(`Missing input image${n.length>1?"s":""}: ${n.join(", ")}`);const He=am(c,l,o,a,k,S),at=b=>{const f=Object.keys(b),z={};for(const ot of f){const{data:{typedArray:E},width:it,height:ht}=b[ot];let K;if(typeof ImageData=="function"){const gt=new Uint8ClampedArray(E.buffer,E.byteOffset,E.byteLength);K=new ImageData(gt,it,a,{colorSpace:R})}else K={data:E,width:it,height:ht};if(f.length===1)return K;z[ot]=K}return z};return He[Symbol.toStringTag]==="Promise"?He.then(at):at(He)}function cm(){const c={};for(let[l,o]of Object.entries(Qe)){if(l==="parameters"){const a={};for(const[i,S]of Object.entries(o)){const k=a[i]={};for(let[v,n]of Object.entries(S))typeof n=="object"?"string"in n?n=n.string:n=dt(n):typeof n=="function"&&(n=nm(n.name)),k[v]=n}o=a}else typeof o=="object"&&("string"in o?o=o.string:o=o.valueOf());c[l]=o}return c}function dt(c){const l=[];for(let[o,a]of Object.entries(c))typeof a=="object"&&(a=dt(a)),l[o]=a;return l}function nm(c){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[c]}onmessage=c=>{const[l,o,...a]=c.data;lm(l,a).then(([i,S])=>{postMessage([l,o,i],{transfer:S})}).catch(i=>{postMessage(["error",o,i])})};async function lm(c,l){switch(c){case"getKernelInfo":return[cm(...l)];case"createPartialImageData":const a=await im(...l),i=[];if("data"in a&&"width"in a&&"height"in a)i.push(a.data.buffer);else for(const S of Object.entries(a))i.push(a.data.buffer);return[a,i];default:throw new Error(`Unknown function: ${c}`)}}
