import{u as yt,a as ft,b as dt,d as bt,c as Vt,e as ht,f as gt,g as zt,h as St,i as Rt,j as _t,k as At,l as qt,n as wt,p as Ut,m as Ot,o as jt,q as xt,r as Pt}from"./index-cfb20c86.js";yt();ft();dt();bt();Vt();ht();gt();zt();St();Rt();_t();At();qt();wt();Ut();Ot();jt();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},_={},Ve={},he={},L={},ge={},ze={},H={},l={},A={},Se={},Re={},J={},P={},m={},a={},s={},r={},_e={},N={},h={},g={},c={},Ae={},Q={},qe={},W={},we={},X={},Ue={},Y={},Oe={},Z={},je={},ee={},xe={},te={},Pe={},re={},Te={},se={},Be={},me={},Ge={},ae={},Ce={},oe={},Ie={},ie={},ke={},ce={},ve={},ue={},S={},Ee={},ne={},Ke={},le={},Fe={},pe={},k={},T={},De={},ye={},Me={},fe={},Xe={},B={},$e={},Le={},d={},He={},C={},I={},de={},v={},Je={},Ne={},be={},E={},K={},Ye={},Ze={},et={},tt={},rt={},st={},mt={};Object.assign(_,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:_}],methods:[],template:null},slot:5});Object.assign(Ve,{...t,type:1,name:"[10:0]u8",length:10,byteSize:11,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:_}],methods:[],template:null},slot:4});Object.assign(he,{...t,type:11,name:"*const [10:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ve}],methods:[],template:null},slot:3});Object.assign(L,{...t,type:11,name:"**const [10:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:he}],methods:[],template:null},slot:2});Object.assign(ge,{...t,type:1,name:"[14:0]u8",length:14,byteSize:15,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:_}],methods:[],template:null},slot:8});Object.assign(ze,{...t,type:11,name:"*const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ge}],methods:[],template:null},slot:7});Object.assign(H,{...t,type:11,name:"**const [14:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ze}],methods:[],template:null},slot:6});Object.assign(l,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:l}],methods:[],template:null},slot:10});Object.assign(A,{...t,type:11,name:"*i32",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:l}],methods:[],template:null},slot:9});Object.assign(Se,{...t,type:1,name:"[49:0]u8",length:49,byteSize:50,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:_}],methods:[],template:null},slot:13});Object.assign(Re,{...t,type:11,name:"*const [49:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Se}],methods:[],template:null},slot:12});Object.assign(J,{...t,type:11,name:"**const [49:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Re}],methods:[],template:null},slot:11});Object.assign(P,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:P}],methods:[],template:null},slot:34});Object.assign(m,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:P}],methods:[],template:null},slot:33});Object.assign(a,{...t,type:11,name:"*const @Vector(4, f32)",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:m}],methods:[],template:null},slot:63});Object.assign(s,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:s}],methods:[],template:null},slot:85});Object.assign(r,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:s}],methods:[],template:null},slot:84});const Tt=new Uint8Array([]),Bt=new Uint8Array([144,30,16,0]),Gt=new Uint8Array([211,77,98,16,88,57,220,63]),Ct=new Uint8Array([136,30,16,0]),It=new Uint8Array([0,0,0,0,0,192,226,63]),kt=new Uint8Array([128,30,16,0]),vt=new Uint8Array([0,0,0,0,0,224,227,63]),Et=new Uint8Array([48,30,16,0]),V=new Uint8Array([0,0,0,0,0,0,240,63]);Object.assign(_e,{...t,type:2,name:"struct{comptime comptime_float = 0.441, comptime comptime_float = 0.5859375, comptime comptime_float = 0.62109375, comptime comptime_float = 1}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:r}],methods:[],template:{memory:{array:Tt},slots:{0:{structure:r,memory:{array:Bt},slots:{0:{structure:s,memory:{array:Gt},address:1056400}}},1:{structure:r,memory:{array:Ct},slots:{0:{structure:s,memory:{array:It},address:1056392}}},2:{structure:r,memory:{array:kt},slots:{0:{structure:s,memory:{array:vt},address:1056384}}},3:{structure:r,memory:{array:Et},slots:{0:{structure:s,memory:{array:V},address:1056304}}}}}},slot:65});Object.assign(N,{...t,type:11,name:"*const struct{comptime comptime_float = 0.441, comptime comptime_float = 0.5859375, comptime comptime_float = 0.62109375, comptime comptime_float = 1}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:_e}],methods:[],template:null},slot:64});Object.assign(h,{...t,type:1,name:"[9:0]u8",length:9,byteSize:10,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:_}],methods:[],template:null},slot:68});Object.assign(g,{...t,type:11,name:"*const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:h}],methods:[],template:null},slot:67});Object.assign(c,{...t,type:11,name:"*const *const [9:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:g}],methods:[],template:null},slot:66});const Kt=new Uint8Array([]),Ft=new Uint8Array([208,30,16,0]),q=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Dt=new Uint8Array([192,30,16,0]),w=new Uint8Array([0,0,128,63,0,0,128,63,0,0,128,63,0,0,128,63]),Mt=new Uint8Array([170,170,170,170]),o=new Uint8Array([]),$t=new Uint8Array([184,30,16,0]),U=new Uint8Array([224,30,16,0]),O=new Uint8Array([99,111,108,111,114,82,71,66,65,0]);Object.assign(Ae,{...t,type:2,name:'struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: @Vector(4, f32) = .{ 1, 1, 1, 1 }, comptime defaultValue: struct{comptime comptime_float = 0.441, comptime comptime_float = 0.5859375, comptime comptime_float = 0.62109375, comptime comptime_float = 1} = .{0.441, 0.5859375, 0.62109375, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"}',length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:a},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:a},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:N},{...e,type:8,isRequired:!1,slot:3,name:"parameterType",structure:c}],methods:[],template:{memory:{array:Kt},slots:{0:{structure:a,memory:{array:Ft},slots:{0:{structure:m,memory:{array:q},address:1056464}}},1:{structure:a,memory:{array:Dt},slots:{0:{structure:m,memory:{array:w},address:1056448}}},2:{structure:N,memory:{array:Mt},slots:{0:{structure:_e,memory:{array:o},address:-1431655766}}},3:{structure:c,memory:{array:$t},slots:{0:{structure:g,memory:{array:U},address:1056440,slots:{0:{structure:h,memory:{array:O},address:1056480}}}}}}}},slot:40});Object.assign(Q,{...t,type:11,name:'*const struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: @Vector(4, f32) = .{ 1, 1, 1, 1 }, comptime defaultValue: struct{comptime comptime_float = 0.441, comptime comptime_float = 0.5859375, comptime comptime_float = 0.62109375, comptime comptime_float = 1} = .{0.441, 0.5859375, 0.62109375, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"}',length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ae}],methods:[],template:null},slot:39});const Lt=new Uint8Array([]),Ht=new Uint8Array([120,30,16,0]),Jt=new Uint8Array([12,2,43,135,22,217,234,63]),Nt=new Uint8Array([112,30,16,0]),Qt=new Uint8Array([66,96,229,208,34,219,185,63]),Wt=new Uint8Array([104,30,16,0]),Xt=new Uint8Array([199,41,58,146,203,127,192,63]),Yt=new Uint8Array([48,30,16,0]);Object.assign(qe,{...t,type:2,name:"struct{comptime comptime_float = 0.839, comptime comptime_float = 0.101, comptime comptime_float = 0.1289, comptime comptime_float = 1}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:r}],methods:[],template:{memory:{array:Lt},slots:{0:{structure:r,memory:{array:Ht},slots:{0:{structure:s,memory:{array:Jt},address:1056376}}},1:{structure:r,memory:{array:Nt},slots:{0:{structure:s,memory:{array:Qt},address:1056368}}},2:{structure:r,memory:{array:Wt},slots:{0:{structure:s,memory:{array:Xt},address:1056360}}},3:{structure:r,memory:{array:Yt},slots:{0:{structure:s,memory:{array:V},address:1056304}}}}}},slot:70});Object.assign(W,{...t,type:11,name:"*const struct{comptime comptime_float = 0.839, comptime comptime_float = 0.101, comptime comptime_float = 0.1289, comptime comptime_float = 1}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:qe}],methods:[],template:null},slot:69});const Zt=new Uint8Array([]),er=new Uint8Array([208,30,16,0]),tr=new Uint8Array([192,30,16,0]),rr=new Uint8Array([170,170,170,170]),sr=new Uint8Array([184,30,16,0]);Object.assign(we,{...t,type:2,name:'struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: @Vector(4, f32) = .{ 1, 1, 1, 1 }, comptime defaultValue: struct{comptime comptime_float = 0.839, comptime comptime_float = 0.101, comptime comptime_float = 0.1289, comptime comptime_float = 1} = .{0.839, 0.101, 0.1289, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"}',length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:a},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:a},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:W},{...e,type:8,isRequired:!1,slot:3,name:"parameterType",structure:c}],methods:[],template:{memory:{array:Zt},slots:{0:{structure:a,memory:{array:er},slots:{0:{structure:m,memory:{array:q},address:1056464}}},1:{structure:a,memory:{array:tr},slots:{0:{structure:m,memory:{array:w},address:1056448}}},2:{structure:W,memory:{array:rr},slots:{0:{structure:qe,memory:{array:o},address:-1431655766}}},3:{structure:c,memory:{array:sr},slots:{0:{structure:g,memory:{array:U},address:1056440,slots:{0:{structure:h,memory:{array:O},address:1056480}}}}}}}},slot:42});Object.assign(X,{...t,type:11,name:'*const struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: @Vector(4, f32) = .{ 1, 1, 1, 1 }, comptime defaultValue: struct{comptime comptime_float = 0.839, comptime comptime_float = 0.101, comptime comptime_float = 0.1289, comptime comptime_float = 1} = .{0.839, 0.101, 0.1289, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"}',length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:we}],methods:[],template:null},slot:41});const mr=new Uint8Array([]),ar=new Uint8Array([56,30,16,0]),b=new Uint8Array([0,0,0,0,0,0,0,0]),or=new Uint8Array([96,30,16,0]),ir=new Uint8Array([246,40,92,143,194,245,200,63]),cr=new Uint8Array([88,30,16,0]),ur=new Uint8Array([51,51,51,51,51,51,211,63]),nr=new Uint8Array([48,30,16,0]);Object.assign(Ue,{...t,type:2,name:"struct{comptime comptime_float = 0, comptime comptime_float = 0.195, comptime comptime_float = 0.3, comptime comptime_float = 1}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:r}],methods:[],template:{memory:{array:mr},slots:{0:{structure:r,memory:{array:ar},slots:{0:{structure:s,memory:{array:b},address:1056312}}},1:{structure:r,memory:{array:or},slots:{0:{structure:s,memory:{array:ir},address:1056352}}},2:{structure:r,memory:{array:cr},slots:{0:{structure:s,memory:{array:ur},address:1056344}}},3:{structure:r,memory:{array:nr},slots:{0:{structure:s,memory:{array:V},address:1056304}}}}}},slot:72});Object.assign(Y,{...t,type:11,name:"*const struct{comptime comptime_float = 0, comptime comptime_float = 0.195, comptime comptime_float = 0.3, comptime comptime_float = 1}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ue}],methods:[],template:null},slot:71});const lr=new Uint8Array([]),pr=new Uint8Array([208,30,16,0]),yr=new Uint8Array([192,30,16,0]),fr=new Uint8Array([170,170,170,170]),dr=new Uint8Array([184,30,16,0]);Object.assign(Oe,{...t,type:2,name:'struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: @Vector(4, f32) = .{ 1, 1, 1, 1 }, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0.195, comptime comptime_float = 0.3, comptime comptime_float = 1} = .{0, 0.195, 0.3, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"}',length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:a},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:a},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:Y},{...e,type:8,isRequired:!1,slot:3,name:"parameterType",structure:c}],methods:[],template:{memory:{array:lr},slots:{0:{structure:a,memory:{array:pr},slots:{0:{structure:m,memory:{array:q},address:1056464}}},1:{structure:a,memory:{array:yr},slots:{0:{structure:m,memory:{array:w},address:1056448}}},2:{structure:Y,memory:{array:fr},slots:{0:{structure:Ue,memory:{array:o},address:-1431655766}}},3:{structure:c,memory:{array:dr},slots:{0:{structure:g,memory:{array:U},address:1056440,slots:{0:{structure:h,memory:{array:O},address:1056480}}}}}}}},slot:44});Object.assign(Z,{...t,type:11,name:'*const struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: @Vector(4, f32) = .{ 1, 1, 1, 1 }, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0.195, comptime comptime_float = 0.3, comptime comptime_float = 1} = .{0, 0.195, 0.3, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"}',length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Oe}],methods:[],template:null},slot:43});const br=new Uint8Array([]),Vr=new Uint8Array([80,30,16,0]),hr=new Uint8Array([219,249,126,106,188,116,239,63]),gr=new Uint8Array([72,30,16,0]),zr=new Uint8Array([123,20,174,71,225,122,236,63]),Sr=new Uint8Array([64,30,16,0]),Rr=new Uint8Array([203,161,69,182,243,253,228,63]),_r=new Uint8Array([48,30,16,0]);Object.assign(je,{...t,type:2,name:"struct{comptime comptime_float = 0.983, comptime comptime_float = 0.89, comptime comptime_float = 0.656, comptime comptime_float = 1}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:r}],methods:[],template:{memory:{array:br},slots:{0:{structure:r,memory:{array:Vr},slots:{0:{structure:s,memory:{array:hr},address:1056336}}},1:{structure:r,memory:{array:gr},slots:{0:{structure:s,memory:{array:zr},address:1056328}}},2:{structure:r,memory:{array:Sr},slots:{0:{structure:s,memory:{array:Rr},address:1056320}}},3:{structure:r,memory:{array:_r},slots:{0:{structure:s,memory:{array:V},address:1056304}}}}}},slot:74});Object.assign(ee,{...t,type:11,name:"*const struct{comptime comptime_float = 0.983, comptime comptime_float = 0.89, comptime comptime_float = 0.656, comptime comptime_float = 1}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:je}],methods:[],template:null},slot:73});const Ar=new Uint8Array([]),qr=new Uint8Array([208,30,16,0]),wr=new Uint8Array([192,30,16,0]),Ur=new Uint8Array([170,170,170,170]),Or=new Uint8Array([184,30,16,0]);Object.assign(xe,{...t,type:2,name:'struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: @Vector(4, f32) = .{ 1, 1, 1, 1 }, comptime defaultValue: struct{comptime comptime_float = 0.983, comptime comptime_float = 0.89, comptime comptime_float = 0.656, comptime comptime_float = 1} = .{0.983, 0.89, 0.656, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"}',length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:a},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:a},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:ee},{...e,type:8,isRequired:!1,slot:3,name:"parameterType",structure:c}],methods:[],template:{memory:{array:Ar},slots:{0:{structure:a,memory:{array:qr},slots:{0:{structure:m,memory:{array:q},address:1056464}}},1:{structure:a,memory:{array:wr},slots:{0:{structure:m,memory:{array:w},address:1056448}}},2:{structure:ee,memory:{array:Ur},slots:{0:{structure:je,memory:{array:o},address:-1431655766}}},3:{structure:c,memory:{array:Or},slots:{0:{structure:g,memory:{array:U},address:1056440,slots:{0:{structure:h,memory:{array:O},address:1056480}}}}}}}},slot:46});Object.assign(te,{...t,type:11,name:'*const struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: @Vector(4, f32) = .{ 1, 1, 1, 1 }, comptime defaultValue: struct{comptime comptime_float = 0.983, comptime comptime_float = 0.89, comptime comptime_float = 0.656, comptime comptime_float = 1} = .{0.983, 0.89, 0.656, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"}',length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:xe}],methods:[],template:null},slot:45});const jr=new Uint8Array([]),xr=new Uint8Array([56,30,16,0]),Pr=new Uint8Array([56,30,16,0]),Tr=new Uint8Array([56,30,16,0]),Br=new Uint8Array([48,30,16,0]);Object.assign(Pe,{...t,type:2,name:"struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:r}],methods:[],template:{memory:{array:jr},slots:{0:{structure:r,memory:{array:xr},slots:{0:{structure:s,memory:{array:b},address:1056312}}},1:{structure:r,memory:{array:Pr},slots:{0:{structure:s,memory:{array:b},address:1056312}}},2:{structure:r,memory:{array:Tr},slots:{0:{structure:s,memory:{array:b},address:1056312}}},3:{structure:r,memory:{array:Br},slots:{0:{structure:s,memory:{array:V},address:1056304}}}}}},slot:76});Object.assign(re,{...t,type:11,name:"*const struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Pe}],methods:[],template:null},slot:75});const Gr=new Uint8Array([]),Cr=new Uint8Array([208,30,16,0]),Ir=new Uint8Array([192,30,16,0]),kr=new Uint8Array([170,170,170,170]),vr=new Uint8Array([184,30,16,0]);Object.assign(Te,{...t,type:2,name:'struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: @Vector(4, f32) = .{ 1, 1, 1, 1 }, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1} = .{0, 0, 0, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"}',length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:a},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:a},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:re},{...e,type:8,isRequired:!1,slot:3,name:"parameterType",structure:c}],methods:[],template:{memory:{array:Gr},slots:{0:{structure:a,memory:{array:Cr},slots:{0:{structure:m,memory:{array:q},address:1056464}}},1:{structure:a,memory:{array:Ir},slots:{0:{structure:m,memory:{array:w},address:1056448}}},2:{structure:re,memory:{array:kr},slots:{0:{structure:Pe,memory:{array:o},address:-1431655766}}},3:{structure:c,memory:{array:vr},slots:{0:{structure:g,memory:{array:U},address:1056440,slots:{0:{structure:h,memory:{array:O},address:1056480}}}}}}}},slot:48});Object.assign(se,{...t,type:11,name:'*const struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: @Vector(4, f32) = .{ 1, 1, 1, 1 }, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1} = .{0, 0, 0, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"}',length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Te}],methods:[],template:null},slot:47});const Er=new Uint8Array([]),Kr=new Uint8Array([48,30,16,0]),Fr=new Uint8Array([56,30,16,0]),Dr=new Uint8Array([56,30,16,0]),Mr=new Uint8Array([48,30,16,0]);Object.assign(Be,{...t,type:2,name:"struct{comptime comptime_float = 1, comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:r}],methods:[],template:{memory:{array:Er},slots:{0:{structure:r,memory:{array:Kr},slots:{0:{structure:s,memory:{array:V},address:1056304}}},1:{structure:r,memory:{array:Fr},slots:{0:{structure:s,memory:{array:b},address:1056312}}},2:{structure:r,memory:{array:Dr},slots:{0:{structure:s,memory:{array:b},address:1056312}}},3:{structure:r,memory:{array:Mr},slots:{0:{structure:s,memory:{array:V},address:1056304}}}}}},slot:78});Object.assign(me,{...t,type:11,name:"*const struct{comptime comptime_float = 1, comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Be}],methods:[],template:null},slot:77});const $r=new Uint8Array([]),Lr=new Uint8Array([208,30,16,0]),Hr=new Uint8Array([192,30,16,0]),Jr=new Uint8Array([170,170,170,170]),Nr=new Uint8Array([184,30,16,0]);Object.assign(Ge,{...t,type:2,name:'struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: @Vector(4, f32) = .{ 1, 1, 1, 1 }, comptime defaultValue: struct{comptime comptime_float = 1, comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1} = .{1, 0, 0, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"}',length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:a},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:a},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:me},{...e,type:8,isRequired:!1,slot:3,name:"parameterType",structure:c}],methods:[],template:{memory:{array:$r},slots:{0:{structure:a,memory:{array:Lr},slots:{0:{structure:m,memory:{array:q},address:1056464}}},1:{structure:a,memory:{array:Hr},slots:{0:{structure:m,memory:{array:w},address:1056448}}},2:{structure:me,memory:{array:Jr},slots:{0:{structure:Be,memory:{array:o},address:-1431655766}}},3:{structure:c,memory:{array:Nr},slots:{0:{structure:g,memory:{array:U},address:1056440,slots:{0:{structure:h,memory:{array:O},address:1056480}}}}}}}},slot:50});Object.assign(ae,{...t,type:11,name:'*const struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: @Vector(4, f32) = .{ 1, 1, 1, 1 }, comptime defaultValue: struct{comptime comptime_float = 1, comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1} = .{1, 0, 0, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"}',length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ge}],methods:[],template:null},slot:49});const Qr=new Uint8Array([]),Wr=new Uint8Array([56,30,16,0]),Xr=new Uint8Array([48,30,16,0]),Yr=new Uint8Array([56,30,16,0]),Zr=new Uint8Array([48,30,16,0]);Object.assign(Ce,{...t,type:2,name:"struct{comptime comptime_float = 0, comptime comptime_float = 1, comptime comptime_float = 0, comptime comptime_float = 1}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:r}],methods:[],template:{memory:{array:Qr},slots:{0:{structure:r,memory:{array:Wr},slots:{0:{structure:s,memory:{array:b},address:1056312}}},1:{structure:r,memory:{array:Xr},slots:{0:{structure:s,memory:{array:V},address:1056304}}},2:{structure:r,memory:{array:Yr},slots:{0:{structure:s,memory:{array:b},address:1056312}}},3:{structure:r,memory:{array:Zr},slots:{0:{structure:s,memory:{array:V},address:1056304}}}}}},slot:80});Object.assign(oe,{...t,type:11,name:"*const struct{comptime comptime_float = 0, comptime comptime_float = 1, comptime comptime_float = 0, comptime comptime_float = 1}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ce}],methods:[],template:null},slot:79});const es=new Uint8Array([]),ts=new Uint8Array([208,30,16,0]),rs=new Uint8Array([192,30,16,0]),ss=new Uint8Array([170,170,170,170]),ms=new Uint8Array([184,30,16,0]);Object.assign(Ie,{...t,type:2,name:'struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: @Vector(4, f32) = .{ 1, 1, 1, 1 }, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 1, comptime comptime_float = 0, comptime comptime_float = 1} = .{0, 1, 0, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"}',length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:a},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:a},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:oe},{...e,type:8,isRequired:!1,slot:3,name:"parameterType",structure:c}],methods:[],template:{memory:{array:es},slots:{0:{structure:a,memory:{array:ts},slots:{0:{structure:m,memory:{array:q},address:1056464}}},1:{structure:a,memory:{array:rs},slots:{0:{structure:m,memory:{array:w},address:1056448}}},2:{structure:oe,memory:{array:ss},slots:{0:{structure:Ce,memory:{array:o},address:-1431655766}}},3:{structure:c,memory:{array:ms},slots:{0:{structure:g,memory:{array:U},address:1056440,slots:{0:{structure:h,memory:{array:O},address:1056480}}}}}}}},slot:52});Object.assign(ie,{...t,type:11,name:'*const struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: @Vector(4, f32) = .{ 1, 1, 1, 1 }, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 1, comptime comptime_float = 0, comptime comptime_float = 1} = .{0, 1, 0, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"}',length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ie}],methods:[],template:null},slot:51});const as=new Uint8Array([]),os=new Uint8Array([56,30,16,0]),is=new Uint8Array([56,30,16,0]),cs=new Uint8Array([48,30,16,0]),us=new Uint8Array([48,30,16,0]);Object.assign(ke,{...t,type:2,name:"struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1, comptime comptime_float = 1}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r},{...e,type:8,isRequired:!1,slot:3,name:"3",structure:r}],methods:[],template:{memory:{array:as},slots:{0:{structure:r,memory:{array:os},slots:{0:{structure:s,memory:{array:b},address:1056312}}},1:{structure:r,memory:{array:is},slots:{0:{structure:s,memory:{array:b},address:1056312}}},2:{structure:r,memory:{array:cs},slots:{0:{structure:s,memory:{array:V},address:1056304}}},3:{structure:r,memory:{array:us},slots:{0:{structure:s,memory:{array:V},address:1056304}}}}}},slot:82});Object.assign(ce,{...t,type:11,name:"*const struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1, comptime comptime_float = 1}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ke}],methods:[],template:null},slot:81});const ns=new Uint8Array([]),ls=new Uint8Array([208,30,16,0]),ps=new Uint8Array([192,30,16,0]),ys=new Uint8Array([170,170,170,170]),fs=new Uint8Array([184,30,16,0]);Object.assign(ve,{...t,type:2,name:'struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: @Vector(4, f32) = .{ 1, 1, 1, 1 }, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1, comptime comptime_float = 1} = .{0, 0, 1, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"}',length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:m},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:a},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:a},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:ce},{...e,type:8,isRequired:!1,slot:3,name:"parameterType",structure:c}],methods:[],template:{memory:{array:ns},slots:{0:{structure:a,memory:{array:ls},slots:{0:{structure:m,memory:{array:q},address:1056464}}},1:{structure:a,memory:{array:ps},slots:{0:{structure:m,memory:{array:w},address:1056448}}},2:{structure:ce,memory:{array:ys},slots:{0:{structure:ke,memory:{array:o},address:-1431655766}}},3:{structure:c,memory:{array:fs},slots:{0:{structure:g,memory:{array:U},address:1056440,slots:{0:{structure:h,memory:{array:O},address:1056480}}}}}}}},slot:54});Object.assign(ue,{...t,type:11,name:'*const struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: @Vector(4, f32) = .{ 1, 1, 1, 1 }, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1, comptime comptime_float = 1} = .{0, 0, 1, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"}',length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ve}],methods:[],template:null},slot:53});Object.assign(S,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:l}],methods:[],template:null},slot:83});const ds=new Uint8Array([]),bs=new Uint8Array([180,30,16,0]),Vs=new Uint8Array([2,0,0,0]),hs=new Uint8Array([176,30,16,0]),gs=new Uint8Array([8,0,0,0]),zs=new Uint8Array([152,30,16,0]),ut=new Uint8Array([4,0,0,0]);Object.assign(Ee,{...t,type:2,name:"struct{comptime type: type = i32, comptime minValue: comptime_int = 2, comptime maxValue: comptime_int = 8, comptime defaultValue: comptime_int = 4}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:l},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:S},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:S},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:S}],methods:[],template:{memory:{array:ds},slots:{0:{structure:S,memory:{array:bs},slots:{0:{structure:l,memory:{array:Vs},address:1056436}}},1:{structure:S,memory:{array:hs},slots:{0:{structure:l,memory:{array:gs},address:1056432}}},2:{structure:S,memory:{array:zs},slots:{0:{structure:l,memory:{array:ut},address:1056408}}}}}},slot:56});Object.assign(ne,{...t,type:11,name:"*const struct{comptime type: type = i32, comptime minValue: comptime_int = 2, comptime maxValue: comptime_int = 8, comptime defaultValue: comptime_int = 4}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ee}],methods:[],template:null},slot:55});const Ss=new Uint8Array([]),Rs=new Uint8Array([56,30,16,0]),_s=new Uint8Array([168,30,16,0]),As=new Uint8Array([0,0,0,0,0,0,16,64]),qs=new Uint8Array([160,30,16,0]),ws=new Uint8Array([0,0,0,0,0,0,224,63]);Object.assign(Ke,{...t,type:2,name:"struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 4, comptime defaultValue: comptime_float = 0.5}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:P},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:Ss},slots:{0:{structure:r,memory:{array:Rs},slots:{0:{structure:s,memory:{array:b},address:1056312}}},1:{structure:r,memory:{array:_s},slots:{0:{structure:s,memory:{array:As},address:1056424}}},2:{structure:r,memory:{array:qs},slots:{0:{structure:s,memory:{array:ws},address:1056416}}}}}},slot:58});Object.assign(le,{...t,type:11,name:"*const struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 4, comptime defaultValue: comptime_float = 0.5}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Ke}],methods:[],template:null},slot:57});const Us=new Uint8Array([]),Os=new Uint8Array([170,170,170,170]),js=new Uint8Array([170,170,170,170]),xs=new Uint8Array([170,170,170,170]),Ps=new Uint8Array([170,170,170,170]),Ts=new Uint8Array([170,170,170,170]),Bs=new Uint8Array([170,170,170,170]),Gs=new Uint8Array([170,170,170,170]),Cs=new Uint8Array([170,170,170,170]),Is=new Uint8Array([170,170,170,170]),ks=new Uint8Array([170,170,170,170]);Object.assign(Fe,{...t,type:2,name:'struct{comptime color1: struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: @Vector(4, f32) = .{ 1, 1, 1, 1 }, comptime defaultValue: struct{comptime comptime_float = 0.441, comptime comptime_float = 0.5859375, comptime comptime_float = 0.62109375, comptime comptime_float = 1} = .{0.441, 0.5859375, 0.62109375, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"} = .{.type = @Vector(4, f32), .minValue = .{ 0, 0, 0, 0 }, .maxValue = .{ 1, 1, 1, 1 }, .defaultValue = .{0.441, 0.5859375, 0.62109375, 1}, .parameterType = "colorRGBA"}, comptime color2: struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: @Vector(4, f32) = .{ 1, 1, 1, 1 }, comptime defaultValue: struct{comptime comptime_float = 0.839, comptime comptime_float = 0.101, comptime comptime_float = 0.1289, comptime comptime_float = 1} = .{0.839, 0.101, 0.1289, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"} = .{.type = @Vector(4, f32), .minValue = .{ 0, 0, 0, 0 }, .maxValue = .{ 1, 1, 1, 1 }, .defaultValue = .{0.839, 0.101, 0.1289, 1}, .parameterType = "colorRGBA"}, comptime color3: struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: @Vector(4, f32) = .{ 1, 1, 1, 1 }, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0.195, comptime comptime_float = 0.3, comptime comptime_float = 1} = .{0, 0.195, 0.3, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"} = .{.type = @Vector(4, f32), .minValue = .{ 0, 0, 0, 0 }, .maxValue = .{ 1, 1, 1, 1 }, .defaultValue = .{0, 0.195, 0.3, 1}, .parameterType = "colorRGBA"}, comptime color4: struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: @Vector(4, f32) = .{ 1, 1, 1, 1 }, comptime defaultValue: struct{comptime comptime_float = 0.983, comptime comptime_float = 0.89, comptime comptime_float = 0.656, comptime comptime_float = 1} = .{0.983, 0.89, 0.656, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"} = .{.type = @Vector(4, f32), .minValue = .{ 0, 0, 0, 0 }, .maxValue = .{ 1, 1, 1, 1 }, .defaultValue = .{0.983, 0.89, 0.656, 1}, .parameterType = "colorRGBA"}, comptime color5: struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: @Vector(4, f32) = .{ 1, 1, 1, 1 }, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1} = .{0, 0, 0, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"} = .{.type = @Vector(4, f32), .minValue = .{ 0, 0, 0, 0 }, .maxValue = .{ 1, 1, 1, 1 }, .defaultValue = .{0, 0, 0, 1}, .parameterType = "colorRGBA"}, comptime color6: struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: @Vector(4, f32) = .{ 1, 1, 1, 1 }, comptime defaultValue: struct{comptime comptime_float = 1, comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1} = .{1, 0, 0, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"} = .{.type = @Vector(4, f32), .minValue = .{ 0, 0, 0, 0 }, .maxValue = .{ 1, 1, 1, 1 }, .defaultValue = .{1, 0, 0, 1}, .parameterType = "colorRGBA"}, comptime color7: struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: @Vector(4, f32) = .{ 1, 1, 1, 1 }, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 1, comptime comptime_float = 0, comptime comptime_float = 1} = .{0, 1, 0, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"} = .{.type = @Vector(4, f32), .minValue = .{ 0, 0, 0, 0 }, .maxValue = .{ 1, 1, 1, 1 }, .defaultValue = .{0, 1, 0, 1}, .parameterType = "colorRGBA"}, comptime color8: struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: @Vector(4, f32) = .{ 1, 1, 1, 1 }, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1, comptime comptime_float = 1} = .{0, 0, 1, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"} = .{.type = @Vector(4, f32), .minValue = .{ 0, 0, 0, 0 }, .maxValue = .{ 1, 1, 1, 1 }, .defaultValue = .{0, 0, 1, 1}, .parameterType = "colorRGBA"}, comptime numColors: struct{comptime type: type = i32, comptime minValue: comptime_int = 2, comptime maxValue: comptime_int = 8, comptime defaultValue: comptime_int = 4} = .{.type = i32, .minValue = 2, .maxValue = 8, .defaultValue = 4}, comptime blur: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 4, comptime defaultValue: comptime_float = 0.5} = .{.type = f32, .minValue = 0, .maxValue = 4, .defaultValue = 0.5}}',length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"color1",structure:Q},{...e,type:8,isRequired:!1,slot:1,name:"color2",structure:X},{...e,type:8,isRequired:!1,slot:2,name:"color3",structure:Z},{...e,type:8,isRequired:!1,slot:3,name:"color4",structure:te},{...e,type:8,isRequired:!1,slot:4,name:"color5",structure:se},{...e,type:8,isRequired:!1,slot:5,name:"color6",structure:ae},{...e,type:8,isRequired:!1,slot:6,name:"color7",structure:ie},{...e,type:8,isRequired:!1,slot:7,name:"color8",structure:ue},{...e,type:8,isRequired:!1,slot:8,name:"numColors",structure:ne},{...e,type:8,isRequired:!1,slot:9,name:"blur",structure:le}],methods:[],template:{memory:{array:Us},slots:{0:{structure:Q,memory:{array:Os},slots:{0:{structure:Ae,memory:{array:o},address:-1431655766}}},1:{structure:X,memory:{array:js},slots:{0:{structure:we,memory:{array:o},address:-1431655766}}},2:{structure:Z,memory:{array:xs},slots:{0:{structure:Oe,memory:{array:o},address:-1431655766}}},3:{structure:te,memory:{array:Ps},slots:{0:{structure:xe,memory:{array:o},address:-1431655766}}},4:{structure:se,memory:{array:Ts},slots:{0:{structure:Te,memory:{array:o},address:-1431655766}}},5:{structure:ae,memory:{array:Bs},slots:{0:{structure:Ge,memory:{array:o},address:-1431655766}}},6:{structure:ie,memory:{array:Gs},slots:{0:{structure:Ie,memory:{array:o},address:-1431655766}}},7:{structure:ue,memory:{array:Cs},slots:{0:{structure:ve,memory:{array:o},address:-1431655766}}},8:{structure:ne,memory:{array:Is},slots:{0:{structure:Ee,memory:{array:o},address:-1431655766}}},9:{structure:le,memory:{array:ks},slots:{0:{structure:Ke,memory:{array:o},address:-1431655766}}}}}},slot:15});Object.assign(pe,{...t,type:11,name:'*struct{comptime color1: struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: @Vector(4, f32) = .{ 1, 1, 1, 1 }, comptime defaultValue: struct{comptime comptime_float = 0.441, comptime comptime_float = 0.5859375, comptime comptime_float = 0.62109375, comptime comptime_float = 1} = .{0.441, 0.5859375, 0.62109375, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"} = .{.type = @Vector(4, f32), .minValue = .{ 0, 0, 0, 0 }, .maxValue = .{ 1, 1, 1, 1 }, .defaultValue = .{0.441, 0.5859375, 0.62109375, 1}, .parameterType = "colorRGBA"}, comptime color2: struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: @Vector(4, f32) = .{ 1, 1, 1, 1 }, comptime defaultValue: struct{comptime comptime_float = 0.839, comptime comptime_float = 0.101, comptime comptime_float = 0.1289, comptime comptime_float = 1} = .{0.839, 0.101, 0.1289, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"} = .{.type = @Vector(4, f32), .minValue = .{ 0, 0, 0, 0 }, .maxValue = .{ 1, 1, 1, 1 }, .defaultValue = .{0.839, 0.101, 0.1289, 1}, .parameterType = "colorRGBA"}, comptime color3: struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: @Vector(4, f32) = .{ 1, 1, 1, 1 }, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0.195, comptime comptime_float = 0.3, comptime comptime_float = 1} = .{0, 0.195, 0.3, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"} = .{.type = @Vector(4, f32), .minValue = .{ 0, 0, 0, 0 }, .maxValue = .{ 1, 1, 1, 1 }, .defaultValue = .{0, 0.195, 0.3, 1}, .parameterType = "colorRGBA"}, comptime color4: struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: @Vector(4, f32) = .{ 1, 1, 1, 1 }, comptime defaultValue: struct{comptime comptime_float = 0.983, comptime comptime_float = 0.89, comptime comptime_float = 0.656, comptime comptime_float = 1} = .{0.983, 0.89, 0.656, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"} = .{.type = @Vector(4, f32), .minValue = .{ 0, 0, 0, 0 }, .maxValue = .{ 1, 1, 1, 1 }, .defaultValue = .{0.983, 0.89, 0.656, 1}, .parameterType = "colorRGBA"}, comptime color5: struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: @Vector(4, f32) = .{ 1, 1, 1, 1 }, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1} = .{0, 0, 0, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"} = .{.type = @Vector(4, f32), .minValue = .{ 0, 0, 0, 0 }, .maxValue = .{ 1, 1, 1, 1 }, .defaultValue = .{0, 0, 0, 1}, .parameterType = "colorRGBA"}, comptime color6: struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: @Vector(4, f32) = .{ 1, 1, 1, 1 }, comptime defaultValue: struct{comptime comptime_float = 1, comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1} = .{1, 0, 0, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"} = .{.type = @Vector(4, f32), .minValue = .{ 0, 0, 0, 0 }, .maxValue = .{ 1, 1, 1, 1 }, .defaultValue = .{1, 0, 0, 1}, .parameterType = "colorRGBA"}, comptime color7: struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: @Vector(4, f32) = .{ 1, 1, 1, 1 }, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 1, comptime comptime_float = 0, comptime comptime_float = 1} = .{0, 1, 0, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"} = .{.type = @Vector(4, f32), .minValue = .{ 0, 0, 0, 0 }, .maxValue = .{ 1, 1, 1, 1 }, .defaultValue = .{0, 1, 0, 1}, .parameterType = "colorRGBA"}, comptime color8: struct{comptime type: type = @Vector(4, f32), comptime minValue: @Vector(4, f32) = .{ 0, 0, 0, 0 }, comptime maxValue: @Vector(4, f32) = .{ 1, 1, 1, 1 }, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 1, comptime comptime_float = 1} = .{0, 0, 1, 1}, comptime parameterType: *const [9:0]u8 = "colorRGBA"} = .{.type = @Vector(4, f32), .minValue = .{ 0, 0, 0, 0 }, .maxValue = .{ 1, 1, 1, 1 }, .defaultValue = .{0, 0, 1, 1}, .parameterType = "colorRGBA"}, comptime numColors: struct{comptime type: type = i32, comptime minValue: comptime_int = 2, comptime maxValue: comptime_int = 8, comptime defaultValue: comptime_int = 4} = .{.type = i32, .minValue = 2, .maxValue = 8, .defaultValue = 4}, comptime blur: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 4, comptime defaultValue: comptime_float = 0.5} = .{.type = f32, .minValue = 0, .maxValue = 4, .defaultValue = 0.5}}',length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Fe}],methods:[],template:null},slot:14});const vs=new Uint8Array([]),Es=new Uint8Array([152,30,16,0]);Object.assign(k,{...t,type:2,name:"struct{comptime channels: comptime_int = 4}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:S}],methods:[],template:{memory:{array:vs},slots:{0:{structure:S,memory:{array:Es},slots:{0:{structure:l,memory:{array:ut},address:1056408}}}}}},slot:60});Object.assign(T,{...t,type:11,name:"*const struct{comptime channels: comptime_int = 4}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:k}],methods:[],template:null},slot:59});const Ks=new Uint8Array([]),Fs=new Uint8Array([170,170,170,170]);Object.assign(De,{...t,type:2,name:"struct{comptime src: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:T}],methods:[],template:{memory:{array:Ks},slots:{0:{structure:T,memory:{array:Fs},slots:{0:{structure:k,memory:{array:o},address:-1431655766}}}}}},slot:17});Object.assign(ye,{...t,type:11,name:"*struct{comptime src: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:De}],methods:[],template:null},slot:16});const Ds=new Uint8Array([]),Ms=new Uint8Array([170,170,170,170]);Object.assign(Me,{...t,type:2,name:"struct{comptime dst: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:T}],methods:[],template:{memory:{array:Ds},slots:{0:{structure:T,memory:{array:Ms},slots:{0:{structure:k,memory:{array:o},address:-1431655766}}}}}},slot:19});Object.assign(fe,{...t,type:11,name:"*struct{comptime dst: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Me}],methods:[],template:null},slot:18});const $s=new Uint8Array([]),Ls=new Uint8Array([]),Hs=new Uint8Array([44,251,15,0]),Js=new Uint8Array([51,113,16,0]),Ns=new Uint8Array([80,111,115,116,101,114,105,122,101,114,0]),Qs=new Uint8Array([108,251,15,0]),Ws=new Uint8Array([36,113,16,0]),Xs=new Uint8Array([80,101,116,114,105,32,76,101,115,107,105,110,101,110,0]),Ys=new Uint8Array([172,251,15,0]),Zs=new Uint8Array([1,0,0,0]),em=new Uint8Array([4,252,15,0]),tm=new Uint8Array([242,112,16,0]),rm=new Uint8Array([80,111,115,116,101,114,105,122,101,115,32,97,110,32,105,109,97,103,101,32,117,115,105,110,103,32,50,32,116,111,32,56,32,115,112,101,99,105,102,105,101,100,32,99,111,108,111,114,115,0]),sm=new Uint8Array([170,170,170,170]),mm=new Uint8Array([170,170,170,170]),am=new Uint8Array([170,170,170,170]);Object.assign(Xe,{...t,type:2,name:"posterize.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:$s}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:L},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:H},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:A},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:J},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:pe},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:ye},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:fe}],methods:[],template:{memory:{array:Ls},slots:{0:{structure:L,memory:{array:Hs},slots:{0:{structure:he,memory:{array:Js},slots:{0:{structure:Ve,memory:{array:Ns},address:1077555}}}}},1:{structure:H,memory:{array:Qs},slots:{0:{structure:ze,memory:{array:Ws},slots:{0:{structure:ge,memory:{array:Xs},address:1077540}}}}},2:{structure:A,memory:{array:Ys},slots:{0:{structure:l,memory:{array:Zs}}}},3:{structure:J,memory:{array:em},slots:{0:{structure:Re,memory:{array:tm},slots:{0:{structure:Se,memory:{array:rm},address:1077490}}}}},4:{structure:pe,memory:{array:sm},slots:{0:{structure:Fe,memory:{array:o},address:-1431655766}}},5:{structure:ye,memory:{array:mm},slots:{0:{structure:De,memory:{array:o},address:-1431655766}}},6:{structure:fe,memory:{array:am},slots:{0:{structure:Me,memory:{array:o},address:-1431655766}}}}}},slot:1});Object.assign(B,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:_}],methods:[],template:null},slot:24});Object.assign($e,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:B}],methods:[],template:null},slot:23});Object.assign(Le,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:$e}],methods:[],template:null},slot:22});Object.assign(d,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:d}],methods:[],template:null},slot:25});const om=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(He,{...t,type:9,name:"posterize.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:l},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:l}],methods:[],template:{memory:{array:om}}},slot:26});Object.assign(C,{...t,name:"bool",length:1,byteSize:1,align:0,instance:{members:[{...e,type:1,isRequired:!1,bitOffset:0,bitSize:1,byteSize:1,structure:C}],methods:[],template:null},slot:27});Object.assign(I,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:I}],methods:[],template:null},slot:28});const im=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),cm=new Uint8Array([]),um=new Uint8Array([8,250,15,0]),nm=new Uint8Array([4,0,0,0]);Object.assign(de,{...t,type:2,name:"posterize.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Le},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:d},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:d},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:He},{...e,type:1,isRequired:!1,bitOffset:168,bitSize:1,byteSize:1,slot:4,name:"premultiplied",structure:C},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:5,name:"offset",structure:I}],methods:[],template:{memory:{array:im}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:B},{...e,type:7,isRequired:!1,name:"FPixel",structure:m},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:A}],methods:[],template:{memory:{array:cm},slots:{0:{structure:A,memory:{array:um},slots:{0:{structure:l,memory:{array:nm}}}}}}},slot:21});const lm=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),pm=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),ym=new Uint8Array([0,0,0,0,0,0,0,0]),at=new Uint8Array([]);Object.assign(v,{...t,type:2,name:"posterize.KernelInput(u8,posterize.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:de}],methods:[],template:{memory:{array:lm},slots:{0:{structure:de,memory:{array:pm},slots:{0:{structure:Le,memory:{array:ym},slots:{0:{structure:$e,memory:{array:at}}}}}}}}},slot:20});Object.assign(Je,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:B}],methods:[],template:null},slot:23});Object.assign(Ne,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Je}],methods:[],template:null},slot:31});const fm=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),dm=new Uint8Array([]),bm=new Uint8Array([8,250,15,0]),Vm=new Uint8Array([4,0,0,0]);Object.assign(be,{...t,type:2,name:"posterize.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Ne},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:d},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:d},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:He},{...e,type:1,isRequired:!1,bitOffset:168,bitSize:1,byteSize:1,slot:4,name:"premultiplied",structure:C},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:5,name:"offset",structure:I}],methods:[],template:{memory:{array:fm}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:B},{...e,type:7,isRequired:!1,name:"FPixel",structure:m},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:A}],methods:[],template:{memory:{array:dm},slots:{0:{structure:A,memory:{array:bm},slots:{0:{structure:l,memory:{array:Vm}}}}}}},slot:30});const hm=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),gm=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),zm=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(E,{...t,type:2,name:"posterize.KernelOutput(u8,posterize.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:be}],methods:[],template:{memory:{array:hm},slots:{0:{structure:be,memory:{array:gm},slots:{0:{structure:Ne,memory:{array:zm},slots:{0:{structure:Je,memory:{array:at}}}}}}}}},slot:29});const Sm=new Uint8Array([193,202,225,62,0,0,22,63,0,0,31,63,0,0,128,63,180,200,86,63,23,217,206,61,93,254,3,62,0,0,128,63,0,0,0,0,20,174,71,62,154,153,153,62,0,0,128,63,227,165,123,63,10,215,99,63,158,239,39,63,0,0,128,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,63,0,0,128,63,0,0,0,0,0,0,0,0,0,0,128,63,0,0,0,0,0,0,128,63,0,0,0,0,0,0,128,63,0,0,0,0,0,0,0,0,0,0,128,63,0,0,128,63,4,0,0,0,0,0,0,63,0,0,0,0,0,0,0,0]);Object.assign(K,{...t,type:2,name:"posterize.KernelParameters(posterize.kernel)",length:1,byteSize:144,align:4,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:128,byteSize:16,slot:0,name:"color1",structure:m},{...e,type:6,isRequired:!1,bitOffset:128,bitSize:128,byteSize:16,slot:1,name:"color2",structure:m},{...e,type:6,isRequired:!1,bitOffset:256,bitSize:128,byteSize:16,slot:2,name:"color3",structure:m},{...e,type:6,isRequired:!1,bitOffset:384,bitSize:128,byteSize:16,slot:3,name:"color4",structure:m},{...e,type:6,isRequired:!1,bitOffset:512,bitSize:128,byteSize:16,slot:4,name:"color5",structure:m},{...e,type:6,isRequired:!1,bitOffset:640,bitSize:128,byteSize:16,slot:5,name:"color6",structure:m},{...e,type:6,isRequired:!1,bitOffset:768,bitSize:128,byteSize:16,slot:6,name:"color7",structure:m},{...e,type:6,isRequired:!1,bitOffset:896,bitSize:128,byteSize:16,slot:7,name:"color8",structure:m},{...e,type:2,isRequired:!1,bitOffset:1024,bitSize:32,byteSize:4,slot:8,name:"numColors",structure:l},{...e,type:4,isRequired:!1,bitOffset:1056,bitSize:32,byteSize:4,slot:9,name:"blur",structure:P}],methods:[],template:{memory:{array:Sm}}},slot:32});Object.assign(Ye,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(posterize.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:61});Object.assign(Ze,{...t,type:7,name:"@typeInfo(@typeInfo(@TypeOf(posterize.createOutput)).Fn.return_type.?).ErrorUnion.error_set!posterize.KernelOutput(u8,posterize.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:E},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:Ye}],methods:[],template:null},slot:37});Object.assign(et,{...t,type:3,name:"createOutput",length:1,byteSize:208,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:1152,bitSize:32,byteSize:4,slot:0,name:"0",structure:d},{...e,type:3,bitOffset:1184,bitSize:32,byteSize:4,slot:1,name:"1",structure:d},{...e,type:6,bitOffset:1216,bitSize:192,byteSize:24,slot:2,name:"2",structure:v},{...e,type:6,bitOffset:0,bitSize:1152,byteSize:144,slot:3,name:"3",structure:K},{...e,type:6,bitOffset:1408,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Ze}],methods:[],template:null},slot:35});Object.assign(tt,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(posterize.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:62});Object.assign(rt,{...t,type:7,name:"@typeInfo(@typeInfo(@TypeOf(posterize.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set!posterize.KernelOutput(u8,posterize.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:E},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:tt}],methods:[],template:null},slot:38});Object.assign(st,{...t,type:3,name:"createPartialOutput",length:1,byteSize:224,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:1152,bitSize:32,byteSize:4,slot:0,name:"0",structure:d},{...e,type:3,bitOffset:1184,bitSize:32,byteSize:4,slot:1,name:"1",structure:d},{...e,type:3,bitOffset:1216,bitSize:32,byteSize:4,slot:2,name:"2",structure:d},{...e,type:3,bitOffset:1248,bitSize:32,byteSize:4,slot:3,name:"3",structure:d},{...e,type:6,bitOffset:1280,bitSize:192,byteSize:24,slot:4,name:"4",structure:v},{...e,type:6,bitOffset:0,bitSize:1152,byteSize:144,slot:5,name:"5",structure:K},{...e,type:6,bitOffset:1472,bitSize:224,byteSize:28,slot:6,name:"retval",structure:rt}],methods:[],template:null},slot:36});const Rm={argStruct:et,thunk:1,name:"createOutput"},_m={argStruct:st,thunk:6,name:"createPartialOutput"};Object.assign(mt,{...t,type:2,name:"posterize",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:at}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:Xe},{...e,type:7,isRequired:!1,name:"Input",structure:v},{...e,type:7,isRequired:!1,name:"Output",structure:E},{...e,type:7,isRequired:!1,name:"Parameters",structure:K}],methods:[Rm,_m],template:null},slot:0});const Am=[_,Ve,he,L,ge,ze,H,l,A,Se,Re,J,P,m,a,s,r,_e,N,h,g,c,Ae,Q,qe,W,we,X,Ue,Y,Oe,Z,je,ee,xe,te,Pe,re,Te,se,Be,me,Ge,ae,Ce,oe,Ie,ie,ke,ce,ve,ue,S,Ee,ne,Ke,le,Fe,pe,k,T,De,ye,Me,fe,Xe,B,$e,Le,d,He,C,I,de,v,Je,Ne,be,E,K,Ye,Ze,et,tt,rt,st,mt],qm=xt(Am),wm=mt.constructor,Um=(async()=>{const p=new URL("posterize-10eaae98.wasm",import.meta.url).href;return fetch(p)})();Pt(Um,{...qm,writeBack:!0});const{createOutput:Cm,createPartialOutput:Om,kernel:We,Input:jm,Output:Im,Parameters:km}=wm;function xm(p,f,u,i,n={},j={}){if(Array.isArray(n)){const R=n;n={};for(const[z,x]of Object.keys(We.inputImages).entries())n[x]=R[z]}const F=new jm(void 0),D=Object.keys(We.inputImages),y=[];let G;for(const R of D){let z=n[R];if(z||(D.length===1&&["data","width","height"].every(x=>!!n[x])?z=n:y.push(R)),F[R]=z,G){if(z.colorSpace!==G)throw new Error(`Input images must all use the same color space: ${G}`)}else G=z.colorSpace}if(y.length>0)throw new Error(`Missing input image${y.length>1?"s":""}: ${y.join(", ")}`);const Qe=Om(p,f,u,i,F,j),ot=R=>{const z=Object.keys(R),x={};for(const it of z){const{data:{typedArray:M},width:ct,height:lt}=R[it];let $;if(typeof ImageData=="function"){const pt=new Uint8ClampedArray(M.buffer,M.byteOffset,M.byteLength);$=new ImageData(pt,ct,i,{colorSpace:G})}else $={data:M,width:ct,height:lt};if(z.length===1)return $;x[it]=$}return x};return Qe[Symbol.toStringTag]==="Promise"?Qe.then(ot):ot(Qe)}function Pm(){const p={};for(let[f,u]of Object.entries(We)){if(f==="parameters"){const i={};for(const[n,j]of Object.entries(u)){const F=i[n]={};for(let[D,y]of Object.entries(j))typeof y=="object"?"string"in y?y=y.string:y=nt(y):typeof y=="function"&&(y=Tm(y.name)),F[D]=y}u=i}else typeof u=="object"&&("string"in u?u=u.string:u=u.valueOf());p[f]=u}return p}function nt(p){const f=[];for(let[u,i]of Object.entries(p))typeof i=="object"&&(i=nt(i)),f[u]=i;return f}function Tm(p){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[p]}onmessage=p=>{const[f,u,...i]=p.data;Bm(f,i).then(([n,j])=>{postMessage([f,u,n],{transfer:j})}).catch(n=>{postMessage(["error",u,n])})};async function Bm(p,f){switch(p){case"getKernelInfo":return[Pm(...f)];case"createPartialImageData":const i=await xm(...f),n=[];if("data"in i&&"width"in i&&"height"in i)n.push(i.data.buffer);else for(const j of Object.entries(i))n.push(i.data.buffer);return[i,n];default:throw new Error(`Unknown function: ${p}`)}}
