import{u as Ie,a as ke,b as xe,c as Ce,d as ve,e as Ee,f as Ke,g as Fe,h as De,i as Te,j as Me,k as $e,l as Be,n as Le,p as Ge,m as He,o as Je,q as Ne,r as Qe}from"./index-cfb20c86.js";Ie();ke();xe();Ce();ve();Ee();Ke();Fe();De();Te();Me();$e();Be();Le();Ge();He();Je();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},d={},Q={},W={},K={},X={},Y={},F={},c={},b={},Z={},ee={},D={},h={},l={},r={},te={},T={},se={},w={},z={},re={},M={},ae={},$={},ie={},B={},L={},U={},O={},me={},G={},ne={},H={},de={},R={},oe={},ue={},u={},le={},_={},A={},ce={},J={},j={},ye={},pe={},N={},V={},P={},he={},Se={},ge={},ze={},Oe={},Re={},qe={};Object.assign(d,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:5});Object.assign(Q,{...t,type:1,name:"[10:0]u8",length:10,byteSize:11,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:4});Object.assign(W,{...t,type:11,name:"*const [10:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[],template:null},slot:3});Object.assign(K,{...t,type:11,name:"**const [10:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:2});Object.assign(X,{...t,type:1,name:"[0:0]u8",length:0,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:8});Object.assign(Y,{...t,type:11,name:"*const [0:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:7});Object.assign(F,{...t,type:11,name:"**const [0:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Y}],methods:[],template:null},slot:6});Object.assign(c,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:c}],methods:[],template:null},slot:10});Object.assign(b,{...t,type:11,name:"*i32",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:c}],methods:[],template:null},slot:9});Object.assign(Z,{...t,type:1,name:"[11:0]u8",length:11,byteSize:12,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:13});Object.assign(ee,{...t,type:11,name:"*const [11:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Z}],methods:[],template:null},slot:12});Object.assign(D,{...t,type:11,name:"**const [11:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ee}],methods:[],template:null},slot:11});Object.assign(h,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:h}],methods:[],template:null},slot:33});Object.assign(l,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:l}],methods:[],template:null},slot:49});Object.assign(r,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:l}],methods:[],template:null},slot:48});const We=new Uint8Array([]),Xe=new Uint8Array([152,2,16,0]),Ye=new Uint8Array([0,0,0,0,0,0,240,191]),Ze=new Uint8Array([128,2,16,0]),v=new Uint8Array([0,0,0,0,0,0,240,63]),et=new Uint8Array([136,2,16,0]),E=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(te,{...t,type:2,name:"struct{comptime type: type = f32, comptime minValue: comptime_float = -1, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:h},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:r}],methods:[],template:{memory:{array:We},slots:{0:{structure:r,memory:{array:Xe},slots:{0:{structure:l,memory:{array:Ye},address:1049240}}},1:{structure:r,memory:{array:Ze},slots:{0:{structure:l,memory:{array:v},address:1049216}}},2:{structure:r,memory:{array:et},slots:{0:{structure:l,memory:{array:E},address:1049224}}}}}},slot:40});Object.assign(T,{...t,type:11,name:"*const struct{comptime type: type = f32, comptime minValue: comptime_float = -1, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:te}],methods:[],template:null},slot:39});Object.assign(se,{...t,type:13,name:"@Vector(3, f32)",length:3,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:h}],methods:[],template:null},slot:34});const tt=new Uint8Array([]),st=new Uint8Array([136,2,16,0]),rt=new Uint8Array([136,2,16,0]),at=new Uint8Array([136,2,16,0]);Object.assign(w,{...t,type:2,name:"struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r}],methods:[],template:{memory:{array:tt},slots:{0:{structure:r,memory:{array:st},slots:{0:{structure:l,memory:{array:E},address:1049224}}},1:{structure:r,memory:{array:rt},slots:{0:{structure:l,memory:{array:E},address:1049224}}},2:{structure:r,memory:{array:at},slots:{0:{structure:l,memory:{array:E},address:1049224}}}}}},slot:51});Object.assign(z,{...t,type:11,name:"*const struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:w}],methods:[],template:null},slot:50});const it=new Uint8Array([]),mt=new Uint8Array([128,2,16,0]),nt=new Uint8Array([128,2,16,0]),ot=new Uint8Array([128,2,16,0]);Object.assign(re,{...t,type:2,name:"struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"0",structure:r},{...e,type:8,isRequired:!1,slot:1,name:"1",structure:r},{...e,type:8,isRequired:!1,slot:2,name:"2",structure:r}],methods:[],template:{memory:{array:it},slots:{0:{structure:r,memory:{array:mt},slots:{0:{structure:l,memory:{array:v},address:1049216}}},1:{structure:r,memory:{array:nt},slots:{0:{structure:l,memory:{array:v},address:1049216}}},2:{structure:r,memory:{array:ot},slots:{0:{structure:l,memory:{array:v},address:1049216}}}}}},slot:53});Object.assign(M,{...t,type:11,name:"*const struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:re}],methods:[],template:null},slot:52});const ut=new Uint8Array([]),lt=new Uint8Array([170,170,170,170]),p=new Uint8Array([]),ct=new Uint8Array([170,170,170,170]),yt=new Uint8Array([170,170,170,170]);Object.assign(ae,{...t,type:2,name:"struct{comptime type: type = @Vector(3, f32), comptime minValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0, 0}, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0, 0}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:se},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:z},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:M},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:z}],methods:[],template:{memory:{array:ut},slots:{0:{structure:z,memory:{array:lt},slots:{0:{structure:w,memory:{array:p},address:-1431655766}}},1:{structure:M,memory:{array:ct},slots:{0:{structure:re,memory:{array:p},address:-1431655766}}},2:{structure:z,memory:{array:yt},slots:{0:{structure:w,memory:{array:p},address:-1431655766}}}}}},slot:42});Object.assign($,{...t,type:11,name:"*const struct{comptime type: type = @Vector(3, f32), comptime minValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0, 0}, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0, 0}}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ae}],methods:[],template:null},slot:41});const pt=new Uint8Array([]),ft=new Uint8Array([170,170,170,170]),bt=new Uint8Array([170,170,170,170]);Object.assign(ie,{...t,type:2,name:"struct{comptime amount: struct{comptime type: type = f32, comptime minValue: comptime_float = -1, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0} = .{.type = f32, .minValue = -1, .maxValue = 1, .defaultValue = 0}, comptime color: struct{comptime type: type = @Vector(3, f32), comptime minValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0, 0}, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0, 0}} = .{.type = @Vector(3, f32), .minValue = .{0, 0, 0}, .maxValue = .{1, 1, 1}, .defaultValue = .{0, 0, 0}}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"amount",structure:T},{...e,type:8,isRequired:!1,slot:1,name:"color",structure:$}],methods:[],template:{memory:{array:pt},slots:{0:{structure:T,memory:{array:ft},slots:{0:{structure:te,memory:{array:p},address:-1431655766}}},1:{structure:$,memory:{array:bt},slots:{0:{structure:ae,memory:{array:p},address:-1431655766}}}}}},slot:15});Object.assign(B,{...t,type:11,name:"*struct{comptime amount: struct{comptime type: type = f32, comptime minValue: comptime_float = -1, comptime maxValue: comptime_float = 1, comptime defaultValue: comptime_float = 0} = .{.type = f32, .minValue = -1, .maxValue = 1, .defaultValue = 0}, comptime color: struct{comptime type: type = @Vector(3, f32), comptime minValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0, 0}, comptime maxValue: struct{comptime comptime_float = 1, comptime comptime_float = 1, comptime comptime_float = 1} = .{1, 1, 1}, comptime defaultValue: struct{comptime comptime_float = 0, comptime comptime_float = 0, comptime comptime_float = 0} = .{0, 0, 0}} = .{.type = @Vector(3, f32), .minValue = .{0, 0, 0}, .maxValue = .{1, 1, 1}, .defaultValue = .{0, 0, 0}}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ie}],methods:[],template:null},slot:14});Object.assign(L,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:c}],methods:[],template:null},slot:54});const dt=new Uint8Array([]),ht=new Uint8Array([144,2,16,0]),St=new Uint8Array([4,0,0,0]);Object.assign(U,{...t,type:2,name:"struct{comptime channels: comptime_int = 4}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:L}],methods:[],template:{memory:{array:dt},slots:{0:{structure:L,memory:{array:ht},slots:{0:{structure:c,memory:{array:St},address:1049232}}}}}},slot:44});Object.assign(O,{...t,type:11,name:"*const struct{comptime channels: comptime_int = 4}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:U}],methods:[],template:null},slot:43});const gt=new Uint8Array([]),zt=new Uint8Array([170,170,170,170]);Object.assign(me,{...t,type:2,name:"struct{comptime src: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:O}],methods:[],template:{memory:{array:gt},slots:{0:{structure:O,memory:{array:zt},slots:{0:{structure:U,memory:{array:p},address:-1431655766}}}}}},slot:17});Object.assign(G,{...t,type:11,name:"*struct{comptime src: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:me}],methods:[],template:null},slot:16});const Ot=new Uint8Array([]),Rt=new Uint8Array([170,170,170,170]);Object.assign(ne,{...t,type:2,name:"struct{comptime dst: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:O}],methods:[],template:{memory:{array:Ot},slots:{0:{structure:O,memory:{array:Rt},slots:{0:{structure:U,memory:{array:p},address:-1431655766}}}}}},slot:19});Object.assign(H,{...t,type:11,name:"*struct{comptime dst: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:ne}],methods:[],template:null},slot:18});const qt=new Uint8Array([]),wt=new Uint8Array([]),_t=new Uint8Array([12,249,15,0]),At=new Uint8Array([243,21,16,0]),Ut=new Uint8Array([65,108,108,101,110,32,67,104,111,117,0]),jt=new Uint8Array([76,249,15,0]),Vt=new Uint8Array([242,21,16,0]),Pt=new Uint8Array([0]),It=new Uint8Array([140,249,15,0]),kt=new Uint8Array([1,0,0,0]),xt=new Uint8Array([228,249,15,0]),Ct=new Uint8Array([230,21,16,0]),vt=new Uint8Array([116,105,110,116,32,101,102,102,101,99,116,0]),Et=new Uint8Array([170,170,170,170]),Kt=new Uint8Array([170,170,170,170]),Ft=new Uint8Array([170,170,170,170]);Object.assign(de,{...t,type:2,name:"tint.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:qt}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:K},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:F},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:b},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:D},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:B},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:G},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:H}],methods:[],template:{memory:{array:wt},slots:{0:{structure:K,memory:{array:_t},slots:{0:{structure:W,memory:{array:At},slots:{0:{structure:Q,memory:{array:Ut},address:1054195}}}}},1:{structure:F,memory:{array:jt},slots:{0:{structure:Y,memory:{array:Vt},slots:{0:{structure:X,memory:{array:Pt},address:1054194}}}}},2:{structure:b,memory:{array:It},slots:{0:{structure:c,memory:{array:kt}}}},3:{structure:D,memory:{array:xt},slots:{0:{structure:ee,memory:{array:Ct},slots:{0:{structure:Z,memory:{array:vt},address:1054182}}}}},4:{structure:B,memory:{array:Et},slots:{0:{structure:ie,memory:{array:p},address:-1431655766}}},5:{structure:G,memory:{array:Kt},slots:{0:{structure:me,memory:{array:p},address:-1431655766}}},6:{structure:H,memory:{array:Ft},slots:{0:{structure:ne,memory:{array:p},address:-1431655766}}}}}},slot:1});Object.assign(R,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:d}],methods:[],template:null},slot:24});Object.assign(oe,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:R}],methods:[],template:null},slot:23});Object.assign(ue,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:oe}],methods:[],template:null},slot:22});Object.assign(u,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:u}],methods:[],template:null},slot:25});const Dt=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(le,{...t,type:9,name:"tint.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:c},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:c}],methods:[],template:{memory:{array:Dt}}},slot:26});Object.assign(_,{...t,name:"bool",length:1,byteSize:1,align:0,instance:{members:[{...e,type:1,isRequired:!1,bitOffset:0,bitSize:1,byteSize:1,structure:_}],methods:[],template:null},slot:27});Object.assign(A,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:A}],methods:[],template:null},slot:28});Object.assign(ce,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:h}],methods:[],template:null},slot:45});const Tt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Mt=new Uint8Array([]),$t=new Uint8Array([104,253,15,0]),Bt=new Uint8Array([4,0,0,0]);Object.assign(J,{...t,type:2,name:"tint.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:ue},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:le},{...e,type:1,isRequired:!1,bitOffset:168,bitSize:1,byteSize:1,slot:4,name:"premultiplied",structure:_},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:5,name:"offset",structure:A}],methods:[],template:{memory:{array:Tt}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:R},{...e,type:7,isRequired:!1,name:"FPixel",structure:ce},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:b}],methods:[],template:{memory:{array:Mt},slots:{0:{structure:b,memory:{array:$t},slots:{0:{structure:c,memory:{array:Bt}}}}}}},slot:21});const Lt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Gt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ht=new Uint8Array([0,0,0,0,0,0,0,0]),we=new Uint8Array([]);Object.assign(j,{...t,type:2,name:"tint.KernelInput(u8,tint.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:J}],methods:[],template:{memory:{array:Lt},slots:{0:{structure:J,memory:{array:Gt},slots:{0:{structure:ue,memory:{array:Ht},slots:{0:{structure:oe,memory:{array:we}}}}}}}}},slot:20});Object.assign(ye,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:R}],methods:[],template:null},slot:23});Object.assign(pe,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:ye}],methods:[],template:null},slot:31});const Jt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Nt=new Uint8Array([]),Qt=new Uint8Array([104,253,15,0]),Wt=new Uint8Array([4,0,0,0]);Object.assign(N,{...t,type:2,name:"tint.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:pe},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:le},{...e,type:1,isRequired:!1,bitOffset:168,bitSize:1,byteSize:1,slot:4,name:"premultiplied",structure:_},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:5,name:"offset",structure:A}],methods:[],template:{memory:{array:Jt}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:R},{...e,type:7,isRequired:!1,name:"FPixel",structure:ce},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:b}],methods:[],template:{memory:{array:Nt},slots:{0:{structure:b,memory:{array:Qt},slots:{0:{structure:c,memory:{array:Wt}}}}}}},slot:30});const Xt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Yt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Zt=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(V,{...t,type:2,name:"tint.KernelOutput(u8,tint.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:N}],methods:[],template:{memory:{array:Xt},slots:{0:{structure:N,memory:{array:Yt},slots:{0:{structure:pe,memory:{array:Zt},slots:{0:{structure:ye,memory:{array:we}}}}}}}}},slot:29});const es=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);Object.assign(P,{...t,type:2,name:"tint.KernelParameters(tint.kernel)",length:1,byteSize:32,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:0,name:"amount",structure:h},{...e,type:6,isRequired:!1,bitOffset:0,bitSize:96,byteSize:16,slot:1,name:"color",structure:se}],methods:[],template:{memory:{array:es}}},slot:32});Object.assign(he,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(tint.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:46});Object.assign(Se,{...t,type:7,name:"@typeInfo(@typeInfo(@TypeOf(tint.createOutput)).Fn.return_type.?).ErrorUnion.error_set!tint.KernelOutput(u8,tint.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:V},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:he}],methods:[],template:null},slot:37});Object.assign(ge,{...t,type:3,name:"createOutput",length:1,byteSize:96,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:u},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:u},{...e,type:6,bitOffset:320,bitSize:192,byteSize:24,slot:2,name:"2",structure:j},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:3,name:"3",structure:P},{...e,type:6,bitOffset:512,bitSize:224,byteSize:28,slot:4,name:"retval",structure:Se}],methods:[],template:null},slot:35});Object.assign(ze,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(tint.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:47});Object.assign(Oe,{...t,type:7,name:"@typeInfo(@typeInfo(@TypeOf(tint.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set!tint.KernelOutput(u8,tint.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:V},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:ze}],methods:[],template:null},slot:38});Object.assign(Re,{...t,type:3,name:"createPartialOutput",length:1,byteSize:112,align:4,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:256,bitSize:32,byteSize:4,slot:0,name:"0",structure:u},{...e,type:3,bitOffset:288,bitSize:32,byteSize:4,slot:1,name:"1",structure:u},{...e,type:3,bitOffset:320,bitSize:32,byteSize:4,slot:2,name:"2",structure:u},{...e,type:3,bitOffset:352,bitSize:32,byteSize:4,slot:3,name:"3",structure:u},{...e,type:6,bitOffset:384,bitSize:192,byteSize:24,slot:4,name:"4",structure:j},{...e,type:6,bitOffset:0,bitSize:256,byteSize:32,slot:5,name:"5",structure:P},{...e,type:6,bitOffset:576,bitSize:224,byteSize:28,slot:6,name:"retval",structure:Oe}],methods:[],template:null},slot:36});const ts={argStruct:ge,thunk:6,name:"createOutput"},ss={argStruct:Re,thunk:2,name:"createPartialOutput"};Object.assign(qe,{...t,type:2,name:"tint",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:we}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:de},{...e,type:7,isRequired:!1,name:"Input",structure:j},{...e,type:7,isRequired:!1,name:"Output",structure:V},{...e,type:7,isRequired:!1,name:"Parameters",structure:P}],methods:[ts,ss],template:null},slot:0});const rs=[d,Q,W,K,X,Y,F,c,b,Z,ee,D,h,l,r,te,T,se,w,z,re,M,ae,$,ie,B,L,U,O,me,G,ne,H,de,R,oe,ue,u,le,_,A,ce,J,j,ye,pe,N,V,P,he,Se,ge,ze,Oe,Re,qe],as=Ne(rs),is=qe.constructor,ms=(async()=>{const m=new URL("tint-38646369.wasm",import.meta.url).href;return fetch(m)})();Qe(ms,{...as,writeBack:!0});const{createOutput:fs,createPartialOutput:ns,kernel:be,Input:os,Output:bs,Parameters:ds}=is;function us(m,o,a,s,i={},S={}){if(Array.isArray(i)){const f=i;i={};for(const[y,g]of Object.keys(be.inputImages).entries())i[g]=f[y]}const I=new os(void 0),k=Object.keys(be.inputImages),n=[];let q;for(const f of k){let y=i[f];if(y||(k.length===1&&["data","width","height"].every(g=>!!i[g])?y=i:n.push(f)),I[f]=y,q){if(y.colorSpace!==q)throw new Error(`Input images must all use the same color space: ${q}`)}else q=y.colorSpace}if(n.length>0)throw new Error(`Missing input image${n.length>1?"s":""}: ${n.join(", ")}`);const fe=ns(m,o,a,s,I,S),_e=f=>{const y=Object.keys(f),g={};for(const Ae of y){const{data:{typedArray:x},width:Ue,height:Ve}=f[Ae];let C;if(typeof ImageData=="function"){const Pe=new Uint8ClampedArray(x.buffer,x.byteOffset,x.byteLength);C=new ImageData(Pe,Ue,s,{colorSpace:q})}else C={data:x,width:Ue,height:Ve};if(y.length===1)return C;g[Ae]=C}return g};return fe[Symbol.toStringTag]==="Promise"?fe.then(_e):_e(fe)}function ls(){const m={};for(let[o,a]of Object.entries(be)){if(o==="parameters"){const s={};for(const[i,S]of Object.entries(a)){const I=s[i]={};for(let[k,n]of Object.entries(S))typeof n=="object"?"string"in n?n=n.string:n=je(n):typeof n=="function"&&(n=cs(n.name)),I[k]=n}a=s}else typeof a=="object"&&("string"in a?a=a.string:a=a.valueOf());m[o]=a}return m}function je(m){const o=[];for(let[a,s]of Object.entries(m))typeof s=="object"&&(s=je(s)),o[a]=s;return o}function cs(m){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[m]}onmessage=m=>{const[o,a,...s]=m.data;ys(o,s).then(([i,S])=>{postMessage([o,a,i],{transfer:S})}).catch(i=>{postMessage(["error",a,i])})};async function ys(m,o){switch(m){case"getKernelInfo":return[ls(...o)];case"createPartialImageData":const s=await us(...o),i=[];if("data"in s&&"width"in s&&"height"in s)i.push(s.data.buffer);else for(const S of Object.entries(s))i.push(s.data.buffer);return[s,i];default:throw new Error(`Unknown function: ${m}`)}}
