<languageVersion : 1.0;>

kernel simple
<   namespace : "pb2zig";
    vendor : "Chung Leong";
    version : 1;
    description : "";
>
{
   parameter float strength
    <
        minValue: 0;
        maxValue: 100;
        defaultValue: 4;
    >;

    input image4 src;
    output pixel4 dst;
    const float4x4 toYIQA = float4x4(
		0.299000, 0.587000,  0.114000,  0.0,
		0.595716, -0.274453, -0.321263, 0.0,
		0.211456, -0.522591, 0.311350,  0.0,
		0.0,      0.0,       0.0,       1.0
	);
    const float4x4 toRGBA = float4x4(
		0.999867, 0.956443,  0.620797,  0.0,
		1.000139, -0.272276, -0.647143, 0.0,
		0.999634, -1.106583, 1.703990,   0.0,
		0.0,      0.0,       0.0,       1.0
	);

    float hypot(float a, float b) {
        return sqrt(a * a + b * b);
    }

    void
    evaluatePixel()
    {
        float4 pRGBA = sampleNearest(src, outCoord());
        // convert to YIQA color space
        float4 pYIQA = toYIQA * pRGBA;

        // the south-west quadrance is greenish
        // see https://en.wikipedia.org/wiki/YIQ
		if(pYIQA[1] < 0 && pYIQA[2] < 0 && pYIQA[0] > 0.01) {
            // reduces alpha based on how green and bright it is
			pYIQA[3] = 1.0 - hypot(pYIQA[1], pYIQA[2]) * pYIQA[0] * strength;
            // discard chroma component
			pYIQA[1] = 0;
            pYIQA[2] = 0;
    	}

        // convert back from YIQA
        dst = toRGBA * pYIQA;
    }
}
