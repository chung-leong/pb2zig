import{u as ze,a as Oe,b as Re,c as qe,d as we,e as je,f as Ae,g as Ue,h as Pe,i as Ve,j as _e,k as Ie,l as ke,n as xe,o as ve,m as Ee,p as Ce,q as Ke,r as Fe}from"./index-9f315e7a.js";ze();Oe();Re();qe();we();je();Ae();Ue();Pe();Ve();_e();Ie();ke();xe();ve();Ee();Ce();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},b={},M={},$={},I={},B={},L={},k={},i={},p={},G={},H={},x={},c={},J={},v={},N={},E={},q={},S={},Q={},C={},W={},K={},ie={},g={},X={},Y={},o={},Z={},O={},R={},F={},ee={},D={},w={},te={},se={},T={},j={},A={},ne={},me={},ue={},oe={},le={},ce={},ye={};Object.assign(b,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:5});Object.assign(M,{...t,type:1,name:"[10:0]u8",length:10,byteSize:11,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:4});Object.assign($,{...t,type:11,name:"*const [10:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:M}],methods:[],template:null},slot:3});Object.assign(I,{...t,type:11,name:"**const [10:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:$}],methods:[],template:null},slot:2});Object.assign(B,{...t,type:1,name:"[13:0]u8",length:13,byteSize:14,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:8});Object.assign(L,{...t,type:11,name:"*const [13:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:B}],methods:[],template:null},slot:7});Object.assign(k,{...t,type:11,name:"**const [13:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:L}],methods:[],template:null},slot:6});Object.assign(i,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:i}],methods:[],template:null},slot:10});Object.assign(p,{...t,type:11,name:"*i32",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:i}],methods:[],template:null},slot:9});Object.assign(G,{...t,type:1,name:"[43:0]u8",length:43,byteSize:44,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:13});Object.assign(H,{...t,type:11,name:"*const [43:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:G}],methods:[],template:null},slot:12});Object.assign(x,{...t,type:11,name:"**const [43:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[],template:null},slot:11});Object.assign(c,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:i}],methods:[],template:null},slot:45});const De=new Uint8Array([]),Te=new Uint8Array([140,2,16,0]),Me=new Uint8Array([1,0,0,0]),$e=new Uint8Array([136,2,16,0]),Be=new Uint8Array([128,0,0,0]),Le=new Uint8Array([132,2,16,0]),Ge=new Uint8Array([64,0,0,0]);Object.assign(J,{...t,type:2,name:"struct{comptime type: type = i32, comptime minValue: comptime_int = 1, comptime maxValue: comptime_int = 128, comptime defaultValue: comptime_int = 64}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:i},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:c},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:c},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:c}],methods:[],template:{memory:{array:De},slots:{0:{structure:c,memory:{array:Te},slots:{0:{structure:i,memory:{array:Me},address:1049228}}},1:{structure:c,memory:{array:$e},slots:{0:{structure:i,memory:{array:Be},address:1049224}}},2:{structure:c,memory:{array:Le},slots:{0:{structure:i,memory:{array:Ge},address:1049220}}}}}},slot:38});Object.assign(v,{...t,type:11,name:"*const struct{comptime type: type = i32, comptime minValue: comptime_int = 1, comptime maxValue: comptime_int = 128, comptime defaultValue: comptime_int = 64}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:J}],methods:[],template:null},slot:37});const He=new Uint8Array([]),Je=new Uint8Array([170,170,170,170]),h=new Uint8Array([]);Object.assign(N,{...t,type:2,name:"struct{comptime palette: struct{comptime type: type = i32, comptime minValue: comptime_int = 1, comptime maxValue: comptime_int = 128, comptime defaultValue: comptime_int = 64} = .{.type = i32, .minValue = 1, .maxValue = 128, .defaultValue = 64}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"palette",structure:v}],methods:[],template:{memory:{array:He},slots:{0:{structure:v,memory:{array:Je},slots:{0:{structure:J,memory:{array:h},address:-1431655766}}}}}},slot:15});Object.assign(E,{...t,type:11,name:"*struct{comptime palette: struct{comptime type: type = i32, comptime minValue: comptime_int = 1, comptime maxValue: comptime_int = 128, comptime defaultValue: comptime_int = 64} = .{.type = i32, .minValue = 1, .maxValue = 128, .defaultValue = 64}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:N}],methods:[],template:null},slot:14});const Ne=new Uint8Array([]),Qe=new Uint8Array([128,2,16,0]),We=new Uint8Array([4,0,0,0]);Object.assign(q,{...t,type:2,name:"struct{comptime channels: comptime_int = 4}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:c}],methods:[],template:{memory:{array:Ne},slots:{0:{structure:c,memory:{array:Qe},slots:{0:{structure:i,memory:{array:We},address:1049216}}}}}},slot:40});Object.assign(S,{...t,type:11,name:"*const struct{comptime channels: comptime_int = 4}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:q}],methods:[],template:null},slot:39});const Xe=new Uint8Array([]),Ye=new Uint8Array([170,170,170,170]);Object.assign(Q,{...t,type:2,name:"struct{comptime src1: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src1",structure:S}],methods:[],template:{memory:{array:Xe},slots:{0:{structure:S,memory:{array:Ye},slots:{0:{structure:q,memory:{array:h},address:-1431655766}}}}}},slot:17});Object.assign(C,{...t,type:11,name:"*struct{comptime src1: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[],template:null},slot:16});const Ze=new Uint8Array([]),et=new Uint8Array([170,170,170,170]);Object.assign(W,{...t,type:2,name:"struct{comptime dst: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:S}],methods:[],template:{memory:{array:Ze},slots:{0:{structure:S,memory:{array:et},slots:{0:{structure:q,memory:{array:h},address:-1431655766}}}}}},slot:19});Object.assign(K,{...t,type:11,name:"*struct{comptime dst: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:18});const tt=new Uint8Array([]),st=new Uint8Array([]),rt=new Uint8Array([44,250,15,0]),at=new Uint8Array([124,13,16,0]),it=new Uint8Array([116,104,101,108,97,98,46,111,114,103,0]),nt=new Uint8Array([108,250,15,0]),mt=new Uint8Array([110,13,16,0]),ut=new Uint8Array([69,100,117,97,114,100,111,46,67,111,115,116,97,0]),ot=new Uint8Array([172,250,15,0]),lt=new Uint8Array([1,0,0,0]),ct=new Uint8Array([4,251,15,0]),yt=new Uint8Array([66,13,16,0]),pt=new Uint8Array([77,97,110,105,112,117,108,97,116,101,115,32,116,104,101,32,67,111,108,111,114,32,80,97,108,101,116,116,101,32,111,102,32,116,104,101,32,98,105,116,109,97,112,0]),bt=new Uint8Array([170,170,170,170]),ft=new Uint8Array([170,170,170,170]),dt=new Uint8Array([170,170,170,170]);Object.assign(ie,{...t,type:2,name:"dynamic-palette.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:tt}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:I},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:k},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:p},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:x},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:E},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:C},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:K}],methods:[],template:{memory:{array:st},slots:{0:{structure:I,memory:{array:rt},slots:{0:{structure:$,memory:{array:at},slots:{0:{structure:M,memory:{array:it},address:1052028}}}}},1:{structure:k,memory:{array:nt},slots:{0:{structure:L,memory:{array:mt},slots:{0:{structure:B,memory:{array:ut},address:1052014}}}}},2:{structure:p,memory:{array:ot},slots:{0:{structure:i,memory:{array:lt}}}},3:{structure:x,memory:{array:ct},slots:{0:{structure:H,memory:{array:yt},slots:{0:{structure:G,memory:{array:pt},address:1051970}}}}},4:{structure:E,memory:{array:bt},slots:{0:{structure:N,memory:{array:h},address:-1431655766}}},5:{structure:C,memory:{array:ft},slots:{0:{structure:Q,memory:{array:h},address:-1431655766}}},6:{structure:K,memory:{array:dt},slots:{0:{structure:W,memory:{array:h},address:-1431655766}}}}}},slot:1});Object.assign(g,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:b}],methods:[],template:null},slot:24});Object.assign(X,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:g}],methods:[],template:null},slot:23});Object.assign(Y,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:X}],methods:[],template:null},slot:22});Object.assign(o,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:o}],methods:[],template:null},slot:25});const ht=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(Z,{...t,type:9,name:"dynamic-palette.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:i},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:i}],methods:[],template:{memory:{array:ht}}},slot:26});Object.assign(O,{...t,name:"bool",length:1,byteSize:1,align:0,instance:{members:[{...e,type:1,isRequired:!1,bitOffset:0,bitSize:1,byteSize:1,structure:O}],methods:[],template:null},slot:27});Object.assign(R,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:R}],methods:[],template:null},slot:28});Object.assign(F,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:F}],methods:[],template:null},slot:44});Object.assign(ee,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:F}],methods:[],template:null},slot:41});const St=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),gt=new Uint8Array([]),zt=new Uint8Array([104,253,15,0]),Ot=new Uint8Array([4,0,0,0]);Object.assign(D,{...t,type:2,name:"dynamic-palette.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Y},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:o},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:o},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Z},{...e,type:1,isRequired:!1,bitOffset:168,bitSize:1,byteSize:1,slot:4,name:"premultiplied",structure:O},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:5,name:"offset",structure:R}],methods:[],template:{memory:{array:St}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:g},{...e,type:7,isRequired:!1,name:"FPixel",structure:ee},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:gt},slots:{0:{structure:p,memory:{array:zt},slots:{0:{structure:i,memory:{array:Ot}}}}}}},slot:21});const Rt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),qt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),wt=new Uint8Array([0,0,0,0,0,0,0,0]),pe=new Uint8Array([]);Object.assign(w,{...t,type:2,name:"dynamic-palette.KernelInput(u8,dynamic-palette.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src1",structure:D}],methods:[],template:{memory:{array:Rt},slots:{0:{structure:D,memory:{array:qt},slots:{0:{structure:Y,memory:{array:wt},slots:{0:{structure:X,memory:{array:pe}}}}}}}}},slot:20});Object.assign(te,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:g}],methods:[],template:null},slot:23});Object.assign(se,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:te}],methods:[],template:null},slot:31});const jt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),At=new Uint8Array([]),Ut=new Uint8Array([104,253,15,0]),Pt=new Uint8Array([4,0,0,0]);Object.assign(T,{...t,type:2,name:"dynamic-palette.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:se},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:o},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:o},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:Z},{...e,type:1,isRequired:!1,bitOffset:168,bitSize:1,byteSize:1,slot:4,name:"premultiplied",structure:O},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:5,name:"offset",structure:R}],methods:[],template:{memory:{array:jt}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:g},{...e,type:7,isRequired:!1,name:"FPixel",structure:ee},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:p}],methods:[],template:{memory:{array:At},slots:{0:{structure:p,memory:{array:Ut},slots:{0:{structure:i,memory:{array:Pt}}}}}}},slot:30});const Vt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),_t=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),It=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(j,{...t,type:2,name:"dynamic-palette.KernelOutput(u8,dynamic-palette.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:T}],methods:[],template:{memory:{array:Vt},slots:{0:{structure:T,memory:{array:_t},slots:{0:{structure:se,memory:{array:It},slots:{0:{structure:te,memory:{array:pe}}}}}}}}},slot:29});const kt=new Uint8Array([64,0,0,0]);Object.assign(A,{...t,type:2,name:"dynamic-palette.KernelParameters(dynamic-palette.kernel)",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"palette",structure:i}],methods:[],template:{memory:{array:kt}}},slot:32});Object.assign(ne,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(dynamic-palette.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:42});Object.assign(me,{...t,type:7,name:"@typeInfo(@typeInfo(@TypeOf(dynamic-palette.createOutput)).Fn.return_type.?).ErrorUnion.error_set!dynamic-palette.KernelOutput(u8,dynamic-palette.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:j},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:ne}],methods:[],template:null},slot:35});Object.assign(ue,{...t,type:3,name:"createOutput",length:1,byteSize:64,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"0",structure:o},{...e,type:3,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"1",structure:o},{...e,type:6,bitOffset:64,bitSize:192,byteSize:24,slot:2,name:"2",structure:w},{...e,type:6,bitOffset:256,bitSize:32,byteSize:4,slot:3,name:"3",structure:A},{...e,type:6,bitOffset:288,bitSize:224,byteSize:28,slot:4,name:"retval",structure:me}],methods:[],template:null},slot:33});Object.assign(oe,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(dynamic-palette.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:43});Object.assign(le,{...t,type:7,name:"@typeInfo(@typeInfo(@TypeOf(dynamic-palette.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set!dynamic-palette.KernelOutput(u8,dynamic-palette.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:j},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:oe}],methods:[],template:null},slot:36});Object.assign(ce,{...t,type:3,name:"createPartialOutput",length:1,byteSize:72,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"0",structure:o},{...e,type:3,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"1",structure:o},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:2,name:"2",structure:o},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:3,name:"3",structure:o},{...e,type:6,bitOffset:128,bitSize:192,byteSize:24,slot:4,name:"4",structure:w},{...e,type:6,bitOffset:320,bitSize:32,byteSize:4,slot:5,name:"5",structure:A},{...e,type:6,bitOffset:352,bitSize:224,byteSize:28,slot:6,name:"retval",structure:le}],methods:[],template:null},slot:34});const xt={argStruct:ue,thunk:7,name:"createOutput"},vt={argStruct:ce,thunk:2,name:"createPartialOutput"};Object.assign(ye,{...t,type:2,name:"dynamic-palette",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:pe}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:ie},{...e,type:7,isRequired:!1,name:"Input",structure:w},{...e,type:7,isRequired:!1,name:"Output",structure:j},{...e,type:7,isRequired:!1,name:"Parameters",structure:A}],methods:[xt,vt],template:null},slot:0});const Et=[b,M,$,I,B,L,k,i,p,G,H,x,c,J,v,N,E,q,S,Q,C,W,K,ie,g,X,Y,o,Z,O,R,F,ee,D,w,te,se,T,j,A,ne,me,ue,oe,le,ce,ye],Ct=Ke(Et),Kt=ye.constructor,Ft=(async()=>{const n=new URL("dynamic-palette-a00217e0.wasm",import.meta.url).href;return fetch(n)})();Fe(Ft,{...Ct,writeBack:!0});const{createOutput:Ht,createPartialOutput:Dt,kernel:ae,Input:Tt,Output:Jt,Parameters:Nt}=Kt;function Mt(n,u,r,s,a={},f={}){if(Array.isArray(a)){const y=a;a={};for(const[l,d]of Object.keys(ae.inputImages).entries())a[d]=y[l]}const U=new Tt(void 0),P=Object.keys(ae.inputImages),m=[];let z;for(const y of P){let l=a[y];if(l||(P.length===1&&["data","width","height"].every(d=>!!a[d])?l=a:m.push(y)),U[y]=l,z){if(l.colorSpace!==z)throw new Error(`Input images must all use the same color space: ${z}`)}else z=l.colorSpace}if(m.length>0)throw new Error(`Missing input image${m.length>1?"s":""}: ${m.join(", ")}`);const re=Dt(n,u,r,s,U,f),be=y=>{const l=Object.keys(y),d={};for(const fe of l){const{data:{typedArray:V},width:de,height:Se}=y[fe];let _;if(typeof ImageData=="function"){const ge=new Uint8ClampedArray(V.buffer,V.byteOffset,V.byteLength);_=new ImageData(ge,de,s,{colorSpace:z})}else _={data:V,width:de,height:Se};if(l.length===1)return _;d[fe]=_}return d};return re[Symbol.toStringTag]==="Promise"?re.then(be):be(re)}function $t(){const n={};for(let[u,r]of Object.entries(ae)){if(u==="parameters"){const s={};for(const[a,f]of Object.entries(r)){const U=s[a]={};for(let[P,m]of Object.entries(f))typeof m=="object"?"string"in m?m=m.string:m=he(m):typeof m=="function"&&(m=Bt(m.name)),U[P]=m}r=s}else typeof r=="object"&&("string"in r?r=r.string:r=r.valueOf());n[u]=r}return n}function he(n){const u=[];for(let[r,s]of Object.entries(n))typeof s=="object"&&(s=he(s)),u[r]=s;return u}function Bt(n){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[n]}onmessage=n=>{const[u,r,...s]=n.data;Lt(u,s).then(([a,f])=>{postMessage([u,r,a],{transfer:f})}).catch(a=>{postMessage(["error",r,a])})};async function Lt(n,u){switch(n){case"getKernelInfo":return[$t(...u)];case"createPartialImageData":const s=await Mt(...u),a=[];if("data"in s&&"width"in s&&"height"in s)a.push(s.data.buffer);else for(const f of Object.entries(s))a.push(s.data.buffer);return[s,a];default:throw new Error(`Unknown function: ${n}`)}}
