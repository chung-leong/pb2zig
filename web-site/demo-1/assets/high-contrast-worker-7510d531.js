import{u as Re,a as qe,b as we,c as Ae,d as Ue,e as je,f as Ve,g as Pe,h as _e,i as Ie,j as ke,k as xe,l as ve,m as Ce,n as Ee,o as Ke,p as Fe,q as De,r as Te}from"./index-9f315e7a.js";Re();qe();we();Ae();Ue();je();Ve();Pe();_e();Ie();ke();xe();ve();Ce();Ee();Ke();Fe();const t={constructor:null,typedArray:null,type:0,name:void 0,byteSize:4,align:2,isConst:!1,hasPointer:!1,instance:{members:[],methods:[],template:null},static:{members:[],methods:[],template:null},options:{runtimeSafety:!1}},e={type:0,isRequired:!0},z={},A={},U={},S={},i={},b={},G={},H={},K={},O={},f={},p={},J={},F={},c={},N={},D={},Q={},T={},P={},R={},W={},M={},X={},$={},ne={},q={},Y={},Z={},u={},ee={},j={},V={},te={},B={},_={},se={},re={},L={},I={},k={},me={},oe={},ue={},le={},ce={},ye={},pe={};Object.assign(z,{...t,name:"u8",length:1,byteSize:1,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:8,byteSize:1,structure:z}],methods:[],template:null},slot:5});Object.assign(A,{...t,type:1,name:"[14:0]u8",length:14,byteSize:15,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:z}],methods:[],template:null},slot:4});Object.assign(U,{...t,type:11,name:"*const [14:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:A}],methods:[],template:null},slot:3});Object.assign(S,{...t,type:11,name:"**const [14:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:U}],methods:[],template:null},slot:2});Object.assign(i,{...t,name:"i32",length:1,instance:{members:[{...e,type:2,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:i}],methods:[],template:null},slot:7});Object.assign(b,{...t,type:11,name:"*i32",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:i}],methods:[],template:null},slot:6});Object.assign(G,{...t,type:1,name:"[85:0]u8",length:85,byteSize:86,align:0,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:z}],methods:[],template:null},slot:10});Object.assign(H,{...t,type:11,name:"*const [85:0]u8",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:G}],methods:[],template:null},slot:9});Object.assign(K,{...t,type:11,name:"**const [85:0]u8",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:H}],methods:[],template:null},slot:8});Object.assign(O,{...t,name:"f32",length:1,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:30});Object.assign(f,{...t,name:"f64",length:1,byteSize:8,align:3,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:64,byteSize:8,structure:f}],methods:[],template:null},slot:45});Object.assign(p,{...t,type:11,name:"*const f64",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:f}],methods:[],template:null},slot:44});const Me=new Uint8Array([]),$e=new Uint8Array([80,30,16,0]),Be=new Uint8Array([0,0,0,0,0,0,0,0]),Le=new Uint8Array([72,30,16,0]),Ge=new Uint8Array([0,0,0,0,0,224,111,64]),He=new Uint8Array([64,30,16,0]),Je=new Uint8Array([0,0,0,0,0,0,96,64]);Object.assign(J,{...t,type:2,name:"struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 255, comptime defaultValue: comptime_float = 128}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:O},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:p},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:p},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:p}],methods:[],template:{memory:{array:Me},slots:{0:{structure:p,memory:{array:$e},slots:{0:{structure:f,memory:{array:Be},address:1056336}}},1:{structure:p,memory:{array:Le},slots:{0:{structure:f,memory:{array:Ge},address:1056328}}},2:{structure:p,memory:{array:He},slots:{0:{structure:f,memory:{array:Je},address:1056320}}}}}},slot:36});Object.assign(F,{...t,type:11,name:"*const struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 255, comptime defaultValue: comptime_float = 128}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:J}],methods:[],template:null},slot:35});Object.assign(c,{...t,type:11,name:"*const i32",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:i}],methods:[],template:null},slot:46});const Ne=new Uint8Array([]),Qe=new Uint8Array([52,30,16,0]),ge=new Uint8Array([0,0,0,0]),We=new Uint8Array([56,30,16,0]),Xe=new Uint8Array([1,0,0,0]),Ye=new Uint8Array([52,30,16,0]);Object.assign(N,{...t,type:2,name:"struct{comptime type: type = i32, comptime minValue: comptime_int = 0, comptime maxValue: comptime_int = 1, comptime defaultValue: comptime_int = 0}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:7,isRequired:!1,name:"type",structure:i},{...e,type:8,isRequired:!1,slot:0,name:"minValue",structure:c},{...e,type:8,isRequired:!1,slot:1,name:"maxValue",structure:c},{...e,type:8,isRequired:!1,slot:2,name:"defaultValue",structure:c}],methods:[],template:{memory:{array:Ne},slots:{0:{structure:c,memory:{array:Qe},slots:{0:{structure:i,memory:{array:ge},address:1056308}}},1:{structure:c,memory:{array:We},slots:{0:{structure:i,memory:{array:Xe},address:1056312}}},2:{structure:c,memory:{array:Ye},slots:{0:{structure:i,memory:{array:ge},address:1056308}}}}}},slot:38});Object.assign(D,{...t,type:11,name:"*const struct{comptime type: type = i32, comptime minValue: comptime_int = 0, comptime maxValue: comptime_int = 1, comptime defaultValue: comptime_int = 0}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:N}],methods:[],template:null},slot:37});const Ze=new Uint8Array([]),et=new Uint8Array([170,170,170,170]),h=new Uint8Array([]),tt=new Uint8Array([170,170,170,170]);Object.assign(Q,{...t,type:2,name:"struct{comptime threshhold: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 255, comptime defaultValue: comptime_float = 128} = .{.type = f32, .minValue = 0, .maxValue = 255, .defaultValue = 128}, comptime invert: struct{comptime type: type = i32, comptime minValue: comptime_int = 0, comptime maxValue: comptime_int = 1, comptime defaultValue: comptime_int = 0} = .{.type = i32, .minValue = 0, .maxValue = 1, .defaultValue = 0}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"threshhold",structure:F},{...e,type:8,isRequired:!1,slot:1,name:"invert",structure:D}],methods:[],template:{memory:{array:Ze},slots:{0:{structure:F,memory:{array:et},slots:{0:{structure:J,memory:{array:h},address:-1431655766}}},1:{structure:D,memory:{array:tt},slots:{0:{structure:N,memory:{array:h},address:-1431655766}}}}}},slot:12});Object.assign(T,{...t,type:11,name:"*struct{comptime threshhold: struct{comptime type: type = f32, comptime minValue: comptime_float = 0, comptime maxValue: comptime_float = 255, comptime defaultValue: comptime_float = 128} = .{.type = f32, .minValue = 0, .maxValue = 255, .defaultValue = 128}, comptime invert: struct{comptime type: type = i32, comptime minValue: comptime_int = 0, comptime maxValue: comptime_int = 1, comptime defaultValue: comptime_int = 0} = .{.type = i32, .minValue = 0, .maxValue = 1, .defaultValue = 0}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:Q}],methods:[],template:null},slot:11});const st=new Uint8Array([]),rt=new Uint8Array([48,30,16,0]),at=new Uint8Array([4,0,0,0]);Object.assign(P,{...t,type:2,name:"struct{comptime channels: comptime_int = 4}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"channels",structure:c}],methods:[],template:{memory:{array:st},slots:{0:{structure:c,memory:{array:rt},slots:{0:{structure:i,memory:{array:at},address:1056304}}}}}},slot:40});Object.assign(R,{...t,type:11,name:"*const struct{comptime channels: comptime_int = 4}",length:1,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:P}],methods:[],template:null},slot:39});const it=new Uint8Array([]),nt=new Uint8Array([170,170,170,170]);Object.assign(W,{...t,type:2,name:"struct{comptime src: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"src",structure:R}],methods:[],template:{memory:{array:it},slots:{0:{structure:R,memory:{array:nt},slots:{0:{structure:P,memory:{array:h},address:-1431655766}}}}}},slot:14});Object.assign(M,{...t,type:11,name:"*struct{comptime src: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:W}],methods:[],template:null},slot:13});const mt=new Uint8Array([]),ot=new Uint8Array([170,170,170,170]);Object.assign(X,{...t,type:2,name:"struct{comptime dst: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,byteSize:0,align:0,instance:{members:[{...e,type:8,isRequired:!1,slot:0,name:"dst",structure:R}],methods:[],template:{memory:{array:mt},slots:{0:{structure:R,memory:{array:ot},slots:{0:{structure:P,memory:{array:h},address:-1431655766}}}}}},slot:16});Object.assign($,{...t,type:11,name:"*struct{comptime dst: struct{comptime channels: comptime_int = 4} = .{.channels = 4}}",length:1,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,slot:0,structure:X}],methods:[],template:null},slot:15});const ut=new Uint8Array([]),lt=new Uint8Array([]),ct=new Uint8Array([220,249,15,0]),yt=new Uint8Array([119,44,16,0]),pt=new Uint8Array([99,111,109,46,109,105,109,115,119,114,105,103,104,116,0]),bt=new Uint8Array([52,250,15,0]),ft=new Uint8Array([104,44,16,0]),ht=new Uint8Array([77,105,109,115,87,114,105,103,104,116,46,99,111,109,0]),dt=new Uint8Array([140,250,15,0]),gt=new Uint8Array([1,0,0,0]),St=new Uint8Array([228,250,15,0]),zt=new Uint8Array([18,44,16,0]),Ot=new Uint8Array([101,120,116,114,101,109,101,32,99,111,110,116,114,97,115,116,32,102,105,108,116,101,114,32,116,104,97,116,32,99,111,110,118,101,114,116,115,32,116,111,32,101,105,116,104,101,114,32,49,32,111,114,32,48,32,98,97,115,101,100,32,111,110,32,98,114,105,103,104,116,110,101,115,115,32,111,102,32,115,111,117,114,99,101,46,0]),Rt=new Uint8Array([170,170,170,170]),qt=new Uint8Array([170,170,170,170]),wt=new Uint8Array([170,170,170,170]);Object.assign(ne,{...t,type:2,name:"high-contrast.kernel",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:ut}}},static:{members:[{...e,type:6,isRequired:!1,slot:0,name:"namespace",structure:S},{...e,type:6,isRequired:!1,slot:1,name:"vendor",structure:S},{...e,type:6,isRequired:!1,slot:2,name:"version",structure:b},{...e,type:6,isRequired:!1,slot:3,name:"description",structure:K},{...e,type:6,isRequired:!1,slot:4,name:"parameters",structure:T},{...e,type:6,isRequired:!1,slot:5,name:"inputImages",structure:M},{...e,type:6,isRequired:!1,slot:6,name:"outputImages",structure:$}],methods:[],template:{memory:{array:lt},slots:{0:{structure:S,memory:{array:ct},slots:{0:{structure:U,memory:{array:yt},slots:{0:{structure:A,memory:{array:pt},address:1059959}}}}},1:{structure:S,memory:{array:bt},slots:{0:{structure:U,memory:{array:ft},slots:{0:{structure:A,memory:{array:ht},address:1059944}}}}},2:{structure:b,memory:{array:dt},slots:{0:{structure:i,memory:{array:gt}}}},3:{structure:K,memory:{array:St},slots:{0:{structure:H,memory:{array:zt},slots:{0:{structure:G,memory:{array:Ot},address:1059858}}}}},4:{structure:T,memory:{array:Rt},slots:{0:{structure:Q,memory:{array:h},address:-1431655766}}},5:{structure:M,memory:{array:qt},slots:{0:{structure:W,memory:{array:h},address:-1431655766}}},6:{structure:$,memory:{array:wt},slots:{0:{structure:X,memory:{array:h},address:-1431655766}}}}}},slot:1});Object.assign(q,{...t,type:13,name:"@Vector(4, u8)",length:4,instance:{members:[{...e,type:3,isRequired:!1,bitSize:8,byteSize:1,structure:z}],methods:[],template:null},slot:21});Object.assign(Y,{...t,type:12,name:"[_]const @Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:20});Object.assign(Z,{...t,type:11,name:"[]const @Vector(4, u8)",length:1,byteSize:8,isConst:!0,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:Y}],methods:[],template:null},slot:19});Object.assign(u,{...t,name:"u32",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:u}],methods:[],template:null},slot:22});const At=new Uint8Array([0,0,0,0,1,0,0,0]);Object.assign(ee,{...t,type:9,name:"high-contrast.ColorSpace",length:1,byteSize:1,align:0,instance:{members:[{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"srgb",structure:i},{...e,type:2,isRequired:!1,bitSize:32,byteSize:4,name:"display-p3",structure:i}],methods:[],template:{memory:{array:At}}},slot:23});Object.assign(j,{...t,name:"bool",length:1,byteSize:1,align:0,instance:{members:[{...e,type:1,isRequired:!1,bitOffset:0,bitSize:1,byteSize:1,structure:j}],methods:[],template:null},slot:24});Object.assign(V,{...t,name:"usize",length:1,instance:{members:[{...e,type:3,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,structure:V}],methods:[],template:null},slot:25});Object.assign(te,{...t,type:13,name:"@Vector(4, f32)",length:4,byteSize:16,align:4,instance:{members:[{...e,type:4,isRequired:!1,bitSize:32,byteSize:4,structure:O}],methods:[],template:null},slot:41});const Ut=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),jt=new Uint8Array([]),Vt=new Uint8Array([104,253,15,0]),Pt=new Uint8Array([4,0,0,0]);Object.assign(B,{...t,type:2,name:"high-contrast.Image(u8,4,false)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:Z},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ee},{...e,type:1,isRequired:!1,bitOffset:168,bitSize:1,byteSize:1,slot:4,name:"premultiplied",structure:j},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:5,name:"offset",structure:V}],methods:[],template:{memory:{array:Ut}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:q},{...e,type:7,isRequired:!1,name:"FPixel",structure:te},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:b}],methods:[],template:{memory:{array:jt},slots:{0:{structure:b,memory:{array:Vt},slots:{0:{structure:i,memory:{array:Pt}}}}}}},slot:18});const _t=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),It=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),kt=new Uint8Array([0,0,0,0,0,0,0,0]),be=new Uint8Array([]);Object.assign(_,{...t,type:2,name:"high-contrast.KernelInput(u8,high-contrast.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"src",structure:B}],methods:[],template:{memory:{array:_t},slots:{0:{structure:B,memory:{array:It},slots:{0:{structure:Z,memory:{array:kt},slots:{0:{structure:Y,memory:{array:be}}}}}}}}},slot:17});Object.assign(se,{...t,type:12,name:"[_]@Vector(4, u8)",length:0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:32,byteSize:4,structure:q}],methods:[],template:null},slot:20});Object.assign(re,{...t,type:11,name:"[]@Vector(4, u8)",length:1,byteSize:8,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitSize:64,byteSize:8,slot:0,structure:se}],methods:[],template:null},slot:28});const xt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),vt=new Uint8Array([]),Ct=new Uint8Array([104,253,15,0]),Et=new Uint8Array([4,0,0,0]);Object.assign(L,{...t,type:2,name:"high-contrast.Image(u8,4,true)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,bitOffset:0,bitSize:64,byteSize:8,slot:0,name:"data",structure:re},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:1,name:"width",structure:u},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:2,name:"height",structure:u},{...e,type:5,isRequired:!1,bitOffset:160,bitSize:1,byteSize:1,slot:3,name:"colorSpace",structure:ee},{...e,type:1,isRequired:!1,bitOffset:168,bitSize:1,byteSize:1,slot:4,name:"premultiplied",structure:j},{...e,type:3,isRequired:!1,bitOffset:128,bitSize:32,byteSize:4,slot:5,name:"offset",structure:V}],methods:[],template:{memory:{array:xt}}},static:{members:[{...e,type:7,isRequired:!1,name:"Pixel",structure:q},{...e,type:7,isRequired:!1,name:"FPixel",structure:te},{...e,type:6,isRequired:!1,slot:0,name:"channels",structure:b}],methods:[],template:{memory:{array:vt},slots:{0:{structure:b,memory:{array:Ct},slots:{0:{structure:i,memory:{array:Et}}}}}}},slot:27});const Kt=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Ft=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),Dt=new Uint8Array([0,0,0,0,0,0,0,0]);Object.assign(I,{...t,type:2,name:"high-contrast.KernelOutput(u8,high-contrast.kernel)",length:1,byteSize:24,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"dst",structure:L}],methods:[],template:{memory:{array:Kt},slots:{0:{structure:L,memory:{array:Ft},slots:{0:{structure:re,memory:{array:Dt},slots:{0:{structure:se,memory:{array:be}}}}}}}}},slot:26});const Tt=new Uint8Array([0,0,0,67,0,0,0,0]);Object.assign(k,{...t,type:2,name:"high-contrast.KernelParameters(high-contrast.kernel)",length:1,byteSize:8,instance:{members:[{...e,type:4,isRequired:!1,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"threshhold",structure:O},{...e,type:2,isRequired:!1,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"invert",structure:i}],methods:[],template:{memory:{array:Tt}}},slot:29});Object.assign(me,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(high-contrast.createOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:42});Object.assign(oe,{...t,type:7,name:"@typeInfo(@typeInfo(@TypeOf(high-contrast.createOutput)).Fn.return_type.?).ErrorUnion.error_set!high-contrast.KernelOutput(u8,high-contrast.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:I},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:me}],methods:[],template:null},slot:33});Object.assign(ue,{...t,type:3,name:"createOutput",length:1,byteSize:68,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"0",structure:u},{...e,type:3,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"1",structure:u},{...e,type:6,bitOffset:64,bitSize:192,byteSize:24,slot:2,name:"2",structure:_},{...e,type:6,bitOffset:256,bitSize:64,byteSize:8,slot:3,name:"3",structure:k},{...e,type:6,bitOffset:320,bitSize:224,byteSize:28,slot:4,name:"retval",structure:oe}],methods:[],template:null},slot:31});Object.assign(le,{...t,type:8,name:"@typeInfo(@typeInfo(@TypeOf(high-contrast.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set",length:1,byteSize:2,align:1,instance:{members:[{...e,type:6,isRequired:!1,slot:22,name:"OutOfMemory"}],methods:[],template:null},slot:43});Object.assign(ce,{...t,type:7,name:"@typeInfo(@typeInfo(@TypeOf(high-contrast.createPartialOutput)).Fn.return_type.?).ErrorUnion.error_set!high-contrast.KernelOutput(u8,high-contrast.kernel)",length:1,byteSize:28,hasPointer:!0,instance:{members:[{...e,type:6,isRequired:!1,bitOffset:0,bitSize:192,byteSize:24,slot:0,name:"value",structure:I},{...e,type:3,isRequired:!1,bitOffset:192,bitSize:16,byteSize:2,name:"error",structure:le}],methods:[],template:null},slot:34});Object.assign(ye,{...t,type:3,name:"createPartialOutput",length:1,byteSize:76,hasPointer:!0,instance:{members:[{...e,type:3,bitOffset:0,bitSize:32,byteSize:4,slot:0,name:"0",structure:u},{...e,type:3,bitOffset:32,bitSize:32,byteSize:4,slot:1,name:"1",structure:u},{...e,type:3,bitOffset:64,bitSize:32,byteSize:4,slot:2,name:"2",structure:u},{...e,type:3,bitOffset:96,bitSize:32,byteSize:4,slot:3,name:"3",structure:u},{...e,type:6,bitOffset:128,bitSize:192,byteSize:24,slot:4,name:"4",structure:_},{...e,type:6,bitOffset:320,bitSize:64,byteSize:8,slot:5,name:"5",structure:k},{...e,type:6,bitOffset:384,bitSize:224,byteSize:28,slot:6,name:"retval",structure:ce}],methods:[],template:null},slot:32});const Mt={argStruct:ue,thunk:6,name:"createOutput"},$t={argStruct:ye,thunk:2,name:"createPartialOutput"};Object.assign(pe,{...t,type:2,name:"high-contrast",length:1,byteSize:0,align:0,instance:{members:[],methods:[],template:{memory:{array:be}}},static:{members:[{...e,type:7,isRequired:!1,name:"kernel",structure:ne},{...e,type:7,isRequired:!1,name:"Input",structure:_},{...e,type:7,isRequired:!1,name:"Output",structure:I},{...e,type:7,isRequired:!1,name:"Parameters",structure:k}],methods:[Mt,$t],template:null},slot:0});const Bt=[z,A,U,S,i,b,G,H,K,O,f,p,J,F,c,N,D,Q,T,P,R,W,M,X,$,ne,q,Y,Z,u,ee,j,V,te,B,_,se,re,L,I,k,me,oe,ue,le,ce,ye,pe],Lt=De(Bt),Gt=pe.constructor,Ht=(async()=>{const n=new URL("high-contrast-70af3014.wasm",import.meta.url).href;return fetch(n)})();Te(Ht,{...Lt,writeBack:!0});const{createOutput:es,createPartialOutput:Jt,kernel:ie,Input:Nt,Output:ts,Parameters:ss}=Gt;function Qt(n,o,r,s,a={},d={}){if(Array.isArray(a)){const y=a;a={};for(const[l,g]of Object.keys(ie.inputImages).entries())a[g]=y[l]}const x=new Nt(void 0),v=Object.keys(ie.inputImages),m=[];let w;for(const y of v){let l=a[y];if(l||(v.length===1&&["data","width","height"].every(g=>!!a[g])?l=a:m.push(y)),x[y]=l,w){if(l.colorSpace!==w)throw new Error(`Input images must all use the same color space: ${w}`)}else w=l.colorSpace}if(m.length>0)throw new Error(`Missing input image${m.length>1?"s":""}: ${m.join(", ")}`);const ae=Jt(n,o,r,s,x,d),fe=y=>{const l=Object.keys(y),g={};for(const he of l){const{data:{typedArray:C},width:de,height:ze}=y[he];let E;if(typeof ImageData=="function"){const Oe=new Uint8ClampedArray(C.buffer,C.byteOffset,C.byteLength);E=new ImageData(Oe,de,s,{colorSpace:w})}else E={data:C,width:de,height:ze};if(l.length===1)return E;g[he]=E}return g};return ae[Symbol.toStringTag]==="Promise"?ae.then(fe):fe(ae)}function Wt(){const n={};for(let[o,r]of Object.entries(ie)){if(o==="parameters"){const s={};for(const[a,d]of Object.entries(r)){const x=s[a]={};for(let[v,m]of Object.entries(d))typeof m=="object"?"string"in m?m=m.string:m=Se(m):typeof m=="function"&&(m=Xt(m.name)),x[v]=m}r=s}else typeof r=="object"&&("string"in r?r=r.string:r=r.valueOf());n[o]=r}return n}function Se(n){const o=[];for(let[r,s]of Object.entries(n))typeof s=="object"&&(s=Se(s)),o[r]=s;return o}function Xt(n){return{bool:"bool","@Vector(2, bool)":"bool2","@Vector(3, bool)":"bool3","@Vector(4, bool)":"bool4",i32:"int","@Vector(2, i32)":"int2","@Vector(3, i32)":"int3","@Vector(4, i32)":"int4",f32:"float","@Vector(2, f32)":"float2","@Vector(3, f32)":"float3","@Vector(4, f32)":"float4","[2]@Vector(2, f32)":"float2x2","[3]@Vector(3, f32)":"float3x3","[4]@Vector(4, f32)":"float4x4"}[n]}onmessage=n=>{const[o,r,...s]=n.data;Yt(o,s).then(([a,d])=>{postMessage([o,r,a],{transfer:d})}).catch(a=>{postMessage(["error",r,a])})};async function Yt(n,o){switch(n){case"getKernelInfo":return[Wt(...o)];case"createPartialImageData":const s=await Qt(...o),a=[];if("data"in s&&"width"in s&&"height"in s)a.push(s.data.buffer);else for(const d of Object.entries(s))a.push(s.data.buffer);return[s,a];default:throw new Error(`Unknown function: ${n}`)}}
